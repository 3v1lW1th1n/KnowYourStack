{"Data":{"Blog":{"FeedItems":[{"Title":"An Introduction to DataFrame","PublishedOn":"2019-12-16T16:00:04+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Last month, we announced .NET support for Jupyter notebooks, and showed how to use them to work with .NET for Apache Spark and ML.NET. Today, we&#8217;re announcing the preview of a DataFrame type for...","Href":"https://devblogs.microsoft.com/dotnet/an-introduction-to-dataframe/","RawContent":null},{"Title":"ConfigureAwait FAQ","PublishedOn":"2019-12-12T04:31:21+00:00","CommentsCount":12,"FacebookCount":0,"Summary":".NET added async/await to the languages and libraries over seven years ago. In that time, it&#8217;s caught on like wildfire, not only across the .NET ecosystem, but also being replicated in a myriad...","Href":"https://devblogs.microsoft.com/dotnet/configureawait-faq/","RawContent":null},{"Title":"An Introduction to System.Threading.Channels","PublishedOn":"2019-12-12T03:52:18+00:00","CommentsCount":18,"FacebookCount":0,"Summary":"&#8220;Producer/consumer&#8221; problems are everywhere, in all facets of our lives. A line cook at a fast food restaurant, slicing tomatoes that are handed off to another cook to assemble a burger,...","Href":"https://devblogs.microsoft.com/dotnet/an-introduction-to-system-threading-channels/","RawContent":null},{"Title":".NET Framework December 2019 Security and Quality Rollup","PublishedOn":"2019-12-10T21:39:52+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the December 2019 Security and Quality Rollup Updates for .NET Framework.\nSecurity\nNo new security fixes. See September 2019 Security and Quality Rollup for the latest security...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/","RawContent":null},{"Title":"We made Windows Server Core container images >40% smaller","PublishedOn":"2019-12-09T21:50:23+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Over the past year, we&#8217;ve been working with the Windows Server team to make Windows Server Core container images a lot smaller. They are now 40% smaller! The Windows Server team has already...","Href":"https://devblogs.microsoft.com/dotnet/we-made-windows-server-core-container-images-40-smaller/","RawContent":null},{"Title":"GC Perf Infrastructure – Part 1","PublishedOn":"2019-12-09T09:33:32+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We open sourced our new GC Perf Infrastructure! It’s now part of the dotnet performance repo. I’ve been meaning to write about it ‘cause some curious minds had been asking when they could use it after...","Href":"https://devblogs.microsoft.com/dotnet/gc-perf-infrastructure-part-1/","RawContent":null},{"Title":".NET Core 2.2 will reach End of Life on December 23, 2019","PublishedOn":"2019-12-05T19:55:57+00:00","CommentsCount":6,"FacebookCount":0,"Summary":".NET Core 2.2 was released on December 4, 2018. As a non-LTS (&#8220;Current&#8221;) release, it is supported for three months after the next release. .NET Core 3.0 was released on September 23, 2019....","Href":"https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/","RawContent":null},{"Title":"Updates to .NET Core Windows Forms designer in Visual Studio 16.5 Preview 1","PublishedOn":"2019-12-05T18:56:40+00:00","CommentsCount":50,"FacebookCount":0,"Summary":"We are happy to announce the new preview version of the .NET Core Windows Forms designer, which is available with the Visual Studio 16.5 Preview 1.\nThe big news is that the designer is now part of...","Href":"https://devblogs.microsoft.com/dotnet/updates-to-net-core-windows-forms-designer-in-visual-studio-16-5-preview-1/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.1 and Entity Framework 6.4","PublishedOn":"2019-12-03T20:32:00+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Announcing Entity Framework Core 3.1 and Entity Framework 6.4\nWe are excited to announce the general availability of EF Core 3.1 and EF 6.4 on nuget.org.\nThe final versions of .NET Core 3.1 and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-1-and-entity-framework-6-4/","RawContent":null},{"Title":"Announcing .NET Core 3.1","PublishedOn":"2019-12-03T17:32:24+00:00","CommentsCount":73,"FacebookCount":0,"Summary":"Announcing .NET Core 3.1\nWe’re excited to announce the release of .NET Core 3.1. It&#8217;s really just a small set of fixes and refinements over .NET Core 3.0, which we released just over two months...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"11190129717","Type":"PullRequestEvent","CreatedAt":"2020-01-02T11:42:33","Actor":"manne","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/157","RelatedDescription":"Opened pull request \"Link to new github repo\" (#157) at dotnet/foundation","RelatedBody":""},{"Id":"11108512890","Type":"PullRequestEvent","CreatedAt":"2019-12-17T15:52:33","Actor":"khalidabuhakmeh","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/156","RelatedDescription":"Opened pull request \"Update Teams Link\" (#156) at dotnet/foundation","RelatedBody":"Was `https://dotnetfoundation.org/team` but now is `https://dotnetfoundation.org/about#team`"},{"Id":"10879854793","Type":"IssuesEvent","CreatedAt":"2019-11-17T05:53:48","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/155","RelatedDescription":"Opened issue \"Typos in CLA bot profile\" (#155) at dotnet/foundation","RelatedBody":"https://github.com/dnfclas\r\n\r\n## Expected\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003693-983ed400-0941-11ea-91d9-18c29e752b81.png)\r\n\r\n## Actual\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003652-ec958400-0940-11ea-8239-f9b19a7dc957.png)\r\n\r\nAlways capitalized, never .Net or dot NET. \r\n\r\n[.NET Glossary](https://github.com/dotnet/docs/blob/master/docs/standard/glossary.md#net)\r\n\r\n[Microsoft Style Guide](https://github.com/MicrosoftDocs/microsoft-style-guide/blob/master/styleguide/a-z-word-list-term-collections/n/net.md)"},{"Id":"10878192098","Type":"PullRequestEvent","CreatedAt":"2019-11-16T15:59:12","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/154","RelatedDescription":"Opened pull request \"Fix broken links\" (#154) at dotnet/foundation","RelatedBody":""},{"Id":"10864162405","Type":"PullRequestEvent","CreatedAt":"2019-11-14T16:22:28","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/153","RelatedDescription":"Opened pull request \"Fix broken links\" (#153) at dotnet/foundation","RelatedBody":""},{"Id":"10863953091","Type":"PullRequestEvent","CreatedAt":"2019-11-14T16:00:24","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/152","RelatedDescription":"Opened pull request \"Fix broken links\" (#152) at dotnet/foundation","RelatedBody":""},{"Id":"10823146740","Type":"PullRequestEvent","CreatedAt":"2019-11-08T23:32:03","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/151","RelatedDescription":"Merged pull request \"Update RxUI license to reflect repo\" (#151) at dotnet/foundation","RelatedBody":"Fixes https://github.com/dotnet-foundation/dotnetfoundation-website/issues/68"},{"Id":"10822052136","Type":"PullRequestEvent","CreatedAt":"2019-11-08T20:13:07","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/151","RelatedDescription":"Opened pull request \"Update RxUI license to reflect repo\" (#151) at dotnet/foundation","RelatedBody":""},{"Id":"10806560653","Type":"PullRequestEvent","CreatedAt":"2019-11-07T05:43:05","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Merged pull request \"(GH-111) Update Source Link location\" (#147) at dotnet/foundation","RelatedBody":""},{"Id":"10806557022","Type":"PullRequestEvent","CreatedAt":"2019-11-07T05:42:14","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Merged pull request \"Add new Cake Maintainer\" (#150) at dotnet/foundation","RelatedBody":""},{"Id":"10806555226","Type":"PullRequestEvent","CreatedAt":"2019-11-07T05:41:48","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Merged pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""},{"Id":"10537155256","Type":"PullRequestEvent","CreatedAt":"2019-10-01T20:30:21","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Opened pull request \"Add new Cake Maintainer\" (#150) at dotnet/foundation","RelatedBody":""},{"Id":"10530380699","Type":"PullRequestEvent","CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Opened pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11137901850","Type":"IssuesEvent","CreatedAt":"2019-12-20T20:42:34","Actor":"vivmishra","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/146","RelatedDescription":"Opened issue \"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1\" (#146) at dotnet/announcements","RelatedBody":"This week we released localized [IntelliSense](https://docs.microsoft.com/en-us/visualstudio/ide/using-intellisense?view=vs-2019) files for .NET Core 3.0 and 3.1, in following 10 Visual Studio supported languages: \r\n- Brazilian Portuguese\r\n- Chinese (simplified)\r\n- Chinese (traditional)\r\n- French\r\n- German\r\n- Italian\r\n- Japanese\r\n- Korean\t\r\n- Russian\r\n- Spanish\r\n\r\nThe files (in zip archives) are available for download from [**Download localized .NET Core IntelliSense files**](https://dotnet.microsoft.com/download/dotnet-core/intellisense).\r\n\r\n * [Checksums for 3.0 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.0.0-intellisense-sha.txt)\r\n * [Checksums for 3.1 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.1.0-intellisense-sha.txt)\r\n\r\nYou can see [the .NET Core Guide](https://aka.ms/dotnet-core-intellisense) for instructions on how to use these files with Visual Studio.\r\n\r\nBy default, when you're developing .NET Core projects, the SDK only includes the English version of the IntelliSense files. But now you can enhance your localized Visual Studio development experience by adding the localized IntelliSense files from the download site into your local development environment.\r\n\r\nLastly, with this release we have made the localized IntelliSense available as zip archives that does require you to manually extract and copy the files to respective SDK install folders. But we plan to make this experience better in future releases.\r\n\r\n## Discussion\r\nTo discuss this issue, please comment on the corresponding issue at [dotnet/core #4032](https://github.com/dotnet/core/issues/4032).\r\n"},{"Id":"11059014848","Type":"IssuesEvent","CreatedAt":"2019-12-10T22:29:30","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/145","RelatedDescription":"Opened issue \"December 2019 .NET Updates\" (#145) at dotnet/announcements","RelatedBody":"The following .NET updates were released on November 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework December 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/ )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"11050403011","Type":"IssuesEvent","CreatedAt":"2019-12-10T03:08:33","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/144","RelatedDescription":"Opened issue \"Removal of read-collaborator access\" (#144) at dotnet/announcements","RelatedBody":"***TL;DR**: We’ll remove collaborators with read-only access from our public repos on December 16th. This means some folks will lose their Collaborator badge and the ability to interact with the CI system.*\r\n\r\nOver the years, we’ve added a bunch of folks as collaborators with read permissions to our public repos. The rationale was that we wanted to be able to assign issues to community members because GitHub only allowed assigning issues to users with an explicit permission grant for the repository. However, they changed this in [June 2019](https://github.blog/2019-06-25-assign-issues-to-issue-commenters/). Now, we can assign issues to all users with explicit permissions as well as to users that have commented on the specific issue.\r\n\r\nAlso, we recently started to audit and tighten the permissions for our organizations. As a result, it became clear that large number of repo-specific permission grants are hard to review and audit. Internally, our goal is to grant all permissions via teams instead.\r\n\r\nHence, we plan to remove all collaborators from public repos that only have read permissions (folks with triage permissions will remain). The full list of affected repos is listed below.\r\n\r\nThis shouldn’t impact your ability to work with us, but losing explicit read-only has the following implications:\r\n\r\n-   **You’ll lose the contributor badge**. We understand that this is visually appealing and for some people it might have been a badge of honor. But given that GitHub also shows a Contributor bade for folks whose PRs got merged, we don’t think it this will be a major take back.    \r\n    ![image](https://user-images.githubusercontent.com/5169960/70491508-43acf580-1ab6-11ea-94df-74ea2dde98b4.png)\r\n\r\n\r\n-   **You lose the ability to interact with the CI system**. As a collaborator, you can use comments to [send commands to the CI system](https://github.com/dotnet/runtime/blob/master/docs/project/pullrequest-builds.md). While this can be useful at times, we generally don’t expect (or desire) contributors to do that. Of course, anyone can still access the CI logs.\r\n\r\n| Public Repo                | \\#collaborators with read |\r\n|----------------------------|---------------------------|\r\n| arcade                     | 1                         |\r\n| BenchmarkDotNet            | 11                        |\r\n| cli                        | 2                         |\r\n| command-line-api           | 14                        |\r\n| coreclr                    | 18                        |\r\n| corefx                     | 180                       |\r\n| corefxlab                  | 4                         |\r\n| corert                     | 7                         |\r\n| core-sdk                   | 1                         |\r\n| docs                       | 3                         |\r\n| interactive-window         | 1                         |\r\n| machinelearning            | 1                         |\r\n| machinelearning-samples    | 1                         |\r\n| msbuild-language-service   | 1                         |\r\n| runtime                    | 128                       |\r\n| spark                      | 5                         |\r\n| standard                   | 1                         |\r\n| windowsdesktop             | 1                         |\r\n| winforms-datavisualization | 1                         |\r\n| Grand Total                | 381                       |\r\n\r\n### Discussion\r\n\r\nTo discuss this, please comment on the corresponding issue at https://github.com/dotnet/runtime/issues/718."},{"Id":"11003471296","Type":"IssuesEvent","CreatedAt":"2019-12-03T20:36:30","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/143","RelatedDescription":"Opened issue \".NET Core `latest` Docker tags updated to 3.1\" (#143) at dotnet/announcements","RelatedBody":"# .NET Core `latest` Docker tags updated to 3.1\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/).\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1511)\r\n\r\n## Details\r\n\r\n* [dotnet-docker#1509](https://github.com/dotnet/dotnet-docker/pull/1509)\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.1. This version of .NET Core is also a [long-term supported (LTS) release](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n\r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.1`."},{"Id":"11002231262","Type":"IssuesEvent","CreatedAt":"2019-12-03T18:00:28","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/142","RelatedDescription":"Opened issue \".NET Core 3.1.0\" (#142) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 is available and https://github.com/dotnet/core/issues/3950 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.0.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 , either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues"},{"Id":"10873564628","Type":"IssuesEvent","CreatedAt":"2019-11-15T16:51:28","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Opened issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141) at dotnet/announcements","RelatedBody":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`."},{"Id":"10873546016","Type":"IssuesEvent","CreatedAt":"2019-11-15T16:49:05","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Opened issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140) at dotnet/announcements","RelatedBody":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`."},{"Id":"10864634140","Type":"IssuesEvent","CreatedAt":"2019-11-14T17:15:09","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 3\" (#139) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n"},{"Id":"10862597044","Type":"IssuesEvent","CreatedAt":"2019-11-14T13:37:29","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Opened issue \"November 2019 .NET Updates\" (#138) at dotnet/announcements","RelatedBody":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"11194719168","Type":"IssuesEvent","CreatedAt":"2020-01-03T02:33:43","Actor":"erozenfeld","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/1226","RelatedDescription":"Closed issue \"RyuJIT: suboptimal code after inlining a method accessing a field via ref\" (#1226) at dotnet/coreclr","RelatedBody":"There is a small difference between code generated for  direct reading of a volatile variable and doing it via Volatile.Read. \n\n``` C#\nvolatile int sharedVar;\n\npublic int Test()\n{\n    return sharedVar;\n}\n\npublic int Test2()\n{\n    return Volatile.Read(ref sharedVar);\n}\n```\n\n``` ASM\n       mov      eax, dword ptr [rcx+8]\n       ret  \n\n;vs\n\n       cmp      dword ptr [rcx], ecx\n       lea      rax, bword ptr [rcx+8]\n       mov      eax, dword ptr [rax]\n       ret  \n```\n\r\ncategory:cq\r\ntheme:basic-cq\r\nskill-level:expert\r\ncost:large"},{"Id":"11193043220","Type":"PullRequestEvent","CreatedAt":"2020-01-02T19:55:05","Actor":"sywhang","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27979","RelatedDescription":"Opened pull request \"[3.1 port] Fix EventSource to stop ignoring EventCommand.SendManifest\" (#27979) at dotnet/coreclr","RelatedBody":"This is a port of https://github.com/dotnet/runtime/pull/848 to 3.1 servicing. \r\n\r\n## Customer Impact\r\n\r\nSending ETW command to trigger manifest file to be generated does not work anymore. This blocks some customers who are relying on ETW commands to generate multiple ETL files per session, since the files they generate after the initial file don't have any test. \r\n\r\n## Regression?\r\n\r\nYes, from https://github.com/dotnet/coreclr/pull/11639/. This is some time around .NET Core 2.0 timeframe. \r\n\r\n## Testing\r\n\r\nAdded automated test as part of https://github.com/dotnet/runtime/pull/848. \r\nI also verified the fix with the repro sent by the customer who initially reported this (Azure Stack). \r\n\r\n## Risk\r\n\r\nLow. The code path being changed affects only ETW, and is a relatively simple change. I've tested the scenario with all the ETW tests we have and verified that they pass. "},{"Id":"11188739590","Type":"IssuesEvent","CreatedAt":"2020-01-02T06:47:28","Actor":"Joowoo30","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27978","RelatedDescription":"Opened issue \"How can I use some headers in gc.cpp.\" (#27978) at dotnet/coreclr","RelatedBody":"Hello.\r\nI forked coreclr code and added some test code in it to analyze gc behavior.\r\nbut I can't use #include <dlfcn.h> in it. (Exactly in gc.cpp)\r\nTo solve this problem, I edited CmakeLists files many times (Adding target_link_libraries dl and so on)\r\nbut I fail to build coreclr with my code.\r\n\r\nhow can I use #include <dlfcn.h> in gc.cpp?\r\nI have to use dlopen and dlsym for my test.\r\n\r\nI would be really grateful if someone let me know.\r\nThank you."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"11184658490","Type":"PullRequestEvent","CreatedAt":"2019-12-31T19:26:06","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13167","RelatedDescription":"Opened pull request \"[WIP] Disable useapphost on mac by default 3.0.1xx\" (#13167) at dotnet/cli","RelatedBody":"Need https://github.com/dotnet/sdk/pull/4019 to be in first"},{"Id":"11181871244","Type":"PullRequestEvent","CreatedAt":"2019-12-31T05:49:31","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13166","RelatedDescription":"Opened pull request \"[WIP] test CI\" (#13166) at dotnet/cli","RelatedBody":""},{"Id":"11181338953","Type":"PullRequestEvent","CreatedAt":"2019-12-31T02:15:40","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13165","RelatedDescription":"Merged pull request \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13165) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191230.1\r\n- **Date Produced**: 12/31/2019 12:16 AM\r\n- **Commit**: 71f48b3241b93c00998336f947d146f57de93f4e\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.19630.1\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n"},{"Id":"11181196731","Type":"PullRequestEvent","CreatedAt":"2019-12-31T01:20:15","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13165","RelatedDescription":"Opened pull request \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13165) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191230.1\r\n- **Date Produced**: 12/31/2019 12:16 AM\r\n- **Commit**: 71f48b3241b93c00998336f947d146f57de93f4e\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.19630.1\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n"},{"Id":"11169092522","Type":"PullRequestEvent","CreatedAt":"2019-12-28T02:13:30","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13163","RelatedDescription":"Merged pull request \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13163) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191225.2\r\n- **Date Produced**: 12/26/2019 6:10 AM\r\n- **Commit**: 4a9be5b8dfb0c287883d3fd79c307f2bcfb41119\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.19625.2\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n"},{"Id":"11169035690","Type":"PullRequestEvent","CreatedAt":"2019-12-28T01:43:27","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13086","RelatedDescription":"Merged pull request \"Update aspnet, aspnet, coresetup to servicing-31150, servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)\" (#13086) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"11168902322","Type":"PullRequestEvent","CreatedAt":"2019-12-28T00:35:58","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13164","RelatedDescription":"Merged pull request \"[release/3.1.2xx] Update dependencies from nuget/nuget.client\" (#13164) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.5.0.6355\r\n- **Date Produced**: 12/24/2019 5:03 AM\r\n- **Commit**: cb402b5a3340ab5b2605ecc72de7f70aaac95344\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.5.0-preview.2.6355\r\n\r\n[marker]: <> (End:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n\r\n"},{"Id":"11168810398","Type":"PullRequestEvent","CreatedAt":"2019-12-27T23:56:21","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13164","RelatedDescription":"Opened pull request \"[release/3.1.2xx] Update dependencies from nuget/nuget.client\" (#13164) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.5.0.6355\r\n- **Date Produced**: 12/24/2019 5:03 AM\r\n- **Commit**: cb402b5a3340ab5b2605ecc72de7f70aaac95344\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.5.0-preview.2.6355\r\n\r\n[marker]: <> (End:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"11184319076","Type":"IssuesEvent","CreatedAt":"2019-12-31T17:31:26","Actor":"usaguerrilla","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1672","RelatedDescription":"Closed issue \"SerialDevice.InputStream.ReadAsync continues on wrong thread\" (#1672) at dotnet/standard","RelatedBody":".NET Standard 2.1 (couldn't change that for some reason)\r\nWindows 10, version 1903, Build 18362\r\nx64\r\n\r\n```\r\nint REQUEST_LENGTH = 8;\r\nint RESPONSE_LENGTH = 7;\r\n\r\nbyte[] request = new byte[REQUEST_LENGTH];\r\nbyte[] response = new byte[RESPONSE_LENGTH];\r\n\r\nSerialDevice serialDevice = await SerialDevice.FromIdAsync(serialDeviceId);\r\n\r\nusing (CancellationTokenSource cancellationTokenSource = new CancellationTokenSource(TimeSpan.FromSeconds(1)))\r\n{\r\n   Console.WriteLine(\"A=\" + Thread.CurrentThread.ManagedThreadId);\r\n   Task<IBuffer> readTask = serialDevice.InputStream.ReadAsync(response.AsBuffer(), RESPONSE_LENGTH, InputStreamOptions.None)\r\n                                                    .AsTask(cancellationTokenSource.Token);\r\n   await serialDevice.OutputStream.WriteAsync(request.AsBuffer());\r\n   Console.WriteLine(\"B=\" + Thread.CurrentThread.ManagedThreadId);\r\n   await Task.WhenAll(readTask);\r\n   Console.WriteLine(\"C=\" + Thread.CurrentThread.ManagedThreadId);\r\n}\r\n```\r\n\r\nThis results in the following output:\r\n\r\n```\r\nA=12\r\nB=12\r\nC=8\r\n```\r\n\r\nI didn't ask for thread switch in any of the calls.\r\n\r\nAnother issues is that ReadAsync ignores ReadTimeout / WriteTimeout. Just hangs forever if UART device never replies back."},{"Id":"11184249730","Type":"IssuesEvent","CreatedAt":"2019-12-31T17:09:25","Actor":"usaguerrilla","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1672","RelatedDescription":"Opened issue \"SerialDevice.InputStream.ReadAsync continues on wrong thread\" (#1672) at dotnet/standard","RelatedBody":".NET Standard 2.1 (couldn't change that for some reason)\r\nWindows 10, version 1903, Build 18362\r\nx64\r\n\r\n```\r\nint REQUEST_LENGTH = 8;\r\nint RESPONSE_LENGTH = 7;\r\n\r\nbyte[] request = new byte[REQUEST_LENGTH];\r\nbyte[] response = new byte[RESPONSE_LENGTH];\r\n\r\nusing (CancellationTokenSource cancellationTokenSource = new CancellationTokenSource(TimeSpan.FromSeconds(1)))\r\n{\r\n   Console.WriteLine(\"A=\" + Thread.CurrentThread.ManagedThreadId);\r\n   Task<IBuffer> readTask = serialDevice.InputStream.ReadAsync(response.AsBuffer(), RESPONSE_LENGTH, InputStreamOptions.None)\r\n                                                       .AsTask(cancellationTokenSource.Token);\r\n   await serialDevice.OutputStream.WriteAsync(CreateGetStatusRequest());\r\n   Console.WriteLine(\"B=\" + Thread.CurrentThread.ManagedThreadId);\r\n   await Task.WhenAll(readTask);\r\n   Console.WriteLine(\"C=\" + Thread.CurrentThread.ManagedThreadId);\r\n}\r\n```\r\n\r\nThis results in the following output:\r\n\r\n```\r\n12\r\n12\r\n8\r\n```\r\n\r\nI didn't ask for thread switch in any of the calls."},{"Id":"11168083266","Type":"IssuesEvent","CreatedAt":"2019-12-27T19:58:14","Actor":"mbrautgithub","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1671","RelatedDescription":"Opened issue \"Referring  Microsoft.AspNetCore.App from netstandard2.1\" (#1671) at dotnet/standard","RelatedBody":"Hi Team,\r\n\r\nI am currently upgrading from .netcoreapp2.1 to netcoreapp3.1 and new to .Net technology.\r\n\r\nAlso, I have projects in my solution which are currently on netstandard2.0 and using below package references.\r\n\r\n<ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication.OAuth\" Version=\"2.2.0\" />\r\n</ItemGroup>\r\n\r\nThese references are become absolute since .netcoreapp3.1 and if I would want to continue using these I need to use  \r\n\r\n\r\n\r\n\r\n"},{"Id":"11151949142","Type":"IssuesEvent","CreatedAt":"2019-12-24T06:48:19","Actor":"tanveerbadar","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1670","RelatedDescription":"Opened issue \"Potentially Incorrect Terminology in .net standard FAQ\" (#1670) at dotnet/standard","RelatedBody":"The [FAQ document ](https://github.com/dotnet/standard/blob/master/docs/faq.md#is-appdomain-part-of-net-standard)for .net standard mentions this:\r\n\r\n> Using #if, also called cross-compiling\r\n\r\nShouldn't it say \"conditional compilation\" instead?"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"11190297036","Type":"IssuesEvent","CreatedAt":"2020-01-02T12:16:35","Actor":"fuchen","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42796","RelatedDescription":"Opened issue \"PlatformNotSupportedException when loading System.Data.SqlClient in fsx file\" (#42796) at dotnet/corefx","RelatedBody":"test.fsx:\r\n```\r\n#load \"..\\\\.paket\\\\load\\\\netstandard2.1\\\\System.Data.SqlClient.fsx\" \r\n```\r\nSystem.Data.SqlClient.fsx is generated by paket, and its content is:\r\n```\r\nnamespace PaketLoadScripts\r\n\r\n#load \"D:\\\\work\\\\.paket\\\\load\\\\netstandard2.0\\\\Microsoft.Win32.Registry.fsx\" \r\n#load \"D:\\\\work\\\\.paket\\\\load\\\\netstandard2.0\\\\System.Buffers.fsx\" \r\n#load \"D:\\\\work\\\\.paket\\\\load\\\\netstandard2.0\\\\System.Diagnostics.DiagnosticSource.fsx\" \r\n#load \"D:\\\\work\\\\.paket\\\\load\\\\netstandard2.0\\\\System.Memory.fsx\" \r\n#load \"D:\\\\work\\\\.paket\\\\load\\\\netstandard2.0\\\\System.Security.Principal.Windows.fsx\" \r\n#load \"D:\\\\work\\\\.paket\\\\load\\\\netstandard2.0\\\\System.Text.Encoding.CodePages.fsx\" \r\n#r \"C:\\\\Users\\\\me\\\\.nuget\\\\packages\\\\system.data.sqlclient\\\\4.8.0\\\\lib\\\\netstandard2.0\\\\System.Data.SqlClient.dll\" \r\n```\r\n\r\nrun `dotnet fsi test.fsx`, get below exception message:\r\n```\r\nSystem.PlatformNotSupportedException: System.Data.SqlClient is not supported on this platform.\r\n   at System.Data.SqlClient.SqlConnection..ctor(String connectionString)\r\n   at FSI_0002.runAll()\r\n   at <StartupCode$FSI_0002>.$FSI_0002.main@()\r\n```"},{"Id":"11188279538","Type":"IssuesEvent","CreatedAt":"2020-01-02T03:53:28","Actor":"TsuyoshiUshio","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42795","RelatedDescription":"Opened issue \"Activity.SetIdFormat is ignored if there is Activity.Current instance\" (#42795) at dotnet/corefx","RelatedBody":"I'm not sure if it is expected behavior or not, I'd like to share what I found. \r\nI use `System.Diagnostics.DiagnosticSource` version `4.7.0` . \r\n\r\n```\r\n            Activity parent = new Activity(\"parent\");\r\n            parent.SetIdFormat(ActivityIdFormat.W3C);\r\n            // W3C \r\n            parent.Start();\r\n            Console.WriteLine(\"W3C Parent---\");\r\n            PrintActivity(parent); // Method that print the details of Activity\r\n\r\n            // Correlation \r\n            Activity child = new Activity(\"child\");\r\n            child.SetParentId(parent.ParentId);\r\n            Console.WriteLine(\"W3C Child ---\");\r\n            child.Start();\r\n            PrintActivity(child); // Method that print the details of Activity\r\n\r\n            Activity newParent = new Activity(\"parent\");\r\n            newParent.SetIdFormat(ActivityIdFormat.Hierarchical);\r\n            newParent.Start();\r\n            Console.WriteLine(\"HTTP Parent---\");\r\n            PrintActivity(newParent);  // Method that print the details of Activity\r\n```\r\nAt the last newParent instance, Even if I specify `ActivityIdFormat.Hierarchical` It become `W3C TraceContext` \r\n\r\n![image](https://user-images.githubusercontent.com/1390976/71650952-ae74d980-2cce-11ea-92ad-afd69610f086.png)\r\n\r\nIt might be caused by this line of code of Activity.GenerateHierachicalId() method. Since parent is automatically set from Activity.Current. \r\n\r\n\r\n\r\n\r\n"},{"Id":"11187177345","Type":"IssuesEvent","CreatedAt":"2020-01-01T18:33:05","Actor":"FrantzUml","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42794","RelatedDescription":"Opened issue \"MathF is buggy\" (#42794) at dotnet/corefx","RelatedBody":"The CopySign(float x, float y) in System.MathF has a bug when x or y is NaN.\r\nWith IEEE, NaN may have sign 1 or 0, mantissa anything, but biased exponent is 2^32 -1\r\nSo, in CopySign when you convert in 'int' the float.NaN you get a negative number.\r\n\r\nCopySign(float.NaN, 3.2F) gives with sign = 1 (negative in IEEE) but the sign should be 0\r\nCopySign(float.NaN, -3.2F) gives with sign = 0 (positive in IEEE) but the sign should be 1 (as -3.2F is negative). \r\n\r\nI did not verify in Math class (if you used same algorithm, it's same error)."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"11193704480","Type":"IssuesEvent","CreatedAt":"2020-01-02T21:57:10","Actor":"Sergio0694","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7936","RelatedDescription":"Opened issue \"ArrayPool<T> returning a single T item (!) as a T[] reference [UWP]\" (#7936) at dotnet/corert","RelatedBody":"Hello,\r\nI've just stumbled upon a very weird bug that's happening for me on UWP (Debug x64). I'm using `ArrayPool<T>.Shared` to rent arrays, and for whatever reason I've started getting an `ArrayTypeMismatchException` when trying to copy items from two rented arrays of the same type. Upon further investigation, turns out the reason is that one of the rented arrays is in fact... Just a single `T` item, and not a `T[]` object. Looks like something went really wrong with the type system and I'd be really curious to know what's going on.\r\nI've personally worked around the issue by just going back to non-pooled arrays in this case, but still this issue was so strange that I though it'd be interesting to share 😄\r\n\r\nHere's a screen:\r\n\r\n![image](https://user-images.githubusercontent.com/10199417/71695441-6cbd5f00-2db2-11ea-9ab3-10ad502e1faf.png)\r\n\r\nYou can see that `T[] newItems` array is in fact a single `T` element, and not an array at all.\r\n\r\nHere's another screen, where I've also added `.GetType()` on the second array just to double check:\r\n\r\n![image](https://user-images.githubusercontent.com/10199417/71695493-95ddef80-2db2-11ea-8964-e6d6d094513f.png)\r\n\r\nHere's the source code of that `Pool<T>` class I'm using: https://gist.github.com/Sergio0694/9a08161830fbcebf26e1973ad2a51cea.\r\n\r\nI've created a repro branch in my repo and I have steps that seem to reproduce the crash reliably, so I'd be happy to give access to the repo to anyone from the team, if you guys want to investigate this.\r\n\r\nThank you for your time, and happy new year to the whole team! 🎉"},{"Id":"11191769557","Type":"PullRequestEvent","CreatedAt":"2020-01-02T16:19:17","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7897","RelatedDescription":"Merged pull request \"Wasm enable shared generics and generic virtual methods\" (#7897) at dotnet/corert","RelatedBody":"Mostly taken from the cpp backend, this enables shared generics and generic virtual methods for the Wasm backend.  Have tried to keep the logic as clean as I could, but maybe there's some obvious enhancements/reductions in code that I missed.  \r\n\r\nSize of HelloWasm.bc (LLVM bitcode) before 43,950KB, and after 37,593KB (these aren't exact as the after includes more tests, so actual saving is probably fractionally better) .    HelloWasm before this change didn't have much in the way of generics so this mostly reflects the framework and runtime generics.\r\n\r\nEnables the Simple/Generics tests for wasm which have the almost same coverage as cpp (Wasm includes an additional test) in terms of what is #if'ed out.\r\n\r\nWIP as depends on #7893  and #7891 \r\n\r\nFixes https://github.com/dotnet/corert/issues/7248"},{"Id":"11191769512","Type":"IssuesEvent","CreatedAt":"2020-01-02T16:19:17","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7248","RelatedDescription":"Closed issue \"wasm: support Generic Virtual Method Calls & Shared Generics (was: some linq methods fail to compile)\" (#7248) at dotnet/corert","RelatedBody":"When attempting to build an Uno Platform project, it fails on a method \r\n```\r\n{[System.Linq]System.Linq.Enumerable+Iterator`1<Windows.UI.Xaml.Documents.Inline>.Select<string>(Func``2<Inline,string>)}\r\n```\r\n in the ctor for `WebAssemblyVTableSlotNode` on the assert\r\n```\r\nDebug.Assert(!targetMethod.HasInstantiation);\r\n```\r\nNot done any more investigation yet."},{"Id":"11186847074","Type":"IssuesEvent","CreatedAt":"2020-01-01T15:43:28","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7935","RelatedDescription":"Opened issue \"Wasm: Question on type of return values from shared generic calls\" (#7935) at dotnet/corert","RelatedBody":"As an example, take\r\nhttps://github.com/dotnet/corert/blob/88d75715f4c84c383365a33734d6f0cffe837061/src/System.Private.CoreLib/shared/System/Threading/WaitHandle.cs#L295\r\n\r\nThe second call parameter `safeWaitHandles` is an implicit op to a `Span<SafeWaitHandle?>` from its declaration\r\n```\r\nSafeWaitHandle?[]? safeWaitHandles = RentSafeWaitHandleArray(waitHandles.Length);\r\n```\r\n This implicit method  is a shared generic method so the call in LLVM looks like\r\n\r\n```\r\n%45 = call %\"[S.P.CoreLib]System.Span`1<System.__Canon>\" @\"S_P_CoreLib_System_Span_1<System___Canon>__op_Implicit\"(i8* %43, i8* %CastPtr163)\r\n```\r\nWhere the return is the Canon type, `[S.P.CoreLib]System.Span`1<System.__Canon>`\r\n\r\nThis is not a valid type to pass into `ObtainSafeWaitHandles` as in LLVM that is defined on the concrete type\r\n\r\n```\r\ndefine void @S_P_CoreLib_System_Threading_WaitHandle__ObtainSafeWaitHandles(i8*, %\"[S.P.CoreLib]System.ReadOnlySpan`1<System.Threading.WaitHandle>\", %\"[S.P.CoreLib]System.Span`1<Microsoft.Win32.SafeHandles.SafeWaitHandle>\", %\"[S.P.CoreLib]System.Span`1<native int>\")\r\n```\r\n\r\nWhat would be the right way to solve this?  Should it always convert types to their canonical versions to the extent that `System.Span`1<Microsoft.Win32.SafeHandles.SafeWaitHandle>` is invalid in the LLVM?  "},{"Id":"11185748387","Type":"IssuesEvent","CreatedAt":"2020-01-01T05:39:16","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7340","RelatedDescription":"Closed issue \"clang: warning: argument unused during compilation: '-exported_symbols_list\" (#7340) at dotnet/corert","RelatedBody":"I am testing the operation of shared libraries in linux and in sum everything works wonderfully however when I ran objdump in linux about the compiled .so I realized that we are exporting all the internal symbols of the library and not only those that we mark as export\r\n\r\n`clang: warning: argument unused during compilation: '-exported_symbols_list obj / Debug / netstandard2.0 / linux-x64 / native / NativeLibrary.exports' [-Wunused-command-line-argument]`\r\nThe .SO file is almost twice the size of the DLL.\r\n\r\nWindows dumpbin.exe /EXPORTS:\r\n` Section contains the following exports for NativeLibrary.dll\r\n\r\n    00000000 characteristics\r\n    FFFFFFFF time date stamp\r\n        0.00 version\r\n           1 ordinal base\r\n          19 number of functions\r\n          19 number of names\r\n\r\n    ordinal hint RVA      name\r\n\r\n          1    0 000B1DC0 callback = callback\r\n          2    1 000B0D60 create_fixed_string = create_fixed_string\r\n          3    2 000B0030 finalize_object = finalize_object\r\n          4    3 000B0A80 free_memory = free_memory\r\n          5    4 000B0B90 get_char_string = get_char_string\r\n          6    5 000B2450 get_int_array = get_int_array\r\n          7    6 000B1150 get_native_string = get_native_string\r\n          8    7 000AFEF0 get_number = get_number\r\n          9    8 000B29C0 get_object = get_object\r\n         10    9 000B2BD0 get_object_info = get_object_info\r\n         11    A 000B0850 get_object_type = get_object_type\r\n         12    B 000AFD10 get_ramdom_number = get_ramdom_number\r\n         13    C 000AF9E0 get_random_instance = get_random_instance\r\n         14    D 000AF7E0 get_random_seeded_instance = get_random_seeded_instance\r\n         15    E 000B1390 get_structure = get_structure\r\n         16    F 000B3290 print_numbers = print_numbers\r\n         17   10 000B2080 read_object = read_object\r\n         18   11 000B1720 read_structure = read_structure\r\n         19   12 000B0FE0 write_character_string = write_character_string\r\n\r\n  Summary\r\n\r\n       2B000 .data\r\n      1BC000 .managed\r\n       30000 .pdata\r\n      241000 .rdata\r\n       19000 .reloc\r\n        1000 .rsrc\r\n       AA000 .text`\r\n\r\nLinux nm -D --defined-only:\r\n`00000000001e8c70 T AppendExceptionStackFrame\r\n0000000000868258 B __bss_start\r\n000000000019a680 T callback\r\n000000000018896c T ConstrainedCallSupport_GetStubs\r\n0000000000198ee0 T create_fixed_string\r\n00000000002c5c90 T Dbl2IntOvf\r\n00000000002c5cf0 T Dbl2LngOvf\r\n00000000002c5cc0 T Dbl2UIntOvf\r\n00000000002c5d20 T Dbl2ULngOvf\r\n0000000000280de0 T DebugFuncEvalAbortHelper\r\n0000000000280d90 T DebugFuncEvalHelper\r\n0000000000868258 D _edata\r\n0000000000872090 B _end\r\n00000000001ea3f0 T FailFast\r\n0000000000198560 T finalize_object\r\n00000000003786c4 T _fini\r\n00000000002c5d50 T Flt2IntOvf\r\n00000000002c5d90 T Flt2LngOvf\r\n0000000000198b90 T free_memory\r\n0000000000479b48 R g_compilerEmbeddedSettingsBlob\r\n0000000000198d00 T get_char_string\r\n000000000019abf0 T get_int_array\r\n0000000000199340 T get_native_string\r\n0000000000197ba0 T get_number\r\n000000000019b1f0 T get_object\r\n000000000019b2f0 T get_object_info\r\n00000000001988c0 T get_object_type\r\n0000000000197990 T get_ramdom_number\r\n00000000001978c0 T get_random_instance\r\n0000000000197480 T get_random_seeded_instance\r\n00000000001e9e90 T GetRuntimeException\r\n0000000000199590 T get_structure\r\n00000000001de2c0 T GetSystemArrayEEType\r\n000000000018d940 T GlobalizationNative_ChangeCase\r\n000000000018dc50 T GlobalizationNative_ChangeCaseInvariant\r\n000000000018dfb0 T GlobalizationNative_ChangeCaseTurkish\r\n000000000018ebe0 T GlobalizationNative_CloseSortHandle\r\n000000000018eda0 T GlobalizationNative_CompareString\r\n000000000018f520 T GlobalizationNative_CompareStringOrdinalIgnoreCase\r\n000000000018f320 T GlobalizationNative_EndsWith\r\n000000000018cad0 T GlobalizationNative_EnumCalendarInfo\r\n000000000018c8c0 T GlobalizationNative_GetCalendarInfo\r\n000000000018c6a0 T GlobalizationNative_GetCalendars\r\n000000000018fc10 T GlobalizationNative_GetDefaultLocaleName\r\n0000000000192c60 T GlobalizationNative_GetICUVersion\r\n000000000018d710 T GlobalizationNative_GetJapaneseEraStartDate\r\n000000000018d660 T GlobalizationNative_GetLatestJapaneseEra\r\n00000000001902b0 T GlobalizationNative_GetLocaleInfoGroupingSizes\r\n000000000018fdd0 T GlobalizationNative_GetLocaleInfoInt\r\n0000000000190700 T GlobalizationNative_GetLocaleInfoString\r\n000000000018fa60 T GlobalizationNative_GetLocaleName\r\n000000000018f8c0 T GlobalizationNative_GetLocales\r\n0000000000191130 T GlobalizationNative_GetLocaleTimeFormat\r\n000000000018eb00 T GlobalizationNative_GetSortHandle\r\n000000000018f4a0 T GlobalizationNative_GetSortKey\r\n000000000018ed50 T GlobalizationNative_GetSortVersion\r\n0000000000191210 T GlobalizationNative_GetTimeZoneDisplayName\r\n000000000018ee20 T GlobalizationNative_IndexOf\r\n000000000018efc0 T GlobalizationNative_IndexOfOrdinalIgnoreCase\r\n000000000018ef00 T GlobalizationNative_LastIndexOf\r\n0000000000191310 T GlobalizationNative_LoadICU\r\n000000000018f1e0 T GlobalizationNative_StartsWith\r\n000000000012a368 T _init\r\n00000000002b6cf0 T InitializeFinalizerThread\r\n00000000002c52a0 T InitializeModules\r\n000000000032b0d0 T __managed__Startup\r\n00000000001a23f0 T OnFirstChanceException\r\n0000000000868088 D PointerToReturnFromCallDescrThunk\r\n00000000008680c0 D PointerToReturnFromUniversalTransition\r\n00000000008680c8 D PointerToReturnFromUniversalTransition_DebugStepTailCall\r\n00000000008680a8 D PointerToRhpCallCatchFunclet2\r\n00000000008680b8 D PointerToRhpCallFilterFunclet2\r\n00000000008680b0 D PointerToRhpCallFinallyFunclet2\r\n00000000008680a0 D PointerToRhpRethrow2\r\n0000000000868098 D PointerToRhpThrowEx2\r\n0000000000868090 D PointerToRhpThrowHwEx2\r\n000000000019ba10 T print_numbers\r\n00000000002b7750 T ProcessFinalizers\r\n000000000019a8b0 T read_object\r\n000000000019a340 T read_structure\r\n00000000002b9540 T RhAllocateThunk\r\n00000000002b9270 T RhAllocLocal\r\n00000000002b92a0 T RhAllocLocal2\r\n00000000002b9210 T RhArrayStoreCheckAny\r\n00000000002b8e50 T RhBox\r\n00000000002b9250 T RhBoxAndNullCheck\r\n00000000002b8f10 T RhBoxAny\r\n0000000000185574 T RhCallDescrWorker\r\n00000000002b8670 T RhCollect\r\n0000000000185938 T RhCommonStub\r\n00000000002b9530 T RhCreateThunksHeap\r\n00000000002b9520 T RhDisableConservativeReportingRegion\r\n00000000002b8720 T RhEndNoGCRegion\r\n00000000002b7e50 T RhExceptionHandling_FailedAllocation\r\n00000000002b7e30 T RhExceptionHandling_ThrowClasslibDivideByZeroException\r\n00000000002b7e10 T RhExceptionHandling_ThrowClasslibOverflowException\r\n00000000002b9590 T RhFreeThunk\r\n00000000002b7720 T RhGcStress_Initialize\r\n00000000002b7730 T RhGcStress_Initialize2\r\n00000000001859d6 T RhGetCommonStubAddress\r\n00000000002b9350 T RhGetCurrentThreadStackTrace\r\n00000000001859de T RhGetCurrentThunkContext\r\n00000000002b86c0 T RhGetGcTotalMemory\r\n00000000002b96a0 T RhGetThunkSize\r\n00000000002b94e0 T RhInitializeConservativeReportingRegion\r\n00000000002b92e0 T RhMemberwiseClone\r\n00000000002b8e40 T RhNewArray\r\n00000000002b8e10 T RhNewObject\r\n000000000018540b T RhNewString\r\n00000000001863b0 T RhpAssignRef\r\n00000000001863b0 T RhpAssignRefAVLocation\r\n00000000001863b0 T RhpAssignRefESI\r\n0000000000186498 T RhpByRefAssignRef\r\n00000000002b93f0 T RhpCalculateStackTraceWorker\r\n0000000000185705 T RhpCallCatchFunclet\r\n0000000000185884 T RhpCallFilterFunclet\r\n00000000001857cf T RhpCallFinallyFunclet\r\n00000000001859f8 T RhpCastableObjectDispatch_CommonStub\r\n00000000001859fb T RhpCastableObjectDispatchHelper\r\n00000000001859fa T RhpCastableObjectDispatchHelper_TailCalled\r\n00000000002b8ce0 T RhpCastableObjectResolve\r\n00000000001863da T RhpCheckedAssignRef\r\n00000000001863da T RhpCheckedAssignRefAVLocation\r\n00000000001863da T RhpCheckedAssignRefESI\r\n0000000000186416 T RhpCheckedLockCmpXchg\r\n0000000000186419 T RhpCheckedLockCmpXchgAVLocation\r\n0000000000186459 T RhpCheckedXchg\r\n000000000018645c T RhpCheckedXchgAVLocation\r\n00000000002b6ee0 T RhpCidResolve\r\n0000000000281520 T RhpDebugFuncEvalHelper\r\n00000000002b8650 T RhpFailFastForPInvokeExceptionCoop\r\n00000000002b8620 T RhpFailFastForPInvokeExceptionPreemp\r\n00000000001861e1 T RhpInitialDynamicInterfaceDispatch\r\n00000000001861e1 T RhpInitialInterfaceDispatch\r\n00000000001859fc T RhpInterfaceDispatch1\r\n0000000000185af5 T RhpInterfaceDispatch16\r\n0000000000185a15 T RhpInterfaceDispatch2\r\n0000000000185bef T RhpInterfaceDispatch32\r\n0000000000185a3b T RhpInterfaceDispatch4\r\n0000000000185de9 T RhpInterfaceDispatch64\r\n0000000000185a7b T RhpInterfaceDispatch8\r\n00000000001861e3 T RhpInterfaceDispatchSlow\r\n00000000002bb330 T RhpLdelemaRef\r\n00000000001858b8 T RhpLockCmpXchg32\r\n00000000001858bb T RhpLockCmpXchg32AVLocation\r\n00000000001858c0 T RhpLockCmpXchg64\r\n00000000001858c3 T RhpLockCmpXchg64AVLocation\r\n0000000000185473 T RhpNewArray\r\n00000000001854e6 T RhpNewArrayRare\r\n0000000000185348 T RhpNewFast\r\n0000000000185381 T RhpNewFinalizable\r\n0000000000185388 T RhpNewObject\r\n00000000001858cc T RhpPInvoke\r\n000000000018591a T RhpPInvokeReturn\r\n00000000002b6fa0 T RhpResolveInterfaceMethod\r\n0000000000185696 T RhpRethrow\r\n00000000002b9330 T RhpReversePInvokeBadTransition\r\n00000000002b78b0 T RhpSetHaveNewClasslibs\r\n00000000002bb1b0 T RhpStelemRef\r\n00000000001859f9 T RhpTailCallTLSDispatchCell\r\n00000000001855ed T RhpThrowEx\r\n0000000000185578 T RhpThrowHwEx\r\n00000000001861f4 T RhpUniversalTransition\r\n00000000001862d2 T RhpUniversalTransition_DebugStepTailCall\r\n00000000001861e0 T RhpVTableOffsetDispatch\r\n00000000002b7010 T RhResolveDispatch\r\n00000000002b7070 T RhResolveDispatchOnType\r\n00000000002b7fd0 T RhRethrow\r\n00000000002b95e0 T RhSetThunkData\r\n00000000002b8700 T RhStartNoGCRegion\r\n00000000002b7f70 T RhThrowEx\r\n00000000002b7e80 T RhThrowHwEx\r\n00000000002b9640 T RhTryGetThunkData\r\n00000000002baa90 T RhTypeCast_AreTypesAssignable\r\n00000000002bb410 T RhTypeCast_AreTypesEquivalent\r\n00000000002bb020 T RhTypeCast_CheckArrayStore\r\n00000000002bb5b0 T RhTypeCast_CheckCast\r\n00000000002bb590 T RhTypeCast_CheckCast2\r\n00000000002ba1c0 T RhTypeCast_CheckCastArray\r\n00000000002ba1a0 T RhTypeCast_CheckCastArray2\r\n00000000002b9fb0 T RhTypeCast_CheckCastClass\r\n00000000002b9f90 T RhTypeCast_CheckCastClass2\r\n00000000002baef0 T RhTypeCast_CheckCastInterface\r\n00000000002baed0 T RhTypeCast_CheckCastInterface2\r\n00000000002b9fe0 T RhTypeCast_CheckUnbox\r\n00000000002bb150 T RhTypeCast_CheckVectorElemAddr\r\n00000000002bb510 T RhTypeCast_IsInstanceOf\r\n00000000002bb4f0 T RhTypeCast_IsInstanceOf2\r\n00000000002ba040 T RhTypeCast_IsInstanceOfArray\r\n00000000002ba020 T RhTypeCast_IsInstanceOfArray2\r\n00000000002b9d90 T RhTypeCast_IsInstanceOfClass\r\n00000000002b9d70 T RhTypeCast_IsInstanceOfClass2\r\n00000000002ba210 T RhTypeCast_IsInstanceOfInterface\r\n00000000002ba1f0 T RhTypeCast_IsInstanceOfInterface2\r\n00000000002b9100 T RhUnbox2\r\n00000000002b8fb0 T RhUnboxAny\r\n00000000002b9150 T RhUnboxNullable\r\n0000000000192fc0 T __start___managedcode\r\n0000000000868250 D __start___modules\r\n00000000003759c4 T __start___unbox\r\n00000000003759c1 T __stop___managedcode\r\n0000000000868258 D __stop___modules\r\n00000000003786c1 T __stop___unbox\r\n000000000018a180 T SystemNative_Access\r\n000000000018a140 T SystemNative_ChDir\r\n000000000018a050 T SystemNative_ChMod\r\n0000000000189c60 T SystemNative_Close\r\n0000000000189e00 T SystemNative_CloseDir\r\n0000000000188db0 T SystemNative_ConfigureTerminalForChildProcess\r\n00000000001894f0 T SystemNative_ConvertErrorPalToPlatform\r\n00000000001894d0 T SystemNative_ConvertErrorPlatformToPal\r\n000000000018a8b0 T SystemNative_CopyFile\r\n0000000000189c70 T SystemNative_Dup\r\n000000000018a090 T SystemNative_FChMod\r\n0000000000189f30 T SystemNative_FcntlCanGetSetPipeSz\r\n0000000000189f40 T SystemNative_FcntlGetPipeSz\r\n0000000000189e70 T SystemNative_FcntlSetFD\r\n0000000000189fc0 T SystemNative_FcntlSetIsNonBlocking\r\n0000000000189f80 T SystemNative_FcntlSetPipeSz\r\n000000000018a100 T SystemNative_FLock\r\n000000000018aca0 T SystemNative_ForkAndExecProcess\r\n0000000000189a20 T SystemNative_FStat\r\n000000000018a0d0 T SystemNative_FSync\r\n000000000018a370 T SystemNative_FTruncate\r\n000000000018c190 T SystemNative_GetAbsoluteTime\r\n0000000000188fc0 T SystemNative_GetControlCharacters\r\n000000000018c1c0 T SystemNative_GetCpuUtilization\r\n000000000018b6c0 T SystemNative_GetCwd\r\n000000000018c530 T SystemNative_GetEGid\r\n000000000018c520 T SystemNative_GetEUid\r\n000000000018c560 T SystemNative_GetGroupList\r\n000000000018a6c0 T SystemNative_GetLine\r\n000000000018b840 T SystemNative_GetNonCryptographicallySecureRandomBytes\r\n000000000018ab50 T SystemNative_GetPeerID\r\n000000000018b4f0 T SystemNative_GetPid\r\n000000000018b680 T SystemNative_GetPriority\r\n000000000018c430 T SystemNative_GetPwNamR\r\n000000000018c340 T SystemNative_GetPwUidR\r\n0000000000189d30 T SystemNative_GetReadDirRBufferSize\r\n000000000018b410 T SystemNative_GetRLimit\r\n000000000018b500 T SystemNative_GetSid\r\n00000000001891d0 T SystemNative_GetSignalForBreak\r\n000000000018c620 T SystemNative_GetSystemTimeAsTicks\r\n000000000018c1a0 T SystemNative_GetTimebaseInfo\r\n000000000018c140 T SystemNative_GetTimestamp\r\n000000000018c0e0 T SystemNative_GetTimestampResolution\r\n000000000018c550 T SystemNative_GetUid\r\n0000000000188970 T SystemNative_GetWindowSize\r\n0000000000188c20 T SystemNative_InitializeConsoleBeforeRead\r\n0000000000189400 T SystemNative_InitializeTerminalAndSignalHandling\r\n000000000018ab30 T SystemNative_INotifyAddWatch\r\n000000000018ab20 T SystemNative_INotifyInit\r\n000000000018ab40 T SystemNative_INotifyRemoveWatch\r\n00000000001889a0 T SystemNative_IsATty\r\n000000000018b4e0 T SystemNative_Kill\r\n000000000018ac70 T SystemNative_LChflags\r\n000000000018ac90 T SystemNative_LChflagsCanSetHiddenFlag\r\n000000000018a1d0 T SystemNative_Link\r\n000000000018abd0 T SystemNative_LockFileRegion\r\n000000000018a190 T SystemNative_LSeek\r\n0000000000189b00 T SystemNative_LStat\r\n000000000018a2c0 T SystemNative_MAdvise\r\n000000000018a010 T SystemNative_MkDir\r\n000000000018a210 T SystemNative_MksTemps\r\n000000000018a250 T SystemNative_MMap\r\n000000000018a2f0 T SystemNative_MSync\r\n000000000018a2b0 T SystemNative_MUnmap\r\n0000000000189bb0 T SystemNative_Open\r\n0000000000189df0 T SystemNative_OpenDir\r\n000000000018b650 T SystemNative_PathConf\r\n000000000018b400 T SystemNative_PClose\r\n0000000000189e10 T SystemNative_Pipe\r\n000000000018a3b0 T SystemNative_Poll\r\n000000000018b3f0 T SystemNative_POpen\r\n000000000018a670 T SystemNative_PosixFAdvise\r\n000000000018a730 T SystemNative_Read\r\n0000000000189d40 T SystemNative_ReadDirR\r\n000000000018a790 T SystemNative_ReadLink\r\n0000000000189180 T SystemNative_ReadStdin\r\n000000000018abc0 T SystemNative_RealPath\r\n000000000018b970 T SystemNative_RegisterForCtrl\r\n000000000018b9f0 T SystemNative_RegisterForSigChld\r\n000000000018a7c0 T SystemNative_Rename\r\n000000000018b990 T SystemNative_RestoreAndHandleCtrl\r\n000000000018a800 T SystemNative_RmDir\r\n000000000018b7a0 T SystemNative_SchedGetAffinity\r\n000000000018b6e0 T SystemNative_SchedSetAffinity\r\n000000000018c540 T SystemNative_SetEUid\r\n00000000001889b0 T SystemNative_SetKeypadXmit\r\n000000000018b6b0 T SystemNative_SetPriority\r\n000000000018b480 T SystemNative_SetRLimit\r\n00000000001891e0 T SystemNative_SetSignalForBreak\r\n000000000018b9e0 T SystemNative_SetTerminalInvalidationHandler\r\n0000000000189cf0 T SystemNative_ShmOpen\r\n0000000000189d10 T SystemNative_ShmUnlink\r\n0000000000189940 T SystemNative_Stat\r\n00000000001890f0 T SystemNative_StdinReady\r\n00000000001898e0 T SystemNative_StrErrorR\r\n000000000018a840 T SystemNative_Sync\r\n000000000018a330 T SystemNative_SysConf\r\n000000000018b510 T SystemNative_SysLog\r\n0000000000188d80 T SystemNative_UninitializeConsoleAfterRead\r\n0000000000189cb0 T SystemNative_Unlink\r\n000000000018b980 T SystemNative_UnregisterForCtrl\r\n000000000018c060 T SystemNative_UTimensat\r\n000000000018b520 T SystemNative_WaitIdAnyExitedNoHangNoWait\r\n000000000018b5b0 T SystemNative_WaitPidExitedNoHang\r\n000000000018a850 T SystemNative_Write\r\n00000000001852f4 T unw_getcontext\r\n0000000000184ed0 T unw_get_fpreg\r\n0000000000184fa0 T unw_get_proc_info\r\n0000000000184fd0 T unw_get_proc_name\r\n0000000000184e30 T unw_get_reg\r\n0000000000184f50 T unw_get_save_loc\r\n0000000000184d90 T unw_init_local\r\n0000000000184ff0 T unw_is_fpreg\r\n0000000000185010 T unw_is_signal_frame\r\n0000000000185020 T unw_iterate_dwarf_unwind_cache\r\n0000000000868080 D unw_local_addr_space\r\n0000000000185000 T unw_regname\r\n0000000000184fc0 T unw_resume\r\n0000000000184f10 T unw_set_fpreg\r\n0000000000184e70 T unw_set_reg\r\n0000000000184f90 T unw_step\r\n0000000000199080 T write_character_string`"},{"Id":"11185747627","Type":"PullRequestEvent","CreatedAt":"2020-01-01T05:38:39","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7929","RelatedDescription":"Merged pull request \"Generate version script automatically unix\" (#7929) at dotnet/corert","RelatedBody":"As we discussed in #s, these changes will allow at shared libraries compilation on unix-like platforms to automatically generate a version-script and remove all local symbols and unused code.\r\nAs is said on https://github.com/dotnet/corert/issues/7340#issuecomment-486095150 the .so file contains all debug information so we need still remove all this information from file with strip in order to reduce significatly the size of .so file."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"11194221998","Type":"IssuesEvent","CreatedAt":"2020-01-02T23:58:59","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/4066","RelatedDescription":"Closed issue \"Possibility of access denied when running PublishSingleFile=true app on Unix\" (#4066) at dotnet/sdk","RelatedBody":"Hey,\r\n\r\nThe default behaviour of the `PublishSingleFile=true` on Unix (OS X / Linux) is to create `/var/tmp/.net/<project>/<version>` directory for file extraction, with last 3 directories created if needed.\r\n\r\nFor some reason, at least on Debian, likely in majority of other configurations, folders created by `dotnet` within that `/var/tmp` come with `700` permission, making them accessible only by the owner. This is not the case with the files that are following traditional `644` permission, but all subdirectories within `/var/tmp/.net` also follow `700`. Folders created manually result in default permission of `755`.\r\n\r\n`700` access means that if two or more distinct users try to run one or more `PublishSingleFile=true` applications, everybody but the first guy will receive a fatal error:\r\n\r\n```\r\nFailure processing application bundle.\r\nFailed to create directory [/var/tmp/.net/<project>/] for extracting bundled files\r\nA fatal error was encountered. Could not extract contents of the bundle\r\n```\r\n\r\nThis is a severe problem since it makes running `PublishSingleFile=true` apps impossible if we consider two or more distinct users on the operating system, and it's even more severe considering that `/var/tmp` is preserved across reboots, since if one user creates `/var/tmp/.net` folder with that `700` permission, then no other user will have access to it until it's deleted. This is what `dotnet` is currently doing.\r\n\r\nTo make it worse, we also need to realize that `.net` is a special subdirectory that everybody should have write access to, as otherwise we could have the same problem if other user will try to run some other app, as `dotnet` won't be able to access the directory. Similar case is with `<project>`, just for running two or more versions of the same project.\r\n\r\nPotential solution to the problem:\r\n- Make `/var/tmp/.net` folder follow `777` permission. like `/tmp` and `/var/tmp` does, since it's an extension of temporary directory, just for `dotnet`.\r\n- Make `/var/tmp/.net/<project>` folder follow `777` permission as well, since you may have a case where two or more users run different versions of the same software, leading to them both needing access to `/var/tmp/.net/<project>`.\r\n- Up to your own judgment, make `/var/tmp/.net/<project>/<version>` at least `755` so other users can re-use already extracted structures. `755` should be enough in this case considering that we won't need to do any manual modifications inside after extraction (as I read from the design docs), so read access for other users is more than enough.\r\n\r\nAlternative solution to the problem:\r\n- Make use of other solutions available on unixes, such as making use of the groups or ACLs, probably overkill for this use case but you're deciding here.\r\n\r\nReproduction steps:\r\n- Publish `PublishSingleFile=true` application.\r\n- `adduser testuser1` and `adduser testuser2`.\r\n- Run your software as `testuser1`, then as `testuser2`. Second user will not be able to run the application, unless he is the first user, `root` or has some special permission to access those `700` directories created by `testuser1`.\r\n\r\nIn any case thank you for your time looking into this problem.\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:\r\n OS Platform: Linux\r\n RID:         debian-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.1.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  157910edee\r\n```"},{"Id":"11194213231","Type":"IssuesEvent","CreatedAt":"2020-01-02T23:56:28","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/3997","RelatedDescription":"Closed issue \"New file in watch\" (#3997) at dotnet/sdk","RelatedBody":"while running dotnet watch run command in console. when i add file in one of the dependencies project, the run command didn't compiles the code, i have to stop this and run the same command again"},{"Id":"11194209380","Type":"IssuesEvent","CreatedAt":"2020-01-02T23:55:19","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/4077","RelatedDescription":"Closed issue \"dotnet watch run --help is confused\" (#4077) at dotnet/sdk","RelatedBody":"It gets mixed up between `--help` and `run`.\r\n\r\n```console\r\nrich@thundera aspnetapp % dotnet --version\r\n3.1.100\r\nrich@thundera aspnetapp % dotnet watch run --help\r\nwatch : Started\r\nUsage: dotnet run [options] [[--] <additional arguments>...]]\r\n\r\nOptions:\r\n  -h, --help                            Show command line help.\r\n  -c, --configuration <CONFIGURATION>   The configuration to run for. The default for most projects is 'Debug'.\r\n  -f, --framework <FRAMEWORK>           The target framework to run for. The target framework must also be specified in the project file.\r\n  -r, --runtime <RUNTIME_IDENTIFIER>    The target runtime to run for.\r\n  -p, --project                         The path to the project file to run (defaults to the current directory if there is only one project).\r\n  --launch-profile                      The name of the launch profile (if any) to use when launching the application.\r\n  --no-launch-profile                   Do not attempt to use launchSettings.json to configure the application.\r\n  --no-build                            Do not build the project before running. Implies --no-restore.\r\n  --interactive                         Allows the command to stop and wait for user input or action (for example to complete authentication).\r\n  --no-restore                          Do not restore the project before building.\r\n  -v, --verbosity <LEVEL>               Set the MSBuild verbosity level. Allowed values are q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic].\r\n  --no-dependencies                     Do not restore project-to-project references and only restore the specified project.\r\n  --force                               Force all dependencies to be resolved even if the last restore was successful.\r\n                                        This is equivalent to deleting project.assets.json.\r\nAdditional Arguments:\r\n  Arguments passed to the application that is being run.\r\nwatch : Exited\r\nwatch : Waiting for a file to change before restarting dotnet...\r\nwatch : Shutdown requested. Press Ctrl+C again to force exit.\r\n```"},{"Id":"11194196802","Type":"IssuesEvent","CreatedAt":"2020-01-02T23:51:38","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/4118","RelatedDescription":"Closed issue \"Unable to compile a cs file\" (#4118) at dotnet/sdk","RelatedBody":"I want to compile only one .cs file and generate a .exe\r\nI tried so many ways but it looks like I cannot do it unless I create a project.\r\nIs there a way to compile a .cs file similar to compiling a .java file? (Eg: javac File.java)\r\nI am using dotnet sdk for ubuntu"},{"Id":"11193656048","Type":"PullRequestEvent","CreatedAt":"2020-01-02T21:48:01","Actor":"AaronRobinsonMSFT","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/4121","RelatedDescription":"Opened pull request \"Fix parsing of metadata when looking for COM related CustomAttributes. [3.1.2xx]\" (#4121) at dotnet/sdk","RelatedBody":"Replaces #4112 "},{"Id":"11193650236","Type":"PullRequestEvent","CreatedAt":"2020-01-02T21:46:51","Actor":"AaronRobinsonMSFT","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/pull/4112","RelatedDescription":"Closed pull request \"Fix parsing of metadata when looking for COM related CustomAttributes.\" (#4112) at dotnet/sdk","RelatedBody":"Fixes https://github.com/dotnet/sdk/issues/4099"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"544546454","IsPullRequest":true,"CreatedAt":"2020-01-02T11:42:32","Actor":"manne","Number":"157","RawContent":null,"Title":"Link Reactive Extensions to new github repo","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/157","RelatedDescription":"Open PR \"Link Reactive Extensions to new github repo\" (#157)"},{"Id":"539153211","IsPullRequest":true,"CreatedAt":"2019-12-17T15:52:32","Actor":"khalidabuhakmeh","Number":"156","RawContent":null,"Title":"Update Teams Link","State":"open","Body":"Was `https://dotnetfoundation.org/team` but now is `https://dotnetfoundation.org/about#team`","Url":"https://github.com/dotnet/foundation/pull/156","RelatedDescription":"Open PR \"Update Teams Link\" (#156)"},{"Id":"523940971","IsPullRequest":false,"CreatedAt":"2019-11-17T05:53:47","Actor":"NextTurn","Number":"155","RawContent":null,"Title":"Typos in CLA bot profile","State":"open","Body":"https://github.com/dnfclas\r\n\r\n## Expected\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003693-983ed400-0941-11ea-91d9-18c29e752b81.png)\r\n\r\n## Actual\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003652-ec958400-0940-11ea-8239-f9b19a7dc957.png)\r\n\r\nAlways capitalized, never .Net or dot NET. \r\n\r\n[.NET Glossary](https://github.com/dotnet/docs/blob/master/docs/standard/glossary.md#net)\r\n\r\n[Microsoft Style Guide](https://github.com/MicrosoftDocs/microsoft-style-guide/blob/master/styleguide/a-z-word-list-term-collections/n/net.md)","Url":"https://github.com/dotnet/foundation/issues/155","RelatedDescription":"Open issue \"Typos in CLA bot profile\" (#155)"},{"Id":"523861891","IsPullRequest":true,"CreatedAt":"2019-11-16T15:59:11","Actor":"NextTurn","Number":"154","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/154","RelatedDescription":"Open PR \"Fix broken links\" (#154)"},{"Id":"522965180","IsPullRequest":true,"CreatedAt":"2019-11-14T16:22:27","Actor":"NextTurn","Number":"153","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/153","RelatedDescription":"Open PR \"Fix broken links\" (#153)"},{"Id":"522951789","IsPullRequest":true,"CreatedAt":"2019-11-14T16:00:23","Actor":"NextTurn","Number":"152","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/152","RelatedDescription":"Open PR \"Fix broken links\" (#152)"},{"Id":"520212668","IsPullRequest":true,"CreatedAt":"2019-11-08T23:32:02","Actor":"onovotny","Number":"151","RawContent":null,"Title":"Update RxUI license to reflect repo","State":"closed","Body":"Fixes https://github.com/dotnet-foundation/dotnetfoundation-website/issues/68","Url":"https://github.com/dotnet/foundation/pull/151","RelatedDescription":"Closed or merged PR \"Update RxUI license to reflect repo\" (#151)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-11-07T05:43:04","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Closed or merged PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-11-07T05:42:14","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Closed or merged PR \"Add new Cake Maintainer\" (#150)"},{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-11-07T05:41:48","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Closed or merged PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"544722108","IsPullRequest":true,"CreatedAt":"2020-01-02T19:55:04","Actor":"sywhang","Number":"27979","RawContent":null,"Title":"[3.1 port] Fix EventSource to stop ignoring EventCommand.SendManifest","State":"open","Body":"This is a port of https://github.com/dotnet/runtime/pull/848 to 3.1 servicing. \r\n\r\n## Customer Impact\r\n\r\nSending ETW command to trigger manifest file to be generated does not work anymore. This blocks some customers who are relying on ETW commands to generate multiple ETL files per session, since the files they generate after the initial file don't have any test. \r\n\r\n## Regression?\r\n\r\nYes, from https://github.com/dotnet/coreclr/pull/11639/. This is some time around .NET Core 2.0 timeframe. \r\n\r\n## Testing\r\n\r\nAdded automated test as part of https://github.com/dotnet/runtime/pull/848. \r\nI also verified the fix with the repro sent by the customer who initially reported this (Azure Stack). \r\n\r\n## Risk\r\n\r\nLow. The code path being changed affects only ETW, and is a relatively simple change. I've tested the scenario with all the ETW tests we have and verified that they pass. ","Url":"https://github.com/dotnet/coreclr/pull/27979","RelatedDescription":"Open PR \"[3.1 port] Fix EventSource to stop ignoring EventCommand.SendManifest\" (#27979)"},{"Id":"544464942","IsPullRequest":false,"CreatedAt":"2020-01-02T06:47:28","Actor":"Joowoo30","Number":"27978","RawContent":null,"Title":"How can I use some headers in gc.cpp.","State":"open","Body":"Hello.\r\nI forked coreclr code and added some test code in it to analyze gc behavior.\r\nbut I can't use #include <dlfcn.h> in it. (Exactly in coreclr/src/gc/gc.cpp)\r\nTo solve this problem, I edited CmakeLists files many times (Adding target_link_libraries dl and so on)\r\nbut I fail to build coreclr with my code.\r\n\r\nhow can I use #include <dlfcn.h> in gc.cpp?\r\nI have to use dlopen and dlsym for my test.\r\n\r\nI would be really grateful if someone let me know.\r\nThank you.","Url":"https://github.com/dotnet/coreclr/issues/27978","RelatedDescription":"Open issue \"How can I use some headers in gc.cpp.\" (#27978)"},{"Id":"542571528","IsPullRequest":false,"CreatedAt":"2019-12-26T15:50:11","Actor":"Macromullet","Number":"27977","RawContent":null,"Title":"Different 32-bit marshalling behavior with on Windows with 3.1","State":"closed","Body":"I posted about this last week, but with the holidays it hasn't received any traction. https://github.com/dotnet/core/issues/3950#issuecomment-567792601\r\n\r\nIn a nutshell, a test that has behaved perfectly under .net framework and .net core, suddenly stopped working after an upgrade to .net core 3.1.\r\n\r\nUpdate: This appears to be a difference between how tests are run with the 16.4 Microsoft.NET.Test.Sdk project type. When using 16.2, even when using x86 as the processor architecture (under Tests->Processor Architecture for AnyCPU Projects) it still is using 64-bit. In 16.4, it actually runs the test in 32-bit mode, causing the test to fail.","Url":"https://github.com/dotnet/coreclr/issues/27977","RelatedDescription":"Closed issue \"Different 32-bit marshalling behavior with on Windows with 3.1\" (#27977)"},{"Id":"542289671","IsPullRequest":false,"CreatedAt":"2019-12-25T08:20:59","Actor":"peppy","Number":"27976","RawContent":null,"Title":"Finalizer called without ctor in optimized compilation case","State":"closed","Body":"We recently encountered a bug where an object expected to be in an initialized state at point of finalizing was not. Minimal reproduction case:\r\n\r\n```csharp\r\nusing System;\r\nusing System.Diagnostics;\r\n\r\nnamespace ReproduceFinalizerFailure\r\n{\r\n    class Program\r\n    {\r\n        public static bool CtorReached;\r\n        public static bool FinalizerReached;\r\n\r\n        static void Main()\r\n        {\r\n            try\r\n            {\r\n                GetObject();\r\n            }\r\n            catch\r\n            {\r\n            }\r\n\r\n            GC.Collect();\r\n            GC.WaitForPendingFinalizers();\r\n\r\n            Trace.Assert(!CtorReached, \"Constructor should not be reached\");\r\n            Trace.Assert(!FinalizerReached, \"Finalizer should not be reached\");\r\n        }\r\n\r\n        private static void GetObject()\r\n        {\r\n            var obj = throwException();\r\n            new FinalizingObject(obj);\r\n        }\r\n\r\n        private static object throwException()\r\n        {\r\n            throw new Exception();\r\n        }\r\n    }\r\n\r\n    class FinalizingObject\r\n    {\r\n        public FinalizingObject(object obj) => Program.CtorReached = true;\r\n\r\n        ~FinalizingObject() => Program.FinalizerReached = true;\r\n    }\r\n}\r\n```\r\n\r\n```sh\r\n➜  ReproduceFinalizerFailure  dotnet --version\r\n3.1.100\r\n➜  ReproduceFinalizerFailure  dotnet run -c Release\r\nProcess terminated. Assertion Failed\r\nFinalizer should not be reached\r\n   at ReproduceFinalizerFailure.Program.Main() in /Users/dean/Projects/ReproduceFinalizerFailure/ReproduceFinalizerFailure/Program.cs:line 27\r\n```\r\n\r\nThis only happens with build configuration Release and debugger detached.\r\n\r\nPotentially related to https://github.com/dotnet/runtime/issues/764.","Url":"https://github.com/dotnet/coreclr/issues/27976","RelatedDescription":"Closed issue \"Finalizer called without ctor in optimized compilation case\" (#27976)"},{"Id":"540149649","IsPullRequest":true,"CreatedAt":"2019-12-19T08:12:08","Actor":"VSadov","Number":"27975","RawContent":null,"Title":"Setting MinLimitTotalWorkerThreads according to CPU quota.","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27975","RelatedDescription":"Open PR \"Setting MinLimitTotalWorkerThreads according to CPU quota.\" (#27975)"},{"Id":"538806283","IsPullRequest":false,"CreatedAt":"2019-12-18T06:40:39","Actor":"zengqinglei","Number":"27974","RawContent":null,"Title":"Unable to delete assembly file after plugin uninstall","State":"closed","Body":"**Describe the bug**\r\n\r\nWhen I use the sample code: https://github.com/dotnet/samples/tree/master/core/tutorials/Unloading\r\nThen I want to remove the assembly file after the plugin is uninstalled and I get an exception:\r\n\r\n![image](https://user-images.githubusercontent.com/7374317/70961451-cb998d80-20bc-11ea-837c-601b70c8e52a.png)\r\n\r\n**Run Environment**\r\n* .NET CORE 3.1\r\n* Windows 10 \r\n![image](https://user-images.githubusercontent.com/7374317/70961722-a8231280-20bd-11ea-852a-eb42a443ac45.png)\r\n\r\nI hope to get your help soon, thank you!","Url":"https://github.com/dotnet/coreclr/issues/27974","RelatedDescription":"Closed issue \"Unable to delete assembly file after plugin uninstall\" (#27974)"},{"Id":"538649669","IsPullRequest":true,"CreatedAt":"2019-12-16T20:51:33","Actor":"AndyAyersMS","Number":"27973","RawContent":null,"Title":"Release/3.1 port of dotnet/runtime#239","State":"open","Body":"Fix for #27923\r\n\r\nThe jit might fail to locate a class handle for a ref class, leading to an\r\nunexpected crash while jitting.\r\n\r\n## Customer Impact\r\nUnexpected and hard to diagnose crash/exception\r\n\r\n## Regression?\r\nYes, introduced during the development 3.0 cycle. 2.x behaves correctly.\r\n\r\n## Testing\r\nVerified the user's test case now passes; no diffs seen in any existing\r\nframework or test code.\r\n\r\n## Risk\r\n**Low**: the jit will now fall back to using the handle for System.Object if no\r\nbetter option can be found.\r\n\r\ncc @BruceForstall\r\n\r\n____\r\n\r\nIn some cases we may end up in lvaSetClass without a valid ref class handle\r\nfrom either the IR or the stack. Use the handle for object as a conservative\r\nfallback.","Url":"https://github.com/dotnet/coreclr/pull/27973","RelatedDescription":"Open PR \"Release/3.1 port of dotnet/runtime#239\" (#27973)"},{"Id":"537840266","IsPullRequest":true,"CreatedAt":"2019-12-14T00:52:54","Actor":"AndyAyersMS","Number":"27972","RawContent":null,"Title":"[release/3.1] Port fix for JIT silent bad code","State":"open","Body":"Release/3.1 port of dotnet/runtime#797.\r\nFixes dotnet/runtime#764\r\n\r\nThe jit might incorrectly order a read from a struct field with an operation\r\nthat modifies the field, so that the read returns the wrong value.\r\n\r\n## Customer Impact\r\nSilent bad code; program behaves incorrectly.\r\n\r\n## Regression?\r\nYes, introduced during the development 3.0 cycle. 2.x behaves correctly.\r\n\r\n## Testing\r\nVerified the user's test case now passes; no diffs seen in any existing framework\r\nor test code.\r\n\r\n## Risk\r\n**Low**: the jit is now spilling the eval stack entries to temps in cases where it\r\ndid not before; this should be conservatively safe.\r\n\r\ncc @BruceForstall \r\n\r\n____\r\n\r\nIf we're appending an assignment whose LHS is is a location within a local\r\nstruct, we need to spill all references to that struct from the eval stack.\r\n\r\nUpdate the existing logic for this to handle the case where the LHS is a field\r\nof a local struct, and the field is updated by unusual means (here, `initobj`).\r\n\r\nFixes dotnet/runtime#764.","Url":"https://github.com/dotnet/coreclr/pull/27972","RelatedDescription":"Open PR \"[release/3.1] Port fix for JIT silent bad code\" (#27972)"},{"Id":"537829085","IsPullRequest":true,"CreatedAt":"2019-12-13T23:56:38","Actor":"mateoatr","Number":"27971","RawContent":null,"Title":"Fix memory leaked caused by Marshal.GetFunctionPointerForDelegate","State":"open","Body":"[This issue](https://github.com/dotnet/runtime/issues/353) was fixed in dotnet/runtime, needs to be backported.","Url":"https://github.com/dotnet/coreclr/pull/27971","RelatedDescription":"Open PR \"Fix memory leaked caused by Marshal.GetFunctionPointerForDelegate\" (#27971)"},{"Id":"532816885","IsPullRequest":false,"CreatedAt":"2019-12-11T07:38:17","Actor":"yashwanthreddyg","Number":"27962","RawContent":null,"Title":"dotnet 2.1.12 : Segmentation fault on NullReferenceException","State":"closed","Body":"Dotnet version:\r\n2.1.12 aspnetcore\r\n2.1.5 aspnetcore\r\n2.1.13 aspnetcore\r\n\r\nOS:\r\n```\r\nLinux version 3.10.0-1062.4.3.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-39) (GCC) ) #1 SMP Wed Nov 13 23:58:53 UTC 2019\r\n```\r\n\r\nOur application is a web app and a certain code path leads to a null reference exception. lt causes the runtime to crash with segmentation fault despite there being a catch around the exception. I see the same behavior on all the above mentioned runtimes but I have backtrace from version 2.1.12.\r\n\r\n```\r\nProcess 3204 stopped\r\n\r\n* thread #11: tid = 3222, 0x00007f7a9dcd4669, name = 'dotnet', stop reason = invalid address (fault address: 0x0)\r\n    frame #0: 0x00007f7a9dcd4669\r\n-> 0x7f7a9dcd4669:  cmpl   %edi, (%rdi)\r\n   0x7f7a9dcd466b:  callq  *(%rax)\r\n   0x7f7a9dcd466d:  testq  %rax, %rax\r\n   0x7f7a9dcd4670:  jne    0x7f7a9dcd46c8\r\nbt\r\n* thread #11: tid = 3222, 0x00007f7a9dcd4669, name = 'dotnet', stop reason = invalid address (fault address: 0x0)\r\n  * frame #0: 0x00007f7a9dcd4669\r\n    frame #1: 0x00007f7a9dcd35b9\r\n    frame #2: 0x00007f7a9dcce664\r\n    frame #3: 0x00007f7a9dcca87d\r\n    frame #4: 0x00007f7a9dc8eee5\r\n    frame #5: 0x00007f7a9b1842ad\r\n    frame #6: 0x00007f7a9d5267c2\r\n    frame #7: 0x00007f7a9d525a4e\r\n    frame #8: 0x00007f7a9d5257bb\r\n    frame #9: 0x00007f7a9d525749\r\n    frame #10: 0x00007f7a9d51e6f7\r\n    frame #11: 0x00007f7a9d521482\r\n    frame #12: 0x00007f7a9d5212ab\r\n    frame #13: 0x00007f7a9d521239\r\n    frame #14: 0x00007f7a9d520f93\r\n    frame #15: 0x00007f7a9d520e2b\r\n    frame #16: 0x00007f7a9d520da9\r\n    frame #17: 0x00007f7a9d521f5b\r\n    frame #18: 0x00007f7a9d521dbb\r\n    frame #19: 0x00007f7a9d521d41\r\n    frame #20: 0x00007f7a9d51e3e3\r\n    frame #21: 0x00007f7a9d521482\r\n    frame #22: 0x00007f7a9d5212ab\r\n    frame #23: 0x00007f7a9d521239\r\n    frame #24: 0x00007f7a9d520f93\r\n    frame #25: 0x00007f7a9d520e2b\r\n    frame #26: 0x00007f7a9d520da9\r\n    frame #27: 0x00007f7a9d521f5b\r\n    frame #28: 0x00007f7a9d521dbb\r\n    frame #29: 0x00007f7a9d521d41\r\n    frame #30: 0x00007f7a9d51e3e3\r\n    frame #31: 0x00007f7a9d521482\r\n    frame #32: 0x00007f7a9d5212ab\r\n    frame #33: 0x00007f7a9d521239\r\n    frame #34: 0x00007f7a9d520f93\r\n    frame #35: 0x00007f7a9d520e2b\r\n    frame #36: 0x00007f7a9d520da9\r\n    frame #37: 0x00007f7a9d521f5b\r\n    frame #38: 0x00007f7a9d521dbb\r\n    frame #39: 0x00007f7a9d521d41\r\n    frame #40: 0x00007f7a9d51e3e3\r\n    frame #41: 0x00007f7a9d521482\r\n    frame #42: 0x00007f7a9d5212ab\r\n    frame #43: 0x00007f7a9d521239\r\n    frame #44: 0x00007f7a9d51e626\r\n    frame #45: 0x00007f7a9d521482\r\n    frame #46: 0x00007f7a9d5212ab\r\n    frame #47: 0x00007f7a9d521239\r\n    frame #48: 0x00007f7a9d520f93\r\n    frame #49: 0x00007f7a9d520e2b\r\n    frame #50: 0x00007f7a9d520da9\r\n    frame #51: 0x00007f7a9d52074f\r\n    frame #52: 0x00007f7a9d5205ab\r\n    frame #53: 0x00007f7a9d520531\r\n    frame #54: 0x00007f7a9d51e3e3\r\n    frame #55: 0x00007f7a9d51df87\r\n    frame #56: 0x00007f7a9d51ddbb\r\n    frame #57: 0x00007f7a9d51dd49\r\n    frame #58: 0x00007f7a9d51be68\r\n    frame #59: 0x00007f7a9d51dad2\r\n    frame #60: 0x00007f7a9d51d8fb\r\n    frame #61: 0x00007f7a9d51d889\r\n    frame #62: 0x00007f7a9d51ba24\r\n    frame #63: 0x00007f7a9d51d612\r\n    frame #64: 0x00007f7a9d51d43b\r\n    frame #65: 0x00007f7a9d51d3c9\r\n    frame #66: 0x00007f7a9d51b873\r\n    frame #67: 0x00007f7a9d51aaf7\r\n    frame #68: 0x00007f7a9d51a92b\r\n    frame #69: 0x00007f7a9d51a8b9\r\n    frame #70: 0x00007f7a9d5186f2\r\n    frame #71: 0x00007f7a9d51809b\r\n    frame #72: 0x00007f7a9d518029\r\n    frame #73: 0x00007f7a9c904810\r\n    frame #74: 0x00007f7a9c903a8b\r\n    frame #75: 0x00007f7a9c90393d\r\n    frame #76: 0x00007f7a9c901e1a\r\n    frame #77: 0x00007f7a9c900acb\r\n    frame #78: 0x00007f7a9c900a51\r\n    frame #79: 0x00007f7a9c8f8789\r\n    frame #80: 0x00007f7a9c8f861b\r\n    frame #81: 0x00007f7a9c8f85ad\r\n    frame #82: 0x00007f7a9c8f3605\r\n    frame #83: 0x00007f7a9c8f2b1b\r\n    frame #84: 0x00007f7a9c8f2aad\r\n    frame #85: 0x00007f7a9c8f28a3\r\n    frame #86: 0x00007f7a9c8f226b\r\n    frame #87: 0x00007f7a9c8f21fd\r\n    frame #88: 0x00007f7a9c8f0245\r\n    frame #89: 0x00007f7a9c8efe74\r\n    frame #90: 0x00007f7a996bdcfd\r\n    frame #91: 0x00007f7a9c8db8b0\r\n    frame #92: 0x00007f7a996bdcfd\r\n    frame #93: 0x00007f7a9974e268\r\n    frame #94: 0x00007f7b12df3edf libcoreclr.so`CallDescrWorkerInternal + 124\r\n    frame #95: 0x00007f7b12d1460c libcoreclr.so`MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 83 at callhelpers.cpp:78\r\n    frame #96: 0x00007f7b12d145b9 libcoreclr.so`MethodDescCallSite::CallTargetWorker(this=<unavailable>, pArguments=<unavailable>, pReturnValue=0x00007f783aeedb28, cbReturnValue=8) + 857 at callhelpers.cpp:620\r\n    frame #97: 0x00007f7b12e948b5 libcoreclr.so`QueueUserWorkItemManagedCallback(void*) [inlined] MethodDescCallSite::Call_RetBool(this=0x00007f783aeedb30, pArguments=<unavailable>) + 15 at callhelpers.h:433\r\n    frame #98: 0x00007f7b12e948a6 libcoreclr.so`QueueUserWorkItemManagedCallback(pArg=0x00007f783aeedebe) + 166 at comthreadpool.cpp:451\r\n    frame #99: 0x00007f7b12ce5f3d libcoreclr.so`ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) [inlined] ManagedThreadBase_DispatchInner(pCallState=0x00007f783aeedd68) + 413 at threads.cpp:8850\r\n    frame #100: 0x00007f7b12ce5eeb libcoreclr.so`ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) [inlined] ManagedThreadBase_DispatchMiddle(pCallState=0x00007f783aeedd68) + 83 at threads.cpp:8901\r\n    frame #101: 0x00007f7b12ce5e98 libcoreclr.so`ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) [inlined] ManagedThreadBase_DispatchOuter(ManagedThreadCallState*)::$_8::operator()(ManagedThreadBase_DispatchOuter(ManagedThreadCallState*)::TryArgs*) const::{lambda(Param*)#1}::operator()(Param*) const at threads.cpp:9139\r\n    frame #102: 0x00007f7b12ce5e98 libcoreclr.so`ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) at threads.cpp:9141\r\n    frame #103: 0x00007f7b12ce5e98 libcoreclr.so`ManagedThreadBase_DispatchOuter(pCallState=<unavailable>) + 248 at threads.cpp:9178\r\n    frame #104: 0x00007f7b12ce66a0 libcoreclr.so`ManagedThreadBase::ThreadPool(ADID, void (*)(void*), void*) [inlined] ManagedThreadBase_FullTransitionWithAD(pAppDomain=<unavailable>, pTarget=<unavailable>, args=<unavailable>, filterType=<unavailable>)(void*), void*, UnhandledExceptionLocation) + 43 at threads.cpp:9199\r\n    frame #105: 0x00007f7b12ce6675 libcoreclr.so`ManagedThreadBase::ThreadPool(pAppDomain=<unavailable>, pTarget=<unavailable>, args=<unavailable>)(void*), void*) + 21 at threads.cpp:9241\r\n    frame #106: 0x00007f7b12e78ab7 libcoreclr.so`ManagedPerAppDomainTPCount::DispatchWorkItem(this=0x0000000001d0bf60, foundWork=0x00007f783aeedebf, wasNotRecalled=0x00007f783aeedebe) + 295 at threadpoolrequest.cpp:754\r\n    frame #107: 0x00007f7b12d04d33 libcoreclr.so`ThreadpoolMgr::WorkerThreadStart(void*) [inlined] ThreadpoolMgr::ExecuteWorkRequest(bool*, bool*) + 1267 at win32threadpool.cpp:1560\r\n    frame #108: 0x00007f7b12d04d12 libcoreclr.so`ThreadpoolMgr::WorkerThreadStart(lpArgs=<unavailable>) + 1234 at win32threadpool.cpp:2024\r\n    frame #109: 0x00007f7b1307a712 libcoreclr.so`CorUnix::CPalThread::ThreadEntry(pvParam=0x00007f7834002260) + 306 at thread.cpp:1682\r\n    frame #110: 0x00007f7b1456ee65 libpthread.so.0`start_thread + 197\r\n(lldb)\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27962","RelatedDescription":"Closed issue \"dotnet 2.1.12 : Segmentation fault on NullReferenceException\" (#27962)"},{"Id":"536062209","IsPullRequest":true,"CreatedAt":"2019-12-10T23:58:27","Actor":"eerhardt","Number":"27969","RawContent":null,"Title":"[release/3.1] Stop throwing exception in TimeZoneInfo POSIX parsing","State":"open","Body":"Release/3.1 port of https://github.com/dotnet/runtime/pull/458.\r\nFixes https://github.com/dotnet/corefx/issues/42192\r\n\r\n### Summary\r\nOn RHEL 8, some time zones (specifically `Africa/Casablanca`) stop supporting daylight savings transitions because of a change in the tzdata files.\r\n\r\n### Customer Impact\r\nApplications getting time zone information on RedHat 8 (and potentially other Unix distros if using the same tzdata version) stop working with daylight savings time for `Africa/Casablanca` time zone.\r\n\r\nThis change allows `TimeZoneInfo` to work correctly for all the daylight savings transitions in the tzdata file, and it skips the \"future\" daylight savings template if we can't support it.\r\n\r\n### Regression?\r\nFor a user it is a regression when updating to RHEL 8 because of the change in the tzdata in the OS. Our code didn't regress here - we never supported this format before now and were always throwing an exception. This is the first time we've hit it in the real-world.\r\n\r\n### Testing\r\nI ran all the TimeZoneInfo tests on RHEL 8. They failed for `Africa/Casablanca` before this change, and now pass afterward.\r\n\r\n### Risk\r\n**Low**: The change is isolated to a non-supported format that would cause DST to completely stop working before. Now we are allowing the other DST information to work, while skipping the unsupported future dates.\r\n\r\ncc: @danmosemsft @tarekgh @ericstj \r\n\r\n____\r\n\r\n\r\nIsDaylightSavingTime_CasablancaMultiYearDaylightSavings fails on rhel.8\r\n\r\nWhen parsing the tzdata POSIX string that contains an 'n' Julian date, we are currently throwing an exception, and then falling back to a TimeZoneInfo without DST enabled. However, this is a mistake because there are other DST transitions that were read from the tzdata file that are valid and usable. We shouldn't be throwing that information away.\r\n\r\nSo instead, we now skip the POSIX string if we detect an unsupported 'n' Julian date, and just use the last transition as the AdjustmentRule for all the DateTimes in the future. This way we can still make DST determinations correctly for some DateTimes.\r\n\r\nFix https://github.com/dotnet/corefx/issues/42192","Url":"https://github.com/dotnet/coreclr/pull/27969","RelatedDescription":"Open PR \"[release/3.1] Stop throwing exception in TimeZoneInfo POSIX parsing\" (#27969)"},{"Id":"535533061","IsPullRequest":false,"CreatedAt":"2019-12-10T14:47:07","Actor":"NMSAzulX","Number":"27968","RawContent":null,"Title":"How do I write code that allows a method to use Calli instructions at run time? ","State":"closed","Body":"Now, I use MethodInfo.CreateDelegate to create delegates, but its execution performance is lower than that of Calli. How can I improve it?","Url":"https://github.com/dotnet/coreclr/issues/27968","RelatedDescription":"Closed issue \"How do I write code that allows a method to use Calli instructions at run time? \" (#27968)"},{"Id":"534871799","IsPullRequest":true,"CreatedAt":"2019-12-09T11:37:47","Actor":"janvorli","Number":"27967","RawContent":null,"Title":"Port to 2.1 - Fix VirtualMemoryLogging::logRecords overflow","State":"open","Body":"Issue: https://github.com/dotnet/coreclr/issues/27547\r\n\r\nCustomer impact\r\n---\r\n\r\nCrash or hang in long running (days) processes on Linux, triggered by runtime executing 2 billion of  virtual memory operations.\r\n\r\nRegression?\r\n---\r\n\r\nNot a regression - the bug is present since .NET Core 1.0. Windows/Linux reliability gap.\r\n\r\nRisk\r\n---\r\nLow\r\n\r\n----\r\n\r\nwhen VirtualMemoryLogging::recordNumber increments from LONG_MAX,\r\nit became negative number, and the result of i % MaxRecords became\r\na number from -127 to 0.\r\n\r\nWhen that happens we will ovewrite CRITICAL_SECTION virtual_critsec\r\nwhich are stored in bss right before logRecords with garbage data.\r\nThen most likely the process will have a GC hang with one or more\r\nGC threads stuck trying to enter or leave critical section.\r\n\r\nThe fix is to ensure ULONG value are passed to modulo operation.","Url":"https://github.com/dotnet/coreclr/pull/27967","RelatedDescription":"Open PR \"Port to 2.1 - Fix VirtualMemoryLogging::logRecords overflow\" (#27967)"},{"Id":"534465706","IsPullRequest":false,"CreatedAt":"2019-12-07T23:20:56","Actor":"EgorBo","Number":"27966","RawContent":null,"Title":"JIT: Optimize simple arithmetic with GT_NEG","State":"open","Body":"I was surprised it's not handled in `morph`, e.g. `-a + b` => `b - a`.\r\n```csharp\r\nint M1(int a, int b) => -a +  b; // optimize to  \"b - a\"\r\nint M2(int a, int b) =>  a + -b; // optimize to  \"a - b\"\r\nint M3(int a, int b) =>  a - -b; // optimize to  \"a + b\"\r\nint M4(int a, int b) => -a - -b; // optimize to  \"b - a\"\r\n```\r\nCurrent codegen:\r\n```asm\r\n; Method CC:M1(int,int):int:this\r\nG_M48868_IG02:\r\n       mov      eax, edx\r\n       neg      eax\r\n       add      eax, r8d\r\n\r\n; Method CC:M2(int,int):int:this\r\nG_M15271_IG02:\r\n       mov      eax, r8d\r\n       neg      eax\r\n       add      eax, edx\r\n\r\n; Method CC:M3(int,int):int:this\r\nG_M13857_IG02:\r\n       mov      eax, r8d\r\n       neg      eax\r\n       sub      edx, eax\r\n       mov      eax, edx\r\n\r\n; Method CC:M4(int,int):int:this\r\nG_M28384_IG02:\r\n       mov      eax, edx\r\n       neg      eax\r\n       mov      edx, r8d\r\n       neg      edx\r\n       sub      eax, edx\r\n```\r\nExpected codegen: https://godbolt.org/z/nmZxv8\r\n\r\nAlso:\r\n```csharp\r\n\r\nint M5(int a) =>  -a / 10;  // optimize to  \"a / -10\"\r\nint M6(int a) => -(a / 10); // optimize to  \"a / -10\"\r\nint M7(int a) =>  -a * 10;  // optimize to  \"a * -10\"\r\nint M8(int a) => -(a * 10); // optimize to  \"a * -10\"\r\n```\r\n\r\ncategory:cq\r\ntheme:basic-cq\r\nskill-level:beginner\r\ncost:small","Url":"https://github.com/dotnet/coreclr/issues/27966","RelatedDescription":"Open issue \"JIT: Optimize simple arithmetic with GT_NEG\" (#27966)"},{"Id":"533549794","IsPullRequest":true,"CreatedAt":"2019-12-05T23:18:06","Actor":"mmitche","Number":"27965","RawContent":null,"Title":"[release/3.1] Use 3.1.100 SDK in 3.1 build","State":"closed","Body":"To ensure that the 3.1 stack uses a consistent SDK.  The upper portions of the stack require the 3.1 SDK because for TFM purposes.","Url":"https://github.com/dotnet/coreclr/pull/27965","RelatedDescription":"Closed or merged PR \"[release/3.1] Use 3.1.100 SDK in 3.1 build\" (#27965)"},{"Id":"533008488","IsPullRequest":true,"CreatedAt":"2019-12-04T23:38:14","Actor":"jashook","Number":"27964","RawContent":null,"Title":"Disable formatting job in 3.0","State":"open","Body":"@hoyosjs ","Url":"https://github.com/dotnet/coreclr/pull/27964","RelatedDescription":"Open PR \"Disable formatting job in 3.0\" (#27964)"},{"Id":"532845984","IsPullRequest":true,"CreatedAt":"2019-12-04T18:01:14","Actor":"jashook","Number":"27963","RawContent":null,"Title":"This is a point fix for not allowing fast tail calls on windows arm64 for vararg methods","State":"open","Body":"This only affects windows arm and arm64.\r\n\r\n/cc @dotnet/jit-contrib ","Url":"https://github.com/dotnet/coreclr/pull/27963","RelatedDescription":"Open PR \"This is a point fix for not allowing fast tail calls on windows arm64 for vararg methods\" (#27963)"},{"Id":"531827281","IsPullRequest":false,"CreatedAt":"2019-12-04T01:51:24","Actor":"MiyamuraMiyako","Number":"27961","RawContent":null,"Title":"AssemblyLoadContext.Default.LoadFromAssemblyPath throw FileLoadException","State":"closed","Body":"Main program and module program is `.net core3.1` program.\r\n\r\nModule program just one class with out any content:\r\n```C#\r\npublic class Module {}\r\n```\r\nMainProgram have below logic:\r\n```C#\r\nAssemblyLoadContext.Default.LoadFromAssemblyPath($@\"{myPath}\\Module.dll\");\r\n```\r\n\r\nthen MainProgram throw `System.IO.FileLoadException`.\r\n```\r\nCould not load file or assembly 'Module, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.\r\n\r\n   at System.Runtime.Loader.AssemblyLoadContext.LoadFromPath(IntPtr ptrNativeAssemblyLoadContext, String ilPath, String niPath, ObjectHandleOnStack retAssembly)\r\n   at System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyPath(String assemblyPath)\r\n   at ZZJ.Hospital.Plugin.MEF.Operate.FindSubModule() in D:\\ZZJ.Hospital\\ZZJ.Hospital\\Plugin\\MEF\\Operate.cs:line 24\r\n   at ZZJ.Hospital.Plugin.MEF.SubModule.FindInitSubModule() in D:\\ZZJ.Hospital\\ZZJ.Hospital\\Plugin\\MEF\\SubModule.cs:line 18\r\n   at ZZJ.Hospital.MainWindow.FindSubModule() in D:\\ZZJ.Hospital\\ZZJ.Hospital\\StartWindow.xaml.cs:line 33\r\n   at ZZJ.Hospital.MainWindow..ctor() in D:\\ZZJ.Hospital\\ZZJ.Hospital\\StartWindow.xaml.cs:line 28\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27961","RelatedDescription":"Closed issue \"AssemblyLoadContext.Default.LoadFromAssemblyPath throw FileLoadException\" (#27961)"},{"Id":"530233832","IsPullRequest":true,"CreatedAt":"2019-12-02T19:36:42","Actor":"alpencolt","Number":"27956","RawContent":null,"Title":"[armel/Linux] Fix armel build","State":"closed","Body":"Option '-DARM_SOFTFP' not passed after #27077 which required for armel build.\r\nThis commit fix it.\r\n\r\nHaven't checked dotnet/runtime, but think it should be ported.\r\ncc @jkotas @y-yamshchikov @o-piskunov","Url":"https://github.com/dotnet/coreclr/pull/27956","RelatedDescription":"Closed or merged PR \"[armel/Linux] Fix armel build\" (#27956)"},{"Id":"529195568","IsPullRequest":true,"CreatedAt":"2019-12-02T15:53:15","Actor":"hoyosjs","Number":"27952","RawContent":null,"Title":"Change non_virtual_calls_to_instance_methods test to non-il-sdk format","State":"closed","Body":"Branch 3.1 doesn't have the changes necessary to build ilproj using the SDK. PR #27868 ported a bug fix and added this test, so just use the old format.","Url":"https://github.com/dotnet/coreclr/pull/27952","RelatedDescription":"Closed or merged PR \"Change non_virtual_calls_to_instance_methods test to non-il-sdk format\" (#27952)"},{"Id":"530797589","IsPullRequest":false,"CreatedAt":"2019-12-01T21:19:33","Actor":"cup","Number":"27960","RawContent":null,"Title":"Print array","State":"open","Body":"I can create a program like this:\r\n\r\n~~~cs\r\nusing System;\r\nclass App {\r\n   static void Main() {\r\n      int[] a1 = {10, 20};\r\n      Console.WriteLine(a1);\r\n   }\r\n}\r\n~~~\r\n\r\nbut it doesnt give expected output:\r\n\r\n~~~\r\nSystem.Int32[]\r\n~~~\r\n\r\nI checked online:\r\n\r\nhttps://stackoverflow.com/questions/16265247\r\n\r\nand people suggest to loop through the array. Is that really necessary? Many\r\nother languages dont require that, like Go:\r\n\r\n~~~go\r\npackage main\r\nimport \"fmt\"\r\nfunc main() {\r\n   a1 := []int{10, 20}\r\n   fmt.Println(a1)\r\n}\r\n~~~\r\n\r\nNim:\r\n\r\n~~~nim\r\nvar a1 = [10, 20]\r\necho a1\r\n~~~\r\n\r\nD:\r\n\r\n~~~d\r\nimport std.stdio;\r\nvoid main() {\r\n   auto a1 = [10, 20];\r\n   a1.writeln;\r\n}\r\n~~~\r\n\r\nJavaScript:\r\n\r\n~~~js\r\nlet a1 = [10, 20];\r\nconsole.log(a1);\r\n~~~\r\n\r\nPython:\r\n\r\n~~~py\r\na1 = [10, 20]\r\nprint(a1)\r\n~~~\r\n","Url":"https://github.com/dotnet/coreclr/issues/27960","RelatedDescription":"Open issue \"Print array\" (#27960)"},{"Id":"530496346","IsPullRequest":true,"CreatedAt":"2019-11-29T22:01:19","Actor":"janvorli","Number":"27959","RawContent":null,"Title":"Port to 3.1 - Fix out of range access in GetRecycleMemoryInfo","State":"open","Body":"Customer impact\r\n---\r\n\r\nRuntime crash or hang within a few seconds in certain types of Linux virtualized environments (e.g. OpenVZ)\r\n\r\nRegression?\r\n---\r\nRegression from 2.1, introduced by https://github.com/dotnet/coreclr/pull/23824\r\n\r\nRisk\r\n---\r\nLow\r\n\r\n---\r\n\r\nPorts change #26873 to release 3.1 branch.\r\n\r\nOn OpenVZ virtualized linux, GetCurrentProcessorNumber which uses sched_getcpu()\r\ncan return a value greater than the number of processors reported by\r\nsched_getaffinity with CPU_COUNT or sysconf(_SC_NPROCESSORS_ONLN).\r\nFor example, taskset -c 2,3 ./MyApp will make CPU_COUNT be 2 but\r\nsched_getcpu() can return 2 or 3, and OpenVZ kernel can make\r\nsysconf(_SC_NPROCESSORS_ONLN) return a limited cpu count but\r\nsched_getcpu() still report the real processor number.\r\n\r\nExample of affinity vs current CPU id on OpenVZ:\r\nnproc: 8\r\nnprocOnline: 1\r\naffinity: 1, 0, 0, 0, 0, 0, 0, 0, cpuid: 2\r\naffinity: 1, 0, 0, 0, 0, 0, 0, 0, cpuid: 2\r\naffinity: 1, 0, 0, 0, 0, 0, 0, 0, cpuid: 2\r\naffinity: 1, 0, 0, 0, 0, 0, 0, 0, cpuid: 2\r\naffinity: 1, 0, 0, 0, 0, 0, 0, 0, cpuid: 2\r\naffinity: 1, 0, 0, 0, 0, 0, 0, 0, cpuid: 5\r\naffinity: 1, 0, 0, 0, 0, 0, 0, 0, cpuid: 5","Url":"https://github.com/dotnet/coreclr/pull/27959","RelatedDescription":"Open PR \"Port to 3.1 - Fix out of range access in GetRecycleMemoryInfo\" (#27959)"},{"Id":"530496338","IsPullRequest":true,"CreatedAt":"2019-11-29T22:01:15","Actor":"janvorli","Number":"27958","RawContent":null,"Title":"Port to 3.1 - Fix VirtualMemoryLogging::logRecords overflow","State":"open","Body":"Issue: https://github.com/dotnet/coreclr/issues/27547\r\n\r\nCustomer impact\r\n---\r\n\r\nCrash or hang in long running (days) processes on Linux, triggered by runtime executing 2 billion of  virtual memory operations.\r\n\r\nRegression?\r\n---\r\n\r\nNot a regression - the bug is present since .NET Core 1.0. Windows/Linux reliability gap.\r\n\r\nRisk\r\n---\r\nLow\r\n\r\n----\r\n\r\nwhen VirtualMemoryLogging::recordNumber increments from LONG_MAX,\r\nit became negative number, and the result of i % MaxRecords became\r\na number from -127 to 0.\r\n\r\nWhen that happens we will ovewrite CRITICAL_SECTION virtual_critsec\r\nwhich are stored in bss right before logRecords with garbage data.\r\nThen most likely the process will have a GC hang with one or more\r\nGC threads stuck trying to enter or leave critical section.\r\n\r\nThe fix is to ensure ULONG value are passed to modulo operation.","Url":"https://github.com/dotnet/coreclr/pull/27958","RelatedDescription":"Open PR \"Port to 3.1 - Fix VirtualMemoryLogging::logRecords overflow\" (#27958)"},{"Id":"530496332","IsPullRequest":true,"CreatedAt":"2019-11-29T22:01:12","Actor":"janvorli","Number":"27957","RawContent":null,"Title":"Port to 3.1 - Fix getting affinity set on MUSL on Jetson TX2","State":"open","Body":"Customer impact\r\n---\r\n\r\nPrevents running Linux Alpine tests on checked runtime on Jetson TX2 ARM boards used by our lab. This bug causes the checked runtime to assert and crash during startup on this board.\r\n\r\nCustomers may see degraded GC performance on Jetson TX2 and similar devices.\r\n\r\nRegression?\r\n---\r\n\r\nRegression from 2.1, introduced by the docker/cgroup changes.\r\n\r\nRisk\r\n---\r\nLow\r\n\r\n----\r\nPorts https://github.com/dotnet/runtime/pull/206 to release/3.1.\r\n\r\nThe code in PAL_GetCurrentThreadAffinitySet relied on the fact that the\r\nnumber of processors reported as configured in the system is always\r\nlarger than the maximum CPU index. However, it turns out that it is not\r\ntrue on some devices / distros. The Jetson TX2 reports CPUs 0, 3, 4 and\r\n5 in the affinity mask and the 1 and 2 are never reported. GLIBC reports\r\n6 as the number of configured CPUs, however MUSL reports just 4. The\r\nPAL_GetCurrentThreadAffinitySet was using the number of CPUs reported as\r\nconfigured as the upper bound for scanning affinity set, so on Jetson\r\nTX2, the affinity mask returned had just two bits set while there were\r\n4 CPUs. That triggered an assert in the GCToOSInterface::Initialize.\r\n\r\nThis change fixes that by reading the maximum CPU index from the\r\n/proc/cpuinfo. It falls back to using the number of processors\r\nconfigured when the /proc/cpuinfo is not available (on macOS, FreeBSD, ...)\r\n\r\nFixes https://github.com/dotnet/runtime/issues/170","Url":"https://github.com/dotnet/coreclr/pull/27957","RelatedDescription":"Open PR \"Port to 3.1 - Fix getting affinity set on MUSL on Jetson TX2\" (#27957)"},{"Id":"530130188","IsPullRequest":false,"CreatedAt":"2019-11-29T02:44:51","Actor":"Daniel15","Number":"27955","RawContent":null,"Title":"Segmentation fault when running .NET Core 3.0 app on OpenVZ","State":"open","Body":"I have a .NET Core app that's a fairly basic gRPC service (unfortunately not open source yet, so I can't link to the source at the moment). On one particular server, it's throwing a segmentation fault as soon as I run it:\r\n```\r\nASPNETCORE_ENVIRONMENT=Production ASPNETCORE_URLS=http://*:54561 ./TestApp\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Now listening on: http://[::]:54561\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Application started. Press Ctrl+C to shut down.\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Hosting environment: Production\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Content root path: /opt/exampleapp-worker\r\nSegmentation fault\r\n```\r\n\r\nIn fact, I'm seeing this for a very basic ASP.NET website too (just one custom middleware using `app.Run`).\r\n\r\nBacktrace from lldb + SOS:\r\n```\r\n* thread #7, name = 'TestApp', stop reason = signal SIGSEGV: invalid address (fault address: 0x0)\r\n  * frame #0: 0x00007ffff7019b3d libcoreclr.so`ThreadpoolMgr::GetRecycledMemory(ThreadpoolMgr::MemType) [inlined] ThreadpoolMgr::RecycledListInfo::Remove() at win32threadpool.h:655\r\n    frame #1: 0x00007ffff7019aa5 libcoreclr.so`ThreadpoolMgr::GetRecycledMemory(memType=<unavailable>) at win32threadpool.cpp:1674\r\n    frame #2: 0x00007ffff715e464 libcoreclr.so`UnManagedPerAppDomainTPCount::QueueUnmanagedWorkRequest(unsigned int (*)(void*), void*) [inlined] ThreadpoolMgr::MakeWorkRequest(unsigned int (*)(void*), void*) at win32threadpool.h:367\r\n    frame #3: 0x00007ffff715e45a libcoreclr.so`UnManagedPerAppDomainTPCount::QueueUnmanagedWorkRequest(this=0x00007ffff75dd640, function=(libcoreclr.so`ThreadpoolMgr::AsyncTimerCallbackCompletion(void*) at win32threadpool.cpp:4765), context=0x0000000000738290)(void*), void*) at threadpoolrequest.cpp:356\r\n    frame #4: 0x00007ffff701d100 libcoreclr.so`ThreadpoolMgr::FireTimers() at win32threadpool.cpp:855\r\n    frame #5: 0x00007ffff701d088 libcoreclr.so`ThreadpoolMgr::FireTimers() at win32threadpool.cpp:4710\r\n    frame #6: 0x00007ffff701cd41 libcoreclr.so`ThreadpoolMgr::TimerThreadFire() at win32threadpool.cpp:4598\r\n    frame #7: 0x00007ffff701cc15 libcoreclr.so`ThreadpoolMgr::TimerThreadStart(p=<unavailable>) at win32threadpool.cpp:4569\r\n    frame #8: 0x00007ffff732c86d libcoreclr.so`CorUnix::CPalThread::ThreadEntry(pvParam=0x0000000000737530) at thread.cpp:1807\r\n    frame #9: 0x00007ffff7fb1fa3 libpthread.so.0`start_thread(arg=<unavailable>) at pthread_create.c:486\r\n    frame #10: 0x00007ffff7bbc4cf libc.so.6`__GI___clone at clone.S:95\r\n```\r\n\r\nDebian stable (buster)\r\n\r\n```\r\n$ apt list --installed | grep dotnet\r\n\r\nWARNING: apt does not have a stable CLI interface. Use with caution in scripts.\r\n\r\ndotnet-host/buster,now 3.0.1-1 amd64 [installed,automatic]\r\ndotnet-hostfxr-3.0/buster,now 3.0.1-1 amd64 [installed,automatic]\r\ndotnet-runtime-3.0/buster,now 3.0.1-1 amd64 [installed]\r\ndotnet-runtime-deps-3.0/buster,now 3.0.1-1 amd64 [installed,automatic]\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27955","RelatedDescription":"Open issue \"Segmentation fault when running .NET Core 3.0 app on OpenVZ\" (#27955)"},{"Id":"529602760","IsPullRequest":true,"CreatedAt":"2019-11-28T15:39:53","Actor":"jashook","Number":"27954","RawContent":null,"Title":"Disable formatting jobs in release/3.1","State":"closed","Body":"/cc @hoyosjs ","Url":"https://github.com/dotnet/coreclr/pull/27954","RelatedDescription":"Closed or merged PR \"Disable formatting jobs in release/3.1\" (#27954)"},{"Id":"529572120","IsPullRequest":false,"CreatedAt":"2019-11-28T02:57:12","Actor":"mikernet","Number":"27953","RawContent":null,"Title":"RuntimeBinderException when dynamically casting private enum type","State":"closed","Body":"It took me way too long to figure out what the heck was going on here and isolate the problem because the code where this is happening is fairly complex and anytime I would try to simplify it to write a simple repro it would infuriatingly start working again...but I finally got it, and here it is:\r\n\r\n```c#\r\nvoid Main()\r\n{\t\r\n        // Works fine\r\n\tSomeClass.Method1().Dump(); \r\n\r\n        // RuntimeBinderException: Cannot convert type 'System.Enum' to 'decimal'\r\n\tSomeClass.Method2().Dump();\r\n}\r\n\r\npublic static class SomeClass {\r\n\tpublic static bool Method1()\r\n\t{\r\n\t\treturn (decimal)(dynamic)Test.A == (decimal)(dynamic)Test.A;\r\n\t}\r\n\t\r\n\tpublic static bool Method2()\r\n\t{\r\n\t\treturn CompareDecimalValues(Test.A, Test.A);\r\n\t}\r\n\r\n\tprivate enum Test\r\n\t{\r\n\t\tA = -100,\r\n\t}\r\n}\r\n\r\npublic static bool CompareDecimalValues<T>(T value1, T value2) where T : unmanaged, Enum\r\n{\r\n\treturn (decimal)(dynamic)value1 == (decimal)(dynamic)value2;\r\n}\r\n```\r\n\r\nIf `CompareDecimalValues()` is inside the same assembly then changing the enum to internal or public makes `Method2` work. If `CompareDecimalValues` is outside the assembly then the enum must be changed to public for it to work. \r\n\r\nBasically, it seems like the method doing the dynamic cast must have visibility of the enum type otherwise it fails.\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/27953","RelatedDescription":"Closed issue \"RuntimeBinderException when dynamically casting private enum type\" (#27953)"},{"Id":"529055217","IsPullRequest":false,"CreatedAt":"2019-11-27T01:08:06","Actor":"VSadov","Number":"27951","RawContent":null,"Title":"[Pinned Object Heap] Need to generalize GC notification API","State":"open","Body":"The `GC.RegisterForFullGCNotification` API takes a separate parameter for LOH. Most likely need another overload for POH","Url":"https://github.com/dotnet/coreclr/issues/27951","RelatedDescription":"Open issue \"[Pinned Object Heap] Need to generalize GC notification API\" (#27951)"},{"Id":"528951170","IsPullRequest":true,"CreatedAt":"2019-11-26T20:19:50","Actor":"dotnet-maestro-bot","Number":"27950","RawContent":null,"Title":"Update BuildTools to preview1-04626-03 (release/2.2)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/27950","RelatedDescription":"Open PR \"Update BuildTools to preview1-04626-03 (release/2.2)\" (#27950)"},{"Id":"537150704","IsPullRequest":false,"CreatedAt":"2019-11-15T16:20:09","Actor":"andrewmcclellankibo","Number":"27970","RawContent":null,"Title":"System.Threading.Timer Not Running On Ubuntu server","State":"open","Body":"# System.Threading.Timer Not Running On Ubuntu server\r\n\r\n\r\n# General\r\nCreated a worker service project, used a background service to create a timer function that followed:\r\nhttps://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-3.0&tabs=visual-studio\r\n\r\n\r\nWhen executing: running locally on windows, timer events trigger as expected.\r\n\r\nDeployed to ubuntu server: timer events are never triggered.\r\nVerified that the app is running, and no issues instantiating the timer, it just never actually triggers the timer.\r\n","Url":"https://github.com/dotnet/coreclr/issues/27970","RelatedDescription":"Open issue \"System.Threading.Timer Not Running On Ubuntu server\" (#27970)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"544255363","IsPullRequest":true,"CreatedAt":"2019-12-31T19:26:05","Actor":"wli3","Number":"13167","RawContent":null,"Title":"[WIP] Disable useapphost on mac by default 3.0.1xx","State":"open","Body":"Need https://github.com/dotnet/sdk/pull/4019 to be in first","Url":"https://github.com/dotnet/cli/pull/13167","RelatedDescription":"Open PR \"[WIP] Disable useapphost on mac by default 3.0.1xx\" (#13167)"},{"Id":"544096255","IsPullRequest":true,"CreatedAt":"2019-12-31T05:49:31","Actor":"wli3","Number":"13166","RawContent":null,"Title":"[WIP] test CI","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/13166","RelatedDescription":"Open PR \"[WIP] test CI\" (#13166)"},{"Id":"544058113","IsPullRequest":true,"CreatedAt":"2019-12-31T02:15:39","Actor":"dotnet-maestro[bot]","Number":"13165","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191230.1\r\n- **Date Produced**: 12/31/2019 12:16 AM\r\n- **Commit**: 71f48b3241b93c00998336f947d146f57de93f4e\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.19630.1\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13165","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13165)"},{"Id":"542461477","IsPullRequest":true,"CreatedAt":"2019-12-28T02:13:29","Actor":"dotnet-maestro[bot]","Number":"13163","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191225.2\r\n- **Date Produced**: 12/26/2019 6:10 AM\r\n- **Commit**: 4a9be5b8dfb0c287883d3fd79c307f2bcfb41119\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.19625.2\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13163","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13163)"},{"Id":"543023695","IsPullRequest":true,"CreatedAt":"2019-12-28T00:35:57","Actor":"dotnet-maestro[bot]","Number":"13164","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.5.0.6355\r\n- **Date Produced**: 12/24/2019 5:03 AM\r\n- **Commit**: cb402b5a3340ab5b2605ecc72de7f70aaac95344\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.5.0-preview.2.6355\r\n\r\n[marker]: <> (End:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13164","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from nuget/nuget.client\" (#13164)"},{"Id":"540635534","IsPullRequest":true,"CreatedAt":"2019-12-20T08:34:16","Actor":"dotnet-maestro[bot]","Number":"13162","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191219.4\r\n- **Date Produced**: 12/20/2019 5:39 AM\r\n- **Commit**: 36cf3588bae9485ab2ac20104ee69de8270ad412\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.19619.4\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13162","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13162)"},{"Id":"539860442","IsPullRequest":true,"CreatedAt":"2019-12-18T19:38:22","Actor":"dotnet-maestro[bot]","Number":"13161","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.5.0.6330\r\n- **Date Produced**: 12/4/2019 1:59 AM\r\n- **Commit**: 6f7be0986028256f05c894eac2f7816c85611984\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.5.0-preview.1.6330\r\n\r\n[marker]: <> (End:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13161","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from nuget/nuget.client\" (#13161)"},{"Id":"537838019","IsPullRequest":true,"CreatedAt":"2019-12-18T01:38:23","Actor":"dotnet-maestro[bot]","Number":"13160","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191217.15\r\n- **Date Produced**: 12/18/2019 12:36 AM\r\n- **Commit**: 7e7e3eab372d4c76824ba8c31b05f11b94b8a057\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.19617.15\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13160","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13160)"},{"Id":"537217099","IsPullRequest":true,"CreatedAt":"2019-12-13T22:07:36","Actor":"dotnet-maestro[bot]","Number":"13158","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191213.8\r\n- **Date Produced**: 12/13/2019 8:24 PM\r\n- **Commit**: e98d59e0cc80d22c6c56e5818cd62583973b6657\r\n- **Branch**: refs/heads/release/3.1.2xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.200-preview.19613.8\r\n\r\n[marker]: <> (End:bdd984ca-7112-4d1b-d452-08d76e1d3434)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13158","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/sdk\" (#13158)"},{"Id":"537732084","IsPullRequest":false,"CreatedAt":"2019-12-13T19:28:51","Actor":"Thraka","Number":"13159","RawContent":null,"Title":"Powershell Install script is not signed","State":"open","Body":"#### Originally from\r\n_@jozefizso on Friday, December 13, 2019 2:28:43 PM_\r\n\r\nWhy is the PowerShell script unsigned? How do we know we are running a legitimate script when it's downloaded from internet on each build?\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: a2e484a9-5e0c-eb3e-1413-7b507c4fa07d\r\n* Version Independent ID: 5bc7caa5-f1c2-d7d5-fe02-80c65cca9672\r\n* Content: [dotnet-install scripts - .NET Core CLI](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-install-script)\r\n* Content Source: [docs/core/tools/dotnet-install-script.md](https://github.com/dotnet/docs/blob/master/docs/core/tools/dotnet-install-script.md)\r\n* Product: **dotnet-core**\r\n* Technology: **dotnet-cli**\r\n* GitHub Login: @mairaw\r\n* Microsoft Alias: **mairaw**\r\n\r\n_Copied from original issue: dotnet/docs#16242_","Url":"https://github.com/dotnet/cli/issues/13159","RelatedDescription":"Open issue \"Powershell Install script is not signed\" (#13159)"},{"Id":"536563234","IsPullRequest":true,"CreatedAt":"2019-12-11T23:47:19","Actor":"dotnet-maestro[bot]","Number":"13156","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from aspnet/aspnetcore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:af9b1a64-20ee-4b07-c5da-08d76fa9c820)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191211.11\r\n- **Date Produced**: 12/11/2019 10:22 PM\r\n- **Commit**: 4b235df669038064ca539bec4bc732610b1eea3a\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.2-servicing.19611.11\r\n\r\n[marker]: <> (End:af9b1a64-20ee-4b07-c5da-08d76fa9c820)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13156","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from aspnet/aspnetcore\" (#13156)"},{"Id":"536589584","IsPullRequest":true,"CreatedAt":"2019-12-11T23:26:46","Actor":"wli3","Number":"13157","RawContent":null,"Title":"Revert MicrosoftAspNetCoreDeveloperCertificatesXPlatPackageVersion to…","State":"closed","Body":"… match ref pack","Url":"https://github.com/dotnet/cli/pull/13157","RelatedDescription":"Closed or merged PR \"Revert MicrosoftAspNetCoreDeveloperCertificatesXPlatPackageVersion to…\" (#13157)"},{"Id":"536104877","IsPullRequest":true,"CreatedAt":"2019-12-11T15:00:12","Actor":"mmitche","Number":"13155","RawContent":null,"Title":"[release/3.1.2xx] Revert back to 3.1.0 runtime versions","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13155","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Revert back to 3.1.0 runtime versions\" (#13155)"},{"Id":"534626066","IsPullRequest":true,"CreatedAt":"2019-12-11T02:41:56","Actor":"wli3","Number":"13152","RawContent":null,"Title":"Update stage0","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13152","RelatedDescription":"Closed or merged PR \"Update stage0\" (#13152)"},{"Id":"534221922","IsPullRequest":true,"CreatedAt":"2019-12-10T20:53:32","Actor":"mmitche","Number":"13147","RawContent":null,"Title":"[release/3.0.1xx] Change to name/value variables and remove unused","State":"closed","Body":"- Remove old legacy PB_ values that are no longer used\r\n- Change to the name, value pair approach for variables.\r\nThis will allow internal builds to add variable groups required for accessing internal runtimes","Url":"https://github.com/dotnet/cli/pull/13147","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Change to name/value variables and remove unused\" (#13147)"},{"Id":"535519187","IsPullRequest":true,"CreatedAt":"2019-12-10T16:22:07","Actor":"dotnet-maestro-bot","Number":"13154","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* mmitche\n* dotnet-maestro[bot]\n* wli3\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/cli merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/cli HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/cli/pull/13154","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#13154)"},{"Id":"533589968","IsPullRequest":true,"CreatedAt":"2019-12-09T18:21:55","Actor":"mmitche","Number":"13143","RawContent":null,"Title":"[release/3.1.1xx] Update to 3.1.100 rtm sdk","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13143","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update to 3.1.100 rtm sdk\" (#13143)"},{"Id":"533591152","IsPullRequest":true,"CreatedAt":"2019-12-09T17:03:19","Actor":"mmitche","Number":"13144","RawContent":null,"Title":"[release/3.1.2xx] Update to 3.1.100 rtm sdk","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13144","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update to 3.1.100 rtm sdk\" (#13144)"},{"Id":"534466510","IsPullRequest":true,"CreatedAt":"2019-12-09T05:23:18","Actor":"dotnet-maestro[bot]","Number":"13148","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191207.3\r\n- **Date Produced**: 12/7/2019 6:35 PM\r\n- **Commit**: 4d80b9cfa53e309c8f685abff3512f60c3d8a3d1\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19607.3\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13148","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#13148)"},{"Id":"534646792","IsPullRequest":true,"CreatedAt":"2019-12-09T02:28:15","Actor":"wli3","Number":"13153","RawContent":null,"Title":"Update stage 0","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13153","RelatedDescription":"Closed or merged PR \"Update stage 0\" (#13153)"},{"Id":"534466950","IsPullRequest":true,"CreatedAt":"2019-12-08T00:30:21","Actor":"mmitche","Number":"13151","RawContent":null,"Title":"[release/3.0.1xx] Enable official builds on internal branches","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13151","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Enable official builds on internal branches\" (#13151)"},{"Id":"534466590","IsPullRequest":true,"CreatedAt":"2019-12-08T00:06:50","Actor":"dotnet-maestro[bot]","Number":"13150","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:94c24b6f-4197-4be9-5768-08d76e1d56cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191207.3\r\n- **Date Produced**: 12/7/2019 6:35 PM\r\n- **Commit**: 4d80b9cfa53e309c8f685abff3512f60c3d8a3d1\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19607.3\r\n\r\n[marker]: <> (End:94c24b6f-4197-4be9-5768-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13150","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/arcade\" (#13150)"},{"Id":"534466539","IsPullRequest":true,"CreatedAt":"2019-12-08T00:06:23","Actor":"dotnet-maestro[bot]","Number":"13149","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191207.3\r\n- **Date Produced**: 12/7/2019 6:35 PM\r\n- **Commit**: 4d80b9cfa53e309c8f685abff3512f60c3d8a3d1\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19607.3\r\n\r\n[marker]: <> (End:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13149","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#13149)"},{"Id":"533540123","IsPullRequest":true,"CreatedAt":"2019-12-06T18:06:21","Actor":"wli3","Number":"13142","RawContent":null,"Title":"Update branding to \"preview\"","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13142","RelatedDescription":"Closed or merged PR \"Update branding to \"preview\"\" (#13142)"},{"Id":"533696470","IsPullRequest":true,"CreatedAt":"2019-12-06T02:25:32","Actor":"dotnet-maestro[bot]","Number":"13146","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2edc82a1-19d9-431c-901b-08d76d41c6c3)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191205.2\r\n- **Date Produced**: 12/6/2019 1:04 AM\r\n- **Commit**: 13abe7e2749d95337e8d72efdc5b71611815fd43\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.1-servicing.19605.2\r\n\r\n[marker]: <> (End:2edc82a1-19d9-431c-901b-08d76d41c6c3)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13146","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/templating\" (#13146)"},{"Id":"533696469","IsPullRequest":true,"CreatedAt":"2019-12-06T02:20:30","Actor":"dotnet-maestro[bot]","Number":"13145","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191205.2\r\n- **Date Produced**: 12/6/2019 1:04 AM\r\n- **Commit**: 13abe7e2749d95337e8d72efdc5b71611815fd43\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.1-servicing.19605.2\r\n\r\n[marker]: <> (End:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13145","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/templating\" (#13145)"},{"Id":"533009789","IsPullRequest":true,"CreatedAt":"2019-12-05T19:18:59","Actor":"dotnet-maestro[bot]","Number":"13139","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:94c24b6f-4197-4be9-5768-08d76e1d56cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191203.16\r\n- **Date Produced**: 12/3/2019 9:25 PM\r\n- **Commit**: 8e47254f93b276c974968aff83222f89ec3931ed\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19603.16\r\n\r\n[marker]: <> (End:94c24b6f-4197-4be9-5768-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13139","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/arcade\" (#13139)"},{"Id":"533009481","IsPullRequest":true,"CreatedAt":"2019-12-05T19:18:18","Actor":"dotnet-maestro[bot]","Number":"13138","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191203.16\r\n- **Date Produced**: 12/3/2019 9:25 PM\r\n- **Commit**: 8e47254f93b276c974968aff83222f89ec3931ed\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19603.16\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13138","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#13138)"},{"Id":"533505361","IsPullRequest":true,"CreatedAt":"2019-12-05T19:16:24","Actor":"mmitche","Number":"13141","RawContent":null,"Title":"Use Microsoft.NETCore.App.Internal for runtime version","State":"closed","Body":"The final non-suffixed build is not written to a non-suffixed directory. \r\n\r\nAlso reorder a pinned dependency to work around potential https://github.com/dotnet/arcade/issues/4067","Url":"https://github.com/dotnet/cli/pull/13141","RelatedDescription":"Closed or merged PR \"Use Microsoft.NETCore.App.Internal for runtime version\" (#13141)"},{"Id":"533010316","IsPullRequest":true,"CreatedAt":"2019-12-05T19:10:00","Actor":"dotnet-maestro[bot]","Number":"13140","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191203.16\r\n- **Date Produced**: 12/3/2019 9:25 PM\r\n- **Commit**: 8e47254f93b276c974968aff83222f89ec3931ed\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19603.16\r\n\r\n[marker]: <> (End:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13140","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#13140)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"544232543","IsPullRequest":false,"CreatedAt":"2019-12-31T17:31:26","Actor":"usaguerrilla","Number":"1672","RawContent":null,"Title":"SerialDevice.InputStream.ReadAsync continues on wrong thread","State":"closed","Body":".NET Standard 2.1 (couldn't change that for some reason)\r\nWindows 10, version 1903, Build 18362\r\nx64\r\n\r\n```\r\nint REQUEST_LENGTH = 8;\r\nint RESPONSE_LENGTH = 7;\r\n\r\nbyte[] request = new byte[REQUEST_LENGTH];\r\nbyte[] response = new byte[RESPONSE_LENGTH];\r\n\r\nSerialDevice serialDevice = await SerialDevice.FromIdAsync(serialDeviceId);\r\n\r\nusing (CancellationTokenSource cancellationTokenSource = new CancellationTokenSource(TimeSpan.FromSeconds(1)))\r\n{\r\n   Console.WriteLine(\"A=\" + Thread.CurrentThread.ManagedThreadId);\r\n   Task<IBuffer> readTask = serialDevice.InputStream.ReadAsync(response.AsBuffer(), RESPONSE_LENGTH, InputStreamOptions.None)\r\n                                                    .AsTask(cancellationTokenSource.Token);\r\n   await serialDevice.OutputStream.WriteAsync(request.AsBuffer());\r\n   Console.WriteLine(\"B=\" + Thread.CurrentThread.ManagedThreadId);\r\n   await Task.WhenAll(readTask);\r\n   Console.WriteLine(\"C=\" + Thread.CurrentThread.ManagedThreadId);\r\n}\r\n```\r\n\r\nThis results in the following output:\r\n\r\n```\r\nA=12\r\nB=12\r\nC=8\r\n```\r\n\r\nI didn't ask for thread switch in any of the calls.\r\n\r\nAnother issues is that ReadAsync ignores ReadTimeout / WriteTimeout. Just hangs forever if UART device never replies back.","Url":"https://github.com/dotnet/standard/issues/1672","RelatedDescription":"Closed issue \"SerialDevice.InputStream.ReadAsync continues on wrong thread\" (#1672)"},{"Id":"542974619","IsPullRequest":false,"CreatedAt":"2019-12-27T19:58:14","Actor":"mbrautgithub","Number":"1671","RawContent":null,"Title":"Referring  Microsoft.AspNetCore.App from netstandard2.1","State":"open","Body":"Hi Team,\r\n\r\nI am currently upgrading from .netcoreapp2.1 to netcoreapp3.1 and new to .Net technology.\r\n\r\nAlso, I have projects in my solution which are currently on netstandard2.0 and using below package references.\r\n\r\n<ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Authentication.OAuth\" Version=\"2.2.0\" />\r\n</ItemGroup>\r\n\r\nThese references are become absolute since .netcoreapp3.1 and if I would want to continue using these I need to use  FrameworkReference Include=\"Microsoft.AspNetCore.App\"  \r\n\r\nHowever I am getting below error.\r\nNETSDK1073\tThe FrameworkReference 'Microsoft.AspNetCore.App' was not recognized\tC:\\Program Files\\dotnet\\sdk\\3.1.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.FrameworkReferenceResolution.targets\t283\t\t\r\n\r\nConfig file \r\n\r\nProject Sdk=\"Microsoft.NET.Sdk\"\r\n\r\n  PropertyGroup\r\n    TargetFrameworknetstandard2.1TargetFramework\r\n  PropertyGroup\r\n\r\n  ItemGroup\r\n   FrameworkReference Include=\"Microsoft.AspNetCore.App\" \r\n    PackageReference Include=\"Microsoft.Extensions.Caching.StackExchangeRedis\" Version=\"3.1.0\" \r\n  ItemGroup\r\n\r\n\r\nProjec\r\n\r\nPlease help me on the same\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1671","RelatedDescription":"Open issue \"Referring  Microsoft.AspNetCore.App from netstandard2.1\" (#1671)"},{"Id":"542015240","IsPullRequest":false,"CreatedAt":"2019-12-24T06:48:19","Actor":"tanveerbadar","Number":"1670","RawContent":null,"Title":"Potentially Incorrect Terminology in .net Standard FAQ","State":"open","Body":"The [FAQ document ](https://github.com/dotnet/standard/blob/master/docs/faq.md#is-appdomain-part-of-net-standard)for .net standard mentions this:\r\n\r\n> Using #if, also called cross-compiling\r\n\r\nShouldn't it say \"conditional compilation\" instead?","Url":"https://github.com/dotnet/standard/issues/1670","RelatedDescription":"Open issue \"Potentially Incorrect Terminology in .net Standard FAQ\" (#1670)"},{"Id":"541368388","IsPullRequest":false,"CreatedAt":"2019-12-21T20:30:37","Actor":"Emdot","Number":"1669","RawContent":null,"Title":"T4 cannot find netstandard 2.1","State":"open","Body":"When a T4 compile-time template references a netstandard 2.1 assembly, if the template's code tries to instantiate a class from that assembly it generates an error:\r\n\r\n```\r\nRunning transformation: System.IO.FileNotFoundException: Could not load file or assembly 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified.\r\nFile name: 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'\r\n   at Microsoft.VisualStudio.TextTemplatingDF0B46F7DFCCCF2CAD1FBB2E3A8D5FC6225E74132FDDBD12D44030F822D8B29A6DFFE0B2FED81F4BED62AEA63823EBB5C1182E33103987C1DA7368F9D1022F09.GeneratedTextTransformation.TransformText()\r\n   at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n   at Microsoft.VisualStudio.TextTemplating.TransformationRunner.PerformTransformation()\r\n```\r\n\r\nThis occurs even if the project containing the T4 template targets netstandard 2.1.\r\n\r\nTest case attached: just right-click TT.tt and select Run Custom Tool. The error message appears.\r\n\r\n[NetStandardT4.zip](https://github.com/dotnet/standard/files/3991786/NetStandardT4.zip)\r\n\r\nMicrosoft Visual Studio Community 2019, v 16.4.0; 64-bit PC; 64-bit Windows 10. I'm using the Devart Template Editor extension, v 1.0.11.0. I do not see this error when the dependency targets netstandard 2,0 instead.","Url":"https://github.com/dotnet/standard/issues/1669","RelatedDescription":"Open issue \"T4 cannot find netstandard 2.1\" (#1669)"},{"Id":"540785622","IsPullRequest":false,"CreatedAt":"2019-12-20T06:05:06","Actor":"Michael-Baumanns","Number":"1668","RawContent":null,"Title":"Runtime Standard - Core CLR / Core RT etc.","State":"open","Body":"Hello everybody,\r\n\r\nFirst of all I hope this is the right place for my question.\r\n\r\nIs there any specification about the expected types / methods who have to be implemented by a runtime implementation like core CLR or core RT? Do you have something like a runtime standard document?\r\n\r\nBest regards\r\n\r\nMichael","Url":"https://github.com/dotnet/standard/issues/1668","RelatedDescription":"Open issue \"Runtime Standard - Core CLR / Core RT etc.\" (#1668)"},{"Id":"538960639","IsPullRequest":false,"CreatedAt":"2019-12-17T10:01:53","Actor":"gulbanana","Number":"1667","RawContent":null,"Title":"Could we please get CallerArgumentExpressionAttribute in .NET Standard?","State":"open","Body":"It's not in ns2.1, so that's a missing feature from C# 8.","Url":"https://github.com/dotnet/standard/issues/1667","RelatedDescription":"Open issue \"Could we please get CallerArgumentExpressionAttribute in .NET Standard?\" (#1667)"},{"Id":"538783452","IsPullRequest":false,"CreatedAt":"2019-12-17T01:45:21","Actor":"pb-gs","Number":"1666","RawContent":null,"Title":"System.Net.PeerToPeer in .NET Standard","State":"open","Body":"Hey there,\r\n\r\nJust wondering if it is likely that .NET Standard will include classes from [`System.Net.PeerToPeer`](https://docs.microsoft.com/en-us/dotnet/api/system.net.peertopeer?view=netframework-4.8) (e.g. [`PeerNameResolver`](https://docs.microsoft.com/en-us/dotnet/api/system.net.peertopeer.peernameresolver?view=netframework-4.8)) or otherwise have peer name resolution protocol support?\r\n\r\nThank you.","Url":"https://github.com/dotnet/standard/issues/1666","RelatedDescription":"Open issue \"System.Net.PeerToPeer in .NET Standard\" (#1666)"},{"Id":"537929488","IsPullRequest":false,"CreatedAt":"2019-12-14T15:46:28","Actor":"shcummin","Number":"1665","RawContent":null,"Title":"<PackageReference> System.* when targeting NET Framework leads to ambiguity","State":"open","Body":"Related to Framework compat\r\n\r\nIn a project targeting 4.6, references:\r\n\r\n```\r\n    <PackageReference Include=\"System.ComponentModel.Annotations\" />\r\n    <PackageReference Include=\"System.ServiceModel.Primitives\" />\r\n```\r\n\r\nAnd:\r\n\r\n```\r\n    <Reference Include=\"System.ComponentModel.DataAnnotations\"  />\r\n    <Reference Include=\"System.ServiceModel\" />\r\n```\r\n\r\nAppear to be synonymous (because builds pass) when in reality:\r\n\r\n`<PackageReference>` is restoring packages, rewriting generated nupkg dependencies and introducing version complexity and binplacing new dlls (or facade dlls?)\r\n\r\n`<Reference>`, comparatively, is unambiguously depending on the Framework and not changing any nuget collateral.\r\n\r\nAs there does not appear to be a particularly compelling reason to use `<PackageReference>` in this way when targeting .NET Framework 4.5/4.6, and even doing this opens up compat issues such as Issue #1179 , then `<PackageReference>` for System.* packages net45/net46 should cause a build error in the msbuild/vs toolchain or cause a runtime error. [or there should be a doc describing why this is a bad idea]\r\n\r\n\r\n**Edit:** Additionally there is loads of confusion online:\r\n\r\nhttps://weblog.west-wind.com/posts/2019/Feb/19/Using-NET-Standard-with-Full-Framework-NET\r\n\r\n> As a side note a number of people pointed out to me that Paket - which is an alternate package manager for NuGet packages - considers versions of .NET 4.7.1 and older incompatible with .NET Standard so you can't actually install .NET Standard packages for those versions by default.\r\n> \r\n> Makes sense - **Microsoft has acknowledged that using .NET Standard on anything prior to 4.7.1 is not a good idea** and I would add using 4.7.1 is not optimal either, but alas it does work with some of the messy hackery described above.\r\n\r\nWhere did Microsoft acknowledge this in an official capacity?\r\n\r\nAnd, if this is the case, why does System.Servicemodel.Primitives.4.4.0.nuspec look like this:\r\n\r\n```\r\n      <group targetFramework=\".NETFramework4.5\" />\r\n      <group targetFramework=\".NETFramework4.6\">\r\n        <dependency id=\"NETStandard.Library\" version=\"1.6.1\" />\r\n      </group>\r\n      <group targetFramework=\".NETFramework4.6.1\" />\r\n\r\n```\r\n\r\nwhy does System.Servicemodel.Primitives.4.7.0.nuspec look like this:\r\n\r\n```\r\n      <group targetFramework=\".NETFramework4.5\" />\r\n      <group targetFramework=\".NETFramework4.6\">\r\n        <dependency id=\"NETStandard.Library\" version=\"2.0.3\" exclude=\"Build,Analyzers\" />\r\n      </group>\r\n      <group targetFramework=\".NETFramework4.6.1\" />\r\n```\r\n\r\nWhat is this package going to do on 4.5, 4.6, 4.6.1, 4.6.2?\r\n\r\nAnd the lib folders:\r\n\r\n![image](https://user-images.githubusercontent.com/28113572/70868825-433eaf80-1f39-11ea-9f5f-79d8de22bd97.png)\r\n\r\nWhy is the binplace different across 4.5, 4.6, 4.6.1, 4.6.2?\r\n\r\nBehavior seems to be: \r\n- 4.5 explicit discard/no-op\r\n- 4.6 binplace 1 dll\r\n- 4.6.1 binplace 2 dlls??\r\n- 4.6.2 - not called out, so .netstandard20 path is followed, (??) then for version S.SM.Primitives 4.4 there's 1 dll, and in S.SM.Primitive 4.7 there are 2 dlls.\r\n\r\nGiven this behavior, why would I want\r\n\r\n```\r\n    <PackageReference Include=\"System.ServiceModel.Primitives\" />\r\n```\r\n\r\nanywhere near a .NET 4.6.x project?\r\n\r\nThere seems to be some discussion of this sort of thing being a nuget restore warning here: https://github.com/NuGet/Home/issues/8376  however there seems to be also a possibility that the nuget authors forcefully break people targeting 4.5 thru to 4.6.2 which would be preferable to difficult to define behavior.\r\n","Url":"https://github.com/dotnet/standard/issues/1665","RelatedDescription":"Open issue \"<PackageReference> System.* when targeting NET Framework leads to ambiguity\" (#1665)"},{"Id":"536390167","IsPullRequest":false,"CreatedAt":"2019-12-11T15:41:06","Actor":"Jmales","Number":"1663","RawContent":null,"Title":"Can I import net472 project from a .netstandard project? Also, should I?","State":"closed","Body":"Imagine the following scenario:\r\n\r\nA------------------->B--------------------->C\r\n(**Net472**)----------->(**NetStandard**)--------->(**Net472**)\r\n\r\nMain project A in **NET framework,** referencing a **.Net Standard** project B which references a **NET Framework 472** project.\r\n\r\nIn theory, as **Net Standard** is a subset of **NET framework**, it shouldn't make sense that I can reference the whole from within a subset right? However, if I create a simple App with that structure I'm able to build and run it without errors or warnings.\r\n\r\nBUT, if I try this in other applications, mainly a big one that I'm porting to .NET Standard, I get warning in the **.NET Standard** projects referencing **.NET 472**. When is this warning raised after all?\r\n\r\n`C.csproj was resolved using '.NETFramework,Version=v4.7.2' instead of the project target framework '.NETStandard,Version=v2.0'. This project may not be fully compatible with your project.`\r\n\r\nAnd, can I or can't I reference a **NET472** project from within a **.NET Standard 2.0/2.1**?\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1663","RelatedDescription":"Closed issue \"Can I import net472 project from a .netstandard project? Also, should I?\" (#1663)"},{"Id":"535997897","IsPullRequest":false,"CreatedAt":"2019-12-10T21:14:54","Actor":"hrumhurum","Number":"1662","RawContent":null,"Title":".NET Standard 2.1 mscorlib misses type forwarder for System.Reflection.Emit.ILGenerator","State":"open","Body":".NET Standard 2.1 introduced availability of `System.Reflection.Emit.ILGenerator` class: https://docs.microsoft.com/en-us/dotnet/api/system.reflection.emit.ilgenerator?view=netstandard-2.1\r\n\r\nBut `mscorlib` assembly located at `C:\\Program Files\\dotnet\\packs\\NETStandard.Library.Ref\\2.1.0\\ref\\netstandard2.1\\mscorlib.dll` misses a corresponding type forwarder for `System.Reflection.Emit.ILGenerator`.\r\n\r\nThat omission causes a hole in type system integrity.","Url":"https://github.com/dotnet/standard/issues/1662","RelatedDescription":"Open issue \".NET Standard 2.1 mscorlib misses type forwarder for System.Reflection.Emit.ILGenerator\" (#1662)"},{"Id":"534875855","IsPullRequest":false,"CreatedAt":"2019-12-09T11:45:47","Actor":"IanKemp","Number":"1661","RawContent":null,"Title":"2.1 release timeline?","State":"open","Body":"It's been more than 2 years since Standard 2.0. We're already on Core 3.1 that's LTS, when can we expect the next version of Standard? Or is Standard dead and we should just use Core for everything going forward?","Url":"https://github.com/dotnet/standard/issues/1661","RelatedDescription":"Open issue \"2.1 release timeline?\" (#1661)"},{"Id":"529638047","IsPullRequest":true,"CreatedAt":"2019-11-28T01:14:42","Actor":"dotnet-maestro[bot]","Number":"1660","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1660","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1660)"},{"Id":"529573719","IsPullRequest":false,"CreatedAt":"2019-11-27T21:33:26","Actor":"timdoke","Number":"1659","RawContent":null,"Title":"Generic class operators derived from interface seems broken","State":"closed","Body":"Let's say I have a CaseInsensitiveConcurrentDictionary.  The intention of it is to be interchangeable with regular Dictionary implementations -- where, we always use the interface IDictionary<T, T> to interact with either.  Both Dictionary and ConcurrentDictionary implement IDictionary interface members.\r\n\r\nThe class looks like this:\r\n\r\n\r\n    public class CaseInsensitiveDictionary<TValue>\r\n        : ConcurrentDictionary<string, TValue>\r\n    {\r\n        public CaseInsensitiveDictionary()\r\n            : base(StringComparer.InvariantCultureIgnoreCase)\r\n        {\r\n        }\r\n\r\n        private CaseInsensitiveDictionary(IDictionary<string, TValue> attributes)\r\n            : this()\r\n        {\r\n            AddRange(attributes);\r\n        }\r\n\r\n        public void Add(string key, TValue value)\r\n        {\r\n            this.TryAdd(key, value);\r\n        }\r\n\r\n        public void AddRange(IDictionary<string, TValue> entries)\r\n        {\r\n            foreach (var item in entries)\r\n            {\r\n                this.TryAdd(item.Key, item.Value);\r\n            }\r\n        }\r\n\r\n        public static CaseInsensitiveDictionary<TValue> Create(IDictionary<string, TValue> attributes = null)\r\n        {\r\n            if (attributes == null)\r\n            {\r\n                return new CaseInsensitiveDictionary<TValue>();\r\n            }\r\n            return new CaseInsensitiveDictionary<TValue>(attributes);\r\n        }\r\n\r\n        public static implicit operator Dictionary<string, TValue>(CaseInsensitiveDictionary<TValue> data)\r\n        {\r\n            return new Dictionary<string, TValue>(data);\r\n        }\r\n\r\n        public static implicit operator CaseInsensitiveDictionary<TValue>(Dictionary<string, TValue> data)\r\n        {\r\n            return Create(data);\r\n        }\r\n\r\n    }\r\n\r\n\r\n`  \r\n\r\n\r\nLet's say then that we are trying to implicitly convert the ConcurrentDictionary to and from a dictionary.  To test, I wrote these methods:\r\n\r\n\r\n\r\n        public void FromDictionaryToCaseInsensitiveDictionaryTest()\r\n        {\r\n\r\n            Dictionary<string, string> dc2 = new Dictionary<string, string>();\r\n            dc2.Add(\"test1\", \"test1 value\");\r\n\r\n            var dc3 = (CaseInsensitiveDictionary<string>)dc2;\r\n            Console.WriteLine(\"FromDictionaryToCaseInsensitiveDictionaryTest success\");\r\n        }\r\n\r\n        public void FromIDictionaryToCaseInsensitiveDictionaryTest()\r\n        {\r\n            IDictionary<string, string> dc2 = new Dictionary<string, string>();\r\n            dc2.Add(\"test1\", \"test1 value\");\r\n\r\n            var dc3 = (CaseInsensitiveDictionary<string>)dc2;\r\n\r\n            Console.WriteLine(\"FromIDictionaryToCaseInsensitiveDictionaryTest success\");\r\n        }\r\n\r\n\r\n        public void FromCaseInsensitiveDictionaryToDictionaryTest()\r\n        {\r\n\r\n            var dc2 = new CaseInsensitiveDictionary<string>();\r\n            dc2.Add(\"test1\", \"test1 value\");\r\n\r\n            var dc3 = (Dictionary<string, string>)dc2;\r\n\r\n            Console.WriteLine(\"FromCaseInsensitiveDictionaryToDictionaryTest success\");\r\n\r\n        }\r\n\r\n\r\n\r\nThe first (FromDictionaryToCaseInsensitiveDictionaryTest) and third methods (FromCaseInsensitiveDictionaryToDictionaryTest) work fine and correctly use the operators.\r\n\r\nThe second one fails with this exception: System.InvalidCastException: 'Unable to cast object of type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' to type 'OpenToken.CaseInsensitiveDictionary`1[System.String]'.'\r\n.  In my opinion, FromIDictionaryToCaseInsensitiveDictionaryTest should work because the type is CaseInsensitiveDictionary and implements IDictionary.  If I do NOT have the first conversion operator, the first test method fails with this exact same error message, \r\n\r\nWith this evidence, it seems to me that something is missing when the runtime is looking for the appropriate operator.  FromIDictionaryToCaseInsensitiveDictionaryTest should work either from the Dictionary operator or automatically work because it implements the IDictionary interface.  (I cannot create an operator for IDictionary conversion because that is illegal).  \r\n\r\nPlease let me know if this is expected behavior and if there is some workaround for it.  This issue seems to be present in all versions of C#.\r\n\r\nThanks!\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1659","RelatedDescription":"Closed issue \"Generic class operators derived from interface seems broken\" (#1659)"},{"Id":"526765953","IsPullRequest":false,"CreatedAt":"2019-11-25T02:23:45","Actor":"arizvisa","Number":"1657","RawContent":null,"Title":"packages.microsoft.com: signature check for netstandard-targeting-pack-2.1.0 failed","State":"closed","Body":"Hey guys, the signature check for this package seems to be failing. Not sure what that actually means, but here's the checksum as of 2019/11/21 12:23 (CST).\r\n\r\n```\r\n# fetch https://packages.microsoft.com/fedora/30/prod/netstandard-targeting-pack-2.1.0-x64.rpm\r\nnetstandard-targeting-pack-2.1.0-x64.rpm 100% 2201944 2201944\r\n# openssl dgst -sha256 netstandard-targeting-pack-2.1.0-x64.rpm \r\nSHA256(netstandard-targeting-pack-2.1.0-x64.rpm)= 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480\r\n```\r\n\r\nThen with dnf actually complaining about it.\r\n```\r\n# dnf repository-packages packages-microsoft-com-prod install netstandard-targeting-pack-2.1                                                                                 \r\nenabling fedora-modular-debuginfo repository                                                                  \r\nenabling updates-modular-debuginfo repository       \r\nenabling updates-debuginfo repository                                                                         \r\nenabling fedora-debuginfo repository\r\nenabling rpmfusion-free-updates-debuginfo repository\r\nenabling rpmfusion-free-debuginfo repository                                                                  \r\nLast metadata expiration check: 0:13:30 ago on Thu 21 Nov 2019 12:03:15 PM CST.\r\nDependencies resolved.     \r\n==============================================================================================================\r\n Package                               Architecture  Version         Repository                          Size \r\n==============================================================================================================\r\nInstalling:\r\n netstandard-targeting-pack-2.1        x86_64        2.1.0-1         packages-microsoft-com-prod        2.1 M\r\n\r\nTransaction Summary\r\n==============================================================================================================\r\nInstall  1 Package\r\n\r\nTotal download size: 2.1 M\r\nInstalled size: 2.1 M\r\nIs this ok [y/N]: y\r\nDownloading Packages:\r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[FAILED] netstandard-targeting-pack-2.1.0-x64.rpm: No more mirrors to try - All mirrors were already tried without success\r\n```\r\n\r\nHopefully this doesn't entail the need for ir. Heh.","Url":"https://github.com/dotnet/standard/issues/1657","RelatedDescription":"Closed issue \"packages.microsoft.com: signature check for netstandard-targeting-pack-2.1.0 failed\" (#1657)"},{"Id":"527469491","IsPullRequest":true,"CreatedAt":"2019-11-23T01:19:55","Actor":"dotnet-maestro[bot]","Number":"1658","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1658","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1658)"},{"Id":"526119676","IsPullRequest":true,"CreatedAt":"2019-11-20T20:02:50","Actor":"dotnet-maestro[bot]","Number":"1656","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1656","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1656)"},{"Id":"523456559","IsPullRequest":false,"CreatedAt":"2019-11-19T23:58:30","Actor":"SetTrend","Number":"1655","RawContent":null,"Title":"Change .NET Framework in version table from 4.6.1 to 4.7.1","State":"closed","Body":"Currently, the [.NET Standard version table](/dotnet/standard/blob/master/docs/versions.md) shows `.NET Framework 4.6.1` to be compatible with `.NET Standard >= 1.5`.\r\n\r\nHowever, a footnote clarifies that `.NET Framework 4.6.1` is **_not_** fully compatible with `.NET Standard >= 1.5`.\r\n\r\nMoreover, many issues on [StackOverflow.com](https://stackoverflow.com/questions/49925484/you-must-add-a-reference-to-assembly-netstandard-version-2-0-0-0) and [GitHub](542) give evidence that `.NET Framework 4.6.1` is **_not_** fully compatible with `.NET Standard >= 1.5`.\r\n\r\nWouldn't it be wise then to update above version table to provide **_true_** information than just spout some wannabe information?","Url":"https://github.com/dotnet/standard/issues/1655","RelatedDescription":"Closed issue \"Change .NET Framework in version table from 4.6.1 to 4.7.1\" (#1655)"},{"Id":"523175041","IsPullRequest":false,"CreatedAt":"2019-11-15T00:02:51","Actor":"replaysMike","Number":"1654","RawContent":null,"Title":"HttpClient error 'Could not create SSL/TLS secure channel' when not Administrator","State":"open","Body":"I'm trying to use certificate based authentication using HttpClient in .Net Standard 2.0. However, I've noticed TLS negotiation doesn't succeed unless running the application in Administrator mode.\r\n\r\n```\r\nvar requestMessage = new HttpRequestMessage() {\r\n    RequestUri = new Uri(new Uri(_configuration.Endpoint), \"someendpoint\"),\r\n    Method = HttpMethod.Get\r\n};\r\nvar handler = new HttpClientHandler {\r\n    ClientCertificateOptions = ClientCertificateOption.Manual,\r\n    SslProtocols = SslProtocols.Tls12,\r\n};          \r\nhandler.ClientCertificates.Add(certificate);\r\nhandler.CheckCertificateRevocationList = false;\r\n// this is required to get around untrusted self-signed certs\r\nhandler.ServerCertificateCustomValidationCallback = (httpRequestMessage, cert, cetChain, policyErrors) => true;\r\nvar client = new HttpClient(handler);\r\nrequestMessage.Headers.Add(\"X-ARR-ClientCert\", certificate.GetRawCertDataString());\r\nvar response = await client.SendAsync(requestMessage);\r\n```\r\nThe client certificate is valid and installed in the local computer `My` store.\r\n\r\nWithout Administrator privileges a generic error is thrown: `The request was aborted: Could not create SSL/TLS secure channel` when not Administrator.\r\n\r\nAnyone have a clue as to why?","Url":"https://github.com/dotnet/standard/issues/1654","RelatedDescription":"Open issue \"HttpClient error 'Could not create SSL/TLS secure channel' when not Administrator\" (#1654)"},{"Id":"522886300","IsPullRequest":false,"CreatedAt":"2019-11-14T14:14:42","Actor":"tndata","Number":"1653","RawContent":null,"Title":"Broken link","State":"open","Body":"\r\nI found a broken link in this sentence:\r\n\r\nThe plan for handling .NET Framework 4.6.1 and .NET Standard 2.0 is outlined in the **spec**.\r\n\r\nOn this page \r\nhttps://github.com/dotnet/standard/blob/master/docs/faq.md\r\n","Url":"https://github.com/dotnet/standard/issues/1653","RelatedDescription":"Open issue \"Broken link\" (#1653)"},{"Id":"522854157","IsPullRequest":true,"CreatedAt":"2019-11-14T13:46:23","Actor":"dotnet-maestro[bot]","Number":"1652","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191113.6\r\n- **Date Produced**: 11/14/2019 7:13 AM\r\n- **Commit**: 5cee7c97d602f294e27c582d4dab81ec388f1d7b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19563.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19563.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19563.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1652","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1652)"},{"Id":"522220691","IsPullRequest":true,"CreatedAt":"2019-11-13T13:59:11","Actor":"dotnet-maestro[bot]","Number":"1651","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191112.8\r\n- **Date Produced**: 11/13/2019 9:07 AM\r\n- **Commit**: a528006b4536e5b73227285b57d2a56116532506\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19562.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19562.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19562.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1651","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1651)"},{"Id":"522208590","IsPullRequest":true,"CreatedAt":"2019-11-13T13:01:39","Actor":"dotnet-maestro[bot]","Number":"1650","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20200101.1\r\n- **Date Produced**: 1/1/2020 2:00 PM\r\n- **Commit**: bbd4a95d4bcb6e06f88a8590e18e499a6169b66e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20051.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20051.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.20051.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20051.1\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20051.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20051.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1650","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1650)"},{"Id":"521547575","IsPullRequest":true,"CreatedAt":"2019-11-12T14:07:43","Actor":"dotnet-maestro[bot]","Number":"1649","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191112.1\r\n- **Date Produced**: 11/12/2019 10:06 AM\r\n- **Commit**: 21278249c6b417469737b20445a0dd045cd1b16e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19562.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19562.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19562.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1649","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1649)"},{"Id":"520598776","IsPullRequest":true,"CreatedAt":"2019-11-10T13:31:00","Actor":"dotnet-maestro[bot]","Number":"1648","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191109.6\r\n- **Date Produced**: 11/10/2019 6:07 AM\r\n- **Commit**: bc115700c3ece60acd6b8dbe4b0bdb8f6f80c756\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19559.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19559.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19559.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1648","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1648)"},{"Id":"520424908","IsPullRequest":true,"CreatedAt":"2019-11-09T14:01:26","Actor":"dotnet-maestro[bot]","Number":"1647","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191109.1\r\n- **Date Produced**: 11/9/2019 9:20 AM\r\n- **Commit**: f546aa9e76c776f2c27e30dfb91c50d8f62da2f8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19559.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19559.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19559.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1647","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1647)"},{"Id":"520010128","IsPullRequest":true,"CreatedAt":"2019-11-08T13:28:42","Actor":"dotnet-maestro[bot]","Number":"1646","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191107.22\r\n- **Date Produced**: 11/8/2019 8:30 AM\r\n- **Commit**: 7a318879f787e9feee9266fe9e876ee2411b548f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19557.22\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19557.22\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19557.22\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1646","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1646)"},{"Id":"519262813","IsPullRequest":true,"CreatedAt":"2019-11-07T13:26:42","Actor":"dotnet-maestro[bot]","Number":"1645","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191106.12\r\n- **Date Produced**: 11/7/2019 8:14 AM\r\n- **Commit**: a4f04476ea74c61a52168cf0b31c0281822ecad3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19556.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19556.12\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19556.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1645","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1645)"},{"Id":"518467413","IsPullRequest":true,"CreatedAt":"2019-11-06T13:31:10","Actor":"dotnet-maestro[bot]","Number":"1644","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191105.8\r\n- **Date Produced**: 11/6/2019 9:54 AM\r\n- **Commit**: 9e94e2552ad869005f30f6a59eb638c544d3efdd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19555.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19555.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19555.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1644","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1644)"},{"Id":"518175351","IsPullRequest":false,"CreatedAt":"2019-11-06T01:11:51","Actor":"tchitnis","Number":"1643","RawContent":null,"Title":"Debug.Assert causing entire test run to be aborted","State":"open","Body":"Similar to the issues reported here:\r\n\r\nhttps://github.com/Microsoft/vstest/issues/1022\r\nhttps://github.com/dotnet/coreclr/issues/22569\r\n\r\nI still see the same error/issue on .net standard 2.0 with MSTest. Sounds like it was fixed with .Net Core 3.0, can someone comment on whether a similar fix was applied to .Net Standard as well?","Url":"https://github.com/dotnet/standard/issues/1643","RelatedDescription":"Open issue \"Debug.Assert causing entire test run to be aborted\" (#1643)"},{"Id":"517769508","IsPullRequest":true,"CreatedAt":"2019-11-05T13:42:32","Actor":"dotnet-maestro[bot]","Number":"1642","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191104.10\r\n- **Date Produced**: 11/5/2019 7:44 AM\r\n- **Commit**: ee038925bde85c1c45c52f235ab09ea03b9c126c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19554.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19554.10\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19554.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1642","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1642)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"544438199","IsPullRequest":false,"CreatedAt":"2020-01-02T03:53:28","Actor":"TsuyoshiUshio","Number":"42795","RawContent":null,"Title":"Activity.SetIdFormat is ignored if there is Activity.Current instance","State":"open","Body":"I'm not sure if it is expected behavior or not, I'd like to share what I found. \r\nI use `System.Diagnostics.DiagnosticSource` version `4.7.0` . \r\n\r\n```\r\n            Activity parent = new Activity(\"parent\");\r\n            parent.SetIdFormat(ActivityIdFormat.W3C);\r\n            // W3C \r\n            parent.Start();\r\n            Console.WriteLine(\"W3C Parent---\");\r\n            PrintActivity(parent); // Method that print the details of Activity\r\n\r\n            // Correlation \r\n            Activity child = new Activity(\"child\");\r\n            child.SetParentId(parent.ParentId);\r\n            Console.WriteLine(\"W3C Child ---\");\r\n            child.Start();\r\n            PrintActivity(child); // Method that print the details of Activity\r\n\r\n            Activity newParent = new Activity(\"parent\");\r\n            newParent.SetIdFormat(ActivityIdFormat.Hierarchical);\r\n            newParent.Start();\r\n            Console.WriteLine(\"HTTP Parent---\");\r\n            PrintActivity(newParent);  // Method that print the details of Activity\r\n```\r\nAt the last newParent instance, Even if I specify `ActivityIdFormat.Hierarchical` It become `W3C TraceContext` \r\n\r\n![image](https://user-images.githubusercontent.com/1390976/71650952-ae74d980-2cce-11ea-92ad-afd69610f086.png)\r\n\r\nIt might be caused by this line of code of Activity.GenerateHierachicalId() method. Since parent is automatically set from Activity.Current. \r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42795","RelatedDescription":"Open issue \"Activity.SetIdFormat is ignored if there is Activity.Current instance\" (#42795)"},{"Id":"543783062","IsPullRequest":false,"CreatedAt":"2019-12-30T07:44:53","Actor":"michalpenka","Number":"42793","RawContent":null,"Title":"ZipArchiveEntry.ExtractRelativeToDirectory - issue with trailing space","State":"open","Body":"If `destinationDirectoryName` parameter of `ZipArchiveEntry.ExtractRelativeToDirectory` method contains trailing space(s) in front of the path delimiter, two directories are created: one with and one without a trailing space. The extracted content is in the one with the trailing space.\r\n\r\nCode to reproduce below, notice the trailing space in the destination directory name:\r\n`ZipFile.ExtractToDirectory(\"fileSpace .zip\", @\"C:\\temp\\fileSpace \\\", true);`\r\n\r\nAs per remarks in the [documentation](https://docs.microsoft.com/en-us/dotnet/api/system.io.directory.createdirectory?view=netcore-3.1) of  `DirectoryInfo.CreateDirectory(String)`, which is used in `ExtractRelativeToDirectory` method, the trailing spaces in the directory name are omitted. This is not true if the path delimiter is explicitly provided at the end of the path though and I believe the ExtractRelativeToDirectory should follow the same.\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42793","RelatedDescription":"Open issue \"ZipArchiveEntry.ExtractRelativeToDirectory - issue with trailing space\" (#42793)"},{"Id":"542913681","IsPullRequest":false,"CreatedAt":"2019-12-28T16:07:33","Actor":"dhmuralikrishna","Number":"42792","RawContent":null,"Title":"How to disable using HTTP_PROXY as default","State":"closed","Body":"https://github.com/dotnet/corefx/issues/36553\r\n\r\nHow can we turn off this new default implementation?\r\n\r\nI have environment variables HTTP_PROXY. But I want to use system-level proxy default instead of environment variables. I don't want to delete the environment variables because it used by other applications. How can I set to go for system proxy?\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42792","RelatedDescription":"Closed issue \"How to disable using HTTP_PROXY as default\" (#42792)"},{"Id":"541850100","IsPullRequest":false,"CreatedAt":"2019-12-23T19:42:56","Actor":"ritchxu","Number":"42790","RawContent":null,"Title":"XmlQualifiedName class not marked as Serializable","State":"closed","Body":"While porting code to .NET Core, it was found that [XmlQualifiedName](https://github.com/dotnet/corefx/blob/master/src/System.Private.Xml/src/System/Xml/XmlQualifiedName.cs) is not marked as `Serializable` as it was [in .NET Framework](https://referencesource.microsoft.com/#System.Xml/System/Xml/XmlQualifiedName.cs). This caused any field/property in this class becoming not serializable.\r\n\r\n### Question:\r\nIs this by design?\r\n\r\n### Reproducible steps:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n\r\n```\r\n```\r\nusing System;\r\nusing System.IO;\r\nusing System.Runtime.Serialization;\r\nusing System.Runtime.Serialization.Formatters.Binary;\r\nusing System.Xml;\r\n\r\nnamespace ConsoleApp\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            IFormatter formatter = new BinaryFormatter();\r\n            Stream stream = new MemoryStream();\r\n            formatter.Serialize(stream, new TestClass());\r\n        }\r\n    }\r\n\r\n    [Serializable]\r\n    class TestClass\r\n    {\r\n        public TestClass()\r\n        {\r\n            TestProp = new XmlQualifiedName(\"TestProp\");\r\n        }\r\n\r\n        XmlQualifiedName TestProp { get; set; }\r\n    }\r\n}\r\n```\r\n### Expected behavior:\r\n`Serialize` call works without throwing exceptions,\r\n\r\n### Actual behavior:\r\n```\r\nSystem.Runtime.Serialization.SerializationException\r\n  HResult=0x8013150C\r\n  Message=Type 'System.Xml.XmlQualifiedName' in Assembly 'System.Private.Xml, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' is not marked as serializable.\r\n  Source=System.Runtime.Serialization.Formatters\r\n  StackTrace:\r\n   at System.Runtime.Serialization.FormatterServices.InternalGetSerializableMembers(Type type)\r\n   at System.Runtime.Serialization.FormatterServices.<>c.<GetSerializableMembers>b__5_0(MemberHolder mh)\r\n   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)\r\n   at System.Runtime.Serialization.FormatterServices.GetSerializableMembers(Type type, StreamingContext context)\r\n   at System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo.InitMemberInfo()\r\n   at System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo.InitSerialize(Object obj, ISurrogateSelector surrogateSelector, StreamingContext context, SerObjectInfoInit serObjectInfoInit, IFormatterConverter converter, ObjectWriter objectWriter, SerializationBinder binder)\r\n   at System.Runtime.Serialization.Formatters.Binary.ObjectWriter.Write(WriteObjectInfo objectInfo, NameInfo memberNameInfo, NameInfo typeNameInfo)\r\n   at System.Runtime.Serialization.Formatters.Binary.ObjectWriter.Serialize(Object graph, BinaryFormatterWriter serWriter, Boolean fCheck)\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(Stream serializationStream, Object graph, Boolean check)\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(Stream serializationStream, Object graph)\r\n   at ConsoleApp.Program.Main(String[] args) in C:\\Rui\\Projects\\PSCore\\ConsoleApp\\Program.cs:line 15\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42790","RelatedDescription":"Closed issue \"XmlQualifiedName class not marked as Serializable\" (#42790)"},{"Id":"540908824","IsPullRequest":false,"CreatedAt":"2019-12-20T10:13:10","Actor":"Jogge","Number":"42787","RawContent":null,"Title":"System.Text.Json.Serialization Order of serialized properties","State":"closed","Body":"I'm missing an attribute for setting the order of the element in the JSON output.\r\n\r\nExample:\r\n\r\nI want the `@SEGMENT` to be the first element in the serialized JSON output of MyClass:\r\n\r\n```C#\r\npublic abstract class MyBase\r\n{\r\n    [JsonPropertyName(\"@SEGMENT\")]\r\n    public virtual string Segment { get; set; } = \"1\";\r\n\r\n    public int ID { get; set; }\r\n}\r\n\r\npublic class MyClass : MyBase\r\n{\r\n    public string Name { get; set; }\r\n}\r\n```\r\n\r\nThe result when serializing MyClass is:\r\n```JSON\r\n{\r\n    \"MyClass\": {\r\n    \t\"Name\": \"Foo\",\r\n    \t\"@SEGMENT\": \"1\",\r\n    \t\"ID\": 42\r\n    }\r\n}\r\n```\r\n\r\nI would like the serialized JSON output to be:\r\n\r\n```JSON\r\n{\r\n    \"MyClass\": {\r\n    \t\"@SEGMENT\": \"1\",\r\n    \t\"Name\": \"Foo\",\r\n    \t\"ID\": 42\r\n    }\r\n}\r\n```\r\n\r\nor\r\n```JSON\r\n{\r\n    \"MyClass\": {\r\n    \t\"@SEGMENT\": \"1\",\r\n    \t\"ID\": 42,\r\n    \t\"Name\": \"Foo\"\r\n    }\r\n}\r\n```\r\n\r\nJson.NET has an attribute for this: https://www.newtonsoft.com/json/help/html/JsonPropertyOrder.htm\r\n\r\nRelated question: [.NET core 3: Order of serialization for JsonPropertyName (System.Text.Json.Serialization)](https://stackoverflow.com/q/59134564/7108481)\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42787","RelatedDescription":"Closed issue \"System.Text.Json.Serialization Order of serialized properties\" (#42787)"},{"Id":"538888501","IsPullRequest":false,"CreatedAt":"2019-12-19T00:00:21","Actor":"poweralex","Number":"42783","RawContent":null,"Title":"bitmap.MakeTransparent works different on linux","State":"closed","Body":"I'm trying to draw a png image with a block of transparent on it. the same code works fine on local windows environment, but when I deploy it on a Linux server, the block does not go transparent.\r\nthe code is simple:\r\n```c#\r\n                    byte[] fileContent = null;\r\n                    using (MemoryStream ms = new MemoryStream())\r\n                    {\r\n                        Bitmap bitmap = new Bitmap(\r\n                            100, 100\r\n                            );\r\n                        using (var g = Graphics.FromImage(bitmap))\r\n                        {\r\n                            // backgrand\r\n                            g.FillRectangle(new SolidBrush(Color.White), 0, 0, bitmap.Width, bitmap.Height);\r\n                            // transparent block\r\n                            g.FillRectangle(new SolidBrush(Color.Red), 10, 10, 80, 80);\r\n                            // blue line\r\n                            g.DrawLine(new Pen(Color.Blue), 10, 10, 90, 90);\r\n                        }\r\n                        bitmap.MakeTransparent(Color.Red);\r\n                        bitmap.Save(ms, ImageFormat.Png);\r\n                        fileContent = ms.ToArray();\r\n                    }\r\n```\r\nthe image looks good on windows:\r\n![image](https://user-images.githubusercontent.com/12427030/70973935-a4a18280-20e1-11ea-95a2-d2b8604af9f0.png)\r\nbut not on Linux:\r\n![image](https://user-images.githubusercontent.com/12427030/70974041-da466b80-20e1-11ea-9f3b-e329eda130d7.png)\r\n\r\nIs this a issue of System.Drawing.Common or is there something I missed?\r\n\r\n[danmosemsft fixed formatting]","Url":"https://github.com/dotnet/corefx/issues/42783","RelatedDescription":"Closed issue \"bitmap.MakeTransparent works different on linux\" (#42783)"},{"Id":"537777365","IsPullRequest":false,"CreatedAt":"2019-12-17T15:00:44","Actor":"vasicvuk","Number":"42778","RawContent":null,"Title":"How to get RSACryptoServiceProvider from X509Certificate2 .Net Core","State":"closed","Body":"Following code works in .Net 4.7.1 but not in .Net Core 3.1\r\n\r\n```csharp\r\nX509Store store = new X509Store(StoreLocation.CurrentUser);\r\nstore.Open(OpenFlags.ReadOnly);\r\nX509Certificate2 cert = null;\r\nforeach (X509Certificate2 cert2 in store.Certificates)\r\n{\r\n\tif (cert2.HasPrivateKey && cert2.PrivateKey is RSACryptoServiceProvider rsa)\r\n\t{\r\n             // .Net Core 3.1 nevers get RSACryptoServiceProvider and .Net Framework returns it\r\n\t\tif (rsa == null) continue; \r\n\t\tif (rsa.CspKeyContainerInfo.HardwareDevice) // sure - smartcard\r\n\t\t{\r\n\t\t\tif ((rsa.CspKeyContainerInfo.KeyContainerName == KeyContainerName) && (rsa.CspKeyContainerInfo.ProviderName == ProviderName))\r\n\t\t\t{\r\n\t\t\t\t//we find it\r\n\t\t\t\tcert = cert2;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nI tried working with **RSACng** but i have few issues there. First i cannot get info from **CspKeyContainerInfo** needed for this. And also when i try to sign with this certificate it is always asking me for a PIN even if i defined **RSACryptoServiceProvider** before with **KeyPassword**.\r\n\r\n.Net Framework code\r\n```csharp\r\nSecureString pwd = GetSecurePin(PinCode);\r\n\r\nCspParameters csp = new CspParameters(1, ProviderName, KeyContainerName,\r\n   new System.Security.AccessControl.CryptoKeySecurity(), pwd);\r\n```\r\n\r\n\r\nI need this only to work on Windows (ASP.Net Core 3.1).\r\n\r\nI read https://github.com/dotnet/corefx/blob/master/Documentation/architecture/cross-platform-cryptography.md but i am not sure how to do migration.\r\n\r\nThanks","Url":"https://github.com/dotnet/corefx/issues/42778","RelatedDescription":"Closed issue \"How to get RSACryptoServiceProvider from X509Certificate2 .Net Core\" (#42778)"},{"Id":"538656286","IsPullRequest":false,"CreatedAt":"2019-12-16T21:02:03","Actor":"weshaggard","Number":"42782","RawContent":null,"Title":"Update package label to \"final\" for the stable prerelease builds.","State":"closed","Body":"https://github.com/dotnet/buildtools/blob/master/src/Microsoft.DotNet.Build.Tasks.Packaging/src/PackageFiles/Packaging.targets#L16 instead of excluding the build number change it to \"final\". That will help make sure the package version is the higher then any of the existing packages that have that build number. \r\n\r\nWe should consider renaming IncludeBuildNumberInPackageVersion to better align with this change.\r\n\r\nThis change needs to happen in corefx and core-setup. \r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42782","RelatedDescription":"Closed issue \"Update package label to \"final\" for the stable prerelease builds.\" (#42782)"},{"Id":"538456644","IsPullRequest":false,"CreatedAt":"2019-12-16T18:24:56","Actor":"karimi64bit","Number":"42781","RawContent":null,"Title":"captcha در مرورگر موبایل ارور میده","State":"closed","Body":"سلام\r\nممنون از زحمت هاتون \r\nوقتی ازش استفاده میکنم درسته فقط وقتی تو موبایل دارم دکمه ریفرش میزنم کار نمیکنه\r\nممنون میشم راهنمایی کنید\r\n","Url":"https://github.com/dotnet/corefx/issues/42781","RelatedDescription":"Closed issue \"captcha در مرورگر موبایل ارور میده\" (#42781)"},{"Id":"538385840","IsPullRequest":false,"CreatedAt":"2019-12-16T14:26:33","Actor":"tornie2","Number":"42780","RawContent":null,"Title":"HttpClient sends NTLM ticket, even though it only has Negotiate credentials","State":"closed","Body":"We are puzzled that HttpClient will use NTLM token for authorization, even though will only give the handler Negotiate credentials\r\n\r\nOur application is in net461. We create our client with this code\r\n\r\n             _credentials = new CredentialCache { { _uri, \"Negotiate\", CredentialCache.DefaultNetworkCredentials } };\r\n             var handler = new WebRequestHandler { Credentials = _credentials, UnsafeAuthenticatedConnectionSharing = true, MaxConnectionsPerServer = 100, UseProxy = false };\r\n             var httpClient = new HttpClient(handler) { BaseAddress = _uri };\r\n\r\nWhen we access a node directly without a load-balancer, we can nicely see a Negotiate authorization.\r\n\r\nHowever when we access the system through the load-balancer, the Authorization in the request contains a Negotiate item, but when we open the token (base64 decode it), we can see that it actually is a NTLM-token\r\n\r\nThe challenge from the server has this header:\r\n             Proxy-Authenticate NTLM, Negotiate, Bearer\r\n\r\nThe response to the service looks something like this. Authorization says Negotiate, but when we decode the token, it is ntlm\r\n             Authorization Negotiate TlRMTVNT.....\r\n             Host syst-smfbasic:15000\r\n             CorrelationId 72395ff4-4fa9-4d5d-88c1-0d96b49da63c\r\n\r\nWhy will webrequesthandler generate an NTLM-token when we specifically ask for Negotiate, and write Negotiate in the header, when it actually is NTLM?\r\n\r\nAnd why only when we use a load-balancer?","Url":"https://github.com/dotnet/corefx/issues/42780","RelatedDescription":"Closed issue \"HttpClient sends NTLM ticket, even though it only has Negotiate credentials\" (#42780)"},{"Id":"537797199","IsPullRequest":false,"CreatedAt":"2019-12-14T00:43:37","Actor":"los93sol","Number":"42779","RawContent":null,"Title":"Code search broken on the repo?","State":"closed","Body":"I've noticed for at least the last week that searching the repo for code doesn't seem to work anymore.  Other repos like aspnetcore seem to still be searching fine though.  Not sure where else to report the issue to so figured I'd just open an issue here.","Url":"https://github.com/dotnet/corefx/issues/42779","RelatedDescription":"Closed issue \"Code search broken on the repo?\" (#42779)"},{"Id":"537672937","IsPullRequest":false,"CreatedAt":"2019-12-13T17:40:21","Actor":"alexborichevskyidt","Number":"42777","RawContent":null,"Title":"StringContent doesn't update ContentLength property automatically after creation.","State":"closed","Body":"Working with integration tests, noticed that StringContent doesn't update property ContentLength in Headers after creation, what cause request parsing issues in API application when using a test client with payload.\r\n\r\nCalling get for the property helped to resolve the issue.","Url":"https://github.com/dotnet/corefx/issues/42777","RelatedDescription":"Closed issue \"StringContent doesn't update ContentLength property automatically after creation.\" (#42777)"},{"Id":"537296624","IsPullRequest":true,"CreatedAt":"2019-12-13T01:14:53","Actor":"cheenamalhotra","Number":"42776","RawContent":null,"Title":"[release/3.1] Revert async changes in SqlClient to fix deadlock issues","State":"open","Body":"Port of: https://github.com/dotnet/runtime/pull/778 and https://github.com/dotnet/SqlClient/pull/349\r\n\r\n### Summary\r\nFixes issue https://github.com/dotnet/SqlClient/issues/262 where client applications goes to deadlock when performing Async operations.\r\n\r\n### Customer Impact\r\nHigh. Random deadlocks occur in client applications and apps stay in hanging state.\r\n\r\n### Regression?\r\nYes, with PR #34184\r\n\r\n### Testing\r\nThis issue is hard to reproduce in tests and is currently not reproducible consistently, but a repro has been made available to identify deadlocks, which will be added to Microsoft.Data.SqlClient test lab once it can be consistently reproduced in test lab as well.\r\n\r\n### Risk\r\n**Low**: The fix has been verified with repro app and confirms the issue has been fixed.\r\n\r\ncc: @danmosemsft @benaadams","Url":"https://github.com/dotnet/corefx/pull/42776","RelatedDescription":"Open PR \"[release/3.1] Revert async changes in SqlClient to fix deadlock issues\" (#42776)"},{"Id":"537217410","IsPullRequest":false,"CreatedAt":"2019-12-12T21:17:44","Actor":"weltkante","Number":"42775","RawContent":null,"Title":"Regression: System.Windows.Size getting picked up unintentionally","State":"closed","Body":"Apparently adding WindowsBase references automatically is leading to a [regression](https://github.com/dotnet/winforms-datavisualization/issues/24) in some code which has been ported but not tested much: System.Windows.Size gets picked up instead of System.Drawing.Size by source imported from Desktop Framework which wasn't referencing WindowsBase before.\r\n\r\nJust trying to get some attention to it since the original report is in a readonly repo so it may not be watched closely.","Url":"https://github.com/dotnet/corefx/issues/42775","RelatedDescription":"Closed issue \"Regression: System.Windows.Size getting picked up unintentionally\" (#42775)"},{"Id":"536726110","IsPullRequest":true,"CreatedAt":"2019-12-12T02:51:49","Actor":"layomia","Number":"42772","RawContent":null,"Title":"Improve (de)serialization support for nested dictionaries","State":"open","Body":"## Description\r\n\r\nFixes https://github.com/dotnet/runtime/issues/670, where there was a regression between 3.0 and 3.1 where serializing nested concurrent dictionaries went from supported to unsupported. The issue also exists in master/5.0. https://github.com/dotnet/runtime/pull/784 fixes it in master, and this PR ports the fix to 3.0.\r\n\r\nIn addition to the fix described above, this PR also also has a deserialization fix for an `InvalidCastException` thrown when a dictionary element type has a converter that returns a type different from the declared type, e.g. when you're deserializing `Dictionary<string, MyClass>`, where\r\n\r\n```c#\r\nprivate interface IClass { }\r\n\r\nprivate class MyClass : IClass { }\r\n\r\nprivate class MyFactory : JsonConverterFactory\r\n{\r\n    public override bool CanConvert(Type typeToConvert)\r\n    {\r\n        return typeToConvert == typeof(IClass) || typeToConvert == typeof(MyClass);\r\n    }\r\n\r\n    public override JsonConverter CreateConverter(Type typeToConvert, JsonSerializerOptions options)\r\n    {\r\n        return new MyStuffConverter();\r\n    }\r\n}\r\n\r\nprivate class MyStuffConverter : JsonConverter<IClass>\r\n{\r\n    public override IClass Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)\r\n    {\r\n        return new MyClass();\r\n    }\r\n\r\n    public override void Write(Utf8JsonWriter writer, IClass value, JsonSerializerOptions options)\r\n    {\r\n        writer.WriteNumberValue(1);\r\n    }\r\n}\r\n```\r\n\r\nIn this case, the read method of the converter for `typeof(MyClass)` returns a type `IClass` (not the declared type, `MyClass`) which causes an `InvalidCastException` later in the deserialization flow.\r\n\r\n## Customer Impact\r\n\r\nThe ability to serialize nested concurrent dictionaries is restored: https://github.com/dotnet/runtime/issues/670. \r\n\r\nThe deserialization scenario is an edge case, but the fix defends against leaking exceptions were it to occur.\r\n\r\n## Regression\r\n\r\nNo. The serialization change's tests are wide-ranging and covers various permutations of nested dictionaries, so a regression is unlikely.\r\n\r\nThe deserialization change adds more support without rescinding support. A regression is unlikely.\r\n\r\n## Risk\r\n\r\nLow, per the regression section above.","Url":"https://github.com/dotnet/corefx/pull/42772","RelatedDescription":"Open PR \"Improve (de)serialization support for nested dictionaries\" (#42772)"},{"Id":"536424352","IsPullRequest":false,"CreatedAt":"2019-12-11T15:19:08","Actor":"Adam-Tg","Number":"42770","RawContent":null,"Title":"Could not load file or assembly 'System.Security.Principal.Windows', manifest definition does not match the assembly reference","State":"closed","Body":"Solution has compiled successfully, but when executing, the following exception gets thrown:\r\n\r\n> System.IO.FileLoadException: Could not load file or assembly 'System.Security.Principal.Windows, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference.\r\n\r\nI installed `System.Security.Principal.Windows` package by NuGet, but the error still appears.\r\n\r\n[This](https://stackoverflow.com/questions/51909212/could-not-load-file-or-assembly-system-security-principal-windows) does not help me.\r\nI don't have 'Microsoft.Net.Compiler' or 'Microsoft.CodeDom.Providers.DotNetCompilerPlatform' installed, and even installing them or changing their versions does not help. Also, '.NET Compiler Platform SDK' is already installed.\r\n\r\nHow can I fix this?","Url":"https://github.com/dotnet/corefx/issues/42770","RelatedDescription":"Closed issue \"Could not load file or assembly 'System.Security.Principal.Windows', manifest definition does not match the assembly reference\" (#42770)"},{"Id":"535914883","IsPullRequest":true,"CreatedAt":"2019-12-10T18:44:21","Actor":"ericstj","Number":"42768","RawContent":null,"Title":"[release/3.1] Make PathAssemblyResolver handle Retargetable","State":"open","Body":"Release/3.1 port of fca60323d9606a90b327273d08089200ae6f527b + package authoring.","Url":"https://github.com/dotnet/corefx/pull/42768","RelatedDescription":"Open PR \"[release/3.1] Make PathAssemblyResolver handle Retargetable\" (#42768)"},{"Id":"535583459","IsPullRequest":false,"CreatedAt":"2019-12-10T16:01:07","Actor":"IgorMenshikov","Number":"42766","RawContent":null,"Title":"Nullable with JsonSerializer","State":"closed","Body":"I am migrating to .NET Core 3.1 and have a class with null-able values (decimal, DateTime) and want deserialize JSON to it. I received JSON from a client with property values as strings. Here is the sample code:\r\n\r\n```\r\npublic class Range\r\n{\r\n    public decimal? Start { get; set; }\r\n    public decimal? End { get; set; }\r\n}\r\n\r\nstatic void Main(string[] args)\r\n{\r\n    var json = \"{\\\"Start\\\":\\\"1\\\",\\\"End\\\":\\\"2\\\"}\";\r\n            \r\n    var j1 = Newtonsoft.Json.JsonConvert.DeserializeObject<Range>(json); // works fine\r\n    j1.ToString();\r\n\r\n    var j2 = System.Text.Json.JsonSerializer.Deserialize<Range>(json); // exception\r\n    j2.ToString();\r\n}\r\n```\r\n\r\nThis code throws an error:\r\n\r\n'The JSON value could not be converted to System.Nullable`1[System.Decimal]. \r\n\r\nI have tried to use a workarounf at:\r\nhttps://github.com/dotnet/corefx/issues/41070#issuecomment-555395612\r\n\r\nbut it does not help. Can something be some with that? Any workaround? Newtonsoft can handle that without problems.","Url":"https://github.com/dotnet/corefx/issues/42766","RelatedDescription":"Closed issue \"Nullable with JsonSerializer\" (#42766)"},{"Id":"535788229","IsPullRequest":false,"CreatedAt":"2019-12-10T15:06:47","Actor":"bugproof","Number":"42767","RawContent":null,"Title":"System.Text.Json serialization order","State":"closed","Body":"moved to https://github.com/dotnet/runtime/issues/728","Url":"https://github.com/dotnet/corefx/issues/42767","RelatedDescription":"Closed issue \"System.Text.Json serialization order\" (#42767)"},{"Id":"535498144","IsPullRequest":false,"CreatedAt":"2019-12-10T05:11:58","Actor":"dehghani-mehdi","Number":"42765","RawContent":null,"Title":"Why `System.Net.Sockets` has dependency to `System.Security.Principal.Windows`?","State":"open","Body":"Why `System.Runtime.Caching` has dependency to `System.Security.Principal.Windows`?\r\n\r\nOkay, the comment should be\r\n\r\nWhy `System.Net.Sockets` has dependency to `System.Security.Principal.Windows`?\r\n\r\nto match new title.","Url":"https://github.com/dotnet/corefx/issues/42765","RelatedDescription":"Open issue \"Why `System.Net.Sockets` has dependency to `System.Security.Principal.Windows`?\" (#42765)"},{"Id":"534556922","IsPullRequest":true,"CreatedAt":"2019-12-08T16:18:55","Actor":"dotnet-maestro[bot]","Number":"42762","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191207.1\r\n- **Date Produced**: 12/7/2019 4:52 PM\r\n- **Commit**: 5558d18aafc84ecac3630ca6a31f52699cde0b66\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.1-servicing.19607.1\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.1-servicing.19607.1\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.1-servicing.19607.1\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42762","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42762)"},{"Id":"533572448","IsPullRequest":true,"CreatedAt":"2019-12-07T00:10:52","Actor":"mmitche","Number":"42757","RawContent":null,"Title":"[release/3.1] Switch to using 3.1100 SDK to build 3.1","State":"closed","Body":"Required for upstack components, so this is for consistency.","Url":"https://github.com/dotnet/corefx/pull/42757","RelatedDescription":"Closed or merged PR \"[release/3.1] Switch to using 3.1100 SDK to build 3.1\" (#42757)"},{"Id":"533687089","IsPullRequest":true,"CreatedAt":"2019-12-06T02:30:55","Actor":"dotnet-maestro[bot]","Number":"42760","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191202.2\r\n- **Date Produced**: 12/2/2019 9:49 PM\r\n- **Commit**: 53826cad1db670d13c424f1afe048b3aad92f7ba\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.1-servicing.19602.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.1-servicing.19602.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.1-servicing.19602.2\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42760","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42760)"},{"Id":"533685254","IsPullRequest":false,"CreatedAt":"2019-12-06T01:03:54","Actor":"chenyj796","Number":"42759","RawContent":null,"Title":"System.Threading.Channels.Channel<T>: After Complete with exception, the ReadAsync and ReadAllAsync method throws different exception","State":"open","Body":"I have some codes as below:\r\n```csharp\r\n\tclass Program\r\n\t{\r\n\t\tclass TestException : Exception\r\n\t\t{\r\n\t\t\tpublic TestException()\r\n\t\t\t\t: base(\"This is for test channel complete method with exception\")\r\n\t\t\t{\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic async Task Main(string[] args)\r\n\t\t{\r\n\t\t\tvar channel = Channel.CreateUnbounded<string>();\r\n\t\t\tchannel.Writer.Complete(new TestException());\r\n\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tawait channel.Reader.ReadAsync();\r\n\t\t\t}\r\n\t\t\tcatch (Exception ex)\r\n\t\t\t{\r\n\t\t\t\tConsole.WriteLine($\"ReadAsync throws {ex.GetType().Name}: {ex.Message}\");\r\n\t\t\t}\r\n\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tawait foreach (var item in channel.Reader.ReadAllAsync())\r\n\t\t\t\t{\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch (Exception ex)\r\n\t\t\t{\r\n\t\t\t\tConsole.WriteLine($\"ReadAllAsync throws {ex.GetType().Name}: {ex.Message}\");\r\n\t\t\t}\r\n\r\n\t\t\tConsole.ReadLine();\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n```\r\n\r\nAfter run it, I get the following output:\r\n```\r\nReadAsync throws ChannelClosedException: The channel has been closed.\r\nReadAllAsync throws TestException: This is for test channel complete method with exception\r\n```\r\n\r\nI hope the ReadAsync also throws TestException just as ReadAllAsync does.","Url":"https://github.com/dotnet/corefx/issues/42759","RelatedDescription":"Open issue \"System.Threading.Channels.Channel<T>: After Complete with exception, the ReadAsync and ReadAllAsync method throws different exception\" (#42759)"},{"Id":"533603733","IsPullRequest":true,"CreatedAt":"2019-12-05T22:44:11","Actor":"carlossanlop","Number":"42758","RawContent":null,"Title":"[release/3.1] .NET Core 3.1.1 Intellisense bump (English)","State":"closed","Body":"@mmitche \r\n\r\nCreated the package with these changes:\r\nhttps://github.com/dotnet/corefxlab/pull/2799\r\n\r\nPushed the package using these instructions:\r\nhttps://github.com/dotnet/core-eng/tree/master/Documentation/Tools/dotnet-core-push-oneoff-package\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42758","RelatedDescription":"Closed or merged PR \"[release/3.1] .NET Core 3.1.1 Intellisense bump (English)\" (#42758)"},{"Id":"532647597","IsPullRequest":false,"CreatedAt":"2019-12-04T19:43:41","Actor":"mshobohm","Number":"42755","RawContent":null,"Title":"FileNotFoundException with FileInfo.Length on Linux if binary filename contains a 0xDF-Byte ","State":"closed","Body":"Special characters in Linux filenames can confuse the FileInfo.Length property, resulting in FileNotFoundException as shown in the attached test case , see also readme.txt.\r\n\r\n[SSharpException.zip](https://github.com/dotnet/corefx/files/3921699/SSharpException.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/42755","RelatedDescription":"Closed issue \"FileNotFoundException with FileInfo.Length on Linux if binary filename contains a 0xDF-Byte \" (#42755)"},{"Id":"532322237","IsPullRequest":true,"CreatedAt":"2019-12-03T23:25:20","Actor":"mmitche","Number":"42754","RawContent":null,"Title":"[release/3.1] Stabilize package versions","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42754","RelatedDescription":"Closed or merged PR \"[release/3.1] Stabilize package versions\" (#42754)"},{"Id":"531353533","IsPullRequest":true,"CreatedAt":"2019-12-02T18:44:52","Actor":"dotnet-maestro[bot]","Number":"42753","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191128.1\r\n- **Date Produced**: 11/28/2019 5:05 PM\r\n- **Commit**: 1423ad5f3155362303ad9453c5604776040f9bbd\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.0-servicing.19578.1\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.0-servicing.19578.1\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.0-servicing.19578.1\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42753","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42753)"},{"Id":"531306663","IsPullRequest":false,"CreatedAt":"2019-12-02T18:04:26","Actor":"LeroyK","Number":"42752","RawContent":null,"Title":"Allow (de)serialization of abstract types with JsonSerializer when there is a JsonConverter for that type","State":"closed","Body":"# Issue Title\r\n\r\nAllow (de)serialization of abstract types with ``JsonSerializer`` when there is a ``JsonConverter`` for that type\r\n\r\n# General\r\n\r\nWhen you try to serialize or deserialize a type that is abstract, ``System.Text.Json.JsonSerializer`` currently throws a ``NotSupportedException`` with the message:\r\n\r\n> Deserialization of reference types without parameterless constructor is not supported.\r\n\r\nJsonSerializer should first check if the list of JsonConverters supports the abstract type and throw this exception only when there is no JsonConverter capable of converting the type.\r\n\r\nWe currently have a JsonConverter that supports polymorphism and because of this issue we cannot make the base type abstract.\r\n\r\n# Additional info\r\n.NET Core version: 3.0.1","Url":"https://github.com/dotnet/corefx/issues/42752","RelatedDescription":"Closed issue \"Allow (de)serialization of abstract types with JsonSerializer when there is a JsonConverter for that type\" (#42752)"},{"Id":"530466840","IsPullRequest":false,"CreatedAt":"2019-11-30T21:01:40","Actor":"kevin-montrose","Number":"42751","RawContent":null,"Title":"Calling Latin1 / iso-8859-1 Encoder Convert method iteratively produces different results than Encoding GetBytes on \"naughty\" string","State":"closed","Body":"Another bit of odd behavior with [`Encoder`](https://docs.microsoft.com/en-us/dotnet/api/system.text.encoder?view=netcore-3.0), this time with the Latin1 encoding.\r\n\r\nFor the [\"naughty\" string ](https://github.com/minimaxir/big-list-of-naughty-strings)`@\"0️⃣ 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣ 7️⃣ 8️⃣ 9️⃣ 🔟\"` calling `Encoding.GetBytes(...)` produces a different result than iteratively calling `Encoder.Convert(...)`.  I have a [repository with a reproduction](https://github.com/kevin-montrose/Latin1Repro/blob/master/Latin1Repro/Program.cs#L20) (also shows off issue #42750 , but I suspect these are unrelated issues - I just happened to find them at the same time).\r\n\r\nFor that string, the issue seems to be that `Encoder` doesn't write the final byte during flushing.\r\n\r\nLatin1 is sufficiently weird of an encoding that this may be expected?\r\n\r\nA smaller reproduction:\r\n\r\n```csharp\r\nvar encoding = Encoding.GetEncoding(\"iso-8859-1\");\r\nvar text = @\"0️⃣ 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣ 7️⃣ 8️⃣ 9️⃣ 🔟\";\r\nvar destBufferSize = 2;\r\n\r\nvar encodingBytes = encoding.GetBytes(text);\r\nvar encoder = encoding.GetEncoder();\r\n\r\nvar chars = text.ToCharArray();\r\n\r\nvar sourceSpan = chars.AsSpan();\r\nvar destSpan = new byte[destBufferSize].AsSpan();\r\nvar encoderBytes = new List<byte>();\r\n\r\nvar completed = false;\r\n\r\n// write everything in sourceSpan\r\nwhile (!completed)\r\n{\r\n    var flush = sourceSpan.Length == 0;\r\n    encoder.Convert(sourceSpan, destSpan, flush, out var charsConsumed, out var bytesProduced, out completed);\r\n    encoderBytes.AddRange(destSpan.Slice(0, bytesProduced).ToArray());\r\n\r\n    sourceSpan = sourceSpan.Slice(charsConsumed);\r\n}\r\n\r\nvar eq = encodingBytes.SequenceEqual(encoderBytes);\r\n\r\nif (eq)\r\n{\r\n    return;\r\n}\r\n\r\nvar encodingAsStr = encoding.GetString(encodingBytes);\r\nvar encoderAsStr = encoding.GetString(encoderBytes.ToArray());\r\n\r\nConsole.WriteLine($@\"Encoding Convert failure for destBufferSize={destBufferSize} - {encodingBytes.Length}:\"\"{encodingAsStr}\"\" vs {encoderBytes.Count}:\"\"{encoderAsStr}\"\"\");\r\n```\r\n\r\nThis prints when it (probably) shouldn't.\r\n\r\nThis behavior is quite sensitive to the value of `destBufferSize`, happening for this particular string at values 2, 4, 5, 8, 10, 20, 40 ,& 41 (note that 42 is the size the destination buffer needs to be for a single `Convert` call to be sufficient).","Url":"https://github.com/dotnet/corefx/issues/42751","RelatedDescription":"Closed issue \"Calling Latin1 / iso-8859-1 Encoder Convert method iteratively produces different results than Encoding GetBytes on \"naughty\" string\" (#42751)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"544799487","IsPullRequest":true,"CreatedAt":"2020-01-03T01:22:57","Actor":"dotnet-bot","Number":"40711","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40711","RelatedDescription":"Closed or merged PR \"Merge master to features/local-function-attributes\" (#40711)"},{"Id":"544799454","IsPullRequest":true,"CreatedAt":"2020-01-03T01:22:52","Actor":"dotnet-bot","Number":"40710","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40710","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#40710)"},{"Id":"544813964","IsPullRequest":true,"CreatedAt":"2020-01-03T01:15:02","Actor":"dibarbet","Number":"40712","RawContent":null,"Title":"Don't use syntax context cache when the task is cancelled.","State":"open","Body":"Resolves https://github.com/dotnet/roslyn/issues/39093\r\n\r\nIt was possible (especially when debugging) to cache a cancelled task.  This would cause us to from then on always return a cancelled task (lightbulb will not show).  So if the task is cancelled, remove it from the cache.  ","Url":"https://github.com/dotnet/roslyn/pull/40712","RelatedDescription":"Open PR \"Don't use syntax context cache when the task is cancelled.\" (#40712)"},{"Id":"544582883","IsPullRequest":true,"CreatedAt":"2020-01-03T00:11:22","Actor":"sharwell","Number":"40695","RawContent":null,"Title":"Reduce allocations in Diagnostic.HasIntersectingLocation","State":"closed","Body":"Allocations were identified under scenario #26778.\r\n\r\n* Avoid iterator allocations in Diagnostic.HasIntersectingLocation (1.9GB)\r\n* Avoid boxing allocations in CSDiagnosticInfo.AdditionalLocations (1.4GB)","Url":"https://github.com/dotnet/roslyn/pull/40695","RelatedDescription":"Closed or merged PR \"Reduce allocations in Diagnostic.HasIntersectingLocation\" (#40695)"},{"Id":"544655525","IsPullRequest":true,"CreatedAt":"2020-01-03T00:10:34","Actor":"sharwell","Number":"40697","RawContent":null,"Title":"Enable nullable reference types for Roslyn.Services.UnitTests.Utilities","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/40697","RelatedDescription":"Closed or merged PR \"Enable nullable reference types for Roslyn.Services.UnitTests.Utilities\" (#40697)"},{"Id":"544681746","IsPullRequest":true,"CreatedAt":"2020-01-03T00:09:45","Actor":"sharwell","Number":"40701","RawContent":null,"Title":"Avoid boxing Boolean in SyntaxTreeSemanticModel.GetMemberSemanticModel","State":"closed","Body":"When `Tuple<>` is used as a key in a map, it boxes its elements as part of the `GetHashCode` calculation.","Url":"https://github.com/dotnet/roslyn/pull/40701","RelatedDescription":"Closed or merged PR \"Avoid boxing Boolean in SyntaxTreeSemanticModel.GetMemberSemanticModel\" (#40701)"},{"Id":"544677748","IsPullRequest":true,"CreatedAt":"2020-01-02T23:59:50","Actor":"sharwell","Number":"40700","RawContent":null,"Title":"Enable nullable reference types for CSharpExtensions","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/40700","RelatedDescription":"Closed or merged PR \"Enable nullable reference types for CSharpExtensions\" (#40700)"},{"Id":"544798207","IsPullRequest":false,"CreatedAt":"2020-01-02T23:58:06","Actor":"SirIntellegence","Number":"40709","RawContent":null,"Title":"Visual studio crashes when typing out a null-conditional index operation in Roslyn","State":"open","Body":"**Version Used**: \r\nVersion 16.4.2\r\nVisualStudio.16.Release/16.4.2+29613.14\r\nMicrosoft .NET Framework\r\nVersion 4.8.03752\r\n\r\n**Steps to Reproduce**:\r\n\r\n1.  Open the C# interactive window.\r\n2. Type the following two lines into the interactive window as separate statements (so the first runs before you start typing the second):\r\n    `String[] foo = null`\r\n    `foo?[0]`\r\n\r\n**Expected Behavior**:\r\nThe output `null`\r\n**Actual Behavior**:\r\nVisual Studio crashes when you type '['. I have tried verifying that is was not an extension by starting in safe mode, but Roslyn won't run when in safe mode. I have attached a debugger and I don't see any extensions in the stack trace, so I think it is all first party code. The stack trace I have gotten is as follows:\r\n\r\n> Microsoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.ErrorReporting.FatalError.Report(System.Exception exception, System.Action<System.Exception> handler) Line 212\tC#\r\n>  \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.SignatureHelp.Controller.Session.ComputeItemsAsync(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SignatureHelp.ISignatureHelpProvider> providers = Length = 1, Microsoft.VisualStudio.Text.SnapshotPoint caretPosition = {Microsoft.VisualStudio.Text.SnapshotPoint}, Microsoft.CodeAnalysis.SignatureHelp.SignatureHelpTriggerInfo triggerInfo = {Microsoft.CodeAnalysis.SignatureHelp.SignatureHelpTriggerInfo}, Microsoft.CodeAnalysis.Document document = Submission#2, System.Threading.CancellationToken cancellationToken = IsCancellationRequested = false)\tUnknown\r\n>  \t[Resuming Async Method]\t\r\n>  \t[Native to Managed Transition]\t\r\n>  \tmscorlib.dll!System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(System.Threading.Tasks.Task task = Id = 86752, Status = Faulted, Method = \"{null}\", Result = \"{Not yet computed}\")\tUnknown\r\n>  \tmscorlib.dll!System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task task)\tUnknown\r\n>  \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.SignatureHelp.Controller.Session.ComputeItemsAsync(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SignatureHelp.ISignatureHelpProvider> providers = Length = 1, Microsoft.VisualStudio.Text.SnapshotPoint caretPosition = {Microsoft.VisualStudio.Text.SnapshotPoint}, Microsoft.CodeAnalysis.SignatureHelp.SignatureHelpTriggerInfo triggerInfo = {Microsoft.CodeAnalysis.SignatureHelp.SignatureHelpTriggerInfo}, Microsoft.CodeAnalysis.Document document = Submission#2, System.Threading.CancellationToken cancellationToken = IsCancellationRequested = false)\tUnknown\r\n>  \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.SignatureHelp.Controller.Session.ComputeItemsAsync(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SignatureHelp.ISignatureHelpProvider> providers = Length = 1, Microsoft.VisualStudio.Text.SnapshotPoint caretPosition = {Microsoft.VisualStudio.Text.SnapshotPoint}, Microsoft.CodeAnalysis.SignatureHelp.SignatureHelpTriggerInfo triggerInfo = {Microsoft.CodeAnalysis.SignatureHelp.SignatureHelpTriggerInfo}, Microsoft.CodeAnalysis.Document document = Submission#2, System.Threading.CancellationToken cancellationToken = IsCancellationRequested = false)\tUnknown\r\n>  \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.SignatureHelp.Controller.Session.ComputeModelInBackgroundAsync(Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.SignatureHelp.Model currentModel = null, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.SignatureHelp.ISignatureHelpProvider> providers = Length = 1, Microsoft.VisualStudio.Text.SnapshotPoint caretPosition = {Microsoft.VisualStudio.Text.SnapshotPoint}, Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.DisconnectedBufferGraph disconnectedBufferGraph = {Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.DisconnectedBufferGraph}, Microsoft.CodeAnalysis.SignatureHelp.SignatureHelpTriggerInfo triggerInfo = {Microsoft.CodeAnalysis.SignatureHelp.SignatureHelpTriggerInfo}, System.Threading.CancellationToken cancellationToken = IsCancellationRequested = false)\tUnknown\r\n>  \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.SignatureHelp.Controller.Session.ComputeModel.AnonymousMethod__0(Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.SignatureHelp.Model model, System.Threading.CancellationToken cancellationToken)\tUnknown\r\n>  \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.ModelComputation<System.__Canon>.ChainTaskAndNotifyControllerWhenFinished.AnonymousMethod__0(System.Threading.Tasks.Task<System.__Canon> t)\tUnknown\r\n>  \tMicrosoft.CodeAnalysis.Workspaces.dll!Roslyn.Utilities.TaskExtensions.SafeContinueWithFromAsync.AnonymousMethod__0(System.Threading.Tasks.Task antecedent) Line 309\tC#\r\n>  \tmscorlib.dll!System.Threading.Tasks.ContinuationResultTaskFromTask<System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Editor.Implementation.IntelliSense.SignatureHelp.Model>>.InnerInvoke()\tUnknown\r\n>  \tmscorlib.dll!System.Threading.Tasks.Task.Execute()\tUnknown\r\n>  \tmscorlib.dll!System.Threading.Tasks.Task.ExecutionContextCallback(object obj)\tUnknown\r\n>  \tmscorlib.dll!System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx)\tUnknown\r\n>  \tmscorlib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state, bool preserveSyncCtx)\tUnknown\r\n>  \tmscorlib.dll!System.Threading.Tasks.Task.ExecuteWithThreadLocal(ref System.Threading.Tasks.Task currentTaskSlot = Id = 86629, Status = Running, Method = Inspecting the state of an object in the debuggee of type System.Delegate is not supported in this context., Result = \"{Not yet computed}\")\tUnknown\r\n>  \tmscorlib.dll!System.Threading.Tasks.Task.ExecuteEntry(bool bPreventDoubleExecution)\tUnknown\r\n>  \tmscorlib.dll!System.Threading.Tasks.Task.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()\tUnknown\r\n>  \tmscorlib.dll!System.Threading.ThreadPoolWorkQueue.Dispatch()\tUnknown\r\n>  \tmscorlib.dll!System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\tUnknown\r\n","Url":"https://github.com/dotnet/roslyn/issues/40709","RelatedDescription":"Open issue \"Visual studio crashes when typing out a null-conditional index operation in Roslyn\" (#40709)"},{"Id":"544787403","IsPullRequest":false,"CreatedAt":"2020-01-02T23:15:00","Actor":"gafter","Number":"40708","RawContent":null,"Title":"bound node generator should prevent inheriting a Node type from a Node type","State":"open","Body":"As a rule we prefer every bound node type to be either abstract or sealed.\r\n\r\nWe should modify the generator to enforce this.\r\n","Url":"https://github.com/dotnet/roslyn/issues/40708","RelatedDescription":"Open issue \"bound node generator should prevent inheriting a Node type from a Node type\" (#40708)"},{"Id":"544759627","IsPullRequest":true,"CreatedAt":"2020-01-02T23:11:11","Actor":"allisonchou","Number":"40706","RawContent":null,"Title":"Fix for IDE0063 (use simple using statement) throws away compiler directives","State":"closed","Body":"Fixes #38737.","Url":"https://github.com/dotnet/roslyn/pull/40706","RelatedDescription":"Closed or merged PR \"Fix for IDE0063 (use simple using statement) throws away compiler directives\" (#40706)"},{"Id":"544763664","IsPullRequest":false,"CreatedAt":"2020-01-02T21:55:11","Actor":"333fred","Number":"40707","RawContent":null,"Title":"Be consistent in respected `suppressUseSiteDiagnostics` in `Binder.BindNamespaceOrTypeOrAliasSymbol`","State":"open","Body":"Currently, not all branches honor the `suppressUseSiteDiagnostics` flag. We either need to be consistent in all cases, or understand why it's ok to be inconsistent.\r\nhttps://github.com/dotnet/roslyn/pull/40431#discussion_r359053343","Url":"https://github.com/dotnet/roslyn/issues/40707","RelatedDescription":"Open issue \"Be consistent in respected `suppressUseSiteDiagnostics` in `Binder.BindNamespaceOrTypeOrAliasSymbol`\" (#40707)"},{"Id":"544719816","IsPullRequest":true,"CreatedAt":"2020-01-02T21:10:26","Actor":"dotnet-bot","Number":"40703","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40703","RelatedDescription":"Closed or merged PR \"Merge master to features/local-function-attributes\" (#40703)"},{"Id":"544719749","IsPullRequest":true,"CreatedAt":"2020-01-02T21:10:26","Actor":"dotnet-bot","Number":"40702","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40702","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#40702)"},{"Id":"544740425","IsPullRequest":false,"CreatedAt":"2020-01-02T20:47:45","Actor":"vsfeedback","Number":"40705","RawContent":null,"Title":"Allow editorconfig Naming Rules/Styles/SymbolSpecs to have uppercase letters","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/869465/editorconfig-naming-convention-not-working-c-visua.html)._\r\n\r\n---\r\nI am trying to use .editorconfig at solution level to define naming conventions for the two C# projects in it. I have latest Visual Studio as of date, updated just today to 16.4.2. It is giving warnings where not expected. For example, for class names, property names, enum names it says that it should begin with lower case, whereas as per my convention in editorconfig, they are expected in pascal case. Similarly for private fields in class, I have defined field name to begin with underscore (\"_\") character but it is reporting that \"_\" is unexpected.\r\n\r\nI am sure that it is using my editorconfig file because I see changes in messages if I deliberately change some parts just to see whether there is any impact. However, result is not as per expectation.\r\nSome lines where error is reported but not expected are:\r\npublic partial class WebApplication : AnApplication - \"The first word, 'WebApplication', must begin with a lower case character.\"\r\nprivate readonly string _driverPath; - \"Prefix '_' is not expected\"\r\npublic RemoteWebDriver WebDriver { get; private set; } -  \"The first word, 'WebDriver', must begin with a lower case character.\"\r\n\r\nAre there more settings that need to be done? Is there an error in my editorconfig inputs?\r\n\r\nHere is the relevant content of my editorconfig file.\r\n\r\n```ini\r\n# Naming rules definitions\r\n\r\ndotnet_naming_rule.interfacesPascalWithI.symbols = interfaces\r\ndotnet_naming_rule.interfacesPascalWithI.style = IP\r\ndotnet_naming_rule.interfacesPascalWithI.severity = suggestion\r\n\r\ndotnet_naming_rule.publicMethodsPascal.symbols = pubMethods\r\ndotnet_naming_rule.publicMethodsPascal.style = P\r\ndotnet_naming_rule.publicMethodsPascal.severity = suggestion\r\n\r\ndotnet_naming_rule.defaultMethodsCamel.symbols = methods\r\ndotnet_naming_rule.defaultMethodsCamel.style = c\r\ndotnet_naming_rule.defaultMethodsCamel.severity = suggestion\r\n\r\ndotnet_naming_rule.staticFieldsPascal.symbols = staticFields\r\ndotnet_naming_rule.staticFieldsPascal.style = c\r\ndotnet_naming_rule.staticFieldsPascal.severity = warning\r\n\r\ndotnet_naming_rule.constFieldsPascal.symbols = constFields\r\ndotnet_naming_rule.constFieldsPascal.style = c\r\ndotnet_naming_rule.constFieldsPascal.severity = warning\r\n\r\ndotnet_naming_rule.privateFieldsUnderscore.symbols = prvFields\r\ndotnet_naming_rule.privateFieldsUnderscore.style = _c\r\ndotnet_naming_rule.privateFieldsUnderscore.severity = suggestion\r\n\r\ndotnet_naming_rule.defaultFieldsCamel.symbols = fields\r\ndotnet_naming_rule.defaultFieldsCamel.style = c\r\ndotnet_naming_rule.defaultFieldsCamel.severity = suggestion\r\n\r\ndotnet_naming_rule.defaultPascal.symbols = default\r\ndotnet_naming_rule.defaultPascal.style = P\r\ndotnet_naming_rule.defaultPascal.severity = suggestion\r\n\r\n# Style Definitions\r\ndotnet_naming_style. P.capitalization = pascal_case\r\n\r\ndotnet_naming_style. IP.capitalization = pascal_case\r\ndotnet_naming_style. IP.required_prefix = I\r\n\r\ndotnet_naming_style.c.capitalization = camel_case\r\n\r\ndotnet_naming_style._c.capitalization = camel_case\r\ndotnet_naming_style._c.required_prefix = _\r\n\r\n# Symbols Definitions\r\ndotnet_naming_symbols.default.applicable_kinds = *\r\ndotnet_naming_symbols.default.applicable_accessibilities = *\r\n\r\ndotnet_naming_symbols.interfaces.applicable_kinds = interface\r\ndotnet_naming_symbols.interfaces.applicable_accessibilities = *\r\n\r\ndotnet_naming_symbols.pubMethods.applicable_kinds = method\r\ndotnet_naming_symbols.pubMethods.. applicable_accessibilities = public\r\n\r\ndotnet_naming_symbols.methods.applicable_kinds = method\r\ndotnet_naming_symbols.methods.applicable_accessibilities = *\r\n\r\ndotnet_naming_symbols.staticFields.applicable_kinds = field\r\ndotnet_naming_symbols.staticFields.applicable_accessibilities = *\r\ndotnet_naming_symbols.staticFields.required_modifiers = static\r\n\r\ndotnet_naming_symbols.constFields.applicable_kinds = field\r\ndotnet_naming_symbols.constFields.applicable_accessibilities = *\r\ndotnet_naming_symbols.constFields.required_modifiers = const\r\n\r\ndotnet_naming_symbols.prvFields.applicable_kinds = field\r\ndotnet_naming_symbols.prvFields.applicable_accessibilities = private\r\n\r\ndotnet_naming_symbols.fields.applicable_kinds = field\r\ndotnet_naming_symbols.fields.applicable_accessibilities = *\r\n```\r\n\r\n---\r\n### Original Comments\r\n\r\n#### Visual Studio Feedback System on 12/30/2019, 01:49 AM: \r\n\r\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\r\n\r\n#### Visual Studio Feedback System on 12/30/2019, 02:21 PM: \r\n\r\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\r\n\r\n\r\n---\r\n### Original Solutions\r\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/40705","RelatedDescription":"Open issue \"Allow editorconfig Naming Rules/Styles/SymbolSpecs to have uppercase letters\" (#40705)"},{"Id":"544734309","IsPullRequest":true,"CreatedAt":"2020-01-02T20:29:45","Actor":"jcouv","Number":"40704","RawContent":null,"Title":"Fix overflow in decoding certain types when System.ValueTuple types are missing","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/40430","Url":"https://github.com/dotnet/roslyn/pull/40704","RelatedDescription":"Open PR \"Fix overflow in decoding certain types when System.ValueTuple types are missing\" (#40704)"},{"Id":"544573191","IsPullRequest":true,"CreatedAt":"2020-01-02T17:33:45","Actor":"dotnet-maestro[bot]","Number":"40694","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:567feadf-e495-4ebb-cee4-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20200101.1\r\n- **Date Produced**: 1/1/2020 2:00 PM\r\n- **Commit**: bbd4a95d4bcb6e06f88a8590e18e499a6169b66e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20051.1\r\n\r\n[marker]: <> (End:567feadf-e495-4ebb-cee4-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/40694","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#40694)"},{"Id":"544671879","IsPullRequest":true,"CreatedAt":"2020-01-02T17:30:01","Actor":"jaredpar","Number":"40699","RawContent":null,"Title":"Annotate SyntaxNode and SyntaxToken","State":"open","Body":"This PR adds nullable annotations for `SyntaxNode` and `SyntaxToken`. \r\n\r\nA good chunk of this change is dealing with the fallout of the `Parent` properties of both types now being nullable instead of non-nullable. The CSharpEditAndContinueAnalyzer in particular has a strong assertion that these are non-nullable. This is generally \"okay\" because it understands that it won't be null given the context in which it operates. \r\n\r\nUnfortunately though there are many places where I've had to use `!` due to the lack of assertions around `Parent` uses. I'm sure there will be plenty of feedback on the different approaches I took here. All is very welcome because I'm unsure of the best path in several places.","Url":"https://github.com/dotnet/roslyn/pull/40699","RelatedDescription":"Open PR \"Annotate SyntaxNode and SyntaxToken\" (#40699)"},{"Id":"544660688","IsPullRequest":true,"CreatedAt":"2020-01-02T16:58:48","Actor":"tmat","Number":"40698","RawContent":null,"Title":"Annotate and clean up C# EE","State":"open","Body":"Add nullable annotations to C# EE and clean up code.","Url":"https://github.com/dotnet/roslyn/pull/40698","RelatedDescription":"Open PR \"Annotate and clean up C# EE\" (#40698)"},{"Id":"544566681","IsPullRequest":false,"CreatedAt":"2020-01-02T14:48:46","Actor":"NMSAzulX","Number":"40693","RawContent":null,"Title":"How do I optimize the build?","State":"closed","Body":"When I use roslyn, I find that there are a lot of useless DLL, in the debug folder, such as cs / de / es / fr / it / ja / ko / pl / ru / tr / zh-Hans / zh-Hant and so on.\r\n\r\nHow do I prevent them from building?\r\n\r\n![image](https://user-images.githubusercontent.com/16236903/71667760-67a3e400-2da1-11ea-8a0e-5c176f7f438b.png)\r\n\r\n![image](https://user-images.githubusercontent.com/16236903/71667810-9c17a000-2da1-11ea-9d6a-3dc41826369f.png)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/40693","RelatedDescription":"Closed issue \"How do I optimize the build?\" (#40693)"},{"Id":"544599001","IsPullRequest":false,"CreatedAt":"2020-01-02T14:24:36","Actor":"vsfeedback","Number":"40696","RawContent":null,"Title":"Incrrect sugestion about CType","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/867300/incrrect-sugestion-about-ctype.html)._\n\n---\nNext fragments of code:\nConstructor:    \n```\n<Flags>\nPublic Enum CycleKind\n    None = 0\n    SPEC = 1\n    PAC = 2\n    TU025 = 4\n    TU050 = 8\n    TU075 = 16\n    TU100 = 32\nEnd Enum\nPublic Sub New(key As Integer,\n                   kind As CycleKind,\n                   start As Integer,\n                   lengthChange As Decimal,\n                   title As String,\n                   city As String)\n        Me.Key = key\n        KeyBuilder.RegisterKey(key)\n        Me.Kind = kind\n        Me.Start = start\n        Me.LengthChange = CInt(lengthChange)\n        Me.Title = title\n        Me.City = city\n    End Sub\n```\nGetter in control-editor:\n        \n```\nGet\n    Dim dkind = If(cmbKind.SelectedIndex > -1, Cycle.CycleKind.TU100, 2 ^ cmbKind.SelectedIndex)\n    Return New Cycle(nKey, CType(dkind, Cycle.CycleKind), dpStart.SelectedId, udPercent.Value, dpTitle.Text, sCity)\nEnd Get\n```\nThis part of code is fully tested and works as designed, but CType required (from double to an enum) in the getter marked as redundant (Warning IDE0004).\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 12/26/2019, 00:19 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 12/30/2019, 02:47 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/40696","RelatedDescription":"Open issue \"Incrrect sugestion about CType\" (#40696)"},{"Id":"544497989","IsPullRequest":false,"CreatedAt":"2020-01-02T09:10:29","Actor":"vsfeedback","Number":"40692","RawContent":null,"Title":"System.Runtime.InteropServices.COMException when attempting to move a type in VS","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/870955/systemruntimeinteropservicescomexception-when-atte.html)._\n\n---\nReporting for a customer as they were unable to use the Report a Problem dialog. When invoking the Roslyn IDE \"Move type to ...\" on a type in their solution, they encounted this exception:\n\n```\nSystem.Runtime.InteropServices.COMException : Files and folders cannot:\n-be empty strings\n- contain any of the following characters: / ? : & \\ * \" < > | # %\n- contain Unicode control characters\n- contain surrogate characters\n- be system reserved names, including 'CON', 'AUX', 'PRN', 'COM1' or 'LPT2'\n- be '.' or '..'\n\nPlease enter a valid name.\n   at EnvDTE.ProjectItems.AddFolder(String Name,String Kind)\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.Extensions.ProjectExtensions.CreateFolder(ProjectItems currentItems,String container)\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.Extensions.ProjectExtensions.FindOrCreateFolder(Project project,IEnumerable`1 containers)\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.AddDocumentToFolder(Project project,DocumentId documentId,IEnumerable`1 folders,String documentName,SourceCodeKind sourceCodeKind,TextDocumentKind documentKind,SourceText initialText,String filePath)\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.AddDocumentCore(DocumentInfo info,SourceText initialText,TextDocumentKind documentKind)\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.ApplyDocumentAdded(DocumentInfo info,SourceText text)\n   at Microsoft.CodeAnalysis.Workspace.ApplyProjectChanges(ProjectChanges projectChanges)\n   at Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Solution newSolution,IProgressTracker progressTracker)\n   at Microsoft.VisualStudio.LanguageServices.Implementation.ProjectSystem.VisualStudioWorkspaceImpl.TryApplyChanges(Solution newSolution,IProgressTracker progressTracker)\n   at Microsoft.CodeAnalysis.CodeActions.ApplyChangesOperation.TryApply(Workspace workspace,IProgressTracker progressTracker,CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Editor.Implementation.CodeActions.CodeActionEditHandlerService.ProcessOperations(Workspace workspace,ImmutableArray`1 operations,IProgressTracker progressTracker,CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Editor.Implementation.CodeActions.CodeActionEditHandlerService.Apply(Workspace workspace,Document fromDocument,ImmutableArray`1 operations,String title,IProgressTracker progressTracker,CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.InvokeWorker(Func`1 getFromDocument,IProgressTracker progressTracker,CancellationToken cancellationToken)\n   at Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.<>c__DisplayClass20_0. <InvokeCore>b__0()\n   at Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformAction(IExtensionManager extensionManager,Object extension,Action action)\n   at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\n```\n\nI instructed them on taking a first-chance exception dump and am attaching it to this report.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 1/1/2020, 07:17 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/40692","RelatedDescription":"Open issue \"System.Runtime.InteropServices.COMException when attempting to move a type in VS\" (#40692)"},{"Id":"544448946","IsPullRequest":true,"CreatedAt":"2020-01-02T05:13:24","Actor":"sharwell","Number":"40691","RawContent":null,"Title":"Make AnalyzerActions a value type","State":"open","Body":"Reduces allocations during analysis of Roslyn.sln by many GB (10+ GB, ~4%).","Url":"https://github.com/dotnet/roslyn/pull/40691","RelatedDescription":"Open PR \"Make AnalyzerActions a value type\" (#40691)"},{"Id":"544391014","IsPullRequest":true,"CreatedAt":"2020-01-01T19:37:36","Actor":"06needhamt","Number":"40688","RawContent":null,"Title":"[WIP] Copy Comment Trivia from If Statement to Throw Expression","State":"open","Body":"Fixes #38102 \r\n\r\nWIP because of an issue with the comment trivia being placed before the semicolon token pushing it onto the next line.","Url":"https://github.com/dotnet/roslyn/pull/40688","RelatedDescription":"Open PR \"[WIP] Copy Comment Trivia from If Statement to Throw Expression\" (#40688)"},{"Id":"544371526","IsPullRequest":false,"CreatedAt":"2020-01-01T15:49:47","Actor":"JosefPihrt","Number":"40687","RawContent":null,"Title":"Property IsImplicitlyDeclared returns false for MySettings and similar symbols","State":"open","Body":"**Version Used**: 3.4.0\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create Visual Basic .NET Framework 4.7.2 Class Library\r\n2. Enumerate symbols in this library\r\n```csh\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.Build.Locator;\r\nusing Microsoft.CodeAnalysis;\r\nusing Microsoft.CodeAnalysis.MSBuild;\r\n\r\ninternal static class Program\r\n{\r\n    private static async Task Main(string[] args)\r\n    {\r\n        MSBuildLocator.RegisterDefaults();\r\n\r\n        using (var workspace = MSBuildWorkspace.Create())\r\n        {\r\n            var project = await workspace.OpenProjectAsync(@\"E:\\Projects\\Mix\\Foo\\Foo.vbproj\");\r\n            Compilation compilation = await project.GetCompilationAsync().ConfigureAwait(false);\r\n            var namespaceOrTypeSymbols = new Stack<INamespaceOrTypeSymbol>();\r\n            namespaceOrTypeSymbols.Push(compilation.Assembly.GlobalNamespace);\r\n\r\n            while (namespaceOrTypeSymbols.Count > 0)\r\n            {\r\n                INamespaceOrTypeSymbol namespaceOrTypeSymbol = namespaceOrTypeSymbols.Pop();\r\n\r\n                foreach (ISymbol symbol in namespaceOrTypeSymbol.GetMembers())\r\n                {\r\n                    switch (symbol.Kind)\r\n                    {\r\n                        case SymbolKind.Namespace:\r\n                            {\r\n                                namespaceOrTypeSymbols.Push((INamespaceSymbol)symbol);\r\n                                break;\r\n                            }\r\n                        case SymbolKind.NamedType:\r\n                            {\r\n                                if (symbol.Name.StartsWith(\"My\"))\r\n                                {\r\n                                    var namedType = (INamedTypeSymbol)symbol;\r\n                                    Console.WriteLine($\"{namedType.Name} {namedType.IsImplicitlyDeclared}\");\r\n                                    namespaceOrTypeSymbols.Push(namedType);\r\n                                }\r\n\r\n                                break;\r\n                            }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        Console.ReadKey();\r\n    }\r\n}\r\n```\r\nOutput:\r\n```\r\nMyApplication False\r\nMyComputer False\r\nMyProject False\r\nMySettings False\r\nMySettingsProperty False\r\nMyWebServices False\r\n```\r\n\r\n**Expected Behavior**:\r\nproperty `IsImplicitlyDeclared` returns `true` for My... symbols\r\n**Actual Behavior**:\r\nproperty `IsImplicitlyDeclared` returns `false` for My... symbols","Url":"https://github.com/dotnet/roslyn/issues/40687","RelatedDescription":"Open issue \"Property IsImplicitlyDeclared returns false for MySettings and similar symbols\" (#40687)"},{"Id":"544355430","IsPullRequest":true,"CreatedAt":"2020-01-01T14:39:40","Actor":"dotnet-maestro[bot]","Number":"40686","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:567feadf-e495-4ebb-cee4-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191231.1\r\n- **Date Produced**: 12/31/2019 2:07 PM\r\n- **Commit**: cc596c55ac68c952d0e052e6ed50334ed170b53a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19631.1\r\n\r\n[marker]: <> (End:567feadf-e495-4ebb-cee4-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/40686","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#40686)"},{"Id":"544327245","IsPullRequest":true,"CreatedAt":"2020-01-01T08:02:04","Actor":"sharwell","Number":"40685","RawContent":null,"Title":"Pooled delegates to avoid capturing allocations","State":"open","Body":"Changes made in this pull request are based on investigation data from #26778. Currently the total allocations for the scenario vastly exceed the ability to take a complete measurement, but _each_ of the changes produces allocation reductions of a few hundred MB to a few GB.\r\n\r\nRecommended review strategy is commit-by-commit.","Url":"https://github.com/dotnet/roslyn/pull/40685","RelatedDescription":"Open PR \"Pooled delegates to avoid capturing allocations\" (#40685)"},{"Id":"544296843","IsPullRequest":false,"CreatedAt":"2020-01-01T01:14:02","Actor":"AlekseyTs","Number":"40684","RawContent":null,"Title":"An ExceptionUtilities.UnexpectedValue is throw by VB compiler","State":"open","Body":"\r\nCompile the following code as a library:\r\n```\r\nImports System\r\n\r\nStructure SSSS3\r\n    Public A As String\r\n    Public B As Integer\r\nEnd Structure\r\n\r\nStructure SSSS2\r\n    Public S3 As SSSS3\r\nEnd Structure\r\n\r\nStructure SSSS\r\n    Public S2 As SSSS2\r\nEnd Structure\r\n\r\nStructure SSS\r\n    Public S As SSSS\r\nEnd Structure\r\n\r\nClass Clazz\r\n    Sub TEST()\r\n        Dim x As New SSS()\r\n        With x.S \r\n            With .S2\r\n                With .S3\r\n                    Dim s As Action = Sub()\r\n                                        .A  = \"\" \r\n                                      End Sub\r\n                End With\r\n            End With\r\n        End With\r\n        x.ToString()\r\n    End Sub\r\nEnd Class\r\n```\r\n\r\nObserved: Compiler crashes\r\n\r\nExpected: Success, it looks like the native compiler succeeds.\r\n\r\n```\r\n \tMicrosoft.CodeAnalysis.dll!Roslyn.Utilities.ExceptionUtilities.UnexpectedValue(object o) Line 20\tC#\r\n>\tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.LambdaRewriter.Analysis.VerifyCaptured(Microsoft.CodeAnalysis.VisualBasic.Symbol variableOrParameter, Microsoft.CodeAnalysis.SyntaxNode syntax) Line 451\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.LambdaRewriter.Analysis.ReferenceVariable(Microsoft.CodeAnalysis.VisualBasic.Symbol variableOrParameter, Microsoft.CodeAnalysis.SyntaxNode syntax) Line 436\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.LambdaRewriter.Analysis.VisitLocal(Microsoft.CodeAnalysis.VisualBasic.BoundLocal node) Line 485\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundLocal.Accept(Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor visitor) Line 6167\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.VisualBasic.BoundExpression node) Line 59\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor.VisitExpressionWithStackGuard(Integer recursionDepth, Microsoft.CodeAnalysis.VisualBasic.BoundExpression node) Line 184\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.VisualBasic.BoundNode node) Line 48\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitFieldAccess(Microsoft.CodeAnalysis.VisualBasic.BoundFieldAccess node) Line 11441\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundFieldAccess.Accept(Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor visitor) Line 4170\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.VisualBasic.BoundExpression node) Line 59\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor.VisitExpressionWithStackGuard(Integer recursionDepth, Microsoft.CodeAnalysis.VisualBasic.BoundExpression node) Line 184\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.VisualBasic.BoundNode node) Line 48\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitFieldAccess(Microsoft.CodeAnalysis.VisualBasic.BoundFieldAccess node) Line 11441\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundFieldAccess.Accept(Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor visitor) Line 4170\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.VisualBasic.BoundExpression node) Line 59\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor.VisitExpressionWithStackGuard(Integer recursionDepth, Microsoft.CodeAnalysis.VisualBasic.BoundExpression node) Line 184\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.VisualBasic.BoundNode node) Line 48\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitAssignmentOperator(Microsoft.CodeAnalysis.VisualBasic.BoundAssignmentOperator node) Line 11203\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundAssignmentOperator.Accept(Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor visitor) Line 1786\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.VisualBasic.BoundExpression node) Line 59\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor.VisitExpressionWithStackGuard(Integer recursionDepth, Microsoft.CodeAnalysis.VisualBasic.BoundExpression node) Line 184\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.VisualBasic.BoundNode node) Line 48\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitExpressionStatement(Microsoft.CodeAnalysis.VisualBasic.BoundExpressionStatement node) Line 11517\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundExpressionStatement.Accept(Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor visitor) Line 4857\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.VisualBasic.BoundNode node) Line 51\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitSequencePoint(Microsoft.CodeAnalysis.VisualBasic.BoundSequencePoint node) Line 11274\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundSequencePoint.Accept(Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor visitor) Line 2506\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.VisualBasic.BoundNode node) Line 51\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitList(Of Microsoft.CodeAnalysis.VisualBasic.BoundStatement)(System.Collections.Immutable.ImmutableArray(Of Microsoft.CodeAnalysis.VisualBasic.BoundStatement) list) Line 19\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitBlock(Microsoft.CodeAnalysis.VisualBasic.BoundBlock node) Line 11457\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.LambdaRewriter.Analysis.VisitLambda(Microsoft.CodeAnalysis.VisualBasic.BoundLambda node, Boolean convertToExpressionTree) Line 326\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.LambdaRewriter.Analysis.VisitConversion(Microsoft.CodeAnalysis.VisualBasic.BoundConversion conversion) Line 366\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundConversion.Accept(Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor visitor) Line 2123\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.VisualBasic.BoundExpression node) Line 59\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor.VisitExpressionWithStackGuard(Integer recursionDepth, Microsoft.CodeAnalysis.VisualBasic.BoundExpression node) Line 184\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.VisualBasic.BoundNode node) Line 48\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitAssignmentOperator(Microsoft.CodeAnalysis.VisualBasic.BoundAssignmentOperator node) Line 11205\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundAssignmentOperator.Accept(Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor visitor) Line 1786\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.VisitExpressionWithoutStackGuard(Microsoft.CodeAnalysis.VisualBasic.BoundExpression node) Line 59\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor.VisitExpressionWithStackGuard(Microsoft.CodeAnalysis.VisualBasic.BoundExpression node) Line 203\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor.VisitExpressionWithStackGuard(Integer recursionDepth, Microsoft.CodeAnalysis.VisualBasic.BoundExpression node) Line 186\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.VisualBasic.BoundNode node) Line 48\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitExpressionStatement(Microsoft.CodeAnalysis.VisualBasic.BoundExpressionStatement node) Line 11517\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundExpressionStatement.Accept(Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor visitor) Line 4857\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.VisualBasic.BoundNode node) Line 51\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitSequencePoint(Microsoft.CodeAnalysis.VisualBasic.BoundSequencePoint node) Line 11274\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundSequencePoint.Accept(Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor visitor) Line 2506\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.VisualBasic.BoundNode node) Line 51\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitList(Of Microsoft.CodeAnalysis.VisualBasic.BoundStatement)(System.Collections.Immutable.ImmutableArray(Of Microsoft.CodeAnalysis.VisualBasic.BoundStatement) list) Line 19\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitStatementList(Microsoft.CodeAnalysis.VisualBasic.BoundStatementList node) Line 11704\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundStatementList.Accept(Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor visitor) Line 6618\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.VisualBasic.BoundNode node) Line 51\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitList(Of Microsoft.CodeAnalysis.VisualBasic.BoundStatement)(System.Collections.Immutable.ImmutableArray(Of Microsoft.CodeAnalysis.VisualBasic.BoundStatement) list) Line 19\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitBlock(Microsoft.CodeAnalysis.VisualBasic.BoundBlock node) Line 11457\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.LambdaRewriter.Analysis.VisitBlock(Microsoft.CodeAnalysis.VisualBasic.BoundBlock node) Line 282\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundBlock.Accept(Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor visitor) Line 4361\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.VisualBasic.BoundNode node) Line 51\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitList(Of Microsoft.CodeAnalysis.VisualBasic.BoundStatement)(System.Collections.Immutable.ImmutableArray(Of Microsoft.CodeAnalysis.VisualBasic.BoundStatement) list) Line 19\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitBlock(Microsoft.CodeAnalysis.VisualBasic.BoundBlock node) Line 11457\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.LambdaRewriter.Analysis.VisitBlock(Microsoft.CodeAnalysis.VisualBasic.BoundBlock node) Line 282\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundBlock.Accept(Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor visitor) Line 4361\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.VisualBasic.BoundNode node) Line 51\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitList(Of Microsoft.CodeAnalysis.VisualBasic.BoundStatement)(System.Collections.Immutable.ImmutableArray(Of Microsoft.CodeAnalysis.VisualBasic.BoundStatement) list) Line 19\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitBlock(Microsoft.CodeAnalysis.VisualBasic.BoundBlock node) Line 11457\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.LambdaRewriter.Analysis.VisitBlock(Microsoft.CodeAnalysis.VisualBasic.BoundBlock node) Line 282\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundBlock.Accept(Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor visitor) Line 4361\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.VisualBasic.BoundNode node) Line 51\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitList(Of Microsoft.CodeAnalysis.VisualBasic.BoundStatement)(System.Collections.Immutable.ImmutableArray(Of Microsoft.CodeAnalysis.VisualBasic.BoundStatement) list) Line 19\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitBlock(Microsoft.CodeAnalysis.VisualBasic.BoundBlock node) Line 11457\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.LambdaRewriter.Analysis.VisitBlock(Microsoft.CodeAnalysis.VisualBasic.BoundBlock node) Line 282\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundBlock.Accept(Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor visitor) Line 4361\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.VisualBasic.BoundNode node) Line 51\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitList(Of Microsoft.CodeAnalysis.VisualBasic.BoundStatement)(System.Collections.Immutable.ImmutableArray(Of Microsoft.CodeAnalysis.VisualBasic.BoundStatement) list) Line 19\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitBlock(Microsoft.CodeAnalysis.VisualBasic.BoundBlock node) Line 11457\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.LambdaRewriter.Analysis.VisitBlock(Microsoft.CodeAnalysis.VisualBasic.BoundBlock node) Line 282\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundBlock.Accept(Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor visitor) Line 4361\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.VisualBasic.BoundNode node) Line 51\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitList(Of Microsoft.CodeAnalysis.VisualBasic.BoundStatement)(System.Collections.Immutable.ImmutableArray(Of Microsoft.CodeAnalysis.VisualBasic.BoundStatement) list) Line 19\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitBlock(Microsoft.CodeAnalysis.VisualBasic.BoundBlock node) Line 11457\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.LambdaRewriter.Analysis.VisitBlock(Microsoft.CodeAnalysis.VisualBasic.BoundBlock node) Line 282\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundBlock.Accept(Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor visitor) Line 4361\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.VisualBasic.BoundNode node) Line 51\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitList(Of Microsoft.CodeAnalysis.VisualBasic.BoundStatement)(System.Collections.Immutable.ImmutableArray(Of Microsoft.CodeAnalysis.VisualBasic.BoundStatement) list) Line 19\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalker.VisitBlock(Microsoft.CodeAnalysis.VisualBasic.BoundBlock node) Line 11457\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.LambdaRewriter.Analysis.VisitBlock(Microsoft.CodeAnalysis.VisualBasic.BoundBlock node) Line 282\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundBlock.Accept(Microsoft.CodeAnalysis.VisualBasic.BoundTreeVisitor visitor) Line 4361\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.BoundTreeWalkerWithStackGuard.Visit(Microsoft.CodeAnalysis.VisualBasic.BoundNode node) Line 51\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.LambdaRewriter.Analysis.Analyze(Microsoft.CodeAnalysis.VisualBasic.BoundNode node) Line 159\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.LambdaRewriter.Analysis.AnalyzeMethodBody(Microsoft.CodeAnalysis.VisualBasic.BoundBlock node, Microsoft.CodeAnalysis.VisualBasic.Symbols.MethodSymbol method, System.Collections.Generic.ISet(Of Microsoft.CodeAnalysis.VisualBasic.Symbol) symbolsCapturedWithoutCtor, Microsoft.CodeAnalysis.VisualBasic.BindingDiagnosticBag diagnostics) Line 139\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.LambdaRewriter.Rewrite(Microsoft.CodeAnalysis.VisualBasic.BoundBlock node, Microsoft.CodeAnalysis.VisualBasic.Symbols.MethodSymbol method, Integer methodOrdinal, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder(Of Microsoft.CodeAnalysis.CodeGen.LambdaDebugInfo) lambdaDebugInfoBuilder, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder(Of Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo) closureDebugInfoBuilder, Integer delegateRelaxationIdDispenser, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator slotAllocatorOpt, Microsoft.CodeAnalysis.VisualBasic.TypeCompilationState CompilationState, System.Collections.Generic.ISet(Of Microsoft.CodeAnalysis.VisualBasic.Symbol) symbolsCapturedWithoutCopyCtor, Microsoft.CodeAnalysis.VisualBasic.BindingDiagnosticBag diagnostics, System.Collections.Generic.HashSet(Of Microsoft.CodeAnalysis.VisualBasic.BoundNode) rewrittenNodes) Line 160\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.Rewriter.LowerBodyOrInitializer(Microsoft.CodeAnalysis.VisualBasic.Symbols.MethodSymbol method, Integer methodOrdinal, Microsoft.CodeAnalysis.VisualBasic.BoundBlock body, Microsoft.CodeAnalysis.VisualBasic.SynthesizedSubmissionFields previousSubmissionFields, Microsoft.CodeAnalysis.VisualBasic.TypeCompilationState compilationState, Boolean instrumentForDynamicAnalysis, System.Collections.Immutable.ImmutableArray(Of Microsoft.CodeAnalysis.CodeGen.SourceSpan) dynamicAnalysisSpans, Microsoft.CodeAnalysis.CodeGen.DebugDocumentProvider debugDocumentProvider, Microsoft.CodeAnalysis.VisualBasic.BindingDiagnosticBag diagnostics, Microsoft.CodeAnalysis.CodeGen.VariableSlotAllocator lazyVariableSlotAllocator, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder(Of Microsoft.CodeAnalysis.CodeGen.LambdaDebugInfo) lambdaDebugInfoBuilder, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder(Of Microsoft.CodeAnalysis.CodeGen.ClosureDebugInfo) closureDebugInfoBuilder, Integer delegateRelaxationIdDispenser, Microsoft.CodeAnalysis.VisualBasic.StateMachineTypeSymbol stateMachineTypeOpt, Boolean allowOmissionOfConditionalCalls, Boolean isBodySynthesized) Line 89\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.MethodCompiler.LowerAndEmitMethod(Microsoft.CodeAnalysis.VisualBasic.Symbols.MethodSymbol method, Integer methodOrdinal, Microsoft.CodeAnalysis.VisualBasic.BoundBlock block, Microsoft.CodeAnalysis.VisualBasic.Binder binderOpt, Microsoft.CodeAnalysis.VisualBasic.TypeCompilationState compilationState, Microsoft.CodeAnalysis.VisualBasic.BindingDiagnosticBag diagsForCurrentMethod, Microsoft.CodeAnalysis.VisualBasic.Binder.ProcessedFieldOrPropertyInitializers processedInitializers, Microsoft.CodeAnalysis.VisualBasic.SynthesizedSubmissionFields previousSubmissionFields, Microsoft.CodeAnalysis.VisualBasic.Symbols.MethodSymbol constructorToInject, Integer delegateRelaxationIdDispenser) Line 1457\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.MethodCompiler.CompileMethod(Microsoft.CodeAnalysis.VisualBasic.Symbols.MethodSymbol method, Integer methodOrdinal, Integer withEventPropertyIdDispenser, Integer delegateRelaxationIdDispenser, System.Predicate(Of Microsoft.CodeAnalysis.VisualBasic.Symbol) filter, Microsoft.CodeAnalysis.VisualBasic.TypeCompilationState compilationState, Microsoft.CodeAnalysis.VisualBasic.Binder.ProcessedFieldOrPropertyInitializers processedInitializers, Microsoft.CodeAnalysis.VisualBasic.Binder containingTypeBinder, Microsoft.CodeAnalysis.VisualBasic.SynthesizedSubmissionFields previousSubmissionFields, Microsoft.CodeAnalysis.VisualBasic.Symbols.MethodSymbol referencedConstructor) Line 1272\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.MethodCompiler.CompileNamedType(Microsoft.CodeAnalysis.VisualBasic.Symbols.NamedTypeSymbol containingType, System.Predicate(Of Microsoft.CodeAnalysis.VisualBasic.Symbol) filter) Line 690\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.MethodCompiler.VisitNamedType(Microsoft.CodeAnalysis.VisualBasic.Symbols.NamedTypeSymbol symbol) Line 522\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.Symbols.NamedTypeSymbol.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSymbolVisitor visitor) Line 1251\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.MethodCompiler.CompileNamespace(Microsoft.CodeAnalysis.VisualBasic.Symbols.NamespaceSymbol symbol) Line 510\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.MethodCompiler.VisitNamespace(Microsoft.CodeAnalysis.VisualBasic.Symbols.NamespaceSymbol symbol) Line 490\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.Symbols.NamespaceSymbol.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSymbolVisitor visitor) Line 566\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.MethodCompiler.CompileMethodBodies(Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation compilation, Microsoft.CodeAnalysis.VisualBasic.Emit.PEModuleBuilder moduleBeingBuiltOpt, Boolean emittingPdb, Boolean emitTestCoverageData, Boolean hasDeclarationErrors, System.Predicate(Of Microsoft.CodeAnalysis.VisualBasic.Symbol) filter, Microsoft.CodeAnalysis.VisualBasic.BindingDiagnosticBag diagnostics, System.Threading.CancellationToken cancellationToken) Line 246\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CompileMethods(Microsoft.CodeAnalysis.Emit.CommonPEModuleBuilder moduleBuilder, Boolean emittingPdb, Boolean emitMetadataOnly, Boolean emitTestCoverageData, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, System.Predicate(Of Microsoft.CodeAnalysis.Symbols.ISymbolInternal) filterOpt, System.Threading.CancellationToken cancellationToken) Line 2349\tBasic\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream peStream, System.IO.Stream metadataPEStream, System.IO.Stream pdbStream, System.IO.Stream xmlDocumentationStream, System.IO.Stream win32Resources, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources, Microsoft.CodeAnalysis.Emit.EmitOptions options, Microsoft.CodeAnalysis.IMethodSymbol debugEntryPoint, System.IO.Stream sourceLinkStream, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.EmbeddedText> embeddedTexts, Microsoft.CodeAnalysis.CodeGen.CompilationTestData testData, System.Threading.CancellationToken cancellationToken) Line 2497\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream peStream, System.IO.Stream pdbStream, System.IO.Stream xmlDocumentationStream, System.IO.Stream win32Resources, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources, Microsoft.CodeAnalysis.Emit.EmitOptions options, Microsoft.CodeAnalysis.IMethodSymbol debugEntryPoint, System.IO.Stream sourceLinkStream, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.EmbeddedText> embeddedTexts, System.IO.Stream metadataPEStream, System.Threading.CancellationToken cancellationToken) Line 2441\tC#\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.DiagnosticExtensions.GetEmitDiagnostics<Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation>(Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation c, Microsoft.CodeAnalysis.Emit.EmitOptions options, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources) Line 376\tC#\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.DiagnosticExtensions.GetEmitDiagnostics<Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation>(Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation c) Line 388\tC#\r\n \tMicrosoft.CodeAnalysis.VisualBasic.Test.Utilities.dll!Microsoft.CodeAnalysis.VisualBasic.UnitTests.CompilationUtils.VerifyUsedAssemblyReferences(System.Func(Of Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation) createCompilationLambda) Line 69\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.Test.Utilities.dll!Microsoft.CodeAnalysis.VisualBasic.UnitTests.CompilationUtils.CreateEmptyCompilation(Microsoft.CodeAnalysis.VisualBasic.UnitTests.BasicTestSource source, System.Collections.Generic.IEnumerable(Of Microsoft.CodeAnalysis.MetadataReference) references, Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions options, Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions parseOptions, String assemblyName) Line 58\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.Semantic.UnitTests.dll!Microsoft.CodeAnalysis.VisualBasic.UnitTests.FlowTestBase.CompileAndGetModelAndSpan(System.Xml.Linq.XElement program, System.Collections.Generic.List(Of Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode) startNodes, System.Collections.Generic.List(Of Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode) endNodes, System.Xml.Linq.XCData ilSource, System.Xml.Linq.XElement errors, Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions parseOptions) Line 91\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.Semantic.UnitTests.dll!Microsoft.CodeAnalysis.VisualBasic.UnitTests.FlowTestBase.CompileAndGetModelAndSpan(Of Microsoft.CodeAnalysis.DataFlowAnalysis)(System.Xml.Linq.XElement program, System.Func(Of Microsoft.CodeAnalysis.SemanticModel, System.Collections.Generic.List(Of Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode), System.Collections.Generic.List(Of Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode), Microsoft.CodeAnalysis.DataFlowAnalysis) analysisDelegate, System.Xml.Linq.XCData ilSource, System.Xml.Linq.XElement errors) Line 74\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.Semantic.UnitTests.dll!Microsoft.CodeAnalysis.VisualBasic.UnitTests.FlowTestBase.CompileAndAnalyzeDataFlow(System.Xml.Linq.XElement program, System.Xml.Linq.XCData ilSource, System.Xml.Linq.XElement errors) Line 64\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.Semantic.UnitTests.dll!Microsoft.CodeAnalysis.VisualBasic.UnitTests.FlowAnalysisTests.WithStatement_Expression_LValue_4d() Line 8827\tBasic\r\n```\r\n\r\nThe scenario is taken from ```Microsoft.CodeAnalysis.VisualBasic.UnitTests.FlowAnalysisTests.WithStatement_Expression_LValue_4d``` unit-test. It will be disabled in dotnet/features/UsedAssemblyReferences branch because it blocks the feature test hook.\r\n","Url":"https://github.com/dotnet/roslyn/issues/40684","RelatedDescription":"Open issue \"An ExceptionUtilities.UnexpectedValue is throw by VB compiler\" (#40684)"},{"Id":"544293472","IsPullRequest":false,"CreatedAt":"2020-01-01T00:28:25","Actor":"AlekseyTs","Number":"40683","RawContent":null,"Title":"It looks like we are failing to record usage of embedded types (VBCore, etc.) used by declarations as opposed to used by method bodies.","State":"open","Body":"Add ```other.VerifyEmitDiagnostics()``` to the unit-test ```Microsoft.CodeAnalysis.VisualBasic.UnitTests.CodeGenVBCore.VbCore_InvisibleViaInternalsVisibleTo``` and run it. \r\nAn assert is thrown indicating that ```Microsoft.VisualBasic.CompilerServices.Utils``` used as field's type is not marked for embedding. \r\n```\r\n>\tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.Symbols.EmbeddedSymbolManager.AddReferencedSymbolRaw(Microsoft.CodeAnalysis.VisualBasic.Symbol symbol, Roslyn.Utilities.ConcurrentSet(Of Microsoft.CodeAnalysis.VisualBasic.Symbol) allSymbols) Line 314\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.Symbols.EmbeddedSymbolManager.AddReferencedSymbolWithDependents(Microsoft.CodeAnalysis.VisualBasic.Symbol symbol, Roslyn.Utilities.ConcurrentSet(Of Microsoft.CodeAnalysis.VisualBasic.Symbol) allSymbols) Line 268\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.Symbols.EmbeddedSymbolManager.MarkSymbolAsReferenced(Microsoft.CodeAnalysis.VisualBasic.Symbol symbol, Roslyn.Utilities.ConcurrentSet(Of Microsoft.CodeAnalysis.VisualBasic.Symbol) allSymbols) Line 142\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.Emit.PEModuleBuilder.ProcessReferencedSymbol(Microsoft.CodeAnalysis.VisualBasic.Symbol symbol) Line 43\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.Emit.PEModuleBuilder.Translate(Microsoft.CodeAnalysis.VisualBasic.Symbols.NamedTypeSymbol namedTypeSymbol, Microsoft.CodeAnalysis.SyntaxNode syntaxNodeOpt, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, Boolean fromImplements, Boolean needDeclaration) Line 148\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.Emit.PEModuleBuilder.Translate(Microsoft.CodeAnalysis.VisualBasic.Symbols.TypeSymbol typeSymbol, Microsoft.CodeAnalysis.SyntaxNode syntaxNodeOpt, Microsoft.CodeAnalysis.DiagnosticBag diagnostics) Line 253\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.Symbols.FieldSymbol.IFieldReferenceGetType(Microsoft.CodeAnalysis.Emit.EmitContext context) Line 21\tBasic\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.Cci.MetadataVisitor.Visit(Microsoft.Cci.IFieldDefinition fieldDefinition) Line 120\tC#\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.Symbols.FieldSymbol.IReferenceDispatch(Microsoft.Cci.MetadataVisitor visitor) Line 69\tBasic\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.Cci.MetadataVisitor.Visit(Microsoft.Cci.ITypeDefinitionMember typeMember) Line 536\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.Cci.MetadataVisitor.Visit(System.Collections.Generic.IEnumerable<Microsoft.Cci.IFieldDefinition> fields) Line 95\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.Cci.ReferenceIndexerBase.Visit(Microsoft.Cci.ITypeDefinition typeDefinition) Line 289\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.Cci.MetadataVisitor.Visit(System.Collections.Generic.IEnumerable<Microsoft.Cci.INamedTypeDefinition> types) Line 363\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.Cci.ReferenceIndexer.Visit(Microsoft.CodeAnalysis.Emit.CommonPEModuleBuilder module) Line 31\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.Cci.MetadataWriter.CreateIndices() Line 492\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.Cci.MetadataWriter.BuildMetadataAndIL(Microsoft.Cci.PdbWriter nativePdbWriterOpt, System.Reflection.Metadata.BlobBuilder ilBuilder, System.Reflection.Metadata.BlobBuilder mappedFieldDataBuilder, System.Reflection.Metadata.BlobBuilder managedResourceDataBuilder, out System.Reflection.Metadata.Blob mvidFixup, out System.Reflection.Metadata.Blob mvidStringFixup) Line 1769\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.Cci.PeWriter.WritePeToStream(Microsoft.CodeAnalysis.Emit.EmitContext context, Microsoft.CodeAnalysis.CommonMessageProvider messageProvider, System.Func<System.IO.Stream> getPeStream, System.Func<System.IO.Stream> getPortablePdbStreamOpt, Microsoft.Cci.PdbWriter nativePdbWriterOpt, string pdbPathOpt, bool metadataOnly, bool isDeterministic, bool emitTestCoverageData, System.Security.Cryptography.RSAParameters? privateKeyOpt, System.Threading.CancellationToken cancellationToken) Line 67\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.SerializePeToStream(Microsoft.CodeAnalysis.Emit.CommonPEModuleBuilder moduleBeingBuilt, Microsoft.CodeAnalysis.DiagnosticBag metadataDiagnostics, Microsoft.CodeAnalysis.CommonMessageProvider messageProvider, System.Func<System.IO.Stream> getPeStream, System.Func<System.IO.Stream> getMetadataPeStreamOpt, System.Func<System.IO.Stream> getPortablePdbStreamOpt, Microsoft.Cci.PdbWriter nativePdbWriterOpt, string pdbPathOpt, bool metadataOnly, bool includePrivateMembers, bool isDeterministic, bool emitTestCoverageData, System.Security.Cryptography.RSAParameters? privateKeyOpt, System.Threading.CancellationToken cancellationToken) Line 2880\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.SerializeToPeStream(Microsoft.CodeAnalysis.Emit.CommonPEModuleBuilder moduleBeingBuilt, Microsoft.CodeAnalysis.Compilation.EmitStreamProvider peStreamProvider, Microsoft.CodeAnalysis.Compilation.EmitStreamProvider metadataPEStreamProvider, Microsoft.CodeAnalysis.Compilation.EmitStreamProvider pdbStreamProvider, System.Func<Microsoft.DiaSymReader.ISymWriterMetadataProvider, Microsoft.DiaSymReader.SymUnmanagedWriter> testSymWriterFactory, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, bool metadataOnly, bool includePrivateMembers, bool emitTestCoverageData, string pePdbFilePath, System.Security.Cryptography.RSAParameters? privateKeyOpt, System.Threading.CancellationToken cancellationToken) Line 2779\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream peStream, System.IO.Stream metadataPEStream, System.IO.Stream pdbStream, System.IO.Stream xmlDocumentationStream, System.IO.Stream win32Resources, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources, Microsoft.CodeAnalysis.Emit.EmitOptions options, Microsoft.CodeAnalysis.IMethodSymbol debugEntryPoint, System.IO.Stream sourceLinkStream, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.EmbeddedText> embeddedTexts, Microsoft.CodeAnalysis.CodeGen.CompilationTestData testData, System.Threading.CancellationToken cancellationToken) Line 2545\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream peStream, System.IO.Stream pdbStream, System.IO.Stream xmlDocumentationStream, System.IO.Stream win32Resources, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources, Microsoft.CodeAnalysis.Emit.EmitOptions options, Microsoft.CodeAnalysis.IMethodSymbol debugEntryPoint, System.IO.Stream sourceLinkStream, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.EmbeddedText> embeddedTexts, System.IO.Stream metadataPEStream, System.Threading.CancellationToken cancellationToken) Line 2441\tC#\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.DiagnosticExtensions.GetEmitDiagnostics<Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation>(Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation c, Microsoft.CodeAnalysis.Emit.EmitOptions options, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources) Line 376\tC#\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.DiagnosticExtensions.VerifyEmitDiagnostics<Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation>(Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation c, Microsoft.CodeAnalysis.Emit.EmitOptions options, Microsoft.CodeAnalysis.Test.Utilities.DiagnosticDescription[] expected) Line 365\tC#\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.DiagnosticExtensions.VerifyEmitDiagnostics<Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation>(Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation c, Microsoft.CodeAnalysis.Test.Utilities.DiagnosticDescription[] expected) Line 382\tC#\r\n \tMicrosoft.CodeAnalysis.VisualBasic.Emit.UnitTests.dll!Microsoft.CodeAnalysis.VisualBasic.UnitTests.CodeGenVBCore.VbCore_InvisibleViaInternalsVisibleTo() Line 2235\tBasic\r\n```\r\n\r\nThe Microsoft.CodeAnalysis.VisualBasic.UnitTests.CodeGenVBCore.VbCore_InvisibleViaInternalsVisibleTo unit-test will be temporarily disabled in dotnet/features/UsedAssemblyReferences branch because it blocks a test hook for the feature.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/40683","RelatedDescription":"Open issue \"It looks like we are failing to record usage of embedded types (VBCore, etc.) used by declarations as opposed to used by method bodies.\" (#40683)"},{"Id":"544284083","IsPullRequest":false,"CreatedAt":"2019-12-31T22:53:51","Actor":"AlekseyTs","Number":"40682","RawContent":null,"Title":"An assert fires in Microsoft.CodeAnalysis.VisualBasic.Symbols.SynthesizedEntryPointSymbol.ScriptEntryPoint.CreateBody()","State":"open","Body":"Add ```c.GetEmitDiagnostics()``` at the end of Microsoft.CodeAnalysis.VisualBasic.UnitTests.ImplicitClassTests.ScriptClassSymbol unit-test and run it:\r\n```\r\nDebug.Assert(_getAwaiterMethod IsNot Nothing)\r\n\r\n>\tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.Symbols.SynthesizedEntryPointSymbol.ScriptEntryPoint.CreateBody() Line 251\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.MethodCompiler.GetEntryPoint(Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation compilation, Microsoft.CodeAnalysis.VisualBasic.Emit.PEModuleBuilder moduleBeingBuilt, Microsoft.CodeAnalysis.VisualBasic.BindingDiagnosticBag diagnostics, System.Threading.CancellationToken cancellationToken) Line 306\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.MethodCompiler.CompileMethodBodies(Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation compilation, Microsoft.CodeAnalysis.VisualBasic.Emit.PEModuleBuilder moduleBeingBuiltOpt, Boolean emittingPdb, Boolean emitTestCoverageData, Boolean hasDeclarationErrors, System.Predicate(Of Microsoft.CodeAnalysis.VisualBasic.Symbol) filter, Microsoft.CodeAnalysis.VisualBasic.BindingDiagnosticBag diagnostics, System.Threading.CancellationToken cancellationToken) Line 272\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.dll!Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CompileMethods(Microsoft.CodeAnalysis.Emit.CommonPEModuleBuilder moduleBuilder, Boolean emittingPdb, Boolean emitMetadataOnly, Boolean emitTestCoverageData, Microsoft.CodeAnalysis.DiagnosticBag diagnostics, System.Predicate(Of Microsoft.CodeAnalysis.Symbols.ISymbolInternal) filterOpt, System.Threading.CancellationToken cancellationToken) Line 2349\tBasic\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream peStream, System.IO.Stream metadataPEStream, System.IO.Stream pdbStream, System.IO.Stream xmlDocumentationStream, System.IO.Stream win32Resources, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources, Microsoft.CodeAnalysis.Emit.EmitOptions options, Microsoft.CodeAnalysis.IMethodSymbol debugEntryPoint, System.IO.Stream sourceLinkStream, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.EmbeddedText> embeddedTexts, Microsoft.CodeAnalysis.CodeGen.CompilationTestData testData, System.Threading.CancellationToken cancellationToken) Line 2497\tC#\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream peStream, System.IO.Stream pdbStream, System.IO.Stream xmlDocumentationStream, System.IO.Stream win32Resources, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources, Microsoft.CodeAnalysis.Emit.EmitOptions options, Microsoft.CodeAnalysis.IMethodSymbol debugEntryPoint, System.IO.Stream sourceLinkStream, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.EmbeddedText> embeddedTexts, System.IO.Stream metadataPEStream, System.Threading.CancellationToken cancellationToken) Line 2441\tC#\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.DiagnosticExtensions.GetEmitDiagnostics<Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation>(Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation c, Microsoft.CodeAnalysis.Emit.EmitOptions options, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ResourceDescription> manifestResources) Line 376\tC#\r\n \tRoslyn.Test.Utilities.dll!Microsoft.CodeAnalysis.DiagnosticExtensions.GetEmitDiagnostics<Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation>(Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation c) Line 388\tC#\r\n \tMicrosoft.CodeAnalysis.VisualBasic.Test.Utilities.dll!Microsoft.CodeAnalysis.VisualBasic.UnitTests.CompilationUtils.VerifyUsedAssemblyReferences(System.Func(Of Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation) createCompilationLambda) Line 69\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.Test.Utilities.dll!Microsoft.CodeAnalysis.VisualBasic.UnitTests.CompilationUtils.CreateEmptyCompilation(Microsoft.CodeAnalysis.VisualBasic.UnitTests.BasicTestSource source, System.Collections.Generic.IEnumerable(Of Microsoft.CodeAnalysis.MetadataReference) references, Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions options, Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions parseOptions, String assemblyName) Line 58\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.Test.Utilities.dll!Microsoft.CodeAnalysis.VisualBasic.UnitTests.CompilationUtils.CreateCompilation(Microsoft.CodeAnalysis.VisualBasic.UnitTests.BasicTestSource source, System.Collections.Generic.IEnumerable(Of Microsoft.CodeAnalysis.MetadataReference) references, Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions options, Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions parseOptions, Roslyn.Test.Utilities.TargetFramework targetFramework, String assemblyName) Line 30\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.Test.Utilities.dll!Microsoft.CodeAnalysis.VisualBasic.UnitTests.CompilationUtils.CreateCompilationWithMscorlib40(Microsoft.CodeAnalysis.VisualBasic.UnitTests.BasicTestSource source, System.Collections.Generic.IEnumerable(Of Microsoft.CodeAnalysis.MetadataReference) references, Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions options, Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions parseOptions, String assemblyName) Line 142\tBasic\r\n \tMicrosoft.CodeAnalysis.VisualBasic.Symbol.UnitTests.dll!Microsoft.CodeAnalysis.VisualBasic.UnitTests.ImplicitClassTests.ScriptClassSymbol() Line 54\tBasic\r\n```\r\n\r\n```_getAwaiterMethod``` is null, if the assert is ignored, compiler is very likely to crash later due to a NullReferenceException.   \r\n\r\nThe Microsoft.CodeAnalysis.VisualBasic.UnitTests.ImplicitClassTests.ScriptClassSymbol unit-test will be temporarily disabled in dotnet/features/UsedAssemblyReferences branch because it blocks a test hook for the feature.\r\n","Url":"https://github.com/dotnet/roslyn/issues/40682","RelatedDescription":"Open issue \"An assert fires in Microsoft.CodeAnalysis.VisualBasic.Symbols.SynthesizedEntryPointSymbol.ScriptEntryPoint.CreateBody()\" (#40682)"},{"Id":"544424206","IsPullRequest":false,"CreatedAt":"2019-12-26T23:31:58","Actor":"anpaz-msft","Number":"40690","RawContent":null,"Title":"System.AccessViolationException when invoking extension method on ValueTuple","State":"open","Body":"# Issue Title\r\n\r\nWith .NET Core 3.1.100 we're getting a:\r\n`Fatal error. System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.` \r\nwhen invoking an extension method on a field of a `ValueTuple`.\r\n\r\nThis was fine with .NET Core 3.0.100\r\n\r\n# General\r\n\r\nWe're trying to update the Quantum Development Kit runtime from `3.0.100` to `3.1.100` and one of our tests is failing and crashing execution with the exception mentioned above. \r\n\r\nI have pinpoint the problem, it happens when we're trying to call an extension method (an extension for `object`) of a field of a ValueTuple if the field is a generic Type Parameter, for example:\r\n\r\n```C#\r\nusing System;\r\nusing System.Collections;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\n\r\nnamespace bug\r\n{\r\n    public static class Extension\r\n    {\r\n        public static String GetValue(this object value) => value?.ToString();\r\n    }\r\n\r\n    public partial class BGen<__T__>\r\n    {\r\n        public (Int64, __T__) Data { get; }\r\n\r\n        public BGen((Int64, __T__) data)\r\n        {\r\n            this.Data = data;\r\n        }\r\n\r\n        internal String Value\r\n        {\r\n            get\r\n            {\r\n                /// This works fine:\r\n                //var i2 = Data.Item2;\r\n                //var q2 = i2?.GetValue();\r\n\r\n                // This causes the AccessViolation:\r\n                var q2 = Data.Item2?.GetValue();\r\n                return q2;\r\n            }\r\n        }\r\n    }\r\n    \r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var i = new BGen<string>((0, \"foo\"));\r\n            var r = i.Value;\r\n\r\n            Console.WriteLine($\"Hello World: {string.Join(',', r)}\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThis happens on windows with version `3.1.100`. Works fine if downgrading to `3.0.100`.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/40690","RelatedDescription":"Open issue \"System.AccessViolationException when invoking extension method on ValueTuple\" (#40690)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"544764328","IsPullRequest":false,"CreatedAt":"2020-01-02T21:57:09","Actor":"Sergio0694","Number":"7936","RawContent":null,"Title":"ArrayPool<T> returning a single T item (!) as a T[] reference [UWP]","State":"open","Body":"Hello,\r\nI've just stumbled upon a very weird bug that's happening for me on UWP (Debug x64). I'm using `ArrayPool<T>.Shared` to rent arrays, and for whatever reason I've started getting an `ArrayTypeMismatchException` when trying to copy items from two rented arrays of the same type. Upon further investigation, turns out the reason is that one of the rented arrays is in fact... Just a single `T` item, and not a `T[]` object. Looks like something went really wrong with the type system and I'd be really curious to know what's going on.\r\nI've personally worked around the issue by just going back to non-pooled arrays in this case, but still this issue was so strange that I though it'd be interesting to share 😄\r\n\r\nHere's a screen:\r\n\r\n![image](https://user-images.githubusercontent.com/10199417/71695441-6cbd5f00-2db2-11ea-9ab3-10ad502e1faf.png)\r\n\r\nYou can see that `T[] newItems` array is in fact a single `T` element, and not an array at all.\r\n\r\nHere's another screen, where I've also added `.GetType()` on the second array just to double check:\r\n\r\n![image](https://user-images.githubusercontent.com/10199417/71695493-95ddef80-2db2-11ea-8964-e6d6d094513f.png)\r\n\r\nHere's the source code of that `Pool<T>` class I'm using: https://gist.github.com/Sergio0694/9a08161830fbcebf26e1973ad2a51cea.\r\n\r\nI've created a repro branch in my repo and I have steps that seem to reproduce the crash reliably, so I'd be happy to give access to the repo to anyone from the team, if you guys want to investigate this.\r\n\r\nThank you for your time, and happy new year to the whole team! 🎉","Url":"https://github.com/dotnet/corert/issues/7936","RelatedDescription":"Open issue \"ArrayPool<T> returning a single T item (!) as a T[] reference [UWP]\" (#7936)"},{"Id":"544371019","IsPullRequest":false,"CreatedAt":"2020-01-01T15:43:28","Actor":"yowl","Number":"7935","RawContent":null,"Title":"Wasm: Question on type of return values from shared generic calls","State":"open","Body":"As an example, take\r\nhttps://github.com/dotnet/corert/blob/88d75715f4c84c383365a33734d6f0cffe837061/src/System.Private.CoreLib/shared/System/Threading/WaitHandle.cs#L295\r\n\r\nThe second call parameter `safeWaitHandles` is an implicit op to a `Span<SafeWaitHandle?>` from its declaration\r\n```\r\nSafeWaitHandle?[]? safeWaitHandles = RentSafeWaitHandleArray(waitHandles.Length);\r\n```\r\n This implicit method  is a shared generic method so the call in LLVM looks like\r\n\r\n```\r\n%45 = call %\"[S.P.CoreLib]System.Span`1<System.__Canon>\" @\"S_P_CoreLib_System_Span_1<System___Canon>__op_Implicit\"(i8* %43, i8* %CastPtr163)\r\n```\r\nWhere the return is the Canon type, `[S.P.CoreLib]System.Span`1<System.__Canon>`\r\n\r\nThis is not a valid type to pass into `ObtainSafeWaitHandles` as in LLVM that is defined on the concrete type\r\n\r\n```\r\ndefine void @S_P_CoreLib_System_Threading_WaitHandle__ObtainSafeWaitHandles(i8*, %\"[S.P.CoreLib]System.ReadOnlySpan`1<System.Threading.WaitHandle>\", %\"[S.P.CoreLib]System.Span`1<Microsoft.Win32.SafeHandles.SafeWaitHandle>\", %\"[S.P.CoreLib]System.Span`1<native int>\")\r\n```\r\n\r\nWhat would be the right way to solve this?  Should it always convert types to their canonical versions to the extent that `System.Span`1<Microsoft.Win32.SafeHandles.SafeWaitHandle>` is invalid in the LLVM?  ","Url":"https://github.com/dotnet/corert/issues/7935","RelatedDescription":"Open issue \"Wasm: Question on type of return values from shared generic calls\" (#7935)"},{"Id":"543284657","IsPullRequest":true,"CreatedAt":"2020-01-01T05:38:38","Actor":"josephmoresena","Number":"7929","RawContent":null,"Title":"Generate version script automatically unix","State":"closed","Body":"As we discussed in #s, these changes will allow at shared libraries compilation on unix-like platforms to automatically generate a version-script and remove all local symbols and unused code.\r\nAs is said on https://github.com/dotnet/corert/issues/7340#issuecomment-486095150 the .so file contains all debug information so we need still remove all this information from file with strip in order to reduce significatly the size of .so file.","Url":"https://github.com/dotnet/corert/pull/7929","RelatedDescription":"Closed or merged PR \"Generate version script automatically unix\" (#7929)"},{"Id":"544258401","IsPullRequest":false,"CreatedAt":"2019-12-31T19:46:40","Actor":"yowl","Number":"7934","RawContent":null,"Title":"Wasm: fails the simple Generics TestNullableCasting test","State":"open","Body":"This test fails for Wasm.  Have tried the suggestion at https://github.com/dotnet/corert/pull/7897/files#r362161168, but hits the assert at https://github.com/dotnet/corert/blob/7cb8f8c93161ac5e365c6feef1379fe16188e191/src/ILCompiler.Compiler/src/Compiler/DependencyAnalysis/ReadyToRunGenericHelperNode.cs#L48 with target `{[S.P.CoreLib]System.Collections.Generic.ICollection`1<T_System.__Canon>}`\r\n\r\nStack\r\n\r\n```\r\n \tSystem.Private.CoreLib.dll!System.Diagnostics.Debug.Assert(bool condition, string message, string detailMessage)\tUnknown\r\n>\tILCompiler.Compiler.dll!ILCompiler.DependencyAnalysis.ReadyToRunGenericHelperNode.GetLookupSignature(ILCompiler.DependencyAnalysis.NodeFactory factory, ILCompiler.DependencyAnalysis.ReadyToRunHelperId id, object target) Line 48\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.DependencyAnalysis.ReadyToRunGenericHelperNode.ReadyToRunGenericHelperNode(ILCompiler.DependencyAnalysis.NodeFactory factory, ILCompiler.DependencyAnalysis.ReadyToRunHelperId helperId, object target, Internal.TypeSystem.TypeSystemEntity dictionaryOwner) Line 34\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.DependencyAnalysis.ReadyToRunGenericLookupFromTypeNode.ReadyToRunGenericLookupFromTypeNode(ILCompiler.DependencyAnalysis.NodeFactory factory, ILCompiler.DependencyAnalysis.ReadyToRunHelperId helperId, object target, Internal.TypeSystem.TypeSystemEntity dictionaryOwner) Line 296\tC#\r\n \tILCompiler.WebAssembly.dll!ILCompiler.DependencyAnalysis.WebAssemblyReadyToRunGenericLookupFromTypeNode.WebAssemblyReadyToRunGenericLookupFromTypeNode(ILCompiler.DependencyAnalysis.NodeFactory factory, ILCompiler.DependencyAnalysis.ReadyToRunHelperId helperId, object target, Internal.TypeSystem.TypeSystemEntity dictionaryOwner) Line 12\tC#\r\n \tILCompiler.WebAssembly.dll!ILCompiler.DependencyAnalysis.WebAssemblyCodegenNodeFactory.CreateGenericLookupFromTypeNode(ILCompiler.DependencyAnalysis.NodeFactory.ReadyToRunGenericHelperKey helperKey) Line 88\tC#\r\n \tSystem.Collections.Concurrent.dll!System.Collections.Concurrent.ConcurrentDictionary<ILCompiler.DependencyAnalysis.NodeFactory.ReadyToRunGenericHelperKey, ILCompiler.DependencyAnalysis.ISymbolNode>.GetOrAdd(ILCompiler.DependencyAnalysis.NodeFactory.ReadyToRunGenericHelperKey key, System.Func<ILCompiler.DependencyAnalysis.NodeFactory.ReadyToRunGenericHelperKey, ILCompiler.DependencyAnalysis.ISymbolNode> valueFactory)\tUnknown\r\n \tILCompiler.Compiler.dll!ILCompiler.DependencyAnalysis.NodeFactory.NodeCache<ILCompiler.DependencyAnalysis.NodeFactory.ReadyToRunGenericHelperKey, ILCompiler.DependencyAnalysis.ISymbolNode>.GetOrAdd(ILCompiler.DependencyAnalysis.NodeFactory.ReadyToRunGenericHelperKey key) Line 150\tC#\r\n \tILCompiler.Compiler.dll!ILCompiler.DependencyAnalysis.NodeFactory.ReadyToRunHelperFromTypeLookup(ILCompiler.DependencyAnalysis.ReadyToRunHelperId id, object target, Internal.TypeSystem.TypeSystemEntity dictionaryOwner) Line 910\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.GetGenericLookupHelperAndAddReference(ILCompiler.DependencyAnalysis.ReadyToRunHelperId helperId, object helperArg, out LLVMSharp.LLVMValueRef helper, System.Collections.Generic.IEnumerable<LLVMSharp.LLVMTypeRef> additionalArgs) Line 3981\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.CallGenericHelper(ILCompiler.DependencyAnalysis.ReadyToRunHelperId helperId, object helperArg) Line 1538\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.ImportCasting(Internal.IL.ILOpcode opcode, int token) Line 1516\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.ImportBasicBlock(Internal.IL.ILImporter.BasicBlock basicBlock) Line 597\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.ImportBasicBlocks() Line 304\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.Import() Line 167\tC#\r\n \tILCompiler.WebAssembly.dll!Internal.IL.ILImporter.CompileMethod(ILCompiler.WebAssemblyCodegenCompilation compilation, ILCompiler.DependencyAnalysis.WebAssemblyMethodCodeNode methodCodeNodeNeedingCode) Line 85\tC#\r\n \tILCompiler.WebAssembly.dll!ILCompiler.WebAssemblyCodegenCompilation.ComputeDependencyNodeDependencies(System.Collections.Generic.List<ILCompiler.DependencyAnalysisFramework.DependencyNodeCore<ILCompiler.DependencyAnalysis.NodeFactory>> obj) Line 74\tC#\r\n \tILCompiler.DependencyAnalysisFramework.dll!ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer<ILCompiler.DependencyAnalysisFramework.NoLogStrategy<ILCompiler.DependencyAnalysis.NodeFactory>, ILCompiler.DependencyAnalysis.NodeFactory>.ComputeDependencies(System.Collections.Generic.List<ILCompiler.DependencyAnalysisFramework.DependencyNodeCore<ILCompiler.DependencyAnalysis.NodeFactory>> deferredStaticDependencies) Line 139\tC#\r\n```","Url":"https://github.com/dotnet/corert/issues/7934","RelatedDescription":"Open issue \"Wasm: fails the simple Generics TestNullableCasting test\" (#7934)"},{"Id":"543970884","IsPullRequest":true,"CreatedAt":"2019-12-30T18:29:30","Actor":"yowl","Number":"7933","RawContent":null,"Title":"WIP: Wasm: enables calling generic methods that need a hidden context from finally blocks","State":"open","Body":"Add supports for passing the generic context to finally funclets so that `foreach` statements over e.g. `List<>` can be compiled.  `foreach` will add a finally to call dispose on the enumerator which if the method is generic and needs the context from a hidden parameter was previously not compiling.\r\n\r\nAdded test for this case.\r\n\r\nWIP as depends on #7248 ","Url":"https://github.com/dotnet/corert/pull/7933","RelatedDescription":"Open PR \"WIP: Wasm: enables calling generic methods that need a hidden context from finally blocks\" (#7933)"},{"Id":"543557063","IsPullRequest":true,"CreatedAt":"2019-12-30T00:59:36","Actor":"jkotas","Number":"7932","RawContent":null,"Title":"Update versions of dependencies","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7932","RelatedDescription":"Closed or merged PR \"Update versions of dependencies\" (#7932)"},{"Id":"543383206","IsPullRequest":true,"CreatedAt":"2019-12-29T17:00:50","Actor":"am11","Number":"7931","RawContent":null,"Title":"Set TRYRUN_OUTPUT in set_cache_value macro","State":"closed","Body":"Also fix cmake warning about unused variable by conditionally including it.\r\nWarning is appearing in every build for sometime, [e.g.](https://dev.azure.com/dnceng/public/_build/results?buildId=467504&view=logs&j=9d9bed24-aafc-5ca0-72eb-d60e686a8d72&t=a99ab234-d192-591f-6b8f-e2800dd13d29&l=117)\r\n\r\nFollowup on https://github.com/dotnet/corert/pull/7899#issuecomment-565599126\r\nContributes to: #4589","Url":"https://github.com/dotnet/corert/pull/7931","RelatedDescription":"Closed or merged PR \"Set TRYRUN_OUTPUT in set_cache_value macro\" (#7931)"},{"Id":"543350545","IsPullRequest":false,"CreatedAt":"2019-12-29T10:25:49","Actor":"secana","Number":"7930","RawContent":null,"Title":"Myget feed does not exist (404)","State":"closed","Body":"I've tried to update CoreRT to the newest version, but I'm not able to download from MyGet.\r\n\r\nI get the following error message:\r\n```powershell\r\ndotnet add package Microsoft.DotNet.ILCompiler --version 1.0.5-prerelease-00002 --source https://www.myget.org/F/dotnet/api/v3/index.json\r\n  Writing C:\\Users\\x\\AppData\\Local\\Temp\\tmp5431.tmp\r\ninfo : Adding PackageReference for package 'Microsoft.DotNet.ILCompiler' into project 'C:\\Users\\Stefa\\source\\repos\\CertDump\\CertDump\\CertDump.csproj'.\r\ninfo : Restoring packages for C:\\Users\\x\\source\\repos\\CertDump\\CertDump\\CertDump.csproj...\r\ninfo :   GET https://api.nuget.org/v3-flatcontainer/microsoft.dotnet.ilcompiler/index.json\r\ninfo :   CACHE https://dotnetfeed.blob.core.windows.net/dotnet-core/flatcontainer/microsoft.dotnet.ilcompiler/index.json\r\ninfo :   NotFound https://api.nuget.org/v3-flatcontainer/microsoft.dotnet.ilcompiler/index.json 689ms\r\nerror: Unable to load the service index for source https://www.myget.org/F/dotnet/api/v3/index.json.\r\nerror:   Response status code does not indicate success: 404 (Feed does not exist.).\r\n```\r\n\r\nAdding the feed to a nuget.config doesn't work either. Any ideas how to get the newest release?","Url":"https://github.com/dotnet/corert/issues/7930","RelatedDescription":"Closed issue \"Myget feed does not exist (404)\" (#7930)"},{"Id":"537956647","IsPullRequest":true,"CreatedAt":"2019-12-28T22:27:10","Actor":"DardoTheMaster","Number":"7914","RawContent":null,"Title":"Native Shared Library : Samples","State":"closed","Body":"This is just a practical example of a native shared library.\r\n\r\nPlease let me know if there's something i need to edit(My english isn't that good, so please if there are any points on the readme where my explanation isn't that clear,point them out)\r\n\r\n","Url":"https://github.com/dotnet/corert/pull/7914","RelatedDescription":"Closed or merged PR \"Native Shared Library : Samples\" (#7914)"},{"Id":"542941521","IsPullRequest":true,"CreatedAt":"2019-12-27T19:40:25","Actor":"jkotas","Number":"7928","RawContent":null,"Title":"Handle glibc sys/sysctl.h deprecation","State":"closed","Body":"Port https://github.com/dotnet/coreclr/pull/27048 to CoreRT PAL\r\n\r\nFixes #7927","Url":"https://github.com/dotnet/corert/pull/7928","RelatedDescription":"Closed or merged PR \"Handle glibc sys/sysctl.h deprecation\" (#7928)"},{"Id":"542935832","IsPullRequest":false,"CreatedAt":"2019-12-27T19:40:25","Actor":"Christopher876","Number":"7927","RawContent":null,"Title":"[Linux] glibc <sys/sysctl.h> header include build error","State":"closed","Body":"glibc deprecated <sys/sysctl.h> in version 2.30.\r\n\r\n## Software version:\r\n.NET Core 3.1\r\nFedora 31 x64\r\nglibc 2.30\r\n\r\n## Error:\r\n```bash\r\nSetting up directories for build\r\nChecking pre-requisites...\r\nCommencing build of corert native components for Linux.x64.Debug\r\n~/git/corert/bin/obj/Native/Linux.x64.Debug ~/git/corert\r\nInvoking cmake with arguments: \"/home/christopherwilliams/git/corert/buildscripts/..\" Debug\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /home/christopherwilliams/git/corert/bin/obj/Native/Linux.x64.Debug\r\nExecuting make install -j 5 \r\n[  1%] Built target bootstrappercpp\r\n[  1%] Built target AsmOffsets\r\n[  2%] Built target bootstrapper\r\n[  4%] Built target jitinterface\r\n[  6%] Built target bootstrapperdll\r\n[  6%] Building CXX object Runtime/Portable/CMakeFiles/PortableRuntime.dir/__/unix/PalRedhawkUnix.cpp.o\r\n[  9%] Built target System.Private.CoreLib.Native\r\n[  9%] Building CXX object Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/unix/PalRedhawkUnix.cpp.o\r\n[  9%] Building CXX object Runtime/Portable/CMakeFiles/PortableRuntime.dir/__/__/gc/unix/events.cpp.o\r\n[ 11%] Built target System.Private.TypeLoader.Native\r\n[ 11%] Building CXX object Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/ThunksMapping.cpp.o\r\n[ 11%] Building CXX object Runtime/Full/CMakeFiles/Runtime.dir/__/unix/PalRedhawkUnix.cpp.o\r\nIn file included from /home/christopherwilliams/git/corert/src/Native/Runtime/unix/PalRedhawkUnix.cpp:48:\r\n/usr/include/sys/sysctl.h:21:2: error: \"The <sys/sysctl.h> header is deprecated and will be removed.\" [-Werror,-W#warnings]\r\n#warning \"The <sys/sysctl.h> header is deprecated and will be removed.\"\r\n ^\r\n[ 11%] Building CXX object Runtime/Portable/CMakeFiles/PortableRuntime.dir/__/__/gc/unix/cgroup.cpp.o\r\nIn file included from /home/christopherwilliams/git/corert/src/Native/Runtime/unix/PalRedhawkUnix.cpp:48:\r\n/usr/include/sys/sysctl.h:21:2: error: \"The <sys/sysctl.h> header is deprecated and will be removed.\" [-Werror,-W#warnings]\r\n#warning \"The <sys/sysctl.h> header is deprecated and will be removed.\"\r\n ^\r\n1 error generated.\r\nmake[2]: *** [Runtime/Portable/CMakeFiles/PortableRuntime.dir/build.make:778: Runtime/Portable/CMakeFiles/PortableRuntime.dir/__/unix/PalRedhawkUnix.cpp.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\n[ 12%] Building CXX object Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/unix/HardwareExceptions.cpp.o\r\n1 error generated.\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/build.make:778: Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/unix/PalRedhawkUnix.cpp.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\n[ 12%] Building CXX object Runtime/Full/CMakeFiles/Runtime.dir/__/ThunksMapping.cpp.o\r\nIn file included from /home/christopherwilliams/git/corert/src/Native/Runtime/unix/PalRedhawkUnix.cpp:48:\r\n/usr/include/sys/sysctl.h:21:2: error: \"The <sys/sysctl.h> header is deprecated and will be removed.\" [-Werror,-W#warnings]\r\n#warning \"The <sys/sysctl.h> header is deprecated and will be removed.\"\r\n ^\r\n1 error generated.\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.dir/build.make:778: Runtime/Full/CMakeFiles/Runtime.dir/__/unix/PalRedhawkUnix.cpp.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\nmake[1]: *** [CMakeFiles/Makefile2:334: Runtime/Full/CMakeFiles/Runtime.dir/all] Error 2\r\nmake[1]: *** Waiting for unfinished jobs....\r\nmake[1]: *** [CMakeFiles/Makefile2:280: Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/all] Error 2\r\nmake[1]: *** [CMakeFiles/Makefile2:361: Runtime/Portable/CMakeFiles/PortableRuntime.dir/all] Error 2\r\nmake: *** [Makefile:130: all] Error 2\r\nFailed to build corert native components.\r\n```","Url":"https://github.com/dotnet/corert/issues/7927","RelatedDescription":"Closed issue \"[Linux] glibc <sys/sysctl.h> header include build error\" (#7927)"},{"Id":"542474668","IsPullRequest":false,"CreatedAt":"2019-12-26T08:05:57","Actor":"chenxustu1","Number":"7926","RawContent":null,"Title":"osx with error \"The data area passed to a system call is too small\"","State":"open","Body":"source code works fine on windows.\r\nosx encounter error:\r\n\r\n> EXEC : error : The data area passed to a system call is too small. [/Users/xxxxx.csproj]\r\n   (Exception from HRESULT: 0x8007007A)\r\n  System.Runtime.InteropServices.COMException (0x8007007A): The data area passed to a system call is too small.\r\n   (Exception from HRESULT: 0x8007007A)\r\n     at System.StubHelpers.MngdNativeArrayMarshaler.ConvertContentsToNative(IntPtr pMarshalState, Object& pManagedHome, IntPtr pNativeHome)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.GetEnumTypeIndex(IntPtr objWriter, EnumTypeDescriptor enumTypeDescriptor, EnumRecordTypeDescriptor[] typeRecords)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.GetEnumTypeIndex(EnumTypeDescriptor enumTypeDescriptor, EnumRecordTypeDescriptor[] typeRecords)\r\n     at ILCompiler.UserDefinedTypeDescriptor.GetEnumTypeIndex(TypeDesc type)\r\n     at ILCompiler.UserDefinedTypeDescriptor.GetVariableTypeIndex(TypeDesc type, Boolean needsCompleteIndex)\r\n     at ILCompiler.UserDefinedTypeDescriptor.GetClassTypeIndex(TypeDesc type, Boolean needsCompleteType)\r\n     at ILCompiler.UserDefinedTypeDescriptor.GetTypeIndex(TypeDesc type, Boolean needsCompleteType)\r\n     at ILCompiler.UserDefinedTypeDescriptor.GetVariableTypeIndex(TypeDesc type, Boolean needsCompleteIndex)\r\n     at ILCompiler.UserDefinedTypeDescriptor.GetVariableTypeIndex(TypeDesc type)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.EmitDebugVar(DebugVarInfo debugVar)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.EmitDebugVarInfo(ObjectNode node)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.EmitObject(String objectFilePath, IEnumerable`1 nodes, NodeFactory factory, IObjectDumper dumper)\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n/Users/xxxx/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-28426-01/b\r\nuild/Microsoft.NETCore.Native.targets(226,5): error MSB3073: The command \"\"/User\r\ns/xxxx/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha\r\n-28426-01/tools/ilc\" @\"obj/release/netcoreapp3.1/osx-x64/native/xxxxxxxx.ilc.rsp\r\n\"\" exited with code 1. [/Users/xxxxxxxxxxxx.csproj]","Url":"https://github.com/dotnet/corert/issues/7926","RelatedDescription":"Open issue \"osx with error \"The data area passed to a system call is too small\"\" (#7926)"},{"Id":"542116711","IsPullRequest":true,"CreatedAt":"2019-12-24T15:45:39","Actor":"MichalStrehovsky","Number":"7924","RawContent":null,"Title":"Sync type system from dotnet/runtime repo","State":"closed","Body":"First commit is just xcopy from CoreCLR. The rest are adjustments:\r\n\r\n* The modopts change will need changes on native metadata side so we can't take it without extra work. Using LINQ in the type system is also unacceptable for the runtime type system. The modopts change is kind of a gross hack in general so I'm going to wait and see if I find the energy to make it not gross (making MethodSignature one pointer bigger just because we sometimes need modopts is a pretty bad compromise for starters)\r\n* The value of diagnostic name is pretty limited and this infects all type system entities the compiler generates out of thin air. Don't feel like implementing that, so adding a dummy to unblock integration.","Url":"https://github.com/dotnet/corert/pull/7924","RelatedDescription":"Closed or merged PR \"Sync type system from dotnet/runtime repo\" (#7924)"},{"Id":"542126036","IsPullRequest":true,"CreatedAt":"2019-12-24T15:01:00","Actor":"MichalStrehovsky","Number":"7925","RawContent":null,"Title":"Sync CompareInfo.cs with dotnet/runtime","State":"closed","Body":"#7913 brought in an odd change.","Url":"https://github.com/dotnet/corert/pull/7925","RelatedDescription":"Closed or merged PR \"Sync CompareInfo.cs with dotnet/runtime\" (#7925)"},{"Id":"539543575","IsPullRequest":false,"CreatedAt":"2019-12-24T00:33:43","Actor":"Shadow4walker","Number":"7920","RawContent":null,"Title":"Avalonia 0.9.0 With Corert Takes forever to Compile!","State":"closed","Body":"I'm using Corert with 'Avalonia latest Released Build' and all were good till V0.9.0  Now my app Takes so much Time To Compile 'I had to Give Up after more than 2 Hours' and this was an issue with every Avalonia Nightly Build and Now I'm Facing it with he latest Released 0.9.0 the 0.8.3 and before was all good!!","Url":"https://github.com/dotnet/corert/issues/7920","RelatedDescription":"Closed issue \"Avalonia 0.9.0 With Corert Takes forever to Compile!\" (#7920)"},{"Id":"541369297","IsPullRequest":true,"CreatedAt":"2019-12-23T04:48:52","Actor":"yowl","Number":"7922","RawContent":null,"Title":"Wasm:support initialization of md arrays","State":"closed","Body":"Adds a test (previously failing) and support for initializing multidimensional arrays such as\r\n```\r\n        double[,] doubles = new double[2, 3]\r\n        {\r\n            {1.0, 1.1, 1.2 },\r\n            {2.0, 2.1, 2.2 },\r\n        };\r\n```\r\nFixes #7921 ","Url":"https://github.com/dotnet/corert/pull/7922","RelatedDescription":"Closed or merged PR \"Wasm:support initialization of md arrays\" (#7922)"},{"Id":"541345482","IsPullRequest":false,"CreatedAt":"2019-12-23T04:48:52","Actor":"yowl","Number":"7921","RawContent":null,"Title":"Wasm: InitializeArray when IsSzArray == false ","State":"closed","Body":"For the IL\r\n```\r\n IL_0045:  ldtoken     valuetype <PrivateImplementationDetails>/__StaticArrayInitTypeSize=144 <PrivateImplementationDetails>::9E374D7263B2452E25DE3D6E617F6A728D98A439\r\n  IL_004A:  call        void [System.Private.CoreLib]System.Runtime.CompilerServices.RuntimeHelpers::InitializeArray(class [System.Private.CoreLib]System.Array, valuetype [System.Private.CoreLib]System.RuntimeFieldHandle)\r\n ```\r\nWhich is from XmlSchemaValidator and this code\r\n```\r\n        internal static bool[,] ValidStates = new bool[12,12] {\r\n                                               /*ValidatorState.None*/      /*ValidatorState.Start  /*ValidatorState.TopLevelAttribute*/     /*ValidatorState.TopLevelTOrWS*/ /*ValidatorState.Element*/      /*ValidatorState.Attribute*/    /*ValidatorState.EndAttributes*/    /*ValidatorState.Text/      /*ValidatorState.WS/*       /*ValidatorState.EndElement*/   /*ValidatorState.SkipToEndElement*/         /*ValidatorState.Finish*/\r\n        /*ValidatorState.None*/             {  true,                        true,                     false,                                 false,                           false,                          false,                          false,                              false,                      false,                      false,                          false,                                      false},\r\n        /*ValidatorState.Start*/            {  false,                       true,                     true,                                  true,                            true,                           false,                          false,                              false,                      false,                      false,                          false,                                      true },\r\n        /*ValidatorState.TopLevelAttribute*/{  false,                       false,                    false,                                 false,                           false,                          false,                          false,                              false,                      false,                      false,                          false,                                      true },\r\n        /*ValidatorState.TopLevelTextOrWS*/ {  false,                       false,                    false,                                 true,                            true,                           false,                          false,                              false,                      false,                      false,                          false,                                      true },\r\n        /*ValidatorState.Element*/          {  false,                       false,                    false,                                 true,                            false,                          true,                           true,                               false,                      false,                      true,                           true,                                       false},\r\n        /*ValidatorState.Attribute*/        {  false,                       false,                    false,                                 false,                           false,                          true,                           true,                               false,                      false,                      true,                           true,                                       false},\r\n        /*ValidatorState.EndAttributes*/    {  false,                       false,                    false,                                 false,                           true,                           false,                          false,                              true,                       true,                       true,                           true,                                       false},\r\n        /*ValidatorState.Text*/             {  false,                       false,                    false,                                 false,                           true,                           false,                          false,                              true,                       true,                       true,                           true,                                       false},\r\n        /*ValidatorState.Whitespace*/       {  false,                       false,                    false,                                 false,                           true,                           false,                          false,                              true,                       true,                       true,                           true,                                       false},\r\n        /*ValidatorState.EndElement*/       {  false,                       false,                    false,                                 true,                            true,                           false,                          false,                              true,                       true,                       true,                           true /*?*/,                                 true },\r\n        /*ValidatorState.SkipToEndElement*/ {  false,                       false,                    false,                                 true,                            true,                           false,                          false,                              true,                       true,                       true,                           true,                                       true },\r\n        /*ValidatorState.Finish*/           {  false,                       true,                     false,                                 false,                           false,                          false,                          false,                              false,                      false,                      false,                          false,                                      false},\r\n        };\r\n```\r\nI want to implement in Wasm the InitializeArray for this but I cant find how the offset for the actual values is calculated.  Unlike a vector, I'm guessing there's a few extra fields for the number and size of dimensions?  If I look at the IL for `MDArray<Bool,2>__Get` it is getting an offset of 24 from somewhere, snippet from the value lookup:\r\n```\r\n  IL_002C:  ldflda      native int [System.Private.CoreLib]System.Object::m_pEEType\r\n  IL_0031:  ldc.i4.s    24\r\n  IL_0033:  add\r\n  IL_0034:  ldloc.0\r\n  IL_0035:  conv.u\r\n  IL_0036:  ldc.i4.4\r\n  IL_0037:  mul\r\n  IL_0038:  add\r\n  IL_0039:  ldobj       int32\r\n  IL_003E:  ret\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7921","RelatedDescription":"Closed issue \"Wasm: InitializeArray when IsSzArray == false \" (#7921)"},{"Id":"541505551","IsPullRequest":false,"CreatedAt":"2019-12-23T04:45:53","Actor":"Entomy","Number":"7923","RawContent":null,"Title":"Package ILVerify for redistribution","State":"closed","Body":"Projects such as [ILSupport](https://github.com/ins0mniaque/ILSupport) offer some tooling for IL, but there is no current support for IL verification, despite a [demand](https://github.com/ins0mniaque/ILSupport/issues/7).\r\n\r\nIf there already is some package of ILVerify, such as nuget, could we get a link somewhere for easy discovery? Otherwise, can we get this packaged so it can reasonably be incorporated into other tooling?","Url":"https://github.com/dotnet/corert/issues/7923","RelatedDescription":"Closed issue \"Package ILVerify for redistribution\" (#7923)"},{"Id":"538512534","IsPullRequest":false,"CreatedAt":"2019-12-17T22:40:50","Actor":"djee-ms","Number":"7917","RawContent":null,"Title":"Build error for reverse P/Invoke with ref struct parameter (ref vs. in)","State":"closed","Body":"In our project we have a reverse P/Invoke call for native to managed callback using a delegate defined as:\r\n```cs\r\nref struct I420AVideoFrame { [...] }\r\n\r\n[UnmanagedFunctionPointer(CallingConvention.StdCall, CharSet = CharSet.Ansi)]\r\npublic delegate void I420AVideoFrameUnmanagedCallback(IntPtr userData, ref I420AVideoFrame frame);\r\n```\r\n\r\nOn the C++ side, the signature is something like:\r\n```cpp\r\nvoid I420AVideoFrameCallback(void* user_data, const I420AVideoFrame& frame);\r\n```\r\n\r\nOn the managed C# side we register a static trampoline function that C++ will reverse P/Invoke, and which is defined as:\r\n```cs\r\n[MonoPInvokeCallback(typeof(I420AVideoFrameUnmanagedCallback))]\r\npublic static void I420AFrameCallback(IntPtr userData, ref I420AVideoFrame frame)\r\n{\r\n    [...]\r\n}\r\n```\r\n\r\nThis all works well as is, which is actually the workaround to the issue. Originally since the C++ signature uses `const&` (we just want to pass the struct by pointer/reference from C++ to C# as a view over read-only memory) we used `in` instead of `ref` for the `I420AVideoFrame` parameter, but this yields an error during the .NET Native build (and works with JIT):\r\n```\r\nerror : ILT0021: Could not resolve method 'EETypeRva:0x--------'\r\n```\r\n\r\nThis seems to be the error defined in `RuntimeTypeHandle.cs`, which is worryingly marked as \"last resort\" in comment, although I would expect there should be some metadata available for that method:\r\nhttps://github.com/dotnet/corert/blob/e2c4bc3d7889f951c231d7f131d6a7e20c034fb6/src/System.Private.CoreLib/src/System/RuntimeTypeHandle.cs#L134\r\n\r\nNote that we had to manually define the `MonoPInvokeCallback` attribute which seems to be required for working with Unity's IL2CPP, so we copied a definition from the Mono project:\r\n```cs\r\n[AttributeUsage(AttributeTargets.Method)]\r\nsealed class MonoPInvokeCallbackAttribute : Attribute\r\n{\r\n    public MonoPInvokeCallbackAttribute(Type t) { }\r\n}\r\n```\r\n\r\nIs there any reason `ref` works and not `in` in this context? I assume that by using `ref` we expose ourselves to bugs where the C# code inadvertently modifying the struct would produce some side effect on the C++ side which the C++ compiler did not intend to see (since the parameter is `const&` there), which could lead to bugs, so the current workaround with `ref` is not ideal.","Url":"https://github.com/dotnet/corert/issues/7917","RelatedDescription":"Closed issue \"Build error for reverse P/Invoke with ref struct parameter (ref vs. in)\" (#7917)"},{"Id":"538560233","IsPullRequest":false,"CreatedAt":"2019-12-16T18:08:01","Actor":"lifecoder-phoenix","Number":"7919","RawContent":null,"Title":"Native dll with async","State":"closed","Body":"Hello,\r\nI'm actually wondering how dll compiled to native would behave if I expose an async task and call it from a C++ program. Is that supported or would it run synchronously?(or start a different thread?)\r\n\r\nThanks in advance","Url":"https://github.com/dotnet/corert/issues/7919","RelatedDescription":"Closed issue \"Native dll with async\" (#7919)"},{"Id":"538389685","IsPullRequest":true,"CreatedAt":"2019-12-16T14:51:33","Actor":"MichalStrehovsky","Number":"7916","RawContent":null,"Title":"Allow shimming Assembly.GetCallingAssembly","State":"closed","Body":"For EXE-style projects this will make it look like we have a super advanced inliner that inlined the entire app. Not sure what to return when compiling as a library.\r\n\r\nHit in WPF that uses this API for dumb reasons (it goes to assembly Location next and then goes sniffing on the file system).","Url":"https://github.com/dotnet/corert/pull/7916","RelatedDescription":"Closed or merged PR \"Allow shimming Assembly.GetCallingAssembly\" (#7916)"},{"Id":"537983044","IsPullRequest":true,"CreatedAt":"2019-12-15T15:24:55","Actor":"Suchiman","Number":"7915","RawContent":null,"Title":"Rd xml improvements","State":"closed","Body":"- Produce actionable error messages if the provided Rd.xml is incorrect.\r\n- Allow specifying a particular overload of a method to root or root all methods with that name\r\n    - The downside is, that it's not possible to target a method with zero arguments.\r\n    - If no method matches, an error is produced. Previously it would throw a `NullReferenceException`\r\n\r\nWas looking around here https://docs.microsoft.com/en-us/dotnet/framework/net-native/parameter-element-net-native for inspiration but am open to suggestions.","Url":"https://github.com/dotnet/corert/pull/7915","RelatedDescription":"Closed or merged PR \"Rd xml improvements\" (#7915)"},{"Id":"537924433","IsPullRequest":true,"CreatedAt":"2019-12-14T16:16:24","Actor":"jkotas","Number":"7913","RawContent":null,"Title":"Update CoreLib from dotnet/runtime","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7913","RelatedDescription":"Closed or merged PR \"Update CoreLib from dotnet/runtime\" (#7913)"},{"Id":"537922700","IsPullRequest":true,"CreatedAt":"2019-12-14T16:16:15","Actor":"jkotas","Number":"7912","RawContent":null,"Title":"Strip ICU references when globalization is removed","State":"closed","Body":"Fixes #7888","Url":"https://github.com/dotnet/corert/pull/7912","RelatedDescription":"Closed or merged PR \"Strip ICU references when globalization is removed\" (#7912)"},{"Id":"537717932","IsPullRequest":true,"CreatedAt":"2019-12-14T10:26:41","Actor":"MichalStrehovsky","Number":"7911","RawContent":null,"Title":"Port diff from dotnet/runtime#777","State":"closed","Body":"dotnet/runtime#777 and #7906 did not check in identical diffs.\r\n\r\nMaking sure the change to HashtableOfPointer doesn't get lost since that file doesn't exist in the runtime repo.","Url":"https://github.com/dotnet/corert/pull/7911","RelatedDescription":"Closed or merged PR \"Port diff from dotnet/runtime#777\" (#7911)"},{"Id":"537142643","IsPullRequest":true,"CreatedAt":"2019-12-12T22:50:13","Actor":"jkotas","Number":"7909","RawContent":null,"Title":"Workaround use of internal reflection in Process.Start","State":"closed","Body":"- Add SerializationGuard removed feature and enabled it by default.\r\n- Removed CurlHandler removed feature. CurlHandler was removed from the framework and it is no longer needed.","Url":"https://github.com/dotnet/corert/pull/7909","RelatedDescription":"Closed or merged PR \"Workaround use of internal reflection in Process.Start\" (#7909)"},{"Id":"537232543","IsPullRequest":false,"CreatedAt":"2019-12-12T22:00:42","Actor":"yowl","Number":"7910","RawContent":null,"Title":"Wasm: support garbage collection","State":"closed","Body":"Currently attempting to `GC.Collect` results in an assert as there are no Modules in https://github.com/dotnet/corert/blob/d2f36cf85e8c3edaf462625df5c56396d7b860a0/src/Native/Runtime/RuntimeInstance.cpp#L160.  Creating this issue to track progress and somewhere I can bug the people that know.","Url":"https://github.com/dotnet/corert/issues/7910","RelatedDescription":"Closed issue \"Wasm: support garbage collection\" (#7910)"},{"Id":"535534600","IsPullRequest":true,"CreatedAt":"2019-12-12T18:34:40","Actor":"yyjdelete","Number":"7908","RawContent":null,"Title":"Fix an spell error in ILVerify","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7908","RelatedDescription":"Closed or merged PR \"Fix an spell error in ILVerify\" (#7908)"},{"Id":"534342316","IsPullRequest":true,"CreatedAt":"2019-12-11T21:50:45","Actor":"davidwrighton","Number":"7906","RawContent":null,"Title":"Fix LockFreeReaderHashtable","State":"closed","Body":"- Communication of the presence of an expanding hashtable was very close to not safe\r\n  - Changed to aggressively use Interlocked operations instead\r\n- If there were 3 threads, 1 which was expanding (thread A), 1 which failed an insert and was waiting on an expand(thread B), and a third which did a lookup for the item in process of insert on thread B, the table would find the item in process of insertion\r\n  - Fixed by moving to a scheme where insertion didn't actually write in the value until it was confirmed that that spot was the right place to insert, and the value would be preserved into an expansion\r\n  - In order to acquire a sentinel for scenarios without requiring the explicit definition of one, the first item inserted is used as the sentinel. It simply exists outside of the hashtable in a side variable","Url":"https://github.com/dotnet/corert/pull/7906","RelatedDescription":"Closed or merged PR \"Fix LockFreeReaderHashtable\" (#7906)"},{"Id":"534488631","IsPullRequest":false,"CreatedAt":"2019-12-08T04:00:31","Actor":"s-m-k","Number":"7907","RawContent":null,"Title":"[Linux] crash upon generating debug symbols","State":"open","Body":"**Software version:**\r\nILCompiler 1.0.0-alpha-28407-01\r\n.NET Core 3.1\r\nUbuntu 18.04 x64 (native/VirtualBox)\r\n\r\n**Symptoms:**\r\nSegmentation fault upon generating debug symbols.\r\n```\r\nCompiling [S.P.TypeLoader]Internal.Runtime.TypeLoader.ConstrainedCallSupport+GenericConstrainedCallDesc+<>c..ctor()...\r\nCompiling [S.P.TypeLoader]Internal.Runtime.TypeLoader.ConstrainedCallSupport+NonGenericConstrainedCallDesc+<>c..ctor()...\r\nCompiling [S.P.TypeLoader]Internal.Runtime.TypeLoader.ConstrainedCallSupport.GetThunkThatDereferencesThisPointerAndTailCallsTarget(native int)...\r\nSegmentation fault (core dumped)\r\n```\r\n\r\ngdb output:\r\n```\r\nThread 1 \"ilc\" received signal SIGSEGV, Segmentation fault.\r\nDwarfMemberFunctionIdTypeInfo::DumpTypes (this=<optimized out>, TypeBuilder=<optimized out>, Streamer=<optimized out>, TypeSection=<optimized out>, StrSection=<optimized out>)\r\n    at /root/corert_3112221/bin/obj/Native/Linux.x64.Release/ObjWriter/llvmCap/LLVM-prefix/src/LLVM/tools/ObjWriter/debugInfo/dwarf/dwarfTypeBuilder.cpp:559\r\n559     in /root/corert_3112221/bin/obj/Native/Linux.x64.Release/ObjWriter/llvmCap/LLVM-prefix/src/LLVM/tools/ObjWriter/debugInfo/dwarf/dwarfTypeBuilder.cpp\r\n(gdb) where\r\n#0  DwarfMemberFunctionIdTypeInfo::DumpTypes (this=<optimized out>, TypeBuilder=<optimized out>, Streamer=<optimized out>, TypeSection=<optimized out>, StrSection=<optimized out>)\r\n    at /root/corert_3112221/bin/obj/Native/Linux.x64.Release/ObjWriter/llvmCap/LLVM-prefix/src/LLVM/tools/ObjWriter/debugInfo/dwarf/dwarfTypeBuilder.cpp:559\r\n#1  0x00007fff5e289a76 in DwarfClassTypeInfo::DumpTypes (this=<optimized out>, TypeBuilder=<optimized out>, Streamer=<optimized out>, TypeSection=<optimized out>, StrSection=<optimized out>)\r\n    at /root/corert_3112221/bin/obj/Native/Linux.x64.Release/ObjWriter/llvmCap/LLVM-prefix/src/LLVM/tools/ObjWriter/debugInfo/dwarf/dwarfTypeBuilder.cpp:375\r\n#2  0x00007fff5e288c2b in DwarfInfo::Dump (this=0x83d2870, TypeBuilder=<optimized out>, Streamer=0x1a0dd30, TypeSection=0x18ffb18, StrSection=0x1901ee0)\r\n    at /root/corert_3112221/bin/obj/Native/Linux.x64.Release/ObjWriter/llvmCap/LLVM-prefix/src/LLVM/tools/ObjWriter/debugInfo/dwarf/dwarfTypeBuilder.cpp:34\r\n#3  0x00007fff5e289ac5 in DwarfClassTypeInfo::Dump (this=0x83d2870, TypeBuilder=0x1a0cb00, Streamer=0x1a0dd30, TypeSection=0x18ffb18, StrSection=0x1901ee0)\r\n    at /root/corert_3112221/bin/obj/Native/Linux.x64.Release/ObjWriter/llvmCap/LLVM-prefix/src/LLVM/tools/ObjWriter/debugInfo/dwarf/dwarfTypeBuilder.cpp:384\r\n#4  0x00007fff5e28a287 in UserDefinedDwarfTypesBuilder::EmitTypeInformation (this=<optimized out>, TypeSection=<optimized out>, StrSection=<optimized out>)\r\n    at /root/corert_3112221/bin/obj/Native/Linux.x64.Release/ObjWriter/llvmCap/LLVM-prefix/src/LLVM/tools/ObjWriter/debugInfo/dwarf/dwarfTypeBuilder.cpp:641\r\n#5  0x00007fff5e28fc38 in DwarfGen::Finish (this=0x1a2bf10) at /root/corert_3112221/bin/obj/Native/Linux.x64.Release/ObjWriter/llvmCap/LLVM-prefix/src/LLVM/tools/ObjWriter/debugInfo/dwarf/dwarfGen.cpp:1038\r\n```\r\n\r\n**Expected behavior:**\r\nThe compiler succeeds and the executable with proper debug symbols is generated.\r\n\r\n**Workaround:**\r\nSpecify `<DebugSymbols>false</DebugSymbols>` and `<DebugType>none</DebugType>` in your project configuration file to avoid executing the problematic code path, e.g.:\r\n```\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|AnyCPU'\">\r\n    <DebugSymbols>false</DebugSymbols>\r\n    <DebugType>none</DebugType>\r\n    <PlatformTarget>AnyCPU</PlatformTarget>\r\n  </PropertyGroup>\r\n```","Url":"https://github.com/dotnet/corert/issues/7907","RelatedDescription":"Open issue \"[Linux] crash upon generating debug symbols\" (#7907)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"544497665","IsPullRequest":false,"CreatedAt":"2020-01-02T23:51:38","Actor":"prasanth-G24","Number":"4118","RawContent":null,"Title":"Unable to compile a cs file","State":"closed","Body":"I want to compile only one .cs file and generate a .exe\r\nI tried so many ways but it looks like I cannot do it unless I create a project.\r\nIs there a way to compile a .cs file similar to compiling a .java file? (Eg: javac File.java)\r\nI am using dotnet sdk for ubuntu","Url":"https://github.com/dotnet/sdk/issues/4118","RelatedDescription":"Closed issue \"Unable to compile a cs file\" (#4118)"},{"Id":"544761188","IsPullRequest":true,"CreatedAt":"2020-01-02T21:48:00","Actor":"AaronRobinsonMSFT","Number":"4121","RawContent":null,"Title":"Fix parsing of metadata when looking for COM related CustomAttributes. [3.1.2xx]","State":"open","Body":"Fixes #4099\r\n\r\nReplaces #4112 ","Url":"https://github.com/dotnet/sdk/pull/4121","RelatedDescription":"Open PR \"Fix parsing of metadata when looking for COM related CustomAttributes. [3.1.2xx]\" (#4121)"},{"Id":"544094810","IsPullRequest":true,"CreatedAt":"2020-01-02T21:46:51","Actor":"AaronRobinsonMSFT","Number":"4112","RawContent":null,"Title":"Fix parsing of metadata when looking for COM related CustomAttributes.","State":"closed","Body":"Fixes https://github.com/dotnet/sdk/issues/4099","Url":"https://github.com/dotnet/sdk/pull/4112","RelatedDescription":"Closed or merged PR \"Fix parsing of metadata when looking for COM related CustomAttributes.\" (#4112)"},{"Id":"543108379","IsPullRequest":false,"CreatedAt":"2020-01-02T17:47:46","Actor":"tuscen","Number":"4106","RawContent":null,"Title":"User secret value can't have a dash (-) as a prefix","State":"closed","Body":"When trying to add a secret with a value prefixed with a dash I get the following error\r\n\r\n```\r\n$ dotnet user-secrets set KEY \"-1234567\" \r\nSpecify --help for a list of available options and commands.\r\nUnrecognized option '-1234567'\r\n```\r\n\r\ndotnet sdk version: 3.1.100","Url":"https://github.com/dotnet/sdk/issues/4106","RelatedDescription":"Closed issue \"User secret value can't have a dash (-) as a prefix\" (#4106)"},{"Id":"544569860","IsPullRequest":true,"CreatedAt":"2020-01-02T15:02:07","Actor":"dotnet-maestro[bot]","Number":"4119","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20200101.1\r\n- **Date Produced**: 1/1/2020 2:00 PM\r\n- **Commit**: bbd4a95d4bcb6e06f88a8590e18e499a6169b66e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20051.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20051.1\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.20051.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4119","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4119)"},{"Id":"544578400","IsPullRequest":true,"CreatedAt":"2020-01-02T13:27:39","Actor":"dotnet-maestro[bot]","Number":"4120","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Build**: 20200101.1\r\n- **Date Produced**: 1/2/2020 4:23 AM\r\n- **Commit**: c4f221c9c3114dfcf0fceabc7ee20ea9a496bc35\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha.1.20051.1\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4120","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/runtime\" (#4120)"},{"Id":"544354598","IsPullRequest":true,"CreatedAt":"2020-01-01T14:46:55","Actor":"dotnet-maestro[bot]","Number":"4116","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191231.1\r\n- **Date Produced**: 12/31/2019 2:07 PM\r\n- **Commit**: cc596c55ac68c952d0e052e6ed50334ed170b53a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19631.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19631.1\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19631.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4116","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4116)"},{"Id":"544356875","IsPullRequest":true,"CreatedAt":"2020-01-01T14:44:48","Actor":"dotnet-maestro[bot]","Number":"4117","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Build**: 20191231.3\r\n- **Date Produced**: 1/1/2020 7:01 AM\r\n- **Commit**: 8858705338c9ca66897e84632a08738c66b4985d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha.1.19631.3\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4117","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4117)"},{"Id":"544257239","IsPullRequest":true,"CreatedAt":"2019-12-31T19:38:55","Actor":"wli3","Number":"4115","RawContent":null,"Title":"WIP disable useapphost on mac by default","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/4115","RelatedDescription":"Open PR \"WIP disable useapphost on mac by default\" (#4115)"},{"Id":"544256308","IsPullRequest":true,"CreatedAt":"2019-12-31T19:32:40","Actor":"wli3","Number":"4114","RawContent":null,"Title":"[WIP] disable useapphost on mac by default","State":"open","Body":"reference description https://github.com/dotnet/sdk/pull/4019","Url":"https://github.com/dotnet/sdk/pull/4114","RelatedDescription":"Open PR \"[WIP] disable useapphost on mac by default\" (#4114)"},{"Id":"544188798","IsPullRequest":true,"CreatedAt":"2019-12-31T14:55:42","Actor":"dotnet-maestro[bot]","Number":"4113","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Build**: 20191230.4\r\n- **Date Produced**: 12/31/2019 7:48 AM\r\n- **Commit**: ca0490944385bbb3dd875df0aa7e51a3d1d9c9be\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha.1.19630.4\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4113","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4113)"},{"Id":"543872231","IsPullRequest":true,"CreatedAt":"2019-12-31T14:16:00","Actor":"dotnet-maestro[bot]","Number":"4110","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191230.1\r\n- **Date Produced**: 12/30/2019 1:48 PM\r\n- **Commit**: 01d0b636bfb96edf62a77912de25aa5cef143946\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19630.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19630.1\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19630.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4110","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4110)"},{"Id":"543023725","IsPullRequest":true,"CreatedAt":"2019-12-30T23:25:32","Actor":"dotnet-maestro[bot]","Number":"4105","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:84c11fd7-408f-4ada-5766-08d76e1d56cb)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.5.0.6355\r\n- **Date Produced**: 12/24/2019 5:03 AM\r\n- **Commit**: cb402b5a3340ab5b2605ecc72de7f70aaac95344\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.5.0-preview.2.6355\r\n\r\n[marker]: <> (End:84c11fd7-408f-4ada-5766-08d76e1d56cb)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4105","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from nuget/nuget.client\" (#4105)"},{"Id":"543883863","IsPullRequest":false,"CreatedAt":"2019-12-30T13:39:53","Actor":"shaulbehr","Number":"4111","RawContent":null,"Title":"Can't upgrade EF command line tool","State":"open","Body":"I've recently upgraded to EF Core 3.1.0. I'd also like to upgrade my command line tools, but...\r\n```\r\n> dotnet tool update --global dotnet-ef\r\nTool 'dotnet-ef' has multiple versions installed and cannot be updated.\r\n```\r\nOoh dear, how did that happen?\r\n```\r\n> dotnet tool list -g\r\nWarning: tool package 'dotnet-ef' is invalid, contact tool author:\r\nFailed to retrieve tool configuration: Could not find a part of the path 'C:\\Users\\Me\\.dotnet\\tools\\.store\\dotnet-ef\\2.1.11-servicing-32099\\dotnet-ef\\2.1.11\\tools\\netcoreapp2.1\\any\\DotnetToolSettings.xml'.\r\nPackage Id      Version      Commands\r\n--------------------------------------\r\ndotnet-ef       2.1.11       dotnet-ef\r\n```\r\nSo...how do I upgrade my command line tools?","Url":"https://github.com/dotnet/sdk/issues/4111","RelatedDescription":"Open issue \"Can't upgrade EF command line tool\" (#4111)"},{"Id":"543845521","IsPullRequest":false,"CreatedAt":"2019-12-30T11:22:03","Actor":"pilipenkona","Number":"4109","RawContent":null,"Title":".NET Core AnyCPU and custom executable","State":"open","Body":"Hello!\r\nAs far as I understand, I can’t use AnyCPU to work on all platforms. AnyCPU is suitable only for libraries. But the result of compilation of .net core project is always a library and some exe-runner.\r\n\r\nIs it possible to build AnyCPU project once and simply replace the exe-runner without building for different targets?","Url":"https://github.com/dotnet/sdk/issues/4109","RelatedDescription":"Open issue \".NET Core AnyCPU and custom executable\" (#4109)"},{"Id":"543387439","IsPullRequest":true,"CreatedAt":"2019-12-29T14:46:55","Actor":"dotnet-maestro[bot]","Number":"4108","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191228.1\r\n- **Date Produced**: 12/28/2019 1:48 PM\r\n- **Commit**: 44a53c66de431dbd54b4277d6338d2b103d6852d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19628.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19628.1\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19628.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4108","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4108)"},{"Id":"543165579","IsPullRequest":true,"CreatedAt":"2019-12-28T15:13:53","Actor":"dotnet-maestro[bot]","Number":"4107","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Build**: 20191227.5\r\n- **Date Produced**: 12/28/2019 6:27 AM\r\n- **Commit**: 2ecef0eed6838ffb8053df4354630a26e6a95a11\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha.1.19627.5\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4107","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4107)"},{"Id":"542868491","IsPullRequest":true,"CreatedAt":"2019-12-28T14:55:59","Actor":"dotnet-maestro[bot]","Number":"4101","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191227.1\r\n- **Date Produced**: 12/27/2019 3:35 PM\r\n- **Commit**: d2d025c1de37b1258f147851cb3e7373ad5ff09d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19627.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19627.1\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19627.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4101","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4101)"},{"Id":"542361346","IsPullRequest":false,"CreatedAt":"2019-12-28T05:23:49","Actor":"doggy8088","Number":"4097","RawContent":null,"Title":"dotnet --list-sdks shows duplicated same version","State":"closed","Body":"# Issue Title\r\n\r\nWhen I run `dotnet --list-sdks` will get many duplicated items with same version. One for short path, one for long path.\r\n\r\n# Repro steps\r\n\r\n```bat\r\nC:\\>dotnet --list-sdks\r\n1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n1.1.0 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n2.0.0 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n2.0.2 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n2.0.3 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.2 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.4 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.101 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.200 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.202 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.300 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.302 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.400 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.402 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.403 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.500 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.502 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.503 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.504 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.505 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.507 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.508 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.509 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.509 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.601 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.601 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.602 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.604 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.700 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.701 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.801 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.802 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n2.2.100 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n2.2.101 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.2.201 [C:\\Program Files\\dotnet\\sdk]\r\n2.2.201 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n2.2.202 [C:\\PROGRA~1\\dotnet\\sdk]\r\n2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n2.2.402 [C:\\PROGRA~1\\dotnet\\sdk]\r\n3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n3.0.101 [C:\\PROGRA~1\\dotnet\\sdk]\r\n3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n3.1.100 [C:\\PROGRA~1\\dotnet\\sdk]\r\n```\r\n# Expected results\r\n\r\n```bat\r\nC:\\>dotnet --list-sdks\r\n1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.509 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.601 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n2.2.201 [C:\\Program Files\\dotnet\\sdk]\r\n2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n```","Url":"https://github.com/dotnet/sdk/issues/4097","RelatedDescription":"Closed issue \"dotnet --list-sdks shows duplicated same version\" (#4097)"},{"Id":"542989993","IsPullRequest":false,"CreatedAt":"2019-12-27T21:06:32","Actor":"danmosemsft","Number":"4104","RawContent":null,"Title":"`dotnet -d` dumps stack to console","State":"open","Body":"I just did `dotnet -d` but without anything else\r\n```\r\ndan@danmose3:~/git/fastregex$ dotnet -d\r\nTelemetry is: Disabled\r\nSystem.ArgumentException: cannot be empty (Parameter 'name')\r\n   at Microsoft.DotNet.Cli.Utils.ToolCommandName..ctor(String name)\r\n   at Microsoft.DotNet.CommandFactory.LocalToolsCommandResolver.Resolve(CommandResolverArguments arguments)\r\n   at Microsoft.DotNet.CommandFactory.CompositeCommandResolver.Resolve(CommandResolverArguments commandResolverArguments)\r\n   at Microsoft.DotNet.CommandFactory.CommandResolver.TryResolveCommandSpec(ICommandResolverPolicy commandResolverPolicy, String commandName, IEnumerable`1 args, NuGetFramework framework, String configuration, String outputPath, String applicationName)\r\n   at Microsoft.DotNet.CommandFactory.CommandFactoryUsingResolver.Create(ICommandResolverPolicy commandResolverPolicy, String commandName, IEnumerable`1 args, NuGetFramework framework, String configuration, String outputPath, String applicationName)\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient)\r\n   at Microsoft.DotNet.Cli.Program.Main(String[] args)\r\ndan@danmose3:~/git/fastregex$\r\n```\r\nMy expectation is that it doesn't dump stack to the console.\r\n\r\nversion:\r\n```\r\ndan@danmose3:~/git/fastregex$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.1.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  157910edee\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n","Url":"https://github.com/dotnet/sdk/issues/4104","RelatedDescription":"Open issue \"`dotnet -d` dumps stack to console\" (#4104)"},{"Id":"542903246","IsPullRequest":false,"CreatedAt":"2019-12-27T19:31:56","Actor":"pablocar80","Number":"4103","RawContent":null,"Title":"build engine version printed as scientific number","State":"closed","Body":"check this out:\r\n\r\n![image](https://user-images.githubusercontent.com/36197603/71521869-10c17a80-2888-11ea-9f94-3d019fa337bc.png)\r\n","Url":"https://github.com/dotnet/sdk/issues/4103","RelatedDescription":"Closed issue \"build engine version printed as scientific number\" (#4103)"},{"Id":"542875295","IsPullRequest":true,"CreatedAt":"2019-12-27T15:23:03","Actor":"dotnet-maestro[bot]","Number":"4102","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Build**: 20191226.2\r\n- **Date Produced**: 12/27/2019 6:03 AM\r\n- **Commit**: bc47321f0c1922408fa07e1953e5b9b5735cf7d2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha.1.19626.2\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4102","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4102)"},{"Id":"542863751","IsPullRequest":false,"CreatedAt":"2019-12-27T12:42:31","Actor":"skoruba","Number":"4100","RawContent":null,"Title":"How to add .dcproj into solution via dotnet sdk","State":"open","Body":"I have a solution named: `MyProject.sln` and project related to docker called - `docker-compose.dcproj`.\r\n\r\nI want to create dotnet new template which will contain support for docker-compose through project `docker-compose.dcproj`.\r\n\r\nI tried this command:\r\n\r\n`dotnet sln MyProject.sln add docker-compose.dcproj`\r\n\r\nI got this error message:\r\n\r\n>Project 'C:\\MyProject\\docker-compose.dcproj' has an unknown project type and cannot be added to the solution file. Contact your SDK provider for support.\r\n\r\nI am using `.net core sdk` version `3.1.100`.\r\n\r\nHow to add `docker-compose.dcproj` into solution via command above?","Url":"https://github.com/dotnet/sdk/issues/4100","RelatedDescription":"Open issue \"How to add .dcproj into solution via dotnet sdk\" (#4100)"},{"Id":"542716230","IsPullRequest":false,"CreatedAt":"2019-12-27T02:10:54","Actor":"wjk","Number":"4099","RawContent":null,"Title":"GenerateClsidMap failed unexpectedly","State":"open","Body":"When I try to build a project of mine that sets EnableComHosting=true, I get the following build error:\r\n\r\n```\r\nError\tMSB4018\tThe \"GenerateClsidMap\" task failed unexpectedly.\r\nSystem.InvalidCastException: Specified cast is not valid.\r\n   at System.Reflection.Throw.InvalidCast()\r\n   at System.Reflection.Metadata.MemberReferenceHandle.op_Explicit(EntityHandle handle)\r\n   at Microsoft.NET.Build.Tasks.ClsidMap.GetComVisibleAttribute(MetadataReader reader, CustomAttributeHandleCollection customAttributes)\r\n   at Microsoft.NET.Build.Tasks.ClsidMap.<IsComVisible>g__IsComVisibleCore|8_0(TypeDefinition typeDefinition, <>c__DisplayClass8_0& )\r\n   at Microsoft.NET.Build.Tasks.ClsidMap.IsComVisible(MetadataReader metadataReader, TypeDefinition definition, Boolean assemblyComVisible)\r\n   at Microsoft.NET.Build.Tasks.ClsidMap.Create(MetadataReader metadataReader, String clsidMapPath)\r\n   at Microsoft.NET.Build.Tasks.GenerateClsidMap.ExecuteCore()\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n```\r\n\r\nI don't know what would cause this problem; I believe it started happening after I added a `ComImport` interface to the assembly. The code for the problematic project is available [here](https://github.com/wjk/MSIExtractApp/tree/shell-extension/src/MSIExtract.ShellExtension). This error is currently blocking all progress on this project. Thanks for looking into this for me!\r\n\r\n### .NET Core Info\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  65f04fb6db\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/sdk/issues/4099","RelatedDescription":"Open issue \"GenerateClsidMap failed unexpectedly\" (#4099)"},{"Id":"542550238","IsPullRequest":true,"CreatedAt":"2019-12-26T14:46:53","Actor":"dotnet-maestro[bot]","Number":"4098","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191225.1\r\n- **Date Produced**: 12/25/2019 2:23 PM\r\n- **Commit**: 4808b9983dea4d99e40df6215233ea78d396df6f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19625.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19625.1\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19625.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4098","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4098)"},{"Id":"542338044","IsPullRequest":true,"CreatedAt":"2019-12-25T14:51:55","Actor":"dotnet-maestro[bot]","Number":"4096","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191224.1\r\n- **Date Produced**: 12/24/2019 2:23 PM\r\n- **Commit**: b7573607e81dd496c0270ba724f5ece5568bd311\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19624.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19624.1\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19624.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4096","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4096)"},{"Id":"542129885","IsPullRequest":true,"CreatedAt":"2019-12-24T15:15:12","Actor":"dotnet-maestro[bot]","Number":"4095","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Build**: 20191223.2\r\n- **Date Produced**: 12/24/2019 12:30 AM\r\n- **Commit**: 07fa0f7f07a04e8238c63b90b208beebba108399\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha.1.19623.2\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4095","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4095)"},{"Id":"542122423","IsPullRequest":true,"CreatedAt":"2019-12-24T14:46:57","Actor":"dotnet-maestro[bot]","Number":"4094","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191223.1\r\n- **Date Produced**: 12/23/2019 2:06 PM\r\n- **Commit**: 84f3b4a8520b9e6d50afece47fa1adf4de8ec292\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19623.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19623.1\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19623.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4094","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4094)"},{"Id":"541450440","IsPullRequest":true,"CreatedAt":"2019-12-23T14:59:29","Actor":"dotnet-maestro[bot]","Number":"4092","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n## From https://github.com/dotnet/runtime\r\n- **Build**: 20191222.1\r\n- **Date Produced**: 12/22/2019 2:21 PM\r\n- **Commit**: 43cb8c7e9d10d641e4098c420b966b293e06f9e1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 5.0.0-alpha.1.19622.1\r\n\r\n[marker]: <> (End:ea219f43-0754-4d2f-576e-08d76e1d56cb)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4092","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4092)"},{"Id":"541462957","IsPullRequest":false,"CreatedAt":"2019-12-22T15:12:58","Actor":"bluetianx","Number":"4093","RawContent":null,"Title":"[proposal] I think that dotnet sdk need a rustup-like tool","State":"open","Body":"I think that dotnet sdk need a rustup-like tool that toolchain installer ,It can install  dotnet sdk ,unstall dotnet sdk,update dotnet sdk. ","Url":"https://github.com/dotnet/sdk/issues/4093","RelatedDescription":"Open issue \"[proposal] I think that dotnet sdk need a rustup-like tool\" (#4093)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"541189878","IsPullRequest":false,"CreatedAt":"2019-12-20T20:42:33","Actor":"vivmishra","Number":"146","RawContent":null,"Title":"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1","State":"open","Body":"This week we released localized [IntelliSense](https://docs.microsoft.com/en-us/visualstudio/ide/using-intellisense?view=vs-2019) files for .NET Core 3.0 and 3.1, in following 10 Visual Studio supported languages: \r\n- Brazilian Portuguese\r\n- Chinese (simplified)\r\n- Chinese (traditional)\r\n- French\r\n- German\r\n- Italian\r\n- Japanese\r\n- Korean\t\r\n- Russian\r\n- Spanish\r\n\r\nThe files (in zip archives) are available for download from [**Download localized .NET Core IntelliSense files**](https://dotnet.microsoft.com/download/dotnet-core/intellisense).\r\n\r\n * [Checksums for 3.0 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.0.0-intellisense-sha.txt)\r\n * [Checksums for 3.1 zip files](https://dotnetcli.blob.core.windows.net/dotnet/checksums/3.1.0-intellisense-sha.txt)\r\n\r\nYou can see [the .NET Core Guide](https://aka.ms/dotnet-core-intellisense) for instructions on how to use these files with Visual Studio.\r\n\r\nBy default, when you're developing .NET Core projects, the SDK only includes the English version of the IntelliSense files. But now you can enhance your localized Visual Studio development experience by adding the localized IntelliSense files from the download site into your local development environment.\r\n\r\nLastly, with this release we have made the localized IntelliSense available as zip archives that does require you to manually extract and copy the files to respective SDK install folders. But we plan to make this experience better in future releases.\r\n\r\n## Discussion\r\nTo discuss this issue, please comment on the corresponding issue at [dotnet/core #4032](https://github.com/dotnet/core/issues/4032).\r\n","Url":"https://github.com/dotnet/announcements/issues/146","RelatedDescription":"Open issue \"Announcing Availability of Localized IntelliSense for .NET Core 3.0 and 3.1\" (#146)"},{"Id":"536031264","IsPullRequest":false,"CreatedAt":"2019-12-10T22:29:30","Actor":"TaraOverfield","Number":"145","RawContent":null,"Title":"December 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on December 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework December 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-december-2019-security-and-quality-rollup/ )\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/145","RelatedDescription":"Open issue \"December 2019 .NET Updates\" (#145)"},{"Id":"535463424","IsPullRequest":false,"CreatedAt":"2019-12-10T03:08:33","Actor":"terrajobst","Number":"144","RawContent":null,"Title":"Removal of read-collaborator access","State":"open","Body":"***TL;DR**: We’ll remove collaborators with read-only access from our public repos on December 16th. This means some folks will lose their Collaborator badge and the ability to interact with the CI system.*\r\n\r\nOver the years, we’ve added a bunch of folks as collaborators with read permissions to our public repos. The rationale was that we wanted to be able to assign issues to community members because GitHub only allowed assigning issues to users with an explicit permission grant for the repository. However, they changed this in [June 2019](https://github.blog/2019-06-25-assign-issues-to-issue-commenters/). Now, we can assign issues to all users with explicit permissions as well as to users that have commented on the specific issue.\r\n\r\nAlso, we recently started to audit and tighten the permissions for our organizations. As a result, it became clear that large number of repo-specific permission grants are hard to review and audit. Internally, our goal is to grant all permissions via teams instead.\r\n\r\nHence, we plan to remove all collaborators from public repos that only have read permissions (folks with triage permissions will remain). The full list of affected repos is listed below.\r\n\r\nThis shouldn’t impact your ability to work with us, but losing explicit read-only has the following implications:\r\n\r\n-   **You’ll lose the collaborator badge**. We understand that this is visually appealing and for some people it might have been a badge of honor. But given that GitHub also shows a Contributor bade for folks whose PRs got merged, we don’t think it this will be a major take back.    \r\n    ![image](https://user-images.githubusercontent.com/5169960/70491508-43acf580-1ab6-11ea-94df-74ea2dde98b4.png)\r\n\r\n-   ~~**You lose the ability to interact with the CI system**. As a collaborator, you can use comments to [send commands to the CI system](https://github.com/dotnet/runtime/blob/master/docs/project/pullrequest-builds.md). While this can be useful at times, we generally don’t expect (or desire) contributors to do that. Of course, anyone can still access the CI logs.~~\r\n\r\n- **You might lose the ability to interact with the CI system**. Based on your feedback we have decided to give externals access to interact with the CI system *on a case by case basis*. If you believe you need to have that ability, please [leave a comment like Kevin's](https://github.com/dotnet/runtime/issues/718#issuecomment-563717478).\r\n\r\n| Public Repo                | \\#collaborators with read |\r\n|----------------------------|---------------------------|\r\n| arcade                     | 1                         |\r\n| BenchmarkDotNet            | 11                        |\r\n| cli                        | 2                         |\r\n| command-line-api           | 14                        |\r\n| coreclr                    | 18                        |\r\n| corefx                     | 180                       |\r\n| corefxlab                  | 4                         |\r\n| corert                     | 7                         |\r\n| core-sdk                   | 1                         |\r\n| docs                       | 3                         |\r\n| interactive-window         | 1                         |\r\n| machinelearning            | 1                         |\r\n| machinelearning-samples    | 1                         |\r\n| msbuild-language-service   | 1                         |\r\n| runtime                    | 128                       |\r\n| spark                      | 5                         |\r\n| standard                   | 1                         |\r\n| windowsdesktop             | 1                         |\r\n| winforms-datavisualization | 1                         |\r\n| Grand Total                | 381                       |\r\n\r\n### Discussion\r\n\r\nTo discuss this, please comment on the corresponding issue at https://github.com/dotnet/runtime/issues/718.","Url":"https://github.com/dotnet/announcements/issues/144","RelatedDescription":"Open issue \"Removal of read-collaborator access\" (#144)"},{"Id":"532249858","IsPullRequest":false,"CreatedAt":"2019-12-03T20:36:29","Actor":"MichaelSimons","Number":"143","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.1","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.1\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/).\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1511)\r\n\r\n## Details\r\n\r\n* [dotnet-docker#1509](https://github.com/dotnet/dotnet-docker/pull/1509)\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.1. This version of .NET Core is also a [long-term supported (LTS) release](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n\r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.1`.","Url":"https://github.com/dotnet/announcements/issues/143","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.1\" (#143)"},{"Id":"532163408","IsPullRequest":false,"CreatedAt":"2019-12-03T18:00:27","Actor":"leecow","Number":"142","RawContent":null,"Title":".NET Core 3.1.0","State":"open","Body":".NET Core 3.1.0 is available and https://github.com/dotnet/core/issues/3950 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.0/3.1.0.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 , either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/142","RelatedDescription":"Open issue \".NET Core 3.1.0\" (#142)"},{"Id":"523579400","IsPullRequest":false,"CreatedAt":"2019-11-15T16:51:27","Actor":"MichaelSimons","Number":"141","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Framework","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`.","Url":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141)"},{"Id":"523578215","IsPullRequest":false,"CreatedAt":"2019-11-15T16:49:04","Actor":"MichaelSimons","Number":"140","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Core","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`.","Url":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140)"},{"Id":"522994983","IsPullRequest":false,"CreatedAt":"2019-11-14T17:15:08","Actor":"leecow","Number":"139","RawContent":null,"Title":".NET Core 3.1.0 Preview 3","State":"open","Body":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 3\" (#139)"},{"Id":"522864668","IsPullRequest":false,"CreatedAt":"2019-11-14T13:37:28","Actor":"TaraOverfield","Number":"138","RawContent":null,"Title":"November 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on November 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n* [.NET Framework November 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.14 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.14/2.1.14.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.8/2.2.8.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\n* .NET Core 3.0.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.1/3.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.0) )\r\n\r\nA discussion issue is available at [core/3848](https://github.com/dotnet/core/issues/3848)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Open issue \"November 2019 .NET Updates\" (#138)"},{"Id":"522488807","IsPullRequest":false,"CreatedAt":"2019-11-13T21:41:06","Actor":"MichaelSimons","Number":"137","RawContent":null,"Title":".NET Framework Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-framework-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-framework-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-framework-samples/): .NET Framework Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Open issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137)"},{"Id":"521830642","IsPullRequest":false,"CreatedAt":"2019-11-12T22:05:51","Actor":"MichaelSimons","Number":"136","RawContent":null,"Title":".NET Core Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Open issue \".NET Core Docker images support for Windows Server, version 1909\" (#136)"},{"Id":"520243813","IsPullRequest":false,"CreatedAt":"2019-11-08T21:33:12","Actor":"CESARDELATORRE","Number":"135","RawContent":null,"Title":"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)","State":"open","Body":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n- **New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n- **Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n- **Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n- **PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n- **ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n","Url":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Open issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135)"},{"Id":"517169249","IsPullRequest":false,"CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Number":"134","RawContent":null,"Title":".NET Core 3.1.0 Preview 2","State":"open","Body":".NET Core 3.1.0 Preview 2 is available and https://github.com/dotnet/core/issues/3744 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 2, either responding to https://github.com/dotnet/core/issues/3744, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 2\" (#134)"},{"Id":"514753283","IsPullRequest":false,"CreatedAt":"2019-10-30T15:14:43","Actor":"jaredpar","Number":"133","RawContent":null,"Title":"Repository Consolidation Timeline","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Open issue \"Repository Consolidation Timeline\" (#133)"},{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"},{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Cumulative Update for Windows 10 version 1903 and version 1909](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/)\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework September 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/)\r\n* [.NET Framework September 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"},{"Id":"489344106","IsPullRequest":false,"CreatedAt":"2019-09-04T19:14:05","Actor":"leecow","Number":"120","RawContent":null,"Title":".NET Core 3.0 Preview 9","State":"open","Body":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Open issue \".NET Core 3.0 Preview 9\" (#120)"},{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1212798215264886785","CreatedAt":"2020-01-02T18:10:01+00:00","UserScreenname":"dotnet","Text":"Learn about data retrieval, paging, CRUD server-side, and client side application scenarios - all explained by Karl… https://t.co/Xj5h9QjwFm","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":46,"FavoriteCount":17,"RawContent":null},{"Id":"1212775566904102912","CreatedAt":"2020-01-02T16:40:02+00:00","UserScreenname":"dotnet","Text":"d https://t.co/uCg0hyzIgd","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":64,"FavoriteCount":7,"RawContent":null},{"Id":"1212118255042727936","CreatedAt":"2019-12-31T21:08:06+00:00","UserScreenname":"dotnet","Text":"Make data exploration easy... ICYMI, we announced a preview of a DataFrame type for .NET. \n\nGet a solid overview of… https://t.co/QY75Ds6jc1","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":213,"FavoriteCount":92,"RawContent":null},{"Id":"1212046511602843649","CreatedAt":"2019-12-31T16:23:01+00:00","UserScreenname":"dotnet","Text":"Coming up in the next #dotNETConf Focus Event... Egil Hansen gives us the best practices for unit testing #Blazor c… https://t.co/5X1iZfrViE","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":43,"FavoriteCount":17,"RawContent":null},{"Id":"1211760879248822272","CreatedAt":"2019-12-30T21:28:01+00:00","UserScreenname":"dotnet","Text":"It's almost here‼️ Let's get another #dotNETConf \"Focus on #Blazor\" session highlight... \n\nNext up: Javier Calvarro… https://t.co/XPMcoVyZq8","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":83,"FavoriteCount":35,"RawContent":null},{"Id":"1211685384637337600","CreatedAt":"2019-12-30T16:28:02+00:00","UserScreenname":"dotnet","Text":"In this today's #CSharp Language Highlight, @MairaCW and @CecilPhillip show you how to get started with pattern mat… https://t.co/7p78uYzGic","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":49,"FavoriteCount":12,"RawContent":null},{"Id":"1210673717019324416","CreatedAt":"2019-12-27T21:28:02+00:00","UserScreenname":"dotnet","Text":"Coming Jan 14, #dotNETConf. Learn to create beautiful web UI w/ #Blazor &amp; CSS as @EngstromJimmy takes us deep into… https://t.co/d0ecNXrXNu","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":85,"FavoriteCount":29,"RawContent":null},{"Id":"1210598221749334017","CreatedAt":"2019-12-27T16:28:02+00:00","UserScreenname":"dotnet","Text":"Tune in as members from the #dotNET product teams &amp; the community discuss the great community contributions for Fra… https://t.co/HcGRiwWY1b","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":43,"FavoriteCount":11,"RawContent":null},{"Id":"1210312838893441025","CreatedAt":"2019-12-26T21:34:01+00:00","UserScreenname":"dotnet","Text":"How do you manage your app state? Redux? INotifyPropertyChanged?  \n\nSave the date for #dotNETConf Jan 14 and tune i… https://t.co/VuRhZu0v5r","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":69,"FavoriteCount":19,"RawContent":null},{"Id":"1210264021259165703","CreatedAt":"2019-12-26T18:20:02+00:00","UserScreenname":"dotnet","Text":"Do you Python? #dotNETRocks chats with @MKennedy about the current state of #Python, it's many flavors, the tremend… https://t.co/lagZsJfye7","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":82,"FavoriteCount":31,"RawContent":null},{"Id":"1209580513717035010","CreatedAt":"2019-12-24T21:04:02+00:00","UserScreenname":"dotnet","Text":"In this super-short video, @mairacw and @gotheap give you a quick look at the async main language available in… https://t.co/Owxwm1yccE","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":79,"FavoriteCount":24,"RawContent":null},{"Id":"1209507022166736896","CreatedAt":"2019-12-24T16:12:00+00:00","UserScreenname":"dotnet","Text":"#dotNETConf session highlight... Get the A through Z of routing in a #Blazor 🔥 app directly from #MSMVP,… https://t.co/WqlPTXGbRl","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":53,"FavoriteCount":20,"RawContent":null},{"Id":"1209220389768970240","CreatedAt":"2019-12-23T21:13:01+00:00","UserScreenname":"dotnet","Text":"In today's #DevDecember, we take a look back at the big news in #dotNET. \n\nHere is all the info and all the links y… https://t.co/agK6dp6BmU","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":81,"FavoriteCount":18,"RawContent":null},{"Id":"1209144678601383936","CreatedAt":"2019-12-23T16:12:10+00:00","UserScreenname":"dotnet","Text":"#dotNETConf shock &amp; awe... @StevenSanderson shows us the future of #Blazor w/ WebAssembly, PWAs, Hybrid, &amp; more.  L… https://t.co/R7kxA7veZl","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":118,"FavoriteCount":47,"RawContent":null},{"Id":"1208378586459070464","CreatedAt":"2019-12-21T13:28:00+00:00","UserScreenname":"dotnet","Text":"Are you familiar with Expression Bodied Members in C#? \n\nIf you have a few minutes, @gotheap and @mairacw would lov… https://t.co/kjr8nkthh3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":110,"FavoriteCount":34,"RawContent":null},{"Id":"1208132464595603457","CreatedAt":"2019-12-20T21:10:00+00:00","UserScreenname":"dotnet","Text":"Windows Server Core container images are now &gt;40% smaller.\n\nHere's what you need to know to take advantage of the i… https://t.co/uk7spzdxI6","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":102,"FavoriteCount":41,"RawContent":null}]}},"RunOn":"2020-01-03T05:30:38.5953249Z","RunDurationInMilliseconds":16662}