{"Data":{"Blog":{"FeedItems":[{"Title":"ASP.NET Core 2.1.0-preview1: Functional testing of MVC applications","PublishedOn":"2018-03-05T18:30:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For ASP.NET Core 2.1 we have created a new package, Microsoft.AspNetCore.Mvc.Testing, to help streamline in-memory end-to-end testing of MVC applications using TestServer. This package takes care of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/05/asp-net-core-2-1-0-preview1-functional-testing-of-mvc-applications/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: GDPR enhancements","PublishedOn":"2018-03-04T19:21:40+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2018 sees the introduction of the General Data Protection Regulation, an EU framework to allow EU citizens to control, correct and delete their data, no matter where in the word it is held. In ASP.NET...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/04/asp-net-core-2-1-0-preview1-gdpr-enhancements/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing Identity UI as a library","PublishedOn":"2018-03-02T19:00:19+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"ASP.NET Core has historically provided project templates with code for setting up ASP.NET Core Identity, which enables support for identity related features like user registration, login, account...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/02/aspnetcore-2-1-identity-ui/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Razor UI in class libraries","PublishedOn":"2018-03-01T18:00:26+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"One frequently requested scenario that ASP.NET Core 2.1 improves is building UI in reusable class libraries. With ASP.NET Core 2.1 you can package your Razor views and pages (.cshtml files) along with...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/01/asp-net-core-2-1-razor-ui-in-class-libraries/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements to IIS hosting","PublishedOn":"2018-03-01T01:56:02+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"The ASP.NET Core Module (ANCM) is a global IIS module that has been responsible for proxying requests over from IIS to your backend ASP.NET Core application running Kestrel.Â Since 2.0 we have been...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-0-preview1-improvements-to-iis-hosting/","RawContent":null},{"Title":"ASP.NET Core 2.1-preview1: Introducing HTTPClient factory","PublishedOn":"2018-03-01T01:47:41+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"HttpClient factory is an opinionated factory for creating HttpClient instances to be used in your applications. It is designed to: Provide a central location for naming and configuring logical...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-preview1-introducing-httpclient-factory/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements for building Web APIs","PublishedOn":"2018-02-27T23:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"ASP.NET Core 2.1 adds a number of features that make it easier and more convenient to build Web APIs. These features include Web API controller specific conventions, more robust input processing and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-web-apis/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing compatibility version in MVC","PublishedOn":"2018-02-27T22:34:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written by Ryan Nowak In 2.1 we&#8217;re adding a feature to address a long-standing problem for maintaining MVC &#8211; how do we make improvements to framework code without making it...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/introducing-compatibility-version-in-mvc/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Getting started with SignalR","PublishedOn":"2018-02-27T21:57:11+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Since 2013, ASP.NET developers have been using SignalR to build real-time web applications. Now, with ASP.NET Core 2.1 Preview 1, we&#8217;re bringing SignalR over to ASP.NET Core so you can build...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-getting-started-with-signalr/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Using ASP.NET Core Previews on Azure App Service","PublishedOn":"2018-02-27T19:18:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There are 3 options to get ASP.NET Core 2.1 Preview applications running on Azure App Service: Installing the Preview1 site extension Deploying your app self-contained Using Web Apps for Containers...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-using-asp-net-core-previews-on-azure-app-service/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7359007867","Type":"IssuesEvent","CreatedAt":"2018-03-10T01:12:05","Actor":"ajcvickers","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2385","RelatedDescription":"Closed issue \"Allow collections to be replaced, when defined in IConfiguration\" (#2385) at aspnet/Home","RelatedBody":"_From @TsengSR on Thursday, November 9, 2017 2:45:00 AM_\r\n\r\nI am currently running into an issue with the way the options are populated/bound to a model. \r\n\r\nI got an options class with a collection/list which contains a few default values. I want this to remain there, when the options aren't used and be replaced when they are defined in appsettings.json.\r\n\r\n```\r\n    public class SampleOptions\r\n    {\r\n        public List<string> Names1 { get; set; } = new List<string>\r\n        {\r\n            \"name1\", \"name2\", \"name3\"\r\n        };\r\n        public List<string> Names2 { get; set; } = new List<string>\r\n        {\r\n            \"name1\", \"name2\", \"name3\"\r\n        };\r\n    }\r\n```\r\n\r\nand a appsettings.json\r\n\r\n```\r\n{\r\n  \"SampleOptions\"; {\r\n    \"Names1\": [\"name4\", \"name5\", \"name6\"]\r\n  }\r\n}\r\n```\r\n\r\nso that the `Names2` list remains as it is and `Names1` gets replaced with the new values.\r\n\r\nHowever, the `Names1` will now have 6 values. 3 old and the 3 newly added ones.\r\n\r\n_Copied from original issue: aspnet/Options#241_"},{"Id":"7358970293","Type":"IssuesEvent","CreatedAt":"2018-03-10T00:54:08","Actor":"ajcvickers","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2382","RelatedDescription":"Closed issue \"IOptionsSnapshot not working in docker container using bind mount\" (#2382) at aspnet/Home","RelatedBody":"_From @tgropper on Friday, December 1, 2017 6:53:58 AM_\r\n\r\nI'm hosting my app in docker and i'm having problems using bind mount to have my config files binded with the host. This works running on the host.\r\n\r\nThe files change correctly inside the running container but dotnet doesn't recognize those changes.\r\nThe config files are in a `/config` folder (including `appsettings.json`) so i don't have to put extra files inside my container (and also the bind mount in docker-compose doesn't work for specific files when they are modified in a Windows host).\r\n\r\nI've also tried using `IOptionsSnapshot` inside a controller or any scoped type (the filter i'm posting here for example) but it didn't work either.\r\n\r\nMy setup:\r\n\r\n**Program.cs**\r\n ```c#\r\n...\r\npublic static IWebHost BuildWebHost(string[] args)\r\n{\r\n    return new WebHostBuilder()\r\n        .UseKestrel()\r\n        .UseContentRoot(Directory.GetCurrentDirectory())\r\n        .ConfigureAppConfiguration((hostingContext, config) =>\r\n        {\r\n            config\r\n                .SetBasePath(Path.Combine(Directory.GetCurrentDirectory(), \"config\"))\r\n                .AddJsonFile(\"appsettings.json\", optional: false, reloadOnChange: true)\r\n                .AddJsonFile($\"appsettings.{hostingContext.HostingEnvironment.EnvironmentName}.json\", optional: false, reloadOnChange: true)\r\n                .AddEnvironmentVariables()\r\n                .AddCommandLine(args);\r\n        })\r\n        .ConfigureServices(services =>\r\n        {\r\n                services.AddOptions();\r\n                services.AddAutofac();\r\n        })\r\n        .UseStartup<Startup>()\r\n        .Build();\r\n}\r\n```\r\n\r\n**Startup.cs**\r\n ```c#\r\npublic Startup(IHostingEnvironment env)\r\n{\r\n    EnvironmentName = env.EnvironmentName;\r\n    Path = System.IO.Path.Combine(env.ContentRootPath, \"config\");\r\n\r\n    var builder = new ConfigurationBuilder()\r\n        .SetBasePath(Path)\r\n        .AddJsonFile(\"appsettings.json\", optional: false, reloadOnChange: true)\r\n        .AddJsonFile($\"appsettings.{EnvironmentName}.json\", optional: true, reloadOnChange: true)\r\n        .AddJsonFile($\"channels.{EnvironmentName}.json\", optional: true, reloadOnChange: true)\r\n        .AddEnvironmentVariables();\r\n        this.Configuration = builder.Build();\r\n}\r\n\r\npublic IServiceProvider ConfigureServices(IServiceCollection services)\r\n{\r\n    services.Configure<MyValueConfig>(Configuration.GetSection(\"MyValue\"));\r\n    ...\r\n}\r\n...\r\n```\r\n\r\n**SarasaActionFilterAttribute**\r\n```c#\r\npublic class SarasaActionFilterAttribute : TypeFilterAttribute\r\n{\r\n    public SarasaActionFilterAttribute()\r\n        : base(typeof(SarasaActionFilterAttributeImp))\r\n    { }\r\n}\r\n\r\npublic class SarasaActionFilterAttribute : ActionFilterAttribute\r\n{\r\n    private readonly bool someValue;\r\n\r\n    public SarasaActionFilterAttribute(IOptionsSnapshot<MyValueConfig> myValue) => this.someValue = myValue.Value.SomeValue;\r\n    \r\n    public override async Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next)\r\n    {\r\n        // do something with someValue\r\n        await next();\r\n    }\r\n}\r\n```\r\n\r\n**Dockerfile**\r\n```\r\nFROM microsoft/aspnetcore-build:2.0 AS build-env\r\nWORKDIR /app\r\n\r\nCOPY . ./\r\nRUN dotnet restore\r\nRUN dotnet publish /app/src/Website -o out\r\n\r\nFROM microsoft/aspnetcore:2.0\r\nWORKDIR /app\r\nCOPY --from=build-env /app/src/Website/out .\r\nENTRYPOINT [\"dotnet\", \"Website.dll\"]\r\n```\r\n\r\nI've also commented the ENTRYPOINT line so I've could attach to the running container to see if files were actually being modified (they were).\r\n\r\n**Docker**\r\n`docker build -t sarasa .`\r\n`docker run -it -v ${PWD}/src/Website/config/:/app/config/ -p 8000:80 sarasa`\r\n\r\n_Copied from original issue: aspnet/Options#244_"},{"Id":"7358965297","Type":"IssuesEvent","CreatedAt":"2018-03-10T00:51:46","Actor":"ajcvickers","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2381","RelatedDescription":"Closed issue \"Make IConfigureNamedOptions.Configure async\" (#2381) at aspnet/Home","RelatedBody":"_From @damianh on Tuesday, December 5, 2017 4:22:48 AM_\r\n\r\nUsecase: Configuring named OIDC options at runtime where one would like to make a db lookup for value.\r\n\r\n\r\n\r\n_Copied from original issue: aspnet/Options#246_"},{"Id":"7358545785","Type":"IssuesEvent","CreatedAt":"2018-03-09T22:24:10","Actor":"ajcvickers","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2387","RelatedDescription":"Closed issue \"Backwards Compatibility Broken with IOptionsSnapshot when upgrading to .Net Core 2.0\" (#2387) at aspnet/Home","RelatedBody":"_From @Aurel on Thursday, August 31, 2017 12:05:26 PM_\r\n\r\nI've run into a bit of a strange issue and I was wondering if this is actually indicative of a larger issue. I've boiled down the problem into the simplest, smallest set of code that still reproduces the issue itself, so here it is. \r\n\r\nThere seems to be a clash when invoking `.Value` on an `IOptionsSnapshot` object if the objects are targeting different .Net versions. It only reproduces in certain cases, and the error message is extremely strange. \r\n\r\n# The Class Library (netstandard1.3)\r\n\r\nThe set up is as follows. I have a .Net Standard 1.3 class library. It has a reference to `Microsoft.Extensions.Options.ConfigurationExtensions` (1.1.2). For the sake of example, I've boiled down the code to this. Here is the entire content of this class library:\r\n\r\n```csharp\r\nusing Microsoft.Extensions.Configuration;\r\nusing Microsoft.Extensions.DependencyInjection;\r\nusing Microsoft.Extensions.Options;\r\n\r\npublic static class OptionsExtensions\r\n{\r\n\tpublic static void AddSnapshotConfig<T>(this IServiceCollection services, IConfiguration configuration)\r\n\t\twhere T : class, new()\r\n\t{\r\n\t\tservices.Configure<T>(configuration);\r\n\t\tservices.AddScoped(config => config.GetService<IOptionsSnapshot<T>>().Value);\r\n\t}\r\n}\r\n```\r\n\r\nNow, what this does, is configure an `IOptionsSnapshot`, but then actually scope the object inside of snapshot so it's accessible directly from DI without having to ask for the `IOptions` or `IOptionsSnapshot` itself. This has worked just fine in the past, and I've got this set of code in a class library a number of my own projects are using.\r\n\r\n# The Web App\r\n\r\nNow, let's create a NetCore2.0app project in the same solution, with the default API interface. This means we get `program.cs`, `startup.cs` and `controller/ValuesController.cs`, as the template creates it. \r\n\r\nLet's not change `program.cs`, but let's make the `Startup` file look like this: \r\n\r\n```csharp\r\nusing Microsoft.AspNetCore.Builder;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.Extensions.Configuration;\r\nusing Microsoft.Extensions.DependencyInjection;\r\n\r\npublic class ConfigurationOptions\r\n{\r\n\tpublic string Whatever { get; set; }\r\n}\r\n\r\npublic class SomeScopedService\r\n{\r\n\tpublic SomeScopedService(ConfigurationOptions options) {}\r\n}\r\n\r\npublic class Startup\r\n{\r\n\tpublic Startup(IConfiguration configuration)\r\n\t{\r\n\t\tConfiguration = configuration;\r\n\t}\r\n\r\n\tpublic IConfiguration Configuration { get; }\r\n\r\n\tpublic void ConfigureServices(IServiceCollection services)\r\n\t{\r\n\t\tservices.AddSnapshotConfig<ConfigurationOptions>(Configuration);\r\n\t\tservices.AddScoped<SomeScopedService>();\r\n\t\tservices.AddMvc();\r\n\t}\r\n\r\n\tpublic void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n\t{\r\n\t\tapp.UseDeveloperExceptionPage();\r\n\t\tapp.UseMvc();\r\n\t}\r\n}\r\n```\r\n\r\nLastly, let's make the default `ValuesController` request this custom `SomeScopedService`.\r\n\r\nHere's a simplified version of that file: \r\n```csharp\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing System.Collections.Generic;\r\n\r\n[Route(\"api/[controller]\")]\r\npublic class ValuesController : Controller\r\n{\r\n\tpublic ValuesController(SomeScopedService service) { }\r\n\r\n\t[HttpGet]\r\n\tpublic IEnumerable<string> Get()\r\n\t{\r\n\t\treturn new string[] { \"Some Text\", \"Other Text\" };\r\n\t}\r\n}\r\n```\r\n\r\nClearly we're not actually doing anything with the `ScomeScopedService` or with the `ConfigurationOptions` but, we're requesting them from DI. \r\n\r\nJust in case it's relevant, the web is only referencing: \r\n```xml\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n```\r\n\r\n# The Result\r\n\r\nWhen we hit run and actually navigate to the `api/values` endpoint, we get the following error message: \r\n\r\n```\r\nMissingMethodException: Method not found: 'System.__Canon Microsoft.Extensions.Options.IOptionsSnapshot`1.get_Value()'.\r\n```\r\n\r\nThe call stack is something like: \r\n```\r\nSystem.MissingMethodException: Method not found: 'System.__Canon Microsoft.Extensions.Options.IOptionsSnapshot`1.get_Value()'.\r\n   at OptionsExtensions.<>c__0`1.<AddSnapshotConfig>b__0_0(IServiceProvider config)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, ServiceProvider provider)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProvider provider)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, ServiceProvider provider)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProvider provider)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.<>c__DisplayClass22_0.<RealizeService>b__0(ServiceProvider provider)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)\r\n   at lambda_method(Closure , IServiceProvider , Object[] )\r\n```\r\n\r\nWhat's happening, or so it seems - is that, it seems to be running into a bizarre conflict between the Microsoft.Extension.Options from the 1.1.2 in the class library, and the 2.0.0 reference in the Web App. \r\n\r\nWhile this might seem a bit contrived for the sake of this example, this is just a simplified repro - in reality, I have a much more complicated system that's basically doing this - registering some options in some custom way, and I have tons of code using the options in custom services directly. The moment I upgrade any of those projects to .net Core 2.0, the webapps fail to run. \r\n\r\nWhy might this be? I know that the `.Value` was removed and moved up to the IOptions itself, but I think something is going on very strangely here. \r\n\r\n_Copied from original issue: aspnet/Options#228_"},{"Id":"7358544130","Type":"IssuesEvent","CreatedAt":"2018-03-09T22:23:43","Actor":"ajcvickers","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2386","RelatedDescription":"Closed issue \"1st class support for Request options\" (#2386) at aspnet/Home","RelatedBody":"_From @HaoK on Tuesday, September 12, 2017 2:00:29 PM_\r\n\r\nToday its fairly hard to have request scoped options, and there's no way to avoid using `IHttpContextAccessor` since options doesn't even depend on Http.\r\n\r\nWe could make it easier via something like:\r\n\r\n`context.GetOptions<TOptions>(name)` which would be a new way to get request scoped options which would also support being configured via:\r\n\r\n`services.Configure<TOptions>(options, context => options.Something = context.Items[\"Something\"])`\r\n\r\nUnderneath the covers, there would be something like `IRequestOptions` which exposes: `TOptions Get(string name, HttpContext context)`\r\n\r\n_Copied from original issue: aspnet/Options#232_"},{"Id":"7357881574","Type":"IssuesEvent","CreatedAt":"2018-03-09T19:44:49","Actor":"DamianEdwards","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2938","RelatedDescription":"Closed issue \"Is LibraryManager replacement for Bower?\" (#2938) at aspnet/Home","RelatedBody":"The [LibraryManager](https://github.com/aspnet/LibraryManager) project looks very promising. \r\n\r\nIs it meant to be a replacement for Bower?\r\n\r\nAny idea when it will be ready to use?"},{"Id":"7357444005","Type":"IssuesEvent","CreatedAt":"2018-03-09T18:08:54","Actor":"natemcmaster","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2941","RelatedDescription":"Opened issue \"DataProtection - PersistKeysToFileSystem in Docker hosted in Linux\" (#2941) at aspnet/Home","RelatedBody":"@joetherod commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343)\n\nTrying to AddDataProtection for MVC Core app.\r\nservices.AddDataProtection()\r\n                .PersistKeysToFileSystem(new DirectoryInfo(\"etc/keys/\"))\r\n                .SetApplicationName(\"AppName\")\r\n\r\nThe Directory is a configured volume mount in the linux host.\r\nIf I dont use the volume mount, it works.\r\nVolume mount is needed as per described in MS Docs since the app is hosted in many Docker containers.\r\nPlease advise.\r\n\r\nWorks locally. But when configured to a Docker container hosted in linux, I get the following exception on startup:\r\n\r\n{\"Timestamp\":\"2018-03-08T20:45:37.4873753+00:00\",\"Level\":\"Error\",\"MessageTemplate\":\"An error occurred while reading the key ring.\",\"Exception\":\"System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\",\"Properties\":{\"EventId\":{\"Id\":48},\"SourceContext\":\"Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider\",\"RequestId\":\"0HLC55SODK05P:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null,\"ConnectionId\":\"0HLC55SODK05P\"}}\r\n\n\n---\n\n@Tratcher commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371634771)\n\n@natemcmaster \n\n---\n\n@natemcmaster commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371636962)\n\nThis appears to be an issue with your Docker host, not with ASP.NET Core. System.IO.File.Move is failing to write into the mounted directory. Can you verify this with a minimal repro like this?\r\n```c#\r\npublic static void Main(string[] args)\r\n{\r\n    var tempFile = Path.Combine(Path.GetTempPath(), \"test.txt\");\r\n    File.WriteAllText(tempFile, \"Hello\");\r\n    File.Move(tempFile, \"etc/keys/test.txt\");\r\n}\r\n```\n\n---\n\n@joetherod commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371659784)\n\nWrite and move works, but still getting exception.\r\n\r\nAn error occurred while reading the key ring.\",\"Exception\":\"System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\",\"Properties\":{\"EventId\":{\"Id\":48},\"SourceContext\":\"Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider\",\"RequestId\":\"0HLC597NS53I0:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null,\"ConnectionId\":\"0HLC597NS53I0\"}}\r\n\r\nAn unhandled exception was thrown by the application.\",\"Exception\":\"System.Security.Cryptography.CryptographicException: An error occurred while trying to encrypt the provided data. Refer to the inner exception for more information. ---> System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   --- End of inner exception stack trace ---\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   at Microsoft.AspNetCore.Session.CookieProtection.Protect(IDataProtector protector, String data)\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.<Invoke>d__9.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequestsAsync>d__185`1.MoveNext()\",\"Properties\":{\"ConnectionId\":\"0HLC597NS53I0\",\"TraceIdentifier\":\"0HLC597NS53I0:00000001\",\"EventId\":{\"Id\":13,\"Name\":\"ApplicationError\"},\"SourceContext\":\"Microsoft.AspNetCore.Server.Kestrel\",\"RequestId\":\"0HLC597NS53I0:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null}}\n\n---\n\n@natemcmaster commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371661817)\n\nCan you provide more log info? There should be an INFO log item just before this File.Move\r\n\r\nhttps://github.com/aspnet/DataProtection/blob/8a42c24f46d728b4728e6b20febd0a11c1111df2/src/Microsoft.AspNetCore.DataProtection/Repositories/FileSystemXmlRepository.cs#L232-L233\n\n---\n\n@joetherod commented on [Thu Mar 08 2018](https://github.com/aspnet/Hosting/issues/1343#issuecomment-371685069)\n\n services.AddDataProtection()\r\n                .PersistKeysToFileSystem(new DirectoryInfo(\"etc/talentbrew/keys\"))\r\n                .SetApplicationName(\"XXX\")\r\n                .SetDefaultKeyLifetime(TimeSpan.FromDays(365));\r\n\r\nLevel\":\"Information\",\"MessageTemplate\":\"Writing data to file '{FileName}'.\",\"Properties\":{\"FileName\":\"/app/etc/talentbrew/keys/key-fb6f8187-5606-445b-9591-3c268c59ff84.xml\",\"EventId\":{\"Id\":39},\"SourceContext\":\"Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository\",\"RequestId\":\"0HLC5BJ5EVUU9:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null,\"ConnectionId\":\"0HLC5BJ5EVUU9\"}\r\n\r\n\"Level\":\"Error\",\"MessageTemplate\":\"Connection id \\\"{ConnectionId}\\\", Request id \\\"{TraceIdentifier}\\\": An unhandled exception was thrown by the application.\",\"Exception\":\"System.Security.Cryptography.CryptographicException: An error occurred while trying to encrypt the provided data. Refer to the inner exception for more information. ---> System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   --- End of inner exception stack trace ---\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext)\\n   at Microsoft.AspNetCore.Session.CookieProtection.Protect(IDataProtector protector, String data)\\n   at Microsoft.AspNetCore.Session.SessionMiddleware.<Invoke>d__9.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Diagnostics.StatusCodePagesMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Hosting.Internal.RequestServicesContainerMiddleware.<Invoke>d__3.MoveNext()\\n--- End of stack trace from previous location where exception was thrown ---\\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequestsAsync>d__185`1.MoveNext()\",\"Properties\":{\"ConnectionId\":\"0HLC5BJ5EVUU9\",\"TraceIdentifier\":\"0HLC5BJ5EVUU9:00000001\",\"EventId\":{\"Id\":13,\"Name\":\"ApplicationError\"},\"SourceContext\":\"Microsoft.AspNetCore.Server.Kestrel\",\"RequestId\":\"0HLC5BJ5EVUU9:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null}}\r\n\r\n\"Level\":\"Information\",\"MessageTemplate\":\"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.\",\"Properties\":{\"KeyId\":\"fb6f8187-5606-445b-9591-3c268c59ff84\",\"CreationDate\":\"2018-03-09T01:33:27.3851082+00:00\",\"ActivationDate\":\"2018-03-09T01:33:27.3843013+00:00\",\"ExpirationDate\":\"2019-03-09T01:33:27.3843013+00:00\",\"EventId\":{\"Id\":58},\"SourceContext\":\"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager\",\"RequestId\":\"0HLC5BJ5EVUU9:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null,\"ConnectionId\":\"0HLC5BJ5EVUU9\"},\"Renderings\":{\"KeyId\":[{\"Format\":\"B\",\"Rendering\":\"{fb6f8187-5606-445b-9591-3c268c59ff84}\"}],\"CreationDate\":[{\"Format\":\"u\",\"Rendering\":\"2018-03-09 01:33:27Z\"}],\"ActivationDate\":[{\"Format\":\"u\",\"Rendering\":\"2018-03-09 01:33:27Z\"}],\"ExpirationDate\":[{\"Format\":\"u\",\"Rendering\":\"2019-03-09 01:33:27Z\"}]}}\r\n\r\nLevel\":\"Error\",\"MessageTemplate\":\"An error occurred while reading the key ring.\",\"Exception\":\"System.IO.IOException: Unknown error 524\\n   at System.IO.UnixFileSystem.MoveFile(String sourceFullPath, String destFullPath)\\n   at System.IO.File.Move(String sourceFileName, String destFileName)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElementCore(XElement element, String filename)\\n   at Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository.StoreElement(XElement element, String friendlyName)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)\\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)\",\"Properties\":{\"EventId\":{\"Id\":48},\"SourceContext\":\"Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider\",\"RequestId\":\"0HLC5BJ5EVUU9:00000001\",\"RequestPath\":\"/_health\",\"CorrelationId\":null,\"ConnectionId\":\"0HLC5BJ5EVUU9\"}}\n\n"},{"Id":"7357237981","Type":"IssuesEvent","CreatedAt":"2018-03-09T17:23:34","Actor":"JanEggers","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2940","RelatedDescription":"Closed issue \"[Feature request] websocket support for proxy \" (#2940) at aspnet/Home","RelatedBody":"https://github.com/aspnet/Proxy should support websockets\r\n\r\nas a starter something like this:\r\n\r\nhttps://github.com/aspnet/JavaScriptServices/blob/dev/src/Microsoft.AspNetCore.SpaServices.Extensions/Proxying/SpaProxy.cs\r\n\r\n"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7359080698","Type":"PullRequestEvent","CreatedAt":"2018-03-10T01:52:57","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1574","RelatedDescription":"Opened pull request \"Hub method invocation benchmarks\" (#1574) at aspnet/SignalR","RelatedBody":"Benchmarks in preparation for caching invocation reflection"},{"Id":"7358991159","Type":"IssuesEvent","CreatedAt":"2018-03-10T01:03:50","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1562","RelatedDescription":"Closed issue \"Add \"Service Guard\" to SignalR\" (#1562) at aspnet/SignalR","RelatedBody":"We need something that detects if you haven't called `.AddSignalR`. MVC does something similar, we can take code from that."},{"Id":"7358980908","Type":"PullRequestEvent","CreatedAt":"2018-03-10T00:58:58","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1573","RelatedDescription":"Merged pull request \"Add SignalR marker service\" (#1573) at aspnet/SignalR","RelatedBody":"Branches got messed up. \r\nThis includes the changes requested from the previous PR\r\nAdding a SignalR marker service to endure that the service has been added.\r\nIssue: #1562"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7358936148","Type":"IssuesEvent","CreatedAt":"2018-03-10T00:38:59","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7465","RelatedDescription":"Reopened issue \"ActionDescription.BoundProperties not working as expected for FromQuery\" (#7465) at aspnet/Mvc","RelatedBody":"```cs\r\n[Route(\"api/values\")]\r\npublic class ValuesController : Controller\r\n{\r\n    [HttpGet]\r\n    [CustomMethodSelector]\r\n    public IActionResult Get([FromQuery] int? number)\r\n    {\r\n        return Ok(number);\r\n    }\r\n}\r\n\r\npublic class CustomMethodSelectorAttribute : ActionMethodSelectorAttribute\r\n{\r\n    public CustomMethodSelectorAttribute()\r\n    {\r\n    }\r\n\r\n    public override bool IsValidForRequest(RouteContext routeContext, ActionDescriptor action)\r\n    {\r\n        var boundProps = action.BoundProperties\r\n            .Select(x => x.Name)\r\n            .ToList();\r\n\r\n        Console.WriteLine($\"[{String.Join(\",\", boundProps)}]\");\r\n\r\n        return true;\r\n    }\r\n}\r\n```\r\n\r\n`GET api/values`\r\n\\> []\r\n\r\n`GET api/values?number`\r\n\\> []\r\n\r\n`GET api/values?number=`\r\n\\> []\r\n\r\n`GET api/values?number=1`\r\n\\> []\r\n\r\nI'd expect it to be [], [number], [number], [number] respectively, or at least [number] on the last one judging how ASP.Net handles empty query values.\r\n\r\nDoes this only work for FromBody/FromForm?"},{"Id":"7358751117","Type":"IssuesEvent","CreatedAt":"2018-03-09T23:27:03","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7465","RelatedDescription":"Closed issue \"ActionDescription.BoundProperties not working as expected for FromQuery\" (#7465) at aspnet/Mvc","RelatedBody":"```cs\r\n[Route(\"api/values\")]\r\npublic class ValuesController : Controller\r\n{\r\n    [HttpGet]\r\n    [CustomMethodSelector]\r\n    public IActionResult Get([FromQuery] int? number)\r\n    {\r\n        return Ok(number);\r\n    }\r\n}\r\n\r\npublic class CustomMethodSelectorAttribute : ActionMethodSelectorAttribute\r\n{\r\n    public CustomMethodSelectorAttribute()\r\n    {\r\n    }\r\n\r\n    public override bool IsValidForRequest(RouteContext routeContext, ActionDescriptor action)\r\n    {\r\n        var boundProps = action.BoundProperties\r\n            .Select(x => x.Name)\r\n            .ToList();\r\n\r\n        Console.WriteLine($\"[{String.Join(\",\", boundProps)}]\");\r\n\r\n        return true;\r\n    }\r\n}\r\n```\r\n\r\n`GET api/values`\r\n\\> []\r\n\r\n`GET api/values?number`\r\n\\> []\r\n\r\n`GET api/values?number=`\r\n\\> []\r\n\r\n`GET api/values?number=1`\r\n\\> []\r\n\r\nI'd expect it to be [], [number], [number], [number] respectively, or at least [number] on the last one judging how ASP.Net handles empty query values.\r\n\r\nDoes this only work for FromBody/FromForm?"},{"Id":"7358602215","Type":"PullRequestEvent","CreatedAt":"2018-03-09T22:39:19","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7464","RelatedDescription":"Merged pull request \"Fix issues with RazorCompileOnBuild=true being default\" (#7464) at aspnet/Mvc","RelatedBody":""},{"Id":"7358550642","Type":"IssuesEvent","CreatedAt":"2018-03-09T22:25:23","Actor":"Mardoxx","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7465","RelatedDescription":"Opened issue \"ActionDescription.BoundProperties not working as expected for FromQuery\" (#7465) at aspnet/Mvc","RelatedBody":"```cs\r\n[Route(\"api/values\")]\r\npublic class ValuesController : Controller\r\n{\r\n    [HttpGet]\r\n    [CustomMethodSelector]\r\n    public IActionResult Get([FromQuery] int? number)\r\n    {\r\n        return Ok(number);\r\n    }\r\n}\r\n\r\npublic class CustomMethodSelectorAttribute : ActionMethodSelectorAttribute\r\n{\r\n    public CustomMethodSelectorAttribute()\r\n    {\r\n    }\r\n\r\n    public override bool IsValidForRequest(RouteContext routeContext, ActionDescriptor action)\r\n    {\r\n        var boundProps = action.BoundProperties\r\n            .Select(x => x.Name)\r\n            .ToList();\r\n\r\n        Console.WriteLine($\"[{String.Join(\",\", boundProps)}]\");\r\n\r\n        return true;\r\n    }\r\n}\r\n```\r\n\r\n`GET api/values`\r\n\\> []\r\n\r\n`GET api/values?number`\r\n\\> []\r\n\r\n`GET api/values?number=`\r\n\\> []\r\n\r\n`GET api/values?number=1`\r\n\\> []\r\n\r\nDoes this only work for FromBody/FromForm?"},{"Id":"7358530452","Type":"PullRequestEvent","CreatedAt":"2018-03-09T22:20:02","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7464","RelatedDescription":"Opened pull request \"Fix issues with RazorCompileOnBuild=true being default\" (#7464) at aspnet/Mvc","RelatedBody":""},{"Id":"7357421369","Type":"IssuesEvent","CreatedAt":"2018-03-09T18:03:47","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7461","RelatedDescription":"Closed issue \"MVC w3wp.exe terminated due to an unhandled exception using SQLServer session state\" (#7461) at aspnet/Mvc","RelatedBody":"We are getting random (once or twice a day) System.NullReferenceException in our ASP.NET web application.\r\n\r\nWe are using SQLServer session state and a custom GetControllerSessionBehavior.\r\n\r\nHere is the code:\r\n`\r\n[AttributeUsage(AttributeTargets.Method, AllowMultiple = false, Inherited = true)]\r\n    public sealed class ActionSessionStateAttribute : Attribute\r\n    {\r\n        public SessionStateBehavior Behavior { get; private set; }\r\n\r\n        public ActionSessionStateAttribute(SessionStateBehavior behavior)\r\n        {\r\n            this.Behavior = behavior;\r\n        }\r\n    }\r\n\r\n    public class CustomControllerFactory : DefaultControllerFactory\r\n    {\r\n        protected override SessionStateBehavior GetControllerSessionBehavior(RequestContext requestContext, Type controllerType)\r\n        {\r\n            //https://technologyatfingertips.wordpress.com/tag/mvc/\r\n            if (controllerType == null)\r\n                return SessionStateBehavior.Default;\r\n\r\n            //https://stackoverflow.com/questions/10814147/how-can-i-get-the-methodinfo-of-the-controller-action-that-will-get-called-given\r\n\r\n            ControllerContext controllerContext = new ControllerContext(requestContext, Activator.CreateInstance(controllerType) as ControllerBase);\r\n            ControllerDescriptor controllerDescriptor = new ReflectedControllerDescriptor(controllerType);\r\n            ActionDescriptor actionDescriptor = controllerDescriptor.FindAction(controllerContext, controllerContext.RouteData.Values[\"action\"].ToString());\r\n\r\n            MethodInfo cntMethodInfo = (actionDescriptor as ReflectedActionDescriptor).MethodInfo;\r\n\r\n            if (cntMethodInfo != null)\r\n            {\r\n                var sessionStateAttr = cntMethodInfo.GetCustomAttributes(typeof(ActionSessionStateAttribute), false)\r\n                                    .OfType<ActionSessionStateAttribute>()\r\n                                    .FirstOrDefault();\r\n\r\n                if (sessionStateAttr != null)\r\n                {\r\n                    return sessionStateAttr.Behavior;\r\n                }\r\n            }\r\n            return base.GetControllerSessionBehavior(requestContext, controllerType);\r\n        }\r\n    }\r\n`\r\n\r\nHere how to use it in Action:\r\n`\r\n[HttpGet]\r\n[ActionSessionState(System.Web.SessionState.SessionStateBehavior.ReadOnly)]\r\npublic ActionResult LoadArchive([DataSourceRequest]DataSourceRequest request, int itemID)\r\n{\r\n        ///some codes here\r\n}\r\n`\r\n\r\nAnd the event logs:\r\n`\r\nLog Name:      Application\r\nSource:        Application Error\r\nDate:          2/8/2018 4:36:03 PM\r\nEvent ID:      1000\r\nTask Category: (100)\r\nLevel:         Error\r\nKeywords:      Classic\r\nUser:          N/A\r\nComputer:      Computer.local\r\nDescription:\r\nFaulting application name: w3wp.exe, version: 8.5.9600.16384, time stamp: 0x52157ba0\r\nFaulting module name: System.Web.ni.dll, version: 4.7.2106.0, time stamp: 0x596675e4\r\nException code: 0xc0000005\r\nFault offset: 0x0085b2bc\r\nFaulting process id: 0xa524\r\nFaulting application start time: 0x01d3a07fdd4d5fe5\r\nFaulting application path: C:\\Windows\\SysWOW64\\inetsrv\\w3wp.exe\r\nFaulting module path: C:\\Windows\\assembly\\NativeImages_v4.0.30319_32\\System.Web\\3e25306e79503ae2ebfbcaa5433a7e25\\System.Web.ni.dll\r\nReport Id: f33ab446-0c91-11e8-814b-06c7aabdd8ab\r\nFaulting package full name: \r\nFaulting package-relative application ID: \r\nEvent Xml:\r\n<Event xmlns=\"http://schemas.microsoft.com/win/2004/08/events/event\">\r\n  <System>\r\n    <Provider Name=\"Application Error\" />\r\n    <EventID Qualifiers=\"0\">1000</EventID>\r\n    <Level>2</Level>\r\n    <Task>100</Task>\r\n    <Keywords>0x80000000000000</Keywords>\r\n    <TimeCreated SystemTime=\"2018-02-08T05:36:03.000000000Z\" />\r\n    <EventRecordID>166583</EventRecordID>\r\n    <Channel>Application</Channel>\r\n    <Computer>Computer.local</Computer>\r\n    <Security />\r\n  </System>\r\n  <EventData>\r\n    <Data>w3wp.exe</Data>\r\n    <Data>8.5.9600.16384</Data>\r\n    <Data>52157ba0</Data>\r\n    <Data>System.Web.ni.dll</Data>\r\n    <Data>4.7.2106.0</Data>\r\n    <Data>596675e4</Data>\r\n    <Data>c0000005</Data>\r\n    <Data>0085b2bc</Data>\r\n    <Data>a524</Data>\r\n    <Data>01d3a07fdd4d5fe5</Data>\r\n    <Data>C:\\Windows\\SysWOW64\\inetsrv\\w3wp.exe</Data>\r\n    <Data>C:\\Windows\\assembly\\NativeImages_v4.0.30319_32\\System.Web\\3e25306e79503ae2ebfbcaa5433a7e25\\System.Web.ni.dll</Data>\r\n    <Data>f33ab446-0c91-11e8-814b-06c7aabdd8ab</Data>\r\n    <Data>\r\n    </Data>\r\n    <Data>\r\n    </Data>\r\n  </EventData>\r\n</Event>\r\n\r\nLog Name:      Application\r\nSource:        .NET Runtime\r\nDate:          2/8/2018 4:36:03 PM\r\nEvent ID:      1026\r\nTask Category: None\r\nLevel:         Error\r\nKeywords:      Classic\r\nUser:          N/A\r\nComputer:      Computer.local\r\nDescription:\r\nApplication: w3wp.exe\r\nFramework Version: v4.0.30319\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.NullReferenceException\r\n   at System.Web.SessionState.SessionStateItemCollection.get_Item(Int32)\r\n   at System.Web.SessionState.HttpSessionStateContainer.get_Item(Int32)\r\n   at System.Web.Util.AspCompatApplicationStep.AnyStaObjectsInSessionState(System.Web.SessionState.HttpSessionState)\r\n   at System.Web.HttpApplicationFactory.FireSessionOnEnd(System.Web.SessionState.HttpSessionState, System.Object, System.EventArgs)\r\n   at System.Web.SessionState.SessionOnEndTargetWorkItem.RaiseOnEndCallback()\r\n   at System.Web.Util.WorkItem.CallCallbackWithAssert(System.Web.Util.WorkItemCallback)\r\n   at System.Web.Util.WorkItem.OnQueueUserWorkItemCompletion(System.Object)\r\n   at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\r\n\r\n\r\nEvent Xml:\r\n<Event xmlns=\"http://schemas.microsoft.com/win/2004/08/events/event\">\r\n  <System>\r\n    <Provider Name=\".NET Runtime\" />\r\n    <EventID Qualifiers=\"0\">1026</EventID>\r\n    <Level>2</Level>\r\n    <Task>0</Task>\r\n    <Keywords>0x80000000000000</Keywords>\r\n    <TimeCreated SystemTime=\"2018-02-08T05:36:03.000000000Z\" />\r\n    <EventRecordID>166582</EventRecordID>\r\n    <Channel>Application</Channel>\r\n    <Computer>Computer.local</Computer>\r\n    <Security />\r\n  </System>\r\n  <EventData>\r\n    <Data>Application: w3wp.exe\r\nFramework Version: v4.0.30319\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.NullReferenceException\r\n   at System.Web.SessionState.SessionStateItemCollection.get_Item(Int32)\r\n   at System.Web.SessionState.HttpSessionStateContainer.get_Item(Int32)\r\n   at System.Web.Util.AspCompatApplicationStep.AnyStaObjectsInSessionState(System.Web.SessionState.HttpSessionState)\r\n   at System.Web.HttpApplicationFactory.FireSessionOnEnd(System.Web.SessionState.HttpSessionState, System.Object, System.EventArgs)\r\n   at System.Web.SessionState.SessionOnEndTargetWorkItem.RaiseOnEndCallback()\r\n   at System.Web.Util.WorkItem.CallCallbackWithAssert(System.Web.Util.WorkItemCallback)\r\n   at System.Web.Util.WorkItem.OnQueueUserWorkItemCompletion(System.Object)\r\n   at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\r\n\r\n</Data>\r\n  </EventData>\r\n</Event>\r\n\r\nLog Name:      Application\r\nSource:        ASP.NET 4.0.30319.0\r\nDate:          2/8/2018 4:36:03 PM\r\nEvent ID:      1325\r\nTask Category: None\r\nLevel:         Error\r\nKeywords:      Classic\r\nUser:          N/A\r\nComputer:      Computer.local\r\nDescription:\r\nAn unhandled exception occurred and the process was terminated.\r\n\r\nApplication ID: /LM/W3SVC/2/ROOT\r\n\r\nProcess ID: 42276\r\n\r\nException: System.NullReferenceException\r\n\r\nMessage: Object reference not set to an instance of an object.\r\n\r\nStackTrace:    at System.Web.SessionState.SessionStateItemCollection.get_Item(Int32 index)\r\n   at System.Web.SessionState.HttpSessionStateContainer.get_Item(Int32 index)\r\n   at System.Web.Util.AspCompatApplicationStep.AnyStaObjectsInSessionState(HttpSessionState session)\r\n   at System.Web.HttpApplicationFactory.FireSessionOnEnd(HttpSessionState session, Object eventSource, EventArgs eventArgs)\r\n   at System.Web.SessionState.SessionOnEndTargetWorkItem.RaiseOnEndCallback()\r\n   at System.Web.Util.WorkItem.CallCallbackWithAssert(WorkItemCallback callback)\r\n   at System.Web.Util.WorkItem.OnQueueUserWorkItemCompletion(Object state)\r\n   at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context(Object state)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\r\nEvent Xml:\r\n<Event xmlns=\"http://schemas.microsoft.com/win/2004/08/events/event\">\r\n  <System>\r\n    <Provider Name=\"ASP.NET 4.0.30319.0\" />\r\n    <EventID Qualifiers=\"49152\">1325</EventID>\r\n    <Level>2</Level>\r\n    <Task>0</Task>\r\n    <Keywords>0x80000000000000</Keywords>\r\n    <TimeCreated SystemTime=\"2018-02-08T05:36:03.000000000Z\" />\r\n    <EventRecordID>166581</EventRecordID>\r\n    <Channel>Application</Channel>\r\n    <Computer>Computer.local</Computer>\r\n    <Security />\r\n  </System>\r\n  <EventData>\r\n    <Data>An unhandled exception occurred and the process was terminated.\r\n\r\nApplication ID: /LM/W3SVC/2/ROOT\r\n\r\nProcess ID: 42276\r\n\r\nException: System.NullReferenceException\r\n\r\nMessage: Object reference not set to an instance of an object.\r\n\r\nStackTrace:    at System.Web.SessionState.SessionStateItemCollection.get_Item(Int32 index)\r\n   at System.Web.SessionState.HttpSessionStateContainer.get_Item(Int32 index)\r\n   at System.Web.Util.AspCompatApplicationStep.AnyStaObjectsInSessionState(HttpSessionState session)\r\n   at System.Web.HttpApplicationFactory.FireSessionOnEnd(HttpSessionState session, Object eventSource, EventArgs eventArgs)\r\n   at System.Web.SessionState.SessionOnEndTargetWorkItem.RaiseOnEndCallback()\r\n   at System.Web.Util.WorkItem.CallCallbackWithAssert(WorkItemCallback callback)\r\n   at System.Web.Util.WorkItem.OnQueueUserWorkItemCompletion(Object state)\r\n   at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context(Object state)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()</Data>\r\n  </EventData>\r\n</Event>\r\n`"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7358666452","Type":"PullRequestEvent","CreatedAt":"2018-03-09T22:58:38","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1672","RelatedDescription":"Merged pull request \"Remove unused used that fail to compile\" (#1672) at aspnet/Identity","RelatedBody":""},{"Id":"7358651923","Type":"PullRequestEvent","CreatedAt":"2018-03-09T22:54:05","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1672","RelatedDescription":"Opened pull request \"Remove unused used that fail to compile\" (#1672) at aspnet/Identity","RelatedBody":""},{"Id":"7357210123","Type":"PullRequestEvent","CreatedAt":"2018-03-09T17:17:37","Actor":"aguacongas","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1671","RelatedDescription":"Opened pull request \"Update README.md\" (#1671) at aspnet/Identity","RelatedBody":"Hi guys,\r\nToday I propose you Aguacongas.Identy.Redis, my implemention of APS.NET Identity Redis Provider"},{"Id":"7354196950","Type":"IssuesEvent","CreatedAt":"2018-03-09T05:22:21","Actor":"slaneyrw","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1670","RelatedDescription":"Opened issue \"Support password migration\" (#1670) at aspnet/Identity","RelatedBody":"I'm investigating a solution to migrating legacy passwords ( SHA256 cyptro provider, not Dbkdf2), MS ID v2, and MS ID v3 passwords to a new algorithm ( specifically Argon2 ) with the requirement to not store the old hash details post migration.\r\n\r\nMy thoughts are that during migration we...\r\n\r\n1. Take existing hash from the old algorithm and rehash the hash using the new algorithm\r\n2. Store the new passwordHash ( with it's metadata ) and the old algorithm's metadata\r\n\r\nDuring password verification we recursively run through the algorithms, taking the hashed output as the input into the next in the chain.  If the password matches then we rehash the password provided using the newest algorithm, akin to increasing the iterations in the MS ID password hasher.\r\n\r\nMy problem is that I cannot get the resultant hash from the IPasswordHasher instance evaluated during VerifyHashedPassword for use into the next algorithm into the chain, and if I call HashPassword it will give me a different hash for the same password because of the random 16 bytes into Pbkdf2.\r\n\r\nI already have a coordinator IPasswordHasher instance that inspects the algorithm byte and forwards the call to the relevant hasher.  It was my intent to have this coordinator loop/recurse through the chain.\r\n\r\nShort of completely rebuilding all the Password hashers ( including ASP.NET Identity ) to separate recalculating and compare functions the existing hashers, can you think of another way I could do this?\r\n"},{"Id":"7352340113","Type":"IssuesEvent","CreatedAt":"2018-03-08T20:14:56","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1341","RelatedDescription":"Closed issue \"GDPR Support\" (#1341) at aspnet/Identity","RelatedBody":"- [x] Extension points to enable encryption of user data\r\n- [x] Extension point to enable downloading of user data\r\n- [x] Extension point to enable deletion of user data"},{"Id":"7352336125","Type":"IssuesEvent","CreatedAt":"2018-03-08T20:14:05","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1621","RelatedDescription":"Closed issue \"Add an optional [PersonalData] attribute for use in the User type.\" (#1621) at aspnet/Identity","RelatedBody":"As part of the extensbility work, we should add some mechanism to easily attribute data which is considered personal data.  \r\n\r\nBy default we would use this for the default pocos, so the default UI can include these for personal download, and also wire them up automatically in the upcoming personal data encryption hooks.\r\n\r\n"},{"Id":"7352333896","Type":"PullRequestEvent","CreatedAt":"2018-03-08T20:13:35","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1562","RelatedDescription":"Merged pull request \"Initial EncryptPersonalData support\" (#1562) at aspnet/Identity","RelatedBody":"- new StoreOptions.EncryptPersonalData setting\r\n- new IPersonalDataEncryptor and IEncryptedUserStore interfaces that live in core\r\n- new `AddPersonalDataEncryptor<MyEncryptor>()` helper method on IdentityBuilder\r\n- The two concrete user stores in EF now implement IEncryptedUserStore\r\n- UserManager ctor throws if EncryptPersonalData is true if store is not IEncryptedUserStore, or if IPersonalDataEncryptor service not found\r\n- base IdentityUserContext hooks up ValueConverter using IPersonalDataEncryptor on UserName, NormalizedUserName, Email, NormalizedEmail, PhoneNumber columns when EncryptPersonalData is true.\r\n\r\nSo all of the normal store tests except one pass when turning this on with a dummy reverse encryptor. \r\n There's a test that that directly uses the DbSet as an IQueryable to look for users like so: `UserManager.Users.Count(u => u.UserName.StartsWith(\"CanFindUsersViaUserQuerable\"))` which fails because this probably bypasses the converters... @ajcvickers ?\r\n\r\ncc @blowdart @javiercn "},{"Id":"7351834492","Type":"IssuesEvent","CreatedAt":"2018-03-08T18:32:47","Actor":"marcwittke","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1669","RelatedDescription":"Opened issue \"Misleading exception message in Identity 2.0.1\" (#1669) at aspnet/Identity","RelatedBody":"```\r\nSystem.NotSupportedException : No IUserTokenProvider named 'Default' is registered.\r\n   at Microsoft.AspNetCore.Identity.UserManager`1.GenerateUserTokenAsync(TUser user, String tokenProvider, String purpose)\r\n   at Microsoft.AspNetCore.Identity.UserManager`1.GeneratePasswordResetTokenAsync(TUser user)\r\n```\r\n\r\nThe framework in reality requires an implementation of `IUserTwoFactorTokenProvider<TUser>` "},{"Id":"7345611512","Type":"PullRequestEvent","CreatedAt":"2018-03-07T17:57:40","Actor":"ryanbrandenburg","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1664","RelatedDescription":"Merged pull request \"Skip Flaky tests\" (#1664) at aspnet/Identity","RelatedBody":"These tests all fail intermittently due to #1630. Un-skip them when that issue is resolved."},{"Id":"7344242647","Type":"IssuesEvent","CreatedAt":"2018-03-07T14:07:43","Actor":"marcwittke","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1668","RelatedDescription":"Opened issue \"Support a synchronous API\" (#1668) at aspnet/Identity","RelatedBody":"I know about the benefits of having async methods. But, however, there are always situations, that do not allow using the async/await pattern, often outside your control. My case is an encapsulated business domain that raises an event, that should be handled synchronously by `UserManager`.\r\n\r\nI also know there are various techniques to make this happen, however, I spent various days to find a possibility to do so, that does not deadlock in a single cpu environment (cheap azure build agent, cheap azure hosting), not only because it is really hard to reproduce that issue locally. Btw: I ended up with [this answer on SO](https://stackoverflow.com/a/5097066/164162), but to be honest: I am not able to explain, why this is better than `TaskFactory.StartNew(func).Unwrap().GetAwaiter().GetResult()` . It is proven to work by trial and error, what makes me feel not so comfortable.\r\n\r\nIs there a specific reason to force the consumer of ASP.Net Identity Core to the async pattern, except \"that's how it should be done today. basta.\"?"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7358980646","Type":"IssuesEvent","CreatedAt":"2018-03-10T00:58:49","Actor":"ryanbrandenburg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2373","RelatedDescription":"Opened issue \"Broken tests:  ResponseFormats_Kestrel_ContentLength etc\" (#2373) at aspnet/KestrelHttpServer","RelatedBody":"A bunch of these tests were broken by the new runtime [on High Sierra](http://aspnetci/viewLog.html?buildId=418684&tab=buildResultsDiv&buildTypeId=XPlat_HighSierraOsxUniverse#testNameId-1295381151259444512).\r\n\r\n```\r\nAssert.Null() Failure\r\nExpected: (null)\r\nActual:   True\r\n   at ServerComparison.FunctionalTests.ResponseTests.CheckContentLengthAsync(HttpClient client, ILogger logger)\r\n   at ServerComparison.FunctionalTests.ResponseTests.ResponseFormats(ServerType serverType, RuntimeFlavor runtimeFlavor, RuntimeArchitecture architecture, Func`3 scenario, ApplicationType applicationType, String testName) in /_/test/ServerComparison.FunctionalTests/ResponseTests.cs:line 196\r\n--- End of stack trace from previous location where exception was thrown ---\r\n------- Stdout: -------\r\n| TestLifetime Information: Starting test ResponseFormats_Kestrel_ContentLength_Kestrel_CoreClr_x64_Portable\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: Deploying [Variation] :: ServerType=Kestrel, Runtime=CoreClr, Arch=x64, BaseUrlHint=, Publish=False\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: Executing dotnet run --no-restore --framework netcoreapp2.1 -- --server.urls http://localhost:56915/  --server Microsoft.AspNetCore.Server.Kestrel\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: SET ASPNETCORE_ENVIRONMENT=Responses\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: SET ASPNETCORE_DETAILEDERRORS=true\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: Started dotnet. Process Id : 82402\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout: Using launch settings from /Users/aspnetci/Documents/buildAgent/work/33bdfc1cae7b2a38/modules/ServerTests/test/ServerComparison.TestSites/Properties/launchSettings.json...\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Warning: dotnet stderr: The launch profile \"(Default)\" could not be applied.\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Warning: dotnet stderr: A usable launch profile could not be located.\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout: Hosting environment: Responses\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout: Content root path: /Users/aspnetci/Documents/buildAgent/work/33bdfc1cae7b2a38/modules/ServerTests/test/ServerComparison.TestSites/bin/Release/netcoreapp2.1/\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout: Now listening on: http://localhost:56915\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout: Application started. Press Ctrl+C to shut down.\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: Application ready at URL: http://localhost:56915/\r\n| ResponseFormats Warning: Retry count 1..\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout: \\x1b[40m\\x1b[32minfo\\x1b[39m\\x1b[22m\\x1b[49m: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout:       Request starting HTTP/1.1 GET http://localhost:56915/  \r\n| ResponseFormats Information: Testing ContentLength\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout: \\x1b[40m\\x1b[32minfo\\x1b[39m\\x1b[22m\\x1b[49m: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout:       Request finished in 114.76ms 200 \r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout: \\x1b[40m\\x1b[32minfo\\x1b[39m\\x1b[22m\\x1b[49m: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout:       Request starting HTTP/1.1 GET http://localhost:56915/contentlength  \r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout: \\x1b[40m\\x1b[32minfo\\x1b[39m\\x1b[22m\\x1b[49m: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout:       Request finished in 5.546ms 200 \r\n| ResponseFormats Warning: StatusCode: 200, ReasonPhrase: 'OK', Version: 1.1, Content: System.Net.Http.NoWriteNoSeekStreamContent, Headers:\r\n|                          {\r\n|                            Connection: close\r\n|                            Date: Sat, 10 Mar 2018 00:53:40 GMT\r\n|                            Server: Kestrel\r\n|                            Content-Length: 14\r\n|                          }\r\n| ResponseFormats Warning: Content Length\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: Attempting to cancel process 82402\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: dotnet stdout: Application is shutting down...\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Warning: Unable to terminate the host process with process Id '82402\r\n| Microsoft.AspNetCore.Server.IntegrationTesting.SelfHostDeployer Information: [Time]: Total time taken for this test variation '5.350861' seconds\r\n| TestLifetime Information: Finished test ResponseFormats_Kestrel_ContentLength_Kestrel_CoreClr_x64_Portable in 5.351803s\r\n```"},{"Id":"7358794984","Type":"IssuesEvent","CreatedAt":"2018-03-09T23:42:42","Actor":"JunTaoLuo","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2197","RelatedDescription":"Closed issue \"Flaky test: HttpsConnectionClosedWhenResponseDoesNotSatisfyMinimumDataRate\" (#2197) at aspnet/KestrelHttpServer","RelatedBody":"http://aspnetci/viewLog.html?buildId=360375&tab=buildResultsDiv&buildTypeId=Lite_KestrelStressTest#testNameId4971464264492862489\r\n\r\n```\r\nAssert.True() Failure\r\nExpected: True\r\nActual:   False\r\n   at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.<HttpsConnectionClosedWhenResponseDoesNotSatisfyMinimumDataRate>d__66.MoveNext() in C:\\b\\w\\33bdfc1cae7b2a38\\modules\\KestrelHttpServer\\test\\Kestrel.FunctionalTests\\ResponseTests.cs:line 2611\r\n--- End of stack trace from previous location where exception was thrown ---\r\n--- End of stack trace from previous location where exception was thrown ---\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```\r\n\r\nIt would be nice if we could add descriptive error messages to Assert.Trues going forward too."},{"Id":"7358684454","Type":"PullRequestEvent","CreatedAt":"2018-03-09T23:04:21","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2368","RelatedDescription":"Merged pull request \"Use LibuvThread inspired schedulers in socket transport\" (#2368) at aspnet/KestrelHttpServer","RelatedBody":"Inspired by #2366. Looks like it might be a small improvement. We'll need to test more scenarios.\r\n\r\n## Json Windows\r\n\r\n### Libuv\r\n\r\n```\r\n[03:23:17.655] RequestsPerSecond:           452637\r\n[03:23:17.656] Latency on load (ms):        0.7\r\n[03:23:17.656] Max CPU (%):                 85\r\n[03:23:17.656] WorkingSet (MB):             386\r\n[03:23:17.656] Startup Main (ms):           419\r\n[03:23:17.656] First Request (ms):          232.8\r\n[03:23:17.657] Latency (ms):                0.8\r\n[03:23:17.657] Socket Errors:               0\r\n[03:23:17.657] Bad Responses:               0\r\n[03:23:17.657] SDK:                         2.2.0-preview1-007522\r\n[03:23:17.657] Runtime:                     2.1.0-preview2-26225-03\r\n[03:23:17.657] ASP.NET Core:                2.1.0-preview2-30256\r\n```\r\n\r\n### Sockets\r\n\r\n#### Before\r\n\r\n```\r\n[03:21:06.064] RequestsPerSecond:           287068\r\n[03:21:06.065] Latency on load (ms):        3\r\n[03:21:06.065] Max CPU (%):                 84\r\n[03:21:06.065] WorkingSet (MB):             360\r\n[03:21:06.065] Startup Main (ms):           382\r\n[03:21:06.065] First Request (ms):          228.6\r\n[03:21:06.066] Latency (ms):                0.7\r\n[03:21:06.066] Socket Errors:               0\r\n[03:21:06.066] Bad Responses:               0\r\n[03:21:06.066] SDK:                         2.2.0-preview1-007522\r\n[03:21:06.066] Runtime:                     2.1.0-preview2-26225-03\r\n[03:21:06.066] ASP.NET Core:                2.1.0-preview2-30255\r\n```\r\n\r\n#### #2366\r\n\r\n```\r\n[03:18:42.707] RequestsPerSecond:           342340\r\n[03:18:42.707] Latency on load (ms):        1.4\r\n[03:18:42.708] Max CPU (%):                 85\r\n[03:18:42.708] WorkingSet (MB):             363\r\n[03:18:42.708] Startup Main (ms):           376\r\n[03:18:42.708] First Request (ms):          228.9\r\n[03:18:42.708] Latency (ms):                0.8\r\n[03:18:42.708] Socket Errors:               0\r\n[03:18:42.708] Bad Responses:               0\r\n[03:18:42.708] SDK:                         2.2.0-preview1-007522\r\n[03:18:42.708] Runtime:                     2.1.0-preview2-26225-03\r\n[03:18:42.708] ASP.NET Core:                2.1.0-preview2-30255\r\n```\r\n\r\n#### After\r\n\r\n```\r\n[03:19:41.107] RequestsPerSecond:           376305\r\n[03:19:41.107] Latency on load (ms):        0.8\r\n[03:19:41.107] Max CPU (%):                 82\r\n[03:19:41.107] WorkingSet (MB):             368\r\n[03:19:41.108] Startup Main (ms):           389\r\n[03:19:41.108] First Request (ms):          230.1\r\n[03:19:41.108] Latency (ms):                0.9\r\n[03:19:41.108] Socket Errors:               0\r\n[03:19:41.108] Bad Responses:               0\r\n[03:19:41.108] SDK:                         2.2.0-preview1-007522\r\n[03:19:41.108] Runtime:                     2.1.0-preview2-26225-03\r\n[03:19:41.108] ASP.NET Core:                2.1.0-preview2-30255\r\n```"},{"Id":"7358635422","Type":"PullRequestEvent","CreatedAt":"2018-03-09T22:49:03","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2366","RelatedDescription":"Closed pull request \"Making performance improvements to sockets\" (#2366) at aspnet/KestrelHttpServer","RelatedBody":"- Run SocketAwaitable continuations asynchronously for reads (Didn't seem to make much of a difference for writes)\r\n- Run using the global thread pool queues instead\r\nof using local queues.\r\n\r\nTheories:\r\n- We're freeing up the IO thread immediately to do more work (get more completions) so we can do more work if we dispatch.\r\n- Queuing to the local queue incurred more work stealing instead of the current thread picking it up to do more.\r\n\r\n## Plaintext Linux\r\n\r\n### Libuv:\r\n\r\n#### Thread count default\r\n\r\n```\r\n[02:36:04.381] RequestsPerSecond:           1552129\r\n[02:36:04.381] Latency on load (ms):        2.9\r\n[02:36:04.381] Max CPU (%):                 98\r\n[02:36:04.381] WorkingSet (MB):             403\r\n[02:36:04.382] Startup Main (ms):           492\r\n[02:36:04.382] First Request (ms):          192.4\r\n[02:36:04.382] Latency (ms):                0.7\r\n[02:36:04.382] Socket Errors:               0\r\n[02:36:04.382] Bad Responses:               0\r\n[02:36:04.382] SDK:                         2.2.0-preview1-007522\r\n[02:36:04.382] Runtime:                     2.1.0-preview2-26225-03\r\n[02:36:04.382] ASP.NET Core:                2.1.0-preview2-30242\r\n```\r\n\r\n#### Thread count 2\r\n\r\n```\r\n[02:40:17.288] RequestsPerSecond:           1591637\r\n[02:40:17.288] Latency on load (ms):        1.6\r\n[02:40:17.288] Max CPU (%):                 97\r\n[02:40:17.288] WorkingSet (MB):             405\r\n[02:40:17.288] Startup Main (ms):           477\r\n[02:40:17.288] First Request (ms):          191\r\n[02:40:17.288] Latency (ms):                0.8\r\n[02:40:17.288] Socket Errors:               0\r\n[02:40:17.288] Bad Responses:               0\r\n[02:40:17.289] SDK:                         2.2.0-preview1-007522\r\n[02:40:17.289] Runtime:                     2.1.0-preview2-26225-03\r\n[02:40:17.289] ASP.NET Core:                2.1.0-preview2-30242\r\n```\r\n\r\n### Sockets:\r\n\r\n#### Before:\r\n\r\n```\r\n[02:42:05.259] RequestsPerSecond:           1450885\r\n[02:42:05.259] Latency on load (ms):        2.5\r\n[02:42:05.259] Max CPU (%):                 99\r\n[02:42:05.259] WorkingSet (MB):             407\r\n[02:42:05.259] Startup Main (ms):           407\r\n[02:42:05.260] First Request (ms):          192.3\r\n[02:42:05.260] Latency (ms):                0.9\r\n[02:42:05.260] Socket Errors:               0\r\n[02:42:05.260] Bad Responses:               0\r\n[02:42:05.260] SDK:                         2.2.0-preview1-007522\r\n[02:42:05.260] Runtime:                     2.1.0-preview2-26225-03\r\n[02:42:05.260] ASP.NET Core:                2.1.0-preview2-30242\r\n```\r\n\r\n#### After:\r\n\r\n```\r\n[02:43:48.984] RequestsPerSecond:           1534075\r\n[02:43:48.984] Latency on load (ms):        1.5\r\n[02:43:48.984] Max CPU (%):                 99\r\n[02:43:48.984] WorkingSet (MB):             410\r\n[02:43:48.984] Startup Main (ms):           410\r\n[02:43:48.984] First Request (ms):          189\r\n[02:43:48.985] Latency (ms):                0.9\r\n[02:43:48.985] Socket Errors:               0\r\n[02:43:48.985] Bad Responses:               0\r\n[02:43:48.985] SDK:                         2.2.0-preview1-007522\r\n[02:43:48.985] Runtime:                     2.1.0-preview2-26225-03\r\n[02:43:48.985] ASP.NET Core:                2.1.0-preview2-30242\r\n```\r\n\r\n## Plaintext Windows\r\n\r\n### Libuv:\r\n\r\n#### Thread count default\r\n\r\n```\r\n[02:31:14.077] RequestsPerSecond:           1569046\r\n[02:31:14.077] Latency on load (ms):        3.6\r\n[02:31:14.077] Max CPU (%):                 92\r\n[02:31:14.078] WorkingSet (MB):             385\r\n[02:31:14.078] Startup Main (ms):           440\r\n[02:31:14.078] First Request (ms):          143.9\r\n[02:31:14.078] Latency (ms):                0.8\r\n[02:31:14.078] Socket Errors:               0\r\n[02:31:14.078] Bad Responses:               0\r\n[02:31:14.078] SDK:                         2.2.0-preview1-007522\r\n[02:31:14.078] Runtime:                     2.1.0-preview2-26225-03\r\n[02:31:14.078] ASP.NET Core:                2.1.0-preview2-30242\r\n```\r\n\r\n#### Thread count 2\r\n\r\n```\r\n[02:38:43.195] RequestsPerSecond:           1833182\r\n[02:38:43.195] Latency on load (ms):        1.3\r\n[02:38:43.195] Max CPU (%):                 92\r\n[02:38:43.195] WorkingSet (MB):             385\r\n[02:38:43.195] Startup Main (ms):           418\r\n[02:38:43.195] First Request (ms):          146.3\r\n[02:38:43.195] Latency (ms):                0.8\r\n[02:38:43.195] Socket Errors:               0\r\n[02:38:43.195] Bad Responses:               0\r\n[02:38:43.195] SDK:                         2.2.0-preview1-007522\r\n[02:38:43.196] Runtime:                     2.1.0-preview2-26225-03\r\n[02:38:43.196] ASP.NET Core:                2.1.0-preview2-30242\r\n```\r\n\r\n### Sockets:\r\n\r\n#### Before\r\n\r\n```\r\n[02:33:22.076] RequestsPerSecond:           1637189\r\n[02:33:22.076] Latency on load (ms):        9.2\r\n[02:33:22.076] Max CPU (%):                 93\r\n[02:33:22.076] WorkingSet (MB):             386\r\n[02:33:22.077] Startup Main (ms):           377\r\n[02:33:22.077] First Request (ms):          141.9\r\n[02:33:22.077] Latency (ms):                0.8\r\n[02:33:22.077] Socket Errors:               0\r\n[02:33:22.077] Bad Responses:               0\r\n[02:33:22.077] SDK:                         2.2.0-preview1-007522\r\n[02:33:22.077] Runtime:                     2.1.0-preview2-26225-03\r\n[02:33:22.077] ASP.NET Core:                2.1.0-preview2-30242\r\n```\r\n\r\n#### After\r\n\r\n```\r\n[01:54:15.852] RequestsPerSecond:           1810187\r\n[01:54:15.852] Latency on load (ms):        1.7\r\n[01:54:15.852] Max CPU (%):                 93\r\n[01:54:15.852] WorkingSet (MB):             379\r\n[01:54:15.852] Startup Main (ms):           380\r\n[01:54:15.852] First Request (ms):          140.6\r\n[01:54:15.853] Latency (ms):                0.7\r\n[01:54:15.853] Socket Errors:               0\r\n[01:54:15.853] Bad Responses:               0\r\n```\r\n\r\n\r\n## Json Linux\r\n\r\n### Libuv\r\n\r\n```\r\n[02:50:53.012] RequestsPerSecond:           404439\r\n[02:50:53.012] Latency on load (ms):        1.1\r\n[02:50:53.012] Max CPU (%):                 98\r\n[02:50:53.012] WorkingSet (MB):             403\r\n[02:50:53.012] Startup Main (ms):           468\r\n[02:50:53.012] First Request (ms):          282.1\r\n[02:50:53.012] Latency (ms):                0.8\r\n[02:50:53.012] Socket Errors:               0\r\n[02:50:53.012] Bad Responses:               0\r\n[02:50:53.012] SDK:                         2.2.0-preview1-007522\r\n[02:50:53.012] Runtime:                     2.1.0-preview2-26225-03\r\n[02:50:53.013] ASP.NET Core:                2.1.0-preview2-30242\r\n```\r\n\r\n### Sockets\r\n\r\n#### Before\r\n\r\n```\r\n[02:48:02.883] RequestsPerSecond:           258183\r\n[02:48:02.883] Latency on load (ms):        1.4\r\n[02:48:02.883] Max CPU (%):                 98\r\n[02:48:02.883] WorkingSet (MB):             403\r\n[02:48:02.883] Startup Main (ms):           409\r\n[02:48:02.884] First Request (ms):          283\r\n[02:48:02.884] Latency (ms):                0.7\r\n[02:48:02.884] Socket Errors:               0\r\n[02:48:02.884] Bad Responses:               0\r\n[02:48:02.884] SDK:                         2.2.0-preview1-007522\r\n[02:48:02.884] Runtime:                     2.1.0-preview2-26225-03\r\n[02:48:02.884] ASP.NET Core:                2.1.0-preview2-30242\r\n```\r\n\r\n#### After\r\n\r\n```\r\n[02:46:09.887] RequestsPerSecond:           304399\r\n[02:46:09.887] Latency on load (ms):        1\r\n[02:46:09.887] Max CPU (%):                 98\r\n[02:46:09.887] WorkingSet (MB):             407\r\n[02:46:09.887] Startup Main (ms):           404\r\n[02:46:09.888] First Request (ms):          292.7\r\n[02:46:09.888] Latency (ms):                0.7\r\n[02:46:09.888] Socket Errors:               0\r\n[02:46:09.888] Bad Responses:               0\r\n[02:46:09.888] SDK:                         2.2.0-preview1-007522\r\n[02:46:09.888] Runtime:                     2.1.0-preview2-26225-03\r\n[02:46:09.888] ASP.NET Core:                2.1.0-preview2-30242\r\n```\r\n\r\n## Json Windows\r\n\r\n### Libuv\r\n\r\n```\r\n[02:52:30.244] RequestsPerSecond:           451311\r\n[02:52:30.244] Latency on load (ms):        0.7\r\n[02:52:30.244] Max CPU (%):                 85\r\n[02:52:30.244] WorkingSet (MB):             386\r\n[02:52:30.244] Startup Main (ms):           423\r\n[02:52:30.244] First Request (ms):          235.5\r\n[02:52:30.244] Latency (ms):                0.8\r\n[02:52:30.244] Socket Errors:               0\r\n[02:52:30.245] Bad Responses:               0\r\n[02:52:30.245] SDK:                         2.2.0-preview1-007522\r\n[02:52:30.245] Runtime:                     2.1.0-preview2-26225-03\r\n[02:52:30.245] ASP.NET Core:                2.1.0-preview2-30242\r\n```\r\n\r\n### Sockets\r\n\r\n#### Before\r\n\r\n```\r\n[02:54:28.433] RequestsPerSecond:           299985\r\n[02:54:28.433] Latency on load (ms):        7\r\n[02:54:28.433] Max CPU (%):                 84\r\n[02:54:28.434] WorkingSet (MB):             372\r\n[02:54:28.434] Startup Main (ms):           376\r\n[02:54:28.434] First Request (ms):          229.2\r\n[02:54:28.434] Latency (ms):                0.8\r\n[02:54:28.434] Socket Errors:               0\r\n[02:54:28.434] Bad Responses:               0\r\n[02:54:28.434] SDK:                         2.2.0-preview1-007522\r\n[02:54:28.434] Runtime:                     2.1.0-preview2-26225-03\r\n[02:54:28.434] ASP.NET Core:                2.1.0-preview2-30242\r\n```\r\n\r\n#### After\r\n\r\n```\r\n[02:55:24.440] RequestsPerSecond:           349936\r\n[02:55:24.440] Latency on load (ms):        1.4\r\n[02:55:24.440] Max CPU (%):                 84\r\n[02:55:24.440] WorkingSet (MB):             368\r\n[02:55:24.440] Startup Main (ms):           377\r\n[02:55:24.440] First Request (ms):          228\r\n[02:55:24.440] Latency (ms):                0.7\r\n[02:55:24.440] Socket Errors:               0\r\n[02:55:24.440] Bad Responses:               0\r\n[02:55:24.440] SDK:                         2.2.0-preview1-007522\r\n[02:55:24.440] Runtime:                     2.1.0-preview2-26225-03\r\n[02:55:24.440] ASP.NET Core:                2.1.0-preview2-30242\r\n```"},{"Id":"7358509812","Type":"IssuesEvent","CreatedAt":"2018-03-09T22:14:35","Actor":"BrennanConroy","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2372","RelatedDescription":"Opened issue \"Accept upgrade requests with content\" (#2372) at aspnet/KestrelHttpServer","RelatedBody":"Upgrade requests are allowed to have content in them, but currently we respond with a 400.\r\n\r\n`Connection id \"\"0HLC5IN9VF1PO\"\" bad request data: \"\"Requests with 'Connection: Upgrade' cannot have content in the request body.\"\"`\r\n\r\nhttps://github.com/dotnet/corefx/issues/27912"},{"Id":"7356456426","Type":"PullRequestEvent","CreatedAt":"2018-03-09T14:56:51","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2371","RelatedDescription":"Opened pull request \"Remove KestrelThreadPool abstraction and replaced it with PipeScheduler\" (#2371) at aspnet/KestrelHttpServer","RelatedBody":"- This should avoid allocations per call to Schedule on .NET Core 2.1 as well."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7358714367","Type":"IssuesEvent","CreatedAt":"2018-03-09T23:14:21","Actor":"mkArtakMSFT","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2146","RelatedDescription":"Closed issue \"PreserveCompilationContext in old style csproj\" (#2146) at aspnet/Razor","RelatedBody":"I'm trying to copy the refs folder of my webapplication into the output folder of my test project.  The webapplication is netcore20 and my test project is an old school csproj targeting full 4.7 (has to be for specflow to work). \r\n\r\nI was able to make it work with a newstyle csproj targeting net47 with this instruction in the csproj.  The refs folder was copied into my output folder.\r\n```\r\n  <PropertyGroup>\r\n    <PreserveCompilationContext>true</PreserveCompilationContext>\r\n  </PropertyGroup>\r\n```\r\n\r\nHowever, in the old style csproj, the refs folder is not copied and I'm left with precompilation errors when I run my tests.  Can I get some guidance ?  I think PreserveCompilationContext is from dotnet core.. Maybe there's an equivalent in 4.7 ?\r\n\r\nI replicated the two scenarios in this repo:\r\nhttps://github.com/CurlyFire/InProcKestrel\r\n\r\nThank you very much!"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7307968614","Type":"IssuesEvent","CreatedAt":"2018-02-28T06:01:18","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066) at aspnet/Tooling","RelatedBody":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file."},{"Id":"7307353364","Type":"IssuesEvent","CreatedAt":"2018-02-28T02:19:15","Actor":"rjamesnw","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Opened issue \"Nesting bug\" (#1066) at aspnet/Tooling","RelatedBody":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7352155171","Type":"IssuesEvent","CreatedAt":"2018-03-08T19:37:26","Actor":"natemcmaster","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/199","RelatedDescription":"Closed issue \"ASP.NET/EF Core feeds renamed and moved to dotnet.myget.org\" (#199) at aspnet/Announcements","RelatedBody":"The ASP.NET and EF Core MyGet feeds have moved from www.myget.org to dotnet.myget.org. There are automatic redirects from the old feeds to the new feeds so no _immediate_ change is needed. If you use the nightly feeds for packages, please move to the new feeds ASAP. The redirects will be available for at least a few weeks.\n\n| https://www.myget.org/f/ (Before) | https://dotnet.myget.org/f/ (After) |\n| --- | --- |\n| aspnetvnext | aspnetcore-dev |\n| aspnetrelease | aspnetcore-release |\n| aspnetmaster | aspnetcore-master |\n| aspnetcidev | aspnetcore-ci-dev |\n| aspnetcirelease | aspnetcore-ci-release |\n\nPlease use https://github.com/aspnet/Home/issues/1708 for further discussion.\n"},{"Id":"7340008772","Type":"IssuesEvent","CreatedAt":"2018-03-06T20:07:16","Actor":"natemcmaster","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/292","RelatedDescription":"Opened issue \"Deprecating the `microsoft/aspnetcore-build:1.0-2.0` Docker image\" (#292) at aspnet/Announcements","RelatedBody":"We will be deprecating the following Docker images\r\n \r\n- microsoft/aspnetcore-build:1.0-1.1\r\n- microsoft/aspnetcore-build:1.0-2.0\r\n\r\nWe will not delete these images. These images will continue to receive patch update whenever a 1.0.x, 1.1.x, or 2.0.x update ships, however, we will not produce a new version which contains the 2.1 runtime.\r\n\r\n### Why?\r\n \r\nThese images existed to support CI/CD pipelines that run apps on multiple versions for .NET Core in the same container. With each release, these images have grown in size. The 1.0-2.0 image is already about 1GB, and would continue to grow with runtime updates. \r\n \r\nFortunately, recent improvements to .NET Core (such as minor version roll-forward) and Docker (multi-stage builds) have reduced the need to use an image with multiple versions of .NET Core. We have seen usage of these multi-version images declining over time, and today, they are a small percentage of our Docker image usage.\r\n\r\nRather than maintaining a single, large image with all possible .NET Core runtimes, we encourage users to use multi-stage builds. Docker's multi-stage feature allows you to compose a single Dockerfile, but still use multiple .NET Core runtimes. Also, starting in 2.1, .NET Core supports rolling forward the runtime version within the major version, which will further reduce the need to have multiple 2.x runtimes side-by-side.\r\n \r\nFor discussion, use https://github.com/aspnet/aspnet-docker/issues/349"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"971084152693866496","CreatedAt":"2018-03-06T18:04:38+00:00","UserScreenname":"aspnet","Text":"We are live at https://t.co/4Ioo9jNSN2 ! Join us!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":4,"RawContent":null},{"Id":"971075755168841728","CreatedAt":"2018-03-06T17:31:16+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup starts at 10 AM  Pacific / 1800 GMT. Ryan Nowak will be showing Web API 2.1 fâ¦ https://t.co/OW0zeYZPyq","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":10,"RawContent":null},{"Id":"970812132399890432","CreatedAt":"2018-03-06T00:03:43+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is a feature deep dive on Web API improvements in 2.1 with Ryan Nowak.\n\nTuesdâ¦ https://t.co/eKElaXNIR3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":35,"FavoriteCount":11,"RawContent":null},{"Id":"969671939106025473","CreatedAt":"2018-03-02T20:33:00+00:00","UserScreenname":"aspnet","Text":"Jon the Azure AD team for their first Office Hours call on March 8. https://t.co/kVYF9JWzeZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":6,"RawContent":null},{"Id":"968561906003791872","CreatedAt":"2018-02-27T19:02:08+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":6,"RawContent":null},{"Id":"968550190889267201","CreatedAt":"2018-02-27T18:15:34+00:00","UserScreenname":"aspnet","Text":"#ASPNET Core 2.1.0-preview1 now available https://t.co/loVh03KKfz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":71,"FavoriteCount":54,"RawContent":null},{"Id":"966009382377897985","CreatedAt":"2018-02-20T17:59:19+00:00","UserScreenname":"aspnet","Text":"Starting now! \n\nJoin the #ASPNET Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"965988674474188800","CreatedAt":"2018-02-20T16:37:01+00:00","UserScreenname":"aspnet","Text":"Catch the #ASPNET Community Standup today at 10 AM Pacific / 18:00 GMT with Javier C Nelson showing a preview of Raâ¦ https://t.co/Fg8NoQJtJp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":4,"RawContent":null},{"Id":"965964952442933249","CreatedAt":"2018-02-20T15:02:46+00:00","UserScreenname":"aspnet","Text":"Jeff is working with cognitive services and Bots today on stream... check it out! https://t.co/HVyIw0Wcgd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":9,"RawContent":null},{"Id":"963791622822612994","CreatedAt":"2018-02-14T15:06:43+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz this FRIDAY at 10am / 15:00 UTC for a free online workshop to get started with ASPNet Core.â¦ https://t.co/qtufFsbfmc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":16,"RawContent":null},{"Id":"963559608869568512","CreatedAt":"2018-02-13T23:44:47+00:00","UserScreenname":"aspnet","Text":"The #ASPNET Community Standup is starting now! Join us!\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"963556129748918272","CreatedAt":"2018-02-13T23:30:57+00:00","UserScreenname":"aspnet","Text":"Starting in 15 minutes... join us!\n\nhttps://t.co/4Ioo9jNSN2 https://t.co/C7LilH9606","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":8,"RawContent":null},{"Id":"963413986912997376","CreatedAt":"2018-02-13T14:06:08+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz at 10am ET / 15:00 UTC to learn more about @AspNet Core and get your .NET related questions answeâ¦ https://t.co/ORAYG28QGW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null},{"Id":"963180036571332609","CreatedAt":"2018-02-12T22:36:30+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":8,"RawContent":null},{"Id":"962026058412249090","CreatedAt":"2018-02-09T18:11:00+00:00","UserScreenname":"aspnet","Text":"ASPNET Core 2.0 is out! Join @csharpfritz as he walks you through the improvements, additions and enhancements of tâ¦ https://t.co/AC3AJnLo9t","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":52,"FavoriteCount":31,"RawContent":null},{"Id":"961980507939528705","CreatedAt":"2018-02-09T15:10:00+00:00","UserScreenname":"aspnet","Text":"Working with ASPNET and want to invest in Angular? Check out @Paladique at @DevIntersection, March 25-28 in Orlandoâ¦ https://t.co/i9BCRXD1fc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":15,"RawContent":null}]}},"RunOn":"2018-03-10T05:30:08.9805981Z","RunDurationInMilliseconds":7656}