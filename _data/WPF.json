{"Data":{"GitHub":{"Issues":[{"Id":"407230177","IsPullRequest":true,"CreatedAt":"2019-02-06T13:21:10","Actor":"dotnet-maestro[bot]","Number":"329","RawContent":null,"Title":"Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview.19105.13\r\n- Microsoft.Win32.Registry - 4.6.0-preview.19105.13\r\n- System.Windows.Extensions - 4.6.0-preview.19105.13\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview.19105.13\r\n- System.Reflection.TypeExtensions - 4.6.0-preview.19105.13\r\n- System.Security.AccessControl - 4.6.0-preview.19105.13\r\n- System.Security.Cryptography.Xml - 4.6.0-preview.19105.13\r\n- System.Security.Permissions - 4.6.0-preview.19105.13\r\n- System.Security.Principal.Windows - 4.6.0-preview.19105.13\r\n- System.Reflection.Emit - 4.6.0-preview.19105.13\r\n- System.Diagnostics.EventLog - 4.6.0-preview.19105.13\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/329","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/corefx\" (#329)"},{"Id":"407225041","IsPullRequest":true,"CreatedAt":"2019-02-06T13:07:52","Actor":"dotnet-maestro[bot]","Number":"328","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19105.5\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/328","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#328)"},{"Id":"406915091","IsPullRequest":false,"CreatedAt":"2019-02-05T18:26:30","Actor":"nguerrera","Number":"327","RawContent":null,"Title":"Cannot multi-target to netcoreapp < 3.0  and use WindowsDesktop SDK uncoditionally","State":"open","Body":"* .NET Core Version: 3.0  Preview 2\r\n* Windows version: (`winver`): N/A, build time error\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: N/A\r\n \r\n **Problem description:**\r\n\r\nIf a project targets netcoreapp1.x or netcoreapp2.x in addition to netcoreapp3.0, and uses WindowsDesktop SDK in order to use WPF conditionally on 3.0, it fails to build. (Importing SDKs conditionally is possible, but difficult to get right and hard to maintain.)\r\n\r\nThe implicit framework reference is conditioned only on TargetFrameworkIdentifier being .NETCoreApp. It ignores TargetFrameworkVersion.\r\n\r\n **Minimal repro:**\r\n`dotnet build` this:\r\n\r\n``` xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.WindowsDesktop\">\r\n  <PropertyGroup>\r\n   <TargetFrameworks>netcoreapp1.0;netcoreapp3.0</TargetFrameworks>\r\n   <UseWPF Condition=\"'$(TargetFramework)' == 'netcoreapp3.0'\">true</UseWPF>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n```\r\nerror NETSDK1073: The FrameworkReference 'Microsoft.WindowsDesktop.App' was not recognized\r\n```\r\n \r\n **Expected behavior:**\r\n\r\nSuccessful build\r\n \r\ncc @AArnott @dsplaisted @vatsan-madhavan \r\n \r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/327","RelatedDescription":"Open issue \"Cannot multi-target to netcoreapp < 3.0  and use WindowsDesktop SDK uncoditionally\" (#327)"},{"Id":"406776836","IsPullRequest":true,"CreatedAt":"2019-02-05T13:19:33","Actor":"dotnet-maestro[bot]","Number":"326","RawContent":null,"Title":"Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview.19104.4\r\n- Microsoft.Win32.Registry - 4.6.0-preview.19104.4\r\n- System.Windows.Extensions - 4.6.0-preview.19104.4\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview.19104.4\r\n- System.Reflection.TypeExtensions - 4.6.0-preview.19104.4\r\n- System.Security.AccessControl - 4.6.0-preview.19104.4\r\n- System.Security.Cryptography.Xml - 4.6.0-preview.19104.4\r\n- System.Security.Permissions - 4.6.0-preview.19104.4\r\n- System.Security.Principal.Windows - 4.6.0-preview.19104.4\r\n- System.Reflection.Emit - 4.6.0-preview.19104.4\r\n- System.Diagnostics.EventLog - 4.6.0-preview.19104.4\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/326","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/corefx\" (#326)"},{"Id":"406772400","IsPullRequest":true,"CreatedAt":"2019-02-05T13:07:42","Actor":"dotnet-maestro[bot]","Number":"325","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19104.18\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/325","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#325)"},{"Id":"405645099","IsPullRequest":false,"CreatedAt":"2019-02-04T20:33:44","Actor":"geotinc","Number":"313","RawContent":null,"Title":"Start .net core WPF App with Administrator Privilege","State":"closed","Body":"Is there a way to start the app in administrator ?\r\n\r\nI do the following in .net Framework\r\n`<requestedExecutionLevel level=\"requireAdministrator\" uiAccess=\"false\" />`\r\n\r\nThanks for reply","Url":"https://github.com/dotnet/wpf/issues/313","RelatedDescription":"Closed issue \"Start .net core WPF App with Administrator Privilege\" (#313)"},{"Id":"406323386","IsPullRequest":true,"CreatedAt":"2019-02-04T13:18:20","Actor":"dotnet-maestro[bot]","Number":"324","RawContent":null,"Title":"Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview.19103.4\r\n- Microsoft.Win32.Registry - 4.6.0-preview.19103.4\r\n- System.Windows.Extensions - 4.6.0-preview.19103.4\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview.19103.4\r\n- System.Reflection.TypeExtensions - 4.6.0-preview.19103.4\r\n- System.Security.AccessControl - 4.6.0-preview.19103.4\r\n- System.Security.Cryptography.Xml - 4.6.0-preview.19103.4\r\n- System.Security.Permissions - 4.6.0-preview.19103.4\r\n- System.Security.Principal.Windows - 4.6.0-preview.19103.4\r\n- System.Reflection.Emit - 4.6.0-preview.19103.4\r\n- System.Diagnostics.EventLog - 4.6.0-preview.19103.4\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/324","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/corefx\" (#324)"},{"Id":"406319584","IsPullRequest":true,"CreatedAt":"2019-02-04T13:07:30","Actor":"dotnet-maestro[bot]","Number":"323","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19103.1\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/323","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#323)"},{"Id":"406087022","IsPullRequest":true,"CreatedAt":"2019-02-03T13:17:36","Actor":"dotnet-maestro[bot]","Number":"322","RawContent":null,"Title":"Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview.19102.2\r\n- Microsoft.Win32.Registry - 4.6.0-preview.19102.2\r\n- System.Windows.Extensions - 4.6.0-preview.19102.2\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview.19102.2\r\n- System.Reflection.TypeExtensions - 4.6.0-preview.19102.2\r\n- System.Security.AccessControl - 4.6.0-preview.19102.2\r\n- System.Security.Cryptography.Xml - 4.6.0-preview.19102.2\r\n- System.Security.Permissions - 4.6.0-preview.19102.2\r\n- System.Security.Principal.Windows - 4.6.0-preview.19102.2\r\n- System.Reflection.Emit - 4.6.0-preview.19102.2\r\n- System.Diagnostics.EventLog - 4.6.0-preview.19102.2\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/322","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/corefx\" (#322)"},{"Id":"406086220","IsPullRequest":true,"CreatedAt":"2019-02-03T13:07:19","Actor":"dotnet-maestro[bot]","Number":"321","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19102.1\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/321","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#321)"},{"Id":"406076385","IsPullRequest":false,"CreatedAt":"2019-02-03T11:01:23","Actor":"chenyj796","Number":"320","RawContent":null,"Title":"Binding in Command doesn't work","State":"open","Body":"* .NET Core Version: (3.0 Preview1)\r\n* Windows version: (`windows 10`)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.6.1?: yes\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\nI have a MenuModel:\r\n```csharp\r\npublic class MenuModel : ModelBase\r\n{\r\n    public int Id { get; }\r\n    public int ParentId { get; }\r\n\r\n    private string name;\r\n    public string Name\r\n    {\r\n        get { return name; }\r\n        set { if (name != value) { name = value; this.OnPropertyChanged(); } }\r\n    }\r\n\r\n    private string entry;\r\n    public string Entry\r\n    {\r\n        get { return entry; }\r\n        set { if (entry != value) { entry = value; this.OnPropertyChanged(); } }\r\n    }\r\n\r\n    public MenuModel(int id, int parentId)\r\n    {\r\n        this.Id = id;\r\n        this.ParentId = parentId;\r\n    }\r\n}\r\n\r\n```\r\n\r\nand a command:\r\n```csharp\r\npublic class TestCommand : DependencyObject, ICommand\r\n{\r\n    public event EventHandler CanExecuteChanged;\r\n\r\n    public MenuModel Model\r\n    {\r\n        get { return (MenuModel)GetValue(ModelProperty); }\r\n        set { SetValue(ModelProperty, value); }\r\n    }\r\n\r\n    public static readonly DependencyProperty ModelProperty =\r\n        DependencyProperty.Register(\"Model\", typeof(MenuModel), typeof(TestCommand), new PropertyMetadata(null));\r\n\r\n\r\n    public bool CanExecute(object parameter)\r\n    {\r\n        ......\r\n    }\r\n\r\n    public void Execute(object parameter)\r\n    {\r\n        ......\r\n    }\r\n}\r\n\r\n```\r\n\r\n In xaml file, I bind them to the TabControl's ItemTemplate:\r\n```xaml\r\n<TabControl.ItemTemplate>\r\n    <DataTemplate>\r\n        <Button Content=\"{Binding Title}\" Margin=\"3,1,0,0\">\r\n            <Button.Command>\r\n                <local:TestCommand Model=\"{Binding}\" />\r\n            </Button.Command>\r\n        </Button>\r\n    </DataTemplate>\r\n</TabControl.ItemTemplate>\r\n```\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n The binding of TestCommand.Model returns null.\r\n Perhaps it is caused by the type of Command property in Button class is ICommand (which is a interface)\r\n\r\n **Expected behavior:**\r\n Return the MenuModel object\r\n\r\n **Minimal repro:**\r\n \r\n","Url":"https://github.com/dotnet/wpf/issues/320","RelatedDescription":"Open issue \"Binding in Command doesn't work\" (#320)"},{"Id":"405988695","IsPullRequest":false,"CreatedAt":"2019-02-02T14:41:46","Actor":"PascalKoe","Number":"319","RawContent":null,"Title":"When stop hovering over control it's displayed incorrectly","State":"open","Body":"* .NET Core Version: 3.0.100-preview-010184\r\n* Windows version: Windows 10 Education 1809 Build 17763.253\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n \r\n **Problem description:**\r\nHovering over Controls (sometimes) causes them to display incorrectly. Either they get mostly the background color or they have some sort of out of focus zoomed in effect.\r\nCouldn't reproduce it on a different Windows 10 Professional Version.\r\n \r\n **Actual behavior:**\r\nWhen control isn't inside of a group box and I hover over the control and then leave it it's displayed incorrectly. Controls that don't have a hover animation don't seem to be affected (disabled buttons or labels for example).\r\n \r\n **Expected behavior:**\r\n Display correctly.\r\n\r\n **Minimal repro:**\r\nAny application with the default controls will do as long as they have a hovering animation.\r\n```\r\n <Window x:Class=\"TestApp.MainWindow\"\r\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n        xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\r\n        xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\r\n        xmlns:local=\"clr-namespace:TestApp\"\r\n        mc:Ignorable=\"d\"\r\n        Title=\"MainWindow\" Height=\"450\" Width=\"800\">\r\n    <Grid>\r\n        <Grid.RowDefinitions>\r\n            <RowDefinition Height=\"9*\"/>\r\n            <RowDefinition Height=\"1*\"/>\r\n        </Grid.RowDefinitions>\r\n        <GroupBox Header=\"A simple GroupBox\" HorizontalAlignment=\"Left\" Margin=\"0,0,0,0\" VerticalAlignment=\"Top\" Grid.Row=\"0\">\r\n            <Button Content=\"I dont disappear\" FontSize=\"20\"/>\r\n        </GroupBox>\r\n        <Button Content=\"I disappear\" Grid.Row=\"1\" FontSize=\"20\"/>\r\n    </Grid>\r\n</Window>\r\n```\r\n\r\n![Minimal Repo](https://user-images.githubusercontent.com/15944057/52165354-13f7c900-2700-11e9-9cf3-69fa404ac67f.png)\r\nBefore hovering over the lower button.\r\n\r\n![Minimal Repo after hover](https://user-images.githubusercontent.com/15944057/52165358-2b36b680-2700-11e9-8afe-807144fac711.png)\r\nAfter hovering and leaving the button. Hovering and leaving the upper button doesn't produce the same issue.\r\n\r\n![Option Menu of dnspy (64bit .NET Core WPF)](https://user-images.githubusercontent.com/15944057/52165299-21f91a00-26ff-11e9-9925-d28958d30036.png)\r\nScreenshot from [dnspy ](https://github.com/0xd4d/dnSpy)(.NET Core version). The messed up stuff should be a bunch of checkboxes.","Url":"https://github.com/dotnet/wpf/issues/319","RelatedDescription":"Open issue \"When stop hovering over control it's displayed incorrectly\" (#319)"},{"Id":"405981964","IsPullRequest":true,"CreatedAt":"2019-02-02T13:17:56","Actor":"dotnet-maestro[bot]","Number":"318","RawContent":null,"Title":"Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview.19101.5\r\n- Microsoft.Win32.Registry - 4.6.0-preview.19101.5\r\n- System.Windows.Extensions - 4.6.0-preview.19101.5\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview.19101.5\r\n- System.Reflection.TypeExtensions - 4.6.0-preview.19101.5\r\n- System.Security.AccessControl - 4.6.0-preview.19101.5\r\n- System.Security.Cryptography.Xml - 4.6.0-preview.19101.5\r\n- System.Security.Permissions - 4.6.0-preview.19101.5\r\n- System.Security.Principal.Windows - 4.6.0-preview.19101.5\r\n- System.Reflection.Emit - 4.6.0-preview.19101.5\r\n- System.Diagnostics.EventLog - 4.6.0-preview.19101.5\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/318","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/corefx\" (#318)"},{"Id":"405981111","IsPullRequest":true,"CreatedAt":"2019-02-02T13:07:17","Actor":"dotnet-maestro[bot]","Number":"317","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19101.16\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/317","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#317)"},{"Id":"405707496","IsPullRequest":false,"CreatedAt":"2019-02-01T13:43:56","Actor":"chenyj796","Number":"316","RawContent":null,"Title":"CommandParameter is null when call CanExecute method at first time","State":"open","Body":"* .NET Core Version: (3.0.0-preview-27122-01)\r\n* Windows version: (`windows 10`)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.6.1?: Yes\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n\r\nI have a TestCommand as below:\r\n```csharp\r\npublic class TestCommand : ICommand\r\n{\r\n    public event EventHandler CanExecuteChanged;\r\n\r\n    public bool CanExecute(object parameter)\r\n    {\r\n        return true;\r\n    }\r\n\r\n    public void Execute(object parameter)\r\n    {\r\n    }\r\n}\r\n```\r\nand then I use it in a xaml file:\r\n```xml\r\n<Button Content=\"Test\" Command=\"{StaticResource testCommand}\" CommandParameter=\"abcdef\"/>\r\n```\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n At first time the CanExecute method is called, the parameter's value is null。\r\nIf I change the XAML property's order as below, the parameter's value is abcdef (that's ok):\r\n```xml\r\n<Button Content=\"Test\" CommandParameter=\"abcdef\" Command=\"{StaticResource testCommand}\"/>\r\n```\r\n **Expected behavior:**\r\n The parameter's value is not null at each time, regardless of the XAML order\r\n\r\n **Minimal repro:**\r\n \r\n","Url":"https://github.com/dotnet/wpf/issues/316","RelatedDescription":"Open issue \"CommandParameter is null when call CanExecute method at first time\" (#316)"},{"Id":"405696441","IsPullRequest":true,"CreatedAt":"2019-02-01T13:18:43","Actor":"dotnet-maestro[bot]","Number":"315","RawContent":null,"Title":"Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview.19081.4\r\n- Microsoft.Win32.Registry - 4.6.0-preview.19081.4\r\n- System.Windows.Extensions - 4.6.0-preview.19081.4\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview.19081.4\r\n- System.Reflection.TypeExtensions - 4.6.0-preview.19081.4\r\n- System.Security.AccessControl - 4.6.0-preview.19081.4\r\n- System.Security.Cryptography.Xml - 4.6.0-preview.19081.4\r\n- System.Security.Permissions - 4.6.0-preview.19081.4\r\n- System.Security.Principal.Windows - 4.6.0-preview.19081.4\r\n- System.Reflection.Emit - 4.6.0-preview.19081.4\r\n- System.Diagnostics.EventLog - 4.6.0-preview.19081.4\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/315","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/corefx\" (#315)"},{"Id":"405692801","IsPullRequest":true,"CreatedAt":"2019-02-01T13:07:49","Actor":"dotnet-maestro[bot]","Number":"314","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19081.3\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/314","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#314)"},{"Id":"405566241","IsPullRequest":false,"CreatedAt":"2019-02-01T06:12:08","Actor":"vsfeedback","Number":"312","RawContent":null,"Title":"OutOfMemoryException in XamlReader.Parse","State":"open","Body":"<p>The following line of code results in the parser getting stuck in a loop, adding simulated `EndMember` and `EndObject` nodes to a list until it eventually throws an `OutOfMemoryException`.</p><p></p><pre>XamlReader.Parse(&quot;&lt;DataTemplate xmlns=\\&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation\\&quot;&gt;Invalid Markup&lt;/DataTemplate&gt;&quot;);</pre><pre>System.OutOfMemoryException : Array dimensions exceeded supported range.\n   at System.Collections.Generic.List`1.set_Capacity(Int32 value)\n   at System.Collections.Generic.List`1.EnsureCapacity(Int32 min)\n   at System.Collections.Generic.List`1.Add(T item)\n   at System.Xaml.XamlNodeList.Add(XamlNodeType nodeType, Object data)\n   at System.Xaml.DeferringWriter.WriteEndMember()\n   at System.Xaml.XamlObjectWriter.WriteEndMember()\n   at System.Xaml.XamlObjectWriter.Dispose(Boolean disposing)\n   at System.Xaml.XamlWriter.System.IDisposable.Dispose()\n   at System.Windows.Markup.WpfXamlLoader.Load(XamlReader xamlReader, IXamlObjectWriterFactory writerFactory, Boolean skipJournaledProperties, Object rootObject, XamlObjectWriterSettings settings, Uri baseUri)\n   at System.Windows.Markup.WpfXamlLoader.Load(XamlReader xamlReader, Boolean skipJournaledProperties, Uri baseUri)\n   at System.Windows.Markup.XamlReader.Load(XamlReader xamlReader, ParserContext parserContext)\n   at System.Windows.Markup.XamlReader.Load(XmlReader reader, ParserContext parserContext, XamlParseMode parseMode)\n   at System.Windows.Markup.XamlReader.Load(XmlReader reader)\n   at System.Windows.Markup.XamlReader.Parse(String xamlText)</pre><p></p><p>I understand that the xaml is invalid and would be perfectly happy if it threw a `XamlParseException`, but I think `OutOfMemoryException` is the wrong way to deal with this situation :)</p>\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/439875/outofmemoryexception-in-xamlreaderparse.html\nVSTS ticketId: 781519_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/312","RelatedDescription":"Open issue \"OutOfMemoryException in XamlReader.Parse\" (#312)"},{"Id":"405240169","IsPullRequest":true,"CreatedAt":"2019-01-31T13:19:39","Actor":"dotnet-maestro[bot]","Number":"311","RawContent":null,"Title":"Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview.19080.5\r\n- Microsoft.Win32.Registry - 4.6.0-preview.19080.5\r\n- System.Windows.Extensions - 4.6.0-preview.19080.5\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview.19080.5\r\n- System.Reflection.TypeExtensions - 4.6.0-preview.19080.5\r\n- System.Security.AccessControl - 4.6.0-preview.19080.5\r\n- System.Security.Cryptography.Xml - 4.6.0-preview.19080.5\r\n- System.Security.Permissions - 4.6.0-preview.19080.5\r\n- System.Security.Principal.Windows - 4.6.0-preview.19080.5\r\n- System.Reflection.Emit - 4.6.0-preview.19080.5\r\n- System.Diagnostics.EventLog - 4.6.0-preview.19080.5\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/311","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/corefx\" (#311)"},{"Id":"405235744","IsPullRequest":true,"CreatedAt":"2019-01-31T13:07:56","Actor":"dotnet-maestro[bot]","Number":"310","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19080.6\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/310","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#310)"},{"Id":"405223719","IsPullRequest":true,"CreatedAt":"2019-01-31T12:30:21","Actor":"v-zbsail","Number":"309","RawContent":null,"Title":"LOC CHECKIN | dotnet/wpf master | 20190131","State":"open","Body":"","Url":"https://github.com/dotnet/wpf/pull/309","RelatedDescription":"Open PR \"LOC CHECKIN | dotnet/wpf master | 20190131\" (#309)"},{"Id":"405164219","IsPullRequest":false,"CreatedAt":"2019-01-31T09:55:46","Actor":"h82258652","Number":"308","RawContent":null,"Title":"Add CornerRadius property for all controls","State":"open","Body":"<!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\nIt is too complex to create a circle button now (need to rewrite the template), add ```CornerRadius``` property for all controls will easier to style.","Url":"https://github.com/dotnet/wpf/issues/308","RelatedDescription":"Open issue \"Add CornerRadius property for all controls\" (#308)"},{"Id":"405158440","IsPullRequest":false,"CreatedAt":"2019-01-31T09:41:38","Actor":"h82258652","Number":"307","RawContent":null,"Title":"Text selection for TextBlock","State":"open","Body":"<!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\nThis feature is already exist in UWP, can it port to WPF?","Url":"https://github.com/dotnet/wpf/issues/307","RelatedDescription":"Open issue \"Text selection for TextBlock\" (#307)"},{"Id":"405094430","IsPullRequest":true,"CreatedAt":"2019-01-31T06:02:22","Actor":"h82258652","Number":"306","RawContent":null,"Title":"MarkupExtension use interface instead of abstract class","State":"open","Body":"[issue](https://github.com/dotnet/wpf/issues/170)","Url":"https://github.com/dotnet/wpf/pull/306","RelatedDescription":"Open PR \"MarkupExtension use interface instead of abstract class\" (#306)"},{"Id":"405054074","IsPullRequest":true,"CreatedAt":"2019-01-31T02:35:55","Actor":"rladuca","Number":"305","RawContent":null,"Title":"Adding TestHost, test projects, and test documentation","State":"open","Body":"Adding System.Xaml unit test project for contributions\r\nAdding some test documentation\r\n\r\nFixes #304 ","Url":"https://github.com/dotnet/wpf/pull/305","RelatedDescription":"Open PR \"Adding TestHost, test projects, and test documentation\" (#305)"},{"Id":"405052154","IsPullRequest":false,"CreatedAt":"2019-01-31T02:26:37","Actor":"rladuca","Number":"304","RawContent":null,"Title":"Add TestHost, test documentation, and a project to contribute unit tests to","State":"open","Body":"In order to facilitate testing we need the following:\r\n\r\n- A TestHost to run tests against\r\n- A test project shell for tests to be added to\r\n- Documentation on all of the above (ongoing)\r\n\r\nThis is related to #180 and is part of that work (though more needs doing there)","Url":"https://github.com/dotnet/wpf/issues/304","RelatedDescription":"Open issue \"Add TestHost, test documentation, and a project to contribute unit tests to\" (#304)"},{"Id":"404904950","IsPullRequest":true,"CreatedAt":"2019-01-30T22:25:44","Actor":"qwell","Number":"303","RawContent":null,"Title":"Update version recommendations for Visual Studio and .NET Core SDK","State":"closed","Body":"Preview 2 of both has been made available.","Url":"https://github.com/dotnet/wpf/pull/303","RelatedDescription":"Closed or merged PR \"Update version recommendations for Visual Studio and .NET Core SDK\" (#303)"},{"Id":"404858709","IsPullRequest":false,"CreatedAt":"2019-01-30T16:38:39","Actor":"Markz878","Number":"302","RawContent":null,"Title":"Make it possible for WPF datagrid to bind to a 2D array","State":"open","Body":"Please make it possible for WPF datagrid to bind directly to a multidimensional 2D array of primitives. There are already some packages for this, but would be nice to get this obvious feature automatically.\r\n","Url":"https://github.com/dotnet/wpf/issues/302","RelatedDescription":"Open issue \"Make it possible for WPF datagrid to bind to a 2D array\" (#302)"},{"Id":"404761365","IsPullRequest":true,"CreatedAt":"2019-01-30T13:10:18","Actor":"dotnet-maestro[bot]","Number":"301","RawContent":null,"Title":"Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- System.CodeDom - 4.6.0-preview.19079.11\r\n- Microsoft.Win32.Registry - 4.6.0-preview.19079.11\r\n- System.Windows.Extensions - 4.6.0-preview.19079.11\r\n- System.Configuration.ConfigurationManager - 4.6.0-preview.19079.11\r\n- System.Reflection.TypeExtensions - 4.6.0-preview.19079.11\r\n- System.Security.AccessControl - 4.6.0-preview.19079.11\r\n- System.Security.Cryptography.Xml - 4.6.0-preview.19079.11\r\n- System.Security.Permissions - 4.6.0-preview.19079.11\r\n- System.Security.Principal.Windows - 4.6.0-preview.19079.11\r\n- System.Reflection.Emit - 4.6.0-preview.19079.11\r\n- System.Diagnostics.EventLog - 4.6.0-preview.19079.11\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/301","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/corefx\" (#301)"},{"Id":"404732355","IsPullRequest":false,"CreatedAt":"2019-01-30T11:44:50","Actor":"pcfulife","Number":"300","RawContent":null,"Title":"Could not edit settings file","State":"open","Body":"* .NET Core Version: 3.0.100-preview-010184\r\n* Windows version: 1809\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\nCannot edit WPF settings file. \r\n\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nWhen I create WPF project (.NET Core 3.0) and create WPF setting file (Settings1.settings), an error message shows. (The reference \"System\" could not be added to the project. This wizard will continue to run, but the resulting project may not build properly.)\r\nThen, I cannot edit Settings1.settings by default editor. (Visual Studio hangs and shows \"Exception from HRESULT: 0x80004005 (E_FAIL), Failed to generate file: Unable to find a type of reference that is appropriate for this file: \"System\".) But, it can be edited by XML editor.\r\nBut, after I save Settings1.settings file with XML editor, I cannot access to namespace (WpfApp1.Properties.Settings). Because it doesn't generate Settings1.Designer.cs\r\nI confused that it is a bug of Visual Studio or .NET Core. But, when I create a project with same VS version and .NET Framework, it doesn't occur.\r\n\r\n **Expected behavior:**\r\n \r\n\r\n **Minimal repro:**\r\n Just create WPF project and in project configuration, make a default resource, right click on Properties in solution explorer, add new settings file.\r\n","Url":"https://github.com/dotnet/wpf/issues/300","RelatedDescription":"Open issue \"Could not edit settings file\" (#300)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-02-07T05:31:10.9456622Z","RunDurationInMilliseconds":762}