{"Data":{"GitHub":{"Issues":[{"Id":"534340364","IsPullRequest":true,"CreatedAt":"2019-12-07T02:20:08","Actor":"sharwell","Number":"4540","RawContent":null,"Title":"Increase the code coverage run timeout","State":"open","Body":"Most of the code coverage runs are timing out. Increase the timeout to match the value used for non-code-coverage builds.","Url":"https://github.com/dotnet/machinelearning/pull/4540","RelatedDescription":"Open PR \"Increase the code coverage run timeout\" (#4540)"},{"Id":"534332024","IsPullRequest":true,"CreatedAt":"2019-12-07T01:14:11","Actor":"sharwell","Number":"4539","RawContent":null,"Title":"Create SafeBoosterHandle and SafeDataSetHandle","State":"open","Body":"These safe handles were created based on the crash data in https://dev.azure.com/dnceng/public/_build/results?buildId=449745&view=logs.","Url":"https://github.com/dotnet/machinelearning/pull/4539","RelatedDescription":"Open PR \"Create SafeBoosterHandle and SafeDataSetHandle\" (#4539)"},{"Id":"534314921","IsPullRequest":true,"CreatedAt":"2019-12-07T00:02:01","Actor":"sharwell","Number":"4538","RawContent":null,"Title":"Convert LdaEngine to a SafeHandle","State":"open","Body":"This pull request follows the test failure observed in https://dev.azure.com/dnceng/public/_build/results?buildId=449759&view=ms.vss-test-web.build-test-results-tab&runId=14347330&resultId=100770&paneView=debug. Converting this object to a SafeHandle has two primary advantages:\r\n\r\n1. The object will not be disposed while there is an ongoing native call\r\n2. Misuse of the object by trying to pass an invalid instance to a native call will throw an exception at the point of the call","Url":"https://github.com/dotnet/machinelearning/pull/4538","RelatedDescription":"Open PR \"Convert LdaEngine to a SafeHandle\" (#4538)"},{"Id":"534302884","IsPullRequest":true,"CreatedAt":"2019-12-06T23:16:25","Actor":"sharwell","Number":"4537","RawContent":null,"Title":"Enable VSTestBlame to show details for crashes","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4537","RelatedDescription":"Open PR \"Enable VSTestBlame to show details for crashes\" (#4537)"},{"Id":"534297498","IsPullRequest":true,"CreatedAt":"2019-12-06T22:59:12","Actor":"sharwell","Number":"4536","RawContent":null,"Title":"Update Microsoft.Extensions.* to 3.0.1","State":"open","Body":"The 3.0 release includes a fix to cases where `ChangeToken.OnChange` would not unregister callbacks even when disposed.\r\n\r\nSee aspnet/Extensions#558, aspnet/Extensions#869","Url":"https://github.com/dotnet/machinelearning/pull/4536","RelatedDescription":"Open PR \"Update Microsoft.Extensions.* to 3.0.1\" (#4536)"},{"Id":"534294197","IsPullRequest":true,"CreatedAt":"2019-12-06T22:49:06","Actor":"sharwell","Number":"4535","RawContent":null,"Title":"Prevent exceptions from escaping FileSystemWatcher events","State":"open","Body":"Exceptions in the handler of FileSystemWatcher events will terminate the process. This pull request updates the event handler to use a try/catch block that logs the error instead of crashing the process.\r\n\r\nThis fixes one known cause of test process failures.","Url":"https://github.com/dotnet/machinelearning/pull/4535","RelatedDescription":"Open PR \"Prevent exceptions from escaping FileSystemWatcher events\" (#4535)"},{"Id":"534292296","IsPullRequest":true,"CreatedAt":"2019-12-06T22:43:11","Actor":"sharwell","Number":"4534","RawContent":null,"Title":"Conditionally compile helper code","State":"open","Body":"Fixes IDE0051 (Private member is unused) in tests.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4534","RelatedDescription":"Open PR \"Conditionally compile helper code\" (#4534)"},{"Id":"534291967","IsPullRequest":true,"CreatedAt":"2019-12-06T22:42:11","Actor":"sharwell","Number":"4533","RawContent":null,"Title":"Onnx conversion theory","State":"open","Body":"Use `[Theory]` to break up tests in OnnxConversionTest.\r\n\r\nüìù Builds on #4532 \r\n\r\nüí° Recommended review strategy is commit-by-commit. The final commit is easier to review with whitespace-only changes hidden.","Url":"https://github.com/dotnet/machinelearning/pull/4533","RelatedDescription":"Open PR \"Onnx conversion theory\" (#4533)"},{"Id":"534291627","IsPullRequest":true,"CreatedAt":"2019-12-06T22:41:03","Actor":"sharwell","Number":"4532","RawContent":null,"Title":"Make test methods public","State":"open","Body":"Fixes IDE0051 (Private member is unused)\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4532","RelatedDescription":"Open PR \"Make test methods public\" (#4532)"},{"Id":"534291193","IsPullRequest":true,"CreatedAt":"2019-12-06T22:39:43","Actor":"sharwell","Number":"4531","RawContent":null,"Title":"Disable CS0649 in OnnxConversionTest","State":"open","Body":"Fixes an IDE0051 warning (Private member is unused).","Url":"https://github.com/dotnet/machinelearning/pull/4531","RelatedDescription":"Open PR \"Disable CS0649 in OnnxConversionTest\" (#4531)"},{"Id":"534290511","IsPullRequest":true,"CreatedAt":"2019-12-06T22:37:36","Actor":"sharwell","Number":"4530","RawContent":null,"Title":"Make local functions static where applicable","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/4530","RelatedDescription":"Open PR \"Make local functions static where applicable\" (#4530)"},{"Id":"534290426","IsPullRequest":true,"CreatedAt":"2019-12-06T22:37:20","Actor":"sharwell","Number":"4529","RawContent":null,"Title":"Avoid running API Compat for design time builds","State":"open","Body":"This change prevents the API compat tool from failing design time builds and leaving the IDE project model in a bad state for development.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4529","RelatedDescription":"Open PR \"Avoid running API Compat for design time builds\" (#4529)"},{"Id":"533958371","IsPullRequest":false,"CreatedAt":"2019-12-06T12:57:03","Actor":"thomasrosdahl","Number":"4528","RawContent":null,"Title":"PredictionEnginePool.GetPredictionEngine is not thread safe","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: Azure Functions Runtime 2.7.1948\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nInvoked `PredictionEnginePool.Predict(\"MyModelName\", example)` from multiple threads.\r\n\r\n- **What happened?**\r\n`System.ArgumentException: 'An item with the same key has already been added. Key: MyModelName'`\r\n\r\n- **What did you expect?**\r\nMethod is thread safe so that multiple named pools cannot be created simultaneously.\r\n\r\n### Source code / logs\r\n\r\n   at System.ThrowHelper.ThrowAddingDuplicateWithKeyArgumentException[T](T key)\r\n   at System.Collections.Generic.Dictionary`2.TryInsert(TKey key, TValue value, InsertionBehavior behavior)\r\n   at Microsoft.Extensions.ML.PredictionEnginePool`2.GetPredictionEngine(String modelName)\r\n   at Microsoft.Extensions.ML.PredictionEnginePoolExtensions.Predict[TData,TPrediction](PredictionEnginePool`2 predictionEnginePool, String modelName, TData example)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4528","RelatedDescription":"Open issue \"PredictionEnginePool.GetPredictionEngine is not thread safe\" (#4528)"},{"Id":"533787183","IsPullRequest":false,"CreatedAt":"2019-12-06T07:06:22","Actor":"rauhs","Number":"4527","RawContent":null,"Title":"Missing C# doc string for ChnageModelThreshold","State":"open","Body":"Linky:\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/3f98485e887177f2082f027c22f46fd64ebbe246/src/Microsoft.ML.Data/TrainCatalog.cs#L261-L267","Url":"https://github.com/dotnet/machinelearning/issues/4527","RelatedDescription":"Open issue \"Missing C# doc string for ChnageModelThreshold\" (#4527)"},{"Id":"533750579","IsPullRequest":true,"CreatedAt":"2019-12-06T05:13:16","Actor":"frank-dong-ms","Number":"4526","RawContent":null,"Title":"add more log for SsaForecast test","State":"open","Body":"1. add more log for SsaForecast test \r\n2. make TimeSeries test class inherent from BaseTestBaseline for logging\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4526","RelatedDescription":"Open PR \"add more log for SsaForecast test\" (#4526)"},{"Id":"533616068","IsPullRequest":false,"CreatedAt":"2019-12-05T21:43:49","Actor":"natke","Number":"4525","RawContent":null,"Title":"Image links broken","State":"open","Body":"There are two broken image links on this page. One for each metric description.\n\n---\n#### Document Details\n\n‚ö† *Do not edit this section. It is required for docs.microsoft.com ‚ûü GitHub issue linking.*\n\n* ID: c1784ca5-56a4-75ea-ae35-ad29872348cf\n* Version Independent ID: 2084e039-fcb3-61b4-08ae-29f509b8cb30\n* Content: [RankingMetrics Class (Microsoft.ML.Data)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.data.rankingmetrics?view=ml-dotnet)\n* Content Source: [dotnet/xml/Microsoft.ML.Data/RankingMetrics.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Data/RankingMetrics.xml)\n* Product: **dotnet-ml-api**\n* GitHub Login: @natke\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/4525","RelatedDescription":"Open issue \"Image links broken\" (#4525)"},{"Id":"533513959","IsPullRequest":false,"CreatedAt":"2019-12-05T18:15:31","Actor":"huy302","Number":"4524","RawContent":null,"Title":"Model fit in Parallel.For is slower than For","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Win10 64\r\n- **.NET Version (eg., dotnet --info)**: 4.6.1\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI'm trying to tune hyperparamater and see if I can implement grid search myself. In order to do that, I would like to fit the model in multiple threads by using Parallel.For\r\n\r\n- **What happened?**\r\nHowever, I realized that fitting the model multiple times using Parallel.For takes much longer than a single threaded for loop. In a for loop. my CPU utilization is at around 30% all the time, while using Parallel.For, it spikes to 100% at first, then drops down to 6% for quite some time, then jumps back to 30% and finishes. Am I not supposed to fit in parallel? If that is the case then what is the best way to do grid search?\r\n\r\n### Source code / logs\r\n\r\nSingle threaded for - takes 20 seconds\r\n\r\n```\r\nfor (var i = 0; i < 100; i++) {\r\n    var pipeline = CreatePipeline();\r\n    pipeline.Fit(dataView);\r\n}\r\n```\r\n\r\nParallel.For - takes 56 seconds\r\n\r\n```\r\nParallel.For(0, 100, i => {\r\n    var pipeline = CreatePipeline();\r\n    pipeline.Fit(dataView);\r\n});\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/4524","RelatedDescription":"Open issue \"Model fit in Parallel.For is slower than For\" (#4524)"},{"Id":"533292844","IsPullRequest":true,"CreatedAt":"2019-12-05T11:28:53","Actor":"yaeldekel","Number":"4523","RawContent":null,"Title":"Add aka.ms aliases for files downloaded from Azure blobs","State":"open","Body":"Fixes #4445 .","Url":"https://github.com/dotnet/machinelearning/pull/4523","RelatedDescription":"Open PR \"Add aka.ms aliases for files downloaded from Azure blobs\" (#4523)"},{"Id":"533098218","IsPullRequest":true,"CreatedAt":"2019-12-05T03:19:59","Actor":"codemzs","Number":"4522","RawContent":null,"Title":"Image classification performance improvements and option to create validation set from train set.","State":"open","Body":"This change improves the overall performance of image classification API and tensorflow transform by making the graph runner memory efficient and saving the bottleneck cached values in image classification API in binary format instead of text format.\r\n\r\nThis change also adds the option in Image Classification API to create validation set from train set in the event validation set is not provided by the user. Validation set is used for early stopping.","Url":"https://github.com/dotnet/machinelearning/pull/4522","RelatedDescription":"Open PR \"Image classification performance improvements and option to create validation set from train set.\" (#4522)"},{"Id":"532850454","IsPullRequest":true,"CreatedAt":"2019-12-04T18:11:31","Actor":"michaelgsharp","Number":"4521","RawContent":null,"Title":"DateTimeTransformer featurizer","State":"open","Body":"This change adds in the DateTimeTransformer into the new Featurizers project. It is the first of a series of PR's that will go in. The DateTimeTransformer is implemented in native code, so this is mostly just a wrapper around that with the appropriate entrypoints for NimbusML as well. Since all the new estimator/transformers follow the same patterns, once this one is reviewed and checked in I will create the other PR's.","Url":"https://github.com/dotnet/machinelearning/pull/4521","RelatedDescription":"Open PR \"DateTimeTransformer featurizer\" (#4521)"},{"Id":"532659728","IsPullRequest":false,"CreatedAt":"2019-12-04T12:42:09","Actor":"yamachu","Number":"4520","RawContent":null,"Title":"[DNN Training] Cannot execute retrain DNN model(Tensorflow model) manually since ML.NET 1.4.0-stable","State":"open","Body":"ref: https://github.com/dotnet/machinelearning/issues/4307\r\n\r\nWe cannot call `RetrainDnnModel` method publicly and manually because  of this commit ( https://github.com/dotnet/machinelearning/pull/4362 ).\r\n\r\nI think that regression tasks by TensorflowRetrain (RetrainDnnModel ) only can predict multiple-values.\r\nSo I think that Access-Modifiers of `RetrainDnnModel` should be public if no way for predicting multiple-values.","Url":"https://github.com/dotnet/machinelearning/issues/4520","RelatedDescription":"Open issue \"[DNN Training] Cannot execute retrain DNN model(Tensorflow model) manually since ML.NET 1.4.0-stable\" (#4520)"},{"Id":"532419251","IsPullRequest":false,"CreatedAt":"2019-12-04T03:08:51","Actor":"thezaza101","Number":"4519","RawContent":null,"Title":"OneHotHashEncoding / OneHotEncoding transformer output","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Win 10 \r\n- **.NET Version (eg., dotnet --info)**:  .NET Core 3.0.100, ML.NET 1.4.0\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nInspected output of OneHotHashEncoding / OneHotEncoding\r\n\r\n- **What happened?**\r\nExpected vector different representations for different categories, however they were the same.\r\n\r\nIf the first category is `[1, 0, 0, 0]` then the second category should be different (i.e. `[0, 1, 0, 0]`). however it appears to be the same when inspecting it.\r\n\r\nInspected `IDataView` using `data.Preview(numRows)`.\r\n\r\n### Source code / logs\r\n\r\nCode:\r\n```csharp\r\nusing System;\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nnamespace cat\r\n{\r\n    class CatInput\r\n    {\r\n        [LoadColumn(0),ColumnName(\"input\")]\r\n        public string cat;\r\n    }\r\n    class Program\r\n    {\r\n        static MLContext _mlContext = new MLContext();\r\n        static IDataView _data;\r\n        static void Main(string[] args)\r\n        {\r\n            _data = _mlContext.Data.LoadFromTextFile<CatInput>(path: \"cat\", hasHeader: false, separatorChar: ',');\r\n            IEstimator<ITransformer> _pipeline = _mlContext.Transforms.Categorical.OneHotHashEncoding(\r\n                inputColumnName: \"input\",\r\n                outputColumnName: \"output\");\r\n            \r\n            var model = _pipeline.Fit(_data);\r\n            IDataView tData = model.Transform(_data);\r\n            var previewObject = tData.Preview(10);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\ninput data:\r\n```\r\n                input                 |\r\n---------------------------------------\r\n                 red                  |\r\n                 red                  |\r\n                 red                  |\r\n                 blue                 |\r\n                purple                |\r\n                yellow                |\r\n                 red                  |\r\n                 blue                 |\r\n                 blue                 |\r\n                purple                |\r\n```\r\nScreenshots of inspection and where the values should be different.\r\nRow 0 (\"red\"):\r\n![PreviewRow0](https://user-images.githubusercontent.com/27200279/70109206-45824d80-169f-11ea-9bb2-af28522283fd.png)\r\nRow 3 (\"blue\"):\r\n![PreviewRow1](https://user-images.githubusercontent.com/27200279/70109207-45824d80-169f-11ea-911d-535808367adc.png)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4519","RelatedDescription":"Open issue \"OneHotHashEncoding / OneHotEncoding transformer output\" (#4519)"},{"Id":"532336889","IsPullRequest":false,"CreatedAt":"2019-12-03T23:28:19","Actor":"mstfbl","Number":"4518","RawContent":null,"Title":"System.ArgumentOutOfRangeException in NimbusML's NGramFeaturizer2.py caused by CustomStopWordsRemover/Feature_extraction.text.stopwords in ML.NET","State":"open","Body":"As addressed in this [issue ](https://github.com/microsoft/NimbusML/issues/365) in the NimbusML repo, there is a bug with the ML.NET bindings of CustomStopWordsRemover, which is StopWordsRemovingTransformer.cs. \r\n\r\nThe specific error message is: \r\nRuntimeError: Error: *** System.ArgumentOutOfRangeException: 'dataFile is empty\r\nThe full error log can be found [here](https://dev.azure.com/aifx/public/_build/results?buildId=2089&view=logs&j=d0e8f4b8-2f67-5548-290c-4d6f15a1cbca&t=e5950cbb-cc45-5e54-16a6-7bfce2ad073d&l=8236).","Url":"https://github.com/dotnet/machinelearning/issues/4518","RelatedDescription":"Open issue \"System.ArgumentOutOfRangeException in NimbusML's NGramFeaturizer2.py caused by CustomStopWordsRemover/Feature_extraction.text.stopwords in ML.NET\" (#4518)"},{"Id":"531914671","IsPullRequest":false,"CreatedAt":"2019-12-03T11:22:39","Actor":"yaeldekel","Number":"4517","RawContent":null,"Title":"PFI doesn't work with uncalibrated binary classifiers","State":"open","Body":"Some binary classification estimators automatically return a calibrated model (for example, FastTree and LogisticRegression), but some don't - for example, FastForest. When trying to pass such a model to PFI, there is an exception thrown saying that the probability column was not found.\r\n```\r\nvar ml = new MLContext();\r\nvar ff = ml.BinaryClassification.Trainers.FastForest();\r\nvar data = ml.Data.LoadFromTextFile(@\"breast-cancer.txt\",\r\n                new[] { new TextLoader.Column(\"Label\", DataKind.Boolean, 0),\r\n                            new TextLoader.Column(\"Features\", DataKind.Single, 1, 9) });\r\nvar model = ff.Fit(data);\r\nvar pfi = ml.BinaryClassification.PermutationFeatureImportance(model, data);\r\n```\r\n\r\nThere are actually two issues here: The first is what I described above, and the second is that there is no workaround for this problem. I tried adding a calibrator manually:\r\n\r\n```\r\nvar ff = ml.BinaryClassification.Trainers.FastForest();\r\nvar ffmodel = ff.Fit(data);\r\nvar calibrator = ml.BinaryClassification.Calibrators.Platt();\r\nvar calibratormodel = calibrator.Fit(ffmodel.Transform(data));\r\nvar pfi = ml.BinaryClassification.PermutationFeatureImportance(calibratormodel, ffmodel.Transform(data));\r\n```\r\nThe reason I could not train these two models as a pipeline is because the resulting model is of type `TransformerChain` so I cannot pass it to PFI. However, this code doesn't work either, because even though `calibratormodel` is indeed an `ISingleFeaturePredictionTransformer`, the features column of `calibratormodel`, is the score column of the output of `ffmodel`, so PFI doesn't do the right thing. As far as I can tell, there is no way to pass a model where the calibrator was trained separately to PFI. It might be worth opening a separate issue for this, not sure.","Url":"https://github.com/dotnet/machinelearning/issues/4517","RelatedDescription":"Open issue \"PFI doesn't work with uncalibrated binary classifiers\" (#4517)"},{"Id":"531693256","IsPullRequest":false,"CreatedAt":"2019-12-03T03:36:49","Actor":"JakeRadMSFT","Number":"4516","RawContent":null,"Title":"GPU Training doesn't work with AutoML on Surface Book 2","State":"open","Body":"- **What did you do?**\r\nTried to train with GPU on a Surface Book 2\r\n- **What happened?**\r\nStalls after 3rd cross val ... I think\r\n- **What did you expect?**\r\n10 Cross Vals and best model.\r\n\r\n### Source code / logs\r\n\r\n[weather-small-train-logs-cpu.txt](https://github.com/dotnet/machinelearning/files/3914431/weather-small-train-logs-cpu.txt)\r\n[weather-small-train-logs-gpu.txt](https://github.com/dotnet/machinelearning/files/3914432/weather-small-train-logs-gpu.txt)\r\n[weather-small.zip](https://github.com/dotnet/machinelearning/files/3914434/weather-small.zip)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4516","RelatedDescription":"Open issue \"GPU Training doesn't work with AutoML on Surface Book 2\" (#4516)"},{"Id":"531641247","IsPullRequest":true,"CreatedAt":"2019-12-03T01:07:13","Actor":"Lynx1820","Number":"4515","RawContent":null,"Title":"Adds PriorTrainer Onnx conversion","State":"open","Body":"\r\n1. Adding Onnx support for PriorTrainer \r\n       To follow the onnx construction pattern of other binary classifiers, this trainer uses the probability to predict labels, instead of score\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/4515","RelatedDescription":"Open PR \"Adds PriorTrainer Onnx conversion\" (#4515)"},{"Id":"530706490","IsPullRequest":false,"CreatedAt":"2019-12-02T17:55:11","Actor":"hahsm","Number":"4513","RawContent":null,"Title":"Multiclass classification - Prediction Output ","State":"closed","Body":"Hi,\r\n\r\nThe following code helps to get the predicted label with score. Is there any way that I can get additional details (columns) of each prediction based on score. What are the columns that I could include as output in a multiclass prediction (other than Label and Score). Can I include additional columns from DataSet in my output?\r\n\r\n`\r\nprivate static Dictionary<string, float> GetScoresWithLabelsSorted(DataViewSchema schema, string name, float[] scores)\r\n        {\r\n            Dictionary<string, float> result = new Dictionary<string, float>();\r\n\r\n            var column = schema.GetColumnOrNull(name);\r\n\r\n            var slotNames = new VBuffer<ReadOnlyMemory<char>>();\r\n            column.Value.GetSlotNames(ref slotNames);\r\n            var x = slotNames.GetIndices();\r\n\r\n            var num = 0;\r\n            foreach (var denseValue in slotNames.DenseValues())\r\n            {\r\n                result.Add(denseValue.ToString(), scores[num++]);\r\n            }\r\n\r\n            return result.OrderByDescending(c => c.Value).ToDictionary(i => i.Key, i => i.Value);\r\n        }`","Url":"https://github.com/dotnet/machinelearning/issues/4513","RelatedDescription":"Closed issue \"Multiclass classification - Prediction Output \" (#4513)"},{"Id":"531013626","IsPullRequest":true,"CreatedAt":"2019-12-02T09:53:51","Actor":"yaeldekel","Number":"4514","RawContent":null,"Title":"Learning with counts (Dracula) transformer","State":"open","Body":"Fixes #4016.","Url":"https://github.com/dotnet/machinelearning/pull/4514","RelatedDescription":"Open PR \"Learning with counts (Dracula) transformer\" (#4514)"},{"Id":"530439237","IsPullRequest":false,"CreatedAt":"2019-11-30T20:03:46","Actor":"CBrauer","Number":"4511","RawContent":null,"Title":"Build problem","State":"closed","Body":"HI,\r\nPlease help me with an install problem.  Here is my install script output:\r\n\r\n```\r\nPS H:\\ML.NET\\machinelearning-master> ./build.cmd\r\nTools are already initialized.\r\nRunning: H:\\ML.NET\\machinelearning-master\\Tools\\dotnetcli\\dotnet msbuild /nologo /verbosity:minimal /clp:Summary /maxcpucount /l:BinClashLogger,Tools\\Microsoft.DotNet.Build.Tasks.dll;LogFile=binclash.log /p:Configuration=Debug  /flp:v=normal  /flp2:warningsonly;logfile=msbuild.wrn  /flp3:errorsonly;logfile=msbuild.err  build.proj\r\n  fatal: Not a git repository (or any of the parent directories): .git\r\n  Restoring all projects...\r\n  Restore completed in 90.2 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Core\\Microsoft.ML.Core.csproj.\r\n  Restore completed in 6.32 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.CpuMath\\Microsoft.ML.CpuMath.csproj.\r\n  Restore completed in 5.13 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.DataView\\Microsoft.ML.DataView.csproj.\r\n  Restore completed in 127.06 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.Extensions.ML\\Microsoft.Extensions.ML.csproj.\r\n  Restore completed in 127.57 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.AutoML\\Microsoft.ML.AutoML.csproj.\r\n  Restore completed in 127.65 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Console\\Microsoft.ML.Console.csproj.\r\n  Restore completed in 127.75 ms for H:\\ML.NET\\machinelearning-master\\docs\\samples\\Microsoft.ML.Samples\\Microsoft.ML.Samples.csproj.\r\n  Restore completed in 127.59 ms for H:\\ML.NET\\machinelearning-master\\docs\\samples\\Microsoft.ML.AutoML.Samples\\Microsoft.ML.AutoML.Samples.csproj.\r\n  Restore completed in 127.87 ms for H:\\ML.NET\\machinelearning-master\\docs\\samples\\Microsoft.ML.Samples.GPU\\Microsoft.ML.Samples.GPU.csproj.\r\n  Restore completed in 135.73 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.CodeGenerator\\Microsoft.ML.CodeGenerator.csproj.\r\n  Restore completed in 16.42 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Ensemble\\Microsoft.ML.Ensemble.csproj.\r\n  Restore completed in 20.53 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.DnnImageFeaturizer.ResNet18\\Microsoft.ML.DnnImageFeaturizer.ResNet18.csproj.\r\n  Restore completed in 20.46 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Data\\Microsoft.ML.Data.csproj.\r\n  Restore completed in 24.78 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.DnnImageFeaturizer.ResNet50\\Microsoft.ML.DnnImageFeaturizer.ResNet50.csproj.\r\n  Restore completed in 25.59 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.DnnImageFeaturizer.AlexNet\\Microsoft.ML.DnnImageFeaturizer.AlexNet.csproj.\r\n  Restore completed in 34.91 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.DnnImageFeaturizer.ResNet101\\Microsoft.ML.DnnImageFeaturizer.ResNet101.csproj.\r\n  Restore completed in 40.05 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.EntryPoints\\Microsoft.ML.EntryPoints.csproj.\r\n  Restore completed in 40.93 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Maml\\Microsoft.ML.Maml.csproj.\r\n  Restore completed in 42.72 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.DnnAnalyzer\\Microsoft.ML.DnnAnalyzer\\Microsoft.ML.DnnAnalyzer.csproj.\r\n  Restore completed in 12.1 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.KMeansClustering\\Microsoft.ML.KMeansClustering.csproj.\r\n  Restore completed in 9.56 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.ImageAnalytics\\Microsoft.ML.ImageAnalytics.csproj.\r\n  Restore completed in 26.51 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Experimental\\Microsoft.ML.Experimental.csproj.\r\n  Restore completed in 21.27 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.FastTree\\Microsoft.ML.FastTree.csproj.\r\n  Restore completed in 16.34 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Mkl.Components\\Microsoft.ML.Mkl.Components.csproj.\r\n  Restore completed in 16.61 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.LightGbm\\Microsoft.ML.LightGbm.csproj.\r\n  Restore completed in 11.04 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.OnnxConverter\\Microsoft.ML.OnnxConverter.csproj.\r\n  Restore completed in 21.94 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.OnnxTransformer\\Microsoft.ML.OnnxTransformer.csproj.\r\n  Restore completed in 16.24 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Parquet\\Microsoft.ML.Parquet.csproj.\r\n  Restore completed in 12.7 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Recommender\\Microsoft.ML.Recommender.csproj.\r\n  Restore completed in 20.06 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.SamplesUtils\\Microsoft.ML.SamplesUtils.csproj.\r\n  Restore completed in 15.85 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.ResultProcessor\\Microsoft.ML.ResultProcessor.csproj.\r\n  Restore completed in 23.91 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.PCA\\Microsoft.ML.PCA.csproj.\r\n  Restore completed in 18.12 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.StandardTrainers\\Microsoft.ML.StandardTrainers.csproj.\r\n  Restore completed in 30.13 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Sweeper\\Microsoft.ML.Sweeper.csproj.\r\n  Restore completed in 23.27 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.TensorFlow\\Microsoft.ML.TensorFlow.csproj.\r\n  Restore completed in 17.56 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Transforms\\Microsoft.ML.Transforms.csproj.\r\n  Restore completed in 36.79 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.Vision\\Microsoft.ML.Vision.csproj.\r\n  Restore completed in 86.71 ms for H:\\ML.NET\\machinelearning-master\\src\\Microsoft.ML.TimeSeries\\Microsoft.ML.TimeSeries.csproj.\r\n  Restore completed in 77.17 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.Extensions.ML.Tests\\Microsoft.Extensions.ML.Tests.csproj.\r\n  Restore completed in 58.66 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.AutoML.Tests\\Microsoft.ML.AutoML.Tests.csproj.\r\n  Restore completed in 35.71 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.Benchmarks\\Microsoft.ML.Benchmarks.csproj.\r\n  Restore completed in 46.71 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.Benchmarks.Tests\\Microsoft.ML.Benchmarks.Tests.csproj.\r\n  Restore completed in 29.64 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.CodeAnalyzer.Tests\\Microsoft.ML.CodeAnalyzer.Tests.csproj.\r\n  Restore completed in 14.44 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.FSharp.Tests\\Microsoft.ML.FSharp.Tests.fsproj.\r\n  Restore completed in 62.28 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.Core.Tests\\Microsoft.ML.Core.Tests.csproj.\r\n  Restore completed in 81.34 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.CpuMath.PerformanceTests\\Microsoft.ML.CpuMath.PerformanceTests.csproj.\r\n  Restore completed in 22.24 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.CodeGenerator.Tests\\Microsoft.ML.CodeGenerator.Tests.csproj.\r\n  Restore completed in 14.73 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.OnnxTransformerTest\\Microsoft.ML.OnnxTransformerTest.csproj.\r\n  Restore completed in 21.84 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.CpuMath.UnitTests\\Microsoft.ML.CpuMath.UnitTests.csproj.\r\n  Restore completed in 21.58 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.Functional.Tests\\Microsoft.ML.Functional.Tests.csproj.\r\n  Restore completed in 36.2 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.NugetPackageVersionUpdater\\Microsoft.ML.NugetPackageVersionUpdater.csproj.\r\n  Restore completed in 16.37 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.TestFramework\\Microsoft.ML.TestFramework.csproj.\r\n  Restore completed in 22.45 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.Predictor.Tests\\Microsoft.ML.Predictor.Tests.csproj.\r\n  Restore completed in 23.95 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.Sweeper.Tests\\Microsoft.ML.Sweeper.Tests.csproj.\r\n  Restore completed in 35.88 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.TimeSeries.Tests\\Microsoft.ML.TimeSeries.Tests.csproj.\r\n  Restore completed in 14.08 ms for H:\\ML.NET\\machinelearning-master\\tools-local\\Microsoft.ML.InternalCodeAnalyzer\\Microsoft.ML.InternalCodeAnalyzer.csproj.\r\n  Restore completed in 10.07 ms for H:\\ML.NET\\machinelearning-master\\test\\RemoteExecutorConsoleApp\\RemoteExecutorConsoleApp.csproj.\r\n  Restore completed in 29.37 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.TestFrameworkCommon\\Microsoft.ML.TestFrameworkCommon.csproj.\r\n  Restore completed in 83.45 ms for H:\\ML.NET\\machinelearning-master\\test\\Microsoft.ML.Tests\\Microsoft.ML.Tests.csproj.\r\n  Restore completed in 20.63 ms for H:\\ML.NET\\machinelearning-master\\tools-local\\Microsoft.ML.StableApi\\Microsoft.ML.StableApi.csproj.\r\n  Building redist components...\r\n  Building native components...\r\n  H:\\ML.NET\\machinelearning-master\\src\\Native\\build.cmd Debug x64 --mkllibpath H:\\ML.NET\\machinelearning-master\\packages/mlnetmkldeps\\0.0.0.9\\runtimes\\win-x64\\native\r\n  **********************************************************************\r\n  ** Visual Studio 2019 Developer Command Prompt v16.4.0-pre.6.0\r\n  ** Copyright (c) 2019 Microsoft Corporation\r\n  **********************************************************************\r\n  **********************************************************************\r\n  ** Visual Studio 2019 Developer Command Prompt v16.4.0-pre.6.0\r\n  ** Copyright (c) 2019 Microsoft Corporation\r\n  **********************************************************************\r\n  [vcvarsall.bat] Environment initialized for: 'x86_x64'\r\n  Commencing native build of dotnet/machinelearning\r\n\r\n  Calling \"H:\\ML.NET\\machinelearning-master\\src\\Native\\\\gen-buildsys-win.bat\" \"H:\\ML.NET\\machinelearning-master\\src\\Native\\\" \"16 2019\" x64\r\n  CMake Warning (dev) in CMakeLists.txt:\r\n    No project() command is present.  The top-level CMakeLists.txt file must\r\n    contain a literal, direct call to the project() command.  Add a line of\r\n    code such as\r\n\r\n      project(ProjectName)\r\n\r\n    near the top of the file, but after cmake_minimum_required().\r\n\r\n    CMake is pretending there is a \"project(Project)\" command on the first\r\n    line.\r\n  This warning is for project developers.  Use -Wno-dev to suppress it.\r\n\r\n  -- The C compiler identification is MSVC 19.24.28314.0\r\n  -- The CXX compiler identification is MSVC 19.24.28314.0\r\n  -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/VC/Tools/MSVC/14.24.28314/bin/Hostx64/x64/cl.exe\r\n  -- Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/VC/Tools/MSVC/14.24.28314/bin/Hostx64/x64/cl.exe -- works\r\n  -- Detecting C compiler ABI info\r\n  -- Detecting C compiler ABI info - done\r\n  -- Detecting C compile features\r\n  -- Detecting C compile features - done\r\n  -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/VC/Tools/MSVC/14.24.28314/bin/Hostx64/x64/cl.exe\r\n  -- Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/VC/Tools/MSVC/14.24.28314/bin/Hostx64/x64/cl.exe -- works\r\n  -- Detecting CXX compiler ABI info\r\n  -- Detecting CXX compiler ABI info - done\r\n  -- Detecting CXX compile features\r\n  -- Detecting CXX compile features - done\r\n  CMAKE_C_FLAGS_DEBUG is /MDd /Zi /Ob0 /Od /RTC1\r\n  In a future version, if the CMake that ships with VS2019 no longer contains the /ZI flag, delete this message block and the two lines below.\r\n  -- Found OpenMP_C: -openmp (found version \"2.0\")\r\n  -- Found OpenMP_CXX: -openmp (found version \"2.0\")\r\n  -- Found OpenMP: TRUE (found version \"2.0\")\r\n  -- Configuring done\r\n  CMake Error at MatrixFactorizationNative/CMakeLists.txt:28 (add_library):\r\n    Cannot find source file:\r\n\r\n      libmf/mf.cpp\r\n\r\n    Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm\r\n    .hpp .hxx .in .txx\r\n\r\n\r\n  CMake Error at MatrixFactorizationNative/CMakeLists.txt:28 (add_library):\r\n    No SOURCES given to target: MatrixFactorizationNative\r\n\r\n\r\n  CMake Generate step failed.  Build files cannot be regenerated correctly.\r\n  Failed to generate native component build project!\r\nH:\\ML.NET\\machinelearning-master\\src\\Native\\build.proj(67,5): error MSB3073: The command \"\"H:\\ML.NET\\machinelearning-master\\src\\Native\\build.cmd\" Debug x64 --mkllibpath H:\\ML.NET\\machinelearning-master\\packages/mlnetmkldeps\\0.0.0.9\\runtimes\\win-x64\\native\" exited with code 1.\r\n\r\nBuild FAILED.\r\n\r\nH:\\ML.NET\\machinelearning-master\\src\\Native\\build.proj(67,5): error MSB3073: The command \"\"H:\\ML.NET\\machinelearning-master\\src\\Native\\build.cmd\" Debug x64 --mkllibpath H:\\ML.NET\\machinelearning-master\\packages/mlnetmkldeps\\0.0.0.9\\runtimes\\win-x64\\native\" exited with code 1.\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:56.68\r\nCommand execution failed with exit code 1.\r\nPS H:\\ML.NET\\machinelearning-master>\r\n```\r\n\r\nAny suggestions will be greatly apprecated.\r\n\r\nCharles\r\n","Url":"https://github.com/dotnet/machinelearning/issues/4511","RelatedDescription":"Closed issue \"Build problem\" (#4511)"},{"Id":"530490802","IsPullRequest":true,"CreatedAt":"2019-11-29T21:27:07","Actor":"r0ss88","Number":"4512","RawContent":null,"Title":"Fixes #4505 Remove reliance on getting product version for model.zip/version.txt from FileVersionInfo and replace with using assembly custom attributes","State":"open","Body":"Refer to original issue for further details of the reasons for this change.\r\n\r\nI have used AssemblyInformationalVersionAttribute to match the same behaviour as was introduced with the change to reliance of FileVersionInfo.GetVersionInfo. There is already a test covering -ModelFiles.DetermineNugetVersionFromModel in Microsoft.ML.FunctionalTests.","Url":"https://github.com/dotnet/machinelearning/pull/4512","RelatedDescription":"Open PR \"Fixes #4505 Remove reliance on getting product version for model.zip/version.txt from FileVersionInfo and replace with using assembly custom attributes\" (#4512)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-12-07T05:30:42.6927332Z","RunDurationInMilliseconds":1074}