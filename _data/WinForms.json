{"Data":{"GitHub":{"Issues":[{"Id":"530612771","IsPullRequest":true,"CreatedAt":"2019-11-30T18:11:46","Actor":"hughbe","Number":"2454","RawContent":null,"Title":"Cleanup WindowFromPoint interop","State":"open","Body":"## Proposed Changes\r\n- Cleanup WindowFromPoint interop\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2454)","Url":"https://github.com/dotnet/winforms/pull/2454","RelatedDescription":"Open PR \"Cleanup WindowFromPoint interop\" (#2454)"},{"Id":"530585138","IsPullRequest":false,"CreatedAt":"2019-11-30T14:24:21","Actor":"hughbe","Number":"2453","RawContent":null,"Title":"Question: Application.RenderWithVisualStyles is always false - how can we set it to true?","State":"open","Body":"Basically I want to test some code that is conditional on `Application.RenderWithVisualStyles`\r\n\r\nThe issue is that `Application.RenderWithVisualStyles` is always false\r\n\r\nThe docs (https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.application.renderwithvisualstyles?view=netframework-4.8 say\r\n![image](https://user-images.githubusercontent.com/1275900/69901708-ed84d780-137c-11ea-9a89-c7f8f5654cf5.png)\r\n\r\nDoing research, I found that `VisualStyleInformation.IsEnabledByUser` is always `false`\r\n\r\n`VisualStyleInformation.IsEnabledByUser` is implemented as\r\n```\r\n/// <summary>\r\n///  Returns true if a visual style has currently been applied by the user, else false.\r\n/// </summary>\r\npublic static bool IsEnabledByUser => UxTheme.IsAppThemed().IsTrue();\r\n```\r\n\r\nIs there a way to make `UxTheme.IsAppThemed` return `true` when running tests from `dotnet test`? When we call `dotnet run`, this works!\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2453","RelatedDescription":"Open issue \"Question: Application.RenderWithVisualStyles is always false - how can we set it to true?\" (#2453)"},{"Id":"530210338","IsPullRequest":true,"CreatedAt":"2019-11-29T08:11:12","Actor":"gpetrou","Number":"2452","RawContent":null,"Title":"Move GetAncestor to Interop User32 and add GA enum","State":"open","Body":"## Proposed changes\r\n\r\n- Move GetAncestor to Interop User32.\r\n- Add GA enum.\r\n- Remove GA constants and replace their usages with the above enum.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2452)","Url":"https://github.com/dotnet/winforms/pull/2452","RelatedDescription":"Open PR \"Move GetAncestor to Interop User32 and add GA enum\" (#2452)"},{"Id":"530139890","IsPullRequest":false,"CreatedAt":"2019-11-29T03:33:32","Actor":"tcostin","Number":"2451","RawContent":null,"Title":"FormClosed event is raised twice for owned modal window when owner window is closed programatically","State":"open","Body":"See attached sources. I can reproduce this issue with .Net Core 3.0 and .Net Framework 4.7.2\r\n\r\nThe second call to OnFormClosed() seems to be a side effect of shutting down the modal message loop that was created to run the child window.\r\n\r\n[BugFormClosedRaisedTwice.zip](https://github.com/dotnet/winforms/files/3903629/BugFormClosedRaisedTwice.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/2451","RelatedDescription":"Open issue \"FormClosed event is raised twice for owned modal window when owner window is closed programatically\" (#2451)"},{"Id":"529974454","IsPullRequest":true,"CreatedAt":"2019-11-29T02:29:05","Actor":"hughbe","Number":"2448","RawContent":null,"Title":"Add GroupBox tests and related Control methods","State":"closed","Body":"## Proposed Changes\r\n- Add GroupBox tests and related Control methods\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2448)","Url":"https://github.com/dotnet/winforms/pull/2448","RelatedDescription":"Closed or merged PR \"Add GroupBox tests and related Control methods\" (#2448)"},{"Id":"530024002","IsPullRequest":true,"CreatedAt":"2019-11-28T23:00:08","Actor":"hughbe","Number":"2450","RawContent":null,"Title":"Add ColorDialog tests","State":"closed","Body":"## Proposed Changes\r\n- Add ColorDialog tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2450)","Url":"https://github.com/dotnet/winforms/pull/2450","RelatedDescription":"Closed or merged PR \"Add ColorDialog tests\" (#2450)"},{"Id":"529746778","IsPullRequest":true,"CreatedAt":"2019-11-28T22:58:38","Actor":"gpetrou","Number":"2446","RawContent":null,"Title":"Move SetWindowTheme to Interop UxTheme","State":"closed","Body":"## Proposed changes\r\n\r\n- Move SetWindowTheme to Interop UxTheme.\r\n- Remove some unused namespaces.\r\n- Fix GetCurrentThemeName return type.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2446)","Url":"https://github.com/dotnet/winforms/pull/2446","RelatedDescription":"Closed or merged PR \"Move SetWindowTheme to Interop UxTheme\" (#2446)"},{"Id":"529987304","IsPullRequest":true,"CreatedAt":"2019-11-28T15:55:16","Actor":"M-Lipin","Number":"2449","RawContent":null,"Title":"Fixing ComboBox handlers and accessibility object initialization","State":"open","Body":"Adding IsHandleCreated checks to prevent accessing AccessibleObject properties and calls to UIAutomation which may lead to application crash/hung.\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2432 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Adding IsHandleCreated checks to prevent accessing AccessibleObject properties for not fully initialized control.\r\n- Fixed the reference to child list window to prevent NullReferenceException on child control recreating.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers will not experience application crash/hung in some cases when ComboBox control is being reinitialized while application/form lifecycle.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nException and application hung.\r\n<!-- callstack for crashes / exceptions -->\r\n`NullReferenceException` and application crash:\r\n```\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.Windows.Forms.ComboBox.WmParentNotify(Message& m)\r\n   at System.Windows.Forms.ComboBox.WndProc(Message& m)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)\r\n```\r\n\r\n### After\r\n\r\nNo exception.\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing.\r\n- Automation tests.\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha1-015763\r\n Commit:    0d0c902b77\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-015763\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-alpha.1.19564.1\r\n  Commit:  c77948d92a\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100-preview3-014645 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-alpha1-015763 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2449)","Url":"https://github.com/dotnet/winforms/pull/2449","RelatedDescription":"Open PR \"Fixing ComboBox handlers and accessibility object initialization\" (#2449)"},{"Id":"529762324","IsPullRequest":true,"CreatedAt":"2019-11-28T08:27:49","Actor":"gpetrou","Number":"2447","RawContent":null,"Title":"[WIP] Remove GetWindowLong and SetWindowLong from UnsafeNativeMethods.cs an…","State":"open","Body":"…d GWL constants from NativeMethods.cs\r\n\r\n## Proposed changes\r\n\r\n- Remove GetWindowLong and SetWindowLong from UnsafeNativeMethods.cs\r\n- Remove GWL constants from NativeMethods.cs\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2447)","Url":"https://github.com/dotnet/winforms/pull/2447","RelatedDescription":"Open PR \"[WIP] Remove GetWindowLong and SetWindowLong from UnsafeNativeMethods.cs an…\" (#2447)"},{"Id":"529681697","IsPullRequest":true,"CreatedAt":"2019-11-28T05:53:22","Actor":"gpetrou","Number":"2445","RawContent":null,"Title":"Add WA enum to User32","State":"closed","Body":"## Proposed changes\r\n\r\n- Add WA enum to User32\r\n- Remove the corresponding constants and replace their usages with the above enum. \n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2445)","Url":"https://github.com/dotnet/winforms/pull/2445","RelatedDescription":"Closed or merged PR \"Add WA enum to User32\" (#2445)"},{"Id":"529630392","IsPullRequest":true,"CreatedAt":"2019-11-28T01:00:32","Actor":"RussKie","Number":"2442","RawContent":null,"Title":"fix: Type 'System.Windows.Forms.IWin32Window' is not defined","State":"closed","Body":"Builds randomly fail with \"Type 'System.Windows.Forms.IWin32Window' is not defined\" error, estimated about 10% of builds failed because of this.\r\n\r\nInvestigations suggest that there may be MSBuild bug that `GetCopyToOutputDirectoryItemsDependsOn` property stomps over previous property value without including itself, thus leading to incorrect behaviours later in a build.\r\nMore info: https://github.com/microsoft/msbuild/issues/4923#issuecomment-554265394\r\n\r\nCloses #2107\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2442)","Url":"https://github.com/dotnet/winforms/pull/2442","RelatedDescription":"Closed or merged PR \"fix: Type 'System.Windows.Forms.IWin32Window' is not defined\" (#2442)"},{"Id":"529634030","IsPullRequest":true,"CreatedAt":"2019-11-28T00:58:35","Actor":"dotnet-maestro[bot]","Number":"2444","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19577.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2444)","Url":"https://github.com/dotnet/winforms/pull/2444","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#2444)"},{"Id":"529632914","IsPullRequest":true,"CreatedAt":"2019-11-28T00:49:03","Actor":"dotnet-maestro[bot]","Number":"2443","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2b67318b-e6c5-4abb-7861-08d72198640e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19577.5\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:2b67318b-e6c5-4abb-7861-08d72198640e)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2443)","Url":"https://github.com/dotnet/winforms/pull/2443","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#2443)"},{"Id":"529109759","IsPullRequest":true,"CreatedAt":"2019-11-27T22:59:54","Actor":"RussKie","Number":"2437","RawContent":null,"Title":"Add tests to verify joint behaviours pertaining to `ThreeState`, `CheckState` and `Checked`","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2437)","Url":"https://github.com/dotnet/winforms/pull/2437","RelatedDescription":"Closed or merged PR \"Add tests to verify joint behaviours pertaining to `ThreeState`, `CheckState` and `Checked`\" (#2437)"},{"Id":"529095944","IsPullRequest":true,"CreatedAt":"2019-11-27T22:58:23","Actor":"RussKie","Number":"2436","RawContent":null,"Title":"Update testing.md","State":"closed","Body":"Update testing guidelines\r\n\r\n@hughbe is there anything else off the top your head worth adding?\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2436)","Url":"https://github.com/dotnet/winforms/pull/2436","RelatedDescription":"Closed or merged PR \"Update testing.md\" (#2436)"},{"Id":"529586282","IsPullRequest":true,"CreatedAt":"2019-11-27T21:45:59","Actor":"hughbe","Number":"2441","RawContent":null,"Title":"Cleanup UpdateWindow interop","State":"open","Body":"## Proposed Changes\r\n- Cleanup UpdateWindow interop\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2441)","Url":"https://github.com/dotnet/winforms/pull/2441","RelatedDescription":"Open PR \"Cleanup UpdateWindow interop\" (#2441)"},{"Id":"529494724","IsPullRequest":true,"CreatedAt":"2019-11-27T17:55:20","Actor":"mmitche","Number":"2440","RawContent":null,"Title":"Update area paths to be like 3.1","State":"closed","Body":"Bring ci.yml's SDL config in line with 3.1\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2440)","Url":"https://github.com/dotnet/winforms/pull/2440","RelatedDescription":"Closed or merged PR \"Update area paths to be like 3.1\" (#2440)"},{"Id":"529474460","IsPullRequest":true,"CreatedAt":"2019-11-27T17:18:31","Actor":"mmitche","Number":"2439","RawContent":null,"Title":"[release/3.1] Remove stabilize package versions block","State":"closed","Body":"winforms does not stabilize so there is no need to add confusion.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2439)","Url":"https://github.com/dotnet/winforms/pull/2439","RelatedDescription":"Closed or merged PR \"[release/3.1] Remove stabilize package versions block\" (#2439)"},{"Id":"529458967","IsPullRequest":true,"CreatedAt":"2019-11-27T16:47:58","Actor":"mmitche","Number":"2438","RawContent":null,"Title":"[release/3.0] Add internal/release/* ci triggers","State":"closed","Body":"Remove stabilize package version block. winforms never stabilizes\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2438)","Url":"https://github.com/dotnet/winforms/pull/2438","RelatedDescription":"Closed or merged PR \"[release/3.0] Add internal/release/* ci triggers\" (#2438)"},{"Id":"528325219","IsPullRequest":true,"CreatedAt":"2019-11-27T02:41:10","Actor":"hughbe","Number":"2428","RawContent":null,"Title":"Cleanup ControlPaint interop","State":"closed","Body":"## Proposed Changes\r\n- Cleanup CreateHalftonePalette\r\n- Cleanup CreateDIBSection\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2428)","Url":"https://github.com/dotnet/winforms/pull/2428","RelatedDescription":"Closed or merged PR \"Cleanup ControlPaint interop\" (#2428)"},{"Id":"528894330","IsPullRequest":true,"CreatedAt":"2019-11-27T02:01:19","Actor":"hughbe","Number":"2433","RawContent":null,"Title":"Cleanup CF_ constants","State":"closed","Body":"## Proposed Changes\r\n- Cleanup CF_ constants\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2433)","Url":"https://github.com/dotnet/winforms/pull/2433","RelatedDescription":"Closed or merged PR \"Cleanup CF_ constants\" (#2433)"},{"Id":"529055691","IsPullRequest":true,"CreatedAt":"2019-11-27T01:21:04","Actor":"RussKie","Number":"2435","RawContent":null,"Title":"Remove remnants of `ToolBar` class","State":"closed","Body":"`ToolBar` implementation was removed in #2157.\r\n\r\nCloses #2372\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2435)","Url":"https://github.com/dotnet/winforms/pull/2435","RelatedDescription":"Closed or merged PR \"Remove remnants of `ToolBar` class\" (#2435)"},{"Id":"528918383","IsPullRequest":true,"CreatedAt":"2019-11-26T19:55:06","Actor":"wtgodbe","Number":"2434","RawContent":null,"Title":"Add dotnet-eng feed to nuget.config","State":"closed","Body":"The dotnet-eng feed is the new feed for arcade bits. Should fix an internal build break.\r\n\r\nCC @mmitche @AdamYoblick @RussKie \n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2434)","Url":"https://github.com/dotnet/winforms/pull/2434","RelatedDescription":"Closed or merged PR \"Add dotnet-eng feed to nuget.config\" (#2434)"},{"Id":"528601445","IsPullRequest":false,"CreatedAt":"2019-11-26T09:38:25","Actor":"M-Lipin","Number":"2432","RawContent":null,"Title":"ComboBox initialization/reinitialization fails with NullReferenceException","State":"open","Body":"* .NET Core Version: 3.0\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\nThe issue is that the multi-form desktop application or application with complex control appearance behavior may fail with the error caused by NullReference which has ComboBox's origin. ComboBox initializes successfully and the issue does not reproduce in case this is shown initially on the forms and is not recreated while app lifecycle.\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n`NullReferenceException` and application crash:\r\n```\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.Windows.Forms.ComboBox.WmParentNotify(Message& m)\r\n   at System.Windows.Forms.ComboBox.WndProc(Message& m)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)\r\n```\r\n\r\n**Expected behavior:**\r\nNo error.\r\n\r\n**Minimal repro:**\r\nCreate the app with hidden dialog form and ComboBox on this form.\r\nStart the app, trigger dialog form initialization and reinitialization without dialog showing.\r\nObserve the error.\r\n\r\nDevDiv issue: https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1022943","Url":"https://github.com/dotnet/winforms/issues/2432","RelatedDescription":"Open issue \"ComboBox initialization/reinitialization fails with NullReferenceException\" (#2432)"},{"Id":"528327604","IsPullRequest":true,"CreatedAt":"2019-11-26T03:47:36","Actor":"hughbe","Number":"2429","RawContent":null,"Title":"Cleanup PatBlt interop","State":"closed","Body":"## Proposed Changes\r\n- Cleanup PatBlt interop\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2429)","Url":"https://github.com/dotnet/winforms/pull/2429","RelatedDescription":"Closed or merged PR \"Cleanup PatBlt interop\" (#2429)"},{"Id":"527915882","IsPullRequest":true,"CreatedAt":"2019-11-26T03:38:36","Actor":"gpetrou","Number":"2425","RawContent":null,"Title":"Remove WS_EX_TRANSPARENT from NativeMethods.cs","State":"closed","Body":"## Proposed changes\r\n\r\n- Remove  WS_EX_TRANSPARENT from NativeMethods.cs and replace its usages with the appropriate enum value.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2425)","Url":"https://github.com/dotnet/winforms/pull/2425","RelatedDescription":"Closed or merged PR \"Remove WS_EX_TRANSPARENT from NativeMethods.cs\" (#2425)"},{"Id":"528332268","IsPullRequest":true,"CreatedAt":"2019-11-26T03:32:22","Actor":"hughbe","Number":"2430","RawContent":null,"Title":"Cleanup IViewObject and IViewObject2 interop","State":"closed","Body":"## Proposed Changes\r\n- Cleanup IViewObject\r\n- Cleanup IViewObject2\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2430)","Url":"https://github.com/dotnet/winforms/pull/2430","RelatedDescription":"Closed or merged PR \"Cleanup IViewObject and IViewObject2 interop\" (#2430)"},{"Id":"528392436","IsPullRequest":true,"CreatedAt":"2019-11-25T23:15:11","Actor":"brucremo","Number":"2431","RawContent":null,"Title":"WIP: Add BaseContextMenuStripTests","State":"open","Body":"Issue #721 (Partial) : Add BaseContextMenuStripTests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2431)","Url":"https://github.com/dotnet/winforms/pull/2431","RelatedDescription":"Open PR \"WIP: Add BaseContextMenuStripTests\" (#2431)"},{"Id":"528288843","IsPullRequest":false,"CreatedAt":"2019-11-25T19:25:34","Actor":"OliaG","Number":"2427","RawContent":null,"Title":"Performance issue with localizable controls and forms","State":"open","Body":"* .NET Core Version: .NT Core 3.0 GA\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\nRight now switching the Localizable property on control causes a large amount of properties moved to a .resx file. At runtime this is loaded with heavy use of reflection and deserialization which shows up in our performance profiles as the biggest reason for slow startup time. In our scenario all the controls and forms are designed using flexible layout containers that are automatically sized to fit the text. The all-or-nothing approach to localization, however, causes the control locations and sizes to be moved to .resx file as well. This results in unnecessarily high number of resources that we never localize and that also cause unnecessary re-layouts at startup.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2427","RelatedDescription":"Open issue \"Performance issue with localizable controls and forms\" (#2427)"},{"Id":"528009907","IsPullRequest":false,"CreatedAt":"2019-11-25T11:01:06","Actor":"filipnavara","Number":"2426","RawContent":null,"Title":"Self-contained deployment always include WPF assemblies","State":"open","Body":"* .NET Core Version: 3.0; 3.1\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\n\r\n- Create a simple WinForms application (either through `dotnet new` or VS)\r\n- Add Publish profile, change it from \"framework dependent\" to \"self-contained\" \r\n\r\n**Actual behavior:**\r\n\r\nPublished output contains large part of WPF stack (eg. PresentationCore.dll, PresentationUI.dll, PresentationFramework*.dll, etc.) which amounts to over 30 Mb (> 10 Mb compressed) of unused assemblies. The files are pulled from the \"runtimepack.Microsoft.WindowsDesktop.App.Runtime.win-x86/3.0.0\" NuGet package.\r\n\r\n**Expected behavior:**\r\n\r\nNo WPF assemblies in the output.\r\n\r\n**Minimal repro:**\r\n\r\n[WindowsFormsApp1.zip](https://github.com/dotnet/winforms/files/3886266/WindowsFormsApp1.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/2426","RelatedDescription":"Open issue \"Self-contained deployment always include WPF assemblies\" (#2426)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-12-01T05:30:59.9400193Z","RunDurationInMilliseconds":889}