{"Data":{"GitHubIssues":{"Issues":[{"Id":"367419040","IsPullRequest":false,"CreatedAt":"2018-10-06T04:03:31","Actor":"kant2002","Number":"1529","RawContent":null,"Title":"Missing access modifier ","State":"closed","Body":"1. On the `Index.cshtml` from the template (which does not have `@functions` section)\r\n2. Create new `@functions` sections\r\n3. Start typing `override OnI` \r\n4. press Tab\r\n5. Added \r\n```csharp\r\noverride void OnInit()\r\n{\r\n    base.OnInit();\r\n}\r\n```\r\n\r\nshould be \r\n```csharp\r\nprotected override void OnInit()\r\n{\r\n    base.OnInit();\r\n}\r\n```\r\n\r\n\r\n## Notes\r\nHappens\r\n```csharp\r\n@functions  {\r\n\r\n    override void OnInit()\r\n    {\r\n        base.OnInit();\r\n    }\r\n}\r\n\r\n```\r\nDoes not happens (correct)\r\n\r\n```csharp\r\n@functions  {\r\n    public void test()\r\n    {\r\n\r\n    }\r\n    protected override void OnInit()\r\n    {\r\n        base.OnInit();\r\n    }\r\n}\r\n\r\n```\r\nDoes not happens (correct)\r\n\r\n```csharp\r\n@functions  {\r\n    private int x;\r\n\r\n    protected override void OnInit()\r\n    {\r\n        base.OnInit();\r\n    }\r\n}\r\n\r\n```\r\n\r\nso essentially, my observation related just if you have first method in the `@functions` section it does not pickup the correct access modifier ","Url":"https://github.com/aspnet/Blazor/issues/1529","RelatedDescription":"Closed issue \"Missing access modifier \" (#1529)"},{"Id":"367390493","IsPullRequest":false,"CreatedAt":"2018-10-05T22:42:56","Actor":"nblumhardt","Number":"1528","RawContent":null,"Title":"Setting up logging in Blazor","State":"open","Body":"Hi all!! Hope you're all having fun, hacking on such an interesting bit of code ðŸ˜„ \r\n\r\nI spent a few hours last night experimenting with Serilog in Blazor, both to the local browser console and piped through the server using middleware. The code is in: https://github.com/nblumhardt/serilog-blazor.\r\n\r\nThere's a whole lot to explore in this space, but I thought I'd try to get in early with a bit of feedback on how it hangs together.\r\n\r\nSome developers, me among them, will go to great lengths to get logging set up before any other application code executes. This makes it easier to debug startup failures, which are usually critical issues. You can see I've done that in the Blazor client demo here: https://github.com/nblumhardt/serilog-blazor/blob/master/SerilogBlazorDemo.Client/Program.cs#L12\r\n\r\nBecause the demo pipes client logs through the server, HTTP is needed; getting the base URI before the Blazor host is initialized took some hackiness: https://github.com/nblumhardt/serilog-blazor/blob/master/SerilogBlazorDemo.Client/Diagnostics/BrowserHttpSink.cs#L67 - it would be great if this could be properly supported by the Blazor API.\r\n\r\nThis echoes some of the problems with logging in ASP.NET Core, particularly the decision to put configuration (and thus logging setup) into DI. This ends up greatly expanding the amount of code that runs before logging is available, and thus the scope of potential failures that can't be properly logged. It would be great to avoid this in Blazor, by providing non-DI access to critical system services (like HTTP, mentioned above). Less-ergonomics/jumping-through-hoops would be acceptable, if it enabled bootstrapping logging ahead of anything else.\r\n\r\nHope this is at least food-for-thought, and good luck with it all! (Also, hope you have a chance to run the demo, it's quite compelling to see just how consistent the client/server experiences can be ðŸ˜Ž .)","Url":"https://github.com/aspnet/Blazor/issues/1528","RelatedDescription":"Open issue \"Setting up logging in Blazor\" (#1528)"},{"Id":"367343820","IsPullRequest":false,"CreatedAt":"2018-10-05T19:44:37","Actor":"Suchiman","Number":"1527","RawContent":null,"Title":"Blazor Codegen does not escape quotes","State":"open","Body":"If you use double quotes inside single quotes in attributes, this will result in broken codegen due to unescaped double quotes inside double quotes.\r\nInput:\r\n```html\r\n<input onfocus='alert(\"Test\");' />\r\n```\r\nOutput:\r\n```csharp\r\nbuilder.OpenElement(0, \"input\");\r\nbuilder.AddAttribute(1, \"onfocus\", Microsoft.AspNetCore.Blazor.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Blazor.UIFocusEventArgs>(\"alert(\"Test\");\"));\r\nbuilder.CloseElement();\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1527","RelatedDescription":"Open issue \"Blazor Codegen does not escape quotes\" (#1527)"},{"Id":"366933789","IsPullRequest":true,"CreatedAt":"2018-10-05T13:46:53","Actor":"alenros","Number":"1522","RawContent":null,"Title":"updated MSRC link","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/pull/1522","RelatedDescription":"Closed or merged PR \"updated MSRC link\" (#1522)"},{"Id":"366590027","IsPullRequest":true,"CreatedAt":"2018-10-05T13:45:49","Actor":"simpman4","Number":"1518","RawContent":null,"Title":"Added a \".\" to the end of ln. 41","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/pull/1518","RelatedDescription":"Closed or merged PR \"Added a \".\" to the end of ln. 41\" (#1518)"},{"Id":"366629540","IsPullRequest":false,"CreatedAt":"2018-10-05T13:42:40","Actor":"MorneZaayman","Number":"1519","RawContent":null,"Title":"Calling JsRuntime.Current.InvokeAsync from C# in HTML part of a component results in Uncaught (in promise)","State":"closed","Body":"### Title\r\nCalling JsRuntime.Current.InvokeAsync from C# in HTML part of a component results in Uncaught (in promise)\r\n\r\n### Functional impact\r\nJSInterop does not work in Async mode. I did manage to get the code to work by down-casting to IJSInProcessRuntime and then calling Invoke instead of InvokeAsync, but this still felt like a bug so I thought I should report it.\r\n\r\nI have the following code in a Component which is supposed to show one section of code if a token is present in local storage, and another if not.\r\n\r\n```\r\n@inject AuthService AuthService\r\n\r\n<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n \r\n    @if (IsLoggedIn())\r\n    {\r\n        <div class=\"dropdown\">\r\n            <a class=\"dropdown-toggle text-light\">\r\n                Welcome User\r\n            </a>\r\n\r\n            <div class=\"dropdown-menu\">\r\n                <a class=\"dropdown-item\" href=\"#\"><i class=\"fa fa-user\"></i> Edit Profile</a>\r\n                <div class=\"divider\"></div>\r\n                <a class=\"dropdown-item\" href=\"#\"><i class=\"fa fa-sign-out\"></i> Log out</a>\r\n            </div>\r\n        </div>\r\n    }\r\n    else\r\n    {\r\n        <form class=\"form-inline my-2 my-lg-0\" onsubmit=\"@LogIn\"> @*Change to bind-to-oninput when it is fixed*@\r\n            <input class=\"form-control mr-sm-2\" name=\"username\" placeholder=\"Username\" type=\"text\" required bind=\"@Username\" />\r\n            <input class=\"form-control mr-sm-2\" name=\"password\" placeholder=\"Password\" type=\"text\" required bind=\"@Password\" />\r\n            <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\" disabled=\"@_loginDisabled\">Login</button>\r\n        </form>\r\n    }\r\n\r\n</nav>\r\n\r\n@functions {\r\n    // Other methods and properties left out for brevity.\r\n\r\n    bool IsLoggedIn()\r\n    {\r\n        // Using .Result as await cannot be used in the Razor HTML\r\n        return AuthService.IsLoggedIn().Result;\r\n    }\r\n}\r\n```\r\nAnd then inside AuthService.cs\r\n```\r\npublic async Task<bool> IsLoggedIn()\r\n{\r\n    try\r\n    {\r\n        var token = await JSRuntime.Current.InvokeAsync<string>(\"jsinterop.getLocalStorageItem\", TOKEN_KEY);\r\n                \r\n        return !string.IsNullOrWhiteSpace(token);\r\n    }\r\n    catch (Exception e)\r\n    {\r\n        Console.WriteLine($\"public async Task<bool> IsLoggedIn()': {e.Message}\");\r\n        \r\n        return false;\r\n    }    \r\n}\r\n```\r\n\r\n### Minimal repro steps\r\nLoad the component and look in the console.\r\n\r\n### Actual result\r\nThe following console output:\r\n\r\n> blazor.webassembly.js:1 WASM: 13\r\n> d.printErr @ blazor.webassembly.js:1\r\n> blazor.webassembly.js:1 Uncaught (in promise) abort(13). Build with -s ASSERTIONS=1 for more info.\r\n\r\n### Further technical details\r\nUsing Visual Studio 2017 15.8.6 and Blazor 0.6","Url":"https://github.com/aspnet/Blazor/issues/1519","RelatedDescription":"Closed issue \"Calling JsRuntime.Current.InvokeAsync from C# in HTML part of a component results in Uncaught (in promise)\" (#1519)"},{"Id":"366822187","IsPullRequest":false,"CreatedAt":"2018-10-05T13:37:36","Actor":"mattd73uk","Number":"1521","RawContent":null,"Title":"Components could expose properties using public instead of Parameter ","State":"closed","Body":"Hi,\r\nAs per the VS template project, to be able to assign to a component\r\n`<SurveyPrompt Title=\"How is Blazor working for you?\" />`\r\n\r\ncurrently the child component needs Title to have the Parameter attribute:\r\n```\r\n [Parameter]\r\n string Title { get; set; } \r\n```\r\n\r\nI am new to the project, so forgive any newbie foolishness, but can't we drop the ParameterAttribute and simply say that child component properties which are _public_ can be assigned to by the parent?\r\nTo me this is the intention of C# public/private access modifiers.\r\n\r\nI'd like to contribute to the project & have a go at this if it was thought sensible.\r\nThanks\r\nMatt","Url":"https://github.com/aspnet/Blazor/issues/1521","RelatedDescription":"Closed issue \"Components could expose properties using public instead of Parameter \" (#1521)"},{"Id":"367212543","IsPullRequest":true,"CreatedAt":"2018-10-05T13:30:41","Actor":"SteveSandersonMS","Number":"1526","RawContent":null,"Title":"Give Renderer knowledge of component parents","State":"open","Body":"Until now, `Renderer` knew which components were the children of another (i.e., the ones in its most recent render tree), but didn't track the relationship in the opposite direction because it didn't need to.\r\n\r\nWe now do need to be able to walk up the ancestry hierarchy, because this is essential for the upcoming \"passing parameters down the hierarchy\" feature (when a new child is added, we have to be able to walk up the ancestry to find matches for its ambient params).\r\n\r\nNotes:\r\n\r\n* It's kind of awkward, but there was no direct way to unit test this until the rest of the \"hierarchical parameters\" feature is implemented, because it's just an internal implementation detail. So I've temporarily added an `internal` method for exposing the hierarchy to tests. I'll remove this later.\r\n* While implementing this, it became clear that `AssignComponentId` would need to be split into two variants. Previously it was used publicly but for root components only, and privately for non-root components. I've now reflected this in the code by renaming the `public` variant to `AssignRootComponentId`, and having only the `private` variant accept a `parentComponentId`.","Url":"https://github.com/aspnet/Blazor/pull/1526","RelatedDescription":"Open PR \"Give Renderer knowledge of component parents\" (#1526)"},{"Id":"367195050","IsPullRequest":true,"CreatedAt":"2018-10-05T12:44:15","Actor":"SteveSandersonMS","Number":"1525","RawContent":null,"Title":"Avoid OnAfterRender allocating to capture 'this'","State":"open","Body":"Ultra-trivial tweak I noticed while doing some unrelated work.\r\n\r\nCurrently, if you override `OnAfterRender` and return a non-null `Task`, then the [base class's use of `ContinueWith`](https://github.com/aspnet/Blazor/blob/b3301d8f7a3cda9bc63a9b536309fa385d2776cf/src/Microsoft.AspNetCore.Blazor/Components/BlazorComponent.cs#L224) will have to allocate in order to capture the `this` value so it can call `HandleException` as an instance method.\r\n\r\nHowever we can make `HandleException` static so no allocation will occur in `IHandleAfterRender.OnAfterRender`. This suggestion is courtesy of [Roslyn CLR Heap Allocation analyzer](https://github.com/Microsoft/RoslynClrHeapAllocationAnalyzer).","Url":"https://github.com/aspnet/Blazor/pull/1525","RelatedDescription":"Open PR \"Avoid OnAfterRender allocating to capture 'this'\" (#1525)"},{"Id":"367085118","IsPullRequest":true,"CreatedAt":"2018-10-05T07:05:15","Actor":"Meir017","Number":"1524","RawContent":null,"Title":"using Microsoft.Extensions.CommandLineUtils for blazor-cli","State":"open","Body":"related to #1513","Url":"https://github.com/aspnet/Blazor/pull/1524","RelatedDescription":"Open PR \"using Microsoft.Extensions.CommandLineUtils for blazor-cli\" (#1524)"},{"Id":"366961962","IsPullRequest":true,"CreatedAt":"2018-10-04T20:46:06","Actor":"alenros","Number":"1523","RawContent":null,"Title":"amend MSRC link","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/pull/1523","RelatedDescription":"Closed or merged PR \"amend MSRC link\" (#1523)"},{"Id":"366798199","IsPullRequest":false,"CreatedAt":"2018-10-04T13:46:24","Actor":"neerajbharti","Number":"1520","RawContent":null,"Title":"Support type constraints on @typeparam","State":"open","Body":"This is in regards to the new @typeParam released in 0.6.0 version.\r\nI am not sure if Type Constraints can be defined on the generic type passed to @typeParam.\r\n\r\n If this is something which already existing, can you please direct me to some semantics help. And if it is not there; is there any  plan to support this.\r\n\r\nThis feature will be very much helpful while developing abstract components which must take \"T\" of some base type for example.","Url":"https://github.com/aspnet/Blazor/issues/1520","RelatedDescription":"Open issue \"Support type constraints on @typeparam\" (#1520)"},{"Id":"366484450","IsPullRequest":false,"CreatedAt":"2018-10-04T06:34:52","Actor":"codeinstinct","Number":"1517","RawContent":null,"Title":"Upgrade to 0.6.0 causes build errors","State":"closed","Body":"Upgrading from 0.5.1 to 0.6.0 gives a build error.\r\n\r\n``/webui/blazor/blazor.csproj : error NU1102: Unable to find package Microsoft.AspNetCore.Blazor.Server with version (>= 0.6.0)\r\nwebui/blazor/blazor.csproj : error NU1102:   - Found 7 version(s) in nuget.org [ Nearest version: 0.5.1 ]\r\n``\r\n\r\nThe problem is with this line in particular:\r\n\r\n`` \r\n<DotNetCliToolReference Include=\"Microsoft.AspNetCore.Blazor.Cli\" Version=\"0.6.0\" />\r\n``\r\n\r\nAdditional info:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  16.04\r\n OS Platform: Linux\r\n RID:         ubuntu.16.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.403/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  2.0.0 [/usr/share/dotnet/sdk]\r\n  2.1.402 [/usr/share/dotnet/sdk]\r\n  2.1.403 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]","Url":"https://github.com/aspnet/Blazor/issues/1517","RelatedDescription":"Closed issue \"Upgrade to 0.6.0 causes build errors\" (#1517)"},{"Id":"365682132","IsPullRequest":false,"CreatedAt":"2018-10-03T15:18:58","Actor":"azutake","Number":"1508","RawContent":null,"Title":"When the path of `applicationUrl` is changed, \"MSB3026\" will be occurs at Auto-build","State":"closed","Body":"Hi, i use the Blazor Auto-build feature in the following conditions, i will get an error while building the hosted server.\r\n(this problem is less important because the client works correctly)\r\n\r\n# Phenomenon\r\nThe MSB3026 warning occurs and the build takes longer than usual.\r\n\r\n# How to reproduce\r\nBased on Blazor (ASP.NET Core hosted).\r\nASP.NET Core 2.1 used.\r\n\r\n1. Add `fetchdata` to the end of `applicationUrl` in `launchSettings.json` at `***.Server` project.\r\n2. Start without debugging(Ctrl+F5) at `***.Server`.\r\n3. Wait for browser loading.\r\n4. Make changes to a portion of `Pages/fetchdata.cshtml` in `***.Client` project.\r\n5. Reload on the browser.\r\n\r\n# Repro repository\r\nhttps://github.com/azutake/BlazorMsb3026Problem\r\nreproduction commit: https://github.com/azutake/BlazorMsb3026Problem/commit/06fcf823e7840e72f5bc4a35874e1ac11c22cd93\r\n\r\n# Environment\r\n* Microsoft Visual Studio Professional 2017 (15.8.5)\r\n* ASP.NET Core Blazor Language Services (15.7.10384)\r\n* .NET Core SDK (2.1.300)","Url":"https://github.com/aspnet/Blazor/issues/1508","RelatedDescription":"Closed issue \"When the path of `applicationUrl` is changed, \"MSB3026\" will be occurs at Auto-build\" (#1508)"},{"Id":"365752840","IsPullRequest":false,"CreatedAt":"2018-10-03T14:58:52","Actor":"MorneZaayman","Number":"1510","RawContent":null,"Title":"Binding to oninput event results in method being called before the value has changed.","State":"closed","Body":"### Title\r\nBinding to `oninput `event results in method being called before the value has changed.\r\n\r\n### Functional impact\r\n`oninput `event does not work as expected,\r\n\r\nIâ€™m busy working through this [course ](https://www.udemy.com/build-an-app-with-aspnet-core-and-angular-from-scratch) and I'm implementing the project in Blazor at the same time. \r\n\r\nI have the following code in a Component which is supposed to disable a login button when either of the input elements are blank.\r\n\r\n```\r\n<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n    <a class=\"navbar-brand\" href=\"#\">Dating App</a>\r\n\r\n    <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item active\">\r\n            <a class=\"nav-link\" href=\"#\">Matches</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#\">Lists</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"#\">Messages</a>\r\n        </li>\r\n    </ul>\r\n\r\n    <form class=\"form-inline my-2 my-lg-0\">\r\n        <input class=\"form-control mr-sm-2\" name=\"username\" placeholder=\"Username\" type=\"text\" required bind=\"@Username\" oninput=\"@ValidateLogin\" />\r\n        <input class=\"form-control mr-sm-2\" name=\"password\" placeholder=\"Password\" type=\"text\" required bind=\"@Password\" oninput=\"@ValidateLogin\" />\r\n        <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\" disabled=\"@_loginDisabled\">Login</button>\r\n    </form>\r\n\r\n</nav>\r\n\r\n@functions {\r\n    public string Username { get; set; }\r\n    public string Password { get; set; }\r\n\r\n    bool _loginDisabled = true;\r\n\r\n    void ValidateLogin()\r\n    {\r\n        if (string.IsNullOrWhiteSpace(Username) || (string.IsNullOrWhiteSpace(Password)))\r\n        {\r\n            _loginDisabled = true;\r\n        }\r\n        else\r\n        {\r\n            _loginDisabled = false;\r\n        }\r\n        Console.WriteLine($\"ValidateLogin(): Username={Username} IsNullOrWhiteSpace={string.IsNullOrWhiteSpace(Username)}, Password={Password} IsNullOrWhiteSpace={string.IsNullOrWhiteSpace(Password)}, LoginDisabled={_loginDisabled}\");\r\n    }\r\n}\r\n```\r\n\r\n### Minimal repro steps\r\nLooking at the console output there seems to be an issue where the value of Username or Password is only set after the method is called. In the output Iâ€™ve listed below, I typed the following:\r\n\r\n1.\tâ€˜aâ€™ in username input\r\n\r\n> WASM: ValidateLogin(): Username= IsNullOrWhiteSpace=True, Password= IsNullOrWhiteSpace=True, LoginDisabled=True\r\n\r\n2.\tâ€˜bâ€™ in password input\r\n\r\n> WASM: ValidateLogin(): Username=a IsNullOrWhiteSpace=False, Password= IsNullOrWhiteSpace=True, LoginDisabled=True\r\n\r\n3.\tâ€˜câ€™ in username input\r\n\r\n> WASM: ValidateLogin(): Username=a IsNullOrWhiteSpace=False, Password=b IsNullOrWhiteSpace=False, LoginDisabled=False\r\n\r\n### Expected result\r\n1.\tâ€˜aâ€™ in username input\r\n\r\n> WASM: ValidateLogin(): Username=**a** IsNullOrWhiteSpace=True, Password= IsNullOrWhiteSpace=True, LoginDisabled=True\r\n\r\n2.\tâ€˜bâ€™ in password input\r\n\r\n> WASM: ValidateLogin(): Username=a IsNullOrWhiteSpace=False, Password=**b** IsNullOrWhiteSpace=False, LoginDisabled=False\r\n\r\n3.\tâ€˜câ€™ in username input\r\n\r\n> WASM: ValidateLogin(): Username=a**c** IsNullOrWhiteSpace=False, Password=b IsNullOrWhiteSpace=False, LoginDisabled=False\r\n\r\n### Actual result\r\nExplained in Minimal repro steps\r\n\r\n### Further technical details\r\nUsing the latest Visual Studio 2017 15.8.5 and Blazor 0.5.1","Url":"https://github.com/aspnet/Blazor/issues/1510","RelatedDescription":"Closed issue \"Binding to oninput event results in method being called before the value has changed.\" (#1510)"},{"Id":"366044309","IsPullRequest":false,"CreatedAt":"2018-10-03T14:50:02","Actor":"Meir017","Number":"1513","RawContent":null,"Title":"support help in Blazor cli","State":"closed","Body":"```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <RunCommand>dotnet</RunCommand>\r\n    <RunArguments>blazor serve</RunArguments>\r\n    <LangVersion>7.3</LangVersion>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Blazor.Browser\" Version=\"0.6.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Blazor.Build\" Version=\"0.6.0\" PrivateAssets=\"all\" />\r\n\r\n    <DotNetCliToolReference Include=\"Microsoft.AspNetCore.Blazor.Cli\" Version=\"0.6.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\nusing blazor `0.6.0`\r\n\r\nafter running `dotnet new blazor` and then `dotnet blazor -h`\r\nan `InvalidOperationException` is thrown.\r\n\r\nis there any reason why blazor does not use the `CommandLineApplication`? ","Url":"https://github.com/aspnet/Blazor/issues/1513","RelatedDescription":"Closed issue \"support help in Blazor cli\" (#1513)"},{"Id":"366026711","IsPullRequest":false,"CreatedAt":"2018-10-03T14:45:15","Actor":"chanhong","Number":"1512","RawContent":null,"Title":"Blazor won't load in IIS","State":"closed","Body":"I created a basic Blazor application using VS 2017 and select \"Blazor\" and it runs fine in VS 2017 but when I create a website in Windows 2016 IIS that point to the \"public\" folder that I published in VS 2017, it just stuck at \"loading...\" and here are the log of the reason why it got stuck.\r\n\r\n[Blazor_IIS_stuck_at_loading_with_error.txt](https://github.com/aspnet/Blazor/files/2439214/Blazor_IIS_stuck_at_loading_with_error.txt)\r\n\r\nBlazor is what I have been waiting for a long time but not being able to run in IIS is a big obstacle!\r\n\r\nThanks\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1512","RelatedDescription":"Closed issue \"Blazor won't load in IIS\" (#1512)"},{"Id":"366047604","IsPullRequest":false,"CreatedAt":"2018-10-03T14:44:19","Actor":"VictorioBerra","Number":"1514","RawContent":null,"Title":"Why is WeatherForecastService an abstract class and not an interface?","State":"closed","Body":"This is more of a general C# question than a Blayzor question but I was just curious why `WeatherForecastService` is an abstract class implemented by `DefaultWeatherForecastService` rather than making it an interface?\r\n\r\nIs this unique to Blayzor in that is HAS to be abstract?","Url":"https://github.com/aspnet/Blazor/issues/1514","RelatedDescription":"Closed issue \"Why is WeatherForecastService an abstract class and not an interface?\" (#1514)"},{"Id":"366240472","IsPullRequest":false,"CreatedAt":"2018-10-03T14:39:56","Actor":"wstaelens","Number":"1516","RawContent":null,"Title":"Question: Does Blazor support Microsoft MAT for localization/translation management?","State":"closed","Body":"We've been using Microsoft MAT almost in every recent project (WPF, asp.net mvc, asp.net core, winforms, â€¦),\r\nDoes a Blazor project in Visual Studio 2017 also support Microsoft MAT for localization/translations of resources?\r\n\r\nhttps://multilingualapptoolkit.uservoice.com/ \r\nhttps://marketplace.visualstudio.com/items?itemName=MultilingualAppToolkit.MultilingualAppToolkit-18308#overview \r\n\r\n![mat editor](https://user-images.githubusercontent.com/7447285/46400992-161f2c00-c6fc-11e8-963d-0bfedee4959c.png)\r\n![mat multiling](https://user-images.githubusercontent.com/7447285/46400994-17505900-c6fc-11e8-8d07-687fbdc66da7.PNG)\r\n","Url":"https://github.com/aspnet/Blazor/issues/1516","RelatedDescription":"Closed issue \"Question: Does Blazor support Microsoft MAT for localization/translation management?\" (#1516)"},{"Id":"366057511","IsPullRequest":true,"CreatedAt":"2018-10-02T20:02:35","Actor":"KristianJakubik","Number":"1515","RawContent":null,"Title":"Fixing types of UIEventArgs properties.","State":"open","Body":"Hi, \r\nI found out that some properties of [UIEventArgs ](https://github.com/aspnet/Blazor/blob/master/src/Microsoft.AspNetCore.Blazor/UIEventArgs.cs)objects doesn't match with either w3 standard or with their description.\r\n\r\nExample:\r\n`public float Detail { get; set; }` \r\nshould be based on [mozilla](https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/detail) or [w3](https://www.w3.org/TR/uievents/#interface-uievent)\r\n`public long Detail { get; set; }`\r\nEven the description of property says, that it represents count of clicks incremented by 1, therefor  representing them by `long` makes more sense to me.\r\n\r\nI found several other properties with mismatching types. I can fix them and propose fixes in this PR, but at first I would like to get some feedback on this.\r\n\r\nThanks.\r\n","Url":"https://github.com/aspnet/Blazor/pull/1515","RelatedDescription":"Open PR \"Fixing types of UIEventArgs properties.\" (#1515)"},{"Id":"365967588","IsPullRequest":true,"CreatedAt":"2018-10-02T15:59:48","Actor":"danroth27","Number":"1511","RawContent":null,"Title":"Update copyright for Microsoft.AspNetCore.Blazor.Templates","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/pull/1511","RelatedDescription":"Closed or merged PR \"Update copyright for Microsoft.AspNetCore.Blazor.Templates\" (#1511)"},{"Id":"365678924","IsPullRequest":true,"CreatedAt":"2018-10-02T09:39:09","Actor":"rynowak","Number":"1507","RawContent":null,"Title":"Add required fields to build nuspec","State":"closed","Body":"These required fields are missing from the .Build nuspec, and this is blocking package upload.","Url":"https://github.com/aspnet/Blazor/pull/1507","RelatedDescription":"Closed or merged PR \"Add required fields to build nuspec\" (#1507)"},{"Id":"365682412","IsPullRequest":false,"CreatedAt":"2018-10-01T23:54:10","Actor":"danroth27","Number":"1509","RawContent":null,"Title":"Add package descriptions","State":"closed","Body":"Currently almost all of the Blazor packages have \"Package description\" for the package description. We should add meaningful descriptions","Url":"https://github.com/aspnet/Blazor/issues/1509","RelatedDescription":"Closed issue \"Add package descriptions\" (#1509)"},{"Id":"365519616","IsPullRequest":false,"CreatedAt":"2018-10-01T15:35:11","Actor":"kant2002","Number":"1506","RawContent":null,"Title":"Strange excption in OnInit","State":"open","Body":"I following scenario in 0.6.0 preview\r\n```\r\nprotected override void OnInit()\r\n    {\r\n        this.scoreOptions = new API.GetScoreOptions();\r\n    }\r\n```\r\n\r\nThis is results in the \r\n```\r\nWASM: 13\r\n```\r\n\r\nThis is quite a magic for me. I understand that this may be not an issue with Blazor itself but with Mono, but trying anything in OnInit always give me all kind of funny errors.\r\n","Url":"https://github.com/aspnet/Blazor/issues/1506","RelatedDescription":"Open issue \"Strange excption in OnInit\" (#1506)"},{"Id":"365432145","IsPullRequest":true,"CreatedAt":"2018-10-01T12:17:04","Actor":"SteveSandersonMS","Number":"1505","RawContent":null,"Title":"Fix templates with .NET Core 2.2 SDKs. Fixes #1497","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/pull/1505","RelatedDescription":"Closed or merged PR \"Fix templates with .NET Core 2.2 SDKs. Fixes #1497\" (#1505)"},{"Id":"365121868","IsPullRequest":false,"CreatedAt":"2018-10-01T11:55:36","Actor":"sth349","Number":"1500","RawContent":null,"Title":"Blazor doesn't load","State":"closed","Body":"I'm using Blazor 0.5.0.\r\nI have published the default template but when I launch the index.html chrome just displays \"loading\" and it never actually loads, normally when I run dotnet run it works but I can't use the static files.\r\nThe browser console displays:\r\n```\r\nFailed to load resource: net::ERR_FILE_NOT_FOUND /C:/css/bootstrap/bootstrap.min.css:1 \r\nFailed to load resource: net::ERR_FILE_NOT_FOUND /C:/css/site.css:1 \r\nFailed to load resource: net::ERR_FILE_NOT_FOUND blazor.webassembly.js:1 \r\n```\r\nI need the static files as I want to wrap it in a Apache Cordova container, is there a more productive way to do it?","Url":"https://github.com/aspnet/Blazor/issues/1500","RelatedDescription":"Closed issue \"Blazor doesn't load\" (#1500)"},{"Id":"365377462","IsPullRequest":false,"CreatedAt":"2018-10-01T09:28:59","Actor":"Tarmil","Number":"1504","RawContent":null,"Title":"NullReferenceException in resolve-dependencies","State":"open","Body":"I get the following error when using Blazor.Server on an F# project:\r\n\r\n```\r\nEXEC : error : Object reference not set to an instance of an object. [C:\\Users\\loic.denuziere\\my\\miniblazor\\tests\\server\\server.fsproj]\r\n     at Microsoft.AspNetCore.Blazor.Build.RuntimeDependenciesResolver.AssemblyResolutionContext.<ResolveAssemblies>g__GetAssemblyReferences|13_1(AssemblyEntry current) in /_/src/Microsoft.AspNetCore.Blazor.Build/Core/RuntimeDependenciesResolver.cs:line 103\r\n     at Microsoft.AspNetCore.Blazor.Build.RuntimeDependenciesResolver.AssemblyResolutionContext.<ResolveAssemblies>g__ResolveAssembliesCore|13_0(<>c__DisplayClass13_0& ) in /_/src/Microsoft.AspNetCore.Blazor.Build/Core/RuntimeDependenciesResolver.cs:line 91\r\n     at Microsoft.AspNetCore.Blazor.Build.RuntimeDependenciesResolver.AssemblyResolutionContext.ResolveAssemblies() in /_/src/Microsoft.AspNetCore.Blazor.Build/Core/RuntimeDependenciesResolver.cs:line 82\r\n     at Microsoft.AspNetCore.Blazor.Build.RuntimeDependenciesResolver.ResolveRuntimeDependenciesCore(String entryPoint, String[] applicationDependencies, String[] monoBclDirectories) in /_/src/Microsoft.AspNetCore.Blazor.Build/Core/RuntimeDependenciesResolver.cs:line 46\r\n     at Microsoft.AspNetCore.Blazor.Build.Cli.Commands.ResolveRuntimeDependenciesCommand.<>c__DisplayClass0_0.<Command>b__0() in /_/src/Microsoft.AspNetCore.Blazor.Build/Cli/Commands/ResolveRuntimeDependenciesCommand.cs:line 44\r\nC:\\Users\\loic.denuziere\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.7.0-preview1-20180925.6\\targets\\Blazor.MonoRuntime.targets(538,5): error MSB3073: The command \"dotnet \"C:\\Users\\loic.denuziere\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.7.0-preview1-20180925.6\\targets\\../tools/Microsoft.AspNetCore.Blazor.Build.dll\" resolve-dependencies \"C:\\Users\\loic.denuziere\\my\\miniblazor\\tests\\server\\obj\\Debug\\netcoreapp2.0\\server.dll\" --references \"C:\\Users\\loic.denuziere\\my\\miniblazor\\tests\\server\\obj\\Debug\\netcoreapp2.0\\blazor\\resolve-dependencies.txt\" --base-class-library \"C:\\Users\\loic.denuziere\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.7.0-preview1-20180925.6\\targets\\../tools/mono/bcl/\" --base-class-library \"C:\\Users\\loic.denuziere\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.7.0-preview1-20180925.6\\targets\\../tools/mono/bcl/Facades/\" --output \"C:\\Users\\loic.denuziere\\my\\miniblazor\\tests\\server\\obj\\Debug\\netcoreapp2.0\\blazor\\resolved.assemblies.txt\"\" exited with code 1. [C:\\Users\\loic.denuziere\\my\\miniblazor\\tests\\server\\server.fsproj]\r\n```\r\n\r\nI ran this with a locally built Razor with print debugging to find what was going on, and it seems that the problem is that it can't find `System.Buffers.dll`; it's not copied locally, and it's not in mono's stdlib either. And indeed, the issue disappears if I add this to my project:\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <ReferenceCopyLocalPaths Include=\"$(NuGetPackageRoot)system.buffers/4.5.0/lib/netstandard2.0/System.Buffers.dll\" />\r\n  </ItemGroup>\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1504","RelatedDescription":"Open issue \"NullReferenceException in resolve-dependencies\" (#1504)"},{"Id":"365333738","IsPullRequest":false,"CreatedAt":"2018-10-01T07:10:30","Actor":"msimpsonnz","Number":"1503","RawContent":null,"Title":"Having issues with NavigateTo","State":"open","Body":"Hi\r\nI am having issues with NavigateTo function after submitting a page, it supper simple but cannot seem to make any progress\r\n\r\nThis is my method I am calling but as soon as the Post message happens it just refreshed the page I was on and doesn't redirect to the new page with the Id, am I doing something wrong? Just updated to Blazor 0.6 and using .NET Core 2.1\r\n\r\n```\r\n        protected async Task SubmitForm()\r\n        {\r\n            var request = await Http.PostJsonAsync<ModeratorResult>(\"/api/moderator/ScreenText\", ci);\r\n            UriHelper.NavigateTo($\"/tickets/{request.TrackingId}\");\r\n\r\n        }\r\n```\r\n\r\nFull code is here\r\nhttps://github.com/msimpsonnz/fn18/tree/master/src/FN18.Blazor.Client\r\n","Url":"https://github.com/aspnet/Blazor/issues/1503","RelatedDescription":"Open issue \"Having issues with NavigateTo\" (#1503)"},{"Id":"365247918","IsPullRequest":false,"CreatedAt":"2018-10-01T02:04:49","Actor":"edwardyehuang","Number":"1502","RawContent":null,"Title":"Blazor (ASP.NET Core hosted) project create failed","State":"closed","Body":"When I tried to create a project in Visual studio with \"Blazor (ASP.NET Core hosted) \" template, its create 3 folders:\r\n\r\n- XXXX.shared\r\n- XXXX.server\r\n- XXXX.client\r\n\r\nOnly the shared project is loaded Others cannot be loaded and seems incompleted.\r\n","Url":"https://github.com/aspnet/Blazor/issues/1502","RelatedDescription":"Closed issue \"Blazor (ASP.NET Core hosted) project create failed\" (#1502)"},{"Id":"365197050","IsPullRequest":true,"CreatedAt":"2018-09-30T21:31:29","Actor":"danroth27","Number":"1501","RawContent":null,"Title":"Update survey link for 0.6.0","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/pull/1501","RelatedDescription":"Closed or merged PR \"Update survey link for 0.6.0\" (#1501)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-10-06T05:30:03.3696676Z","RunDurationInMilliseconds":1322}