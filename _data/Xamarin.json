{"Data":{"Blog":{"FeedItems":[{"Title":"Attend A .NET Conf Event Near You!","PublishedOn":"2018-08-15T20:29:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you have not yet heard of the .NET Conf, it is a FREE, 3-day virtual developer event co-organized by the .NET community and Microsoft. There is a wide selection of live sessions with feature...","Href":"https://blog.xamarin.com/attend-a-net-conf-event-near-you/","RawContent":null},{"Title":"Preview: iOS 12 development with Xamarin","PublishedOn":"2018-08-10T16:30:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The latest Xamarin preview release supports Xcode 10 beta 5, which includes beta SDKs for iOS 12, macOS Mojave (10.14), watchOS 5, and tvOS 12. Get Started With New iOS 12 APIs Today: iOS 12 includes...","Href":"https://blog.xamarin.com/preview-ios-12-development-with-xamarin/","RawContent":null},{"Title":"Securing network traffic with TLS 1.2","PublishedOn":"2018-08-07T15:58:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Secure and encrypted network communications are a crucial part of mobile application development. Without some kind of security around the communication layer, it is trivial for a third party to...","Href":"https://blog.xamarin.com/securing-network-traffic-with-tls-1-2/","RawContent":null},{"Title":"Adaptive Mobile Designs with FlexLayout","PublishedOn":"2018-08-03T17:33:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms is fantastic for quickly shipping a single code base to multiple platforms and devices. As soon as you are present on all those different screens, you need to make sure your UI looks as...","Href":"https://blog.xamarin.com/adaptive-mobile-designs-with-flexlayout/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in August!","PublishedOn":"2018-08-01T19:46:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This year&#8217;s .NET Conf is coming to you September 12 &#8211; 14, 2018! Over the course of the three days, you have a wide selection of live sessions that feature speakers from the community and...","Href":"https://blog.xamarin.com/xamarin-dotnet-developer-events-august/","RawContent":null},{"Title":"Guest Post: Visual UI tests on iOS simulator using Xamarin and Appium","PublishedOn":"2018-07-30T19:07:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Sophie Tagar, a customer support engineer at Applitools. Previously, Sophie was a software developer at Matrix Israel where, among other things, she did full stack...","Href":"https://blog.xamarin.com/visual-ui-tests-ios-simulator-using-xamarin-appium/","RawContent":null},{"Title":"Announcing Xamarin.Android 9.0 (P) Preview","PublishedOn":"2018-07-27T16:11:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Android 9.0 (P) introduces many features such as Wi-Fi RTT(Round-Trip-Time), Display cutout support, Notification enhancements, Multi-camera support, and much more. We&#8217;re excited to announce...","Href":"https://blog.xamarin.com/xamarin-android-9-0-p-preview/","RawContent":null},{"Title":"Previewing Files Inside Your Xamarin.iOS App","PublishedOn":"2018-07-25T18:21:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If your app interacts with files, such as email attachments or photos, allowing users to preview those files without leaving your app is a great way to enhance the user&#8217;s experience....","Href":"https://blog.xamarin.com/previewing-files-with-xamarin-ios/","RawContent":null},{"Title":"Xamarin.Forms 3.1: Improving the Little Things","PublishedOn":"2018-07-18T19:27:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Earlier this year, we surveyed Xamarin.Forms developers about the kinds of custom controls and extra platform code being written repeatedly that should be considered for support “in the box”. From...","Href":"https://blog.xamarin.com/xamarin-forms-3-1-improvments/","RawContent":null},{"Title":"Export To Application Insights With AppCenter Continuous Export","PublishedOn":"2018-07-10T03:35:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Five-star mobile apps have one special feature: they don’t let go of their users. This can be achieved by understanding your app, the app’s users, and how these users interact with your app. The deep...","Href":"https://blog.xamarin.com/appcenter-continuous-export-application-insights/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8131396457","Type":"PullRequestEvent","CreatedAt":"2018-08-17T22:37:35","Actor":"luhenry","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1726","RelatedDescription":"Closed pull request \"[mono-sdks] Integrate with mono/mono#6500\" (#1726) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8131395951","Type":"PullRequestEvent","CreatedAt":"2018-08-17T22:37:21","Actor":"luhenry","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2080","RelatedDescription":"Opened pull request \"[mono-sdks] Integrate with `mono:2018-06-sdks-standalone`\" (#2080) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8131284200","Type":"IssuesEvent","CreatedAt":"2018-08-17T21:59:25","Actor":"sglorz","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2079","RelatedDescription":"Opened issue \"TableView Height same as Width\" (#2079) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nI created a TableView in my application. For iOS and UWP, everything is fine. For Android, the Height of the TableView is not properly calulated as it is equal to its Width.\r\n\r\n### Version Information\r\n\r\nVS 2017\r\nXamarin.Forms 3.1.0.697729\r\n"},{"Id":"8130848446","Type":"IssuesEvent","CreatedAt":"2018-08-17T20:04:52","Actor":"inetconnector","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2078","RelatedDescription":"Closed issue \"Android Wear classes for complications missing (SetAcceptsTapEvents, usings,...\" (#2078) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nTried to create a watchface with complications for Android\r\ni did not find the necessary classes like\r\n\r\n**using Android.Support.Wearable.Complications.ComplicationData;\r\nusing Android.Support.Wearable.Complications.Rendering.ComplicationDrawable;**\r\n\r\npublic override void OnCreate( ISurfaceHolder holder ) {\r\nSetWatchFaceStyle(\r\n\t\t\t\t\tnew WatchFaceStyle.Builder( owner ) \r\n\t\t\t\t\t\t. **_SetAcceptsTapEvents_**\r\n\r\n**public override void OnTapCommand( int tapType, int xValue, int yValue, long eventTime ) {\r\n ..\r\n}**"},{"Id":"8130791291","Type":"IssuesEvent","CreatedAt":"2018-08-17T19:50:56","Actor":"inetconnector","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2078","RelatedDescription":"Opened issue \"Android Wear classes for complications missing (SetAcceptsTapEvents, usings,...\" (#2078) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nTried to create a watchface with complications for Android\r\ni did not find the necessary classes like\r\n\r\n**import Android.Support.Wearable.Complications.ComplicationData;\r\nimport Android.Support.Wearable.Complications.Rendering.ComplicationDrawable;**\r\n\r\npublic override void OnCreate( ISurfaceHolder holder ) {\r\nSetWatchFaceStyle(\r\n\t\t\t\t\tnew WatchFaceStyle.Builder( owner ) \r\n\t\t\t\t\t\t. **_SetAcceptsTapEvents_**\r\n\r\n**public override void OnTapCommand( int tapType, int xValue, int yValue, long eventTime ) {\r\n ..\r\n}**"},{"Id":"8130717475","Type":"IssuesEvent","CreatedAt":"2018-08-17T19:33:14","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2077","RelatedDescription":"Opened issue \"See if we can better support MSBuildSdkExtras\" (#2077) at xamarin/xamarin-android","RelatedBody":"### The Problem\r\n\r\nVarious NuGet authors are using [MSBuildSdkExtras](https://github.com/onovotny/MSBuildSdkExtras), to use a single project file and target multiple frameworks, such as: `net46`, `netstandard2.0`, `MonoAndroid60`, `MonoAndroid80`, etc.\r\n\r\nThis brings up a few issues:\r\n- We don't have a test verifying that a project built with `MSBuildSdkExtras` works. We probably don't want to break it.\r\n- I saw some issues brought up on #1628, for example, we are using `obj\\monoandroid81\\MonoAndroid81` as our `$(IntermediateOutputPath)` on Windows...\r\n- Most frameworks built in parallel, while `MonoAndroid` is not. We need to see if we have a setting causing is, is it intentional, etc.?\r\n- Currently it looks like Xamarin.Android is the slowest framework in these types of projects. Can we do anything to improve this? These projects are not app projects, but library projects. Generally, they might not even use `Resource.designer.cs` or other Android-like things.\r\n\r\n### Expected Behavior\r\n\r\n`MSBuildSdkExtras` should give NuGet authors a reasonably good experience.\r\n\r\n### Actual Behavior\r\n\r\nIt seems like there are a few issues with Xamarin.Android when using `MSBuildSdkExtras`.\r\n\r\n### Version Information\r\n\r\nI noted all behavior on VS Windows 15.8.0.\r\n\r\n/cc @jeromelaban"},{"Id":"8129857000","Type":"PullRequestEvent","CreatedAt":"2018-08-17T16:22:06","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2074","RelatedDescription":"Merged pull request \"Bump to xamarin-android-tools/master/9e78d6e\" (#2074) at xamarin/xamarin-android","RelatedBody":"Context; https://github.com/xamarin/xamarin-android-tools/compare/917d3b3...9e78d6e\r\n\r\nFixes for OpenJDK:\r\nhttps://github.com/xamarin/xamarin-android-tools/pull/43\r\nhttps://github.com/xamarin/xamarin-android-tools/pull/45\r\n\r\nBetter logging: https://github.com/xamarin/xamarin-android-tools/pull/46\r\n\r\nFix for missing JDKs on MacOS: https://github.com/xamarin/xamarin-android-tools/pull/48\r\n\r\nTests now pass on Windows: https://github.com/xamarin/xamarin-android-tools/pull/47"},{"Id":"8127107372","Type":"IssuesEvent","CreatedAt":"2018-08-17T06:38:56","Actor":"xamarin-release-manager","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1799","RelatedDescription":"Closed issue \"App not showing updated axml designer controls until I close VS\" (#1799) at xamarin/xamarin-android","RelatedBody":"_From @PinkoAgrawal on May 31, 2018 11:39_\n\n<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nWhen I am updating designer (Say changing margins, color of controls) it is not getting affected after executing app to the emulators until I close visual studio & it again.\r\n### Steps to Reproduce\r\nCreated project try to make modifications in axml files & execute app.\r\n \r\n### Expected Behavior\r\n### Actual Behavior\r\n\r\n### Basic Information\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.7.1\r\nVisualStudio.15.Release/15.7.1+27703.2000\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Enterprise\r\n\r\nArchitecture Diagrams and Analysis Tools   00369-60000-00001-AA519\r\nMicrosoft Architecture Diagrams and Analysis Tools\r\n\r\nApplication Insights Tools for Visual Studio Package   8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nC# Tools   2.8.0-beta6-62830-08. Commit Hash: e595ee276d14e14bfb3eb323fb57f2aa668bddea\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nVisual Basic Tools   2.8.0-beta6-62830-08. Commit Hash: e595ee276d14e14bfb3eb323fb57f2aa668bddea\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27703.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWeb Extension Pack 2017   15.0.4\r\nThe easiest way to set up Visual Studio for the ultimate web development experience.\r\n\r\nXamarin   4.10.0.442 (396b18cef)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.264 (fc37cd02e)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.0.19 (HEAD/342b2ce96)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\n\r\n### Screenshots\r\n![xamandroidissue](https://user-images.githubusercontent.com/38238586/40780228-4521a26c-64f5-11e8-88a3-ea117f5bf2b3.png)\r\n\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n\n\n_Copied from original issue: xamarin/Xamarin.Forms#2883_\n\n> VS bug [#631310](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/631310)"},{"Id":"8127107337","Type":"IssuesEvent","CreatedAt":"2018-08-17T06:38:56","Actor":"xamarin-release-manager","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1500","RelatedDescription":"Closed issue \"Black screen on layout preview\" (#1500) at xamarin/xamarin-android","RelatedBody":"When upating in last xamarin tools version and trying opening layout preview i get only a black screen. In previous versions all worked fine. \r\n\r\nwindows 7 64bit\r\nvs 2015 update 3\r\nGtx 1070 msi\r\ni7-6700k\r\nxamarin tools last version\n\n> VS bug [#609042](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/609042)"},{"Id":"8127060762","Type":"IssuesEvent","CreatedAt":"2018-08-17T06:24:48","Actor":"MagicAndre1981","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2076","RelatedDescription":"Opened issue \"Could not load assembly 'System.Security.Permissions' during startup registration.\" (#2076) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  create Xamarin.Forms app with VS2017 (that uses Asp.Net Core SignalR)\r\n2.  try do debug the Android app\r\n\r\n### Expected Behavior\r\n\r\napp starts fine and can be debugged. \r\n\r\n### Actual Behavior\r\n\r\nApp crashes at startup and in Output/Debug I see the following:\r\n\r\n```\r\n[08-17 08:09:21.513 D/Mono    (17682): Assembly Loader probing location: 'System.Security.Permissions'.\r\n08-17 08:09:21.513 F/monodroid-assembly(17682): Could not load assembly 'System.Security.Permissions' during startup registration.\r\n08-17 08:09:21.513 F/monodroid-assembly(17682): This might be due to an invalid debug installation.\r\n08-17 08:09:21.513 F/monodroid-assembly(17682): A common cause is to 'adb install' the app directly instead of doing from the IDE.\r\n```\r\n\r\n### Version Information\r\n\r\n```\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.8.0\r\nVisualStudio.15.Release/15.8.0+28010.0\r\nMicrosoft .NET Framework\r\nVersion 4.7.03062\r\n\r\nXamarin   4.11.0.732 (d15-8@33e83e124)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.14.218 (79f535bdd)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Live Reload   0.4.0 (remotes/origin/dev@75526a0)\r\nProvides live reload capabilities for Xamarin XAML.\r\n\r\nXamarin Templates   1.1.113 (e1d02a7)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.18 (HEAD/3d8a28f1a)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.14.0.13 (373c313)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n```\r\n\r\nI also played with settings for Mono Shared Runtime/Linking/apk per ABi, installed [OpenJDK](https://docs.microsoft.com/en-us/xamarin/android/get-started/installation/openjdk), but nothing helps. \r\n\r\n**The strange thing is that I was able to build/launch the app in the 15.8 preview 5 without any issues and now in the 15.8 stable I have the issues again like in 15.7.x.**"},{"Id":"8125909410","Type":"PullRequestEvent","CreatedAt":"2018-08-16T22:56:09","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2075","RelatedDescription":"Opened pull request \"[build] Improve a few items for new contributors\" (#2075) at xamarin/xamarin-android","RelatedBody":"Update an old mention of Xamarin Studio.\r\n\r\nAdjust capitalization in a couple links in the README so they match the\r\nanchor names.\r\n\r\nAdd an error early in the preparation targets to let contributors know\r\nthat having spaces in the Android NDK path will lead to errors during\r\nthe build.\r\n\r\nFix a little typo in the order of arguments to `SymbolicLink.Create()`\r\nin `xabuild` so that the system directories are linked into the build\r\noutput directory.  This code only runs if the directories in the build\r\noutput directory do *not exist*, so the goal is to link the system\r\nversions of the .NETFramework and .NETPortable directories into the\r\nbuild output directory."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8131359414","Type":"IssuesEvent","CreatedAt":"2018-08-17T22:24:06","Actor":"AmrAlSayed0","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3606","RelatedDescription":"Opened issue \"x:DataType tries to force compile bindings which have a Source and Path property set\" (#3606) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nSetting the x:DataType of the DataTemplate of a ListView that has a binding to a different object than the current binding context like this\r\n```xml\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             xmlns:viewModels=\"clr-namespace:DataTypeSourceBug.ViewModels;assembly=DataTypeSourceBug\"\r\n             x:Class=\"DataTypeSourceBug.MainPage\"\r\n             x:Name=\"Page\">\r\n    <ContentPage.BindingContext>\r\n        <viewModels:MainPageViewModel />\r\n    </ContentPage.BindingContext>\r\n    <ListView ItemsSource=\"{Binding StringList}\">\r\n        <ListView.ItemTemplate>\r\n            <DataTemplate x:DataType=\"x:String\">\r\n                <Label Text=\"{Binding .}\">\r\n                    <Label.GestureRecognizers>\r\n                        <TapGestureRecognizer Command=\"{Binding Path=BindingContext.InsideListViewCommand,Source={x:Reference Page}}\"\r\n                                              CommandParameter=\"{Binding .}\" />\r\n                    </Label.GestureRecognizers>\r\n                </Label>\r\n            </DataTemplate>\r\n        </ListView.ItemTemplate>\r\n    </ListView>\r\n</ContentPage>\r\n```\r\nproduces an error while compiling with the following stack trace\r\n```\r\n  Resource: DataTypeSourceBug.Views.MainPage.xaml...\r\n   Creating empty MainPage.__InitComponentRuntime ...done.\r\n   Copying body of InitializeComponent to __InitComponentRuntime ...done.\r\n   Parsing Xaml... done.\r\n   Replacing MainPage.InitializeComponent ()... failed.\r\nViews\\MainPage.xaml(17,47): error : Position 17:47. Binding: Property 'BindingContext' not found on 'System.String'\r\n   at Xamarin.Forms.Build.Tasks.SetPropertiesVisitor.ParsePath(String path, TypeReference tSourceRef, IXmlLineInfo lineInfo, ModuleDefinition module)\r\n   at Xamarin.Forms.Build.Tasks.SetPropertiesVisitor.<CompileBindingPath>d__30.MoveNext()\r\n   at Xamarin.Forms.Build.Tasks.SetPropertiesVisitor.<ProvideValue>d__29.MoveNext()\r\n   at Xamarin.Forms.Build.Tasks.ILProcessorExtensions.Append(ILProcessor processor, IEnumerable`1 instructions)\r\n   at Xamarin.Forms.Build.Tasks.SetPropertiesVisitor.Visit(ElementNode node, INode parentNode)\r\n   at Xamarin.Forms.Xaml.ElementNode.Accept(IXamlNodeVisitor visitor, INode parentNode)\r\n   at Xamarin.Forms.Xaml.ElementNode.Accept(IXamlNodeVisitor visitor, INode parentNode)\r\n   at Xamarin.Forms.Xaml.ElementNode.Accept(IXamlNodeVisitor visitor, INode parentNode)\r\n   at Xamarin.Forms.Build.Tasks.SetPropertiesVisitor.SetDataTemplate(IElementNode parentNode, ElementNode node, ILContext parentContext, IXmlLineInfo xmlLineInfo)\r\n   at Xamarin.Forms.Build.Tasks.SetPropertiesVisitor.Visit(ElementNode node, INode parentNode)\r\n   at Xamarin.Forms.Xaml.ElementNode.Accept(IXamlNodeVisitor visitor, INode parentNode)\r\n   at Xamarin.Forms.Xaml.ElementNode.Accept(IXamlNodeVisitor visitor, INode parentNode)\r\n   at Xamarin.Forms.Xaml.ElementNode.Accept(IXamlNodeVisitor visitor, INode parentNode)\r\n   at Xamarin.Forms.Xaml.RootNode.Accept(IXamlNodeVisitor visitor, INode parentNode)\r\n   at Xamarin.Forms.Build.Tasks.XamlCTask.TryCoreCompile(MethodDefinition initComp, MethodDefinition initCompRuntime, ILRootNode rootnode, Exception& exception)\r\n```\r\n### Steps to Reproduce\r\n\r\n1. Try to build the attached repo. \r\n\r\n### Expected Behavior\r\nCompiles fine without trying to compile the bindings that use different Source and Path\r\n### Actual Behavior\r\nError when compiling\r\n### Basic Information\r\n\r\n- Version with issue: 3.1.0\r\n- Last known good version:\r\n- IDE: Visual Studio 15.8\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:\r\n  - Android:\r\n  - UWP:\r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n[DataTypeSourceBug.zip](https://github.com/xamarin/Xamarin.Forms/files/2298886/DataTypeSourceBug.zip)\r\n"},{"Id":"8131067094","Type":"PullRequestEvent","CreatedAt":"2018-08-17T20:58:38","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3605","RelatedDescription":"Opened pull request \"[Core] When building SLN Forms.Core dll doesn't generate\" (#3605) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nWhen building Xamarin.Forms.SLN fresh the build fails because the Xamarin.Forms.Core.dll doesn't get produced.\r\n\r\nIf you manually build Xamarin.Forms.Core.csproj first then it produces the dll and everything works fine after that.\r\n\r\nIf you remove the *XFCorePostProcessor UsingTask* then everything compiles fine first go, but this Task shouldn't get in the way of producing \"Xamarin.Forms.Core.dll\". \r\n\r\nLooking at the build output it looks like msbuild makes the wrong determination about whether it should be running *Csc*\r\n\r\n```\r\n1>  Skipping target \"CoreCompile\" because all output files are up-to-date with respect to the input files.\r\n```\r\n\r\nI'll log a separate issue with Visual Studio \r\n\r\n### Platforms Affected ###\r\n\r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8130487363","Type":"IssuesEvent","CreatedAt":"2018-08-17T18:40:00","Actor":"asdiomar1","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3604","RelatedDescription":"Opened issue \"Bindings in span are not working\" (#3604) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nI have an span in wich I'm trying to bind values. I'm following the steps provided in this link: https://github.com/xamarin/Xamarin.Forms/issues/1340\r\nPD: I created a property in my  ViewModel wich implements INotifyPropertyChanged.\r\n\r\n### Expected Behavior\r\nBe able to bind values to span\r\n### Actual Behavior\r\nValues are not reflected in span\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- IDE: Visual Studio 2017 for Windows\r\n- Android: 7.1\r\n- Xamarin forms 3.1.0.697729\r\n\r\n### Reproduction Link\r\n\r\nMy XAML:\r\n`<Label HorizontalOptions=\"EndAndExpand\" Grid.Column=\"1\">\r\n                        <Label.FormattedText>\r\n                            <FormattedString>\r\n                                <Span Text=\"{Binding ListCount}\"/>\r\n                                <Span Text=\"/\"/>\r\n                                <Span Text=\"15\"/>\r\n                            </FormattedString>\r\n                        </Label.FormattedText>\r\n                    </Label>`\r\n"},{"Id":"8130351249","Type":"IssuesEvent","CreatedAt":"2018-08-17T18:10:04","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3603","RelatedDescription":"Opened issue \"[Android] Unable to activate instance of type Xamarin.Forms.Platform.Android.ListViewAdapter when using nested ListViews and DataTemplateSelector\" (#3603) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nListView\r\n-DatatemplateSelector\r\n--Listview\r\n\r\n\r\nWhen swapping out the ItemSource on the parent ListView you'll get an exception of\r\n*Unable to activate instance of type Xamarin.Forms.Platform.Android.ListViewAdapter*\r\n\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/4d5a1f5482eeb43661d0ac972262e09c53e61117/Xamarin.Forms.Platform.Android/Renderers/ListViewRenderer.cs#L153\r\n\r\n\r\n### Steps to Reproduce\r\n1. Run Control Gallery for Issue3408\r\n2. Click Change Source\r\n3. Click Change Property\r\n4. Click Change Source\r\n5. Crash\r\n\r\n### Expected Behavior\r\nNo crash and ItemSource swaps out fine\r\n\r\n### Actual Behavior\r\nCrashes\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3,2\r\n- Last known good version: Not sure\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 8.0"},{"Id":"8130206687","Type":"IssuesEvent","CreatedAt":"2018-08-17T17:39:00","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3602","RelatedDescription":"Opened issue \"Retain Strategy on Listview with DataTemplateSelector causes BindingContext to revert to null\" (#3602) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nThe issue seems to come up because of this await\r\n\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/a9a7277ad8d6b40a9f28081c248ba282a6476d95/Xamarin.Forms.Core/TemplatedItemsList.cs#L1206\r\n\r\nThe await happens, a new template is swapped in, and then the above code sets the BindingContext back to null. If you set the ListView Cache strategy to Recycle the issue doesn't happen because that await doesn't occur\r\n\r\nFor example I had to do this little hack here\r\n\r\nhttps://github.com/xamarin/Xamarin.Forms/pull/3518/files#diff-bb6d28847711cc5f78841d28a70d000bR168\r\n\r\nTo make sure the BindingContext doesn't get reset back to null after already being set inside the DataTemplateSelector\r\n\r\n\r\n### Reproduction\r\nIn the Control Gallery remove the hack I added above and you'll see the effect of the BindingContext getting set and then unset to null because of the race condition\r\n\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8131640783","Type":"PullRequestEvent","CreatedAt":"2018-08-18T00:28:19","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4644","RelatedDescription":"Opened pull request \"[CoreGraphics] Fix CGFunction to work after being disposed.\" (#4644) at xamarin/xamarin-macios","RelatedBody":"We have a test for CGFunction, and in iOS 12 the behavior changed where\npreviously the CGFunction was invoked immediately when rendering, it's now\nretained and only called later.\n\nThis is troublesome for the test, because it disposes the managed CGFunction\nwhen it thinks it's completed. Since the function is invoked way later, the\ntest now crashes. Ops.\n\nThe obvious fix is to change the test to dispose the CGFunction later. This\nfalls flat when finding out that \"later\" is undetermined. Native code retains\nthe CGFunction, and can do whatever it wishes with it until it's released, and\nthere's no way to know when that is.\n\nOK: what about not disposing the CGFunction, and letting the GC do its job?\nThis also falls flat, because there's a circular reference between the native\nCGFunction and the managed wrapper, preventing any of them from being released\nautomatically by the GC. The only way to break the circular reference is to\ndispose the managed wrapper.\n\nSo, can we fix the circular reference? Unfortunately not, because we can't\nmonitor the native CGFunction's retain count, which is required in order to\nswitch the native->managed link between weak and strong according to the\nretain count.\n\nThis leaves one solution (that I could come up with at least): make sure\neverything works fine after disposing the managed wrapper.\n\nThis involves a few things:\n\n* Only break the native->managed connection (the 'gch' GCHandle) when the\n  native CGFunction is freed. This is accomplished by using the API provided\n  by Apple for exactly that purpose (the 'release' callback field in the\n  'CGFunctionCallbacks' struct).\n\n* Use a static variable for the 'CGFunctionCallback' struct and its contents.\n  This solves another potential problem: the GC could have collected the\n  delegate to the 'EvaluateCallback' function at any point.\n\n* Don't null out the 'evaluate' delegate in Dispose. This leaves the user with\n  no way to break a potential circular reference through that delegate (since\n  it will never be null), so provide a property that makes it possible for\n  users to explicitly null out the delegate ('EvaluateFunction').\n\n* Only call the 'evaluate' callback if it's not null.\n\nThis also has the additional advantage that test (and any customer code\nrunning into the same issue) works without modifications."},{"Id":"8131461360","Type":"PullRequestEvent","CreatedAt":"2018-08-17T23:01:53","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4643","RelatedDescription":"Opened pull request \"[F# tests] Default to LinkSdk for device builds.\" (#4643) at xamarin/xamarin-macios","RelatedBody":"Makes device builds (and uploads) much faster.\n\nI've checked all other tests, and this was the only one not using LinkSdk\n(except tests that don't on purpose, such as linker tests)."},{"Id":"8131415793","Type":"PullRequestEvent","CreatedAt":"2018-08-17T22:44:37","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4639","RelatedDescription":"Merged pull request \"Try to fix random make failure in src/ by not using pattern rules.\" (#4639) at xamarin/xamarin-macios","RelatedBody":"Randomly make 3.81 says this:\n\n    error CS0006: Metadata file 'build/ios/reference/MonoTouch.Dialog-1.dll' could not be found\n\nThe makefile seems fine, and it also doesn't happen when using make 4.21, so\nthis looks like a make bug.\n\nSo rewrite the troublesome rule to not be a pattern rule, and cross some fingers."},{"Id":"8131316720","Type":"IssuesEvent","CreatedAt":"2018-08-17T22:09:43","Actor":"bradumbaugh","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4642","RelatedDescription":"Opened issue \"[Xcode 10] Binding for GetLanguageHypotheses returning wrong type\" (#4642) at xamarin/xamarin-macios","RelatedBody":"\r\n### Steps to Reproduce\r\n\r\nInspect the binding for `NLLanguageRecognizer.GetLanguageHypotheses`:\r\n\r\n`public Dictionary<NLLanguage, nuint> GetLanguageHypotheses (nuint maxHypotheses)`\r\n\r\nThis method is a wrapper around\r\n\r\n`public virtual NSDictionary<NSString, NSNumber> GetNativeLanguageHypotheses (nuint maxHypotheses)`\r\n\r\nThe wrapper method returns a `Dictionary<NLLanguage, nuint>`, whereas the wrapped method returns `NSDictionary<NSString, NSNumber>`. Since the values in the dictionary represent [probabilities](https://developer.apple.com/documentation/naturallanguage/nllanguagerecognizer/2976561-languagehypotheseswithmaximum?language=objc), this is a loss in specificity.\r\n\r\n### Expected Behavior\r\n\r\nReturned Dictionary should have values of a type that can represent fractional numbers.\r\n\r\n### Actual Behavior\r\n\r\nReturned Dictionary has `nuint` values.\r\n\r\n### Environment\r\n\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.5.4 (build 7)\r\nInstallation UUID: 623d8c09-02dc-4241-ad34-5c29ea2d12f7\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.193 (master / 64fece5f)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.3\r\nSDK: /usr/local/share/dotnet/sdk/2.1.301/Sdks\r\nSDK Versions:\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14320.2.4)\r\nBuild 10L221o\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.99.2.250 (Visual Studio Enterprise)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.99.2.130 (Visual Studio Enterprise)\r\nHash: 86e97b10\r\nBranch: HEAD\r\nBuild date: 2018-08-04 01:01:50-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/bradumbaugh/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t2.3   (API level 10)\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.2   (API level 17)\r\n\t\t4.4   (API level 19)\r\n\t\t5.0   (API level 21)\r\n\t\t6.0   (API level 23)\r\n\t\t7.0   (API level 24)\r\n\t\t7.1   (API level 25)\r\n\t\t8.1   (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.0\r\nSDK Build Tools Version: 28.0.0\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705040007\r\nGit revision: 1fcae95fd5b606f806c3b1d445237f675c395fdd\r\nBuild date: 2018-08-02 18:48:50+00\r\nXamarin addins: 48a82b251ec0ef78cb92223061ea448f967f4ec2\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nMonoGame Extension 3.7.0.1\r\nVim 0.61.0\r\nInternet of Things (IoT) development (Preview) 7.5.3\r\n\r\n"},{"Id":"8130938471","Type":"PullRequestEvent","CreatedAt":"2018-08-17T20:26:32","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4641","RelatedDescription":"Opened pull request \"[mtouch] Add the option of always weak link a framework. Fixes #4628\" (#4641) at xamarin/xamarin-macios","RelatedBody":"Linking with CoreNFC crash applications on iOS 12 on iPad (and likely\nother device not supporting, or supported, for NFC).\n\nThis used to work on iOS 11.x (when introduced). The solution is to\nalways **weak** link CoreNFC (since we can't guess devices)\n\nhttps://github.com/xamarin/xamarin-macios/issues/4628"},{"Id":"8130744001","Type":"PullRequestEvent","CreatedAt":"2018-08-17T19:39:40","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4640","RelatedDescription":"Opened pull request \"[IntentsUI] Update for Xcode 10 beta 6\" (#4640) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8129791257","Type":"IssuesEvent","CreatedAt":"2018-08-17T16:08:43","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4305","RelatedDescription":"Closed issue \"Default MasterDetail template crashes with Xcode 10 beta 2\" (#4305) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Create a new iOS Master Detail template\r\n2. Launch on iOS simulator (with Xcode 10 beta 2 selected)\r\n3. App crashes\r\n\r\n### Expected Behavior\r\n\r\nThe app shouldn't crash.\r\n\r\n_Note: workaround, enable the linker._\r\n\r\n### Actual Behavior\r\n\r\nhttps://gist.github.com/VincentDondain/d4dc8d59052a311264211833b2739761\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac ===\r\n\r\nVersion 7.5.2 (build 40)\r\nInstallation UUID: 00d602ef-271b-479b-9054-0433b5797215\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0-preview2-25407-01\r\n\t1.1.2\r\n\t1.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0-preview2-006497\r\n\t1.0.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14274.19)\r\nBuild 10L177m\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.99.0.74 (Visual Studio Enterprise)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.99.0.74 (Visual Studio Enterprise)\r\nHash: 5ef269076\r\nBranch: arkit-b2\r\nBuild date: 2018-06-20 12:16:21-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.3.2 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/vidondai/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t2.3 (API level 10)\r\n\t\t4.3 (API level 18)\r\n\t\t6.0 (API level 23)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705020040\r\nGit revision: cfe2fc0566bc4db990242959de40505a13f58352\r\nBuild date: 2018-05-30 11:24:18-04\r\nXamarin addins: 3ac7413ef51a88e06367313c27aec8f7292752a6\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.5\r\nDarwin 17.6.0 Darwin Kernel Version 17.6.0\r\n    Tue May  8 15:22:16 PDT 2018\r\n    root:xnu-4570.61.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nAddinMaker 1.4.2\r\nNuGet Package Explorer 0.2\r\nInternet of Things (IoT) development (Preview) 7.5\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\nhttps://gist.github.com/VincentDondain/ae113d4a50f813ccfdc088aefad8143f\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\nSee repro steps.\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"8129786479","Type":"IssuesEvent","CreatedAt":"2018-08-17T16:07:48","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4532","RelatedDescription":"Closed issue \"Simulator apps with Xcode 10 are not full screen and you can't interact\" (#4532) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Create a new Single View app using VSMac's templates\r\n2. Run on simulator\r\n3. See that the app isn't full screen (2 black bars), the top of the simulator is messed up and you can't interact.\r\n\r\n### Expected Behavior\r\n\r\nFull screen app, behaving normally.\r\n\r\n### Actual Behavior\r\n\r\nCan be seen in this video https://www.dropbox.com/s/s1azhk66c4r6r7e/DualSim.mov?dl=0\r\nOr this screenshot:\r\n\r\n<img width=\"545\" alt=\"screenshot 2018-07-31 11 09 58\" src=\"https://user-images.githubusercontent.com/7839202/43469368-00817788-94b4-11e8-90d2-9759ccddad40.png\">\r\n\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac (Preview) ===\r\n\r\nVersion 7.7 Preview (7.7 build 762)\r\nInstallation UUID: 00d602ef-271b-479b-9054-0433b5797215\r\nRuntime:\r\n\tMono 5.10.1.57 (2017-12/ea8a24b1bbf) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 510010057\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.0-preview2-25407-01\r\n\t1.1.2\r\n\t1.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.301/Sdks\r\nSDK Versions:\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.0-preview2-006497\r\n\t1.0.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.0.0.17 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/vidondai/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t2.3 (API level 10)\r\n\t\t4.3 (API level 18)\r\n\t\t6.0 (API level 23)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 1.0.629.0\r\nHash: ccfe436f\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14320.2.4)\r\nBuild 10L221o\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.99.2.219 (Visual Studio Enterprise)\r\nHash: 1ed3eab16\r\nBranch: arkit-aranchorcopying\r\nBuild date: 2018-07-31 10:41:40-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.99.2.99 (Visual Studio Enterprise)\r\nHash: 1ed3eab16\r\nBranch: arkit-aranchorcopying\r\nBuild date: 2018-07-31 10:41:39-0400\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 707000762\r\nGit revision: 8bbc500c47a0bd8f8dc46fcdb6541de5f2707f2a\r\nBuild date: 2018-07-30 06:04:39+00\r\nBuild branch: master\r\nXamarin extensions: 720cda319c3eb5d8b8285d7cb7771d763fd86c13\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.5\r\nDarwin 17.6.0 Darwin Kernel Version 17.6.0\r\n    Tue May  8 15:22:16 PDT 2018\r\n    root:xnu-4570.61.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nAddinMaker 1.4.2\r\nNuGet Package Explorer 0.2\r\nInternet of Things (IoT) development (Preview) 7.5\r\n\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\nhttps://gist.github.com/VincentDondain/debae8d24b034c7a70ccd3ef789c0b03\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->"},{"Id":"8129781736","Type":"IssuesEvent","CreatedAt":"2018-08-17T16:06:55","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4577","RelatedDescription":"Closed issue \"[xcode10] 'Tabbed Forms App' template fails on launch (simulator)\" (#4577) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create `Tabbed Forms App`\r\n2. Build it\r\n3. Run it on Simulator 12.0 (it works properly on device 12.0)\r\n\r\nOR\r\n\r\n1. Download a [sample](https://github.com/xamarin/xamarin-macios/files/2262548/TestTabbed.zip)\r\n2. Build and run it on Simulator 12.0\r\n\r\n### Expected Behavior\r\nIt runs successfully\r\n\r\n### Actual Behavior\r\nIt crashes on launch\r\n\r\n```\r\n Objective-C exception thrown.  Name: NSInvalidArgumentException Reason: -[UIImage _selectedTabBarItemImageWithTintColor:metrics:style:forScreenScale:]: unrecognized selector sent to instance 0x600000236060\r\n```\r\n\r\n### Environment\r\n\r\n1. VSfM\r\nhttps://gist.github.com/mykyta-bondarenko-gl/36b0b082a41b9703b9a92fc70c097f1f\r\n\r\n### Build Logs\r\n\r\n1. Exception\r\nhttps://gist.github.com/mykyta-bondarenko-gl/086866109af15ad5115733f90894ada3\r\n2. Stacktrace\r\nhttps://gist.github.com/mykyta-bondarenko-gl/42a643e47895e3ddfa673324ee850c0b\r\n3. VSfM output\r\nhttps://gist.github.com/mykyta-bondarenko-gl/e5e60b8e7708919a28116cccae4d010d\r\n\r\n### Example Project \r\n[TestTabbed.zip](https://github.com/xamarin/xamarin-macios/files/2262548/TestTabbed.zip)"},{"Id":"8129575232","Type":"PullRequestEvent","CreatedAt":"2018-08-17T15:28:58","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4639","RelatedDescription":"Opened pull request \"Try to fix random make failure in src/ by not using pattern rules.\" (#4639) at xamarin/xamarin-macios","RelatedBody":"Randomly make 3.81 says this:\n\n    error CS0006: Metadata file 'build/ios/reference/MonoTouch.Dialog-1.dll' could not be found\n\nThe makefile seems fine, and it also doesn't happen when using make 4.21, so\nthis looks like a make bug.\n\nSo rewrite the troublesome rule to not be a pattern rule, and cross some fingers."},{"Id":"8129536792","Type":"IssuesEvent","CreatedAt":"2018-08-17T15:21:52","Actor":"vpatelalk","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4638","RelatedDescription":"Opened issue \"MTOUCH: Error MT5216: Native linking failed for libBindingProject.dll.dylib'. MT5216\" (#4638) at xamarin/xamarin-macios","RelatedBody":"I am trying to use by ObjectiveC library in Xamarin.iOS project. In order to use it, I have used Objective Sharpie and created a Binding project which I refer into Xamarin.iOS application. Binding works however while building Xamarin.iOS application it gives me linking error.\r\n\r\nPlease find the attached error logs which will give you some insight.\r\n[BuildLog.txt](https://github.com/xamarin/xamarin-macios/files/2297759/BuildLog.txt)\r\n\r\nI am using Visual Studio for Mac Community 7.5.2 (build 40)\r\n\r\nPlease find the attached binding project and sample application. As size is way too large, I have uploaded to dropbox and following is the link to download\r\nhttps://www.dropbox.com/s/ji8oztok1jh8dy3/BindingProject.zip?dl=0\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":31,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":91,"FavoriteCount":47,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":170,"FavoriteCount":85,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":72,"FavoriteCount":46,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":122,"FavoriteCount":56,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;… https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":83,"FavoriteCount":53,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this fe… https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":30,"RawContent":null},{"Id":"1019670557011243008","CreatedAt":"2018-07-18T19:49:40+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 3.1 delivers the latest in quality improvements. We're excited to introduce Xamarin.Forms 3.1, now wi… https://t.co/qW6S2P7Hi0","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":260,"FavoriteCount":163,"RawContent":null},{"Id":"1016758939877117952","CreatedAt":"2018-07-10T18:59:56+00:00","UserScreenname":"xamarinhq","Text":"Understanding your app, it's users, &amp; their interactions helps you build a 5-star app. Application Insights w/ AppC… https://t.co/Smw5tVHZ1X","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1014949294737186816","CreatedAt":"2018-07-05T19:09:03+00:00","UserScreenname":"xamarinhq","Text":"Cool intros to new goodies in &lt;10 minutes! Explore some of the “Snack Pack” episodes that @JamesMontemagno bundled… https://t.co/80gmo35fb6","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":89,"FavoriteCount":43,"RawContent":null},{"Id":"1014903254034141190","CreatedAt":"2018-07-05T16:06:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/3RaJk3O0xb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":34,"RawContent":null},{"Id":"1014521211970379776","CreatedAt":"2018-07-04T14:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":34,"RawContent":null},{"Id":"1014159326645313537","CreatedAt":"2018-07-03T14:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":25,"RawContent":null},{"Id":"1013873320834445313","CreatedAt":"2018-07-02T19:53:31+00:00","UserScreenname":"xamarinhq","Text":"In today's Xamarin Podcast, @PierceBoggan &amp; @JamesMontemagno talk up latest &amp; greatest in mobile #dotNET dev; Xamar… https://t.co/chy5AhHt86","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":63,"FavoriteCount":43,"RawContent":null},{"Id":"1013805063209455616","CreatedAt":"2018-07-02T15:22:17+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/kdzv9U4084","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":23,"RawContent":null},{"Id":"1013547297437835264","CreatedAt":"2018-07-01T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/JL1SW3MFro","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":29,"RawContent":null},{"Id":"1012399525338595328","CreatedAt":"2018-06-28T18:17:10+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/3QxhuBcUiC v7.2 introduces two new MSBuild properties to make maintaining Android VersionCode for Andr… https://t.co/j469e1DU24","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":84,"FavoriteCount":58,"RawContent":null}]}},"RunOn":"2018-08-18T05:30:52.258296Z","RunDurationInMilliseconds":3989}