{"Data":{"Blog":{"FeedItems":[{"Title":"All Things Xamarin at Build 2018","PublishedOn":"2018-05-09T15:07:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Build 2018 has finally arrived which means exciting news for developers about Microsoft products and technologies, including Xamarin. For those following along at home, we’ve rounded up all...","Href":"https://blog.xamarin.com/xamarin-build-2018/","RawContent":null},{"Title":"Try the Latest Release of Xamarin.Forms 3.0!","PublishedOn":"2018-05-07T19:05:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are overjoyed to bring you our latest stable release of Xamarin.Forms, version 3.0. This is our fastest, richest release to date coupled with fantastic improvements up and down the Xamarin stack...","Href":"https://blog.xamarin.com/xamarin-forms-3-0-released/","RawContent":null},{"Title":"Mobile Development at Microsoft Build 2018","PublishedOn":"2018-05-04T22:03:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s almost time for Microsoft Build 2018 in Seattle, Washington and that means a full three days of keynotes, breakout and theater sessions, workshops, and all the latest updates to your...","Href":"https://blog.xamarin.com/mobile-development-microsoft-build-2018/","RawContent":null},{"Title":"Xamarin Developer Events in May","PublishedOn":"2018-05-02T18:35:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin and .NET user groups are hosting recap events around the world all month long to ensure every developer gets the most they can out of Microsoft Build. Continue your Xamarin development...","Href":"https://blog.xamarin.com/xamarin-developer-events-may/","RawContent":null},{"Title":"Implement Drawer and Split UI with the Xamarin.Forms MasterDetailPage","PublishedOn":"2018-04-26T18:00:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Drawer navigation and master-detail UI are two powerful patterns that guide users through content in applications with significant amounts of data or many pages. Xamarin.Forms provides the...","Href":"https://blog.xamarin.com/implement-drawer-split-ui-xamarin-forms-masterdetailpage/","RawContent":null},{"Title":"Using TensorFlow and Azure to Add Image Classification to Your Android Apps","PublishedOn":"2018-04-23T18:51:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"TensorFlow is a well established, open source machine learning and deep learning framework that can be used to create and run a wide range of different models, usually using powerful machines in the...","Href":"https://blog.xamarin.com/android-apps-tensorflow/","RawContent":null},{"Title":"Community Books on Xamarin Development","PublishedOn":"2018-04-20T15:01:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin development is constantly growing and evolving to meet the needs of developers. To help you find the right resources for your development education, we&#8217;ve curated a list of community...","Href":"https://blog.xamarin.com/community-books-xamarin-development/","RawContent":null},{"Title":"Automatic Provisioning with Visual Studio 2017","PublishedOn":"2018-04-18T17:22:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS device provisioning is largely regarded by all iOS developers, Xamarin or otherwise, as being one of the biggest barriers to getting started with iOS. To test and deploy your app on a device, you...","Href":"https://blog.xamarin.com/automatic-provisioning-visual-studio-2017/","RawContent":null},{"Title":"A Brief History of .NET Standard","PublishedOn":"2018-04-16T16:21:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin (and before that, Mono) allowed .NET code to run on multiple platforms for years. These days, there&#8217;s a new push in cross-platform with .NET Core and .NET Standard. This post looks at...","Href":"https://blog.xamarin.com/history-dot-net-standard/","RawContent":null},{"Title":"Using the iOS 11 Drag and Drop APIs in Xamarin.iOS Apps","PublishedOn":"2018-04-13T17:07:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS 11 introduced drag and drop, a feature that allows users to easily move or copy data within or between apps. With drag and drop, users can: Select items to drag Add extra items to a drag after it...","Href":"https://blog.xamarin.com/drag-and-drop-apis-for-xamarin-apps/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7657475241","Type":"PullRequestEvent","CreatedAt":"2018-05-10T19:48:00","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1671","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Disable layout bindings\" (#1671) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/issues/1669\r\n\r\nThe layout bindings and associated Code-Behind (ab3773cf)\r\ninfrastructure is breaking existing projects, e.g. the\r\n[Cheesesquare sample][0] [fails to build][1] with:\r\n\r\n[0]: http://github.com/xamarin/monodroid-samples/tree/master/android5.0/Cheesesquare\r\n[1]: https://github.com/xamarin/xamarin-android/issues/1669#issuecomment-388163599\r\n\r\n\terror CS0234: The type or namespace name 'Android' does not exist in the namespace 'Cheesesquare'\r\n\r\nThis is apparently happening because the wrong namespace is used for\r\nthe generated `Resource` type, with generated code containing:\r\n\r\n\tpublic TextView Text1 => FindView (global::Cheesesquare.Android.Resource.Id.Text1, ref __Text1);\r\n\r\nThere is no `Cheesesquare.Android.Resource` type; the generated\r\n`Resource.designer.cs` file contains `Cheesesquare.Resource`.\r\n\r\nDisable layout binds for now, until it can become more stable."},{"Id":"7657128684","Type":"PullRequestEvent","CreatedAt":"2018-05-10T18:35:52","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1599","RelatedDescription":"Merged pull request \"[linker] Update linker to be aware of jni marshal methods\" (#1599) at xamarin/xamarin-android","RelatedBody":"Let linker preserve the jni marshal methods and also update the\r\nregistration methods we generate with `jnimarshalmethod-gen`.\r\n\r\nWe want the linker to preserve only jni marshal methods for methods\r\nwhich are not linked away. Thus we also need to update the\r\n`__<$>_jni_marshal_methods::__RegisterNativeMembers` method to only\r\nregister the remaining methods.\r\n\r\nFor example in our XA template application, the number of registered\r\nmethods for `Android.App.Activity` class goes down to 31 from 241.\r\n\r\nThis commit still keeps the `Get*Handler` methods in the linked\r\nassembly. Once we have the marshal methods for all the code, we can\r\nremove these easily in `DoAdditionalMethodProcessing` by returning\r\nearly, before `PreserveRegisteredMethod` is called or even remove that\r\ncall."},{"Id":"7656380813","Type":"IssuesEvent","CreatedAt":"2018-05-10T16:05:52","Actor":"sumang2","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1670","RelatedDescription":"Opened issue \"Updating to Visual Studio Community 7.5 causes ambiguous resource layouts\" (#1670) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. upgrade to Visual Studio Community 7.5\r\n2. now getting an error about ambiguous resource layouts\r\n3. \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nno layout issues\r\n\r\n### Actual Behavior\r\nIDE is reporting ambiguous Android resource layouts for all Android layouts\r\n\r\n### Version Information\r\n7.5\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.5 (build 1254)\r\nInstallation UUID: 53d271a3-f98b-4609-8b6e-d35987a7e847\r\nRuntime:\r\n\tMono 5.10.1.47 (2017-12/8eb8f7d5e74) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.0.36 (master / 0c7c49a6)\r\n\r\n\tPackage version: 510010047\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.0.19 (Visual Studio Community)\r\nAndroid SDK: /Users/bsumang/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t5.0 (API level 21)\r\n\t\t5.1 (API level 22)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 26.0.2\r\n\r\nJava SDK: /usr\r\nUnable to find a $JAVA_HOME at \"/usr\", continuing with system-provided Java...\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3 (14154)\r\nBuild 9E145\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.176 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.10.1.177 (Visual Studio Community)\r\nHash: 7e782c1e\r\nBranch: d15-7\r\nBuild date: 2018-04-25 15:27:13-0400\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705001254\r\nGit revision: 498923ea36d2c7fe440c4e4b8cfb75bd50bbd748\r\nBuild date: 2018-05-05 10:35:24-04\r\nXamarin addins: 219f1c4943b4693b837b4173dd10ea982a47c852\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.4\r\nDarwin 17.5.0 Darwin Kernel Version 17.5.0\r\n    Fri Apr 13 19:32:32 PDT 2018\r\n    root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nNuGet Package Explorer 0.2\r\nNuGet Package Management Extensions 0.12.2\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n(IDE issue, not device related)\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7655991231","Type":"PullRequestEvent","CreatedAt":"2018-05-10T14:56:27","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1667","RelatedDescription":"Merged pull request \"[timing] fix for Debug/Release to get combined into CSV\" (#1667) at xamarin/xamarin-android","RelatedBody":"Context: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/plot/Build%20times/\r\n\r\nThe plots on Jenkins are only displaying times for the `Release`\r\nconfiguration. Looking into it, the `<ProcessMSBuildTiming />` task\r\nwas not using the `AddResults` option, so it was replacing the\r\ncontents of the CSV file. MSBuild is invoked twice for `Debug` and\r\n`Release`.\r\n\r\nSetting `AddResults` will now append additional columns to the\r\n`TestResult-MSBuild-times.csv` file so we get results for both `Debug`\r\nand `Release` configurations."},{"Id":"7655983360","Type":"PullRequestEvent","CreatedAt":"2018-05-10T14:55:06","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1633","RelatedDescription":"Merged pull request \"Bump to Java.Interop/master/5ff46d03\" (#1633) at xamarin/xamarin-android","RelatedBody":"`generator` refactoring and cleanups.\r\n\r\nAdd `Java.Interop.MarshalMemberBuilder.GetMarshalMethodName()`.\r\n\r\n`jnimarshalmethod-gen.exe` now updates the \"original\" assembly,\r\ninstead of emitting marshal methods into a separate assembly.\r\n\r\nWithin marshal methods, use a new `JniRuntime.JniValueManager`\r\ntemporary. This allows saving ~18944 bytes on `Mono.Android.dll.`\r\n\r\nUse `msbuild` by default."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7658829581","Type":"PullRequestEvent","CreatedAt":"2018-05-11T02:26:48","Actor":"myroot","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2670","RelatedDescription":"Opened pull request \"Fix ScrollToPosition.MakeVisible bug\" (#2670) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n Fix ScrollToPosition.MakeVisible bug\r\n - Fix `isItemVisible` condition on ScrollView\r\n\r\n### Bugs Fixed ###\r\nAs is\r\n![Image](https://user-images.githubusercontent.com/1029155/39903358-d287500e-550d-11e8-9f91-b0e6a8a925a4.gif) ![Image](https://user-images.githubusercontent.com/1029155/39903363-d64f4c32-550d-11e8-8bf3-bd23aee57dd6.gif)\r\n\r\nFixed\r\n![Image](https://user-images.githubusercontent.com/1029155/39903380-e8a3cd7c-550d-11e8-81dd-46810f0577ac.gif) ![Image](https://user-images.githubusercontent.com/1029155/39903382-ebdf1bb8-550d-11e8-99a0-086945ad0f40.gif)\r\n\r\n### API Changes ###\r\nNone\r\n\r\n### Behavioral Changes ###\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"7658711707","Type":"IssuesEvent","CreatedAt":"2018-05-11T01:40:08","Actor":"ZhuMingHao","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2652","RelatedDescription":"Closed issue \"Xamarin.Forms UWP - Setting WebView.Source as HtmlWebViewSource Processes Scripts Twice\" (#2652) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nIn Xamarin.Forms UWP, if I have a WebView whose Source property is set to type UrlWebViewSource, it works as expected. BUT, if the Source property is set to type HtmlWebViewSource where the Html property is set as a string, then any <script>s in the HTML are processed twice.\r\n\r\n### Steps to Reproduce\r\n\r\nset up a new Xamarin.Forms project, where the `Content` of the `MainPage` is set to a `WebView` in the code-behind. I've set it up so that I can easily switch out between setting the `WebView.Source `to `UrlWebViewSource` or `HtmlWebViewSource`\r\n\r\n```\r\npublic MainPage()\r\n{\r\n    InitializeComponent();\r\n\r\n    var urlSource = new UrlWebViewSource { Url = \"https://htmlpreview.github.io/?https://github.com/joelbyrd/external-resources/blob/master/storefulfillment/Printing/Packing/GNC-Pick.htm\" };\r\n    var htmlStringSource = new HtmlWebViewSource\r\n    {\r\n        Html = @\"<!doctype html><html lang='en'><head><meta charset='utf-8'><meta http-equiv='x-ua-compatible' content='ie=edge'><meta name='viewport' content='width=device-width, initial-scale=1'><title>Test</title></head><body><div id='log'></div><p>some text</p><script>document.getElementById('log').innerHTML += `<p>Testing</p>`;</script></body></html>\"\r\n    };\r\n\r\n    var webView = new WebView\r\n    {\r\n        Margin = new Thickness(0, 20, 0, 0),\r\n        Source = urlSource, // displays as expected\r\n        //Source = htmlStringSource // <script>'s are processed twice, appending \"Testing\" to the body twice\r\n    };\r\n\r\n    Content = webView;\r\n}\r\n\r\n```\r\n### Expected Behavior\r\n![Expected Behavior](https://i.stack.imgur.com/0p5mX.png)\r\n\r\n### Actual Behavior\r\n\r\n![Expected Behavior](https://i.stack.imgur.com/Fy1pv.png)\r\n\r\n### Basic Information\r\n\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - UWP:  The version of the UWP SDK  16299 \r\n\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/ZhuMingHao/XamarinWebViewTest.git\r\n"},{"Id":"7658627915","Type":"PullRequestEvent","CreatedAt":"2018-05-11T01:05:59","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2669","RelatedDescription":"Opened pull request \"[iOS] `PanGestureRecognizer`s on iOS will now pass through pans to other views.\" (#2669) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n`PanGestureRecognizer`s on iOS will now pass through pans to other views.\r\n\r\n### Bugs Fixed ###\r\n\r\n- fixes #2296\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"7658247057","Type":"IssuesEvent","CreatedAt":"2018-05-10T22:46:01","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2296","RelatedDescription":"Reopened issue \"[iOS] ListView does not work inside a container which has a gesture recognizer\" (#2296) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nWhen a ListView is inside a container (a Frame, StackLayout, etc.) that has a gesture recognizer, the list view doesn't work. Scrolling doesn't work, tap event are not fired, etc.\r\n\r\n### Steps to Reproduce\r\n\r\n```\r\nvar frame = new Frame();\r\n\r\nvar listView = new ListView()\r\n{\r\n   ItemsSource = new[] { \"Item 1\", \"Item 2\", \"Item 3\", \"Item 4\", \"Item 5\", \"Item 6\" }\r\n};\r\n\r\n listView.ItemTapped += async (sender, e) => await DisplayAlert(\"Alert\", $\"{e.Item} tapped\", \"Close\");\r\n\r\n// Removing this line makes the \"ItemTapped\" event work again\r\nframe.GestureRecognizers.Add(new TapGestureRecognizer());\r\n\r\nframe.Content = listView;\r\n```\r\n\r\nIn the above code, the ItemTapped event is not fired when tapping an item (neither does ItemSelected). It's also impossible to scroll the list view.\r\n\r\nThis works fine on Android and UWP.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.1.444934\r\n- Last known good version: ?\r\n- IDE: Visual Studio for Mac and Windows\r\n- Platform Target Frameworks:\r\n  - iOS:  11.2\r\n  - Android: SDK 25\r\n\r\n### Reproduction Link\r\n\r\nHere is a very simple solution file that demonstrates the bug.\r\n\r\n[BugTest20180405.zip](https://github.com/xamarin/Xamarin.Forms/files/1881408/BugTest20180405.zip)\r\n"},{"Id":"7657817250","Type":"IssuesEvent","CreatedAt":"2018-05-10T20:58:12","Actor":"xamoulin","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2668","RelatedDescription":"Opened issue \"Allow to extend TableSection\" (#2668) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nAllow to extend TableSection by removing the sealed qualifier."},{"Id":"7657683566","Type":"IssuesEvent","CreatedAt":"2018-05-10T20:30:27","Actor":"jdstobbe","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2667","RelatedDescription":"Opened issue \"Xamarin.Forms.Build.Tasks.GetTasksAbi build error\" (#2667) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n_The \"Xamarin.Forms.Build.Tasks.GetTasksAbi\" task could not be loaded from the assembly C:\\Projects\\.nuget\\packages\\xamarin.forms\\3.0.0.446417\\build\\netstandard2.0\\Xamarin.Forms.Build.Tasks.dll. Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified. Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask.\tApp7.Android_\t\r\n\r\nError is listed 3 times, once for ios, android and uwp.\r\n\r\n\r\nIn addition, the following warning:\r\n\r\nWarning\tIDE0006\tError encountered while loading the project. Some project features, such as full solution analysis for the failed project and projects that depend on it, have been disabled.\tApp7.Android\t\t1\tActive\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1a.  Start fresh:  New Project,  Visual C#--Cross-Platform--Moble App (Xamarin.Forms),  Blank App--<checked Android, iOS, Windows (UWP)>, Shared Project\r\n1b.  Start fresh:  New Project,  Visual C#--Cross-Platform--Moble App (Xamarin.Forms),  Blank App--<checked Android, iOS, Windows (UWP)>, >NET Standard\r\n(no code or other additions or subtraction)\r\n\r\n2. Clean Solution  \r\n\r\n3.  Rebuild (or Build Solution)\r\n\r\nNote:  Solutions that used to Build, no longer Build.\r\n\r\n### Expected Behavior\r\nClean build.\r\n\r\n### Actual Behavior\r\nError Shown above.\r\n\r\n### Basic Information\r\nHave tried:  downgrading Xamarin Forms, restarting VS, reboot PC\r\n\r\n- Last known good version:\r\nXamarin.Forms 2.4\r\n\r\n\r\n\r\n- IDE:\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.7.1\r\nVisualStudio.15.Release/15.7.1+27703.2000\r\nMicrosoft .NET Framework\r\nVersion 4.6.01055\r\n\r\nInstalled Version: Enterprise\r\n\r\nVisual C++ 2017   00369-60000-00001-AA949\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40501.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60419.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40424.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Functions and Web Jobs Tools   15.0.40424.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nC# Tools   2.8.0-beta6-62830-08. Commit Hash: e595ee276d14e14bfb3eb323fb57f2aa668bddea\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10420.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSnapshot Debugging Extension   1.0\r\nSnapshot Debugging Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61804.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nSyntax Visualizer   1.0\r\nAn extension for visualizing Roslyn SyntaxTrees.\r\n\r\nTest Adapter for Boost.Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Boost.Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTest Adapter for Google Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.0-beta6-62830-08. Commit Hash: e595ee276d14e14bfb3eb323fb57f2aa668bddea\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 16ecf5a30ad868d183c58e4a71a71c23d4ed3ba9.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27703.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWindows Machine Learning Generator Extension   1.0\r\nWindows Machine Learning Visual Studio Extension Detailed Info\r\n\r\nXamarin   4.10.0.442 (396b18cef)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.264 (fc37cd02e)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.0.19 (HEAD/342b2ce96)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.10.1.177 (7e782c1)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n\r\n\r\nSystem Specs:\r\nOS Name\tMicrosoft Windows 10 Enterprise 2015 LTSB\r\nVersion\t10.0.10240 Build 10240\r\nOther OS Description \tNot Available\r\nOS Manufacturer\tMicrosoft Corporation\r\nSystem Name\tDM-BR4G9Y1\r\nSystem Manufacturer\tDell Inc.\r\nSystem Model\tOptiPlex 7010\r\nSystem Type\tx64-based PC\r\nSystem SKU\tOptiPlex 7010\r\nProcessor\tIntel(R) Core(TM) i7-3770 CPU @ 3.40GHz, 3401 Mhz, 4 Core(s), 8 Logical Processor(s)\r\nBIOS Version/Date\tDell Inc. A21, 12/21/2015\r\nSMBIOS Version\t2.7\r\nEmbedded Controller Version\t255.255\r\nBIOS Mode\tLegacy\r\nBaseBoard Manufacturer\tDell Inc.\r\nBaseBoard Model\tNot Available\r\nBaseBoard Name\tBase Board\r\nPlatform Role\tDesktop\r\nSecure Boot State\tUnsupported\r\nPCR7 Configuration\tNot Available\r\nWindows Directory\tC:\\WINDOWS\r\nSystem Directory\tC:\\WINDOWS\\system32\r\nBoot Device\t\\Device\\HarddiskVolume1\r\nLocale\tUnited States\r\nHardware Abstraction Layer\tVersion = \"10.0.10240.17770\"\r\n\r\n\r\n\r\n"},{"Id":"7657552120","Type":"IssuesEvent","CreatedAt":"2018-05-10T20:03:29","Actor":"Nixon-Joseph","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2666","RelatedDescription":"Opened issue \"Frame shadow not showing up on android after 3.0.0.446417 update\" (#2666) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nPossibly same issue as https://github.com/xamarin/Xamarin.Forms/issues/2423\r\nAlthough I'm having the issue on modern devices -> api 26+.\r\nSteps and behavior same as linked issue, other than api level.\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7659222361","Type":"PullRequestEvent","CreatedAt":"2018-05-11T05:13:03","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4076","RelatedDescription":"Opened pull request \"[xharness] Try for 30 seconds to edit TCC.db instead of just 5 seconds.\" (#4076) at xamarin/xamarin-macios","RelatedBody":"Hopefully fixes an issue with monotouch-test randomly running into permission\ndialogs because xharness failed to fix TCC.db because it gave up too early."},{"Id":"7659209053","Type":"IssuesEvent","CreatedAt":"2018-05-11T05:07:06","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4046","RelatedDescription":"Closed issue \"VS MacOS build fails with: error MT0000: Unexpected error\" (#4046) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. Update to the latest VS Mac as of 5/7/2018 10AM PDT.\r\n2. Build for iPhone [hardware]\r\n3. Fail with \"Unexpected error.\"\r\n4. This build was working fine last week before I upgraded VS Mac.\r\n\r\n### Expected Behavior\r\n\r\nBuild like iOS Simulator without error.\r\n\r\n### Actual Behavior\r\n\r\nBuild error only for iOS device build.\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.5 (build 1254)\r\nInstallation UUID: 0cdcd297-61e0-41a3-80cc-ce8ccd7de743\r\nRuntime:\r\n\tMono 5.10.1.47 (2017-12/8eb8f7d5e74) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.0.36 (master / 0c7c49a6)\r\n\r\n\tPackage version: 510010047\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.10.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.2\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.3.0.19 (Visual Studio Community)\r\nAndroid SDK: /Users/nikhilshinde/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t4.4 (API level 19)\r\n\t\t5.0 (API level 21)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 25.2.5\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /Library/Java/JavaVirtualMachines/jdk1.8.0_172.jdk/Contents/Home\r\njava version \"1.8.0_172\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_172-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.172-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3 (14154)\r\nBuild 9E145\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.4.1.176 (Visual Studio Community)\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.10.1.177 (Visual Studio Community)\r\nHash: 7e782c1e\r\nBranch: d15-7\r\nBuild date: 2018-04-25 15:27:13-0400\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 705001254\r\nGit revision: 498923ea36d2c7fe440c4e4b8cfb75bd50bbd748\r\nBuild date: 2018-05-05 10:35:24-04\r\nXamarin addins: 219f1c4943b4693b837b4173dd10ea982a47c852\r\nBuild lane: monodevelop-lion-d15-7\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.4\r\nDarwin 17.5.0 Darwin Kernel Version 17.5.0\r\n    Mon Mar  5 22:24:32 PST 2018\r\n    root:xnu-4570.51.1~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\nMain error:     MTOUCH : error MT0000: Unexpected error - Please file a bug report at http://bugzilla.xamarin.com\r\n[error_build050618.log](https://github.com/xamarin/xamarin-macios/files/1980924/error_build050618.log)\r\n\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7658922661","Type":"PullRequestEvent","CreatedAt":"2018-05-11T03:03:45","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4075","RelatedDescription":"Merged pull request \"Bump mono to the head of 2018-02\" (#4075) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\n\n* mono/mono@93e3dafc389 [msbuild] Bump to track mono-2018-02 branch which tracks vs15.7 (#8596)\n* mono/mono@965c939531e Merge pull request #8580 from radical/nuget-hash-updates-2018-02\n* mono/mono@7c317d0af31 [native types] fix nfloat:NaN on arm64 JIT and interp (#8564)\n* mono/mono@6ec37b18d97 nuget-hash-extractor: Add msbuild extensions nuget version from\n* mono/mono@2a90cd598d4 nuget-hash-extractor: Add msbuild extensions nuget version from\n* mono/mono@48fcc7e3508 nuget-hash-extractor: Add `all` option to emit all 3 lists\n* mono/mono@90b0ea99cd7 nuget-hash-extractor: Improvements for better, deterministic output\n* mono/mono@217d0c7ab70 nuget-hash-extractor: Sort the lists for easier reviews\n* mono/mono@9824e260f56 Only show config.log when running on bots.\n* mono/mono@a085951264b [sdks] Wrap configure to provide better output.\n* mono/mono@b4a42e6e4b3 [sdks] fix $(mktemp) usage on older versions of macOS (#8520)\n\nDiff: https://github.com/mono/mono/compare/a0228295dcef711f8bbbf4f6f619c194e109c0e6...93e3dafc389a67db224c8f0d95b69f9233761396"},{"Id":"7658460267","Type":"PullRequestEvent","CreatedAt":"2018-05-10T23:58:34","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4075","RelatedDescription":"Opened pull request \"Bump mono to the head of 2018-02\" (#4075) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\n\n* mono/mono@93e3dafc389 [msbuild] Bump to track mono-2018-02 branch which tracks vs15.7 (#8596)\n* mono/mono@965c939531e Merge pull request #8580 from radical/nuget-hash-updates-2018-02\n* mono/mono@7c317d0af31 [native types] fix nfloat:NaN on arm64 JIT and interp (#8564)\n* mono/mono@6ec37b18d97 nuget-hash-extractor: Add msbuild extensions nuget version from\n* mono/mono@2a90cd598d4 nuget-hash-extractor: Add msbuild extensions nuget version from\n* mono/mono@48fcc7e3508 nuget-hash-extractor: Add `all` option to emit all 3 lists\n* mono/mono@90b0ea99cd7 nuget-hash-extractor: Improvements for better, deterministic output\n* mono/mono@217d0c7ab70 nuget-hash-extractor: Sort the lists for easier reviews\n* mono/mono@9824e260f56 Only show config.log when running on bots.\n* mono/mono@a085951264b [sdks] Wrap configure to provide better output.\n* mono/mono@b4a42e6e4b3 [sdks] fix $(mktemp) usage on older versions of macOS (#8520)\n\nDiff: https://github.com/mono/mono/compare/a0228295dcef711f8bbbf4f6f619c194e109c0e6...93e3dafc389a67db224c8f0d95b69f9233761396"},{"Id":"7658322443","Type":"PullRequestEvent","CreatedAt":"2018-05-10T23:09:27","Actor":"alexischr","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4070","RelatedDescription":"Merged pull request \"[tests] Update AttributeTest.DebuggerTypeProxy_24203\" (#4070) at xamarin/xamarin-macios","RelatedBody":"Mono now uses a different interface for DebuggerTypeProxy\r\n\r\nFixes https://github.com/mono/mono/issues/8625"},{"Id":"7656572435","Type":"IssuesEvent","CreatedAt":"2018-05-10T16:43:47","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4074","RelatedDescription":"Opened issue \"[d15-7] Broken API binding causes crashes in user code when running on touchbar machines\" (#4074) at xamarin/xamarin-macios","RelatedBody":"This needs to go into 15-7\r\n\r\nhttps://github.com/xamarin/xamarin-macios/issues/3824\r\n\r\nThe touchbar bindings are wrong, and that can cause assertions/crashes in user's code\r\n\r\n### Steps to Reproduce\r\n\r\n1. New XM App\r\n2. Add this code:\r\n\r\nNSTextView f = new NSTextView (new CGRect (400, 200, 200, 200));\r\n            f.TextDidChange += (o, e) => {\r\n                Console.WriteLine (e);\r\n            };\r\n\r\n\r\n            View.AddSubview (f);\r\n\r\n3. \r\n\r\n### Expected Behavior\r\n\r\nNo crash/assert.\r\n\r\n### Actual Behavior\r\n\r\n2018-05-08 20:50:04.242 VisualStudio[32290:908450] *** Assertion failure in -[NSTouchBar setDefaultItemIdentifiers:], /BuildRoot/Library/Caches/com.apple.xbs/Sources/AppKit/AppKit-1561.40.112/TouchBar.subproj/NSTouchBar.m:163\r\n\r\nThis also happens in VSfM, but not my small sample.\r\n\r\n2018-05-08 20:50:04.246 VisualStudio[32290:908450] *** Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'Invalid parameter not satisfying: itemIdentifiers'\r\n\r\n### Environment\r\nStable"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"994612280980660225","CreatedAt":"2018-05-10T16:17:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/TjAVAcfe1a","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":15,"RawContent":null},{"Id":"994284793184563200","CreatedAt":"2018-05-09T18:35:42+00:00","UserScreenname":"xamarinhq","Text":"Everything the #Xamarin developer should know from #MSBuild, all in one place: https://t.co/wZn2oaz7l5 https://t.co/GmsEImV7Bq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":126,"FavoriteCount":70,"RawContent":null},{"Id":"993570225420406784","CreatedAt":"2018-05-07T19:16:16+00:00","UserScreenname":"xamarinhq","Text":"Try the latest release of #XamarinForms 3.0: https://t.co/UlSNk3NClU https://t.co/dGpHZriLc4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":160,"FavoriteCount":113,"RawContent":null},{"Id":"993251599811252224","CreatedAt":"2018-05-06T22:10:09+00:00","UserScreenname":"xamarinhq","Text":"Adding geospatial calculations to your #Xamarin apps with #Azure #CosmosDB: https://t.co/acrN8gdJdS https://t.co/Lx7JBLnvef","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":21,"RawContent":null},{"Id":"992875335762042888","CreatedAt":"2018-05-05T21:15:01+00:00","UserScreenname":"xamarinhq","Text":"In the first of our four-part series on debugging #Xamarin open source frameworks, learn how to build #XamarinForms… https://t.co/P30tFLl74x","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":64,"FavoriteCount":32,"RawContent":null},{"Id":"992545763069779971","CreatedAt":"2018-05-04T23:25:25+00:00","UserScreenname":"xamarinhq","Text":"Mobile development sessions and content at #MSBuild 2018: https://t.co/0hp43y9gvJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":30,"RawContent":null},{"Id":"992422850337353729","CreatedAt":"2018-05-04T15:17:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to create cloud-connected mobile apps with #Xamarin and Microsoft #Azure: https://t.co/NK0m1MG9yM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":13,"RawContent":null}]}},"RunOn":"2018-05-11T05:30:45.4639172Z","RunDurationInMilliseconds":4654}