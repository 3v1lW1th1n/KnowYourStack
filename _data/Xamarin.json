{"Data":{"Blog":{"FeedItems":[{"Title":"Podcast: Visual Studio 2017 version 15.6, AR with UrhoSharp, and ML with CoreML","PublishedOn":"2018-03-12T18:43:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I discuss the fun new features in the Visual Studio 2017 version 15.6 stable release, including macOS environment setup and iOS WiFi...","Href":"https://blog.xamarin.com/podcast-visual-studio-2017-version-15-6-ar-urhosharp-ml-coreml/","RawContent":null},{"Title":"Contributing to Xamarin.iOS and Xamarin.Mac","PublishedOn":"2018-03-08T19:41:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Two years ago this month, we made some exciting announcements about the future of Xamarin. One of those announcements detailed the open sourcing of the Xamarin.iOS and Xamarin.Mac SDK. Open source is...","Href":"https://blog.xamarin.com/contributing-to-xamarin-ios-xamarin-mac/","RawContent":null},{"Title":"Visual Studio 2017 Version 15.6 Now Available!","PublishedOn":"2018-03-06T20:17:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Our last release, Visual Studio 2017 version 15.5, featured awesome new updates, such as the iOS Remoted Simulator becoming available to all developers, live XAML previewing in Android emulators with...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-6-now-available/","RawContent":null},{"Title":"Mobile Developer Events in March","PublishedOn":"2018-03-01T19:05:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Around the world, Xamarin and .NET user groups are meeting up to learn and discuss the latest news on exciting releases, tooling, and updates with Xamarin and related technologies. This March, you can...","Href":"https://blog.xamarin.com/mobile-developer-events-march/","RawContent":null},{"Title":"The New, Feature-Packed UrhoSharp 1.8","PublishedOn":"2018-02-28T19:34:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"UrhoSharp is a .NET API for building 3D experiences in your apps. A .NET binding to the Urho3D engine, it allows developers to write cross-platform code targeting Android, iOS, Windows and macOS with...","Href":"https://blog.xamarin.com/announcing-urhosharp-1-8-release/","RawContent":null},{"Title":"New Xamarin University Course: Navigation Patterns in Xamarin.Forms (XAM205)","PublishedOn":"2018-02-26T19:10:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms, a popular choice for cross-platform Xamarin apps, has two stacks. It&#8217;s common to implement navigation by pushing and popping Pages on a stack, but the two stacks are intended for...","Href":"https://blog.xamarin.com/xamarin-forms-navigation-patterns-xam205/","RawContent":null},{"Title":"Add Tizen Projects to Your Xamarin.Forms Applications","PublishedOn":"2018-02-23T19:24:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a special guest post from Jay Cho of the Samsung Tizen team. It&#8217;s been a while since the first preview version of Tizen .NET was released. Thanks to the newest release, developing...","Href":"https://blog.xamarin.com/add-tizen-projects-xamarin-forms-apps/","RawContent":null},{"Title":"Create and Host tvOS TVML Apps with Azure and Xamarin","PublishedOn":"2018-02-22T20:30:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Creating amazing tvOS TVML apps doesn&#8217;t have to be hard. In this blog post, I&#8217;ll go over the many similarities tvOS has to iOS and show you how to create a sample quiz app using UIKit that...","Href":"https://blog.xamarin.com/create-tvos-tvml-apps-azure-xamarin/","RawContent":null},{"Title":"Use CoreML And Azure To Create Simple Xamarin.iOS Apps","PublishedOn":"2018-02-20T19:36:35+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last year Apple released a device-optimized machine learning framework called Core ML to make it as easy as possible to integrate machine learning and artificial intelligence services into your iOS...","Href":"https://blog.xamarin.com/coreml-azure-create-simple-xamarin-ios-apps/","RawContent":null},{"Title":"Extend Xamarin.Forms Controls Functionality with Behaviors","PublishedOn":"2018-02-16T18:48:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms provides a way to build 100% native, cross-platform applications with both a shared logic layer and a shared user-interface layer. Built-in Xamarin.Forms controls also provide a ton of...","Href":"https://blog.xamarin.com/extend-xamarin-forms-controls-functionality-with-behaviors/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7369823150","Type":"IssuesEvent","CreatedAt":"2018-03-13T05:16:10","Actor":"guygodin","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1405","RelatedDescription":"Opened issue \"When \"Use Shared Runtime\" is unchecked, any code changes aren't picked up\" (#1405) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. In Xamarin Android project settings, uncheck \"Use Shared Runtime\"\r\n2. Select armembi-v7a as the only supported platform\r\n3. Run a simple Hello World app by pressing F5\r\n4. Stop debugging\r\n5. Comment out a line of code\r\n6. Run again with F5\r\n\r\n### Expected Behavior\r\n\r\nThe changes should be picked up and the commented out line shouldn't execute\r\n\r\n### Actual Behavior\r\n\r\nThe commented out line is still executed. Changes to the source code are not deployed\r\n\r\n### Version Information\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.6.1\r\nVisualStudio.15.Release/15.6.1+27428.2002\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA324\r\nMicrosoft Visual C++ 2017\r\n\r\nVisual F# Tools 10.1 for F# 4.1   00369-60000-00001-AA324\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nApplication Insights Tools for Visual Studio Package   8.11.10212.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40214.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   1.0\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.51214.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40215.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.7.0-beta3-62620-07. Commit Hash: e873e69306527a0424e97af2985370556f474019\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.51212.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.9.11-pre (71eb098)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61801.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.6.20202.3\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.7.0-beta3-62620-07. Commit Hash: e873e69306527a0424e97af2985370556f474019\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.27406.00\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27428.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.9.0.749 (9b0fce36d)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.10.58 (cee1369d0)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.2.0.15 (HEAD/22d97e153)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.8.0.20 (1c6f300)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\nXenko.VisualStudio.Package   2.0\r\nXenko VisualStudio Package"},{"Id":"7369807345","Type":"IssuesEvent","CreatedAt":"2018-03-13T05:09:52","Actor":"guygodin","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1404","RelatedDescription":"Opened issue \"\"Use Shared Runtime\" doesn't work when targetting armeabi-v7a architecture\" (#1404) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. In Xamarin Android project settings, select armeabi-v7a as the only supported architecture\r\n2. Check \"Use Shared Runtime\" in the same project settings pane\r\n3. Run your project\r\n\r\n### Expected Behavior\r\n\r\nIt should run in 32bits mode without issues\r\n\r\n### Actual Behavior\r\n\r\nIt crashes at startup with the following error message:\r\n\r\nshared runtime initialization error: dlopen failed: \"/data/app/Mono.Android.DebugRuntime-1/lib/arm64/libmonosgen-64bit-2.0.so\" is 64-bit instead of 32-bit\r\n\r\n### Version Information\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.6.1\r\nVisualStudio.15.Release/15.6.1+27428.2002\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2017   00369-60000-00001-AA324\r\nMicrosoft Visual C++ 2017\r\n\r\nVisual F# Tools 10.1 for F# 4.1   00369-60000-00001-AA324\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nApplication Insights Tools for Visual Studio Package   8.11.10212.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40214.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   1.0\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.51214.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40215.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.7.0-beta3-62620-07. Commit Hash: e873e69306527a0424e97af2985370556f474019\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.51212.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.9.11-pre (71eb098)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61801.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.6.20202.3\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.7.0-beta3-62620-07. Commit Hash: e873e69306527a0424e97af2985370556f474019\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.27406.00\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27428.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.9.0.749 (9b0fce36d)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.10.58 (cee1369d0)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.2.0.15 (HEAD/22d97e153)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.8.0.20 (1c6f300)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\nXenko.VisualStudio.Package   2.0\r\nXenko VisualStudio Package\r\n\r\n"},{"Id":"7369014762","Type":"PullRequestEvent","CreatedAt":"2018-03-13T00:11:17","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1403","RelatedDescription":"Opened pull request \"[create-vsix] Don't exclude @(_Symlinks) when empty\" (#1403) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1401\r\n\r\nCommit 328286b7 had an unanticipated side-effect: the resulting\r\n`.vsix` contained *no* `$ReferenceAssemblies` entries when running\r\n`make create-vsix` with an xbuild-based build tree:\r\n\r\n\t$ make prepare all # MSBUILD=msbuild NOT PROVIDED\r\n\t$ make create-vsix CONFIGURATIONS=Debug\r\n\t$ unzip -l bin/BuildDebug/Xamarin.Android.Sdk-OSS*.vsix\r\n\t# no $ReferenceAssemblies files!\r\n\r\nThis is because when building only with `xbuild`,\r\n`bin/$(Configuration)/lib/xamarin.android/xbuild-frameworks/.__sys_links.txt`\r\ndoesn't exist, and thus `@(_SymLinks)` is *empty*.\r\n\r\nConsequently, the interpolation of\r\n`$(LibDir)xbuild-frameworks\\%(_SymLinks.Identity)\\**\\*.*` is\r\n`$(LibDir)xbuild-frameworks\\**\\*.*`, which causes *all*\r\n`@(ReferenceAssemblies)` entries to be removed.\r\n\r\nDoh!\r\n\r\nFix this by making the `%(_Symlinks.Identity)` removal conditional on\r\n`@(_Symlinks)` actually containing values."},{"Id":"7368099190","Type":"PullRequestEvent","CreatedAt":"2018-03-12T20:26:27","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1402","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] update <Proguard /> task for latest acw-map.txt file\" (#1402) at xamarin/xamarin-android","RelatedBody":"Fixes #1373\r\n\r\nSince #1131, the contents of the `acw-map.txt` file have changed. We\r\nhave removed the fully qualified type names from the file, and there is\r\nsome code in the `<Proguard />` task that relies on a specific number of\r\nlines per C# type.\r\n\r\nWe need to update the for-loop to skip every third line instead of every\r\nfourth line.\r\n\r\nI also updated the loop to only index against the `acwLines` array once\r\nper loop interation, as a small performance improvement. The code is also\r\na little more readable from this change.\r\n\r\nLastly, I added some code to the proguard test so that it validates the\r\nproguard configuration file contains the appropriate contents. Prior to\r\nthis, the test was only making sure the build succeeded."},{"Id":"7368033619","Type":"IssuesEvent","CreatedAt":"2018-03-12T20:13:31","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1401","RelatedDescription":"Opened issue \"Recent .vsix files produced by OSS PR builds are missing files\" (#1401) at xamarin/xamarin-android","RelatedBody":"Recent .vsix files are missing a `$ReferenceAssemblies` directory entirely.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Download and unzip (or install) a PR build vsix (e.g. https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-pr-builder/2672/Azure/ ).\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n\r\n\r\n### Version Information\r\nPR #1356 / 8.3.99.43_HEAD_3a60f76\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nvsix content, missing ref assemblies:\r\nhttps://gist.github.com/pjcollins/3def2556837fc42cb9690ab444c40405\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7367058405","Type":"IssuesEvent","CreatedAt":"2018-03-12T17:11:03","Actor":"jalbertSyncroTech","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1399","RelatedDescription":"Opened issue \"Visual Studio 15.6.1 regression Android.Util.AndroidRuntimeException Activity did not call through to super.onCreate()\" (#1399) at xamarin/xamarin-android","RelatedBody":"We have a Xamarin.Forms Android app that was previously working with VS 15.5.7 and is no longer working with VS 15.6.1.  It crashes during startup with the unhandled exception AndroidRuntimeException: Activity did not call through to super.onCreate().\r\n\r\nOur activity does override OnCreate(), and we've verified via the debugger that the base.OnCreate() is being called.  However, the Xamarin.Forms FormsAppCompatActivity that Android applications are supposed to sub-class also overrides OnCreate(), so if it's just overriding that causes the issue everyone using Xamarin.Forms should be seeing this.\r\n\r\nThis is currently a show-stopper for our development team.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Upgrade from VS 15.5.7 or earlier to 15.6.1\r\n2. Android Application crashes at startup with the unhandled exception AndroidRuntimeException: Activity did not call through to super.onCreate()\r\n\r\n### Expected Behavior\r\n\r\nApp should not crash, it was previously working with 15.6.0.\r\n\r\n### Actual Behavior\r\n\r\nApp crashes, this is a regression.\r\n\r\n### Version Information\r\n\r\nVisual Studio 15.6.1\r\nXamarin.Android SDK   8.2.0.15 (HEAD/22d97e153)\r\nXamarin.Forms 2.5.0.280555 (also w/Xamarin.Forms 2.4.0.280)\r\n\r\n### Log File\r\n\r\nCall Stack\r\n0xFFFFFFFFFFFFFFFF in System.Diagnostics.Debugger.Mono_UnhandledException_internal\tC#\r\n0x1 in System.Diagnostics.Debugger.Mono_UnhandledException\tC#\r\n0x6 in Android.Runtime.UncaughtExceptionHandler.UncaughtException\tC#\r\n0x1A in Java.Lang.Thread.IUncaughtExceptionHandlerInvoker.n_UncaughtException_Ljava_lang_Thread_Ljava_lang_Throwable_\tC#\r\n0x1D in object.9a1fd30c-e995-4621-8122-35964d969409\tC#\r\n"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7369685367","Type":"IssuesEvent","CreatedAt":"2018-03-13T04:18:14","Actor":"PandeyAlokKumar","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2086","RelatedDescription":"Opened issue \"PullTORefresh is not working for the UWP platform using XamarinForms ListVIew\" (#2086) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nAdded a listview in my application and added the enable the PullToRefresh property for the listView.\r\n### Steps to Reproduce\r\n\r\n1. Creating XamarinForms application and add a ListView conrol to forms\r\n2. Enable PullToRefresh property and add a Refresh command \r\n3. The Refresh command is not getting called \r\n\r\n### Expected Behavior\r\nThis should call the Refresh command \r\n### Actual Behavior\r\nThis is not happening on UWP. I have only tested on the Windows 10 tablets.\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7368192532","Type":"IssuesEvent","CreatedAt":"2018-03-12T20:44:46","Actor":"sonic1015","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2085","RelatedDescription":"Opened issue \"iOS: ContextAction source changes cause slow-down and eventual freeze\" (#2085) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\n\r\nEach Change to the ContextActions in a ListView or TableView cause an exponentially increasing UI freeze on iOS.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a ViewCell with context actions\r\n2. Repeatedly change the context actions in some way (usually based on ViewCell/ViewModel state)\r\n\r\n### Expected Behavior\r\n\r\nContext Menu (swipe left on iOS, hold on Android, right-click on UWP, etc) should reflect this change immediately with no UI slow down.\r\n\r\n### Actual Behavior\r\n\r\nOn iOS, on every change, the UI gets slower and slower to respond till it eventually freezes indefinitely.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.280555\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks:\r\n  - iOS:  11.8.0.20\r\n\r\n### Video\r\n\r\nhttps://github.com/sonic1015/bugRepo/raw/master/2018-03-12%20T16-17-07.mp4\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/sonic1015/bugRepo\r\n"},{"Id":"7368038757","Type":"IssuesEvent","CreatedAt":"2018-03-12T20:14:32","Actor":"Paul-Brenner-Tangoe","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2084","RelatedDescription":"Opened issue \"[iOS] ListView Header disappears when items are added\" (#2084) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nMigrating https://bugzilla.xamarin.com/show_bug.cgi?id=45327 here\r\n\r\nFrom bugzilla:\r\nSometimes, when you add or remove items from a ListView, the Header element is given an incorrect size and disappears. I'm not exactly sure what sequence of events causes it, but I have attached a project that reproduces based on the UI in my project.\r\n\r\nThe project represents a page that is performing some long operation that will produce a set of items for the ListView. In preparation, the Header element of the ListView is set up. A 3-second Task inside the RouteDetailsView constructor simulates the completion of that long-running task and population of items. When the items are populated, the header disappears.\r\n\r\nI've done some debugging via Immediate/Watch and discovered the Label in the header is being given a Height of -1. I've confirmed this with Label-derived classes that override OnSizeAllocated(). My understanding is you should NEVER pass a -1 for any size parameter in XF layout, so something's probably going haywire in the renderer for the ListView. \r\n\r\n### Steps to Reproduce\r\n\r\nRun app\r\nWait 3 seconds\r\nNote that the listview had a header, and after 3 seconds it is gone\r\n\r\n### Expected Behavior\r\nItems are updated, without affecting the header\r\n\r\n### Actual Behavior\r\nHeader disappears\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.280555\r\n- Last known good version: N/A\r\n- IDE: VS2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  yes\r\n  - Android: no\r\n  - UWP:  not tested\r\n- Android Support Library Version: 25\r\n- Nuget Packages: just forms\r\n- Affected Devices: tested on Nexus 5x running Android 8, and iPhone 5s running iOS 9.3 \r\n\r\n### Reproduction Link\r\nhttps://www.dropbox.com/s/fg9dfd4m5sk7p4d/lstheaderbug.zip?dl=0\r\n"},{"Id":"7368023062","Type":"PullRequestEvent","CreatedAt":"2018-03-12T20:11:32","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2083","RelatedDescription":"Opened pull request \"Fix VS errors when loading clean solution; prevent VS rewriting Android project files\" (#2083) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThese changes solve two problems. First:\r\n\r\nRight now after a full `git clean`, opening the solution in VSWin results in errors in each project which attempts to import Xamarin.Forms.targets because Xamarin.Forms.Build.Tasks.dll is not yet built. VS doesn't display these errors immediately. If you then build the Tasks project and then attempt to build and run any of the XF projects in the solution (ControlGallery, PagesGallery, or the EmbeddingTestBed), VS will either:\r\n\r\n1. Display the \"Could not load Xamarin.Forms.targets\" errors and refuse to build/run the project or\r\n2. Completely freeze up and have to be killed\r\n\r\nEither scenario requires a restart. \r\n\r\nWith these changes, VSWin does not load the Xamarin.Forms.targets files if Xamarin.Forms.Build.Tasks.dll is not available, preventing the initial errors. You can simply open the solution after a `git clean`, select a project (e.g. ControlGallery on Android), hit debug, and it will build and run. No restart required.\r\n\r\nWhen MSBuild loads the projects, the conditional on the existence of Xamarin.Forms.Build.Tasks.dll is ignored, preserving the old behavior.\r\n\r\nVSMac still requires building the Tasks project, then touching the project/solution to force a reload before building/running one of the Forms projects.\r\n\r\nSecond:\r\n\r\nOpening the solution in VS loads each of the Android-targeted projects; after they are loaded, the value of `AndroidUseLatestPlatformSdk` is evaluated and if a later SDK is installed, the value of `TargetFrameworkVersion` is updated to the latest SDK. The project is then unloaded and reloaded. This adds considerable time to the loading of the solution and modifies each Android `.csproj` file; these modifications have to be reverted before committing changes. \r\n\r\nWith these changes, the value of `AndroidUseLatestPlatformSdk` is set to `false` when the solution is opened in VS; the projects only load once, and the project files remain unchanged. The old `AndroidUseLatestPlatformSdk` value of `true` is preserved when the projects are loaded by MSBuild. \r\n\r\n"},{"Id":"7367836690","Type":"IssuesEvent","CreatedAt":"2018-03-12T19:34:33","Actor":"Paul-Brenner-Tangoe","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2082","RelatedDescription":"Opened issue \"Navigating to another page is not working inside ListView\" (#2082) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nMigrating https://bugzilla.xamarin.com/show_bug.cgi?id=59982 here\r\n\r\n### Steps to Reproduce\r\n\r\nRun app\r\nTap image in cell\r\nNote that the ItemTapped code gets hit, but the app does not navigate\r\n\r\n### Expected Behavior\r\nApp navigates to new page\r\n\r\n### Actual Behavior\r\nApp does not navigate, seems to ignore the navigation code, no crash, no info in logs\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.280555\r\n- Last known good version: N/A\r\n- IDE: VS2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS: yes\r\n  - Android: yes\r\n  - UWP:  not tested\r\n- Android Support Library Version: 25\r\n- Nuget Packages: just forms\r\n- Affected Devices: tested on Nexus 5x running Android 8, and iPhone 5s simulator running iOS 9.3\r\n\r\n### Reproduction Link\r\nhttps://www.dropbox.com/s/g0fcqf6vcnf8xz2/listviewtapgesture.zip?dl=0\r\n"},{"Id":"7367817442","Type":"PullRequestEvent","CreatedAt":"2018-03-12T19:30:46","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2079","RelatedDescription":"Merged pull request \"[Build] Update submodule to 15.5.7\" (#2079) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nBump bots and provision to 15.5.7 \r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7368052478","Type":"PullRequestEvent","CreatedAt":"2018-03-12T20:17:16","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3728","RelatedDescription":"Opened pull request \"[tests] macOS NSSpellChecker randomly [dis]approve of 'Ident'\" (#3728) at xamarin/xamarin-macios","RelatedBody":"Fix https://github.com/xamarin/maccore/issues/661"},{"Id":"7367960524","Type":"PullRequestEvent","CreatedAt":"2018-03-12T19:59:06","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3727","RelatedDescription":"Opened pull request \"Revert \"[macOS][msbuild] Fix binding projects under Full to resolve t…\" (#3727) at xamarin/xamarin-macios","RelatedBody":"…o correct libs (#3672)\"\r\n\r\nThis reverts commit d5b50765f5997f3bf23f8cea8fda3c0733b1e7bc.\r\n\r\nTurns out \"Modern\" binding templates in VSfM have had the wrong thing forever, and my checked in test projects just happened to have it right. :("},{"Id":"7367861109","Type":"PullRequestEvent","CreatedAt":"2018-03-12T19:39:30","Actor":"jstedfast","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3185","RelatedDescription":"Closed pull request \"[msbuild] Added MT errors for some CompileEntitlements errors\" (#3185) at xamarin/xamarin-macios","RelatedBody":"Partial fix for issue #3175"},{"Id":"7367782214","Type":"IssuesEvent","CreatedAt":"2018-03-12T19:23:43","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3718","RelatedDescription":"Reopened issue \"CoreML C# Binding Generator uses wrong protection level\" (#3718) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a Xamarin.Mac application\r\n2. Add a CoreML model e.g. Google Places 365\r\n3. Use the model e.g. with Vision framework\r\n\r\n### Expected Behavior\r\n\r\nThe application will compile.\r\n\r\n### Actual Behavior\r\n\r\nThe application has a protection level compile error\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.4 (build 1033)\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.2.0.20 (Visual Studio Community)\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nvar modelRaw = new googlenet_places365();\r\nvar modelVision = VNCoreMLModel.FromMLModel(modelRaw.model, out vnErr);\r\n```\r\n\r\n### Build Logs\r\n\r\n_ViewController.cs(32,57,32,62): error CS0122: 'googlenet_places365.model' is inaccessible due to its protection level_\r\n\r\n###  Fix\r\n\r\nThe CoreML binding generator needs to insert public before the model property\r\n\r\n```\r\npublic readonly MLModel model;"},{"Id":"7367772040","Type":"IssuesEvent","CreatedAt":"2018-03-12T19:21:40","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3324","RelatedDescription":"Closed issue \"Missing bindings in AVCapturePhoto\" (#3324) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Try to capture a photo using the new `AVCapturePhotoOutput` class\r\n2. Implement interface method `public void DidFinishProcessingPhoto(AVCapturePhotoOutput output, AVCapturePhoto photo, NSError error)` to get the finished photo\r\n3. Extract photo data from `AVCapturePhoto` to use.\r\n\r\n### Expected Behavior\r\nThe class doesn't bind all ObjC properties and methods, so that photo capture is only possible when using an uncompressed format. When using an uncompressed format it is possible to get image data through `pixelBuffer` property, but when using e.g. JPEG the image data is only accessible through `CGImageRepresentation` property, which is not bound in C#.\r\n\r\n### Actual Behavior\r\nMissing binding for `CGImageRepresentation` (amongst others)\r\n\r\n### Environment\r\niOS\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7367525269","Type":"PullRequestEvent","CreatedAt":"2018-03-12T18:33:50","Actor":"jstedfast","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3726","RelatedDescription":"Opened pull request \"[msbuild] Correctly determine whether Xamarin.Mac builds require a p…\" (#3726) at xamarin/xamarin-macios","RelatedBody":"…rovisioning profile\r\n\r\nFixes issue #3674\r\n\r\nThe problem is that the Xamarin.Mac targets did not set the\r\nRequireProvisioningProfile property on the DetectSigningIdentity\r\ntask which meant that it defaulted to 'false'.\r\n\r\nWhen that property is 'false', the DetectSigningIdentity logic\r\nwould shortcut to not doing a provisioning profile lookup.\r\n\r\nThis was therefor causing the build to not use a provisioning\r\nprofile which caused the build to improperly codesign the app\r\nbundle."},{"Id":"7367508784","Type":"PullRequestEvent","CreatedAt":"2018-03-12T18:30:47","Actor":"jstedfast","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3710","RelatedDescription":"Merged pull request \"[msbuild] Correctly determine whether Xamarin.Mac builds require a p…\" (#3710) at xamarin/xamarin-macios","RelatedBody":"…rovisioning profile\r\n\r\nFixes issue #3674\r\n\r\nThe problem is that the Xamarin.Mac targets did not set the\r\nRequireProvisioningProfile property on the DetectSigningIdentity\r\ntask which meant that it defaulted to 'false'.\r\n\r\nWhen that property is 'false', the DetectSigningIdentity logic\r\nwould shortcut to not doing a provisioning profile lookup.\r\n\r\nThis was therefor causing the build to not use a provisioning\r\nprofile which caused the build to improperly codesign the app\r\nbundle."},{"Id":"7367318041","Type":"IssuesEvent","CreatedAt":"2018-03-12T17:56:03","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3547","RelatedDescription":"Closed issue \"[Apple Watch] Crash when attempting to use Digital Crown but ONLY if published in Store\" (#3547) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Deploy any Apple Watch (targeting 3.0) using Release build\r\n2. Attempt to use the Digital Crown (rotate)\r\n3. App crashes\r\n\r\nNOTE: This happens only in Release builds, having LLVM enabled and Bitcode disabled. When debugging or deploying as \"AdHoc\" it works well.\r\n\r\n**NOTE: It seems that using LLVM breaks the code; switching LLVM off, it works (MtouchUseLlvm set to false).**\r\n\r\nThe code behind is very simple and straightforward:\r\n\r\n```\r\npublic override void Awake(NSObject context)\r\n    {\r\n        base.Awake(context);\r\n\r\n        ...\r\n\r\n        // hook the Digital Crown delegate\r\n        CrownSequencer.Delegate = this;\r\n    }\r\n\r\n    public override async void WillActivate()\r\n    {\r\n        ...\r\n\r\n        CrownSequencer.Focus();\r\n    }\r\n\r\n    [Export(\"crownDidRotate:rotationalDelta:\")]\r\n    public void CrownDidRotate(WKCrownSequencer crownSequencer, double rotationalDelta)\r\n    {\r\n        ...\r\n    }\r\n\r\n```\r\n\r\n### Expected Behavior\r\n\r\nThe Release build should work the same as Debug / AdHoc.\r\n\r\n### Actual Behavior\r\n\r\nCrash.\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.5.6\r\nVisualStudio.15.Release/15.5.6+27130.2027\r\nMicrosoft .NET Framework\r\nVersion 4.7.02046\r\n\r\nInstalled Version: Enterprise\r\n\r\nArchitecture Diagrams and Analysis Tools   00369-60000-00001-AA464\r\nMicrosoft Architecture Diagrams and Analysis Tools\r\n\r\nPTM Platform Tools   00369-60000-00001-AA464\r\nProvides extension functions and templates around the OMICRON PTM platform.\r\n\r\nVisual Basic 2017   00369-60000-00001-AA464\r\nMicrosoft Visual Basic 2017\r\n\r\nVisual C# 2017   00369-60000-00001-AA464\r\nMicrosoft Visual C# 2017\r\n\r\nVisual F# 4.1   00369-60000-00001-AA464\r\nMicrosoft Visual F# 4.1\r\n\r\n.NET Portability Analyzer   1.1.10808.0\r\nEvaluates portability of assemblies across .NET platforms.\r\n\r\nApplication Insights Tools for Visual Studio Package   8.10.01106.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.31127.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   1.0\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.51007.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.31106.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.2.9000.1\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Data Lake Tools for Visual Studio   2.2.9000.1\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nJetBrains ReSharper Ultimate 2017.3.2    Build 111.0.20180201.63358\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.2.9000.1\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.2.9000.1\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.0\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.2.9000.1\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.51120.3\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.8.4-pre (3fe64e3)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.5.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nRedgate ReadyRoll   1.16.18038.8301\r\nExtend DevOps processes to your SQL Server databases and safely automate database deployments.\r\n    \r\nVisit https://www.red-gate.com/readyroll for more information.\r\n\r\nCopyright (C) 2011 Red Gate Software Ltd. All rights reserved.\r\n  \r\nThis software contains components from Component Owl.\r\nSQL Server is a registered trademark of Microsoft Corporation. \r\nVisual Studio is a registered trademark of Microsoft Corporation. \r\n\r\nReadyRoll contains code from the following open source software:\r\n\r\nNuGet https://www.nuget.org/\r\nSQL LocalDB Wrapper https://github.com/martincostello/sqllocaldb\r\nAutofac https://autofac.org/\r\nJson.NET https://json.net/\r\nMahApps.Metro http://mahapps.com/\r\nSemVer https://github.com/maxhauser/semver\r\nLog4Net http://logging.apache.org/log4net/\r\nExtended WPF Toolkit https://wpftoolkit.codeplex.com/\r\nCode InfoBox VSX http://www.codeproject.com/Articles/55196/Code-InfoBox-Visual-Studio-Extension-VSX\r\nOctoPack https://github.com/OctopusDeploy/OctoPack\r\nSQLite https://sqlite.org/\r\n\r\nThis product contains icons from http://www.visualpharm.com distributed under a free backlink license.\r\n\r\nFor license details or other notices relating to the above software, please see NOTICE.TXT and EULA.rtf in the ReadyRoll application folder.\r\n    \r\n\r\nRedgate SQL Prompt   9.0.10.4053\r\nWrite, format, and refactor SQL effortlessly\r\n\r\nSnapshot Debugging Extension   1.0\r\nSnapshot Debugging Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61710.120\r\nMicrosoft SQL Server Data Tools\r\n\r\nSummaryInformation   1.0\r\nOMICRON TeamFoundation build summary information extension\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.5.11025.1\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27130.2020\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWebJobs Tools v1.0.0   15.0.31201.0\r\nWebJobs Tools v1.0.0\r\n\r\nWiX Toolset Visual Studio Extension   0.9.21.62588\r\nWiX Toolset Visual Studio Extension version 0.9.21.62588\r\nCopyright (c) .NET Foundation and contributors. All rights reserved.\r\n\r\nWixProductivityTools   1.0\r\nTools to enhance productivity of WiX Toolset\r\n\r\nXamarin   4.8.0.760 (fc93f3f5b)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.8.188 (c5813fa34)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.1.5.0 (HEAD/75f8c6838)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.6.1.4 (db807ec)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\nException Type: EXC_CRASH (SIGABRT)\r\nException Codes: 0x0000000000000000, 0x0000000000000000\r\nException Note: EXC_CORPSE_NOTIFY\r\nTriggered by Thread: 0\r\n\r\nApplication Specific Information:\r\nabort() called\r\n\r\nFiltered syslog:\r\nNone found\r\n\r\nLast Exception Backtrace:\r\n0 CoreFoundation 0x1be535e8 exceptionPreprocess + 124\r\n1 libobjc.A.dylib 0x1b1b317c objc_exception_throw + 33\r\n2 PTMate.Watch.WatchOSExtension 0x0174a3ac xamarin_process_managed_exception + 22913964 (runtime.m:2291)\r\n3 PTMate.Watch.WatchOSExtension 0x00179f5e native_to_managed_trampoline_12(objc_object*, objc_selector*, _MonoMethod**, WKCrownSequencer*, double, unsigned int) + 40798 (registrar.m:531)\r\n4 PTMate.Watch.WatchOSExtension 0x00179e0a -[InfoController crownDidRotate:rotationalDelta:] + 40458 (registrar.m:2179)\r\n5 WatchKit 0x2b5b5a76 __36-[WKCrownSequencer handleCrownTask:]_block_invoke.29 + 47\r\n6 WatchKit 0x2b5c4c6a spUtils_dispatchAsyncToMainThread + 19\r\n7 WatchKit 0x2b5b59ec -[WKCrownSequencer handleCrownTask:] + 867\r\n8 WatchKit 0x2b5c33b0 -[WKInterfaceController handleCrownTask:] + 63\r\n9 WatchKit 0x2b5aef18 -[SPRemoteInterface interfaceViewController:crownData:] + 125\r\n10 SockPuppetGizmo 0x2c55cd2c __62-[SPCompanionConnection xpcInterfaceViewController:crownData:]_block_invoke + 79\r\n11 SockPuppetGizmo 0x2c55c9e8 __62-[SPCompanionConnection performOnSendQueue:syncIfUnsuspended:]_block_invoke.565 + 485\r\n12 WatchKit 0x2b5c4c6a spUtils_dispatchAsyncToMainThread + 19\r\n13 SockPuppetGizmo 0x2c55c334 -[SPCompanionConnection performOnSendQueue:syncIfUnsuspended:] + 1127\r\n14 SockPuppetGizmo 0x2c55ccb2 -[SPCompanionConnection xpcInterfaceViewController:crownData:] + 133\r\n15 SockPuppetGizmo 0x2c54f342 -[SPApplicationDelegate xpcInterfaceViewController:crownData:] + 109\r\n16 SockPuppetGizmo 0x2c5992c6 -[SPInterfaceViewController forwardCrownDataToVCDelegate:] + 65\r\n17 SockPuppetGizmo 0x2c539a7c -[SPCrownSequencer crownInputSequencerIdleDidChange:] + 77\r\n18 PepperUICore 0x259c860e -[PUICCrownInputSequencer _notifyObserversOfIdleChange] + 59\r\n19 PepperUICore 0x259c7d76 -[PUICCrownInputSequencer _displayLinkFired:] + 373\r\n20 QuartzCore 0x1ed7730c CA::Display::DisplayLink::dispatch_items+ 49932 (unsigned long long, unsigned long long, unsigned long long) + 675\r\n21 IOMobileFramebuffer 0x1e479116 IOMobileFramebufferVsyncNotifyFunc + 79\r\n22 IOKit 0x1c0ac47e IODispatchCalloutFromCFMessage + 229\r\n23 CoreFoundation 0x1bdf9c48 __CFMachPortPerform + 143\r\n24 CoreFoundation 0x1be0fb4c __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION + 35\r\n25 CoreFoundation 0x1be0f31a __CFRunLoopDoSource1 + 357\r\n26 CoreFoundation 0x1be0cfe0 __CFRunLoopRun + 1087\r\n27 CoreFoundation 0x1bd5a96a CFRunLoopRunSpecific + 349\r\n28 GraphicsServices 0x1d91ab92 GSEventRunModal + 89\r\n29 UIKit 0x21fb16da UIApplicationMain + 151\r\n30 libxpc.dylib 0x1bb8bd78 _xpc_objc_main + 581\r\n31 libxpc.dylib 0x1bb8d720 xpc_main + 149\r\n32 Foundation 0x1c817f24 -[NSXPCListener resume] + 175\r\n33 PlugInKit 0x22d27f40 -[PKService run] + 709\r\n34 WatchKit 0x2b5d37b8 main + 157\r\n35 PTMate.Watch.WatchOSExtension 0x0174f598 xamarin_main + 22934936 (monotouch-main.m:479)\r\n36 PTMate.Watch.WatchOSExtension 0x0017e096 xamarin_watchextension_main + 57494 (main.m:63)\r\n37 libdyld.dylib 0x1b93eb8e 0x1b93b000 + 15246"},{"Id":"7367308358","Type":"PullRequestEvent","CreatedAt":"2018-03-12T17:54:19","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3722","RelatedDescription":"Merged pull request \"Bump mono to head of 2017-12 to pick [Weak] fix\" (#3722) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\n\n* mono/mono@ef8ab4986af Fix the clearing of bits in the gc descriptor bitmap when using weak fields. Fixes #7378.\n\nDiff: https://github.com/mono/mono/compare/266326d7c21b4b6f523145fa87ade0b6fdc5bd6c...ef8ab4986afd8d0e8d6e0efb6482cef6fe3f3350"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"973272277876752385","CreatedAt":"2018-03-12T18:59:28+00:00","UserScreenname":"xamarinhq","Text":"Start your week off with the @XamarinPodcast, featuring discussion of #VS2017 version 15.6, AR with UrhoSharp, and… https://t.co/xgDtF4E72X","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"973226616020176896","CreatedAt":"2018-03-12T15:58:01+00:00","UserScreenname":"xamarinhq","Text":"CoreML Programming with Xamarin.Mac and F#: https://t.co/vI7JuxjkWa https://t.co/MkadlSMfqL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":7,"RawContent":null},{"Id":"972993579109974016","CreatedAt":"2018-03-12T00:32:01+00:00","UserScreenname":"xamarinhq","Text":"The open source suite of SmartHotel360 reference apps includes mobile and desktop apps for business travelers, a we… https://t.co/i9MWn6ypXY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":129,"FavoriteCount":43,"RawContent":null},{"Id":"972643544832856065","CreatedAt":"2018-03-11T01:21:06+00:00","UserScreenname":"xamarinhq","Text":"Get started with the #Xamarin Live Player for iOS: https://t.co/jQnSvYwtB1 https://t.co/sa0DV2n2aD","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":93,"FavoriteCount":53,"RawContent":null},{"Id":"972152285550862336","CreatedAt":"2018-03-09T16:49:01+00:00","UserScreenname":"xamarinhq","Text":"Build a simple #XamarinForms chat app that leverages and connects to an https://t.co/y9erV6ivVL Core #WebSocket:… https://t.co/hDELQELDqc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":140,"FavoriteCount":55,"RawContent":null},{"Id":"971835801377091585","CreatedAt":"2018-03-08T19:51:25+00:00","UserScreenname":"xamarinhq","Text":"Learn how you can contribute to Xamarin.iOS and Xamarin.Mac—no code necessary! Get started: https://t.co/XU5OJkcXCt https://t.co/FGappPLbxT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":72,"FavoriteCount":26,"RawContent":null},{"Id":"971796730722377729","CreatedAt":"2018-03-08T17:16:10+00:00","UserScreenname":"xamarinhq","Text":"An introduction to #tvOS with #Xamarin: https://t.co/A5jZpraqm1 https://t.co/Qafo4W8L3m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":17,"FavoriteCount":5,"RawContent":null},{"Id":"971430573867720704","CreatedAt":"2018-03-07T17:01:11+00:00","UserScreenname":"xamarinhq","Text":"Learn how to turn on automatic signing that allows #VS4Mac to take care of generating and using the required signin… https://t.co/snE707bjji","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":11,"RawContent":null},{"Id":"971119957894418433","CreatedAt":"2018-03-06T20:26:55+00:00","UserScreenname":"xamarinhq","Text":"#VS2017 version 15.6 is now available! Get all the details on this exciting release: https://t.co/QIxlfX9I7F","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":70,"FavoriteCount":35,"RawContent":null},{"Id":"971068644288540672","CreatedAt":"2018-03-06T17:03:01+00:00","UserScreenname":"xamarinhq","Text":"Simplified app signing with secure files in #VSTS: https://t.co/O5XooxuL40 https://t.co/b0oYm5btmK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":16,"RawContent":null},{"Id":"970709776488419328","CreatedAt":"2018-03-05T17:17:00+00:00","UserScreenname":"xamarinhq","Text":"DataBinding Power Moves You May Not Be Using (Yet), with @davidortinau: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":17,"RawContent":null},{"Id":"970456916488015873","CreatedAt":"2018-03-05T00:32:13+00:00","UserScreenname":"xamarinhq","Text":"Add a little 3D to your #Xamarin iOS apps with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/jQn1NkyLSA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":27,"FavoriteCount":12,"RawContent":null},{"Id":"970104538375118848","CreatedAt":"2018-03-04T01:12:00+00:00","UserScreenname":"xamarinhq","Text":"Better resource organization in #XamarinForms: https://t.co/8bKeJx4e22","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":18,"RawContent":null},{"Id":"969656588805001217","CreatedAt":"2018-03-02T19:32:00+00:00","UserScreenname":"xamarinhq","Text":"You don't want to miss this! It's your chance to ask living legend @migueldeicaza your questions in his @reddit… https://t.co/6qG4JhCwia","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":8,"FavoriteCount":6,"RawContent":null},{"Id":"969616829483311104","CreatedAt":"2018-03-02T16:54:01+00:00","UserScreenname":"xamarinhq","Text":"Add cross-platform charts to any app the easy way with #MicroCharts: https://t.co/VeqfS1vfIL https://t.co/3D8bDqoefW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":110,"FavoriteCount":33,"RawContent":null},{"Id":"969291313173745665","CreatedAt":"2018-03-01T19:20:32+00:00","UserScreenname":"xamarinhq","Text":"Amp up your skills with a #Xamarin mobile developer event near you in March: https://t.co/glgXli4KCp https://t.co/hUYXkqMYl6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":14,"RawContent":null},{"Id":"969256455504318464","CreatedAt":"2018-03-01T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDgfF2Z https://t.co/MNLAkVzqaz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":21,"FavoriteCount":7,"RawContent":null},{"Id":"968935619358527488","CreatedAt":"2018-02-28T19:47:08+00:00","UserScreenname":"xamarinhq","Text":"Check out the new, feature-packed release of #UrhoSharp 1.8: https://t.co/ZxSIstdhNE https://t.co/cwathwkTEw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":22,"RawContent":null}]}},"RunOn":"2018-03-13T05:30:43.2587739Z","RunDurationInMilliseconds":4671}