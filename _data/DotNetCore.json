{"Data":{"Blog":{"FeedItems":[{"Title":".NET Core April 2019 Updates – 2.1.10 and 2.2.4","PublishedOn":"2019-04-09T20:35:28+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core April 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on included fixes.\n\n.NET Core 2.2.4 and .NET...","Href":"https://devblogs.microsoft.com/dotnet/net-core-april-2019-updates-2-1-10-and-2-2-4/","RawContent":null},{"Title":"Announcing ML.NET 1.0 RC – Machine Learning for .NET","PublishedOn":"2019-04-05T23:36:08+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers. Using ML.NET, developers can leverage their existing tools and skillsets to develop...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-0-rc-machine-learning-for-net/","RawContent":null},{"Title":".NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019","PublishedOn":"2019-04-02T21:47:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we released the March 2019 Update for Windows 10 version 1809 and Windows Server 2019.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/","RawContent":null},{"Title":"Visual Studio 2019 .NET productivity","PublishedOn":"2019-04-02T19:00:17+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Your friendly neighborhood .NET productivity team (aka. Roslyn) focuses a lot on improving the .NET coding experience. Sometimes it’s the little refactorings and code fixes that really improve your...","Href":"https://devblogs.microsoft.com/dotnet/visual-studio-2019-net-productivity-2/","RawContent":null},{"Title":"Handling a new era in the Japanese calendar in .NET","PublishedOn":"2019-04-02T10:40:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Typically, calendar eras represent long time periods. In the Gregorian calendar, for example, the current era spans (as of this year) 2,019 years. In the Japanese calendar, however, a new era begins...","Href":"https://devblogs.microsoft.com/dotnet/handling-a-new-era-in-the-japanese-calendar-in-net/","RawContent":null},{"Title":"Announcing F# 4.6","PublishedOn":"2019-03-29T21:40:28+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re excited to announce general availability of F# 4.6 and the F# tools for Visual Studio 2019! In this post, I&#8217;ll show you how to get started, explain the F# 4.6 feature set, give you...","Href":"https://devblogs.microsoft.com/dotnet/announcing-f-4-6/","RawContent":null},{"Title":"Migrating Delegate.BeginInvoke Calls for .NET Core","PublishedOn":"2019-03-28T21:29:50+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"I recently worked with a couple customers migrating applications to .NET Core that had to make code changes to workaround BeginInvoke and EndInvoke methods on delegates not being supported on .NET...","Href":"https://devblogs.microsoft.com/dotnet/migrating-delegate-begininvoke-calls-for-net-core/","RawContent":null},{"Title":".NET Framework March 2019 Update","PublishedOn":"2019-03-20T00:40:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we released the March 2019 Update.\nQuality and Reliability\nThis release contains the following quality and reliability improvements.\nCLR\n\nAddresses an issue in which the Framework throws an...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/","RawContent":null},{"Title":".NET Core Container Images now Published to Microsoft Container Registry","PublishedOn":"2019-03-15T14:12:09+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We are now publishing .NET Core container images to Microsoft Container Registry (MCR). We have also made other changes to the images we publish, described in this post.\nImportant: You will need to...","Href":"https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/","RawContent":null},{"Title":".NET Core March 2019 Updates – 1.0.15, 1.1.12, 2.1.9 and 2.2.3","PublishedOn":"2019-03-12T22:59:50+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core March 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on included reliability fixes.\n\n.NET Core...","Href":"https://devblogs.microsoft.com/dotnet/net-core-march-2019/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9341532248","Type":"PullRequestEvent","CreatedAt":"2019-03-29T14:44:24","Actor":"BillWagner","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Merged pull request \"add docs samples link\" (#142) at dotnet/foundation","RelatedBody":"@BillWagner should we add the samples project too?"},{"Id":"9337730849","Type":"PullRequestEvent","CreatedAt":"2019-03-29T02:29:48","Actor":"mairaw","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Opened pull request \"add docs samples link\" (#142) at dotnet/foundation","RelatedBody":"@BillWagner should we add the samples project too?"},{"Id":"9337725308","Type":"PullRequestEvent","CreatedAt":"2019-03-29T02:28:20","Actor":"mairaw","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Opened pull request \"add links to ML.NET docs\" (#141) at dotnet/foundation","RelatedBody":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects"},{"Id":"9337679090","Type":"PullRequestEvent","CreatedAt":"2019-03-29T02:16:08","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Merged pull request \"Add link to ASP.NET Core docs\" (#139) at dotnet/foundation","RelatedBody":"Provide a link to the docs site for ASP.NET Core."},{"Id":"9337677839","Type":"PullRequestEvent","CreatedAt":"2019-03-29T02:15:48","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Merged pull request \"add links to .NET docs\" (#140) at dotnet/foundation","RelatedBody":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?"},{"Id":"9335742237","Type":"PullRequestEvent","CreatedAt":"2019-03-28T19:21:55","Actor":"BillWagner","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Opened pull request \"add links to .NET docs\" (#140) at dotnet/foundation","RelatedBody":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?"},{"Id":"9335605309","Type":"PullRequestEvent","CreatedAt":"2019-03-28T19:00:02","Actor":"scottaddie","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Opened pull request \"Add link to ASP.NET Core docs\" (#139) at dotnet/foundation","RelatedBody":"Provide a link to the docs site for ASP.NET Core."},{"Id":"9266562420","Type":"PullRequestEvent","CreatedAt":"2019-03-18T21:04:01","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Merged pull request \"Add V3.1 repo and change documentation link\" (#137) at dotnet/foundation","RelatedBody":""},{"Id":"9266559615","Type":"PullRequestEvent","CreatedAt":"2019-03-18T21:03:34","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Merged pull request \"Add Dave to cake.md\" (#138) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9425046734","Type":"IssuesEvent","CreatedAt":"2019-04-11T15:16:44","Actor":"KathleenDollard","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Opened issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107) at dotnet/announcements","RelatedBody":".NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](need link) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. "},{"Id":"9228689700","Type":"IssuesEvent","CreatedAt":"2019-03-12T17:35:17","Actor":"vivmishra","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Opened issue \"March 2019 .NET Updates\" (#103) at dotnet/announcements","RelatedBody":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0))\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9429175275","Type":"PullRequestEvent","CreatedAt":"2019-04-12T04:45:57","Actor":"kouvel","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/23597","RelatedDescription":"Closed pull request \"Rename tiers and config options, add config option JitTier0ForLoops\" (#23597) at dotnet/coreclr","RelatedBody":"Depends on #23599\r\n\r\n- Renamed tier 0 / tier 1 to StartupTier, OptimizedTier\r\n- Added config option QuickJitForLoops, which determines whether quick JIT, when enabled, may be used for methods that contain loops. Off by default, so after this change, StartupTierQuickJit=1 or ForceQuickJit=1 would still not use quick JIT for methods that contain loops by default."},{"Id":"9429096627","Type":"PullRequestEvent","CreatedAt":"2019-04-12T04:20:28","Actor":"bdebaere","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/23923","RelatedDescription":"Opened pull request \"Consolidate duplicate assignment\" (#23923) at dotnet/coreclr","RelatedBody":"Consolidate duplicate assignment."},{"Id":"9429010196","Type":"PullRequestEvent","CreatedAt":"2019-04-12T03:53:31","Actor":"bdebaere","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/23922","RelatedDescription":"Opened pull request \"Remove duplicates\" (#23922) at dotnet/coreclr","RelatedBody":"Remove duplicates in enum."},{"Id":"9428999309","Type":"PullRequestEvent","CreatedAt":"2019-04-12T03:50:18","Actor":"GrabYourPitchforks","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21948","RelatedDescription":"Merged pull request \"Add optimized UTF-8 validation and transcoding apis, hook them up to UTF8Encoding\" (#21948) at dotnet/coreclr","RelatedBody":"This is the first batch of the improved UTF-8 validation and transcoding APIs. There's a single workhorse method used for validation and for counting the number of code units that would result from transcoding.\r\n\r\nPhilosophically, these methods differ from existing methods on `System.Text.Encoding`. The existing `Encoding` methods really push consumers to transcode all data to UTF-16 so that they can take advantage of existing UTF-16 data manipulation and inspection APIs. Instead, these new APIs expose information about the underlying structure of the UTF-8 data itself. The intent is that error handling (\"I found an invalid subsequence in the stream; what do I do now?\") is pushed to a higher layer. That higher layer can be built on top of this API and other inspection APIs in order to provide the desired error handling semantics. This will be clearer when the `OperationStatus`-based APIs come online in a future PR.\r\n\r\nBenchmarks are pending.\r\n\r\nUnit tests at https://github.com/dotnet/corefx/pull/34538.\r\n\r\nResolves https://github.com/dotnet/corefx/issues/36163."},{"Id":"9428995013","Type":"PullRequestEvent","CreatedAt":"2019-04-12T03:49:02","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/23912","RelatedDescription":"Merged pull request \"Fix19817\" (#23912) at dotnet/coreclr","RelatedBody":"Assembly.LoadFromPartialName(string) should not throw FileNotFoundException\r\nrather it should return null.\r\n\r\nFixes #19817"},{"Id":"9428994984","Type":"IssuesEvent","CreatedAt":"2019-04-12T03:49:01","Actor":"sdmaclea","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/19817","RelatedDescription":"Closed issue \"LoadWithPartialName should not throw according to documentation\" (#19817) at dotnet/coreclr","RelatedBody":"_From @LasseNisted on August 28, 2018 11:35_\n\nAccording to the documentation at\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.reflection.assembly.loadwithpartialname?view=netcore-2.1\r\nAssembly.LoadWithPartialName should not throw a FileNotFoundException. And this is also the case in .NET Framework 4.7.1. However, in .NET Core 2.1 it is implemented via Assembly.Load which throws. The documentation or implementation should be updated.\n\n_Copied from original issue: dotnet/corefx#31999_"},{"Id":"9428772849","Type":"PullRequestEvent","CreatedAt":"2019-04-12T02:45:04","Actor":"davidwrighton","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/23921","RelatedDescription":"Opened pull request \"[WIP] More multi-appdomain support removal\" (#23921) at dotnet/coreclr","RelatedBody":"- Remove DomainLocalBlock\r\n- Remove DomainModule\r\n- Remove FindDomain(File/Module/Assembly)\r\n- Remove GetDomainModule\r\n- Remove variants of GetDomain(File/Assembly) that take AppDomain parameter"},{"Id":"9428692128","Type":"PullRequestEvent","CreatedAt":"2019-04-12T02:22:33","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/23917","RelatedDescription":"Merged pull request \"Update Version annotations to match changes in master\" (#23917) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9428284827","Type":"PullRequestEvent","CreatedAt":"2019-04-12T00:25:08","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11143","RelatedDescription":"Opened pull request \"dotnet tool --local update\" (#11143) at dotnet/cli","RelatedBody":""},{"Id":"9428197792","Type":"PullRequestEvent","CreatedAt":"2019-04-12T00:01:25","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11142","RelatedDescription":"Opened pull request \"Merge release/2.2.2xx to release/3.0.1xx\" (#11142) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9428197612","Type":"PullRequestEvent","CreatedAt":"2019-04-12T00:01:22","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11141","RelatedDescription":"Opened pull request \"Merge release/2.1.6xx to release/2.2.2xx\" (#11141) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9428197433","Type":"PullRequestEvent","CreatedAt":"2019-04-12T00:01:20","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11140","RelatedDescription":"Opened pull request \"Merge release/2.2.1xx to release/2.2.2xx\" (#11140) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9427947710","Type":"IssuesEvent","CreatedAt":"2019-04-11T22:53:56","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/11139","RelatedDescription":"Opened issue \"Local tools uninstall should uninstall from the first manfiest with package id\" (#11139) at dotnet/cli","RelatedBody":"instead of the first manfiest regradless"},{"Id":"9427862858","Type":"PullRequestEvent","CreatedAt":"2019-04-11T22:33:46","Actor":"nugetlurker","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11138","RelatedDescription":"Opened pull request \"Insert NuGet Build 5.0.1-rtm.5946 into cli\" (#11138) at dotnet/cli","RelatedBody":"Insert NuGet Build 5.0.1-rtm.5946 into cli release/2.1.6xx branch"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9428686315","Type":"IssuesEvent","CreatedAt":"2019-04-12T02:20:57","Actor":"DSBRBrasil","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1138","RelatedDescription":"Opened issue \"Xml validate [ type is not declared ]\" (#1138) at dotnet/standard","RelatedBody":"Hi,\r\nWhy, I don't  validate a document using .net standard 2.0? I get that's message: Type not declared\r\nThat's my code:\r\n```\r\n var xDoc = XDocument.Parse(\"<consStatServ versao=\\\"4.00\\\" xmlns=\\\"http://www.portalfiscal.inf.br/nfe\\\"><tpAmb>2</tpAmb><cUF>29</cUF><xServ>STATUS</xServ></consStatServ>\");\r\n   var xss = new XmlSchemaSet();\r\n   xss.Add(\"http://www.portalfiscal.inf.br/nfe\", @\"D:\\Schemas\\consStatServ_v4.00.xsd\");\r\n   //Validar Xml\r\n   xDoc.Validate(xss, (sender, args) =>\r\n            {\r\n                throw new FalhaValidacaoSchemaException(args.Message);\r\n\r\n            });\r\n```"},{"Id":"9423569421","Type":"PullRequestEvent","CreatedAt":"2019-04-11T12:13:49","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1137","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1137) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190410.7\r\n- **Date Produced**: 4/11/2019 3:17 AM\r\n- **Commit**: 4f645e4a5385eb96cad3f72f5ded239761c7d075\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19210.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19210.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19210.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19210.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19210.7\r\n\r\n"},{"Id":"9423504616","Type":"PullRequestEvent","CreatedAt":"2019-04-11T12:03:44","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1137","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1137) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190410.7\r\n- **Date Produced**: 4/11/2019 3:17 AM\r\n- **Commit**: 4f645e4a5385eb96cad3f72f5ded239761c7d075\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19210.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19210.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19210.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19210.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19210.7\r\n\r\n"},{"Id":"9415257114","Type":"PullRequestEvent","CreatedAt":"2019-04-10T12:13:44","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1136","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1136) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190409.2\r\n- **Date Produced**: 4/9/2019 12:54 PM\r\n- **Commit**: 63b76f3f952f821d0a7996427a9f3534f1c25ab7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19209.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19209.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19209.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19209.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19209.2\r\n\r\n"},{"Id":"9415188185","Type":"PullRequestEvent","CreatedAt":"2019-04-10T12:03:39","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1136","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#1136) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190409.2\r\n- **Date Produced**: 4/9/2019 12:54 PM\r\n- **Commit**: 63b76f3f952f821d0a7996427a9f3534f1c25ab7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19209.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19209.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19209.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19209.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19209.2\r\n\r\n"},{"Id":"9408938517","Type":"PullRequestEvent","CreatedAt":"2019-04-09T16:30:38","Actor":"JohnTortugo","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1126","RelatedDescription":"Merged pull request \"Onboard on async publishing\" (#1126) at dotnet/standard","RelatedBody":"Relates to: https://github.com/dotnet/arcade/issues/2442\r\n\r\nGoal: mitigate `lock on the feed problem` and add further validations. [More details here.](https://github.com/dotnet/arcade/blob/master/Documentation/CorePackages/AsyncPublishing_HowToUse.md)\r\n\r\nTest build was here: https://dnceng.visualstudio.com/internal/_build/results?buildId=144566\r\nTest release: https://dnceng.visualstudio.com/internal/_releaseProgress?_a=release-pipeline-progress&releaseId=4241"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9429258656","Type":"IssuesEvent","CreatedAt":"2019-04-12T05:12:13","Actor":"tmds","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/36809","RelatedDescription":"Opened issue \"DefaultLoadContextTests.LoadInDefaultContext test failure\" (#36809) at dotnet/corefx","RelatedBody":"This test has been failing on my machine when running corefx tests for a while. I have not investigated further. This is in the testResults.xml:\r\n```\r\n      <test name=\"System.Runtime.Loader.Tests.DefaultLoadContextTests.LoadInDefaultContext\" type=\"System.Runtime.Loader.Tests.DefaultLoadContextTests\" method=\"LoadInDefaultContext\" time=\"0.0075109\" result=\"Fail\">\r\n        <traits>\r\n          <trait name=\"category\" value=\"nonuapaottests\" />\r\n        </traits>\r\n        <failure exception-type=\"Xunit.Sdk.ThrowsException\">\r\n          <message><![CDATA[Assert.Throws() Failure\\nExpected: typeof(System.IO.FileNotFoundException)\\nActual:   (No exception was thrown)]]></message>\r\n          <stack-trace><![CDATA[   at System.Runtime.Loader.Tests.DefaultLoadContextTests.LoadInDefaultContext() in /home/tmds/repos/corefx/src/System.Runtime.Loader/tests/DefaultContext/DefaultLoadContextTest.cs:line 94]]></stack-trace>\r\n        </failure>\r\n      </test>\r\n```"},{"Id":"9429224635","Type":"PullRequestEvent","CreatedAt":"2019-04-12T05:01:36","Actor":"cston","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/36808","RelatedDescription":"Opened pull request \"Port ErrObject and CreateProjectError\" (#36808) at dotnet/corefx","RelatedBody":"Port `ErrObject` and `CreateProjectError` from reference source."},{"Id":"9429070064","Type":"PullRequestEvent","CreatedAt":"2019-04-12T04:11:54","Actor":"grant-d","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/pull/35576","RelatedDescription":null,"RelatedBody":"See https://github.com/dotnet/coreclr/pull/22798\r\nAll units pass (in a private repo)\r\n\r\nThe spec requires in order of 24 + 9 = **33** new units:\r\n\r\nExisting `ReadOnlySpan<char>` methods (**9**)\r\n```\r\nTrim(ReadOnlySpan<Char>)\r\nTrim(ReadOnlySpan<Char>, Char)\r\nTrim(ReadOnlySpan<Char>, ReadOnlySpan<Char>)\r\n\r\nTrimEnd(ReadOnlySpan<Char>)\r\nTrimEnd(ReadOnlySpan<Char>, Char)\r\nTrimEnd(ReadOnlySpan<Char>, ReadOnlySpan<Char>)\r\n\r\nTrimStart(ReadOnlySpan<Char>)\r\nTrimStart(ReadOnlySpan<Char>, Char)\r\nTrimStart(ReadOnlySpan<Char>, ReadOnlySpan<Char>)\r\n```\r\n\r\n- [x] Generate latest in ref folder (`dotnet msbuild /t:GenerateReferenceSource`)\r\n- [x] This build is expected to fail until the PR from `coreclr` is sync'd\r\n\r\nFor each of `Span<char>`, `Memory<char>`, `ReadOnlyMemory<char>` (**9**)\r\nProject location: `src/System.Runtime/tests/System/StringTests.netcoreapp.cs`\r\n- [x] Add to [System.Memory](src/System.Memory/ref/System.Memory.cs) Ref Assembly\r\n- [x] `Trim(buffer<char>)`\r\n- [x] `TrimEnd(buffer<char>)`\r\n- [x] `TrimStart(buffer<char>)`\r\n\r\nFor each of `ReadOnlySpan<T>`, `Span<T>`, `Memory<T>`, `ReadOnlyMemory<T>` (**24**)\r\nProject location: `src/System.Memory/tests/Memory/Trim.cs`\r\n- [x] Add to [System.Memory](src/System.Memory/ref/System.Memory.cs) Ref Assembly\r\n- [x] `Trim(buffer<T>, T)`\r\n- [x] `Trim(buffer<T>, ReadOnlySpan<T>)`\r\n- [x] `TrimEnd(buffer<T>, T)`\r\n- [x] `TrimEnd(buffer<T>, ReadOnlySpan<T>)`\r\n- [x] `TrimStart(buffer<T>, T)`\r\n- [x] `TrimStart(buffer<T>, ReadOnlySpan<T>)`"},{"Id":"9429069769","Type":"PullRequestEvent","CreatedAt":"2019-04-12T04:11:48","Actor":"grant-d","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/35576","RelatedDescription":"Closed pull request \"Ref Assembly and Units for Span.Trim\" (#35576) at dotnet/corefx","RelatedBody":"See https://github.com/dotnet/coreclr/pull/22798\r\nAll units pass (in a private repo)\r\n\r\nThe spec requires in order of 24 + 9 = **33** new units:\r\n\r\nExisting `ReadOnlySpan<char>` methods (**9**)\r\n```\r\nTrim(ReadOnlySpan<Char>)\r\nTrim(ReadOnlySpan<Char>, Char)\r\nTrim(ReadOnlySpan<Char>, ReadOnlySpan<Char>)\r\n\r\nTrimEnd(ReadOnlySpan<Char>)\r\nTrimEnd(ReadOnlySpan<Char>, Char)\r\nTrimEnd(ReadOnlySpan<Char>, ReadOnlySpan<Char>)\r\n\r\nTrimStart(ReadOnlySpan<Char>)\r\nTrimStart(ReadOnlySpan<Char>, Char)\r\nTrimStart(ReadOnlySpan<Char>, ReadOnlySpan<Char>)\r\n```\r\n\r\n- [x] Generate latest in ref folder (`dotnet msbuild /t:GenerateReferenceSource`)\r\n- [x] This build is expected to fail until the PR from `coreclr` is sync'd\r\n\r\nFor each of `Span<char>`, `Memory<char>`, `ReadOnlyMemory<char>` (**9**)\r\nProject location: `src/System.Runtime/tests/System/StringTests.netcoreapp.cs`\r\n- [x] Add to [System.Memory](src/System.Memory/ref/System.Memory.cs) Ref Assembly\r\n- [x] `Trim(buffer<char>)`\r\n- [x] `TrimEnd(buffer<char>)`\r\n- [x] `TrimStart(buffer<char>)`\r\n\r\nFor each of `ReadOnlySpan<T>`, `Span<T>`, `Memory<T>`, `ReadOnlyMemory<T>` (**24**)\r\nProject location: `src/System.Memory/tests/Memory/Trim.cs`\r\n- [x] Add to [System.Memory](src/System.Memory/ref/System.Memory.cs) Ref Assembly\r\n- [x] `Trim(buffer<T>, T)`\r\n- [x] `Trim(buffer<T>, ReadOnlySpan<T>)`\r\n- [x] `TrimEnd(buffer<T>, T)`\r\n- [x] `TrimEnd(buffer<T>, ReadOnlySpan<T>)`\r\n- [x] `TrimStart(buffer<T>, T)`\r\n- [x] `TrimStart(buffer<T>, ReadOnlySpan<T>)`"},{"Id":"9428999284","Type":"IssuesEvent","CreatedAt":"2019-04-12T03:50:18","Actor":"GrabYourPitchforks","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/36163","RelatedDescription":"Closed issue \"UTF8Encoding drops bytes during decoding some input sequences\" (#36163) at dotnet/corefx","RelatedBody":"For some input byte sequences `System.Text.UTF8Encoding` looses, or silently drops some bytes. That is, the bytes are neither decoded by the internal decoder nor are they passed to the installed `DecoderFallback`.\r\n\r\n**Example**. The encoded input is 3 valid ASCII characters, 3 bytes encoding a surrogate character, and again 3 valid ASCII characters. The default encoding singleton instance uses a decoder replacement fallback, which converts every invalid byte to U+FFFD (`'�'`).\r\n```csharp\r\nbyte[] encoded = new byte[] { \r\n    (byte)'a', (byte)'b', (byte)'c', \r\n    0xED, 0xA0, 0x90, \r\n    (byte)'x', (byte)'y', (byte)'z' \r\n};\r\nchar[] decoded;\r\ndecoded = Encoding.UTF8.GetChars(encoded);\r\nConsole.WriteLine(decoded);\r\n```\r\nProduced output:\r\n```\r\nabc��xyz\r\n```\r\nExpected output:\r\n```\r\nabc���xyz\r\n```\r\nThe produced output is only 8 characters long. Although it is not visible in the example above, further debugging with a custom `DecoderFallback` implementation reveals that the first two invalid bytes (0xED, 0xA0) are being passed to the fallback, but the byte 0x90 is skipped.\r\n\r\nAlso, continuing the example, compare to the correct behaviour of the `ASCIIEncoding`, also with the default replacement fallback.\r\n```csharp\r\ndecoded = Encoding.ASCII.GetChars(encoded);\r\nConsole.WriteLine(decoded);\r\n```\r\nProduced correct output (9 characters):\r\n```\r\nabc???xyz\r\n```\r\n\r\nRelated issue: #2217"},{"Id":"9428972941","Type":"PullRequestEvent","CreatedAt":"2019-04-12T03:42:08","Actor":"krwq","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/36807","RelatedDescription":"Opened pull request \"Remove duplicate copy of Interop.GetCurrentThreadId.cs\" (#36807) at dotnet/corefx","RelatedBody":"found as part of https://github.com/dotnet/coreclr/pull/23914"},{"Id":"9428785407","Type":"PullRequestEvent","CreatedAt":"2019-04-12T02:48:36","Actor":"ericstj","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/36766","RelatedDescription":"Merged pull request \"Improve platform detection for [Default]OSGroup\" (#36766) at dotnet/corefx","RelatedBody":"This change fixes the following two issues:\r\n\r\n* If there exists an `/Applications` directory on non-macOS Unix,\r\n  `OSGroup` is misclassified as OSX.\r\n* If `$OS` variable is preset in the invocation environment of\r\n  `build.sh` script, the configuration misclassifies the `OSGroup`\r\n  property. For example, on CirrusCI FreeBSD, the environment has\r\n  preset `OS=freebsd` (lowercase), which eventually results in\r\n  `OSGroup=freebsd` instead of `OSGroup=FreeBSD` and causes build\r\n  failure."},{"Id":"9428730323","Type":"PullRequestEvent","CreatedAt":"2019-04-12T02:33:04","Actor":"JeremyKuhne","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/36806","RelatedDescription":"Opened pull request \"Start on object serialization.\" (#36806) at dotnet/corefx","RelatedBody":"Deserializes json properties as `JsonElement` into `object` properties.\r\n\r\nSerializes `JsonElement` in `object` fields back out to json.\r\n\r\nShould also work with `JsonElement` properties, but haven't written tests yet. Arrays of `object` still needs to be implemented. Needs the ability to clone `JsonElement` to ensure coherency if source json goes out of scope.\r\n\r\nStill have a lot of testing to do, wanted to get the initial \"working\" implementation up for feedback."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9429027407","Type":"IssuesEvent","CreatedAt":"2019-04-12T03:58:44","Actor":"pjc0247","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/34951","RelatedDescription":"Opened issue \"Creates new SyntaxNode from 3rd-party\" (#34951) at dotnet/roslyn","RelatedBody":"I have a class something like below\r\n```cs\r\ninternal class EvaluatedArgumentListSyntax : ExpressionSyntax\r\n{ }\r\n```\r\nThis one won't be compiled due to errors.\r\nSome methods have `internal` access modifier, so I can't make a derived class.\r\n\r\nhttps://dotnetfiddle.net/r79Jyw\r\n\r\n"},{"Id":"9429016990","Type":"IssuesEvent","CreatedAt":"2019-04-12T03:55:36","Actor":"sujayvsarma","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/34930","RelatedDescription":"Closed issue \"Incorrect colorization / Colorization does not revert\" (#34930) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nLatest stable (2.0.1)\r\n\r\n**Steps to Reproduce**:\r\nExample: Function arguments\r\n\r\nDefine an empty-body function with at least one argument. Arguments are correctly dimmed out indicating they are not being used.\r\n\r\nCode snip:\r\n```\r\nvoid foo(string arg1) {\r\n  // at this point, 'arg1' is dimmed out\r\n}\r\n```\r\n\r\nNow start typing any construct, but don't use the argument yet. For example, start typing \"if\". \r\n\r\nCode snip:\r\n```\r\nvoid foo(string arg1) {\r\n  if \r\n  // at this point, arg1 should remain dimmed out, but it lights up\r\n}\r\n```\r\n\r\nThe argument(s) will light up one by one. If you have more than one argument, the more new statements you type, they will start lighting up. For example, if you have 2 arguments to foo(), arg1 will light up on the first statement/construct and arg2 on the second one. This is even though you have not yet even thought about that argument!\r\n\r\nNow go ahead and use the argument in that statement and then edit that line of code to do something else (other than referencing that argument), you will see the argument randomly changes colorization -- sometimes it shows up dimmed out, sometimes it colorizes to say it is being used. \r\n\r\n**Expected Behavior**:\r\nThe arguments continue to be in the correct lighted up / colorized state. \r\n\r\n**Actual Behavior**:\r\nBut they are not. When you undo the operation, they do not always go back to the previous state.\r\n\r\n"},{"Id":"9428503895","Type":"PullRequestEvent","CreatedAt":"2019-04-12T01:30:06","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34948","RelatedDescription":"Merged pull request \"Merge master-vs-deps to features/razorSupport2\" (#34948) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9429280791","Type":"PullRequestEvent","CreatedAt":"2019-04-12T05:19:04","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7284","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7284) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern"},{"Id":"9427073144","Type":"PullRequestEvent","CreatedAt":"2019-04-11T20:12:32","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7283","RelatedDescription":"Merged pull request \"Minor SuperIlc fixes / improvements found while using the tool\" (#7283) at dotnet/corert","RelatedBody":"One non-trivial revelation I made is that my previous introduction\r\nof Outcome was inconsistent w.r.t. the summary table as there is\r\ngenerally a different number of compilations and executions.\r\nI have fixed this by splitting the summary table in two for\r\ncompilations and executions.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9426345827","Type":"PullRequestEvent","CreatedAt":"2019-04-11T18:18:01","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7284","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7284) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9419739073","Type":"PullRequestEvent","CreatedAt":"2019-04-10T23:04:04","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7277","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7277) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern @krwq @tannergooding @danmosemsft @stephentoub @buyaa-n @GrabYourPitchforks @grant-d @sdmaclea @jkoritzinsky @hughbe"},{"Id":"9419725177","Type":"PullRequestEvent","CreatedAt":"2019-04-10T23:00:44","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7249","RelatedDescription":"Merged pull request \"Fix building Ubuntu shared libraries\" (#7249) at dotnet/corert","RelatedBody":"fixes #4988.\r\nCoreRT can now produce working shared lib for linux-x64.\r\n\r\nBut I have some questions\r\n\r\n- Should we use the trick with jumping to GOTPCREL ptr for other Rh* stubs (like RhExceptionHandling_FailedAllocation)?\r\n- Is it right way to check, that symbol should be exported as global through IExportableSymbolNode.GetExportForm()?\r\n- Is it enough to pass all tests to check, that this commit nothing breaks?"},{"Id":"9419725165","Type":"IssuesEvent","CreatedAt":"2019-04-10T23:00:43","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4988","RelatedDescription":"Closed issue \"Fix building Ubuntu shared libraries\" (#4988) at dotnet/corert","RelatedBody":"Currently building shared libraries (.so) on Ubuntu throws the below error:\r\n\r\n```\r\n/usr/bin/ld: obj/Debug/netstandard2.0/native/cslib.o: relocation R_X86_64_PC32 against symbol `__NewArr1___Array<Object>' can not be used when making a shared object; recompile with -fPIC\r\n/usr/bin/ld: final link failed: Bad value\r\n```\r\n\r\nParent issue: #1285 "},{"Id":"9419630893","Type":"PullRequestEvent","CreatedAt":"2019-04-10T22:38:21","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7281","RelatedDescription":"Merged pull request \"Update CoreCLR test script for VS2019\" (#7281) at dotnet/corert","RelatedBody":"After installing VS2019 the CoreCLR test scripts can no longer find MSBuild.exe because it was moved within the VS install folder. Fix to try both options before giving up."},{"Id":"9419219178","Type":"PullRequestEvent","CreatedAt":"2019-04-10T21:18:03","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7283","RelatedDescription":"Opened pull request \"Minor SuperIlc fixes / improvements found while using the tool\" (#7283) at dotnet/corert","RelatedBody":"One non-trivial revelation I made is that my previous introduction\r\nof Outcome was inconsistent w.r.t. the summary table as there is\r\ngenerally a different number of compilations and executions.\r\nI have fixed this by splitting the summary table in two for\r\ncompilations and executions.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9418667295","Type":"PullRequestEvent","CreatedAt":"2019-04-10T19:50:03","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7282","RelatedDescription":"Opened pull request \"Improving PE section management in CPAOT\" (#7282) at dotnet/corert","RelatedBody":"The ability to use SuperIlc to ILC the entire Pri#1 test suite\r\nlet me quickly identify several remaining CPAOT compilation\r\nissues. This change should be fixing the biggest bucket of 8\r\nfailing compilations.\r\n\r\nAs in contrast to Crossgen we don't copy the input MSIL\r\nselectively to the output R2R PE image (which may change soon\r\nwith Simon's latest changes), in case of RVA fields we just\r\nstore the section name in which the field content resides\r\nand, when serializing the sections to the output PE, we\r\nresolve the appropriate SectionStartNode's in the symbol map\r\nfor the relocation pass.\r\n\r\nAs the R2R PE emitter is basically the oldest part of the CPAOT\r\ncompiler, I was naturally making various arbitrary choices during\r\nits initial implementation and because of this the section\r\nmanagement logic ended up somewhat randomly scattered among\r\nReadyToRunObjectWriter, SectionBuilder and R2RPEBuilder.\r\n\r\nThe SectionBuilder only knew about the sections emitted by\r\nthe CPAOT compiler itself, not about the incoming sections from\r\nthe input MSIL; those got only combined with the SectionBuilder\r\nsections in R2RPEBuilder constructor.\r\n\r\nDue to this fact the section serialization code in SectionBuilder\r\ndidn't know about the MSIL section holding the RVA field (as it\r\nwasn't one of the sections produced by the CPAOT compiler) and\r\nso it didn't resolve its start node in the symbol map.\r\n\r\nTo fix this, I have centralized the logic for building the list\r\nof output sections in SectionBuilderExtensions.PrepareSections\r\nwhere we compose the complete section list upfront and set it\r\nto SectionBuilder. R2RPEBuilder constructor can be much simpler\r\nas it can reuse the SectionBuilder section map and the section\r\nstart nodes get properly resolved even for the MSIL input\r\nsections.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\nP.S. I tried to explain the logic in maximum detail because\r\naccording to our yesterday meeting Simon is investigating / making\r\nchanges in this area as part of removing the previously produced\r\nR2R code when CPAOT-compiling an already R2R-compiled PE executable\r\nand RVA field management is exactly the area that will break and\r\nwill need fixing if he decides to switch over to selective copying\r\nof the input executable to the R2R output file as opposed to blindly\r\ncopying all the pre-existing sections as we do today."},{"Id":"9418401446","Type":"PullRequestEvent","CreatedAt":"2019-04-10T19:07:31","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7281","RelatedDescription":"Opened pull request \"Update CoreCLR test script for VS2019\" (#7281) at dotnet/corert","RelatedBody":"After installing VS2019 the CoreCLR test scripts can no longer find MSBuild.exe because it was moved within the VS install folder. Fix to try both options before giving up."},{"Id":"9416757743","Type":"IssuesEvent","CreatedAt":"2019-04-10T15:17:13","Actor":"filipnavara","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7280","RelatedDescription":"Opened issue \"Bogus warnings on CI test\" (#7280) at dotnet/corert","RelatedBody":"Watching the outputs on https://dev.azure.com/dnceng/public/_build/results?buildId=150071 shows many of these lines:\r\n\r\n```\r\nWARNING: Long running test .. finished in 933336ms.\r\nWARNING: Long running test .. finished in 933401ms.\r\n```\r\n\r\nObviously the tests didn't run for that long, so it looks like the time is reported incorrectly."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9427862798","Type":"PullRequestEvent","CreatedAt":"2019-04-11T22:33:45","Actor":"nugetlurker","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3117","RelatedDescription":"Opened pull request \"Insert NuGet Build 5.0.1-rtm.5946 into sdk\" (#3117) at dotnet/sdk","RelatedBody":"Insert NuGet Build 5.0.1-rtm.5946 into sdk release/2.1.6xx branch"},{"Id":"9427862597","Type":"PullRequestEvent","CreatedAt":"2019-04-11T22:33:42","Actor":"nugetlurker","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3116","RelatedDescription":"Opened pull request \"Insert NuGet Build 5.0.1-rtm.5946 into sdk\" (#3116) at dotnet/sdk","RelatedBody":"Insert NuGet Build 5.0.1-rtm.5946 into sdk release/2.2.2xx branch"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-03-29T02:28:20","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"open","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Open PR \"add links to ML.NET docs\" (#141)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379731798","IsPullRequest":true,"CreatedAt":"2018-11-13T04:22:32","Actor":"leastprivilege","Number":"114","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#114)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"},{"Id":"379733880","IsPullRequest":true,"CreatedAt":"2018-11-13T04:20:23","Actor":"leastprivilege","Number":"115","RawContent":null,"Title":"Create identitymodel.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Closed or merged PR \"Create identitymodel.md\" (#115)"},{"Id":"371941750","IsPullRequest":true,"CreatedAt":"2018-11-01T16:20:07","Actor":"SeanKilleen","Number":"113","RawContent":null,"Title":"Update logo for couchbase-lite in projects.json","State":"closed","Body":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser.","Url":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Closed or merged PR \"Update logo for couchbase-lite in projects.json\" (#113)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"432380847","IsPullRequest":true,"CreatedAt":"2019-04-12T04:20:27","Actor":"bdebaere","Number":"23923","RawContent":null,"Title":"Consolidate duplicate assignment","State":"open","Body":"Consolidate duplicate assignment.","Url":"https://github.com/dotnet/coreclr/pull/23923","RelatedDescription":"Open PR \"Consolidate duplicate assignment\" (#23923)"},{"Id":"432376010","IsPullRequest":true,"CreatedAt":"2019-04-12T03:53:31","Actor":"bdebaere","Number":"23922","RawContent":null,"Title":"Remove duplicates in enum","State":"open","Body":"Remove duplicates in enum.","Url":"https://github.com/dotnet/coreclr/pull/23922","RelatedDescription":"Open PR \"Remove duplicates in enum\" (#23922)"},{"Id":"432307307","IsPullRequest":true,"CreatedAt":"2019-04-12T03:49:00","Actor":"sdmaclea","Number":"23912","RawContent":null,"Title":"Fix19817","State":"closed","Body":"Assembly.LoadFromPartialName(string) should not throw FileNotFoundException\r\nrather it should return null.\r\n\r\nFixes #19817","Url":"https://github.com/dotnet/coreclr/pull/23912","RelatedDescription":"Closed or merged PR \"Fix19817\" (#23912)"},{"Id":"432362425","IsPullRequest":true,"CreatedAt":"2019-04-12T02:45:02","Actor":"davidwrighton","Number":"23921","RawContent":null,"Title":"[WIP] More multi-appdomain support removal","State":"open","Body":"- Remove DomainLocalBlock\r\n- Remove DomainModule\r\n- Remove FindDomain(File/Module/Assembly)\r\n- Remove GetDomainModule\r\n- Remove variants of GetDomain(File/Assembly) that take AppDomain parameter","Url":"https://github.com/dotnet/coreclr/pull/23921","RelatedDescription":"Open PR \"[WIP] More multi-appdomain support removal\" (#23921)"},{"Id":"432344175","IsPullRequest":true,"CreatedAt":"2019-04-12T02:22:31","Actor":"stephentoub","Number":"23917","RawContent":null,"Title":"Update Version annotations to match changes in master","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/23917","RelatedDescription":"Closed or merged PR \"Update Version annotations to match changes in master\" (#23917)"},{"Id":"432349051","IsPullRequest":false,"CreatedAt":"2019-04-12T01:37:26","Actor":"VincentBu","Number":"23920","RawContent":null,"Title":"[arm] Assert failure: codeSize <= MAX_PROLOG_SIZE_BYTES","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm/job/jitstress/job/arm_cross_checked_windows_nt_forcerelocs_tst/65/\r\n\r\n**Failed tests:**\r\nJIT\\jit64\\mcc\\interop\\mcc_i72\\mcc_i72.cmd\r\n\r\n**Log:**\r\n```\r\nAssert failure(PID 5760 [0x00001680], Thread: 10532 [0x2924]): Assertion failed 'codeSize <= MAX_PROLOG_SIZE_BYTES' in 'ILStubClass:IL_STUB_PInvoke(double,int,long,float,short,double,struct,struct,struct,struct,struct,struct,struct,struct,struct,struct,struct,struct):struct' (IL size 207)\r\n        \r\n            File: d:\\j\\workspace\\arm_cross_che---57645b35\\src\\jit\\unwindarm.cpp Line: 851\r\n            Image: C:\\j\\workspace\\arm_cross_che---c8f294d1\\bin\\tests\\Windows_NT.arm.Checked\\Tests\\Core_Root\\CoreRun.exe\r\n        \r\n        \r\n  \r\n  Return code:      1\r\n  Raw output file:      C:\\j\\workspace\\arm_cross_che---c8f294d1\\bin\\tests\\Windows_NT.arm.Checked\\Reports\\JIT.jit64\\mcc\\interop\\mcc_i72\\mcc_i72.output.txt\r\n  Raw output:\r\n  BEGIN EXECUTION\r\n        \r\n        C:\\j\\workspace\\arm_cross_che---c8f294d1\\bin\\tests\\Windows_NT.arm.Checked\\JIT\\jit64\\mcc\\interop\\mcc_i72>set COMPLUS_NOGUIONASSERT=1 \r\n        \r\n        C:\\j\\workspace\\arm_cross_che---c8f294d1\\bin\\tests\\Windows_NT.arm.Checked\\JIT\\jit64\\mcc\\interop\\mcc_i72>set COMPLUS_CONTINUEONASSERT=0 \r\n        \r\n        C:\\j\\workspace\\arm_cross_che---c8f294d1\\bin\\tests\\Windows_NT.arm.Checked\\JIT\\jit64\\mcc\\interop\\mcc_i72>set COMPLUS_FORCERELOCS=1 \r\n        \r\n        C:\\j\\workspace\\arm_cross_che---c8f294d1\\bin\\tests\\Windows_NT.arm.Checked\\JIT\\jit64\\mcc\\interop\\mcc_i72>set COMPLUS_TIEREDCOMPILATION=0 \r\n         \"C:\\j\\workspace\\arm_cross_che---c8f294d1\\bin\\tests\\Windows_NT.arm.Checked\\Tests\\Core_Root\\corerun.exe\" mcc_i72.exe \r\n        Expected: 100\r\n        Actual: -1073740286\r\n        END EXECUTION - FAILED\r\n        FAILED\r\n        Test Harness Exitcode is : 1\r\n        \r\n  To run the test:\r\n  > set CORE_ROOT=C:\\j\\workspace\\arm_cross_che---c8f294d1\\bin\\tests\\Windows_NT.arm.Checked\\Tests\\Core_Root\r\n  > C:\\j\\workspace\\arm_cross_che---c8f294d1\\bin\\tests\\Windows_NT.arm.Checked\\JIT\\jit64\\mcc\\interop\\mcc_i72\\mcc_i72.cmd\r\n  \r\n        Expected: True\r\n        Actual:   False\r\n        Stack Trace:\r\n          D:\\j\\workspace\\arm_cross_che---57645b35\\bin\\tests\\Windows_NT.arm.Checked\\TestWrappers\\JIT.jit64\\JIT.jit64.XUnitWrapper.cs(10691,0): at JIT_jit64._mcc_interop_mcc_i72_mcc_i72_._mcc_interop_mcc_i72_mcc_i72_cmd()\r\n```","Url":"https://github.com/dotnet/coreclr/issues/23920","RelatedDescription":"Open issue \"[arm] Assert failure: codeSize <= MAX_PROLOG_SIZE_BYTES\" (#23920)"},{"Id":"432348493","IsPullRequest":false,"CreatedAt":"2019-04-12T01:34:50","Actor":"VincentBu","Number":"23919","RawContent":null,"Title":"[arm] ConfigurationErrorsException in arm_cross_checked_windows_nt_corefx","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm/job/jitstress/job/arm_cross_checked_windows_nt_corefx_minopts_tst/56/\r\n\r\n**Failed tests:**\r\nMonoTests.System.Configuration.ConfigurationManagerTest.exePath_UserLevelPerRoamingAndLocal\r\n\r\n**Log:**\r\n```\r\nMonoTests.System.Configuration.ConfigurationManagerTest.exePath_UserLevelPerRoamingAndLocal [FAIL]\r\n      System.Configuration.ConfigurationErrorsException : An error occurred loading a configuration file: The process cannot access the file 'C:\\Users\\HelixAdmin\\AppData\\Local\\Microsoft_Corporation\\xunit.console_StrongName_vmuqnj1rm2vzmtjlxpznjgrpuvgx0hav\\2.5.1.0\\user.config' because it is being used by another process. (C:\\Users\\HelixAdmin\\AppData\\Local\\Microsoft_Corporation\\xunit.console_StrongName_vmuqnj1rm2vzmtjlxpznjgrpuvgx0hav\\2.5.1.0\\user.config)\r\n      ---- System.IO.IOException : The process cannot access the file 'C:\\Users\\HelixAdmin\\AppData\\Local\\Microsoft_Corporation\\xunit.console_StrongName_vmuqnj1rm2vzmtjlxpznjgrpuvgx0hav\\2.5.1.0\\user.config' because it is being used by another process.\r\n      Stack Trace:\r\n        D:\\j\\workspace\\arm_cross_che---bb9c275d\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\ConfigurationSchemaErrors.cs(72,0): at System.Configuration.ConfigurationSchemaErrors.ThrowIfErrors(Boolean ignoreLocal)\r\n        D:\\j\\workspace\\arm_cross_che---bb9c275d\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\BaseConfigurationRecord.cs(3655,0): at System.Configuration.BaseConfigurationRecord.ThrowIfParseErrors(ConfigurationSchemaErrors schemaErrors)\r\n        D:\\j\\workspace\\arm_cross_che---bb9c275d\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\BaseConfigurationRecord.cs(253,0): at System.Configuration.BaseConfigurationRecord.ThrowIfInitErrors()\r\n        D:\\j\\workspace\\arm_cross_che---bb9c275d\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\Configuration.cs(76,0): at System.Configuration.Configuration..ctor(String locationSubPath, Type typeConfigHost, Object[] hostInitConfigurationParams)\r\n        D:\\j\\workspace\\arm_cross_che---bb9c275d\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\ClientConfigurationHost.cs(487,0): at System.Configuration.ClientConfigurationHost.OpenExeConfiguration(ConfigurationFileMap fileMap, Boolean isMachine, ConfigurationUserLevel userLevel, String exePath)\r\n        D:\\j\\workspace\\arm_cross_che---bb9c275d\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\ConfigurationManager.cs(221,0): at System.Configuration.ConfigurationManager.OpenExeConfigurationImpl(ConfigurationFileMap fileMap, Boolean isMachine, ConfigurationUserLevel userLevel, String exePath, Boolean preLoad)\r\n        D:\\j\\workspace\\arm_cross_che---bb9c275d\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\ConfigurationManager.cs(188,0): at System.Configuration.ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel userLevel)\r\n        D:\\j\\workspace\\arm_cross_che---bb9c275d\\_\\fx\\src\\System.Configuration.ConfigurationManager\\tests\\Mono\\ConfigurationManagerTest.cs(164,0): at MonoTests.System.Configuration.ConfigurationManagerTest.exePath_UserLevelPerRoamingAndLocal()\r\n        ----- Inner Stack Trace -----\r\n           at System.IO.FileStream.ValidateFileHandle(SafeFileHandle fileHandle)\r\n           at System.IO.FileStream.CreateFileOpenHandle(FileMode mode, FileShare share, FileOptions options)\r\n           at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n           at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)\r\n        D:\\j\\workspace\\arm_cross_che---bb9c275d\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\Internal\\InternalConfigHost.cs(228,0): at System.Configuration.Internal.InternalConfigHost.StaticOpenStreamForRead(String streamName)\r\n        D:\\j\\workspace\\arm_cross_che---bb9c275d\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\Internal\\InternalConfigHost.cs(60,0): at System.Configuration.Internal.InternalConfigHost.System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(String streamName)\r\n        D:\\j\\workspace\\arm_cross_che---bb9c275d\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\ClientConfigurationHost.cs(282,0): at System.Configuration.ClientConfigurationHost.OpenStreamForRead(String streamName)\r\n        D:\\j\\workspace\\arm_cross_che---bb9c275d\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\UpdateConfigHost.cs(80,0): at System.Configuration.UpdateConfigHost.OpenStreamForRead(String streamName)\r\n        D:\\j\\workspace\\arm_cross_che---bb9c275d\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\Internal\\DelegatingConfigHost.cs(86,0): at System.Configuration.Internal.DelegatingConfigHost.OpenStreamForRead(String streamName)\r\n        D:\\j\\workspace\\arm_cross_che---bb9c275d\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\ImplicitMachineConfigHost.cs(64,0): at System.Configuration.ImplicitMachineConfigHost.OpenStreamForRead(String streamName)\r\n        D:\\j\\workspace\\arm_cross_che---bb9c275d\\_\\fx\\src\\System.Configuration.ConfigurationManager\\src\\System\\Configuration\\BaseConfigurationRecord.cs(552,0): at System.Configuration.BaseConfigurationRecord.InitConfigFromFile()\r\n```","Url":"https://github.com/dotnet/coreclr/issues/23919","RelatedDescription":"Open issue \"[arm] ConfigurationErrorsException in arm_cross_checked_windows_nt_corefx\" (#23919)"},{"Id":"432344731","IsPullRequest":false,"CreatedAt":"2019-04-12T01:15:10","Actor":"VincentBu","Number":"23918","RawContent":null,"Title":"[arm] Assert failure: Consistency check failed: Managed object size does not match unmanaged object size","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/arm_cross_checked_windows_nt_tst/1295/\r\n\r\n**Log:**\r\n```\r\nAssert failure(PID 8092 [0x00001f9c], Thread: 10504 [0x2908]): Consistency check failed: Managed object size does not match unmanaged object size\r\n  man: 0x30, unman: 0x2c, Name: System.Runtime.Loader.AssemblyLoadContext\r\n  FAILED: size == expectedsize\r\n  \r\n  <no module>! <no symbol> + 0x0 (0x00000000)\r\n      File: d:\\j\\workspace\\arm_cross_che---57645b35\\src\\vm\\binder.cpp Line: 564\r\n      Image: C:\\j\\workspace\\arm_cross_che---b2f1c8bb\\bin\\tests\\Windows_NT.arm.Checked\\Tests\\Core_Root\\CoreRun.exe\r\n```","Url":"https://github.com/dotnet/coreclr/issues/23918","RelatedDescription":"Open issue \"[arm] Assert failure: Consistency check failed: Managed object size does not match unmanaged object size\" (#23918)"},{"Id":"432342946","IsPullRequest":true,"CreatedAt":"2019-04-12T01:05:10","Actor":"dotnet-maestro-bot","Number":"23916","RawContent":null,"Title":"Update CoreClr to preview5-27611-72 (master)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/23916","RelatedDescription":"Open PR \"Update CoreClr to preview5-27611-72 (master)\" (#23916)"},{"Id":"432340711","IsPullRequest":false,"CreatedAt":"2019-04-12T00:53:12","Actor":"BruceForstall","Number":"23915","RawContent":null,"Title":"localloc + outgoing argument space stack probing hole","State":"open","Body":"This doesn't apply to Windows x86; it only applies to `FEATURE_FIXED_OUT_ARGS` targets (arm32, arm64, x64).\r\n\r\nThe implementation for localloc codegen in the JIT, in `genLclHeap`, first removes the outgoing argument space from the stack, then probes and allocates the localloc space, then adds back the outgoing argument space at the bottom of the stack. When it re-establishes the outgoing argument space (by subtracting the outgoing argument space size from the stack pointer after doing the localloc), it does not do any stack probes. If the next stack touch is at the bottom of the stack, and if the outgoing argument space is larger than the number of guard pages, we could hit an AV.\r\n\r\nThis is very difficult to achieve on x64/arm64, since their calling conventions (which determine the outgoing argument space size) mostly pass stucts by reference. Arm32, however, passes structs by value. In addition, the CLR (on Windows) uses the `SetThreadStackGuarantee` API to expand the number of guard pages. For example, I saw 6 in my DEBUG Windows x64 test case.\r\n","Url":"https://github.com/dotnet/coreclr/issues/23915","RelatedDescription":"Open issue \"localloc + outgoing argument space stack probing hole\" (#23915)"},{"Id":"432146135","IsPullRequest":true,"CreatedAt":"2019-04-12T00:47:35","Actor":"stephentoub","Number":"23898","RawContent":null,"Title":"Fix null checks in Version comparison operators","State":"closed","Body":"(This will likely fail CI until I disable some tests...)\r\n\r\nThe `<` and `<=` operators explicitly check for the left argument being null, throwing an ArgumentNullException if it is, and allowing the right argument to be null.  But the `>` and `>=` operators just delegate to the `<` and `<=` operators, inverting the arguments, which means the null check is performed on the other argument, and the resulting error message contains the wrong argument name.  For example, given this:\r\n```C#\r\nVersion v1 = new Version(1, 0);\r\nVersion v2 = null;\r\n```\r\nThe code:\r\n```C#\r\nbool result = v1 < v2;\r\n```\r\nworks fine, but the code:\r\n```C#\r\nbool result = v1 > v2;\r\n```\r\nthrows an ArgumentNullException saying that `v1` is null.\r\n\r\nThis changes things to be consistent across the operators while also better matching the docs (though the docs for `>` and `>=` don't mention ArgumentNullException).\r\n\r\ncc: @bartonjs, @joperezr","Url":"https://github.com/dotnet/coreclr/pull/23898","RelatedDescription":"Closed or merged PR \"Fix null checks in Version comparison operators\" (#23898)"},{"Id":"432236017","IsPullRequest":true,"CreatedAt":"2019-04-12T00:28:26","Actor":"sdmaclea","Number":"23906","RawContent":null,"Title":"Fix #23905","State":"closed","Body":"Adjust AssemblyLoadContextBaseObject packing for Windows arm.\r\n\r\nFixes #23905","Url":"https://github.com/dotnet/coreclr/pull/23906","RelatedDescription":"Closed or merged PR \"Fix #23905\" (#23906)"},{"Id":"432233508","IsPullRequest":false,"CreatedAt":"2019-04-12T00:28:26","Actor":"sdmaclea","Number":"23905","RawContent":null,"Title":"Fix Windows arm break introduced by #23740","State":"closed","Body":"Error is\r\n```\r\n  Assert failure(PID 148 [0x00000094], Thread: 5892 [0x1704]): Consistency check failed: Managed object size does not match unmanaged object size\r\n12:54:05   man: 0x30, unman: 0x2c, Name: System.Runtime.Loader.AssemblyLoadContext\r\n12:54:05   FAILED: size == expectedsize\r\n12:54:05   \r\n12:54:05   <no module>! <no symbol> + 0x0 (0x00000000)\r\n12:54:05       File: d:\\j\\workspace\\arm_cross_che---7ce81708\\src\\vm\\binder.cpp Line: 564\r\n12:54:05       Image: C:\\j\\workspace\\arm_cross_che---c874ca48\\bin\\tests\\Windows_NT.arm.Checked\\Tests\\Core_Root\\CoreRun.exe\r\n```\r\npossibly from #23740 ?\r\n\r\n_Originally posted by @AndyAyersMS in https://github.com/dotnet/coreclr/pull/23889#issuecomment-482293883_","Url":"https://github.com/dotnet/coreclr/issues/23905","RelatedDescription":"Closed issue \"Fix Windows arm break introduced by #23740\" (#23905)"},{"Id":"432330500","IsPullRequest":true,"CreatedAt":"2019-04-12T00:01:14","Actor":"krwq","Number":"23914","RawContent":null,"Title":"Nullable: Globalization native interop + some missing files","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/23914","RelatedDescription":"Open PR \"Nullable: Globalization native interop + some missing files\" (#23914)"},{"Id":"432167315","IsPullRequest":true,"CreatedAt":"2019-04-11T23:45:31","Actor":"AndyAyersMS","Number":"23902","RawContent":null,"Title":"JIT: fix assert when there are mixed types in Enum.HasFlags optimization","State":"closed","Body":"In some cases the pre-boxed nodes may differ in type. Bail if they don't have\r\nthe same stack type, then compute the result using the stack type.\r\n\r\nExtended the hasflags test with a case that shows this issue.\r\n\r\nCloses #23847","Url":"https://github.com/dotnet/coreclr/pull/23902","RelatedDescription":"Closed or merged PR \"JIT: fix assert when there are mixed types in Enum.HasFlags optimization\" (#23902)"},{"Id":"432310721","IsPullRequest":true,"CreatedAt":"2019-04-11T22:57:41","Actor":"VSadov","Number":"23913","RawContent":null,"Title":"Disable SHORT_PLUGS on ARM32","State":"open","Body":"Fixes:#22422","Url":"https://github.com/dotnet/coreclr/pull/23913","RelatedDescription":"Open PR \"Disable SHORT_PLUGS on ARM32\" (#23913)"},{"Id":"432304580","IsPullRequest":true,"CreatedAt":"2019-04-11T22:47:49","Actor":"safern","Number":"23911","RawContent":null,"Title":"Merge master into nullable branch","State":"open","Body":"This time there were some merge conflicts in `AssemblyName`, `AssemblyLoadContext`, `TimerQueue`, `RuntimeAssembly` and `Environment.Win32` -- looking at those files in the merge commit would be appreciated to just make sure it looks good and that I didn't miss anything during the merge conflicts.","Url":"https://github.com/dotnet/coreclr/pull/23911","RelatedDescription":"Open PR \"Merge master into nullable branch\" (#23911)"},{"Id":"432252870","IsPullRequest":true,"CreatedAt":"2019-04-11T21:07:23","Actor":"Anipik","Number":"23910","RawContent":null,"Title":"Nullable System.ComponentModel, System.Diagnostics.CodeAnalysis, System.Diagnostics.Contracts","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/23910","RelatedDescription":"Open PR \"Nullable System.ComponentModel, System.Diagnostics.CodeAnalysis, System.Diagnostics.Contracts\" (#23910)"},{"Id":"432248685","IsPullRequest":false,"CreatedAt":"2019-04-11T20:56:20","Actor":"sdmaclea","Number":"23909","RawContent":null,"Title":"Separate Test Build & Test Run in Azure Pipelines","State":"open","Body":"CI often requires rerunning failed legs.\r\nBuilding tests is time consuming.\r\nIf we separated test build from test run, \r\n\r\n- it would be simpler to see that the test build failed.\r\n- it could be more efficient to rerun the failed test run in helix.\r\n\r\n/cc @RussKeldorph ","Url":"https://github.com/dotnet/coreclr/issues/23909","RelatedDescription":"Open issue \"Separate Test Build & Test Run in Azure Pipelines\" (#23909)"},{"Id":"432242720","IsPullRequest":true,"CreatedAt":"2019-04-11T20:47:30","Actor":"bdebaere","Number":"23908","RawContent":null,"Title":"Add missing break statement","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/23908","RelatedDescription":"Open PR \"Add missing break statement\" (#23908)"},{"Id":"432240635","IsPullRequest":true,"CreatedAt":"2019-04-11T20:41:49","Actor":"tannergooding","Number":"23907","RawContent":null,"Title":"Updating the JIT and HWIntrinsic tests to use the new HWIntrinsic API names","State":"open","Body":"This resolves https://github.com/dotnet/corefx/issues/35768\r\nThis resolves https://github.com/dotnet/corefx/issues/34881\r\n\r\nThis is the final PR in the trio and is pending https://github.com/dotnet/corefx/pull/36757 making its way back to CoreCLR.","Url":"https://github.com/dotnet/coreclr/pull/23907","RelatedDescription":"Open PR \"Updating the JIT and HWIntrinsic tests to use the new HWIntrinsic API names\" (#23907)"},{"Id":"432158740","IsPullRequest":true,"CreatedAt":"2019-04-11T20:32:34","Actor":"Dotnet-GitSync-Bot","Number":"23901","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/coreclr/pull/23901","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert\" (#23901)"},{"Id":"432231064","IsPullRequest":false,"CreatedAt":"2019-04-11T20:22:51","Actor":"sandreenko","Number":"23904","RawContent":null,"Title":"FailFast: Infinite recursion during resource lookup within System.Private.CoreLib.","State":"open","Body":"I was checking my recent changes and found that many tests are failing with\r\n```\r\nFailFast:\r\nInfinite recursion during resource lookup within System.Private.CoreLib. This may be a bug in System.Private.CoreLib, or potentially in certain extensibility points such as assembly resolve events or CultureInfo names. Resource name: NotSupported_WrongResourceReader_Type\r\n```\r\non x64 Windows with JitStress=2. JitStressRegs=0x1000, \r\nsee more examples in https://dev.azure.com/dnceng/public/_build/results?buildId=150805&view=ms.vss-test-web.build-test-results-tab.\r\n\r\n\r\nThere were similar issues when we used fragile ngen, but it is not the case here. I will do a binary search to find when it was broken.","Url":"https://github.com/dotnet/coreclr/issues/23904","RelatedDescription":"Open issue \"FailFast: Infinite recursion during resource lookup within System.Private.CoreLib.\" (#23904)"},{"Id":"432188536","IsPullRequest":false,"CreatedAt":"2019-04-11T18:48:41","Actor":"AndyAyersMS","Number":"23903","RawContent":null,"Title":"JIT: optFoldNullCheck missed cases","State":"open","Body":"`optFoldNullCheck`'s pattern match misses some cases.\r\n\r\nSee https://github.com/dotnet/coreclr/pull/23850#issuecomment-482231386 for one such example (though perhaps that could also be addressed by better handling of commas in add trees).\r\n\r\nWill add others as I run across them.","Url":"https://github.com/dotnet/coreclr/issues/23903","RelatedDescription":"Open issue \"JIT: optFoldNullCheck missed cases\" (#23903)"},{"Id":"432002413","IsPullRequest":true,"CreatedAt":"2019-04-11T17:56:28","Actor":"dotnet-maestro[bot]","Number":"23894","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190410.11\r\n- **Date Produced**: 4/11/2019 2:16 AM\r\n- **Commit**: fc83d21e68eda29caa99c9864750f7c8d273a378\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview5-27610-11\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/23894","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#23894)"},{"Id":"432148980","IsPullRequest":true,"CreatedAt":"2019-04-11T17:36:25","Actor":"sergiy-k","Number":"23900","RawContent":null,"Title":"Enable precompiling CoreRoot overlay with crossgen for Linux arm/arm64","State":"open","Body":"Fixes https://github.com/dotnet/coreclr/issues/23815\r\n","Url":"https://github.com/dotnet/coreclr/pull/23900","RelatedDescription":"Open PR \"Enable precompiling CoreRoot overlay with crossgen for Linux arm/arm64\" (#23900)"},{"Id":"432146939","IsPullRequest":true,"CreatedAt":"2019-04-11T17:31:40","Actor":"tannergooding","Number":"23899","RawContent":null,"Title":"Updating the JIT to support marshaling blittable generics.","State":"open","Body":"This resolves https://github.com/dotnet/coreclr/issues/1685","Url":"https://github.com/dotnet/coreclr/pull/23899","RelatedDescription":"Open PR \"Updating the JIT to support marshaling blittable generics.\" (#23899)"},{"Id":"432130365","IsPullRequest":true,"CreatedAt":"2019-04-11T16:59:01","Actor":"jkoritzinsky","Number":"23897","RawContent":null,"Title":"WIP Refactor native build to remove the compiler-override files","State":"open","Body":"- Refactor the native build to remove the compiler-override files\r\n- Use CMake 3.0 on our systems that have 2.X and 3.0 installed.","Url":"https://github.com/dotnet/coreclr/pull/23897","RelatedDescription":"Open PR \"WIP Refactor native build to remove the compiler-override files\" (#23897)"},{"Id":"432101066","IsPullRequest":true,"CreatedAt":"2019-04-11T15:56:21","Actor":"NextTurn","Number":"23896","RawContent":null,"Title":"Nit: Update comment","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/23896","RelatedDescription":"Open PR \"Nit: Update comment\" (#23896)"},{"Id":"432033815","IsPullRequest":true,"CreatedAt":"2019-04-11T13:48:02","Actor":"stephentoub","Number":"23895","RawContent":null,"Title":"Nullable: Runtime serialization, COM, Vector, remaining IO, and other","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/23895","RelatedDescription":"Open PR \"Nullable: Runtime serialization, COM, Vector, remaining IO, and other\" (#23895)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"432335674","IsPullRequest":true,"CreatedAt":"2019-04-12T00:25:07","Actor":"wli3","Number":"11143","RawContent":null,"Title":"dotnet tool --local update","State":"open","Body":"**Please review by commit**\r\n\r\nthe follow 2 are large but they are refactorings to reduce the duplication:\r\nCreate applied option class 7d65d20\r\nExtract a class and a extension to minimize the dup from install and update 8ae38bd\r\n\r\nImpl dotnet tool update a438573 is more of the change to create install command","Url":"https://github.com/dotnet/cli/pull/11143","RelatedDescription":"Open PR \"dotnet tool --local update\" (#11143)"},{"Id":"432330562","IsPullRequest":true,"CreatedAt":"2019-04-12T00:01:24","Actor":"dotnet-bot","Number":"11142","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11142","RelatedDescription":"Open PR \"Merge release/2.2.2xx to release/3.0.1xx\" (#11142)"},{"Id":"432330547","IsPullRequest":true,"CreatedAt":"2019-04-12T00:01:22","Actor":"dotnet-bot","Number":"11141","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11141","RelatedDescription":"Open PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#11141)"},{"Id":"432330533","IsPullRequest":true,"CreatedAt":"2019-04-12T00:01:19","Actor":"dotnet-bot","Number":"11140","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11140","RelatedDescription":"Open PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#11140)"},{"Id":"432306299","IsPullRequest":false,"CreatedAt":"2019-04-11T22:53:55","Actor":"wli3","Number":"11139","RawContent":null,"Title":"Local tools uninstall should uninstall from the first manfiest with package id","State":"open","Body":"instead of the first manfiest regradless","Url":"https://github.com/dotnet/cli/issues/11139","RelatedDescription":"Open issue \"Local tools uninstall should uninstall from the first manfiest with package id\" (#11139)"},{"Id":"432300975","IsPullRequest":true,"CreatedAt":"2019-04-11T22:33:46","Actor":"nugetlurker","Number":"11138","RawContent":null,"Title":"Insert NuGet Build 5.0.1-rtm.5946 into cli","State":"open","Body":"Insert NuGet Build 5.0.1-rtm.5946 into cli release/2.1.6xx branch","Url":"https://github.com/dotnet/cli/pull/11138","RelatedDescription":"Open PR \"Insert NuGet Build 5.0.1-rtm.5946 into cli\" (#11138)"},{"Id":"432300960","IsPullRequest":true,"CreatedAt":"2019-04-11T22:33:42","Actor":"nugetlurker","Number":"11137","RawContent":null,"Title":"Insert NuGet Build 5.0.1-rtm.5946 into cli","State":"open","Body":"Insert NuGet Build 5.0.1-rtm.5946 into cli release/2.2.2xx branch","Url":"https://github.com/dotnet/cli/pull/11137","RelatedDescription":"Open PR \"Insert NuGet Build 5.0.1-rtm.5946 into cli\" (#11137)"},{"Id":"432123258","IsPullRequest":true,"CreatedAt":"2019-04-11T16:44:20","Actor":"JohnTortugo","Number":"11136","RawContent":null,"Title":"Onboard with async publishing","State":"open","Body":"Relates to: https://github.com/dotnet/arcade/issues/2444\r\n\r\nGoal: mitigate `lock on the feed problem` and add further validations. [More details here.](https://github.com/dotnet/arcade/blob/master/Documentation/CorePackages/AsyncPublishing_HowToUse.md)\r\n\r\nTest build was here: https://dnceng.visualstudio.com/internal/_build/results?buildId=151209\r\nTest release: https://dnceng.visualstudio.com/internal/_releaseProgress?_a=release-pipeline-progress&releaseId=4497","Url":"https://github.com/dotnet/cli/pull/11136","RelatedDescription":"Open PR \"Onboard with async publishing\" (#11136)"},{"Id":"431986370","IsPullRequest":true,"CreatedAt":"2019-04-11T15:37:23","Actor":"dotnet-maestro[bot]","Number":"11133","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190410.7\r\n- **Date Produced**: 4/11/2019 3:17 AM\r\n- **Commit**: 4f645e4a5385eb96cad3f72f5ded239761c7d075\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19210.7\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11133","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11133)"},{"Id":"431772102","IsPullRequest":true,"CreatedAt":"2019-04-11T15:14:59","Actor":"dotnet-bot","Number":"11128","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11128","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#11128)"},{"Id":"431772125","IsPullRequest":true,"CreatedAt":"2019-04-11T15:14:35","Actor":"dotnet-bot","Number":"11129","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11129","RelatedDescription":"Closed or merged PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#11129)"},{"Id":"431825950","IsPullRequest":true,"CreatedAt":"2019-04-11T14:37:08","Actor":"dotnet-maestro[bot]","Number":"11131","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190410.3\r\n- **Date Produced**: 4/11/2019 4:31 AM\r\n- **Commit**: 814b7898f9908a88f62706331cf56f1ecc9745eb\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview4.19210.3\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11131","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#11131)"},{"Id":"431772092","IsPullRequest":true,"CreatedAt":"2019-04-11T14:18:59","Actor":"dotnet-bot","Number":"11127","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.1.6xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11127","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.1.6xx\" (#11127)"},{"Id":"431990089","IsPullRequest":true,"CreatedAt":"2019-04-11T12:54:47","Actor":"dotnet-maestro[bot]","Number":"11135","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190410.1\r\n- **Date Produced**: 4/10/2019 1:08 PM\r\n- **Commit**: 0ea905c56ab0c8a8d17b1781486dad2e754afca3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19210.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11135","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11135)"},{"Id":"431986530","IsPullRequest":true,"CreatedAt":"2019-04-11T12:40:51","Actor":"dotnet-maestro[bot]","Number":"11134","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190410.2\r\n- **Date Produced**: 4/11/2019 3:46 AM\r\n- **Commit**: 6916b50efb78f126aa68a5d183993f55fb6e03c9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview5.19210.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11134","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11134)"},{"Id":"431952527","IsPullRequest":false,"CreatedAt":"2019-04-11T10:39:30","Actor":"PDostalek","Number":"11132","RawContent":null,"Title":"[loc][Query][dotnet_cli] Localizability of string:  0; \"UnexpectedTypeInJson\"","State":"open","Body":"Hi,\r\nplease help localization team to answer question from translator.\r\n\r\nIn case translator is not sure about context/meaning/localizability of string we raise a question to Core team.\r\n\r\nCould you help please? Thanks!**\r\n\r\nSource:\r\nExpected a {0} for property '{1}'.\r\n\r\nFile Name:\r\ndotnet\\ToolManifest\\xlf\\LocalizableStrings.xlf\r\n\r\nResource ID:\r\n0; \"UnexpectedTypeInJson\"\r\n\r\nQuery:\r\nCould you provide the meaning of the placeholders?","Url":"https://github.com/dotnet/cli/issues/11132","RelatedDescription":"Open issue \"[loc][Query][dotnet_cli] Localizability of string:  0; \"UnexpectedTypeInJson\"\" (#11132)"},{"Id":"431790349","IsPullRequest":false,"CreatedAt":"2019-04-11T01:36:07","Actor":"KirillOsenkov","Number":"11130","RawContent":null,"Title":"NETCoreSdkResolver should give a clear error message when preview SDK is rejected due to UsePreviews=false","State":"open","Body":"Currently the experience we see when a preview SDK is rejected due to DisallowPrerelease()\r\nhttps://github.com/dotnet/cli/blob/bfffcb23ba270640b355e729f36b34c04fad0121/src/Microsoft.DotNet.MSBuildSdkResolver/VSSettings.cs#L75\r\n\r\nis not good. It's a generic failed to load .NET SDK error, and it's super hard to figure out that the SDK was actually found, but it was pre-release and the checkbox wasn't set.\r\n\r\nSee related: \r\nhttps://github.com/dotnet/roslyn/issues/34927\r\n\r\nIf I wasted four hours figuring this out and debugging through the SDK resolver, the UX here should really be improved.","Url":"https://github.com/dotnet/cli/issues/11130","RelatedDescription":"Open issue \"NETCoreSdkResolver should give a clear error message when preview SDK is rejected due to UsePreviews=false\" (#11130)"},{"Id":"431734701","IsPullRequest":false,"CreatedAt":"2019-04-10T21:52:38","Actor":"wli3","Number":"11126","RawContent":null,"Title":"Remove checked-in ArrayBufferWriter","State":"open","Body":"https://github.com/dotnet/corefx/issues/34794#issuecomment-457031923\r\n\r\nit is available now\r\n","Url":"https://github.com/dotnet/cli/issues/11126","RelatedDescription":"Open issue \"Remove checked-in ArrayBufferWriter\" (#11126)"},{"Id":"431463968","IsPullRequest":true,"CreatedAt":"2019-04-10T16:53:07","Actor":"dotnet-bot","Number":"11121","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11121","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to release/3.0.1xx\" (#11121)"},{"Id":"431543474","IsPullRequest":true,"CreatedAt":"2019-04-10T16:52:21","Actor":"dotnet-maestro-bot","Number":"11125","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/11125","RelatedDescription":"Closed or merged PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.6xx)\" (#11125)"},{"Id":"431542272","IsPullRequest":true,"CreatedAt":"2019-04-10T16:51:51","Actor":"dotnet-maestro-bot","Number":"11124","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/11124","RelatedDescription":"Closed or merged PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)\" (#11124)"},{"Id":"431469381","IsPullRequest":true,"CreatedAt":"2019-04-10T12:49:47","Actor":"dotnet-maestro[bot]","Number":"11123","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190409.2\r\n- **Date Produced**: 4/10/2019 6:04 AM\r\n- **Commit**: 0ae2028f4ed06c931e5eddb1079134a9a924330e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19209.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11123","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11123)"},{"Id":"431465456","IsPullRequest":true,"CreatedAt":"2019-04-10T12:40:29","Actor":"dotnet-maestro[bot]","Number":"11122","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190409.2\r\n- **Date Produced**: 4/9/2019 12:54 PM\r\n- **Commit**: 63b76f3f952f821d0a7996427a9f3534f1c25ab7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19209.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11122","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11122)"},{"Id":"431229716","IsPullRequest":true,"CreatedAt":"2019-04-10T00:39:42","Actor":"dotnet-bot","Number":"11119","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11119","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#11119)"},{"Id":"431229736","IsPullRequest":true,"CreatedAt":"2019-04-09T23:29:17","Actor":"dotnet-bot","Number":"11120","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11120","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to release/3.0.1xx\" (#11120)"},{"Id":"431112745","IsPullRequest":true,"CreatedAt":"2019-04-09T22:24:57","Actor":"dotnet-maestro-bot","Number":"11118","RawContent":null,"Title":"Update aspnet, aspnet, coresetup to rtm-35537, rtm-35537, 2.1.0, respectively (release/2.2.1xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/11118","RelatedDescription":"Closed or merged PR \"Update aspnet, aspnet, coresetup to rtm-35537, rtm-35537, 2.1.0, respectively (release/2.2.1xx)\" (#11118)"},{"Id":"431112451","IsPullRequest":true,"CreatedAt":"2019-04-09T21:47:43","Actor":"dotnet-maestro-bot","Number":"11117","RawContent":null,"Title":"Update aspnet, aspnet, coresetup to rtm-35537, rtm-35537, 2.1.0, respectively (release/2.2.2xx)","State":"closed","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/11117","RelatedDescription":"Closed or merged PR \"Update aspnet, aspnet, coresetup to rtm-35537, rtm-35537, 2.1.0, respectively (release/2.2.2xx)\" (#11117)"},{"Id":"431107163","IsPullRequest":true,"CreatedAt":"2019-04-09T18:45:20","Actor":"peterhuene","Number":"11116","RawContent":null,"Title":"Merge release/2.2.1xx-MSRC to release/2.2.1xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11116","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx-MSRC to release/2.2.1xx\" (#11116)"},{"Id":"431106573","IsPullRequest":false,"CreatedAt":"2019-04-09T18:13:27","Actor":"natemcmaster","Number":"11115","RawContent":null,"Title":"Support Microsoft.WindowsDesktop.App from dotnet-install.ps1","State":"open","Body":"The dotnet-install.ps1 script supports installing ASP.NET Core and NETCore.App shared frameworks. In .NET Core 3, there is a new shared framework, Microsoft.WindowsDesktop.App. It would be useful to add support for installing this with the dotnet-install.ps1 script.\r\n\r\nUsage:\r\n```ps1\r\n./dotnet-install.ps1 -runtime WindowsDesktop -version 3.0.0\r\n```\r\n\r\nNote: for obvious reasons, dotnet-install.sh does not need to support this.","Url":"https://github.com/dotnet/cli/issues/11115","RelatedDescription":"Open issue \"Support Microsoft.WindowsDesktop.App from dotnet-install.ps1\" (#11115)"},{"Id":"431082363","IsPullRequest":false,"CreatedAt":"2019-04-09T17:26:41","Actor":"Wscar","Number":"11114","RawContent":null,"Title":"dotnet add package -s","State":"closed","Body":"## Steps to reproduce\r\nI use \"dotnet add package xxx -s https://api.nuget.org/v3/index.json\r\n \" the command to install the specified package, which has been accessing my private package source instead of https://api.nuget.org/v3/index.json\r\n\r\n## Expected  behavior\r\n\r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\ninfo : 正在将包“Newtonsoft.Json”的 PackageReference 添加到项目“F:\\MyProject\\测试\\MogoDb更新数据\\MogoDb更新数据\\MogoDb更新数据.csproj”。\r\nlog  : 正在还原 F:\\MyProject\\测试\\MogoDb更新数据\\MogoDb更新数据\\MogoDb更新数据.csproj 的包...\r\ninfo :   GET http://192.168.1.197:8082/repository/nuget-hosted/FindPackagesById()?id='Newtonsoft.Json'&semVerLevel=2.0.0\r\ninfo :   CACHE https://api.nuget.org/v3-flatcontainer/newtonsoft.json/index.json\r\nlog  : 对源“http://192.168.1.197:8082/repository/nuget-hosted/FindPackagesById()?id='Newtonsoft.Json'&semVerLevel=2.0.0”重试“FindPackagesByIdAsyncCore”。\r\nlog  : 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。\r\ninfo :   GET http://192.168.1.197:8082/repository/nuget-hosted/FindPackagesById()?id='Newtonsoft.Json'&semVerLevel=2.0.0\r\nlog  : 对源“http://192.168.1.197:8082/repository/nuget-hosted/FindPackagesById()?id='Newtonsoft.Json'&semVerLevel=2.0.0”重试“FindPackagesByIdAsyncCore”。\r\nlog  : 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。\r\ninfo :   GET http://192.168.1.197:8082/repository/nuget-hosted/FindPackagesById()?id='Newtonsoft.Json'&semVerLevel=2.0.0\r\nerror: 未能从远程源“http://192.168.1.197:8082/repository/nuget-hosted/FindPackagesById()?id='Newtonsoft.Json'&semVerLevel=2.0.0”检索有关“Newtonsoft.Json”的信息。\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11114","RelatedDescription":"Closed issue \"dotnet add package -s\" (#11114)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"432357589","IsPullRequest":false,"CreatedAt":"2019-04-12T02:20:57","Actor":"DSBRBrasil","Number":"1138","RawContent":null,"Title":"Xml validate [ type is not declared ]","State":"open","Body":"Hi,\r\nWhy, I don't  validate a document using .net standard 2.0? I get that's message: Type not declared\r\nThat's my code:\r\n```\r\n var xDoc = XDocument.Parse(\"<consStatServ versao=\\\"4.00\\\" xmlns=\\\"http://www.portalfiscal.inf.br/nfe\\\"><tpAmb>2</tpAmb><cUF>29</cUF><xServ>STATUS</xServ></consStatServ>\");\r\n   var xss = new XmlSchemaSet();\r\n   xss.Add(\"http://www.portalfiscal.inf.br/nfe\", @\"D:\\Schemas\\consStatServ_v4.00.xsd\");\r\n   //Validar Xml\r\n   xDoc.Validate(xss, (sender, args) =>\r\n            {\r\n                throw new FalhaValidacaoSchemaException(args.Message);\r\n\r\n            });\r\n```","Url":"https://github.com/dotnet/standard/issues/1138","RelatedDescription":"Open issue \"Xml validate [ type is not declared ]\" (#1138)"},{"Id":"431985706","IsPullRequest":true,"CreatedAt":"2019-04-11T12:13:49","Actor":"dotnet-maestro[bot]","Number":"1137","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190410.7\r\n- **Date Produced**: 4/11/2019 3:17 AM\r\n- **Commit**: 4f645e4a5385eb96cad3f72f5ded239761c7d075\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19210.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19210.7\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19210.7\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19210.7\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19210.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1137","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1137)"},{"Id":"431464888","IsPullRequest":true,"CreatedAt":"2019-04-10T12:13:44","Actor":"dotnet-maestro[bot]","Number":"1136","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190409.2\r\n- **Date Produced**: 4/9/2019 12:54 PM\r\n- **Commit**: 63b76f3f952f821d0a7996427a9f3534f1c25ab7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19209.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19209.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19209.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19209.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19209.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1136","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1136)"},{"Id":"429978073","IsPullRequest":true,"CreatedAt":"2019-04-09T16:30:37","Actor":"JohnTortugo","Number":"1126","RawContent":null,"Title":"Onboard on async publishing","State":"closed","Body":"Relates to: https://github.com/dotnet/arcade/issues/2442\r\n\r\nGoal: mitigate `lock on the feed problem` and add further validations. [More details here.](https://github.com/dotnet/arcade/blob/master/Documentation/CorePackages/AsyncPublishing_HowToUse.md)\r\n\r\nTest build was here: https://dnceng.visualstudio.com/internal/_build/results?buildId=144566\r\nTest release: https://dnceng.visualstudio.com/internal/_releaseProgress?_a=release-pipeline-progress&releaseId=4241","Url":"https://github.com/dotnet/standard/pull/1126","RelatedDescription":"Closed or merged PR \"Onboard on async publishing\" (#1126)"},{"Id":"430928858","IsPullRequest":true,"CreatedAt":"2019-04-09T12:13:46","Actor":"dotnet-maestro[bot]","Number":"1135","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190409.1\r\n- **Date Produced**: 4/9/2019 8:35 AM\r\n- **Commit**: 9d7e665ecf2606094677524ecd5af0fc39c7bb49\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19209.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19209.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19209.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19209.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19209.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1135","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1135)"},{"Id":"430724535","IsPullRequest":true,"CreatedAt":"2019-04-09T01:31:16","Actor":"wtgodbe","Number":"1133","RawContent":null,"Title":"Add triggers for release/3.0","State":"closed","Body":"CC @mmitche ","Url":"https://github.com/dotnet/standard/pull/1133","RelatedDescription":"Closed or merged PR \"Add triggers for release/3.0\" (#1133)"},{"Id":"430724563","IsPullRequest":true,"CreatedAt":"2019-04-09T01:31:07","Actor":"wtgodbe","Number":"1134","RawContent":null,"Title":"Add triggers for release/3.0","State":"closed","Body":"CC @mmitche ","Url":"https://github.com/dotnet/standard/pull/1134","RelatedDescription":"Closed or merged PR \"Add triggers for release/3.0\" (#1134)"},{"Id":"430719996","IsPullRequest":true,"CreatedAt":"2019-04-09T01:25:47","Actor":"wtgodbe","Number":"1132","RawContent":null,"Title":"Update branding to preview5","State":"closed","Body":"CC @mmitche","Url":"https://github.com/dotnet/standard/pull/1132","RelatedDescription":"Closed or merged PR \"Update branding to preview5\" (#1132)"},{"Id":"430670575","IsPullRequest":false,"CreatedAt":"2019-04-08T21:50:37","Actor":"tom-corwin","Number":"1131","RawContent":null,"Title":"Support for System.Reflection.Emit.ILGenerator.EmitCalli overload for unmanaged calling conventions","State":"closed","Body":"I noticed that when targeting a .NET Standard library, there is no overload for System.Reflection.Emit.ILGenerator.EmitCalli() that allows for use of the System.Runtime.InteropServices.CallingConvention enum as a parameter.\r\n\r\nAre there any plans to add the overload, or is this going to be on implementation-only?","Url":"https://github.com/dotnet/standard/issues/1131","RelatedDescription":"Closed issue \"Support for System.Reflection.Emit.ILGenerator.EmitCalli overload for unmanaged calling conventions\" (#1131)"},{"Id":"430411848","IsPullRequest":true,"CreatedAt":"2019-04-08T12:13:43","Actor":"dotnet-maestro[bot]","Number":"1130","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190407.1\r\n- **Date Produced**: 4/7/2019 12:56 PM\r\n- **Commit**: b1f9e12fe3ee71c48ea60b15968745850ac0a4a7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19207.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19207.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19207.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19207.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19207.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1130","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1130)"},{"Id":"430137273","IsPullRequest":true,"CreatedAt":"2019-04-07T12:13:36","Actor":"dotnet-maestro[bot]","Number":"1129","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190406.5\r\n- **Date Produced**: 4/6/2019 5:35 PM\r\n- **Commit**: 9d8abf998866f10bc19d97e1916ff1c0ada3fd42\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19206.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19206.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19206.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19206.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19206.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1129","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1129)"},{"Id":"429990573","IsPullRequest":false,"CreatedAt":"2019-04-07T05:49:47","Actor":"benneyman","Number":"1127","RawContent":null,"Title":"[Help] Targeting netstandard2.0 for a class library","State":"closed","Body":"After a lot of googling I came to realize that my existing class library(net462) should be targeting netstandard2.0 to be able to reference into my react app (dotnet new react) which targets netcoreapp2.1.\r\n\r\nI am not sure how to make my class library to target netstandard2.0 from Visual Studio 2013. From the extensive googling I did I know we need VS 2017 (15.3) to do this. I do not have access to VS 2017.\r\n\r\nI feel there could be other ways of doing this without having to have VS2017 from the googling I did. But I can't any concrete solutions.\r\n\r\nCould you please guide me on how to target a class library to netstandard2.0 from Visual Studio 2013 or using CLI tools so that I will be able to add a project reference to my react project.","Url":"https://github.com/dotnet/standard/issues/1127","RelatedDescription":"Closed issue \"[Help] Targeting netstandard2.0 for a class library\" (#1127)"},{"Id":"430027157","IsPullRequest":true,"CreatedAt":"2019-04-06T12:13:34","Actor":"dotnet-maestro[bot]","Number":"1128","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190405.6\r\n- **Date Produced**: 4/5/2019 11:26 PM\r\n- **Commit**: 4217db4a23ffd15abb3771d635b66162994fb9e4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19205.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19205.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19205.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19205.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19205.6\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1128","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1128)"},{"Id":"429720581","IsPullRequest":true,"CreatedAt":"2019-04-05T12:11:02","Actor":"dotnet-maestro[bot]","Number":"1125","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190404.16\r\n- **Date Produced**: 4/5/2019 3:36 AM\r\n- **Commit**: 61196044ed70a65c610beb230ac6ea77566668c2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19204.16\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19204.16\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19204.16\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19204.16\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19204.16\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1125","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1125)"},{"Id":"429609384","IsPullRequest":false,"CreatedAt":"2019-04-05T07:06:16","Actor":"Jacksiro","Number":"1124","RawContent":null,"Title":"Could not load file or assembly 'Microsoft.WindowsAPICodePack.Shell'","State":"closed","Body":"I am using VS 2017 Community and have targeted .Net v4.5 in my app. My app throws the error of \r\n\r\n```\r\n\r\n> See the end of this message for details on invoking \r\n> just-in-time (JIT) debugging instead of this dialog box.\r\n> \r\n> ************** Exception Text **************\r\n> System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.WindowsAPICodePack.Shell, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null' or one of its dependencies. The system cannot find the file specified.\r\n> File name: 'Microsoft.WindowsAPICodePack.Shell, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'\r\n>    at EasyTabs.TitleBarTabs.SetFrameSize()\r\n>    at EasyTabs.TitleBarTabs.OnSizeChanged(EventArgs e)\r\n>    at System.Windows.Forms.Control.UpdateBounds(Int32 x, Int32 y, Int32 width, Int32 height, Int32 clientWidth, Int32 clientHeight)\r\n>    at System.Windows.Forms.Control.UpdateBounds()\r\n>    at System.Windows.Forms.Control.WndProc(Message& m)\r\n>    at System.Windows.Forms.ScrollableControl.WndProc(Message& m)\r\n>    at System.Windows.Forms.Form.WndProc(Message& m)\r\n>    at EasyTabs.TitleBarTabs.WndProc(Message& m)\r\n>    at System.Windows.Forms.Control.ControlNativeWindow.OnMessage(Message& m)\r\n>    at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message& m)\r\n>    at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)\r\n> \r\n> WRN: Assembly binding logging is turned OFF.\r\n> To enable assembly bind failure logging, set the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog] (DWORD) to 1.\r\n> Note: There is some performance penalty associated with assembly bind failure logging.\r\n> To turn this feature off, remove the registry value [HKLM\\Software\\Microsoft\\Fusion!EnableLog].\r\n> \r\n> \r\n> \r\n> ************** Loaded Assemblies **************\r\n> mscorlib\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.NET/Framework/v4.0.30319/mscorlib.dll\r\n> ----------------------------------------\r\n> vSongBook\r\n>     Assembly Version: 2.3.5.2\r\n>     Win32 Version: 2.3.5.2\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/vSongBook.exe\r\n> ----------------------------------------\r\n> System.Windows.Forms\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_MSIL/System.Windows.Forms/v4.0_4.0.0.0__b77a5c561934e089/System.Windows.Forms.dll\r\n> ----------------------------------------\r\n> System\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_MSIL/System/v4.0_4.0.0.0__b77a5c561934e089/System.dll\r\n> ----------------------------------------\r\n> System.Drawing\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_MSIL/System.Drawing/v4.0_4.0.0.0__b03f5f7f11d50a3a/System.Drawing.dll\r\n> ----------------------------------------\r\n> JacksiroCtrl\r\n>     Assembly Version: 1.2.5.0\r\n>     Win32 Version: 1.2.5.0\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/JacksiroCtrl.DLL\r\n> ----------------------------------------\r\n> SQLite.NET\r\n>     Assembly Version: 0.21.1869.3794\r\n>     Win32 Version: 0.21.1869.3794\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/SQLite.NET.DLL\r\n> ----------------------------------------\r\n> System.Data\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_32/System.Data/v4.0_4.0.0.0__b77a5c561934e089/System.Data.dll\r\n> ----------------------------------------\r\n> System.Core\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_MSIL/System.Core/v4.0_4.0.0.0__b77a5c561934e089/System.Core.dll\r\n> ----------------------------------------\r\n> System.Xml\r\n>     Assembly Version: 4.0.0.0\r\n>     Win32 Version: 4.6.1590.0 built by: NETFXREL2\r\n>     CodeBase: file:///C:/Windows/Microsoft.Net/assembly/GAC_MSIL/System.Xml/v4.0_4.0.0.0__b77a5c561934e089/System.Xml.dll\r\n> ----------------------------------------\r\n> EasyTabs\r\n>     Assembly Version: 1.3.3.0\r\n>     Win32 Version: 1.3.3.0\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/EasyTabs.DLL\r\n> ----------------------------------------\r\n> Win32Interop.Uxtheme\r\n>     Assembly Version: 1.0.1.0\r\n>     Win32 Version: 1.0.1\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/Win32Interop.Uxtheme.DLL\r\n> ----------------------------------------\r\n> Win32Interop.User32\r\n>     Assembly Version: 1.0.1.0\r\n>     Win32 Version: 1.0.1\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/Win32Interop.User32.DLL\r\n> ----------------------------------------\r\n> Win32Interop.Dwmapi\r\n>     Assembly Version: 1.0.1.0\r\n>     Win32 Version: 1.0.1\r\n>     CodeBase: file:///C:/Users/Gifted/AppData/Local/AppSmata/vSongBook/Win32Interop.Dwmapi.DLL\r\n> ----------------------------------------\r\n> \r\n> ************** JIT Debugging **************\r\n> To enable just-in-time (JIT) debugging, the .config file for this\r\n> application or computer (machine.config) must have the\r\n> jitDebugging value set in the system.windows.forms section.\r\n> The application must also be compiled with debugging\r\n> enabled.\r\n> \r\n> For example:\r\n> \r\n> <configuration>\r\n>     <system.windows.forms jitDebugging=\"true\" />\r\n> </configuration>\r\n> \r\n> When JIT debugging is enabled, any unhandled exception\r\n> will be sent to the JIT debugger registered on the computer\r\n> rather than be handled by this dialog box.\r\n\r\n```\r\n\r\nKIndly advice me on the on how to resolve this issue","Url":"https://github.com/dotnet/standard/issues/1124","RelatedDescription":"Closed issue \"Could not load file or assembly 'Microsoft.WindowsAPICodePack.Shell'\" (#1124)"},{"Id":"429582381","IsPullRequest":false,"CreatedAt":"2019-04-05T04:53:06","Actor":"Groostav","Number":"1123","RawContent":null,"Title":"phantom connection when mixing async & blocking calls on TcpClient ","State":"open","Body":"apologies if this is the wrong place to report this!\r\n\r\non .net 4.6.1, win10\r\n\r\n1. create a TCPClient object\r\n2. attempt to connect synchronously to an endpoint with no bound service, get a `SocketException: Connection actively refused\"\r\n3. attempt to `connectAsync` to that same endpoint \r\n\r\nexpected: Asynchronously get a `SocketException: Connection Actively Refused`\r\nactual: connection is established, `tcpClient.Connected` returns true, `tcpClient.GetStream()` returns non-null, `tcpClient.GetStream().write(...)` throws `NotConnectedException`.\r\n\r\n```C#\r\n        \r\n[Test] //baseline, good behaviour\r\npublic async Task when_only_using_async_calls_should_get_consistent_behaviour()\r\n{\r\n    //setup\r\n    var localhost = \"127.0.0.1\";\r\n    var port = 27041; \r\n    \r\n    var tcpClient = new TcpClient();\r\n\r\n    //act\r\n    try\r\n    {\r\n        await tcpClient.ConnectAsync(localhost, port);\r\n        Assert.Fail(\"connection was actually established!\");\r\n    }\r\n    catch (SocketException ex)\r\n    {\r\n        //continue\r\n    }\r\n\r\n    Func<Task> act = (async () => await tcpClient.ConnectAsync(localhost, port));\r\n\r\n    //assert\r\n    act.Should().Throw<SocketException>();\r\n}        \r\n\r\n\r\n[Test]\r\npublic async Task when_mixing_sync_and_async_tcpclient_calls_should_get_hideous_behaviour()\r\n{\r\n    //setup\r\n    var localhost = \"127.0.0.1\";\r\n    var port = 27041; \r\n    \r\n    var tcpClient = new TcpClient();\r\n\r\n    //act\r\n    try\r\n    {\r\n        tcpClient.Connect(localhost, port);\r\n        Assert.Fail(\"connection was actually established!\");\r\n    }\r\n    catch (SocketException ex)\r\n    {\r\n        //continue\r\n    }\r\n\r\n    await tcpClient.ConnectAsync(localhost, port);\r\n\r\n    //assert\r\n    tcpClient.Connected.Should().BeTrue();\r\n    tcpClient.GetStream().Should().NotBeNull();\r\n\r\n    //seems very strange\r\n    //subsequent interactions with tcpClient throw \"not connected\" exceptions\r\n    //I would've expected the `ConnectAsync` method to throw the same `SocketException`,\r\n}\r\n```","Url":"https://github.com/dotnet/standard/issues/1123","RelatedDescription":"Open issue \"phantom connection when mixing async & blocking calls on TcpClient \" (#1123)"},{"Id":"429333028","IsPullRequest":false,"CreatedAt":"2019-04-04T15:07:55","Actor":"Korporal","Number":"1122","RawContent":null,"Title":"The end of .NET Framework support?","State":"open","Body":"Hi,\r\n\r\nOn [this ](https://github.com/dotnet/standard/blob/master/docs/versions.md)page we see this footnote under the chart:\r\n\r\n> 2 .NET Framework will not support .NET Standard 2.1 or any other later version. For more details, see this blog post.\r\n\r\nI can understand how some specific version like .NET Framework 4.6.1 (for example) will not support .NET Standard 2.1 but _all_ **future** versions of the .NET Framework too?\r\n\r\nThis statements amounts to a phasing out of .NET Framework, it tells us that we should begin to stop targeting it - well that's what seems to be a logical conclusion anyway.\r\n\r\nI don't understand why some future version of .NET Framework (e.g. 4.8) could not include support for .NET Core 2.1?\r\n\r\nWe read [here ](https://docs.microsoft.com/en-us/dotnet/standard/net-standard)the following Microsoft statement:\r\n\r\n> The .NET Standard is a formal specification of .NET APIs that are intended to be available on **_all_** .NET implementations.\r\n\r\nBut now you're retracting this and instead should be saying:\r\n\r\n> The .NET Standard 2.0 and below, is a formal specification of .NET APIs that are intended to be available on all .NET implementations.\r\n\r\nCan Microsoft please be clearer about this? Companies and their staff are under a huge burden to keep up with all sorts of developments in the technology world and if we are being advised to phase out our own support for the .NET Framework then please say so very clearly and definitively, mentioning this kind of thing as small footnote isn't helpful.\r\n\r\nThanks\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1122","RelatedDescription":"Open issue \"The end of .NET Framework support?\" (#1122)"},{"Id":"429240376","IsPullRequest":true,"CreatedAt":"2019-04-04T12:13:48","Actor":"dotnet-maestro[bot]","Number":"1121","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190403.10\r\n- **Date Produced**: 4/4/2019 1:43 AM\r\n- **Commit**: 811fda44a88dcfe3e42a17bb34467f5764836c65\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19203.10\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19203.10\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1121","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1121)"},{"Id":"429232379","IsPullRequest":false,"CreatedAt":"2019-04-04T11:43:44","Actor":"markrendle","Number":"1120","RawContent":null,"Title":"Please please please don't call it .NET Standard 2.1 when it aligns with .NET Core 3.0","State":"open","Body":"This is exactly the sort of version number weirdness that .NET takes flak for.\r\n\r\nIn the commit explaining the 2.1 decision, the 3.0 section is:\r\n\r\n- **3.0**\r\n  - Aligns with .NET Core, which will be released at the same time as .NET\r\n    Standard vNext\r\n  - Pros\r\n    + Leaves room for another .NET Standard that is smaller\r\n    + Simpler messaging when we ship .NET Core and .NET Standard and aligns with\r\n      what we did for .NET Core 2.0.\r\n  - Cons\r\n    + A 3.0 isn't really warranted for .NET Standard\r\n    + Perpetuates the problem of aligning .NET Core & .NET Standard versions and\r\n      requires arbitrary skipping of version numbers\r\n\r\n*Simpler messaging* should be a top priority here. I'm going to spend as much time explaining to clients why they can't use .NET Standard 2.1 with the .NET Core 2.1 LTS as my niece Allyce does explaining how to spell her name.\r\n\r\nIf a 3.0 is warranted for .NET Core, with it's `IAsyncEnumerable`, `IAsyncDisposable`, `Range` and `Index` and all the new overloads of existing APIs, then why isn't it warranted for .NET Standard?\r\n\r\nBetter yet, why not publish a .NET Standard 2.1 which aligns with .NET Core 2.1, with all the `Span<T>` goodness, and a .NET Standard 3.0 which aligns with .NET Core 3.0?\r\n\r\nDeliberately versioning .NET Standard independently of .NET Core, especially on the major version numbers, just seems perverse and unnecessary.","Url":"https://github.com/dotnet/standard/issues/1120","RelatedDescription":"Open issue \"Please please please don't call it .NET Standard 2.1 when it aligns with .NET Core 3.0\" (#1120)"},{"Id":"428727330","IsPullRequest":true,"CreatedAt":"2019-04-03T12:11:00","Actor":"dotnet-maestro[bot]","Number":"1119","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190402.13\r\n- **Date Produced**: 4/3/2019 12:44 AM\r\n- **Commit**: 764f362c8e92e41905fe5f6c782ab9980c86c909\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19202.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19202.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19202.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19202.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19202.13\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1119","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1119)"},{"Id":"428466923","IsPullRequest":false,"CreatedAt":"2019-04-02T22:06:10","Actor":"wtgodbe","Number":"1118","RawContent":null,"Title":"Consider adding Nullable annotations to .Net Standard","State":"open","Body":"https://github.com/dotnet/coreclr/tree/NullableFeature\r\n\r\nWe should consider adding the annotations from the above Feature branch to the .Net Standard for 2.1.\r\n\r\nCC @wtgodbe @terrajobst @dotnet/nullablefc ","Url":"https://github.com/dotnet/standard/issues/1118","RelatedDescription":"Open issue \"Consider adding Nullable annotations to .Net Standard\" (#1118)"},{"Id":"428187528","IsPullRequest":true,"CreatedAt":"2019-04-02T12:14:00","Actor":"dotnet-maestro[bot]","Number":"1117","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190401.12\r\n- **Date Produced**: 4/2/2019 1:18 AM\r\n- **Commit**: 505e38906e1ee2d032c41bb297de0958307db946\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19201.12\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19201.12\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19201.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19201.12\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19201.12\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1117","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1117)"},{"Id":"427275509","IsPullRequest":true,"CreatedAt":"2019-03-30T12:23:34","Actor":"dotnet-maestro[bot]","Number":"1116","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.2\r\n- **Date Produced**: 3/29/2019 1:07 PM\r\n- **Commit**: 31abd61b43b115a6af83c92ce35ed4e8efd01dfd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19179.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19179.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1116","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1116)"},{"Id":"426954195","IsPullRequest":true,"CreatedAt":"2019-03-29T12:13:42","Actor":"dotnet-maestro[bot]","Number":"1115","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.1\r\n- **Date Produced**: 3/29/2019 10:57 AM\r\n- **Commit**: ef139c7533e2e33c5e0946b80cb1aa95d84da868\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19179.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19179.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19179.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19179.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1115","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1115)"},{"Id":"426800191","IsPullRequest":false,"CreatedAt":"2019-03-29T03:29:38","Actor":"CalvinFengDatacom","Number":"1114","RawContent":null,"Title":"Multiple assemblies with equivalent identity have been imported","State":"open","Body":"Hi Guys,\r\n\r\nI have a wired issue with my .Net project after I push my changes to remote repository in DevOps.\r\n\r\nThe situation is, we have a .Net project was in .Net framework in version 4.6, then because of other dependencies, we need to upgrade the .Net framework to 4.6.2. It built successfully locally, but it built failed in the build pipeline of DevOps.\r\n\r\nThe error message is: \r\n\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.Serialization.Primitives.4.1.1\\lib\\net46\\System.Runtime.Serialization.Primitives.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.Serialization.Primitives.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.InteropServices.4.1.0\\lib\\net462\\System.Runtime.InteropServices.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.InteropServices.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.Extensions.4.1.0\\lib\\net462\\System.Runtime.Extensions.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.Extensions.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.Runtime.4.1.0\\lib\\net462\\System.Runtime.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.Runtime.dll'. Remove one of the duplicate references.\r\n- CSC(0,0): Error CS1703: Multiple assemblies with equivalent identity have been imported: 'D:\\a\\1\\s\\DNZ.Mocabots.AIA\\packages\\System.IO.4.1.0\\lib\\net462\\System.IO.dll' and 'C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.6.2\\Facades\\System.IO.dll'. Remove one of the duplicate references.\r\n- Process 'msbuild.exe' exited with code '1'.\r\n\r\nI can see there are lots of suggestions of removing one of the conflict file manually, however it doesn't work for me. \r\n\r\n_**Note again, we are using .Net Standard F/W, not .Net Core.**\r\nIt was in 4.6 and now it's in 4.6.2._\r\n\r\nLooking forward from your ideas, thanks","Url":"https://github.com/dotnet/standard/issues/1114","RelatedDescription":"Open issue \"Multiple assemblies with equivalent identity have been imported\" (#1114)"},{"Id":"426583515","IsPullRequest":false,"CreatedAt":"2019-03-28T16:14:20","Actor":"CoenraadS","Number":"1113","RawContent":null,"Title":"System.TypeInitializationException: 'The type initializer for 'Microsoft.ServiceBus.Messaging.Constants' threw an exception.'","State":"open","Body":"I have a .Net Core Project that requires `System.UriTemplate` which doesn't seem implemented.\r\n\r\n`System.TypeInitializationException: 'The type initializer for 'Microsoft.ServiceBus.Messaging.Constants' threw an exception.'`\r\n\r\n`TypeLoadException: Could not load type 'System.UriTemplate' from assembly 'System.ServiceModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.`\r\n\r\n.Net Core 2.1 Console Project\r\n\r\n![image](https://user-images.githubusercontent.com/5593825/55173581-3c3dfa00-517c-11e9-95d0-7380e4ce654a.png)\r\n\r\n\r\n```\r\nusing Microsoft.ServiceBus.Messaging;\r\nusing System;\r\nusing System.Linq;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            string connectionString = \"\";\r\n            var q = QueueClient.CreateFromConnectionString(connectionString, \"myqueue\");\r\n\r\n            var sessions = q.GetMessageSessions();\r\n\r\n            var names = sessions.Select(e => e.SessionId);\r\n\r\n            foreach (var name in names)\r\n            {\r\n                Console.WriteLine(name);\r\n            }\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/standard/issues/1113","RelatedDescription":"Open issue \"System.TypeInitializationException: 'The type initializer for 'Microsoft.ServiceBus.Messaging.Constants' threw an exception.'\" (#1113)"},{"Id":"426455070","IsPullRequest":true,"CreatedAt":"2019-03-28T12:24:04","Actor":"dotnet-maestro[bot]","Number":"1112","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190327.11\r\n- **Date Produced**: 3/28/2019 1:58 AM\r\n- **Commit**: 69f276904fdd6d8f81404b857f295537894b81d3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19177.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19177.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19177.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19177.11\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19177.11\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1112","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1112)"},{"Id":"426112720","IsPullRequest":true,"CreatedAt":"2019-03-27T19:57:52","Actor":"wtgodbe","Number":"1111","RawContent":null,"Title":"Update build pools","State":"closed","Body":"@MattGal @mmitche PTAL","Url":"https://github.com/dotnet/standard/pull/1111","RelatedDescription":"Closed or merged PR \"Update build pools\" (#1111)"},{"Id":"425696215","IsPullRequest":true,"CreatedAt":"2019-03-27T13:10:47","Actor":"ericstj","Number":"1109","RawContent":null,"Title":"Make some packages optional for source build","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1109","RelatedDescription":"Closed or merged PR \"Make some packages optional for source build\" (#1109)"},{"Id":"425920602","IsPullRequest":true,"CreatedAt":"2019-03-27T12:13:39","Actor":"dotnet-maestro[bot]","Number":"1110","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190326.14\r\n- **Date Produced**: 3/27/2019 12:08 AM\r\n- **Commit**: e23a3e2fd09a6222361ce47b78d23ab42867924c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19176.14\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19176.14\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19176.14\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19176.14\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19176.14\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1110","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1110)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"432390155","IsPullRequest":false,"CreatedAt":"2019-04-12T05:12:13","Actor":"tmds","Number":"36809","RawContent":null,"Title":"DefaultLoadContextTests.LoadInDefaultContext test failure","State":"open","Body":"This test has been failing on my machine when running corefx tests for a while. I have not investigated further. This is in the testResults.xml:\r\n```\r\n      <test name=\"System.Runtime.Loader.Tests.DefaultLoadContextTests.LoadInDefaultContext\" type=\"System.Runtime.Loader.Tests.DefaultLoadContextTests\" method=\"LoadInDefaultContext\" time=\"0.0075109\" result=\"Fail\">\r\n        <traits>\r\n          <trait name=\"category\" value=\"nonuapaottests\" />\r\n        </traits>\r\n        <failure exception-type=\"Xunit.Sdk.ThrowsException\">\r\n          <message><![CDATA[Assert.Throws() Failure\\nExpected: typeof(System.IO.FileNotFoundException)\\nActual:   (No exception was thrown)]]></message>\r\n          <stack-trace><![CDATA[   at System.Runtime.Loader.Tests.DefaultLoadContextTests.LoadInDefaultContext() in /home/tmds/repos/corefx/src/System.Runtime.Loader/tests/DefaultContext/DefaultLoadContextTest.cs:line 94]]></stack-trace>\r\n        </failure>\r\n      </test>\r\n```","Url":"https://github.com/dotnet/corefx/issues/36809","RelatedDescription":"Open issue \"DefaultLoadContextTests.LoadInDefaultContext test failure\" (#36809)"},{"Id":"432388299","IsPullRequest":true,"CreatedAt":"2019-04-12T05:01:34","Actor":"cston","Number":"36808","RawContent":null,"Title":"Port ErrObject and CreateProjectError","State":"open","Body":"Port `ErrObject` and `CreateProjectError` from reference source.","Url":"https://github.com/dotnet/corefx/pull/36808","RelatedDescription":"Open PR \"Port ErrObject and CreateProjectError\" (#36808)"},{"Id":"432373874","IsPullRequest":true,"CreatedAt":"2019-04-12T03:42:07","Actor":"krwq","Number":"36807","RawContent":null,"Title":"Remove duplicate copy of Interop.GetCurrentThreadId.cs","State":"open","Body":"found as part of https://github.com/dotnet/coreclr/pull/23914","Url":"https://github.com/dotnet/corefx/pull/36807","RelatedDescription":"Open PR \"Remove duplicate copy of Interop.GetCurrentThreadId.cs\" (#36807)"},{"Id":"432360042","IsPullRequest":true,"CreatedAt":"2019-04-12T02:33:03","Actor":"JeremyKuhne","Number":"36806","RawContent":null,"Title":"Start on object serialization.","State":"open","Body":"Deserializes json properties as `JsonElement` into `object` properties.\r\n\r\nSerializes `JsonElement` in `object` fields back out to json.\r\n\r\nShould also work with `JsonElement` properties, but haven't written tests yet. Arrays of `object` still needs to be implemented. Needs the ability to clone `JsonElement` to ensure coherency if source json goes out of scope.\r\n\r\nStill have a lot of testing to do, wanted to get the initial \"working\" implementation up for feedback.","Url":"https://github.com/dotnet/corefx/pull/36806","RelatedDescription":"Open PR \"Start on object serialization.\" (#36806)"},{"Id":"432340642","IsPullRequest":true,"CreatedAt":"2019-04-12T02:13:15","Actor":"Dotnet-GitSync-Bot","Number":"36805","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corefx/pull/36805","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#36805)"},{"Id":"432241104","IsPullRequest":true,"CreatedAt":"2019-04-12T02:11:51","Actor":"stephentoub","Number":"36799","RawContent":null,"Title":"Update Version comparison operator tests","State":"closed","Body":"Better validate the operators, and update the tests now that the operators won't throw for null.","Url":"https://github.com/dotnet/corefx/pull/36799","RelatedDescription":"Closed or merged PR \"Update Version comparison operator tests\" (#36799)"},{"Id":"432159202","IsPullRequest":true,"CreatedAt":"2019-04-12T00:45:22","Actor":"Dotnet-GitSync-Bot","Number":"36796","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @tarekgh @luhenry @filipnavara @jkotas @EgorBo @sdmaclea","Url":"https://github.com/dotnet/corefx/pull/36796","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corert\" (#36796)"},{"Id":"432268751","IsPullRequest":true,"CreatedAt":"2019-04-12T00:31:26","Actor":"davidsh","Number":"36801","RawContent":null,"Title":"Improve HttpClient POST tests stability","State":"closed","Body":"Several of the HttpClient POST scenario tests were failing with HTTP status code 500. This was caused\r\nby the Azure remote endpoint generating OutOfMemoryException at times. The tests are sending large\r\namounts of request body data to the Echo endpoint. That endpoint will respond back with all the\r\nheaders and request body data serialized into a JSON payload. The OOM exceptions were coming from the\r\nNewtonsoft JSON serialization code currently used by the server endpoint.\r\n\r\nThese tests don't really require that the request body data be sent back. The purpose of the tests is\r\nto verify that the request body payload was correctly sent by the client. We already have an endpoint,\r\nVerifyUpload, that can do that without echo'ing back the large request body data.\r\n\r\nThis PR modifies the tests to use that endpoint. This should mitigate the OOM exceptions currently being\r\ngenerated in the server-side code. Additional mitigations/fixes will be done later on the server-side code\r\nto improve robustness. But fixing the tests to be more streamlined is goodness and will result in these\r\ntests being faster and more stable.\r\n\r\nCloses #36782","Url":"https://github.com/dotnet/corefx/pull/36801","RelatedDescription":"Closed or merged PR \"Improve HttpClient POST tests stability\" (#36801)"},{"Id":"431854287","IsPullRequest":false,"CreatedAt":"2019-04-12T00:31:26","Actor":"dotnet-mc-bot","Number":"36782","RawContent":null,"Title":"Test failure: System.Net.Http.Functional.Tests.PlatformHandler_PostScenarioTest/PostLargeContentUsingContentLengthSemantics_Success(serverUri: http://corefx-net-http11.azurewebsites.net/Echo.ashx, contentLength: 132096)","State":"closed","Body":"Opened on behalf of @AriNuer\n\nThe test `System.Net.Http.Functional.Tests.PlatformHandler_PostScenarioTest/PostLargeContentUsingContentLengthSemantics_Success(serverUri: http://corefx-net-http11.azurewebsites.net/Echo.ashx, contentLength: 132096)` has failed.\n\nFailure Message:\n```\nValid request body\\r\nExpected: True\\r\nActual:   False\n```\n\nStack Trace:\n```\n   at System.Net.Http.Functional.Tests.TestHelper.VerifyResponseBody(String responseContent, Byte[] expectedMD5Hash, Boolean chunkedUpload, String requestBody) in F:\\workspace\\_work\\1\\s\\src\\System.Net.Http\\tests\\FunctionalTests\\TestHelper.cs:line 68\n   at System.Net.Http.Functional.Tests.PostScenarioTest.PostHelper(Uri serverUri, String requestBody, HttpContent requestContent, Boolean useContentLengthUpload, Boolean useChunkedEncodingUpload)\n   at System.Net.Http.Functional.Tests.PostScenarioTest.PostLargeContentUsingContentLengthSemantics_Success(Uri serverUri, Int32 contentLength) in F:\\workspace\\_work\\1\\s\\src\\System.Net.Http\\tests\\FunctionalTests\\PostScenarioTest.cs:line 174\n--- End of stack trace from previous location where exception was thrown ---\n```\n\nBuild : 3.0 - 20190410.8 (UWP F5 Tests)\nFailing configurations:\n- Windows.10.Amd64.ClientRS5-x86\n  - Release\n- Windows.10.Amd64.ClientRS5-x64\n  - Release\n\nDetails:\nhttps://mc.dot.net/#/product/netcore/30/source/official~2Fdotnet~2Fcorefx~2Frefs~2Fheads~2Fmaster/type/test~2Ffunctional~2Fuwp~2F/build/20190410.8/workItem/System.Net.Http.Functional.Tests/analysis/xunit/System.Net.Http.Functional.Tests.PlatformHandler_PostScenarioTest~2FPostLargeContentUsingContentLengthSemantics_Success(serverUri:%20http:~2F~2Fcorefx-net-http11.azurewebsites.net~2FEcho.ashx,%20contentLength:%20132096)","Url":"https://github.com/dotnet/corefx/issues/36782","RelatedDescription":"Closed issue \"Test failure: System.Net.Http.Functional.Tests.PlatformHandler_PostScenarioTest/PostLargeContentUsingContentLengthSemantics_Success(serverUri: http://corefx-net-http11.azurewebsites.net/Echo.ashx, contentLength: 132096)\" (#36782)"},{"Id":"432319507","IsPullRequest":false,"CreatedAt":"2019-04-11T23:37:47","Actor":"mairaw","Number":"36804","RawContent":null,"Title":"Ref and src folders have mismatched param names","State":"open","Body":"@carlossanlop and I are looking into adding more API docs and we ran into an issue where the source has a parameter name that is different than what we're seeing in the reference assemblies.\r\n\r\nI'm guessing it's because of the mismatch we're seeing between the src and ref folders?\r\nhttps://github.com/dotnet/corefx/blob/master/src/System.IO.Compression.ZipFile/ref/System.IO.Compression.ZipFile.cs#L16\r\nhttps://github.com/dotnet/corefx/blob/master/src/System.IO.Compression.ZipFile/src/System/IO/Compression/ZipFile.Extract.cs#L78\r\n\r\n**ref** calls it _overwriteFiles_, **src** calls it _overwrite_.\r\n\r\n/cc @terrajobst @karelz ","Url":"https://github.com/dotnet/corefx/issues/36804","RelatedDescription":"Open issue \"Ref and src folders have mismatched param names\" (#36804)"},{"Id":"432313740","IsPullRequest":true,"CreatedAt":"2019-04-11T23:10:46","Actor":"sdmaclea","Number":"36803","RawContent":null,"Title":"Add Assembly.LoadWithPartialName cases","State":"open","Body":"Cover hole reported in dotnet/coreclr#19817","Url":"https://github.com/dotnet/corefx/pull/36803","RelatedDescription":"Open PR \"Add Assembly.LoadWithPartialName cases\" (#36803)"},{"Id":"432307794","IsPullRequest":false,"CreatedAt":"2019-04-11T22:54:40","Actor":"Gnbrkm41","Number":"36802","RawContent":null,"Title":"Test failure: NRE on System.Net.Http.Functional.Tests.PlatformHandler_HttpClientHandlerTest.GetAsync_IPv6LinkLocalAddressUri_Success","State":"open","Body":"System.Net.Http.Functional.Tests.SocketsHttpHandlerTest_HttpClientHandlerTest_Http2/GetAsync_IPv6LinkLocalAddressUri_Success\r\nSystem.Net.Http.Functional.Tests.PlatformHandler_HttpClientHandlerTest/GetAsync_IPv6LinkLocalAddressUri_Success\r\nSystem.Net.Http.Functional.Tests.PlatformHandler_HttpClientHandlerTest/GetAsync_IPv6LinkLocalAddressUri_Success\r\nhttps://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fpull~2F36497~2Fmerge/test~2Ffunctional~2Fcli~2F/20190411.32/workItem/System.Net.Http.Functional.Tests/analysis/xunit/System.Net.Http.Functional.Tests.PlatformHandler_HttpClientHandlerTest~2FGetAsync_IPv6LinkLocalAddressUri_Success\r\nWindows.10.Amd64.ClientRS4.ES.Open-x64-Debug\r\n```text\r\nUnhandled Exception of Type System.NullReferenceException\r\nMessage :\r\nSystem.NullReferenceException : Object reference not set to an instance of an object.\r\nStack Trace :\r\n   at System.Net.Test.Common.LoopbackServer.CreateServerAsync(Func`2 funcAsync, Options options) in D:\\a\\1\\s\\src\\Common\\tests\\System\\Net\\Http\\LoopbackServer.cs:line 59\r\n   at System.Net.Http.Functional.Tests.HttpClientHandlerTest.GetAsync_IPv6LinkLocalAddressUri_Success() in D:\\a\\1\\s\\src\\System.Net.Http\\tests\\FunctionalTests\\HttpClientHandlerTest.cs:line 301\r\n--- End of stack trace from previous location where exception was thrown ---\r\n```\r\n\r\n_Originally posted by @ahsonkhan in https://github.com/dotnet/corefx/pull/36497#issuecomment-482350459_","Url":"https://github.com/dotnet/corefx/issues/36802","RelatedDescription":"Open issue \"Test failure: NRE on System.Net.Http.Functional.Tests.PlatformHandler_HttpClientHandlerTest.GetAsync_IPv6LinkLocalAddressUri_Success\" (#36802)"},{"Id":"432263820","IsPullRequest":false,"CreatedAt":"2019-04-11T21:38:40","Actor":"krwq","Number":"36800","RawContent":null,"Title":"System.IO.Pipelines.Tests.CopyToAsyncTests/MultiSegmentWritesUntilFailure","State":"open","Body":"cc: @pakrym @davidfowl \r\n\r\nThis test seem to be intermittently failing on netfx (full framework) queues (i.e. `Windows.10.Amd64.ClientRS5.Open-x86-Release`):\r\n\r\n\r\n```\r\nAssert.Throws() Failure\r\nExpected: typeof(System.InvalidOperationException)\r\nActual:   (No exception was thrown)\r\n\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.IO.Pipelines.Tests.CopyToAsyncTests.<MultiSegmentWritesUntilFailure>d__5.MoveNext() in D:\\a\\1\\s\\src\\System.IO.Pipelines\\tests\\PipeReaderCopyToAsyncTests.cs:line 82\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```\r\n\r\ni.e. https://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fpull~2F36775~2Fmerge/test~2Ffunctional~2Fcli~2F/20190411.35/workItem/System.IO.Pipelines.Tests/analysis/xunit/System.IO.Pipelines.Tests.CopyToAsyncTests~2FMultiSegmentWritesUntilFailure","Url":"https://github.com/dotnet/corefx/issues/36800","RelatedDescription":"Open issue \"System.IO.Pipelines.Tests.CopyToAsyncTests/MultiSegmentWritesUntilFailure\" (#36800)"},{"Id":"432009434","IsPullRequest":true,"CreatedAt":"2019-04-11T19:37:47","Actor":"dotnet-maestro[bot]","Number":"36788","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190410.72\r\n- **Date Produced**: 4/11/2019 12:39 AM\r\n- **Commit**: 45e04dd1bb1c7171d88a24454cb2c2811f46ce55\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview5-27610-72\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview5-27610-72\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview5-27610-72\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/36788","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#36788)"},{"Id":"432188840","IsPullRequest":false,"CreatedAt":"2019-04-11T18:49:28","Actor":"AArnott","Number":"36798","RawContent":null,"Title":"xml doc comment for PipeReader.OnWriterCompleted is wrong","State":"open","Body":"As shown below, the summary tag in the xml doc comment for `PipeReader.OnWriterCompleted` is wrong. It looks like it was written with `PipeWriter.Complete` in mind, honestly. `OnWriterCompleted` doesn't cancel anything -- it just adds a callback for when the writer marks its own completion.\r\n\r\nhttps://github.com/dotnet/corefx/blob/af562e84b8b5a4a335ceb5006886a6c42c1c023e/src/System.IO.Pipelines/src/System/IO/Pipelines/PipeReader.cs#L73-L76","Url":"https://github.com/dotnet/corefx/issues/36798","RelatedDescription":"Open issue \"xml doc comment for PipeReader.OnWriterCompleted is wrong\" (#36798)"},{"Id":"432167000","IsPullRequest":true,"CreatedAt":"2019-04-11T18:12:23","Actor":"safern","Number":"36797","RawContent":null,"Title":"Remove myget feeds","State":"open","Body":"Fixes: #36790 \r\n\r\nI built all configurations on windows, and it succeeded. I just sent an official build with this change to see if there is something that still needs myget:\r\n\r\nhttps://dev.azure.com/dnceng/internal/_build/results?buildId=151863","Url":"https://github.com/dotnet/corefx/pull/36797","RelatedDescription":"Open PR \"Remove myget feeds\" (#36797)"},{"Id":"431980139","IsPullRequest":true,"CreatedAt":"2019-04-11T17:43:29","Actor":"ViktorHofer","Number":"36784","RawContent":null,"Title":"Remove NETStandard Test Suite","State":"closed","Body":"Fixes https://github.com/dotnet/corefx/issues/36743\r\n\r\nI left the netstandard changes in System.IO.Pipelines as they allow a broader test matrix.","Url":"https://github.com/dotnet/corefx/pull/36784","RelatedDescription":"Closed or merged PR \"Remove NETStandard Test Suite\" (#36784)"},{"Id":"431986759","IsPullRequest":true,"CreatedAt":"2019-04-11T17:07:14","Actor":"akoeplinger","Number":"36785","RawContent":null,"Title":"System.Linq.Expressions: Skip tests if DebuggerTypeProxy attribute isn't available","State":"closed","Body":"These tests failed on Xamarin.iOS since the linker strips out most Debugger* attributes in release builds.\r\n\r\nWe can gracefully handle this case and simply skip the tests instead.\r\n\r\n/cc @ViktorHofer ","Url":"https://github.com/dotnet/corefx/pull/36785","RelatedDescription":"Closed or merged PR \"System.Linq.Expressions: Skip tests if DebuggerTypeProxy attribute isn't available\" (#36785)"},{"Id":"432118541","IsPullRequest":true,"CreatedAt":"2019-04-11T16:33:12","Actor":"ericstj","Number":"36795","RawContent":null,"Title":"Update zlib-intel to v1.2.11.1_jtkv6.3","State":"open","Body":"Porting @jtkukunas's fixes from https://github.com/jtkukunas/zlib/commits/master\r\n\r\nhttps://github.com/jtkukunas/zlib/releases/tag/v1.2.11.1_jtkv6.3\r\n\r\nFix CompressionLevel.Optimal on sparse data. Fixes #34157 \r\n\r\n/cc @jtkukunas @vkvenkat @pensivebrian ","Url":"https://github.com/dotnet/corefx/pull/36795","RelatedDescription":"Open PR \"Update zlib-intel to v1.2.11.1_jtkv6.3\" (#36795)"},{"Id":"432113319","IsPullRequest":false,"CreatedAt":"2019-04-11T16:21:01","Actor":"ericstj","Number":"36794","RawContent":null,"Title":"Package.Open(string, ...) is more restrictive than Package.Open(stream, ...)","State":"open","Body":"We unnecessarily throw on many combinations of FileAccess for Package.Open(string, …).\r\n\r\nSee https://github.com/dotnet/corefx/blob/5023c2420a4145bcb560c4b8c57f4bb60cd6973f/src/System.IO.Packaging/src/System/IO/Packaging/Package.cs#L838-L849\r\n\r\nThe .NETCore implementation of System.IO.Packaging permits the write-only case due to the way that System.IO.Compression maintains the ZIP data in memory before writing out.  We should unblock more of these cases.\r\n\r\nIn the meantime, the workaround is to open the file one-self and call Package.Open(stream, …)\r\nhttps://github.com/dotnet/corefx/blob/5023c2420a4145bcb560c4b8c57f4bb60cd6973f/src/System.IO.Packaging/src/System/IO/Packaging/ZipPackage.cs#L270\r\n\r\n/cc @stevenbrix @miguep ","Url":"https://github.com/dotnet/corefx/issues/36794","RelatedDescription":"Open issue \"Package.Open(string, ...) is more restrictive than Package.Open(stream, ...)\" (#36794)"},{"Id":"431838550","IsPullRequest":true,"CreatedAt":"2019-04-11T15:42:20","Actor":"ericstj","Number":"36780","RawContent":null,"Title":"Fix -allconfigurations build on linux","State":"closed","Body":"Built on WSL and fixed all errors.  We should be able to build e2e on linux now.","Url":"https://github.com/dotnet/corefx/pull/36780","RelatedDescription":"Closed or merged PR \"Fix -allconfigurations build on linux\" (#36780)"},{"Id":"432045690","IsPullRequest":true,"CreatedAt":"2019-04-11T15:42:01","Actor":"MichalStrehovsky","Number":"36791","RawContent":null,"Title":"Revert \"Run IBCMerge on Linux build (#36763)\"","State":"closed","Body":"This reverts commit ef2ee1291ea6140cb462ead8b4cc86a762b58f64.","Url":"https://github.com/dotnet/corefx/pull/36791","RelatedDescription":"Closed or merged PR \"Revert \"Run IBCMerge on Linux build (#36763)\"\" (#36791)"},{"Id":"432080279","IsPullRequest":false,"CreatedAt":"2019-04-11T15:15:06","Actor":"ajcvickers","Number":"36793","RawContent":null,"Title":"Unable to connect to SQL Server 2008 R2 via EntityFramework on CentOS","State":"open","Body":"Moved from https://github.com/aspnet/EntityFrameworkCore/issues/15326 filed by @kutekrish because this is a SqlClient issue, not an EF issue.\r\n\r\n----\r\n\r\nWe are unable to connect to SQL Server 2008 R2 via Entity Framework on CentOS\r\n\r\nMicrosoft.EntityFrameworkCore.SqlServer package has been referenced in the project and it is working fine when run from Windows machine. However, when its copied to CentOS, it does not work.\r\n\r\nHowever, higher versions of SQL Server (2012, 2014,...) are working fine, both on Windows and on CentOS\r\n\r\n```\r\n2019-04-11 11:01:23,766 [ERROR] - Error while saving Employees - A connection was successfully established with the server, but then an error occurred during the login process. (provider: TCP Provider, error: 35 - An internal exception was caught)\r\n2019-04-11 11:01:23,835 [ERROR] - System.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the login process. (provider: TCP Provider, error: 35 - An internal exception was caught) ---> System.IO.IOException: Unable to read data from the transport connection: Connection reset by peer. ---> System.Net.Sockets.SocketException: Connection reset by peer\r\n   at int System.Net.Sockets.NetworkStream.Read(byte[] buffer, int offset, int size)\r\n   --- End of inner exception stack trace ---\r\n   at int System.Net.Sockets.NetworkStream.Read(byte[] buffer, int offset, int size)\r\n   at uint System.Data.SqlClient.SNI.SNITCPHandle.Receive(out SNIPacket packet, int timeoutInMilliseconds)\r\n   at new System.Data.SqlClient.SqlInternalConnectionTds(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, object providerInfo, string newPassword, SecureString newSecurePassword, bool redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, bool applyTransientFaultHandling)\r\n   at DbConnectionInternal System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)\r\n   at DbConnectionInternal System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)\r\n   at DbConnectionInternal System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at DbConnectionInternal System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)\r\n   at bool System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, uint waitForMultipleObjectsTimeout, bool allowCreate, bool onlyOneCheckConnection, DbConnectionOptions userOptions, out DbConnectionInternal connection)\r\n   at bool System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource<DbConnectionInternal> retry, DbConnectionOptions userOptions, out DbConnectionInternal connection)\r\n   at bool System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource<DbConnectionInternal> retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, out DbConnectionInternal connection)\r\n   at bool System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource<DbConnectionInternal> retry, DbConnectionOptions userOptions)\r\n   at bool System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource<DbConnectionInternal> retry, DbConnectionOptions userOptions)\r\n   at bool System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource<DbConnectionInternal> retry)\r\n   at void System.Data.SqlClient.SqlConnection.Open()\r\n   at void Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnection(bool errorsExpected)\r\n   at bool Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(bool errorsExpected)\r\n   at IDbContextTransaction Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction(IsolationLevel isolationLevel)\r\n   at IDbContextTransaction Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction()\r\n   at int Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(DbContext _, ValueTuple<IEnumerable<ModificationCommandBatch>, IRelationalConnection> parameters)\r\n   at TResult Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute<TState, TResult>(TState state, Func<DbContext, TState, TResult> operation, Func<DbContext, TState, ExecutionResult<TResult>> verifySucceeded)\r\n   at int Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable<ModificationCommandBatch> commandBatches, IRelationalConnection connection)\r\n   at int Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IReadOnlyList<IUpdateEntry> entries)\r\n   at int Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IReadOnlyList<InternalEntityEntry> entriesToSave)\r\n   at int Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(bool acceptAllChangesOnSuccess)\r\n   at int Microsoft.EntityFrameworkCore.DbContext.SaveChanges(bool acceptAllChangesOnSuccess)\r\n   at ActionResult<IEnumerable<string>> EFDemo.Controllers.InsertController.Get() in E:/My Documents/Visual Studio 2017/PoCs/EFDemo/Controllers/InsertController.cs:line 53\r\n```\r\n\r\n### Steps to reproduce\r\nInclude a complete code listing (or project/solution) that we can run to reproduce the issue.\r\n\r\nPartial code listings, or multiple fragments of code, will slow down our response or cause us to push the issue back to you to provide code to reproduce the issue.\r\n\r\n```c#\r\ntry\r\n{\r\n\tusing (var context = new EFDBContext())\r\n\t{\r\n\t\tvar listOfEmployees = new[]\r\n\t\t{\r\n\t\t\tnew Employee{Name=\"John\", Age = 28},\r\n\t\t\tnew Employee{Name=\"Judith\", Age = 29},\r\n\t\t\tnew Employee{Name=\"Joe\", Age = 27},\r\n\t\t\tnew Employee{Name=\"Jeremiah\", Age = 30},\r\n\t\t\tnew Employee{Name=\"Jackson\", Age = 28},\r\n\t\t\tnew Employee{Name=\"Johnson\", Age = 25},\r\n\t\t\tnew Employee{Name=\"Joye\", Age = 29},\r\n\t\t\tnew Employee{Name=\"James\", Age = 28},\r\n\t\t\tnew Employee{Name=\"Jimmy\", Age = 26},\r\n\t\t\tnew Employee{Name=\"Jack\", Age = 31},\r\n\t\t};\r\n\r\n\t\t//Insert\r\n\t\tforeach (var emp in listOfEmployees)\r\n\t\t{\r\n\t\t\tcontext.Employees.Add(emp);\r\n\t\t\tLogger.Debug($\"Adding Employee - {emp.Name}\");\r\n\t\t}\r\n\r\n\t\tLogger.Debug($\"Going to saving Employees\");\r\n\t\tcontext.SaveChanges();\r\n\t\tLogger.Debug($\"Successfully saved Employees\");\r\n\t}\r\n\r\n\treturn new string[] { \"Success\" };\r\n}\r\ncatch(Exception e)\r\n{\r\n\tLogger.Error($\"Error while saving Employees - {e.Message}\");\r\n\tLogger.Error(e.Demystify());\r\n\treturn new string[] { \"Failure\", e.Message };\r\n}\r\n```\r\n\r\n### Further technical details\r\nEF Core version: \r\n```\r\n<ItemGroup>\r\n\t<PackageReference Include=\"Ben.Demystifier\" Version=\"0.1.4\" />\r\n\t<PackageReference Include=\"log4net\" Version=\"2.0.8\" />\r\n\t<PackageReference Include=\"Microsoft.AspNetCore.App\" Version=\"2.1.1\" />\r\n\t<PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"2.1.1\" />\r\n\t<PackageReference Include=\"Microsoft.EntityFrameworkCore.Abstractions\" Version=\"2.1.1\" />\r\n\t<PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer\" Version=\"2.1.1\" />\r\n\t<PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"2.1.1\" />\r\n\t<PackageReference Include=\"Npgsql.EntityFrameworkCore.PostgreSQL\" Version=\"2.1.1\" />\r\n\t<PackageReference Include=\"Pomelo.EntityFrameworkCore.MySql\" Version=\"2.1.1\" />\r\n</ItemGroup>\r\n```\r\nDatabase Provider: Microsoft.EntityFrameworkCore.SqlServer\r\nOperating system: Works fine in Win but not on CentOS for SQL Server 2008 R2\r\nIDE: Visual Studio 2017\r\n","Url":"https://github.com/dotnet/corefx/issues/36793","RelatedDescription":"Open issue \"Unable to connect to SQL Server 2008 R2 via EntityFramework on CentOS\" (#36793)"},{"Id":"431842134","IsPullRequest":false,"CreatedAt":"2019-04-11T14:24:05","Actor":"dotnet-mc-bot","Number":"36781","RawContent":null,"Title":"Test failure: System.Net.Http.Functional.Tests.PlatformHandler_HttpClientHandlerTest/PostAsync_RedirectWith307_LargePayload","State":"closed","Body":"Opened on behalf of @AriNuer\n\nThe test `System.Net.Http.Functional.Tests.PlatformHandler_HttpClientHandlerTest/PostAsync_RedirectWith307_LargePayload` has failed.\n\nFailure Message:\n```\nAssert.InRange() Failure\\r\nRange:  (2800000 - 2147483647)\\r\nActual: 1466\n```\n\nStack Trace:\n```\n   at System.Net.Http.Functional.Tests.HttpClientHandlerTest.PostAsync_Redirect_LargePayload_Helper(Int32 statusCode, Boolean expectRedirectToPost)\n   at System.Net.Http.Functional.Tests.HttpClientHandlerTest.PostAsync_RedirectWith307_LargePayload() in F:\\workspace\\_work\\1\\s\\src\\System.Net.Http\\tests\\FunctionalTests\\HttpClientHandlerTest.cs:line 2266\n--- End of stack trace from previous location where exception was thrown ---\n```\n\nBuild : 3.0 - 20190410.8 (Core Tests)\nFailing configurations:\n- Windows.10.Amd64.ClientRS4-x86\n  - Release\n- Windows.10.Amd64.ClientRS4-x64\n  - Release\n- Windows.10.Amd64.Core-x64\n  - Release\n- Windows.10.Arm64-arm64\n  - Release\n- Fedora.29.Amd64-x64\n  - Release\n- SLES.12.Amd64-x64\n  - Release\n- OpenSuse.42.Amd64-x64\n  - Release\n- Ubuntu.1810.Amd64-x64\n  - Release\n- Ubuntu.1804.Amd64-x64\n  - Release\n- Ubuntu.1604.Amd64-x64\n  - Release\n- Debian.8.Amd64-x64\n  - Release\n- RedHat.7.Amd64-x64\n  - Release\n- Alpine.38.Amd64-x64\n  - Release\n- OSX.1012.Amd64-x64\n  - Release\n\nDetails:\nhttps://mc.dot.net/#/product/netcore/30/source/official~2Fdotnet~2Fcorefx~2Frefs~2Fheads~2Fmaster/type/test~2Ffunctional~2Fcli~2F/build/20190410.8/workItem/System.Net.Http.Functional.Tests/analysis/xunit/System.Net.Http.Functional.Tests.PlatformHandler_HttpClientHandlerTest~2FPostAsync_RedirectWith307_LargePayload","Url":"https://github.com/dotnet/corefx/issues/36781","RelatedDescription":"Closed issue \"Test failure: System.Net.Http.Functional.Tests.PlatformHandler_HttpClientHandlerTest/PostAsync_RedirectWith307_LargePayload\" (#36781)"},{"Id":"432048209","IsPullRequest":false,"CreatedAt":"2019-04-11T14:15:31","Actor":"Korporal","Number":"36792","RawContent":null,"Title":"Enable user code to determine the alignment needs of types","State":"open","Body":"This is to discuss adding a capability for managed code to determine the memory alignment needs of any unmanaged struct. For certain interop scenarios we may need to allocate struct instances outside the AppDomain (for example in user heap accessible to other code, perhaps native code).\r\n\r\nThese \"manually\" allocated instances would be exposed to managed code as ref values.\r\n\r\nHowever when the raw memory is allocated we must ensure that the (artificially generated) ref is aligned in the same way it would be aligned by the CLR so that these returned ref values are wholly compatible to managed code.\r\n\r\nA struct containing just byte fields for example can be aligned more flexibly than a struct containing just double fields or decimal fields, in principle we could craft code to analyze the struct since we know the alignment needs of all primitives and the padding rules used by the CLR, but to future proof this more is needed, for example SIMD it seems can have stringent alignment needs..","Url":"https://github.com/dotnet/corefx/issues/36792","RelatedDescription":"Open issue \"Enable user code to determine the alignment needs of types\" (#36792)"},{"Id":"431999149","IsPullRequest":true,"CreatedAt":"2019-04-11T13:36:09","Actor":"dotnet-maestro[bot]","Number":"36787","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190411.2\r\n- **Date Produced**: 4/11/2019 11:13 AM\r\n- **Commit**: 1c881ce4e49d723891d10ffabb171dc07b75972e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview5.19211.2\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/36787","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#36787)"},{"Id":"431996459","IsPullRequest":true,"CreatedAt":"2019-04-11T13:29:45","Actor":"dotnet-maestro[bot]","Number":"36786","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190410.11\r\n- **Date Produced**: 4/11/2019 2:16 AM\r\n- **Commit**: fc83d21e68eda29caa99c9864750f7c8d273a378\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview5-27610-11\r\n  - **Microsoft.NETCore.DotNetHost** -> 3.0.0-preview5-27610-11\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 3.0.0-preview5-27610-11\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/36786","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#36786)"},{"Id":"432023429","IsPullRequest":false,"CreatedAt":"2019-04-11T13:27:05","Actor":"ViktorHofer","Number":"36790","RawContent":null,"Title":"Remove myget feed","State":"open","Body":"We should audit what assets are currently only published onto the myget feed and not the dotnet-core feed. Moving away from the myget feed helps us with constant over-quota issues and is the direction that all arcade enabled repositories go.\r\n\r\ncc @ericstj @safern @wtgodbe ","Url":"https://github.com/dotnet/corefx/issues/36790","RelatedDescription":"Open issue \"Remove myget feed\" (#36790)"},{"Id":"432018823","IsPullRequest":false,"CreatedAt":"2019-04-11T13:18:13","Actor":"BillHenning","Number":"36789","RawContent":null,"Title":"PropertyDescriptor.AddValueChanged not notifying of any property changes","State":"open","Body":"We were just working on converting a WPF app to .NET Core 3.0 preview3 (from 2019-03-06) and noticed an issue with the PropertyDescriptor implementation.  We use property descriptors to watch random objects for property value changes, so that we can be notified of their changes and can reflect the changes in the app UI.  \r\n\r\nWhile this has always worked in the .NET Framework, we noticed it doesn't work with the same API in .NET Core 3.0, and this is a major issue for us.\r\n\r\nI've prepared a very simple repro example that shows it, where it wires up notification handlers and changes a property value.  If you paste the following code in any .NET Framework app and call the RunTest() method, you'll see this correct output in the VS Output window:\r\n\r\n```\r\nobj.PropertyChanged: Bar\r\nPropertyDescriptor.ValueChanged: Bar\r\n```\r\n\r\nWhereas if you run the code in a .NET Core app and call the RunTest() method, you'll see this incorrect output instead:\r\n\r\n```\r\nobj.PropertyChanged: Bar\r\n```\r\n\r\nHere's the code to reproduce the problem:\r\n\r\n```C#\r\nprivate void RunTest() {\r\n\tvar obj = new ObservableObject();\r\n\tobj.PropertyChanged += (s, e) => {\r\n\t\tDebug.WriteLine($\"obj.PropertyChanged: {obj.StringProp}\");\r\n\t};\r\n\r\n\tvar propDescriptor = TypeDescriptor.GetProperties(obj)[0];\r\n\tpropDescriptor.AddValueChanged(obj, (s, e) => {\r\n\t\tDebug.WriteLine($\"PropertyDescriptor.ValueChanged: {obj.StringProp}\");\r\n\t});\r\n\r\n\tobj.StringProp = \"Bar\";\r\n}\r\n\r\nprivate class ObservableObject : INotifyPropertyChanged {\r\n\r\n\tprivate string _stringProp = \"Foo\";\r\n\t\t\t\r\n\tpublic event PropertyChangedEventHandler PropertyChanged;\r\n\r\n\tprivate void NotifyPropertyChanged(string propertyName) {\r\n\t\tvar handler = this.PropertyChanged;\r\n\t\tif (handler != null)\r\n\t\t\thandler(this, new PropertyChangedEventArgs(propertyName));\r\n\t}\r\n\r\n\tpublic string StringProp {\r\n\t\tget {\r\n\t\t\treturn _stringProp;\r\n\t\t}\r\n\t\tset {\r\n\t\t\tif (_stringProp != value) {\r\n\t\t\t\t_stringProp = value;\r\n\t\t\t\tthis.NotifyPropertyChanged(nameof(StringProp));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n```\r\n\r\nPlease let us know when this will be fixed, as it's critical to our app functioning properly.","Url":"https://github.com/dotnet/corefx/issues/36789","RelatedDescription":"Open issue \"PropertyDescriptor.AddValueChanged not notifying of any property changes\" (#36789)"},{"Id":"431974135","IsPullRequest":false,"CreatedAt":"2019-04-11T11:34:54","Actor":"madelson","Number":"36783","RawContent":null,"Title":"Process.WaitForExit() hangs forever even though the process has exited in some cases","State":"open","Body":"**Setup**\r\n\r\nLaunch a process with stream redirection where that process itself launches a long-running process:\r\n\r\n```\r\n// in the host process (process1.exe)\r\nvar process2 = new Process\r\n{\r\n    StartInfo = \r\n    {\r\n        FileName = \"process2.exe\"\r\n        UseShellExecute = false,\r\n        RedirectStandardOutput = true\r\n    }\r\n};\r\nprocess2.OutputDataReceived += (o, e) => Console.WriteLine(e.Data);\r\nprocess2.Start();\r\nprocess2.BeginOutputReadLine();\r\nprocess2.WaitForExit(); // never returns, even though process2 does exit fairly quickly\r\nreturn; // returns from Main(), exiting\r\n\r\n// in process2.exe\r\nConsole.WriteLine(\"Launching process3.exe!\");\r\nvar process3 = new Process { StartInfo = { FileName = \"process3.exe\", UseShellExecute = false } };\r\nprocess3.Start();\r\nprocess3.Dispose();\r\n\r\n// in process3.exe\r\nwhile (true) // loop basically forever performing background tasks\r\n{\r\n     ...\r\n}\r\n```\r\n\r\n**Expected Behavior**\r\nProcess1 receives the output of Process2. Once Process2 has exited, Process1 can move on from its `WaitForExit()` call. Meanwhile Process3 continues to run.\r\n\r\n**Actual Behavior**\r\n`WaitForExit()` never returns.\r\n\r\n**Notes**\r\nI believe the problem is that `WaitForExit()` waits for EOF to be returned from redirected streams that are being consumed asynchronously. However, I think that Process3 is somehow inheriting the stdio handles from Process2 which prevents EOF from being sent even after Process2 exits.\r\n\r\nNote that unlike #29699 and #31713 , I am observing the behavior on Windows. I'm not sure if the same would happen on Linux.","Url":"https://github.com/dotnet/corefx/issues/36783","RelatedDescription":"Open issue \"Process.WaitForExit() hangs forever even though the process has exited in some cases\" (#36783)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"432376924","IsPullRequest":false,"CreatedAt":"2019-04-12T03:58:44","Actor":"pjc0247","Number":"34951","RawContent":null,"Title":"Creates new SyntaxNode from 3rd-party","State":"open","Body":"I have a class something like below\r\n```cs\r\ninternal class EvaluatedArgumentListSyntax : ExpressionSyntax\r\n{ }\r\n```\r\nThis one won't be compiled due to errors.\r\nSome abstract methods have `internal` access modifier, so I can't make a derived class.\r\n\r\nhttps://dotnetfiddle.net/r79Jyw\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/34951","RelatedDescription":"Open issue \"Creates new SyntaxNode from 3rd-party\" (#34951)"},{"Id":"431818042","IsPullRequest":false,"CreatedAt":"2019-04-12T03:55:35","Actor":"sujayvsarma","Number":"34930","RawContent":null,"Title":"Incorrect colorization / Colorization does not revert","State":"closed","Body":"**Version Used**: \r\nLatest stable (2.0.1)\r\n\r\n**Steps to Reproduce**:\r\nExample: Function arguments\r\n\r\nDefine an empty-body function with at least one argument. Arguments are correctly dimmed out indicating they are not being used.\r\n\r\nCode snip:\r\n```\r\nvoid foo(string arg1) {\r\n  // at this point, 'arg1' is dimmed out\r\n}\r\n```\r\n\r\nNow start typing any construct, but don't use the argument yet. For example, start typing \"if\". \r\n\r\nCode snip:\r\n```\r\nvoid foo(string arg1) {\r\n  if \r\n  // at this point, arg1 should remain dimmed out, but it lights up\r\n}\r\n```\r\n\r\nThe argument(s) will light up one by one. If you have more than one argument, the more new statements you type, they will start lighting up. For example, if you have 2 arguments to foo(), arg1 will light up on the first statement/construct and arg2 on the second one. This is even though you have not yet even thought about that argument!\r\n\r\nNow go ahead and use the argument in that statement and then edit that line of code to do something else (other than referencing that argument), you will see the argument randomly changes colorization -- sometimes it shows up dimmed out, sometimes it colorizes to say it is being used. \r\n\r\n**Expected Behavior**:\r\nThe arguments continue to be in the correct lighted up / colorized state. \r\n\r\n**Actual Behavior**:\r\nBut they are not. When you undo the operation, they do not always go back to the previous state.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/34930","RelatedDescription":"Closed issue \"Incorrect colorization / Colorization does not revert\" (#34930)"},{"Id":"432330344","IsPullRequest":true,"CreatedAt":"2019-04-12T01:30:05","Actor":"dotnet-bot","Number":"34948","RawContent":null,"Title":"Merge master-vs-deps to features/razorSupport2","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34948","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to features/razorSupport2\" (#34948)"},{"Id":"432332713","IsPullRequest":false,"CreatedAt":"2019-04-12T00:10:50","Actor":"ajaybhargavb","Number":"34950","RawContent":null,"Title":"Errors in ErrorList pane on lines with #line pragma doesn't navigate to the source file","State":"open","Body":"**Version Used**: \r\nVS 16.1 Preview 1\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. `dotnet new console`\r\n2. Replace content of `Main` method with\r\n```cs\r\n        static void Main(string[] args)\r\n        {\r\n#line 2 \"Test.txt\"\r\n            Console.WriteLin(\"Hello World!\"); // Intentional typo to show error\r\n#line default\r\n        }\r\n```\r\n3. Create a file called `Test.txt` and put some content in it.\r\n\r\n**Expected Behavior**:\r\nError shows in error list. Double clicking it navigates to `Test.txt`\r\n\r\n**Actual Behavior**:\r\nError shows in error list. Double clicking it navigates to `Program.cs` or does nothing.\r\nThis happens on both live and build errors\r\n\r\nNote: Putting a breakpoint in `Test.txt` and F5ing correctly hits that breakpoint. So it's not a file path issue.\r\n\r\ncc @heejaechang ","Url":"https://github.com/dotnet/roslyn/issues/34950","RelatedDescription":"Open issue \"Errors in ErrorList pane on lines with #line pragma doesn't navigate to the source file\" (#34950)"},{"Id":"432330364","IsPullRequest":true,"CreatedAt":"2019-04-12T00:00:45","Actor":"dotnet-bot","Number":"34949","RawContent":null,"Title":"Merge master to demos/records","State":"open","Body":"\nThis is an automatically generated pull request from master into demos/records.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-demos/records\ngit reset --hard upstream/demos/records\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-demos/records --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34949","RelatedDescription":"Open PR \"Merge master to demos/records\" (#34949)"},{"Id":"432330313","IsPullRequest":true,"CreatedAt":"2019-04-12T00:00:32","Actor":"dotnet-bot","Number":"34947","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34947","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#34947)"},{"Id":"432290333","IsPullRequest":false,"CreatedAt":"2019-04-11T22:14:58","Actor":"AlekseyTs","Number":"34946","RawContent":null,"Title":"It looks like TupleTypeSymbol.WithUnderlyingType always creates a new instance even when the new type is the same as the old one","State":"open","Body":"This can cause extra allocations for otherwise insignificant nullable transform.","Url":"https://github.com/dotnet/roslyn/issues/34946","RelatedDescription":"Open issue \"It looks like TupleTypeSymbol.WithUnderlyingType always creates a new instance even when the new type is the same as the old one\" (#34946)"},{"Id":"432269105","IsPullRequest":true,"CreatedAt":"2019-04-11T21:53:56","Actor":"TIHan","Number":"34945","RawContent":null,"Title":"FSharp Shim - First Phase","State":"open","Body":"This needs to be inserted in conjunction with this PR: https://github.com/Microsoft/visualfsharp/pull/6498\r\n\r\nNote: This still just needs a little more work, but this should be ready soon.","Url":"https://github.com/dotnet/roslyn/pull/34945","RelatedDescription":"Open PR \"FSharp Shim - First Phase\" (#34945)"},{"Id":"432162078","IsPullRequest":true,"CreatedAt":"2019-04-11T21:42:43","Actor":"heejaechang","Number":"34938","RawContent":null,"Title":"removed duplicated entry for ExternalAccess.FSharp","State":"closed","Body":"looks like duplicated entries are introduced by git merge from 2 different commits.","Url":"https://github.com/dotnet/roslyn/pull/34938","RelatedDescription":"Closed or merged PR \"removed duplicated entry for ExternalAccess.FSharp\" (#34938)"},{"Id":"432144374","IsPullRequest":true,"CreatedAt":"2019-04-11T21:19:57","Actor":"sharwell","Number":"34937","RawContent":null,"Title":"Improve naming of integration test runs","State":"closed","Body":"### Build legs\r\n\r\nBuild leg names are shorter and clearer:\r\n\r\n```diff\r\n- Windows_VisualStudio_Integration_Tests debug\r\n+ VS_Integration debug_async\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/1408396/55978553-a44d0f80-5c55-11e9-86ee-1b4fbe8d3f15.png) ![image](https://user-images.githubusercontent.com/1408396/55978521-939c9980-5c55-11e9-9ce4-be7bc260d9df.png)\r\n\r\n### Artifacts\r\n\r\nArtifacts now have the job attempt number in the name:\r\n\r\n```diff\r\n- Logs Debug Async 00000000.00\r\n+ 1-Logs Debug Async 00000000.00\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/1408396/55993553-01a48900-5c75-11e9-999b-55b15daaa692.png)\r\n![image](https://user-images.githubusercontent.com/1408396/55993526-f4879a00-5c74-11e9-819f-8633276def6a.png)\r\n\r\n### Test results\r\n\r\nTest results now show Async/Legacy instead of false/true, and have the job attempt number in the name\r\n\r\n```diff\r\n- Windows Visual Studio Integration Debug_false\r\n+ 1-Integration Debug Async\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/1408396/55993569-0b2df100-5c75-11e9-98f5-e92802da2285.png)\r\n![image](https://user-images.githubusercontent.com/1408396/55993507-e76aab00-5c74-11e9-830d-89ff6249147c.png)\r\n","Url":"https://github.com/dotnet/roslyn/pull/34937","RelatedDescription":"Closed or merged PR \"Improve naming of integration test runs\" (#34937)"},{"Id":"432174040","IsPullRequest":true,"CreatedAt":"2019-04-11T21:07:56","Actor":"AlekseyTs","Number":"34939","RawContent":null,"Title":"Specially handle type parameters constrained to `Nullable<T>` in TypeSymbolExtensions.CanContainNull().","State":"closed","Body":"Fixes #34679.","Url":"https://github.com/dotnet/roslyn/pull/34939","RelatedDescription":"Closed or merged PR \"Specially handle type parameters constrained to `Nullable<T>` in TypeSymbolExtensions.CanContainNull().\" (#34939)"},{"Id":"432100706","IsPullRequest":false,"CreatedAt":"2019-04-11T20:28:54","Actor":"chrisfcarroll","Number":"34935","RawContent":null,"Title":"Definite assignment analysis of out parameter in short-circuit expression prevents compilation when it need not.","State":"closed","Body":"**Version Used**: \r\n.NET Core SDK\r\n Version:   2.2.105\r\n Commit:    7cecb35b92\r\nRoslyn C# Compiler version 2.10.0.0\r\n\r\n**Steps to Reproduce**:\r\n\r\n```csharp\r\nbool DefiniteAssignmentOfOutVarInAShortCircuitedExpression(bool maybe, string maybemore)\r\n{\r\n  var x = maybe && bool.TryParse(maybemore, out var result);\r\n  return maybe && result;\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nCompiles without error\r\n\r\n**Actual Behavior**:\r\nthe line `return maybe && result;` is flagged with **Use of unassigned local variable**.\r\n\r\n**Discussion**\r\nFor the error to be correct -- for `result` to be unassigned in the `return` statement --  `maybe` would have to be false in line 1 of the method, short-circuting the assignment. \r\nIn that case, `result` will also be short circuited in the return statement and does not need to be assigned.\r\nReplacing `&&` with `&` resolves the error.","Url":"https://github.com/dotnet/roslyn/issues/34935","RelatedDescription":"Closed issue \"Definite assignment analysis of out parameter in short-circuit expression prevents compilation when it need not.\" (#34935)"},{"Id":"432230885","IsPullRequest":false,"CreatedAt":"2019-04-11T20:22:23","Actor":"dibarbet","Number":"34944","RawContent":null,"Title":"Combine comment/uncomment handler and toggle comment to re-use more code","State":"open","Body":"See https://github.com/dotnet/roslyn/pull/34941#discussion_r274625868\r\n","Url":"https://github.com/dotnet/roslyn/issues/34944","RelatedDescription":"Open issue \"Combine comment/uncomment handler and toggle comment to re-use more code\" (#34944)"},{"Id":"432227135","IsPullRequest":false,"CreatedAt":"2019-04-11T20:12:19","Actor":"BillWagner","Number":"34943","RawContent":null,"Title":"Autocomplete eagerly completes before second `.` in Range declaration","State":"open","Body":"**Version Used**:  .NET Core 3.0 preview 3, with Visual Studio 2019 (16.0)\r\n\r\n**Steps to Reproduce**:\r\n\r\nIn a C# class file:\r\n\r\n1. Declare an array:  `var numbers = Enumerable.Range(0,100).ToArray();`\r\n2. Start typing to get a span:  `Span<int> subRange = numbers[5..25];`\r\n3. \r\n\r\n**Expected Behavior**: The editor realizes I'm typing a `Range` expression.\r\n\r\n**Actual Behavior**: As soon as I type `5.`, the editor assumes I want to access a member of `System.Int32`. I end up with `numbers[5.CompareTo.25]`. \r\n\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/34943","RelatedDescription":"Open issue \"Autocomplete eagerly completes before second `.` in Range declaration\" (#34943)"},{"Id":"432119107","IsPullRequest":false,"CreatedAt":"2019-04-11T20:08:46","Actor":"KirillOsenkov","Number":"34936","RawContent":null,"Title":"Make CommandLineProject available via NuGet","State":"closed","Body":"As of Roslyn 3.0.0 NuGet family the type https://github.com/dotnet/roslyn/blob/0c47f8d51f7f6533b3045f36e63eb55b2f7647c2/src/Workspaces/Core/Desktop/Workspace/CommandLineProject.cs#L17 is not shipping via NuGet.\r\n\r\nIt is a useful type and we should find a new home for it.","Url":"https://github.com/dotnet/roslyn/issues/34936","RelatedDescription":"Closed issue \"Make CommandLineProject available via NuGet\" (#34936)"},{"Id":"432221187","IsPullRequest":false,"CreatedAt":"2019-04-11T19:56:26","Actor":"stephentoub","Number":"34942","RawContent":null,"Title":"Unexpected nullable warning due to null-conditional access","State":"open","Body":"**Version Used**:\r\n3.1.0-beta1-19172-05+edd2de88fb3e84a097fb30b4070e0f219f624e40\r\n\r\n**Steps to Reproduce**:\r\n```C#\r\n#nullable enable\r\nusing System;\r\n\r\npublic class Program\r\n{\r\n    static void Main()\r\n    {\r\n        string? value = \"42\";\r\n        int count = 84;\r\n        if (value?.Length == count)\r\n        {\r\n            Console.WriteLine(value.Length); // warning\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nEven though value was explicitly set to a non-null value, and even though the `if (value?.Length == count)` effectively expands to `if (value != null && value.Length == count)` and we could only end up inside the `if` block if `value` is non-null, this still warns with \"Possible dereference of a null reference.\" on `value.Length`.\r\n\r\nInterestingly, changing the `count` to be a const makes it no longer warn:\r\n```C#\r\n#nullable enable\r\nusing System;\r\n\r\npublic class Program\r\n{\r\n    static void Main()\r\n    {\r\n        string? value = \"42\";\r\n        const int count = 84;\r\n        if (value?.Length == count)\r\n        {\r\n            Console.WriteLine(value.Length); // no warning\r\n        }\r\n    }\r\n}\r\n```\r\n\r\ncc: @dotnet/nullablefc ","Url":"https://github.com/dotnet/roslyn/issues/34942","RelatedDescription":"Open issue \"Unexpected nullable warning due to null-conditional access\" (#34942)"},{"Id":"432198748","IsPullRequest":true,"CreatedAt":"2019-04-11T19:15:18","Actor":"dibarbet","Number":"34941","RawContent":null,"Title":"Add command handler and tests for toggle line comment.","State":"open","Body":"For https://github.com/dotnet/roslyn/issues/34734 ","Url":"https://github.com/dotnet/roslyn/pull/34941","RelatedDescription":"Open PR \"Add command handler and tests for toggle line comment.\" (#34941)"},{"Id":"432191862","IsPullRequest":false,"CreatedAt":"2019-04-11T18:57:04","Actor":"Ahmad-Mustafaa","Number":"34940","RawContent":null,"Title":"I open Visual Studio it shows no error but project not running and in output it shows [Failure] Could not find file . \".g.cs\" files . Almost All g.cs files","State":"open","Body":"**Visual Studio 2017**: \r\n\r\n![error](https://user-images.githubusercontent.com/49183057/55983841-77c8e000-5cb5-11e9-8bc2-8e560b35fac0.png)\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/34940","RelatedDescription":"Open issue \"I open Visual Studio it shows no error but project not running and in output it shows [Failure] Could not find file . \".g.cs\" files . Almost All g.cs files\" (#34940)"},{"Id":"432053519","IsPullRequest":false,"CreatedAt":"2019-04-11T14:25:31","Actor":"stephentoub","Number":"34934","RawContent":null,"Title":"Option to Debug.Assert implicitly for null-forgiveness operator?","State":"open","Body":"As we've been annotating corelib, given a case like:\r\n```C#\r\n_some.Method(); // warns that _some may be null\r\n```\r\nwe've often opted to \"fix\" the warning by doing something like:\r\n```C#\r\nDebug.Assert(_some != null, nameof(_some));\r\n_some.Method();\r\n```\r\ninstead of:\r\n```C#\r\n_some!.Method();\r\n```\r\nso that we get better debug/checked-build validation behavior, with an unexpected null fail fasting rather than resulting in an exception that might get eaten, might be harder to diagnose the root case, etc.\r\n\r\nBut the former is also more code and more clutter for something that should never happen.\r\n\r\nWould it be possible for the compiler to provide an option that would enable emitting a Debug.Assert when `!` is used in such situations (it would need to skip when value is known to be null, such as with the workaround for initializing fields, e.g. `private Something _some = null!;`)?  Then we could have the simpler suppression while still getting the more robust validation.\r\n\r\ncc: @cston, @dotnet/nullablefc","Url":"https://github.com/dotnet/roslyn/issues/34934","RelatedDescription":"Open issue \"Option to Debug.Assert implicitly for null-forgiveness operator?\" (#34934)"},{"Id":"432029092","IsPullRequest":false,"CreatedAt":"2019-04-11T13:38:53","Actor":"HaloFour","Number":"34933","RawContent":null,"Title":"Pattern Matching: Multiple property reads","State":"open","Body":"I understand that the number of property reads to facilitate pattern matching is undefined so that the compiler can optimize for as few reads as it can.  I was curious about the following case as the compiler emits two reads for the property `Name` although the compiler should be able to deduce that both are for the same property on the `Person` class and could theoretically optimize it down to one read:\r\n\r\n```cs\r\nusing System;\r\n\r\npublic class Person {\r\n    public string Name { get; set; }\r\n}\r\n\r\npublic class Student : Person { }\r\n\r\n\r\npublic class C {\r\n    public void M(Person p) {\r\n        switch (p) {\r\n            case { Name: \"Bill\" }:\r\n                Console.WriteLine(\"Hey Bill!\");\r\n                break;\r\n            case Student { Name: var name }:\r\n                Console.WriteLine($\"Hello student {name}!\");\r\n                break;\r\n            case { Name: var name }:\r\n                Console.WriteLine($\"Hello non-student {name}!\");\r\n                break;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThis results in IL that accesses `Name` twice, once for the first case and once for the second case.  I assume that this is due to the type-switch perhaps interfering with internal bookkeeping and I can't think of a reason why it would be \"Correct\"™ to emit the two reads.\r\n\r\nDecompilation of the resulting IL:\r\n\r\n```cs\r\npublic class C\r\n{\r\n    public void M(Person p)\r\n    {\r\n        if (p != null)\r\n        {\r\n            string name = p.Name; // read #1\r\n            if (name == null || !(name == \"Bill\"))\r\n            {\r\n                Student student = p as Student;\r\n                if (student != null)\r\n                {\r\n                    string name2 = student.Name; // read #2\r\n                    Console.WriteLine(\"Hello student \" + name2 + \"!\");\r\n                }\r\n                else\r\n                {\r\n                    Console.WriteLine(\"Hello non-student \" + name + \"!\");\r\n                }\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(\"Hey Bill!\");\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThis would make sense if `Student` shadowed `Name`, but it doesn't and the compiler is aware of that as it emits `callvirt` calls to `Person::get_Name` both times.  If `Name` was virtual it would still only necessitate a single call.\r\n\r\nAny particular reason for this, or is it just a case that the compiler hasn't optimized for?","Url":"https://github.com/dotnet/roslyn/issues/34933","RelatedDescription":"Open issue \"Pattern Matching: Multiple property reads\" (#34933)"},{"Id":"431984421","IsPullRequest":true,"CreatedAt":"2019-04-11T13:30:07","Actor":"dotnet-bot","Number":"34932","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34932","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#34932)"},{"Id":"431845564","IsPullRequest":false,"CreatedAt":"2019-04-11T06:08:35","Actor":"tmds","Number":"34931","RawContent":null,"Title":"unexpected ambiguity performing overload resolution from method group","State":"open","Body":"**Version Used**: master\r\n\r\n**Steps to Reproduce**:\r\n\r\n```c#\r\nusing System;\r\nusing System.Threading.Tasks;\r\n\r\npublic class C {\r\n    public void M() {\r\n        AcceptMethod(Foo);\r\n        AcceptMethod(Bar);\r\n        AcceptMethod(Bazz);\r\n    }\r\n\r\n    public int Foo() { return 0; }\r\n    public void Bar() {}\r\n    public void Bazz(string s1, String s2, int i) { }\r\n\r\n    public static void AcceptMethod<T1, T2, T3, T4, T5>(Func<T1, T2, T3, T4, T5, Task<int>> action) {}\r\n    public static void AcceptMethod<T1, T2, T3, T4>(Func<T1, T2, T3, T4, Task<int>> action) {}\r\n    public static void AcceptMethod<T1, T2, T3>(Func<T1, T2, T3, Task<int>> action) {}\r\n    public static void AcceptMethod<T1, T2>(Func<T1, T2, Task<int>> action) {}\r\n    public static void AcceptMethod<T>(Func<T, Task<int>> action) {}\r\n    public static void AcceptMethod(Func<Task<int>> action) {}\r\n    public static void AcceptMethod<T1, T2, T3, T4, T5, T6, T7>(Func<T1, T2, T3, T4, T5, T6, T7, Task> action) {}\r\n    public static void AcceptMethod<T1, T2, T3, T4, T5, T6>(Func<T1, T2, T3, T4, T5, T6, Task> action) {}\r\n    public static void AcceptMethod<T1, T2, T3, T4, T5>(Func<T1, T2, T3, T4, T5, Task> action) {}\r\n    public static void AcceptMethod<T1, T2, T3, T4>(Func<T1, T2, T3, T4, Task> action) {}\r\n    public static void AcceptMethod<T1, T2, T3>(Func<T1, T2, T3, Task> action) {}\r\n    public static void AcceptMethod<T1, T2>(Func<T1, T2, Task> action) {}\r\n    public static void AcceptMethod<T>(Func<T, Task> action) {}\r\n    public static void AcceptMethod(Func<Task> action) {}\r\n    public static void AcceptMethod<T1, T2, T3, T4, T5, T6>(Func<T1, T2, T3, T4, T5, T6, Task<int>> action) {}\r\n    public static void AcceptMethod<T1, T2, T3, T4, T5, T6, T7>(Func<T1, T2, T3, T4, T5, T6, T7, int> action) {}\r\n    public static void AcceptMethod<T1, T2, T3, T4, T5>(Func<T1, T2, T3, T4, T5, int> action) {}\r\n    public static void AcceptMethod<T1, T2, T3, T4>(Func<T1, T2, T3, T4, int> action) {}\r\n    public static void AcceptMethod<T1, T2, T3>(Func<T1, T2, T3, int> action) {}\r\n    public static void AcceptMethod<T1, T2>(Func<T1, T2, int> action) {}\r\n    public static void AcceptMethod<T>(Func<T, int> action) {}\r\n    public static void AcceptMethod(Func<int> action) {}\r\n    public static void AcceptMethod<T1, T2, T3, T4, T5, T6, T7>(Action<T1, T2, T3, T4, T5, T6, T7> action) {}\r\n    public static void AcceptMethod<T1, T2, T3, T4, T5, T6>(Action<T1, T2, T3, T4, T5, T6> action) {}\r\n    public static void AcceptMethod<T1, T2, T3, T4, T5>(Action<T1, T2, T3, T4, T5> action) {}\r\n    public static void AcceptMethod<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action) {}\r\n    public static void AcceptMethod<T1, T2, T3>(Action<T1, T2, T3> action) {}\r\n    public static void AcceptMethod<T1, T2>(Action<T1, T2> action) {}\r\n    public static void AcceptMethod<T>(Action<T> action) {}\r\n    public static void AcceptMethod(Action action) {}\r\n    public static void AcceptMethod<T1, T2, T3, T4, T5, T6>(Func<T1, T2, T3, T4, T5, T6, int> action) {}\r\n    public static void AcceptMethod<T1, T2, T3, T4, T5, T6, T7>(Func<T1, T2, T3, T4, T5, T6, T7, Task<int>> action) {}\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nProgram should compile.\r\n\r\n**Actual Behavior**:\r\n`AcceptMethod(Bazz)` generates error:\r\n> error CS1503: Argument 1: cannot convert from 'method group' to 'Func<Task<int>>'","Url":"https://github.com/dotnet/roslyn/issues/34931","RelatedDescription":"Open issue \"unexpected ambiguity performing overload resolution from method group\" (#34931)"},{"Id":"431771859","IsPullRequest":true,"CreatedAt":"2019-04-11T02:30:12","Actor":"dotnet-bot","Number":"34922","RawContent":null,"Title":"Merge dev16.1-preview2 to master","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.1-preview2 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.1-preview2-to-master\ngit reset --hard upstream/master\ngit merge upstream/dev16.1-preview2\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.1-preview2-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34922","RelatedDescription":"Closed or merged PR \"Merge dev16.1-preview2 to master\" (#34922)"},{"Id":"431771892","IsPullRequest":true,"CreatedAt":"2019-04-11T02:30:07","Actor":"dotnet-bot","Number":"34923","RawContent":null,"Title":"Merge dev16.1-preview2-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.1-preview2-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.1-preview2-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/dev16.1-preview2-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.1-preview2-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34923","RelatedDescription":"Closed or merged PR \"Merge dev16.1-preview2-vs-deps to master-vs-deps\" (#34923)"},{"Id":"431790049","IsPullRequest":false,"CreatedAt":"2019-04-11T01:34:37","Actor":"kendrahavens","Number":"34929","RawContent":null,"Title":"View issues found by a single analyzer","State":"open","Body":"[Internal Ask]\r\nThis request is from an analyzer writer. Add a \"find similar issue in file\" link in the (Ctrl+.) preview menu. This will open a window that returns all places where the analyzer reports an issue. You can scope it to the file, project, or solution.\r\n\r\n**Scenario**\r\n> I wrote an infinite recursion call detection analyzer. Once I author that analyzer I need to have this window to know what cases my analyzer is catching.\r\n","Url":"https://github.com/dotnet/roslyn/issues/34929","RelatedDescription":"Open issue \"View issues found by a single analyzer\" (#34929)"},{"Id":"431771959","IsPullRequest":true,"CreatedAt":"2019-04-11T01:30:12","Actor":"dotnet-bot","Number":"34924","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34924","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#34924)"},{"Id":"431771975","IsPullRequest":true,"CreatedAt":"2019-04-11T01:30:05","Actor":"dotnet-bot","Number":"34925","RawContent":null,"Title":"Merge dev16.1-preview2 to features/editorconfig-in-compiler","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.1-preview2 into features/editorconfig-in-compiler.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.1-preview2-to-features/editorconfig-in-compiler\ngit reset --hard upstream/features/editorconfig-in-compiler\ngit merge upstream/dev16.1-preview2\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.1-preview2-to-features/editorconfig-in-compiler --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/34925","RelatedDescription":"Closed or merged PR \"Merge dev16.1-preview2 to features/editorconfig-in-compiler\" (#34925)"},{"Id":"431780844","IsPullRequest":false,"CreatedAt":"2019-04-11T00:45:18","Actor":"KirillOsenkov","Number":"34928","RawContent":null,"Title":"SetVisualStudioBootstrapperBuildArgs fails during build -restore -ci","State":"open","Body":"Clone Roslyn and run `build -restore -ci`. \r\n\r\nIt fails with:\r\n```\r\nDownloading https://raw.githubusercontent.com/dotnet/roslyn/master/eng/config/PublishData.json\r\n##vso[task.setvariable variable=VisualStudio.MajorVersion;]16\r\n##vso[task.setvariable variable=VisualStudio.ChannelName;]int.d16.1stg\r\nCannot find path 'C:\\roslyn\\artifacts\\VSSetup\\Debug\\Insertion' because it does not exist.\r\nSystem.Management.Automation.ItemNotFoundException: Cannot find path 'C:\\roslyn\\artifacts\\VSSetup\\Debug\\Insertion' because it does not exist.\r\n   at System.Management.Automation.LocationGlobber.ExpandMshGlobPath(String path, Boolean allowNonexistingPaths, PSDriveInfo drive, ContainerCmdletProvider provider, CmdletProviderContext context)\r\n   at System.Management.Automation.LocationGlobber.ResolveDriveQualifiedPath(String path, CmdletProviderContext context, Boolean allowNonexistingPaths, CmdletProvider& providerInstance)\r\n   at System.Management.Automation.LocationGlobber.GetGlobbedMonadPathsFromMonadPath(String path, Boolean allowNonexistingPaths, CmdletProviderContext context, CmdletProvider& providerInstance)\r\n   at System.Management.Automation.LocationGlobber.GetGlobbedProviderPathsFromMonadPath(String path, Boolean allowNonexistingPaths, CmdletProviderContext context, ProviderInfo& provider, CmdletProvider& providerInstance)\r\n   at System.Management.Automation.LocationGlobber.GetChildNamesInDir(String dir, String leafElement, Boolean getAllContainers, CmdletProviderContext context, Boolean dirIsProviderPath, PSDriveInfo drive, ContainerCmdletProvider provider, String& modifiedDirPath)\r\n   at System.Management.Automation.LocationGlobber.GenerateNewPSPathsWithGlobLeaf(List`1 currentDirs, PSDriveInfo drive, String leafElement, Boolean isLastLeaf, ContainerCmdletProvider provider, CmdletProviderContext context)\r\n   at System.Management.Automation.LocationGlobber.ExpandMshGlobPath(String path, Boolean allowNonexistingPaths, PSDriveInfo drive, ContainerCmdletProvider provider, CmdletProviderContext context)\r\n   at System.Management.Automation.LocationGlobber.ResolveDriveQualifiedPath(String path, CmdletProviderContext context, Boolean allowNonexistingPaths, CmdletProvider& providerInstance)\r\n   at System.Management.Automation.LocationGlobber.GetGlobbedMonadPathsFromMonadPath(String path, Boolean allowNonexistingPaths, CmdletProviderContext context, CmdletProvider& providerInstance)\r\n   at System.Management.Automation.LocationGlobber.GetGlobbedProviderPathsFromMonadPath(String path, Boolean allowNonexistingPaths, CmdletProviderContext context, ProviderInfo& provider, CmdletProvider& providerInstance)\r\n   at System.Management.Automation.SessionStateInternal.GetChildItems(String path, Boolean recurse, UInt32 depth, CmdletProviderContext context)\r\n   at Microsoft.PowerShell.Commands.GetChildItemCommand.ProcessRecord()\r\nat SetVisualStudioBootstrapperBuildArgs, C:\\roslyn\\eng\\build.ps1: line 331\r\nat <ScriptBlock>, C:\\roslyn\\eng\\build.ps1: line 612\r\nat <ScriptBlock>, <No file>: line 1\r\n```\r\n\r\nIf I'd like to just build Roslyn without insertion, it would be nice to have a command-line flag to disable calling `SetVisualStudioBootstrapperBuildArgs` here:\r\n\r\nhttps://github.com/KirillOsenkov/roslyn/blob/297aaf20e69ddb60dc4756a7bcc78b419a1916b4/eng/build.ps1#L607-L609","Url":"https://github.com/dotnet/roslyn/issues/34928","RelatedDescription":"Open issue \"SetVisualStudioBootstrapperBuildArgs fails during build -restore -ci\" (#34928)"},{"Id":"431779705","IsPullRequest":false,"CreatedAt":"2019-04-11T00:39:41","Actor":"KirillOsenkov","Number":"34927","RawContent":null,"Title":"Need to enable Use Preview Sdks in order to build Roslyn from command line","State":"open","Body":"Open Visual Studio 2019, Tools -> Options -> Projects and Solutions -> .NET Core and uncheck Use Previews of the .NET Core SDKs:\r\n\r\n![image](https://user-images.githubusercontent.com/679326/55922612-d78c9180-5bb6-11e9-8f66-2ea9da160c55.png)\r\n\r\n(in 8.1 this will be in Tools -> Options -> Environment -> Preview Features)\r\n\r\nThen git clone https://github.com/dotnet/roslyn and run `build.cmd -restore`. It will fail with \"Unable to find .NET Core SDK\".\r\n\r\nThe checkbox to allow prerelease SDKs actually sets the contents of `%localappdata%\\Microsoft\\VisualStudio\\16.0_1b19bc0d\\sdk.txt` settings file to either:\r\n`UsePreviews=true` or `UsePreviews=false`.\r\n(The `1b19bc0d` part of the file path is your Visual Studio installation instance Id).\r\n\r\nThis code in the .NET Core SDK Resolver reads this flag:\r\nhttps://github.com/dotnet/cli/blob/bfffcb23ba270640b355e729f36b34c04fad0121/src/Microsoft.DotNet.MSBuildSdkResolver/VSSettings.cs#L55-L60\r\n\r\nSetting that checkbox is a prerequisite for building Roslyn and it is incredibly hard to figure out why Roslyn failed to build from the symptom.\r\n\r\nWe should either print a warning, or read that file and print a warning if it's not found or is set to false. Or maybe just write the file as part of installing the 3.0 SDK. The difficulty is in finding the VS instance id, but vswhere can provide that.","Url":"https://github.com/dotnet/roslyn/issues/34927","RelatedDescription":"Open issue \"Need to enable Use Preview Sdks in order to build Roslyn from command line\" (#34927)"},{"Id":"431777937","IsPullRequest":true,"CreatedAt":"2019-04-11T00:29:52","Actor":"333fred","Number":"34926","RawContent":null,"Title":"Correctly report mismatches in foreach types","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/29971. Also updates the location of the error reporting to be the variable being iterated over, rather than the type of that variable. @dotnet/roslyn-compiler for review.","Url":"https://github.com/dotnet/roslyn/pull/34926","RelatedDescription":"Open PR \"Correctly report mismatches in foreach types\" (#34926)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"432169261","IsPullRequest":true,"CreatedAt":"2019-04-12T05:19:03","Actor":"Dotnet-GitSync-Bot","Number":"7284","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern","Url":"https://github.com/dotnet/corert/pull/7284","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7284)"},{"Id":"431720505","IsPullRequest":true,"CreatedAt":"2019-04-11T20:12:31","Actor":"trylek","Number":"7283","RawContent":null,"Title":"Minor SuperIlc fixes / improvements found while using the tool","State":"closed","Body":"One non-trivial revelation I made is that my previous introduction\r\nof Outcome was inconsistent w.r.t. the summary table as there is\r\ngenerally a different number of compilations and executions.\r\nI have fixed this by splitting the summary table in two for\r\ncompilations and executions.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7283","RelatedDescription":"Closed or merged PR \"Minor SuperIlc fixes / improvements found while using the tool\" (#7283)"},{"Id":"431170974","IsPullRequest":true,"CreatedAt":"2019-04-10T23:04:04","Actor":"Dotnet-GitSync-Bot","Number":"7277","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern @krwq @tannergooding @danmosemsft @stephentoub @buyaa-n @GrabYourPitchforks @grant-d @sdmaclea @jkoritzinsky @hughbe","Url":"https://github.com/dotnet/corert/pull/7277","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7277)"},{"Id":"431666033","IsPullRequest":true,"CreatedAt":"2019-04-10T22:38:21","Actor":"nattress","Number":"7281","RawContent":null,"Title":"Update CoreCLR test script for VS2019","State":"closed","Body":"After installing VS2019 the CoreCLR test scripts can no longer find MSBuild.exe because it was moved within the VS install folder. Fix to try both options before giving up.","Url":"https://github.com/dotnet/corert/pull/7281","RelatedDescription":"Closed or merged PR \"Update CoreCLR test script for VS2019\" (#7281)"},{"Id":"431682244","IsPullRequest":true,"CreatedAt":"2019-04-10T19:50:02","Actor":"trylek","Number":"7282","RawContent":null,"Title":"Improving PE section management in CPAOT","State":"open","Body":"The ability to use SuperIlc to ILC the entire Pri#1 test suite\r\nlet me quickly identify several remaining CPAOT compilation\r\nissues. This change should be fixing the biggest bucket of 8\r\nfailing compilations.\r\n\r\nAs in contrast to Crossgen we don't copy the input MSIL\r\nselectively to the output R2R PE image (which may change soon\r\nwith Simon's latest changes), in case of RVA fields we just\r\nstore the section name in which the field content resides\r\nand, when serializing the sections to the output PE, we\r\nresolve the appropriate SectionStartNode's in the symbol map\r\nfor the relocation pass.\r\n\r\nAs the R2R PE emitter is basically the oldest part of the CPAOT\r\ncompiler, I was naturally making various arbitrary choices during\r\nits initial implementation and because of this the section\r\nmanagement logic ended up somewhat randomly scattered among\r\nReadyToRunObjectWriter, SectionBuilder and R2RPEBuilder.\r\n\r\nThe SectionBuilder only knew about the sections emitted by\r\nthe CPAOT compiler itself, not about the incoming sections from\r\nthe input MSIL; those got only combined with the SectionBuilder\r\nsections in R2RPEBuilder constructor.\r\n\r\nDue to this fact the section serialization code in SectionBuilder\r\ndidn't know about the MSIL section holding the RVA field (as it\r\nwasn't one of the sections produced by the CPAOT compiler) and\r\nso it didn't resolve its start node in the symbol map.\r\n\r\nTo fix this, I have centralized the logic for building the list\r\nof output sections in SectionBuilderExtensions.PrepareSections\r\nwhere we compose the complete section list upfront and set it\r\nto SectionBuilder. R2RPEBuilder constructor can be much simpler\r\nas it can reuse the SectionBuilder section map and the section\r\nstart nodes get properly resolved even for the MSIL input\r\nsections.\r\n\r\nThanks\r\n\r\nTomas\r\n\r\nP.S. I tried to explain the logic in maximum detail because\r\naccording to our yesterday meeting Simon is investigating / making\r\nchanges in this area as part of removing the previously produced\r\nR2R code when CPAOT-compiling an already R2R-compiled PE executable\r\nand RVA field management is exactly the area that will break and\r\nwill need fixing if he decides to switch over to selective copying\r\nof the input executable to the R2R output file as opposed to blindly\r\ncopying all the pre-existing sections as we do today.","Url":"https://github.com/dotnet/corert/pull/7282","RelatedDescription":"Open PR \"Improving PE section management in CPAOT\" (#7282)"},{"Id":"431562959","IsPullRequest":false,"CreatedAt":"2019-04-10T15:17:13","Actor":"filipnavara","Number":"7280","RawContent":null,"Title":"Bogus warnings on System.Collections.Tests CI tests","State":"open","Body":"Watching the outputs on https://dev.azure.com/dnceng/public/_build/results?buildId=150071 (https://github.com/dotnet/corert/pull/7277) shows many of these lines:\r\n\r\n```\r\nWARNING: Long running test .. finished in 933336ms.\r\nWARNING: Long running test .. finished in 933401ms.\r\n```\r\n\r\nObviously the tests didn't run for that long, so it looks like the time is reported incorrectly.","Url":"https://github.com/dotnet/corert/issues/7280","RelatedDescription":"Open issue \"Bogus warnings on System.Collections.Tests CI tests\" (#7280)"},{"Id":"431465556","IsPullRequest":true,"CreatedAt":"2019-04-10T13:30:56","Actor":"MichalStrehovsky","Number":"7279","RawContent":null,"Title":"Improve SharedLibrary test","State":"closed","Body":"Add coverage for stack walking (GC/EH).","Url":"https://github.com/dotnet/corert/pull/7279","RelatedDescription":"Closed or merged PR \"Improve SharedLibrary test\" (#7279)"},{"Id":"431441435","IsPullRequest":false,"CreatedAt":"2019-04-10T11:05:48","Actor":"rainbowlee","Number":"7278","RawContent":null,"Title":"Unable to load shared library 'objwriter' or one of its dependencies","State":"open","Body":"This problems occured again.\r\n\r\nLast time, I restalled the operation system.\r\n\r\nI run unbantu on Oracle VM VirtualBox\r\n\r\n\r\nubuntu-18.10-desktop-amd64.iso\r\n\r\n\r\n\r\n![crt_error1](https://user-images.githubusercontent.com/7885929/55873976-9c448f80-5bc3-11e9-8092-0743a27fa0fd.png)\r\n","Url":"https://github.com/dotnet/corert/issues/7278","RelatedDescription":"Open issue \"Unable to load shared library 'objwriter' or one of its dependencies\" (#7278)"},{"Id":"431113344","IsPullRequest":true,"CreatedAt":"2019-04-09T20:18:04","Actor":"Dotnet-GitSync-Bot","Number":"7276","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @safern @krwq @tannergooding @danmosemsft @stephentoub @buyaa-n @GrabYourPitchforks @grant-d @sdmaclea @jkoritzinsky @hughbe","Url":"https://github.com/dotnet/corert/pull/7276","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7276)"},{"Id":"430958001","IsPullRequest":true,"CreatedAt":"2019-04-09T14:33:58","Actor":"MichalStrehovsky","Number":"7275","RawContent":null,"Title":"Merge nmirror to master","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7275","RelatedDescription":"Closed or merged PR \"Merge nmirror to master\" (#7275)"},{"Id":"430957168","IsPullRequest":true,"CreatedAt":"2019-04-09T13:08:19","Actor":"dotnet-bot","Number":"7274","RawContent":null,"Title":"Merge changes from TFS","State":"closed","Body":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!","Url":"https://github.com/dotnet/corert/pull/7274","RelatedDescription":"Closed or merged PR \"Merge changes from TFS\" (#7274)"},{"Id":"430942646","IsPullRequest":true,"CreatedAt":"2019-04-09T12:35:44","Actor":"filipnavara","Number":"7273","RawContent":null,"Title":"Move TimerQueue.TickCount Windows implementation to shared CoreLib","State":"open","Body":"Implementation taken from CoreCLR because it accounts for Windows 7 unlike the original CoreRT code.","Url":"https://github.com/dotnet/corert/pull/7273","RelatedDescription":"Open PR \"Move TimerQueue.TickCount Windows implementation to shared CoreLib\" (#7273)"},{"Id":"430542017","IsPullRequest":true,"CreatedAt":"2019-04-08T16:21:43","Actor":"MichalStrehovsky","Number":"7272","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7272","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#7272)"},{"Id":"430501135","IsPullRequest":true,"CreatedAt":"2019-04-08T16:20:57","Actor":"MichalStrehovsky","Number":"7270","RawContent":null,"Title":"Fix ProjectN break","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7270","RelatedDescription":"Closed or merged PR \"Fix ProjectN break\" (#7270)"},{"Id":"430501318","IsPullRequest":true,"CreatedAt":"2019-04-08T16:20:41","Actor":"MichalStrehovsky","Number":"7271","RawContent":null,"Title":"Add ProjectN fallback for generic enums","State":"closed","Body":"Turns out it would be unnecessarily complicated to pipe this through to\r\nrhbind (need to do this in NUTC, update the CTL format, and pipe it\r\nthrough the binder).","Url":"https://github.com/dotnet/corert/pull/7271","RelatedDescription":"Closed or merged PR \"Add ProjectN fallback for generic enums\" (#7271)"},{"Id":"430180134","IsPullRequest":true,"CreatedAt":"2019-04-08T11:38:37","Actor":"MichalStrehovsky","Number":"7269","RawContent":null,"Title":"Remove reflection from Enum.ToString","State":"closed","Body":"Contributes to #5013.\r\n\r\nHaving reflection field access and custom attribute parsing support in a code path reachable from `Enum.ToString` means that any \"hello world\"-style app needs to have pretty much the full reflection stack embedded in it. The reflection stack is huge. This also makes access to uncached `EnumInfo` marginally faster.\r\n\r\nThis pretty much restores #3801, where we replaced the specialized code paths with the common reflection path to fix a bug around blocked types. I fix that bug by simply returning an empty `EnumInfo`.\r\n\r\nI had to make generic type definition EETypes carry their CorElementType to make this work property on generic type definitions of enums (for the corner case of enum type nested under a generic type). I'll see how difficult is it to add this to the binder on the Project N side when this ports over. If it's too complex, I'll simply restore the logic that accesses the first instance field type on generic definitions using reflection (under `#if PROJECTN`).","Url":"https://github.com/dotnet/corert/pull/7269","RelatedDescription":"Closed or merged PR \"Remove reflection from Enum.ToString\" (#7269)"},{"Id":"430132193","IsPullRequest":true,"CreatedAt":"2019-04-08T01:08:39","Actor":"MichalStrehovsky","Number":"7268","RawContent":null,"Title":"Change MyGet references to point to the new blob feed","State":"closed","Body":"We don't publish to MyGet anymore.","Url":"https://github.com/dotnet/corert/pull/7268","RelatedDescription":"Closed or merged PR \"Change MyGet references to point to the new blob feed\" (#7268)"},{"Id":"430070372","IsPullRequest":true,"CreatedAt":"2019-04-06T19:56:13","Actor":"nattress","Number":"7267","RawContent":null,"Title":"Always publish symbols for official builds","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7267","RelatedDescription":"Closed or merged PR \"Always publish symbols for official builds\" (#7267)"},{"Id":"430060399","IsPullRequest":true,"CreatedAt":"2019-04-06T18:04:30","Actor":"nattress","Number":"7266","RawContent":null,"Title":"Fix symbol publish property","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7266","RelatedDescription":"Closed or merged PR \"Fix symbol publish property\" (#7266)"},{"Id":"430017850","IsPullRequest":false,"CreatedAt":"2019-04-06T09:53:02","Actor":"akbcode","Number":"7265","RawContent":null,"Title":"Build shared library with F# fails on macOS","State":"open","Body":"I followed the NativeLibrary sample to build a shared library in F#. [Here's my code.](https://gist.github.com/akbcode/fecb98b56cbbfeffd05bdf85ccb83788)\r\n\r\nIt fails with \r\n```\r\nld: illegal text-relocation to '___typemanager_indirection' in obj/Debug/netcoreapp2.2/osx-x64/native/FSNativeLibrary.o from '___RMHSignature_System_Linq_System_Linq_Enumerable__Empty' in obj/Debug/netcoreapp2.2/osx-x64/native/FSNativeLibrary.o for architecture x86_64\r\n```\r\nBuilding as a static library works. I have only tested on macOS 10.13.6","Url":"https://github.com/dotnet/corert/issues/7265","RelatedDescription":"Open issue \"Build shared library with F# fails on macOS\" (#7265)"},{"Id":"429976790","IsPullRequest":true,"CreatedAt":"2019-04-06T00:25:51","Actor":"nattress","Number":"7264","RawContent":null,"Title":"Attempt 3 at passing Azure feed / Key to the publish job","State":"closed","Body":"Inline scripts have their own syntax for properties and require input arguments to be called out like a method signature.","Url":"https://github.com/dotnet/corert/pull/7264","RelatedDescription":"Closed or merged PR \"Attempt 3 at passing Azure feed / Key to the publish job\" (#7264)"},{"Id":"429966491","IsPullRequest":true,"CreatedAt":"2019-04-05T23:15:36","Actor":"nattress","Number":"7263","RawContent":null,"Title":"Set working folder for official build publish task","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7263","RelatedDescription":"Closed or merged PR \"Set working folder for official build publish task\" (#7263)"},{"Id":"429896736","IsPullRequest":true,"CreatedAt":"2019-04-05T21:29:14","Actor":"nattress","Number":"7262","RawContent":null,"Title":"Publish to Azure blob feed","State":"closed","Body":"MyGet keeps running out of storage quota (see https://github.com/dotnet/core-eng/issues/5070). Switch to Azure blob feed so CoreRT nightly builds are publicly available.","Url":"https://github.com/dotnet/corert/pull/7262","RelatedDescription":"Closed or merged PR \"Publish to Azure blob feed\" (#7262)"},{"Id":"429686003","IsPullRequest":true,"CreatedAt":"2019-04-05T12:56:35","Actor":"MichalStrehovsky","Number":"7261","RawContent":null,"Title":"Update dependencies","State":"closed","Body":"Should pick up dotnet/corefx#36552.","Url":"https://github.com/dotnet/corert/pull/7261","RelatedDescription":"Closed or merged PR \"Update dependencies\" (#7261)"},{"Id":"429363643","IsPullRequest":true,"CreatedAt":"2019-04-05T12:51:00","Actor":"Dotnet-GitSync-Bot","Number":"7258","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/7258","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7258)"},{"Id":"429508597","IsPullRequest":true,"CreatedAt":"2019-04-04T22:24:10","Actor":"EgorBo","Number":"7260","RawContent":null,"Title":"Move AssemblyName to shared","State":"open","Body":"CoreRT part of https://github.com/dotnet/coreclr/pull/23737","Url":"https://github.com/dotnet/corert/pull/7260","RelatedDescription":"Open PR \"Move AssemblyName to shared\" (#7260)"},{"Id":"429412133","IsPullRequest":true,"CreatedAt":"2019-04-04T20:52:56","Actor":"jkotas","Number":"7259","RawContent":null,"Title":"Fix build with VS2019","State":"closed","Body":"The environment setup scripts that come with VS2019 change current directory. It breaks places in the build that depend on current directory.","Url":"https://github.com/dotnet/corert/pull/7259","RelatedDescription":"Closed or merged PR \"Fix build with VS2019\" (#7259)"},{"Id":"429278376","IsPullRequest":true,"CreatedAt":"2019-04-04T16:04:09","Actor":"Dotnet-GitSync-Bot","Number":"7257","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7257","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7257)"},{"Id":"429080050","IsPullRequest":true,"CreatedAt":"2019-04-04T10:18:54","Actor":"Dotnet-GitSync-Bot","Number":"7255","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @sywhang","Url":"https://github.com/dotnet/corert/pull/7255","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7255)"},{"Id":"429191733","IsPullRequest":false,"CreatedAt":"2019-04-04T10:06:18","Actor":"DenMpei","Number":"7256","RawContent":null,"Title":" [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: System.Drawing.Common","State":"open","Body":"Good day! \r\n\r\nI run: dotnet publish -r win-x64 -c release \r\nConsole application\r\n.Net Core version: 2.2\r\n\r\nAnd I get such an error ... What can I do about it?\r\n\r\nGenerating native code\r\nEXEC : error : [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: System.Drawing.Common","Url":"https://github.com/dotnet/corert/issues/7256","RelatedDescription":"Open issue \" [TEMPORARY EXCEPTION MESSAGE] FileLoadErrorGeneric: System.Drawing.Common\" (#7256)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"432300971","IsPullRequest":true,"CreatedAt":"2019-04-11T22:33:45","Actor":"nugetlurker","Number":"3117","RawContent":null,"Title":"Insert NuGet Build 5.0.1-rtm.5946 into sdk","State":"open","Body":"Insert NuGet Build 5.0.1-rtm.5946 into sdk release/2.1.6xx branch","Url":"https://github.com/dotnet/sdk/pull/3117","RelatedDescription":"Open PR \"Insert NuGet Build 5.0.1-rtm.5946 into sdk\" (#3117)"},{"Id":"432300957","IsPullRequest":true,"CreatedAt":"2019-04-11T22:33:42","Actor":"nugetlurker","Number":"3116","RawContent":null,"Title":"Insert NuGet Build 5.0.1-rtm.5946 into sdk","State":"open","Body":"Insert NuGet Build 5.0.1-rtm.5946 into sdk release/2.2.2xx branch","Url":"https://github.com/dotnet/sdk/pull/3116","RelatedDescription":"Open PR \"Insert NuGet Build 5.0.1-rtm.5946 into sdk\" (#3116)"},{"Id":"432201230","IsPullRequest":false,"CreatedAt":"2019-04-11T19:21:25","Actor":"KathleenDollard","Number":"3115","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/sdk/issues/3115","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#3115)"},{"Id":"432140915","IsPullRequest":true,"CreatedAt":"2019-04-11T17:16:44","Actor":"johnbeisner","Number":"3114","RawContent":null,"Title":"[WIP] running perf tests and upload to benchview in Azure DevOps","State":"open","Body":"First draft: running perf tests and upload to benchview in Azure DevOps","Url":"https://github.com/dotnet/sdk/pull/3114","RelatedDescription":"Open PR \"[WIP] running perf tests and upload to benchview in Azure DevOps\" (#3114)"},{"Id":"431984959","IsPullRequest":true,"CreatedAt":"2019-04-11T12:01:56","Actor":"dotnet-bot","Number":"3113","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3113","RelatedDescription":"Open PR \"Merge release/3.0.1xx to master\" (#3113)"},{"Id":"431838901","IsPullRequest":true,"CreatedAt":"2019-04-11T05:40:42","Actor":"peterhuene","Number":"3112","RawContent":null,"Title":"Escape output item specs for ResolvePackageAssets task.","State":"open","Body":"This commit fixes the ResolvePackageAssets task to escape the output\r\nitem specs.  This allows assets in packages to contain characters that\r\nmight get unescaped by MSBuild.\r\n\r\nFixes #3069.","Url":"https://github.com/dotnet/sdk/pull/3112","RelatedDescription":"Open PR \"Escape output item specs for ResolvePackageAssets task.\" (#3112)"},{"Id":"431111800","IsPullRequest":true,"CreatedAt":"2019-04-11T02:07:16","Actor":"dsplaisted","Number":"3107","RawContent":null,"Title":"Update stage 0","State":"closed","Body":"Replace #3072","Url":"https://github.com/dotnet/sdk/pull/3107","RelatedDescription":"Closed or merged PR \"Update stage 0\" (#3107)"},{"Id":"431772059","IsPullRequest":true,"CreatedAt":"2019-04-11T00:01:10","Actor":"dsplaisted","Number":"3111","RawContent":null,"Title":"Use PackageDownload","State":"open","Body":"Fix https://github.com/dotnet/cli/issues/10440 (we will need https://github.com/dotnet/project-system/issues/4567 to be able to support this in VS).","Url":"https://github.com/dotnet/sdk/pull/3111","RelatedDescription":"Open PR \"Use PackageDownload\" (#3111)"},{"Id":"431061785","IsPullRequest":false,"CreatedAt":"2019-04-10T13:20:40","Actor":"johnbeisner","Number":"3104","RawContent":null,"Title":"Allow for the disablement of ResolveAppHosts","State":"closed","Body":"**Repro steps:**\r\nBuild win-arm [all arm* RIDs have this failure] @ commit 0606a12720f0eace5af77c545d0d91b96ec92e27\r\n\r\n**Error:**\r\nerror NU1605: Detected package downgrade: runtime.win-arm.Microsoft.NETCore.DotNetAppHost from 3.0.0-preview5-27607-08 to 3.0.0-preview4-27501-7. Reference the package directly from the project to select a different version. \r\n DownloadPackage -> Microsoft.NETCore.DotNetAppHost 3.0.0-preview5-27607-08 -> runtime.win-arm.Microsoft.NETCore.DotNetAppHost (>= 3.0.0-preview5-27607-08) \r\n DownloadPackage -> runtime.win-arm.Microsoft.NETCore.DotNetAppHost (>= 3.0.0-preview4-27501-7)\r\n\r\n**From Microsoft.NET.Sdk.TargetingPackResolution.targets:**\r\n```\r\n    <ResolveAppHosts TargetFrameworkIdentifier=\"$(TargetFrameworkIdentifier)\"\r\n                     TargetFrameworkVersion=\"$(_TargetFrameworkVersionWithoutV)\"\r\n                     TargetingPackRoot=\"$(NetCoreTargetingPackRoot)\"\r\n                     AppHostRuntimeIdentifier=\"$(AppHostRuntimeIdentifier)\"\r\n                     RuntimeFrameworkVersion=\"$(RuntimeFrameworkVersion)\"\r\n                     PackAsToolShimRuntimeIdentifiers=\"@(_PackAsToolShimRuntimeIdentifiers)\"\r\n                     DotNetAppHostExecutableNameWithoutExtension=\"$(_DotNetAppHostExecutableNameWithoutExtension)\"\r\n                     RuntimeGraphPath=\"$(BundledRuntimeIdentifierGraphFile)\"\r\n                     KnownAppHostPacks=\"@(KnownAppHostPack)\">\r\n\r\n      <Output TaskParameter=\"PackagesToDownload\" ItemName=\"_PackageReferenceToAdd\" />\r\n      <Output TaskParameter=\"AppHost\" ItemName=\"AppHostPack\" />\r\n      <Output TaskParameter=\"PackAsToolShimAppHostPacks\" ItemName=\"PackAsToolShimAppHostPack\" />\r\n\r\n    </ResolveAppHosts>\r\n```\r\n\r\n_Work-around is to disable the 'ResolveFrameworkReferences' target._\r\n\r\nThe 'ResolveFrameworkReferences' step of the 'ResolveFrameworkReferences' target can be disabled by adding:\r\n`<DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences>`\r\n\r\nThe 'ResolveAppHosts' step of the 'ResolveFrameworkReferences' target should have a similar mechanism.\r\n","Url":"https://github.com/dotnet/sdk/issues/3104","RelatedDescription":"Closed issue \"Allow for the disablement of ResolveAppHosts\" (#3104)"},{"Id":"431235557","IsPullRequest":false,"CreatedAt":"2019-04-09T23:14:53","Actor":"nguerrera","Number":"3110","RawContent":null,"Title":"Resolve runtime pack assets for crossgen even if app is framework-dependent","State":"open","Body":"Crossgen operates on implementation assemblies only, even when passed as references to the compiler. To crossgen a framework-dependent app, we need all of the framework implementation assemblies to be passed to crossgen as references.\r\n\r\nNote that crossgen requires picking a RID. The app can be framework-dependent, but it must be RID specific. (Crossgen generates native code, which can't be rid-agnostic, obviously.) We are guaranteed to have downloaded the runtime packs, we just need to resolve the framework assemblies from it as though the app was self-contained, but without putting them in deps.json or copying them, etc.\r\n\r\nToday, crossgen tasks can find the base shared framework implementation assemblies next to it (it ships in the base runtime pack), but this doesn't work for the other frameworks like WindowsDesktop or ASP.NET. This also can't just blindly aggregate all the files in all the runtime packs, this list needs to account for conflict resolution (WindowsBase in WindowsDesktop wins over WindowsBase in NETCoreApp), etc.","Url":"https://github.com/dotnet/sdk/issues/3110","RelatedDescription":"Open issue \"Resolve runtime pack assets for crossgen even if app is framework-dependent\" (#3110)"},{"Id":"431234100","IsPullRequest":false,"CreatedAt":"2019-04-09T23:08:44","Actor":"nguerrera","Number":"3109","RawContent":null,"Title":"Gather appropriate list of managed runtime assemblies for crossen and (eventually) linker","State":"open","Body":"Today, crossgen (new ReadyToRun feature) operates over all files to publish and filters out what is not IL. We have decided that the compilation set should be restricted by default to the set of files that we deem are runtime managed assets and designate as such in the .deps.json.\r\n\r\nAs of now, there isn't an exact match for this list that is readily available. _ResolvedCopyLocalPublishAssets + IntermediateAssembly is close.\r\n\r\nI suspect that with #3080, this will be easier to do, but I didn't review in detail yet.\r\n\r\nWe will want to use the same set of runtime assemblies as candidates for the linker as crossgen. This is high priority as we are hoping to have both linker and crossgen feature-complete for Preview 5.","Url":"https://github.com/dotnet/sdk/issues/3109","RelatedDescription":"Open issue \"Gather appropriate list of managed runtime assemblies for crossen and (eventually) linker\" (#3109)"},{"Id":"431167464","IsPullRequest":true,"CreatedAt":"2019-04-09T20:08:25","Actor":"dsplaisted","Number":"3108","RawContent":null,"Title":"Fix conflicts between multiple uses of _PackageReferenceToAdd","State":"open","Body":"Fixes #3027","Url":"https://github.com/dotnet/sdk/pull/3108","RelatedDescription":"Open PR \"Fix conflicts between multiple uses of _PackageReferenceToAdd\" (#3108)"},{"Id":"431068288","IsPullRequest":true,"CreatedAt":"2019-04-09T16:45:13","Actor":"nugetlurker","Number":"3106","RawContent":null,"Title":"Insert NuGet Build 5.1.0-preview2.5951 into sdk","State":"open","Body":"Insert NuGet Build 5.1.0-preview2.5951 into sdk release/2.1.7xx branch","Url":"https://github.com/dotnet/sdk/pull/3106","RelatedDescription":"Open PR \"Insert NuGet Build 5.1.0-preview2.5951 into sdk\" (#3106)"},{"Id":"431068261","IsPullRequest":true,"CreatedAt":"2019-04-09T16:45:10","Actor":"nugetlurker","Number":"3105","RawContent":null,"Title":"Insert NuGet Build 5.1.0-preview2.5951 into sdk","State":"open","Body":"Insert NuGet Build 5.1.0-preview2.5951 into sdk release/2.2.3xx branch","Url":"https://github.com/dotnet/sdk/pull/3105","RelatedDescription":"Open PR \"Insert NuGet Build 5.1.0-preview2.5951 into sdk\" (#3105)"},{"Id":"430812433","IsPullRequest":false,"CreatedAt":"2019-04-09T07:35:55","Actor":"yyjdelete","Number":"3103","RawContent":null,"Title":"Reference transitive not working well when app and libs has different targetFramework, and lib use an transitive reference from special targetFramework of an multi-targetFramework PackageReference/ProjectReference","State":"open","Body":"Sdk Version: `3.0.100-preview3-010431`, `2.1.504`\r\nRun `ConsoleApp5` in https://github.com/yyjdelete/test_dotnet_indirect_dependency\r\nAnd see an `MissingMethodException` and an `FileNotFoundException` for `System.Data.SqlClient, Version=4.5.0.0`\r\n\r\nThis can also happen with `PackageReference`. I reference Dapper from an ClassLibrary with netstandard2.0, and the main App is net472, and failed to found `System.Data.SqlClient, Version=4.5.0.0`.\r\n\r\nProject struct:\r\n```\r\nConsoleApp5(net472)\r\n|--ClassLibrary1(netstandard2.0)\r\n---|--ClassLibrary2(netstandard2.0;net472)\r\n------|--System.Data.SqlClient(when netstandard2.0)\r\n```\r\n\r\nExpected:\r\nThe `FileNotFoundException` not happen and the `System.Data.SqlClient, Version=4.5.0.0` is include in the output bins.\r\nThe below behavior may be not expected, but it's the current behavior for project struct(dependencies) in VS2019. (Rider follow the actual behavior for project struct)\r\n```\r\nConsoleApp5(net472)\r\n|--ClassLibrary1(netstandard2.0)\r\n---|--ClassLibrary2(netstandard2.0)\r\n------|--System.Data.SqlClient(netstandard2.0)\r\n```\r\n\r\nActual:\r\n```\r\nConsoleApp5(net472)\r\n|--ClassLibrary1(netstandard2.0)\r\n---|--System.Data.SqlClient(missing from the output of ConsoleApp5)\r\n---|--ClassLibrary2(net472)\r\n```","Url":"https://github.com/dotnet/sdk/issues/3103","RelatedDescription":"Open issue \"Reference transitive not working well when app and libs has different targetFramework, and lib use an transitive reference from special targetFramework of an multi-targetFramework PackageReference/ProjectReference\" (#3103)"},{"Id":"430708424","IsPullRequest":true,"CreatedAt":"2019-04-09T02:30:22","Actor":"dotnet-bot","Number":"3101","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3101","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#3101)"},{"Id":"430708743","IsPullRequest":true,"CreatedAt":"2019-04-09T00:03:03","Actor":"dsplaisted","Number":"3102","RawContent":null,"Title":"Don't include base FrameworkReferences when creating NuGet packages","State":"open","Body":"Per [comment](https://github.com/aspnet/AspNetCore/pull/9033#issuecomment-481043113) from @nkolev92:\r\n\r\n> I think regardless of whether it gets reverted or not, the SDK should set \"pack=false\" to Microsoft.NETCore.App.","Url":"https://github.com/dotnet/sdk/pull/3102","RelatedDescription":"Open PR \"Don't include base FrameworkReferences when creating NuGet packages\" (#3102)"},{"Id":"430672111","IsPullRequest":true,"CreatedAt":"2019-04-08T21:42:47","Actor":"dsplaisted","Number":"3100","RawContent":null,"Title":"Look for platform manifest using convention currently used by ASP.NET targeting pack","State":"open","Body":"Fix https://github.com/aspnet/AspNetCore/issues/8836","Url":"https://github.com/dotnet/sdk/pull/3100","RelatedDescription":"Open PR \"Look for platform manifest using convention currently used by ASP.NET targeting pack\" (#3100)"},{"Id":"430095086","IsPullRequest":true,"CreatedAt":"2019-04-08T21:19:38","Actor":"AaronRobinsonMSFT","Number":"3093","RawContent":null,"Title":"Fix various issues in generated RegFree COM manifest","State":"closed","Body":"Fixes #3091 \r\n\r\ncc @jkoritzinsky ","Url":"https://github.com/dotnet/sdk/pull/3093","RelatedDescription":"Closed or merged PR \"Fix various issues in generated RegFree COM manifest\" (#3093)"},{"Id":"430093170","IsPullRequest":false,"CreatedAt":"2019-04-08T21:19:38","Actor":"AaronRobinsonMSFT","Number":"3091","RawContent":null,"Title":"Issues with RegFree COM manifest","State":"closed","Body":"The attribute in the `assembly` node is misspelled - should be `manifestVersion`.\r\n\r\nhttps://github.com/dotnet/sdk/blob/afae0615d5cbb16c058c5ce1fd65215d07df24d9/src/Tasks/Microsoft.NET.Build.Tasks/RegFreeComManifest.cs#L29\r\n\r\nThe Guid should be inserted with braces (i.e. `new XAttribute(\"clsid\", guid.ToString(\"B\"))`)\r\n\r\nhttps://github.com/dotnet/sdk/blob/afae0615d5cbb16c058c5ce1fd65215d07df24d9/src/Tasks/Microsoft.NET.Build.Tasks/RegFreeComManifest.cs#L48\r\n\r\n\r\nThe manifest file is being written with a [BOM](https://en.wikipedia.org/wiki/Byte_order_mark). This must be removed as it will cause the Windows' SxS parser to consider the manifest invalid. The code could be updated as follows:\r\n\r\n``` CSharp\r\nXDocument manifestDocument = new XDocument(new XDeclaration(\"1.0\", \"UTF-8\", \"yes\"), manifest);\r\nvar settings = new XmlWriterSettings();\r\nsettings.Encoding = new UTF8Encoding(encoderShouldEmitUTF8Identifier: false);\r\nusing (XmlWriter manifestWriter = XmlWriter.Create(comManifestPath, settings))\r\n{\r\n    manifestDocument.WriteTo(manifestWriter);\r\n}\r\n```\r\n\r\ncc @jkoritzinsky ","Url":"https://github.com/dotnet/sdk/issues/3091","RelatedDescription":"Closed issue \"Issues with RegFree COM manifest\" (#3091)"},{"Id":"430205186","IsPullRequest":true,"CreatedAt":"2019-04-08T18:34:12","Actor":"wli3","Number":"3096","RawContent":null,"Title":"Update branding to preview5","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3096","RelatedDescription":"Closed or merged PR \"Update branding to preview5\" (#3096)"},{"Id":"430201082","IsPullRequest":true,"CreatedAt":"2019-04-08T18:08:41","Actor":"wli3","Number":"3095","RawContent":null,"Title":"Merge master to release/3.0.1xx for preview4","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3095","RelatedDescription":"Closed or merged PR \"Merge master to release/3.0.1xx for preview4\" (#3095)"},{"Id":"430586465","IsPullRequest":true,"CreatedAt":"2019-04-08T18:07:54","Actor":"fadimounir","Number":"3099","RawContent":null,"Title":"Check if assembly has any IL code that needs R2R compilation","State":"open","Body":"Exclude assemblies with no IL from being added to the R2R compilation list. There are some \"reference\" assemblies that do not have the ReferenceAssemblyAttribute. Crossgenning them is like a \"nop\" and will produce an output assembly with no R2R compilation, but if the PDB generation option is enabled, crossgen will now fail if the input \"R2R\" assembly does not contain any R2R compiled code.","Url":"https://github.com/dotnet/sdk/pull/3099","RelatedDescription":"Open PR \"Check if assembly has any IL code that needs R2R compilation\" (#3099)"},{"Id":"430585010","IsPullRequest":false,"CreatedAt":"2019-04-08T18:03:53","Actor":"dsplaisted","Number":"3098","RawContent":null,"Title":"Remove old deps file generation logic","State":"open","Body":"In #3086, we are refactoring the deps file generation logic.  For now, we are leaving both the old and the new logic in, and by default comparing the results of the two methods in order to ensure that the new logic produces the same results.\r\n\r\nAfter we've shipped a few previews like this, we should remove the old logic and entirely switch over to the new logic.","Url":"https://github.com/dotnet/sdk/issues/3098","RelatedDescription":"Open issue \"Remove old deps file generation logic\" (#3098)"},{"Id":"430411957","IsPullRequest":true,"CreatedAt":"2019-04-08T12:03:57","Actor":"dotnet-maestro[bot]","Number":"3097","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190407.1\r\n- **Date Produced**: 4/7/2019 12:56 PM\r\n- **Commit**: b1f9e12fe3ee71c48ea60b15968745850ac0a4a7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19207.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19207.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190409.1\r\n- **Date Produced**: 4/9/2019 8:35 AM\r\n- **Commit**: 9d7e665ecf2606094677524ecd5af0fc39c7bb49\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19209.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19209.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190409.2\r\n- **Date Produced**: 4/9/2019 12:54 PM\r\n- **Commit**: 63b76f3f952f821d0a7996427a9f3534f1c25ab7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19209.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19209.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190410.7\r\n- **Date Produced**: 4/11/2019 3:17 AM\r\n- **Commit**: 4f645e4a5385eb96cad3f72f5ded239761c7d075\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19210.7\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19210.7\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3097","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3097)"},{"Id":"430137301","IsPullRequest":true,"CreatedAt":"2019-04-07T14:24:38","Actor":"dotnet-maestro[bot]","Number":"3094","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190406.5\r\n- **Date Produced**: 4/6/2019 5:35 PM\r\n- **Commit**: 9d8abf998866f10bc19d97e1916ff1c0ada3fd42\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19206.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19206.5\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3094","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3094)"},{"Id":"430094852","IsPullRequest":true,"CreatedAt":"2019-04-07T01:47:54","Actor":"AaronRobinsonMSFT","Number":"3092","RawContent":null,"Title":"Fix various issues in generated RegFree COM manifest","State":"closed","Body":"Fixes #3091 \r\n\r\ncc @jkoritzinsky ","Url":"https://github.com/dotnet/sdk/pull/3092","RelatedDescription":"Closed or merged PR \"Fix various issues in generated RegFree COM manifest\" (#3092)"},{"Id":"430085240","IsPullRequest":true,"CreatedAt":"2019-04-07T01:30:09","Actor":"dotnet-bot","Number":"3090","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3090","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#3090)"},{"Id":"430027178","IsPullRequest":true,"CreatedAt":"2019-04-06T14:34:37","Actor":"dotnet-maestro[bot]","Number":"3089","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190405.6\r\n- **Date Produced**: 4/5/2019 11:26 PM\r\n- **Commit**: 4217db4a23ffd15abb3771d635b66162994fb9e4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19205.6\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19205.6\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3089","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3089)"},{"Id":"430027015","IsPullRequest":true,"CreatedAt":"2019-04-06T14:00:07","Actor":"dotnet-bot","Number":"3088","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3088","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to release/3.0.1xx\" (#3088)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"},{"Id":"359151445","IsPullRequest":false,"CreatedAt":"2018-09-11T17:44:50","Actor":"leecow","Number":"84","RawContent":null,"Title":"September 2018 .NET Updates","State":"open","Body":"# September 2018 .NET Updates\r\n\r\nThe following .NET updates were released in September 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework September 2018 Security and Quality Rollup - September 11, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core September 2018 Update - September 11, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.4/2.1.4.md)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/84","RelatedDescription":"Open issue \"September 2018 .NET Updates\" (#84)"},{"Id":"359136325","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:55","Actor":"blowdart","Number":"83","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](https://github.com/aspnet/Announcements/issues/316).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32228\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83)"},{"Id":"357399856","IsPullRequest":false,"CreatedAt":"2018-09-05T20:56:25","Actor":"richlander","Number":"82","RawContent":null,"Title":".NET Core Runtime ARM64 Status","State":"open","Body":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\n[.NET Core 3.0 Preview 1](https://github.com/dotnet/core/issues/2099) includes support for Linux ARM64. Please try this build and provide support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/coreclr #19843](https://github.com/dotnet/coreclr/issues/19843)\r\n\r\n## Current Status\r\n\r\nARM64 builds are functional, for console and ASP.NET Core apps.\r\n\r\n## Details\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\nSee [Installing .NET Core 3.0 on Linux ARM64](https://gist.github.com/richlander/467813274cea8abc624553ee72b28213) to install .NET Core on your ARM64 machine. Builds are available from the [daily builds page](https://github.com/dotnet/core/blob/master/daily-builds.md).\r\n\r\n## Bug Queries\r\n\r\nthe following bugs queries are available for ARM64:\r\n\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds are tested on the following operating systems:\r\n\r\n* Ubuntu 16.04 and 18.04\r\n* Debian 9\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)","Url":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Open issue \".NET Core Runtime ARM64 Status\" (#82)"},{"Id":"349693735","IsPullRequest":false,"CreatedAt":"2018-08-22T18:23:01","Actor":"richlander","Number":"80","RawContent":null,"Title":"Improving Performance of ARM32 Docker Images with .NET Core Package Cache","State":"closed","Body":"# Improving Performance of ARM32 Docker Images with .NET Core Package Cache\r\n\r\n.NET Core SDK distributions include a compressed copy of NuGet packages for .NET Core, ASP.NET Core and EF Core. These packages are decompressed upon installation of the .NET Core SDK. The packages are not currently included in ARM32 distributions due to the time and space cost to decompress the packages. Instead, they will be added to [.NET Core ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/), where these costs can be paid as part of image creation.\r\n\r\nThese NuGet packages include content for two purposes:\r\n\r\n- Reference assemblies for .NET Core, for code compilation.\r\n- Pre-compiled assemblies (compiled with [crossgen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md)) for .NET Core, for use in self-contained applications.\r\n\r\nIn both cases, the presence of these packages avoid the need to access remote NuGet feeds for .NET Core assemblies as part of package restore.\r\n\r\nThis change only affects [.NET Core 2.1 SDK ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/). This change will be made in August 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #653](https://github.com/dotnet/dotnet-docker/issues/653)\r\n\r\n## .NET Core SDK NugetFallbackFolder\r\n\r\nThe .NET Core SDK includes a compressed copy of all NuGet package, in LZMA format. It exists at the following version-specific location:\r\n\r\n```\r\nroot@3778032bc43d:/# ls -l /usr/share/dotnet/sdk/2.1.302/*.lzma\r\n-rw-r--r-- 1 1004 sudo 35995936 Jul  2 22:51 /usr/share/dotnet/sdk/2.1.302/nuGetPackagesArchive.lzma\r\n```\r\n\r\nThis file is decompressed to the following location: `/usr/share/dotnet/sdk/NuGetFallbackFolder/`\r\n\r\nA package restore for a .NET Core assembly will restore the assembly from the NuGetFallbackFolder location and copy it to the user NuGet cache. At that point, regular NuGet behavior is used.\r\n\r\n## Impact of this change\r\n\r\nThere should be no functional difference in behavior after this change. .NET SDK commands should complete faster and require fewer package restore network requests.\r\n\r\nThe following examples demonstrates the benefit of this change. The improvement can be observed with package restore. Build times (assuming no restore) are not affected.\r\n\r\n### .NET Core 2.1 SDK image after this change\r\n\r\n> The change has already been made in the `microsoft/dotnet-nightly` repo, as you can see in the example below. In August, this same change will be made available in the `microsoft/dotnet` repo.\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet-nightly:2.1-sdk\r\nroot@416731f24915:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 6.68 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m32.496s\r\nuser    0m35.820s\r\nsys     0m4.280s\r\nroot@416731f24915:/# cd mvcapp/\r\nroot@416731f24915:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.8.138-preview+ge0cd4f1c1f for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 524.78 ms for /mvcapp/mvcapp.csproj.\r\n/usr/share/dotnet/sdk/2.1.401-preview-009081/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(143,5): message NETSDK1057: You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452 [/mvcapp/mvcapp.csproj]\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:09.15\r\n\r\nreal    2m13.377s\r\nuser    1m25.260s\r\nsys     0m9.420s\r\nroot@416731f24915:/mvcapp#\r\n```\r\n\r\n### .NET Core 2.1 SDK image before this change\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet:2.1-sdk\r\nroot@9d1d5e45df6a:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Private.DataContractSerialization 4.3.0.\r\n  Installing System.Security.Principal 4.3.0.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.App 2.1.1.\r\n  Installing runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.AspNetCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Antiforgery 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Session 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.KeyPerFile 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Embedded 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Physical 2.1.1.\r\n  Installing Microsoft.Extensions.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Cookies 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Core 2.1.1.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.Authentication.Google 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Facebook 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting.Abstractions 2.1.1.\r\n  Installing runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.HttpsPolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.MicrosoftAccount 2.1.1.\r\n  Installing Microsoft.Extensions.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.MiddlewareAnalysis 2.1.1.\r\n  Installing Microsoft.Extensions.FileSystemGlobbing 2.1.1.\r\n  Installing Microsoft.Extensions.DiagnosticAdapter 2.1.0.\r\n  Installing Microsoft.Extensions.Identity.Core 2.1.1.\r\n  Installing Microsoft.Extensions.Identity.Stores 2.1.1.\r\n  Installing Microsoft.Extensions.Options.ConfigurationExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Localization.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Abstractions 2.1.1.\r\n  Installing runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Options 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Composite 2.1.1.\r\n  Installing Microsoft.Extensions.Logging 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.TraceSource 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.UserSecrets 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Debug 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Console 2.1.1.\r\n  Installing Microsoft.Extensions.DependencyInjection 2.1.1.\r\n  Installing Microsoft.Extensions.ObjectPool 2.1.1.\r\n  Installing runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Binder 2.1.1.\r\n  Installing runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.FileExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Memory 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.CommandLine 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Abstractions 2.1.1.\r\n  Installing Microsoft.Net.Http.Headers 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.InMemory 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Ini 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.StaticFiles 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Relational 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Https 2.1.1.\r\n  Installing Microsoft.Extensions.Primitives 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel 2.1.1.\r\n  Installing Microsoft.Extensions.WebEncoders 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebUtilities 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR 1.0.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Tools 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Rewrite 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCompression 2.1.1.\r\n  Installing System.Globalization.Extensions 4.3.0.\r\n  Installing Microsoft.AspNetCore.Razor.Language 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.TagHelpers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Runtime 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.RazorPages 2.1.1.\r\n  Installing Microsoft.AspNetCore.Owin 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.ViewCompilation 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Json 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebSockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Cors 2.1.1.\r\n  Installing System.Diagnostics.DiagnosticSource 4.3.0.\r\n  Installing Microsoft.AspNetCore.Mvc.DataAnnotations 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ApiExplorer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.EventSource 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OAuth 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Json 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Protocols.Json 1.0.1.\r\n  Installing Microsoft.AspNetCore.NodeServices 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.JsonPatch 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization.Routing 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.IISIntegration 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.UI 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HttpOverrides 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Features 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cors 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.Internal 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.KeyDerivation 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HostFiltering 2.1.1.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing Microsoft.AspNetCore.CookiePolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1.\r\n  Installing Microsoft.AspNetCore.Html.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Twitter 2.1.1.\r\n  Installing Microsoft.AspNetCore.Connections.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization.Policy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.HttpSys 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.SqlServer 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.SqlServer 2.1.1.\r\n  Installing Microsoft.AspNet.WebApi.Client 5.2.6.\r\n  Installing Microsoft.AspNetCore.SignalR.Core 1.0.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ViewFeatures 2.1.1.\r\n  Installing Microsoft.CodeAnalysis.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.JwtBearer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OpenIdConnect 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.WsFederation 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore 2.1.1.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Core 2.1.1.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.5.0.\r\n  Installing System.ComponentModel.Annotations 4.5.0.\r\n  Installing System.Buffers 4.5.0.\r\n  Installing System.Memory 4.5.1.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.1.\r\n  Installing System.Text.Encodings.Web 4.5.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Net.WebSockets.WebSocketProtocol 4.5.1.\r\n  Installing Newtonsoft.Json 11.0.2.\r\n  Installing System.IO.Pipelines 4.5.0.\r\n  Installing System.Numerics.Vectors 4.5.0.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Threading.Tasks.Extensions 4.5.1.\r\n  Installing System.Security.Cryptography.Cng 4.5.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Xml 4.5.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing System.Reflection.Metadata 1.6.0.\r\n  Installing System.Data.SqlClient 4.5.1.\r\n  Installing Newtonsoft.Json.Bson 1.0.1.\r\n  Installing Newtonsoft.Json 10.0.1.\r\n  Installing System.Threading.Channels 4.5.0.\r\n  Installing System.Reflection.Emit 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.OpenIdConnect 5.2.0.\r\n  Installing System.IdentityModel.Tokens.Jwt 5.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.WsFederation 5.2.0.\r\n  Installing System.Collections.Immutable 1.5.0.\r\n  Installing Remotion.Linq 2.2.0.\r\n  Installing System.Interactive.Async 3.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing System.Security.Cryptography.Pkcs 4.5.0.\r\n  Installing System.Security.Permissions 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing NETStandard.Library 1.6.1.\r\n  Installing System.Text.Encoding.CodePages 4.5.0.\r\n  Installing System.Linq 4.3.0.\r\n  Installing runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing System.Diagnostics.Debug 4.3.0.\r\n  Installing System.Globalization 4.3.0.\r\n  Installing System.IO 4.3.0.\r\n  Installing System.Collections 4.3.0.\r\n  Installing System.Runtime.Serialization.Primitives 4.3.0.\r\n  Installing System.Runtime.Serialization.Formatters 4.3.0.\r\n  Installing System.Xml.XmlDocument 4.3.0.\r\n  Installing System.Threading 4.3.0.\r\n  Installing System.Resources.ResourceManager 4.3.0.\r\n  Installing System.Text.Encoding.Extensions 4.3.0.\r\n  Installing System.Xml.XDocument 4.3.0.\r\n  Installing System.Threading.Tasks 4.3.0.\r\n  Installing System.Linq.Expressions 4.3.0.\r\n  Installing System.Runtime.Numerics 4.3.0.\r\n  Installing System.Text.Encoding 4.3.0.\r\n  Installing System.Reflection.Extensions 4.3.0.\r\n  Installing System.Text.RegularExpressions 4.3.0.\r\n  Installing System.Runtime.Extensions 4.3.0.\r\n  Installing System.Reflection 4.3.0.\r\n  Installing System.ObjectModel 4.3.0.\r\n  Installing System.Dynamic.Runtime 4.3.0.\r\n  Installing System.Xml.ReaderWriter 4.3.0.\r\n  Installing Microsoft.CSharp 4.3.0.\r\n  Installing System.ComponentModel.TypeConverter 4.3.0.\r\n  Installing System.Runtime 4.3.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.3.0.\r\n  Installing System.Reflection.Primitives 4.3.0.\r\n  Installing System.AppContext 4.3.0.\r\n  Installing System.Console 4.3.0.\r\n  Installing System.Collections.Concurrent 4.3.0.\r\n  Installing System.Diagnostics.Tools 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.3.0.\r\n  Installing System.IO.FileSystem 4.3.0.\r\n  Installing System.IO.FileSystem.Primitives 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.3.0.\r\n  Installing System.Collections.Immutable 1.3.1.\r\n  Installing System.Runtime.InteropServices 4.3.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Diagnostics.StackTrace 4.3.0.\r\n  Installing System.Reflection.Metadata 1.4.2.\r\n  Installing System.Threading.Thread 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.Analyzers 1.1.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.3.0.\r\n  Installing System.ValueTuple 4.3.0.\r\n  Installing System.Diagnostics.FileVersionInfo 4.3.0.\r\n  Installing System.Threading.Tasks.Parallel 4.3.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.3.0.\r\n  Installing System.Xml.XPath.XDocument 4.3.0.\r\n  Installing System.Text.Encoding.CodePages 4.3.0.\r\n  Installing System.Runtime.InteropServices 4.1.0.\r\n  Installing Microsoft.IdentityModel.Protocols 5.2.0.\r\n  Installing Microsoft.IdentityModel.Tokens 5.2.0.\r\n  Installing Microsoft.IdentityModel.Xml 5.2.0.\r\n  Installing System.Diagnostics.Debug 4.0.11.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing Microsoft.IdentityModel.Tokens.Saml 5.2.0.\r\n  Installing System.Runtime.Extensions 4.1.0.\r\n  Installing System.Threading 4.0.11.\r\n  Installing System.Collections 4.0.11.\r\n  Installing System.Reflection 4.1.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.Linq.Queryable 4.0.1.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Runtime 4.1.0.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 2.1.0.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.0.\r\n  Installing runtime.win-x64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-x86.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-arm64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing Microsoft.NETCore.Platforms 1.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.3.0.\r\n  Installing System.Net.Sockets 4.3.0.\r\n  Installing System.Diagnostics.Tracing 4.3.0.\r\n  Installing System.IO.Compression.ZipFile 4.3.0.\r\n  Installing System.Globalization.Calendars 4.3.0.\r\n  Installing System.Threading.Timer 4.3.0.\r\n  Installing System.Security.Cryptography.Primitives 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing System.Runtime.Handles 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.3.0.\r\n  Installing System.Net.Http 4.3.0.\r\n  Installing Microsoft.NETCore.Targets 1.1.0.\r\n  Installing System.Net.Primitives 4.3.0.\r\n  Installing System.Reflection.Emit.Lightweight 4.3.0.\r\n  Installing System.Reflection.TypeExtensions 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.3.0.\r\n  Installing System.ComponentModel 4.3.0.\r\n  Installing System.ComponentModel.Primitives 4.3.0.\r\n  Installing System.Collections.NonGeneric 4.3.0.\r\n  Installing System.Collections.Specialized 4.3.0.\r\n  Installing runtime.native.System 4.3.0.\r\n  Installing runtime.native.System.IO.Compression 4.3.0.\r\n  Installing System.Buffers 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.native.System.Net.Http 4.3.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing System.Security.Cryptography.Cng 4.3.0.\r\n  Installing System.Security.Cryptography.Csp 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing System.Xml.XPath 4.3.0.\r\n  Installing Microsoft.IdentityModel.Logging 5.2.0.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Runtime.Serialization.Xml 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 1.0.1.\r\n  Installing Microsoft.NETCore.Targets 1.0.1.\r\n  Installing System.Security.Claims 4.3.0.\r\n  Installing System.Reflection.Primitives 4.0.1.\r\n  Installing System.IO 4.1.0.\r\n  Installing System.Globalization 4.0.11.\r\n  Installing System.Threading.Tasks 4.0.11.\r\n  Installing System.Resources.ResourceManager 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing System.IO.FileSystem.Primitives 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.IO.FileSystem 4.0.1.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Text.Encoding 4.0.11.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Runtime.Handles 4.0.1.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 44.04 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    1m8.386s\r\nuser    1m8.010s\r\nsys     0m18.190s\r\nroot@9d1d5e45df6a:/# cd mvcapp/\r\nroot@9d1d5e45df6a:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 557.76 ms for /mvcapp/mvcapp.csproj.\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:07.34\r\n\r\nreal    2m11.716s\r\nuser    1m22.990s\r\nsys     0m8.880s\r\nroot@9d1d5e45df6a:/mvcapp#\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/80","RelatedDescription":"Closed issue \"Improving Performance of ARM32 Docker Images with .NET Core Package Cache\" (#80)"},{"Id":"350233220","IsPullRequest":false,"CreatedAt":"2018-08-13T23:50:57","Actor":"richlander","Number":"81","RawContent":null,"Title":"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+","State":"open","Body":"# Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\r\n\r\nAn [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md) was discovered with [.NET Framework 4.7.1](https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/). This issue was resolved earlier this year, with the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/). We recently learned that some applications, including Johnson Controls’ C-CURE 9000 Software, were negatively impacted by this change as this update requires all client and server workstations to be updated simultaneously with the appropriate Microsoft updates. The changes made to .NET Framework 4.7.1 were also integrated into .NET Framework 4.6 and later servicing releases. As a result, this advisory applies to .NET Framework 4.6 and later versions.\r\n\r\nThis advisory is provided so that developers can correctly diagnose this issue and be aware of our guidance. We will continue to update this issue as we have new information to share.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #832](https://github.com/Microsoft/dotnet/issues/832)\r\n\r\n## Guidance\r\n\r\nThis guidance only applies to customers that have experienced this issue.\r\n\r\nWe have released [an update for .NET Framework 4.6](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/) and later that resolves the issue. **You must deploy the .NET Framework update for this issue to all .NET Framework 4.6+ machines that communicate via serialized objects**. After doing that, cross-machine serialization will work as expected. \r\n \r\nPlease consult your software vendor to understand if this impacts the software you are using.\r\n\r\n## Technical Context\r\n\r\nIn the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/), we made a change to the internal type CultureAwareComparer to implement ISerializable. We made the change in order to address [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md).\r\n\r\nThe issue reported was that a type that contains an instance of CultureAwareComparer was not able to correctly serialize and deserialize across different versions of the .NET Framework. There are a few types in .NET Framework that do this, the most commonly impacted one being the Dictionary<TKey, TValue> type.\r\n \r\nThe change to implement the ISerializable interface had unintended side effects when exchanging this type across different machines. We have had a small number of reports from customers who have been affected.\r\n\r\nA common, but not unique way, of exchanging objects across machines is to use WCF in conjunction with a serializer. One of the common serializers being DataContractSerializer. The side-effect of the change prevented data serialized on systems where the type implements ISerializable to correctly deserialize of systems where the type does NOT implement ISerializable. The same is true of the opposite case, that systems where the type does not implement ISerializable will not correctly deserialize data from systems where the type does implement ISerializable.\r\n\r\nWe have an updated fix that we intend to release within the next month that will remove the implementation of the ISerializable interface on the type and use a different internal mechanism for ensuring the cross-version serialization continues to work as expected. This change addresses the break experienced with WCF.\r\n\r\nThe upcoming fix will remove the implementation of the ISerializable interface on the type and use a different mechanism for ensuring the cross-version serialization of that type continues to work. This change addresses the break experienced with WCF.\r\n\r\n## Symptoms\r\n\r\nAn application that is affected by this issue will most likely crash when trying to deserialize an object. It may print or log an error message similar to the following one:\r\n\r\n```\r\nThe formatter threw an exception while trying to deserialize the message: \r\nThere was an error while trying to deserialize parameter . The InnerException message was ''EndElement' 'Comparer' from namespace '' is not expected. Expecting element '_compareInfo'.'.  Please see InnerException for more details.\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/81","RelatedDescription":"Open issue \"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\" (#81)"},{"Id":"348162872","IsPullRequest":false,"CreatedAt":"2018-08-07T04:26:40","Actor":"richlander","Number":"79","RawContent":null,"Title":"August 2018 .NET Updates","State":"open","Body":"# August 2018 .NET Updates\r\n\r\nThe following .NET updates were released in August 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [August 2018 .NET Framework Security and Quality Rollup - August 14, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/)\r\n* [Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+](https://github.com/dotnet/announcements/issues/81)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [August 2018 Preview of Quality Rollup - August 30, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core August 2018 Update - August 21, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.3/2.1.3.md)\r\n* [.NET Core 2.1.400 SDK Update - August 14, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.400-SDK/2.1.400-sdk.md)\r\n\r\n## End of Support for Operating System Versions\r\n\r\n.NET Core does not support systems that are out of support. The following operating systems are now out of support. To stay supported, move to a [later version of the given operating system](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md).\r\n\r\n* [Debian 8 -- Jessie](https://lists.debian.org/debian-security-announce/2018/msg00132.html)\r\n* [Ubuntu 17.10 -- Artful Aardvark](https://lists.ubuntu.com/archives/ubuntu-announce/2018-July/000232.html)\r\n\r\nSee [Debian Jessie End of Life -- Impact on .NET Core Docker Images](https://github.com/dotnet/announcements/issues/78)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/79","RelatedDescription":"Open issue \"August 2018 .NET Updates\" (#79)"},{"Id":"348161534","IsPullRequest":false,"CreatedAt":"2018-08-07T04:18:01","Actor":"richlander","Number":"78","RawContent":null,"Title":"Debian Jessie End of Life -- Impact on .NET Core Docker Images","State":"open","Body":"# Debian Jessie End of Life -- Impact on .NET Core Docker Images\r\n\r\nDebian Jessie (AKA Debian 8) is now [out of support](https://lists.debian.org/debian-security-announce/2018/msg00132.html). Debian Jessie is no longer a supported operating system for .NET Core. Docker users need to switch to Debian Stretch-based (AKA Debian 9) images to stay in support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #647](https://github.com/dotnet/dotnet-docker/issues/647)\r\n\r\n## Context\r\n\r\nJessie-based images are currently provided for .NET Core 1.0, 1.1 and 2.0. .NET Core 1.0 and 1.1 expose multi-arch tags, such as `1.0-runtime` and `1.1-sdk`, that support Debian Jessie. When pulled for a Linux Docker daemon (on Linux or Windows), these tags pull Jessie-based images. .NET Core 2.0 supports Jessie, but it is not the default. .NET Core 2.0 multi-arch tags, such as `2.0-runtime` and `2.0-sdk`, pull Debian Stretch-based images, when pulled for a Linux Docker daemon. We made a conscious decision with .NET Core 2.0 to move off of Jessie as the default to avoid this problem, based the Jessie 2018 EOL date. .NET Core 2.1 does not support Jessie, only Stretch.\r\n\r\nWe recently posted about our policy for underlying operating system dependencies with Docker:\r\n\r\n> For each major and minor .NET version, we may take a new major operating system version dependency. As I mentioned earlier, we adopted Debian 9 as the base image for .NET Core 2.0. We stayed with Debian 9 for .NET Core 2.1, since Debian 10 (AKA “Buster”) has not been released. Debian 9 will remain the default base image for .NET Core 2.1 for the life of .NET Core 2.1. **Once we adopt an underlying operating system major version, we will not change it for the life of that given .NET release.**\r\n\r\nSource: https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/\r\n\r\n## Plan\r\n\r\nWe will continue to re-build .NET Core 1.0 and 1.1 multi-arch tags on top of Jessie for the remaining [supported lifetime of .NET Core 1.0 and 1.1](https://github.com/dotnet/core/blob/master/microsoft-support.md). We will also provide a Stretch-based image for .NET Core 1.1. This tag will look like the following: `1.1-runtime-stretch` or `1.1.9-sdk-stretch`. This is same format that Jessie has used.\r\n\r\nWe will produce Jessie-based images for NET Core 2.0 until October 2018, which is when [.NET Core 2.0 support ends](https://github.com/dotnet/core/blob/master/microsoft-support.md). .NET Core 2.0 multi-arch tags support Debian Stretch, not Jessie, as described above.\r\n\r\nIn summary, .NET Core is no longer supported on Debian Jessie, with Docker or otherwise. We will produce Docker images for Jessie until .NET Core 1.0, 1.1 and 2.0 support ends, respectively, to avoid breaking applications. This aligns with the policy defined above, per [Staying up-to-date with .NET Container Images](https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/).\r\n\r\n## Affected Repos\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)","Url":"https://github.com/dotnet/announcements/issues/78","RelatedDescription":"Open issue \"Debian Jessie End of Life -- Impact on .NET Core Docker Images\" (#78)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1116372533907902465","CreatedAt":"2019-04-11T16:08:47+00:00","UserScreenname":"dotnet","Text":"We're now live! https://t.co/XI2YUBZA88","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":27,"FavoriteCount":11,"RawContent":null},{"Id":"1115751220235231232","CreatedAt":"2019-04-09T22:59:55+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":13,"FavoriteCount":1,"RawContent":null},{"Id":"1115373724868333570","CreatedAt":"2019-04-08T21:59:53+00:00","UserScreenname":"dotnet","Text":"On this week's @aspnet Community Standup, Glenn Condron (@condrong) takes Workers Everywhere!\n\nJoin us on Tuesday A… https://t.co/wo80u0zkOk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":16,"FavoriteCount":13,"RawContent":null},{"Id":"1114554336577609729","CreatedAt":"2019-04-06T15:43:55+00:00","UserScreenname":"dotnet","Text":"Using Windows Installer XML (WiX)? Time to say congrats to @robmen,  @barnson and all the other contributors of… https://t.co/P1rw6S2wGf","Source":"<a href=\"http://twitter.com/#!/download/ipad\" rel=\"nofollow\">Twitter for iPad</a>","RetweetCount":60,"FavoriteCount":14,"RawContent":null},{"Id":"1113832934580948993","CreatedAt":"2019-04-04T15:57:20+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":14,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2019-04-12T05:30:31.8579307Z","RunDurationInMilliseconds":8345}