{"Data":{"Blog":{"FeedItems":[{"Title":"Porting desktop apps to .NET Core","PublishedOn":"2019-05-28T16:00:55+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Since I&#8217;ve been working with the community on porting desktop applications from .NET Framework to .NET Core, I&#8217;ve noticed that there are two camps of folks: some want a very simple and...","Href":"https://devblogs.microsoft.com/dotnet/porting-desktop-apps-to-net-core/","RawContent":null},{"Title":"The F# development home on GitHub is now dotnet/fsharp","PublishedOn":"2019-05-20T18:16:50+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"TL;DR We&#8217;ve moved the F# GitHub repository from microsoft/visualfsharp to dotnet/fsharp, as specified in the corresponding RFC.\nF# has a somewhat strange history in its name and brand. If we...","Href":"https://devblogs.microsoft.com/dotnet/the-f-development-home-on-github-is-now-dotnet-fsharp/","RawContent":null},{"Title":"Create Interactive .NET Documentation with Try .NET","PublishedOn":"2019-05-16T20:01:47+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"When it comes to developers&#8217; documentation, it is essential that we capture their interest and lead them down the path of success as soon as possible. Across multiple languages, developer...","Href":"https://devblogs.microsoft.com/dotnet/creating-interactive-net-documentation/","RawContent":null},{"Title":"Performance Improvements in .NET Core 3.0","PublishedOn":"2019-05-15T19:17:00+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"Back when we were getting ready to ship .NET Core 2.0, I wrote a blog post exploring some of the many performance improvements that had gone into it. I enjoyed putting it together so much and received...","Href":"https://devblogs.microsoft.com/dotnet/performance-improvements-in-net-core-3-0/","RawContent":null},{"Title":"Default implementations in interfaces","PublishedOn":"2019-05-14T23:47:18+00:00","CommentsCount":43,"FacebookCount":0,"Summary":"Default implementations in interfaces\nWith last week&#8217;s posts Announcing .NET Core 3.0 Preview 5 and Visual Studio 2019 version 16.1 Preview 3, the last major feature of C# 8.0 is now available...","Href":"https://devblogs.microsoft.com/dotnet/default-implementations-in-interfaces/","RawContent":null},{"Title":".NET Core May 2019 Updates – 1.0.16, 1.1.14, 2.1.11 and 2.2.5","PublishedOn":"2019-05-14T19:06:45+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core May 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a Visual...","Href":"https://devblogs.microsoft.com/dotnet/net-core-may-2019/","RawContent":null},{"Title":".NET Framework May 2019 Security and Quality Rollup","PublishedOn":"2019-05-14T18:29:22+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the May 2019 Cumulative Update, Security and Quality Rollup, and Security Only Update.\nSecurity\nCVE-2019-0820 – Denial of Service Vulnerability\nA denial of service...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/","RawContent":null},{"Title":"Introducing the new Microsoft.Data.SqlClient","PublishedOn":"2019-05-08T22:05:21+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"This post was written by Vicky Harp, Program Manager on SqlClient and SQL Server Tools.\nThose of you who have been following .NET development closely have very likely seen Scott Hunter&#8217;s latest...","Href":"https://devblogs.microsoft.com/dotnet/introducing-the-new-microsoftdatasqlclient/","RawContent":null},{"Title":"Announcing Entity Framework 6.3 Preview with .NET Core Support","PublishedOn":"2019-05-08T22:00:28+00:00","CommentsCount":37,"FacebookCount":0,"Summary":"The first preview of the EF 6.3 runtime is now available in NuGet.\nNote that the package is versioned as 6.3.0-preview5. We plan to continue releasing previews of EF 6.3 every month in alignment with...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-6-3-preview-with-net-core-support/","RawContent":null},{"Title":"Introducing diagnostics improvements in .NET Core 3.0","PublishedOn":"2019-05-08T16:00:57+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"In .NET Core 3.0, we are introducing a suite of tools that utilize new features in the .NET runtime that make it easier to diagnose and solve performance problems.\nThese runtime features help you...","Href":"https://devblogs.microsoft.com/dotnet/introducing-diagnostics-improvements-in-net-core-3-0/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9596433106","Type":"PullRequestEvent","CreatedAt":"2019-05-09T18:35:22","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Merged pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9583176004","Type":"PullRequestEvent","CreatedAt":"2019-05-08T04:08:41","Actor":"mitchelsellers","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Opened pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9560620210","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:10:38","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Merged pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9560610143","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:41","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Merged pull request \"add links to ML.NET docs\" (#141) at dotnet/foundation","RelatedBody":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects"},{"Id":"9560608015","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:08:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Merged pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9557840000","Type":"PullRequestEvent","CreatedAt":"2019-05-03T12:47:26","Actor":"tomasherceg","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Opened pull request \"Add DotVVM\" (#144) at dotnet/foundation","RelatedBody":"cc @jongalloway "},{"Id":"9523802619","Type":"PullRequestEvent","CreatedAt":"2019-04-27T20:23:58","Actor":"FlorianRappl","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Opened pull request \"Add AngleSharp\" (#143) at dotnet/foundation","RelatedBody":"cc @jongalloway "}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9625371249","Type":"IssuesEvent","CreatedAt":"2019-05-14T19:27:47","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/115","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#115) at dotnet/announcements","RelatedBody":"The following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9625048568","Type":"IssuesEvent","CreatedAt":"2019-05-14T18:38:24","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#114) at dotnet/announcements","RelatedBody":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9624436763","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:06:25","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624425934","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624413462","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9473320861","Type":"IssuesEvent","CreatedAt":"2019-04-19T01:16:11","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Opened issue \"# New images for .NET Framework 4.8\" (#110) at dotnet/announcements","RelatedBody":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK."}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9760299769","Type":"PullRequestEvent","CreatedAt":"2019-06-05T04:42:13","Actor":"kouvel","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24967","RelatedDescription":"Opened pull request \"Add optimization tiers to the Linux perf maps for perfcollect\" (#24967) at dotnet/coreclr","RelatedBody":"Fixes https://github.com/dotnet/coreclr/issues/23222:\r\n- It looks like module unloads are currently not taken into account. Once they would be taken into account, Although we have method JIT events from `lttng` with the code address and optimization tier, samples can only be associated with method JIT events by associating the time range when the module is loaded with times of samples, and the event times from `lttng` would not necessarily correspond with times from samples taken by `perf`.\r\n- Updated to include the optimization tier in the perf map for each jitted or R2R method code address"},{"Id":"9760248075","Type":"IssuesEvent","CreatedAt":"2019-06-05T04:24:22","Actor":"kouvel","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/24966","RelatedDescription":"Opened issue \"[Linux / perfcollect] R2R image perf map offsets don't correspond with offsets collected in perf trace\" (#24966) at dotnet/coreclr","RelatedBody":"I see stacks like this:\r\n\r\n```\r\nName\r\n test.dll!unknown\r\n+ System.Private.CoreLib.dll!unknown\r\n|+ libcoreclr.so!CallDescrWorkerInternal\r\n```\r\n\r\nThis is with test.dll crossgen'ed with R2R. Sometimes it says \"unknown\" and sometimes (often in System.Private.CoreLib), it shows an incorrect method.\r\n\r\ntest.ni.{guid}.map - these are the only methods that show up in the perf trace, and the first two are the lowest offsets in the map:\r\n\r\n```\r\n00028450 147 void [test] PerfViewTierEventsTest::Main()[ReadyToRun]\r\n000285a0 3a void [test] PerfViewTierEventsTest::Run(bool)[ReadyToRun]\r\n...\r\n0002ba80 16 instance void [test] PerfViewTierEventsTest+<>c::<Main>b__0_0()[ReadyToRun]\r\n```\r\n\r\nperf.data.txt - code offsets recorded for test.dll are lower than the lowest entries in test.ni.{guid}.map and don't correspond with methods in the map:\r\n\r\n```\r\n\t          250e7e DelayLoad_MethodCall (/home/kount/temp/dotnet/test/libcoreclr.so)\r\n\t            84ea [unknown] (/home/kount/test/code.r2r/test.dll)\r\n\t          250cbf CallDescrWorkerInternal (/home/kount/temp/dotnet/test/libcoreclr.so)\r\n```\r\n\r\n```\r\n\t            85cf [unknown] (/home/kount/test/code.r2r/test.dll)\r\n\t            ba90 [unknown] (/home/kount/test/code.r2r/test.dll)\r\n```\r\n\r\nLooks like the map is using a different base for calculating the offset than the base being used for code offsets that are collected in the trace."},{"Id":"9760033252","Type":"PullRequestEvent","CreatedAt":"2019-06-05T03:15:14","Actor":"codetriage-readme-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24965","RelatedDescription":"Opened pull request \"Add CodeTriage badge to dotnet/coreclr\" (#24965) at dotnet/coreclr","RelatedBody":"Adds a badge showing the number of people helping this repo on CodeTriage.\n\n[![Open Source Helpers](https://www.codetriage.com/dotnet/coreclr/badges/users.svg)](https://www.codetriage.com/dotnet/coreclr)\n\n\n## What is CodeTriage?\n\nCodeTriage is an Open Source app that is designed to make contributing to Open Source projects easier. It works by sending subscribers a few open issues in their inbox. If subscribers get busy, there is an algorithm that backs off issue load so they do not get overwhelmed\n\n[Read more about the CodeTriage project](https://www.codetriage.com/what).\n\n## Why am I getting this PR?\n\nYour project was picked by the human, @schneems. They selected it from the projects submitted to https://www.codetriage.com and hand edited the PR. How did your project get added to [CodeTriage](https://www.codetriage.com/what)? Roughly about 3 years ago, [cameronjacobson](https://github.com/cameronjacobson) added this project to CodeTriage in order to start contributing. Since then, 87 people have subscribed to help this repo.\n\n## What does adding a badge accomplish?\n\nAdding a badge invites people to help contribute to your project. It also lets developers know that others are invested in the longterm success and maintainability of the project.\n\nYou can see an example of a CodeTriage badge on these popular OSS READMEs:\n\n- [![Email clients like GMAIL do not render SVG images](https://www.codetriage.com/rails/rails/badges/users.svg)](https://www.codetriage.com/rails/rails) https://github.com/rails/rails\n- [![Email clients like GMAIL do not render SVG images](https://www.codetriage.com/crystal-lang/crystal/badges/users.svg)](https://www.codetriage.com/crystal-lang/crystal) https://github.com/crystal-lang/crystal\n\n## Have a question or comment?\n\nWhile I am a bot, this PR was manually reviewed and monitored by a human - @schneems. My job is writing commit messages and handling PR logistics.\n\nIf you have any questions, you can reply back to this PR and they will be answered by @schneems. If you do not want a badge right now, no worries, close the PR, you will not hear from me again.\n\nThanks for making your project Open Source! Any feedback is greatly appreciated."},{"Id":"9759837868","Type":"IssuesEvent","CreatedAt":"2019-06-05T02:18:37","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/20220","RelatedDescription":"Closed issue \"System.TypeLoadException thrown by the Runtime when using structs and generics\" (#20220) at dotnet/coreclr","RelatedBody":"The following snippet of code, when compiled and run as a standalone program, will compile just fine but throw a runtime exception:\r\n```csharp\r\nstruct A\r\n{\r\n    B<A> b;\r\n\r\n    static void Main(string[] args)\r\n    {\r\n        A a = new A();\r\n    }\r\n}\r\n\r\nstruct B<T>\r\n{\r\n    C<T> c;\r\n}\r\n\r\nclass C<T>\r\n{\r\n    T t;\r\n}\r\n```\r\n\r\nException thrown:\r\n`Unhandled Exception: System.TypeLoadException: Could not load type 'A' from assembly 'dotnet, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.`\r\n\r\nI have tested this with the newest public release of .NET Core I could find - `2.2.100-preview2-009404`. \r\n\r\nThe same issue also occurs when building a standard .NET Framework project; I have tested targeting versions `4.5.2` and `4.7.2`. Running the executable produced for .NET with mono (`Mono JIT compiler version 5.14.0 (Visual Studio built mono)`) works just fine - the program prints nothing and exits with code 0.\r\n\r\nThe same problem occurs if similar code is compiled into a DLL that's later loaded as a library. However, this is the minimum repro case I could come up with. Should I separately file a bug for .NET Framework? [This page](https://www.microsoft.com/net/platform/report-a-bug) suggests I should do so, but points to a \"retired\" web page."},{"Id":"9759835988","Type":"PullRequestEvent","CreatedAt":"2019-06-05T02:18:07","Actor":"andy-ms","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24964","RelatedDescription":"Opened pull request \"Always fire join events for an rjoin\" (#24964) at dotnet/coreclr","RelatedBody":"Perviously, there was an additional check\r\n`if (!join_struct.wait_done)` at the beginning of an rjoin.\r\n\r\nThis usually had no effect as the join isn't usually done yet. But if\r\nthread A is the first to enter the join and finishes before thread B\r\nstarts, then B will never enter the `if`.\r\n\r\nThe only effect this had was that B would not fire join events in these\r\nrare cases. (After that we check `join_struct.wait_done` again anyway.)\r\nAs of this PR we will always fire the events, which makes them easier\r\nto analyze consistently.\r\n\r\nBefore this PR, looking at the join events for a single thread would show\r\nno traces of the rjoin happening, except for an extra restart event from\r\nthe other thread."},{"Id":"9759741396","Type":"IssuesEvent","CreatedAt":"2019-06-05T01:50:34","Actor":"kkokosa","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/24963","RelatedDescription":"Opened issue \"Local GC API to support object scanning\" (#24963) at dotnet/coreclr","RelatedBody":"Current GC API to support creating custom GCs is nice but lacks one important feature: possibility to enumerate all the references inside an object.\r\n\r\n`IGCToCLR` interface provides already methods to suspend/restart managed threads and stack root scanning. So we can write the simplest implementation as follows:\r\n\r\n```\r\nScanContext sc;\r\ngcToCLR->SuspendEE(SUSPEND_FOR_GC);\r\ngcToCLR->GcScanRoots(UpsilonGCHeap::MarkReachableRoot, 0, 0, &sc);\r\n// discover other roots\r\ngcToCLR->RestartEE(true);\r\n```\r\n\r\nWhere provided callback is as simple as:\r\n\r\n```\r\nvoid UpsilonGCHeap::MarkReachableRoot(Object** ppObject, ScanContext* sc, uint32_t flags)\r\n{\r\n\tObject* obj = *ppObject;\r\n\tif (obj == nullptr)\r\n\t\treturn;\r\n\tMarkObjectTransitively(obj, sc, flags);\r\n}\r\n\r\nvoid UpsilonGCHeap::MarkObjectTransitively(Object* obj, ScanContext* sc, uint32_t flags)\r\n{\r\n\tif (obj->IsMarked())\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\tobj->SetMarked();\r\n\tMarkOutgoingReferences(obj, UpsilonGCHeap::MarkObjectTransitively);\r\n}\r\n```\r\n\r\nUnfortunately, implementing `MarkOutgoingReferences` from inside custom GC is very tedious and requires implementation-heavy details of the runtime itself. Currently, knowledge about discovering outgoing references from an object is \"hidden\" inside macros like `go_through_object_cl` and `go_through_object`, that depends on quite many macros and types defined inside `gc.cpp` file (like `CObjectHeader`).\r\n\r\nI would love to see in `IGCToCLR` something like:\r\n\r\n```\r\ninline void GcEnumerateReferences(Object* obj, enumerate_func* fn);\r\n```\r\n\r\nwhich uses runtime's knowledge about the object layout and just allows to call a specific callback on each discovered outgoing reference (if any).\r\n\r\nWith the current GC API, I do not imagine any custom GC implementation that so heavily depends on decoding `GCDesc` info. It is deep implementation detail and may change in time. \r\n\r\nI was able to provide such method implementation quite easily by reusing the above-mentioned macro (snippet from `gcenv.ee.cpp` file):\r\n\r\n```\r\nvoid GCToEEInterface::GcEnumerateReferences(Object* obj, enumerate_func* fn)\r\n{\r\n    size_t s = size(obj);\r\n    uint8_t* o = (uint8_t*)obj;\r\n    go_through_object_cl(method_table(o), o, s, poo,\r\n        {\r\n            fn((Object*)*poo);\r\n        }\r\n    );\r\n}\r\n```\r\n\r\nHowever, it required quite a lot of copy-pasting from `gc.cpp`:\r\n* macros: `size`, `go_through_object_cl`, `get_class_object`, `go_through_object_nostart`, `go_through_object`, `method_table`, `header` and `plug_skew`\r\n* inline methods `my_get_size`\r\n\r\nAs none of this code contains GC-related knowledge, where they should be moved to make it reusable both grom `gc.cpp` and `gcenv.ee.cpp`?"},{"Id":"9759684642","Type":"PullRequestEvent","CreatedAt":"2019-06-05T01:33:51","Actor":"AaronRobinsonMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/24878","RelatedDescription":"Merged pull request \"signedness issue in comparison\" (#24878) at dotnet/coreclr","RelatedBody":"@am11 @janvorli @jkotas "},{"Id":"9759594483","Type":"IssuesEvent","CreatedAt":"2019-06-05T01:06:32","Actor":"tommcdon","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15693","RelatedDescription":"Closed issue \"Dotnet 'myApp.dll' hang in lttng running on arm32\" (#15693) at dotnet/coreclr","RelatedBody":"Running a very framework dependent console application with the command 'dotnet myapp.dll' causes a hang running on a simple yocto image on an Rpi3 (arm32)\r\n\r\nRunning dotnet --info produces the expected output of \r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\nbut running any application including a very basic app that simply writes to the console completely hangs with zero output to the terminal.\r\n\r\nRunning with COREHOST_TRACE=1 produces similar output to what is seen running the app on another Linux machine but it hangs before the expected line \"Property TRUSTED_PLATFORM_ASSEMBLIES = ....\"\r\n\r\nThe 'installation' has been from the binary release at [https://dotnetcli.blob.core.windows.net/dotnet/Runtime/2.0.0/dotnet-runtime-2.0.0-linux-arm.tar.gz](url)\r\n\r\nThe final few lines of output before hanging are\r\n\r\n`Considering entry [runtime.linux-arm.Microsoft.NETCore.DotNetHostPolicy/2.0.0/runtimes/linux-arm/native/libhostpolicy.so] and probe dir [/opt/dotnet/shared/Microsoft.NETCore.App/2.0.0]\r\n    Local path query exists /opt/dotnet/shared/Microsoft.NETCore.App/2.0.0/libhostpolicy.so\r\n    Probed deps json and matched '/opt/dotnet/shared/Microsoft.NETCore.App/2.0.0/libhostpolicy.so'\r\nThe resolved JIT path is '/opt/dotnet/shared/Microsoft.NETCore.App/2.0.0/libclrjit.so'\r\nCoreCLR path = '/opt/dotnet/shared/Microsoft.NETCore.App/2.0.0/libcoreclr.so', CoreCLR dir = '/opt/dotnet/shared/Microsoft.NETCore.App/2.0.0/'`\r\n\r\nAt this stage ctrl+c has no effect and the process needs to be killed to recover the terminal\r\n\r\nThe full output is attached along with the application\r\n\r\n[output.txt](https://github.com/dotnet/coreclr/files/1599325/output.txt)\r\n[testApp.zip](https://github.com/dotnet/coreclr/files/1599326/testApp.zip)\r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9760030055","Type":"IssuesEvent","CreatedAt":"2019-06-05T03:14:18","Actor":"YunWeiaa","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/11483","RelatedDescription":"Opened issue \"Hotkey conflict on the runtime installation wizard with Turkish \" (#11483) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n1.Open the runtime installation (.NET core runtime-[3.0.0-preview6-27804-01](https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fdotnetcli.blob.core.windows.net%2Fdotnet%2FRuntime%2Frelease%2F3.0%2Fdotnet-runtime-latest-win-x64.exe&data=02%7C01%7Cv-yunwei%40microsoft.com%7C2074437f22144735d02208d6e9392843%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636952829055574888&sdata=4pd3nSCUhKBt4zhAHtDIiVtgIMgKVJxUoZ9dHyjheGE%3D&reserved=0))\r\n2.Tap \"Alt\" key to observe the hotkey on installation wizard\r\n\r\n## Expected  behavior\r\nHotkeys work fine on the installation wizard\r\n\r\n## Actual behavior\r\nHotkey \"k\" is conflicted on the installation wizard\r\n![image](https://user-images.githubusercontent.com/33921754/58927697-34a15f80-8782-11e9-9540-09eacd1f3f6a.png)\r\n\r\n\r\n## Environment data\r\nwin10-x64 with Turkish \r\ndotnet --info output:\r\n```\r\nIt was not possible to find any installed dotnet SDKs\r\n  Did you mean to run dotnet SDK commands? Please install dotnet SDK from:\r\n      https://aka.ms/dotnet-download\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  fdf81c6faf\r\n\r\n.NET Core SDKs installed:\r\n  No SDKs were found.\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.NETCore.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n```"},{"Id":"9759911068","Type":"PullRequestEvent","CreatedAt":"2019-06-05T02:39:44","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11374","RelatedDescription":"Merged pull request \"add no-self-contained option for dotnet publish\" (#11374) at dotnet/cli","RelatedBody":"This is an attempt to fix #9949\r\n\r\nI am not sure whether the way I have done it is the best way."},{"Id":"9759911056","Type":"IssuesEvent","CreatedAt":"2019-06-05T02:39:44","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9949","RelatedDescription":"Closed issue \"dotnet publish should expose --framework-dependent\" (#9949) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\nPublish using a RID without specifying `--self-contained`:\r\n\r\n```\r\ndotnet publish --runtime win-x86\r\n```\r\n\r\n## Expected  behavior\r\n\r\nYou get a framework-dependent application with an executable to launch.\r\n\r\n## Actual behavior\r\n\r\nYou get a self-contained application.\r\n\r\n## Desired change\r\n\r\nAs soon as `--runtime` is specified, the default for `publish` assumes `--self-contained`. The developer can in fact get a framework dependent application by specifying `--self-contained:false`:\r\n\r\n```\r\ndotnet publish --runtime win-x86 --self-contained:false\r\n```\r\n\r\nHowever passing an explicit value for flag-based options is not intuitive, because it doesn't follow regular conventions for GNU-style options.\r\n\r\nWe don't believe we can change of the default ` --self-contained` when publishing with a RID due to backwards compatibility concerns, so we should at least expose a flag that allows to produce runtime-specific, but framework-dependent outputs without crazy syntax:\r\n\r\n```\r\ndotnet publish --runtime win-x86 --framework-dependent\r\n```\r\n\r\n<details>\r\n <summary>Environment data</summary>\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.401\r\n Commit:    91b1c13032\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.401\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.3-servicing-26724-03\r\n  Commit:  124038c13e\r\n\r\n.NET Core SDKs installed:\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n</details>\r\n"},{"Id":"9759526176","Type":"PullRequestEvent","CreatedAt":"2019-06-05T00:46:00","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/11224","RelatedDescription":"Closed pull request \"[master] Update dependencies from dotnet/clicommandlineparser\" (#11224) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190416.1\r\n- **Date Produced**: 4/17/2019 2:50 AM\r\n- **Commit**: f6ae8481aada66afabb3aa8006b86bbc310b10f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19216.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190416.1\r\n- **Date Produced**: 4/17/2019 2:50 AM\r\n- **Commit**: f6ae8481aada66afabb3aa8006b86bbc310b10f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19216.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190416.1\r\n- **Date Produced**: 4/17/2019 2:50 AM\r\n- **Commit**: f6ae8481aada66afabb3aa8006b86bbc310b10f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19216.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190416.1\r\n- **Date Produced**: 4/17/2019 2:50 AM\r\n- **Commit**: f6ae8481aada66afabb3aa8006b86bbc310b10f1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19216.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n## From https://github.com/dotnet/cliCommandLineParser\r\n- **Build**: 20190425.1\r\n- **Date Produced**: 4/25/2019 8:59 PM\r\n- **Commit**: b788973a620e6db7bc0458d37b449f160e40842f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Cli.CommandLine** -> 1.0.0-preview.19225.1\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9759528118","Type":"PullRequestEvent","CreatedAt":"2019-06-05T00:46:33","Actor":"mmitche","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/pull/1224","RelatedDescription":"Closed pull request \"[master] Update dependencies from dotnet/arcade\" (#1224) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190531.5\r\n- **Date Produced**: 5/31/2019 10:53 PM\r\n- **Commit**: c901850aa1e175c124da771863dacc763743a520\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19281.5\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190601.2\r\n- **Date Produced**: 6/1/2019 1:04 PM\r\n- **Commit**: 8fd0b50b9d689e8d87ab202f11b7c9fbe81271c4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19301.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190602.2\r\n- **Date Produced**: 6/2/2019 1:09 PM\r\n- **Commit**: e6a5d5f970bb872451c6310ae34eda31041fb552\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19302.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.1\r\n- **Date Produced**: 6/4/2019 8:16 AM\r\n- **Commit**: d2599acd9703ef747dfb4329ec3e3beff182e755\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19304.1\r\n\r\n"},{"Id":"9755090866","Type":"PullRequestEvent","CreatedAt":"2019-06-04T13:12:15","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1229","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1229) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190603.11\r\n- **Date Produced**: 6/4/2019 8:34 AM\r\n- **Commit**: 6d5959cbc7d489406f8f85dba0a42f06d4a0ea9b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19303.11\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19303.11\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19303.11\r\n\r\n"},{"Id":"9755010924","Type":"PullRequestEvent","CreatedAt":"2019-06-04T13:01:59","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1229","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1229) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190603.11\r\n- **Date Produced**: 6/4/2019 8:34 AM\r\n- **Commit**: 6d5959cbc7d489406f8f85dba0a42f06d4a0ea9b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19303.11\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19303.11\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19303.11\r\n\r\n"},{"Id":"9750862158","Type":"IssuesEvent","CreatedAt":"2019-06-03T23:00:31","Actor":"wpatter6","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1228","RelatedDescription":"Opened issue \"Hosting environment or server.mappath in .net framework\" (#1228) at dotnet/standard","RelatedBody":"Hi, I'm building a nuget package that will be used in both .NET Framework 4.6.2+ and dotnet core MVC type applications.\r\n\r\nThere is some functionality I'm providing that requires knowing the web root path.  Within the dotnet core world, I'm able to access the hosting environment and get the web root from there. \r\n\r\nBut how can this be done for framework 4.6.2+ applications, without the hosting environment, Server.MapPath or some equivalent?  Is it possible?  \r\n\r\nI'm currently using `Directory.GetCurrentDirectory() + @\"..\\..\\\";` but this is obviously quite hacky and only supports the default hosting configuration.\r\n\r\nThanks"},{"Id":"9747213327","Type":"IssuesEvent","CreatedAt":"2019-06-03T13:58:01","Actor":"llolic","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1214","RelatedDescription":"Closed issue \"System.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.\" (#1214) at dotnet/standard","RelatedBody":"I am getting \"System.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.'\"\r\nI have made an application in vs 2019 that currently just has a textbox, a textblock, and a button. When I run it, the error is shown for the following line: \"rootFrame.Navigate(typeof(MainPage), e.Arguments);\"\r\n\r\nDoes anyone know how to fix this error?"},{"Id":"9746740016","Type":"PullRequestEvent","CreatedAt":"2019-06-03T12:58:58","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1227","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1227) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190603.1\r\n- **Date Produced**: 6/3/2019 10:38 AM\r\n- **Commit**: 0eed4042f056b4d9f6f4d1bf2918e234d67a6f88\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19303.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19303.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19303.1\r\n\r\n"},{"Id":"9746665637","Type":"PullRequestEvent","CreatedAt":"2019-06-03T12:48:51","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1227","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1227) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190603.1\r\n- **Date Produced**: 6/3/2019 10:38 AM\r\n- **Commit**: 0eed4042f056b4d9f6f4d1bf2918e234d67a6f88\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19303.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19303.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19303.1\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9760412664","Type":"IssuesEvent","CreatedAt":"2019-06-05T05:19:49","Actor":"wangleigpt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/38249","RelatedDescription":"Opened issue \"How to add a new oid to the lookup table ?\" (#38249) at dotnet/corefx","RelatedBody":"When i use X509Certificate2 to parse a .cer file which has some oids like \"1.2.156.10197.1.501\",  it returns  \"The OID value is invalid.\"\r\nIs there a way to  add new oids to the lookup table ?\r\nTHANKS!"},{"Id":"9760405828","Type":"IssuesEvent","CreatedAt":"2019-06-05T05:17:31","Actor":"ericstj","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/37978","RelatedDescription":"Closed issue \"System.Printing Support\" (#37978) at dotnet/corefx","RelatedBody":"I was trying to port an API to .NET Core that uses System.Printing PrintServer.  I came across this [doc](https://docs.microsoft.com/en-us/dotnet/api/system.printing.printserver?view=netcore-3.0) and have the impression System.Printing is supported.  Am I missing something?\r\n\r\nI currently have the following installed: 3.0.100-preview5-011568\r\n"},{"Id":"9760318820","Type":"IssuesEvent","CreatedAt":"2019-06-05T04:48:41","Actor":"PedroCavaleiro","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/38248","RelatedDescription":"Opened issue \"ExtendedSocketException: nodename nor servname provided, or not known. \" (#38248) at dotnet/corefx","RelatedBody":"Hi,\r\n\r\nI'm trying to send a mail using MailKit from my WebAPI but keep getting this error\r\nOn .NETCore 3: \r\nExtendedSocketException: nodename nor servname provided, or not known\r\n\r\nAnd on .NetCore 2: \r\nDevice Not Configured\r\n\r\nThis error is what made me test the .NET Core 3\r\nThis is my current system configuration\r\n\r\nOS: macOS Mojave (10.14.5)\r\n.NET Core (SDK): 3.0.100-preview5-011568\r\n.NET Core (Runtime): 3.0.0-preview5-27626-15\r\nVisual Studio for Mac: 8.1 Preview (8.1 build 2460)\r\nConnected to the router by WiFi"},{"Id":"9760294263","Type":"IssuesEvent","CreatedAt":"2019-06-05T04:40:19","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/38247","RelatedDescription":"Closed issue \"Environment.OSVersion\" (#38247) at dotnet/corefx","RelatedBody":"The .NET Core property `Environment.OSVersion` is reporting my Windows 10 Professional PC as being:\r\n\r\n`Microsoft Windows NT 6.2.9200.0`\r\n\r\nI know that software version numbering is bizarre at the best of times, but I'm sure this is wrong.\r\n\r\nThat version corresponds to Windows 8 according to: https://en.wikipedia.org/wiki/List_of_Microsoft_Windows_versions\r\n\r\nIf I run:\r\n\r\n`dotnet --info`\r\n\r\nat the command line, I get:\r\n\r\n````.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.105\r\n Commit:    7cecb35b92\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.105\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.3\r\n  Commit:  6b8ad509b6\r\n\r\n.NET Core SDKs installed:\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.105 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]```"},{"Id":"9760180485","Type":"IssuesEvent","CreatedAt":"2019-06-05T04:01:00","Actor":"amagrath","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/38247","RelatedDescription":"Opened issue \"Environment.OSVersion\" (#38247) at dotnet/corefx","RelatedBody":"The .NET Core property `Environment.OSVersion` is reporting my Windows 10 Professional PC as being:\r\n\r\n`Microsoft Windows NT 6.2.9200.0`\r\n\r\nI know that software version numbering is bizarre at the best of times, but I'm sure this is wrong.\r\n\r\nThat version corresponds to Windows 8 according to: https://en.wikipedia.org/wiki/List_of_Microsoft_Windows_versions\r\n\r\nIf I run:\r\n\r\n`dotnet --info`\r\n\r\nat the command line, I get:\r\n\r\n````.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.105\r\n Commit:    7cecb35b92\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.105\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.3\r\n  Commit:  6b8ad509b6\r\n\r\n.NET Core SDKs installed:\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.105 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]```"},{"Id":"9760101337","Type":"IssuesEvent","CreatedAt":"2019-06-05T03:35:17","Actor":"cromachina","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/38243","RelatedDescription":"Closed issue \"Add Ptr<T>, type safe IntPtr wrapper for marshaling\" (#38243) at dotnet/corefx","RelatedBody":"Typically wrapping native libraries that produce (own) and consume native pointers is done with System.IntPtr. It seems like a better way to match a native interface is to wrap IntPtr in another structure to give it a unique type, `Ptr<T>`. This would be similar to the idea of `SafeHandle` but unmanaged and not for just Windows Handle types. `OpaquePtr<T>` may represent a pointer of unknown implementation (such as a C header only declaring `struct Bar;`), in which case it does not make sense to provide a Read/Write interface, but still have it be distinguishable from other pointers.\r\n\r\nPossible simple implementation and example usage:\r\n```csharp\r\nusing System;\r\nusing System.Runtime.InteropServices;\r\n\r\n[StructLayout(LayoutKind.Sequential)]\r\npublic struct Ptr<T> where T : struct\r\n{\r\n    public IntPtr ptr;\r\n    \r\n    public T Read()\r\n    {\r\n        return Marshal.PtrToStructure<T>(ptr);\r\n    }\r\n    \r\n    public void Write(T t)\r\n    {\r\n        Marshal.StructureToPtr(t, ptr, false);\r\n    }\r\n}\r\n\r\n[StructLayout(LayoutKind.Sequential)]\r\npublic struct OpaquePtr<T> where T : struct\r\n{\r\n    public IntPtr ptr;\r\n}\r\n\r\n[StructLayout(LayoutKind.Sequential)]\r\npublic struct Foo\r\n{\r\n    public double bar;\r\n}\r\n\r\n[StructLayout(LayoutKind.Sequential)]\r\npublic struct Bar\r\n{}\r\n\r\npublic class Bindings\r\n{\r\n    private const string blahLib = \"blah.so\";\r\n    \r\n    [DllImport(blahLib)]\r\n    public static extern Ptr<Foo> createFoo();\r\n    \r\n    [DllImport(blahLib)]\r\n    public static extern void destroyFoo(Ptr<Foo> foo);\r\n    \r\n    [DllImport(blahLib)]\r\n    public static extern void makeFoo(out Ptr<Foo> foo);\r\n\r\n    public static void Main()\r\n    {\r\n        Ptr<Foo> f;\r\n        makeFoo(out f);\r\n        \r\n        Ptr<Foo> g = createFoo();\r\n\r\n        Foo h = f.Read();\r\n        h.bar = 1.0;\r\n        g.Write(h);\r\n        \r\n        // Compiler error.\r\n        // Ptr<Bar> b;\r\n        // destroyFoo(b);\r\n        \r\n        destroyFoo(f);\r\n        destroyFoo(g);\r\n    }\r\n}\r\n```"},{"Id":"9760037764","Type":"PullRequestEvent","CreatedAt":"2019-06-05T03:16:31","Actor":"imcarolwang","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/38246","RelatedDescription":"Opened pull request \"Fix issue38181 and add related test.\" (#38246) at dotnet/corefx","RelatedBody":""},{"Id":"9759983459","Type":"IssuesEvent","CreatedAt":"2019-06-05T03:00:53","Actor":"bauca","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/38245","RelatedDescription":"Opened issue \"AddRange doesn't throw System.InvalidOperationException if a collection was modified.\" (#38245) at dotnet/corefx","RelatedBody":"# AddRange doesn't throw System.InvalidOperationException if a collection was modified.\r\n\r\n\r\n# Environment\r\n\r\nMicrosoft Windows 10 Pro\r\n10.0.17763 N/A Build 17763\r\nVisual Studio Professional 2017 - 15.9.10\r\n**.NET Core 2.2.102**\r\nConsole Application\r\n\r\n# Problem description and repro steps\r\nConsidering the following scenario and classes described:\r\n```c#\r\n    public class MyClass\r\n    {\r\n        public MyClass() { }\r\n\r\n        public Guid Id { get; set; }\r\n        public string Description { get; set; }\r\n    }\r\n```\r\n\r\n```c#\r\n          ///Sample code that adds three items in a List\r\n           var list = new List<MyClass>\r\n            {\r\n                new MyClass { Description = \"Mydesc1\" },\r\n                new MyClass { Description = \"Mydesc2\" },\r\n                new MyClass { Description = \"Mydesc3\" }\r\n            };\r\n           //Creates a new Enumerable with the 2x the number of items in the 'list' object\r\n            var newList = list.Select(o => new MyClass\r\n            {\r\n                Id = Guid.NewGuid(),\r\n                Description = Guid.NewGuid().ToString().Substring(0, 10)\r\n            });\r\n\r\n            //At this moment in the .NET Framework < 4.7.2 an exception of type System.InvalidOperationException is thrown      \r\n           //Due to the fact that the Collection was modified above, however in .NET Core 2.2 the exception is never thrown, even checking the checkbox to break on System.InvalidOperationException\r\n            list.AddRange(newList);\r\n```\r\n\r\n**Found result:**\r\nThe application get stucked in the AddRange operation consuming resources.\r\n\r\n**Expected result:**\r\nAn exception of type System.InvalidOperationException being thrown as in .NET Framework 4.7.2"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9760052912","Type":"IssuesEvent","CreatedAt":"2019-06-05T03:20:51","Actor":"davidhunter22","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/36175","RelatedDescription":"Opened issue \"'CS8629: Nullable value type may be null' reported when it can not be null after HasValue\" (#36175) at dotnet/roslyn","RelatedBody":"This occurs with C# 8\r\n\r\n```\r\npublic struct Foo\r\n{\r\n    int get_value( )\r\n   {\r\n        int? value = get_value_from_somewhere( );\r\n\r\n        // This test will not generate a 'Nullable value type may be null' \r\n        // if( value == null ) return 0;\r\n\r\n        // This test will not generate a 'Nullable value type may be null' \r\n        // if( !value.HasValue ) return 0;\r\n\r\n        // This test will generate a 'Nullable value type may be null' \r\n        if( value.HasValue == false ) return 0;\r\n\r\n        return value.Value; // Warning on this line\r\n    }\r\n\r\n    // In reality do something that may or may not return a value\r\n    int? get_value_from_somewhere( ) => 0; \r\n}\r\n```\r\nI think the last test is simple enough that it should not generate a warning\r\n\r\n"},{"Id":"9760023337","Type":"PullRequestEvent","CreatedAt":"2019-06-05T03:12:26","Actor":"codetriage-readme-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36174","RelatedDescription":"Opened pull request \"Add CodeTriage badge to dotnet/roslyn\" (#36174) at dotnet/roslyn","RelatedBody":"Adds a badge showing the number of people helping this repo on CodeTriage.\n\n[![Open Source Helpers](https://www.codetriage.com/dotnet/roslyn/badges/users.svg)](https://www.codetriage.com/dotnet/roslyn)\n\n\n## What is CodeTriage?\n\nCodeTriage is an Open Source app that is designed to make contributing to Open Source projects easier. It works by sending subscribers a few open issues in their inbox. If subscribers get busy, there is an algorithm that backs off issue load so they do not get overwhelmed\n\n[Read more about the CodeTriage project](https://www.codetriage.com/what).\n\n## Why am I getting this PR?\n\nYour project was picked by the human, @schneems. They selected it from the projects submitted to https://www.codetriage.com and hand edited the PR. How did your project get added to [CodeTriage](https://www.codetriage.com/what)? Roughly about 3 years ago, [The-Q](https://github.com/The-Q) added this project to CodeTriage in order to start contributing. Since then, 266 people have subscribed to help this repo.\n\n## What does adding a badge accomplish?\n\nAdding a badge invites people to help contribute to your project. It also lets developers know that others are invested in the longterm success and maintainability of the project.\n\nYou can see an example of a CodeTriage badge on these popular OSS READMEs:\n\n- [![Email clients like GMAIL do not render SVG images](https://www.codetriage.com/rails/rails/badges/users.svg)](https://www.codetriage.com/rails/rails) https://github.com/rails/rails\n- [![Email clients like GMAIL do not render SVG images](https://www.codetriage.com/crystal-lang/crystal/badges/users.svg)](https://www.codetriage.com/crystal-lang/crystal) https://github.com/crystal-lang/crystal\n\n## Have a question or comment?\n\nWhile I am a bot, this PR was manually reviewed and monitored by a human - @schneems. My job is writing commit messages and handling PR logistics.\n\nIf you have any questions, you can reply back to this PR and they will be answered by @schneems. If you do not want a badge right now, no worries, close the PR, you will not hear from me again.\n\nThanks for making your project Open Source! Any feedback is greatly appreciated."},{"Id":"9759882779","Type":"PullRequestEvent","CreatedAt":"2019-06-05T02:31:30","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36173","RelatedDescription":"Opened pull request \"Fix generate field nullability handling\" (#36173) at dotnet/roslyn","RelatedBody":"\"Fixes\" generate field in that this really just fixes up the rest of the TypeInferrer -- at this point once that was fixed the feature just lit up. Added some basic tests to cover."},{"Id":"9759875265","Type":"IssuesEvent","CreatedAt":"2019-06-05T02:29:27","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/30319","RelatedDescription":"Closed issue \"GenerateMethod isn't aware of nullability\" (#30319) at dotnet/roslyn","RelatedBody":"Also covers GenerateConstructor\r\n\r\n![image](https://user-images.githubusercontent.com/12466233/46497884-a5960f00-c7d0-11e8-8df8-cbfada727a74.png)\r\n\r\n![image](https://user-images.githubusercontent.com/12466233/46498365-12f66f80-c7d2-11e8-8634-5bbc01c3fde8.png)\r\n\r\n\r\nFYI @dpoeschl "},{"Id":"9759872052","Type":"PullRequestEvent","CreatedAt":"2019-06-05T02:28:35","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36049","RelatedDescription":"Merged pull request \"Implement generate method and constructor with top-level nullability tracking wrapper\" (#36049) at dotnet/roslyn","RelatedBody":"This is an implementation of generate method with nullability, which tries to use an _experimental_ approach of creating our own implementation of ITypeSymbol that carries along top-level nullability. This means we can avoid having to change all our internal helpers away from passing around ITypeSymbol and incrementally update the support for the IDE.\r\n\r\nCommit-at-a-time review suggested, since that'll split apart the wrappers themselves along with the actual \"work\" needed to fix the feature."},{"Id":"9759610648","Type":"PullRequestEvent","CreatedAt":"2019-06-05T01:11:39","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36156","RelatedDescription":"Merged pull request \"mark NFW from OOP critical\" (#36156) at dotnet/roslyn","RelatedBody":"currently, whenever OOP throws an exception, we show infobar saying \"restart VS\". whenever that happens, we report NFW. now those NFW will be marked as critical and we will stop reporting NFW after that in VS.\r\n\r\nbasically making critical NFW behavior same as fatal watson in VS. and management will treat critical NFW same as fatal watson.\r\n\r\nalso, now we will show callstack like code fix exception when info bar is shown\r\n\r\n![image](https://user-images.githubusercontent.com/1333179/58910771-3bb96680-86cb-11e9-8eab-bfaa80f60a41.png)\r\n"},{"Id":"9759524901","Type":"PullRequestEvent","CreatedAt":"2019-06-05T00:45:36","Actor":"mmitche","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/34380","RelatedDescription":"Closed pull request \"[master] Update dependencies from dotnet/arcade\" (#34380) at dotnet/roslyn","RelatedBody":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.6\r\n- **Date Produced**: 3/22/2019 4:35 AM\r\n- **Commit**: 2eb45ff0eed6f86f1071b16b11a447cadeeeec59\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.6\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.6\r\n- **Date Produced**: 3/22/2019 4:35 AM\r\n- **Commit**: 2eb45ff0eed6f86f1071b16b11a447cadeeeec59\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.6\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190321.6\r\n- **Date Produced**: 3/22/2019 4:35 AM\r\n- **Commit**: 2eb45ff0eed6f86f1071b16b11a447cadeeeec59\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19171.6\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190325.7\r\n- **Date Produced**: 3/25/2019 8:34 PM\r\n- **Commit**: 002cce7e8e3e043c50acae673741ee3962411e10\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19175.7\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190325.9\r\n- **Date Produced**: 3/25/2019 10:36 PM\r\n- **Commit**: 13daa29185518ef3c6d4074fd07efbc5236a76c5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19175.9\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190326.14\r\n- **Date Produced**: 3/27/2019 12:08 AM\r\n- **Commit**: e23a3e2fd09a6222361ce47b78d23ab42867924c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19176.14\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190327.11\r\n- **Date Produced**: 3/28/2019 1:58 AM\r\n- **Commit**: 69f276904fdd6d8f81404b857f295537894b81d3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19177.11\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.1\r\n- **Date Produced**: 3/29/2019 10:57 AM\r\n- **Commit**: ef139c7533e2e33c5e0946b80cb1aa95d84da868\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.1\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.2\r\n- **Date Produced**: 3/29/2019 1:07 PM\r\n- **Commit**: 31abd61b43b115a6af83c92ce35ed4e8efd01dfd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.2\r\n- **Date Produced**: 3/29/2019 1:07 PM\r\n- **Commit**: 31abd61b43b115a6af83c92ce35ed4e8efd01dfd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190329.2\r\n- **Date Produced**: 3/29/2019 1:07 PM\r\n- **Commit**: 31abd61b43b115a6af83c92ce35ed4e8efd01dfd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19179.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190401.12\r\n- **Date Produced**: 4/2/2019 1:18 AM\r\n- **Commit**: 505e38906e1ee2d032c41bb297de0958307db946\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19201.12\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190402.13\r\n- **Date Produced**: 4/3/2019 12:44 AM\r\n- **Commit**: 764f362c8e92e41905fe5f6c782ab9980c86c909\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19202.13\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190403.10\r\n- **Date Produced**: 4/4/2019 1:43 AM\r\n- **Commit**: 811fda44a88dcfe3e42a17bb34467f5764836c65\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19203.10\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190404.16\r\n- **Date Produced**: 4/5/2019 3:36 AM\r\n- **Commit**: 61196044ed70a65c610beb230ac6ea77566668c2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19204.16\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190405.6\r\n- **Date Produced**: 4/5/2019 11:26 PM\r\n- **Commit**: 4217db4a23ffd15abb3771d635b66162994fb9e4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19205.6\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190406.5\r\n- **Date Produced**: 4/6/2019 5:35 PM\r\n- **Commit**: 9d8abf998866f10bc19d97e1916ff1c0ada3fd42\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19206.5\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9759245775","Type":"PullRequestEvent","CreatedAt":"2019-06-04T23:26:43","Actor":"tannergooding","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7486","RelatedDescription":"Merged pull request \"Updating MicrosoftNetCompilersToolsetVersion to 3.2.0-beta3-19304-07\" (#7486) at dotnet/corert","RelatedBody":"CC. @dotnet/nullablefc\r\n\r\nCoreRT side for https://github.com/dotnet/arcade/pull/2946 and https://github.com/dotnet/buildtools/pull/2257"},{"Id":"9758787306","Type":"IssuesEvent","CreatedAt":"2019-06-04T21:43:22","Actor":"timmydo","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7487","RelatedDescription":"Opened issue \"Process crashes on Linux when catching a null pointer exception from managed code\" (#7487) at dotnet/corert","RelatedBody":"I have a program that does something like this:\r\n\r\n```\r\n        static void Main(string[] args)\r\n        {\r\n            // this loads a corert native library\r\n            var blah= NativeMethods.DoSomething(IntPtr.Zero, IntPtr.Zero, 10_000);\r\n            try\r\n            {\r\n                string x = null;\r\n                Console.WriteLine($\"{x.Length}\");\r\n            }\r\n            catch (System.Exception)\r\n            {\r\n            }\r\n            Console.WriteLine(\"done\");\r\n        }\r\n```\r\n\r\nwhen the null pointer exception is thrown, the corert sigsegv handler is invoked. https://github.com/dotnet/corert/blob/635cf21aca11265ded9d78d216424bd609c052f5/src/Native/Runtime/unix/HardwareExceptions.cpp#L582\r\n\r\nAround L582, the processess crashes with sigabort:\r\n\r\n```\r\ndotnet TestConsoleApp.dll\r\n*** stack smashing detected ***: dotnet terminated\r\n======= Backtrace: =========\r\n/lib/x86_64-linux-gnu/libc.so.6(+0x70bfb)[0x7fe006ea4bfb]\r\n/lib/x86_64-linux-gnu/libc.so.6(__fortify_fail+0x37)[0x7fe006f2d437]\r\n/lib/x86_64-linux-gnu/libc.so.6(__fortify_fail+0x0)[0x7fe006f2d400]\r\n/root/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.2.4/runtimes/linux-x64/native/libcoreclr.so(+0x4e15c7)[0x7fe00656b5c7]\r\n```\r\n"},{"Id":"9758571298","Type":"PullRequestEvent","CreatedAt":"2019-06-04T21:05:55","Actor":"tannergooding","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7486","RelatedDescription":"Opened pull request \"Updating MicrosoftNetCompilersToolsetVersion to 3.2.0-beta3-19304-07\" (#7486) at dotnet/corert","RelatedBody":"CC. @dotnet/nullablefc\r\n\r\nCoreRT side for https://github.com/dotnet/arcade/pull/2946 and https://github.com/dotnet/buildtools/pull/2257"},{"Id":"9757714887","Type":"PullRequestEvent","CreatedAt":"2019-06-04T18:54:04","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7484","RelatedDescription":"Merged pull request \"Avoid custom attributes when resolving lazy pinvokes\" (#7484) at dotnet/corert","RelatedBody":"We already know the DllImportSearchPath wasn't specified in the assembly - no point in looking for the custom attribute.\r\n\r\nThe custom attribute lookup was failing when reflection is disabled."},{"Id":"9757713190","Type":"PullRequestEvent","CreatedAt":"2019-06-04T18:53:49","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7485","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7485) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @adamsitnik @Youssef1313"},{"Id":"9756985253","Type":"PullRequestEvent","CreatedAt":"2019-06-04T17:04:18","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7485","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7485) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9756607137","Type":"PullRequestEvent","CreatedAt":"2019-06-04T16:10:01","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7484","RelatedDescription":"Opened pull request \"Avoid custom attributes when resolving lazy pinvokes\" (#7484) at dotnet/corert","RelatedBody":"We already know the DllImportSearchPath wasn't specified in the assembly - no point in looking for the custom attribute.\r\n\r\nThe custom attribute lookup was failing when reflection is disabled."},{"Id":"9755203862","Type":"PullRequestEvent","CreatedAt":"2019-06-04T13:26:05","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7483","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7483) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"},{"Id":"9754583005","Type":"IssuesEvent","CreatedAt":"2019-06-04T12:01:15","Actor":"lukaszorg","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7468","RelatedDescription":"Closed issue \"Cannot build app package due to nutc_driver.exe 1.7.6 out of memory error \" (#7468) at dotnet/corert","RelatedBody":"Creating an App Package for publication in the store results in the following errors:\r\n\r\nError: NUTC300F:Internal Compiler Error: Native compilation failed due to out of memory error <our>.App\r\nError ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\1.7.6\\tools\\x64\\ilc\\Tools\\nutc_driver.exe @\"C:\\Users\\myself\\<path>\\<to>\\<our>.App\\obj\\x64\\Release\\ilc\\intermediate\\MDIL\\<our>.App.rsp\"' returned exit code 1 <our>.App\r\n\r\nWe are targeting Surface Hub (Creators Update 1703) so we cannot use newer version of microsoft.net.native.compiler.  \r\nWe have found not documented parameter for nutc_driver (/d2threads1) that helps building the solution on local machines. \r\nIs there any way to pass this flag on build agents? \r\nAre there any other workarounds?\r\n"},{"Id":"9752445257","Type":"PullRequestEvent","CreatedAt":"2019-06-04T06:28:15","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7482","RelatedDescription":"Merged pull request \"CPAOT: token context cleanup in JIT interface\" (#7482) at dotnet/corert","RelatedBody":"One of the remaining debts in CPAOT I noticed during my recent\r\ninvestigations was the notion of input module token context. This\r\nis just wrong in the presence of inlining as we may never presume\r\nthat a token originated in the input module. This simple change\r\nchanges token resolution to resolve token context modules based on\r\nthe token scope instead.\r\n\r\nWith this change we no longer need to create a dictionary of\r\nper-module CorInfoImpl instances so that we can get by with just\r\na singleton; this is the gist of the additional cleanup in\r\nReadyToRunCodegenCompilation.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9750377451","Type":"PullRequestEvent","CreatedAt":"2019-06-03T21:21:44","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7483","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7483) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9750346848","Type":"PullRequestEvent","CreatedAt":"2019-06-03T21:16:28","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7481","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7481) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding"},{"Id":"9750023220","Type":"PullRequestEvent","CreatedAt":"2019-06-03T20:30:41","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7482","RelatedDescription":"Opened pull request \"CPAOT: token context cleanup in JIT interface\" (#7482) at dotnet/corert","RelatedBody":"One of the remaining debts in CPAOT I noticed during my recent\r\ninvestigations was the notion of input module token context. This\r\nis just wrong in the presence of inlining as we may never presume\r\nthat a token originated in the input module. This simple change\r\nchanges token resolution to resolve token context modules based on\r\nthe token scope instead.\r\n\r\nWith this change we no longer need to create a dictionary of\r\nper-module CorInfoImpl instances so that we can get by with just\r\na singleton; this is the gist of the additional cleanup in\r\nReadyToRunCodegenCompilation.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"9749737301","Type":"PullRequestEvent","CreatedAt":"2019-06-03T19:46:24","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7480","RelatedDescription":"Merged pull request \"Merge nmirror to master\" (#7480) at dotnet/corert","RelatedBody":"I guess we could also do a cherry pick. I mostly want to get ebc91d6 into master."},{"Id":"9749572093","Type":"PullRequestEvent","CreatedAt":"2019-06-03T19:19:47","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7481","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7481) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9749091398","Type":"PullRequestEvent","CreatedAt":"2019-06-03T18:05:02","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7480","RelatedDescription":"Opened pull request \"Merge nmirror to master\" (#7480) at dotnet/corert","RelatedBody":"I guess we could also do a cherry pick. I mostly want to get ebc91d6 into master."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9758767591","Type":"IssuesEvent","CreatedAt":"2019-06-04T21:39:38","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3044","RelatedDescription":"Reopened issue \"Restore fails if netstandard1.x package reference is present\" (#3044) at dotnet/sdk","RelatedBody":"SDK version: 3.0.100-preview4-010963\r\n\r\nrepro:\r\n- clone https://github.com/RssBandit/RssBandit\r\n- cd source/RssBandit\r\n- dotnet restore\r\n\r\n\r\n```\r\n  Persisting no-op dg to C:\\dev\\RssBandit\\source\\ChildProjects\\IEControl\\obj\\IEControl.csproj.nuget.dgspec.json\r\n  Persisting no-op dg to C:\\dev\\RssBandit\\source\\RssBandit.AppServices\\obj\\RssBandit.AppServices.csproj.nuget.dgspec.json\r\n  Persisting no-op dg to C:\\dev\\RssBandit\\source\\NewsComponents\\obj\\NewsComponents.csproj.nuget.dgspec.json\r\n  Persisting no-op dg to C:\\dev\\RssBandit\\source\\RssBandit\\obj\\RssBandit.csproj.nuget.dgspec.json\r\n  Restore completed in 22.85 ms for C:\\dev\\RssBandit\\source\\RssBandit.AppServices\\RssBandit.AppServices.csproj.\r\n  Restore completed in 22.83 ms for C:\\dev\\RssBandit\\source\\ChildProjects\\IEControl\\IEControl.csproj.\r\n  Restore completed in 26.1 ms for C:\\dev\\RssBandit\\source\\NewsComponents\\NewsComponents.csproj.\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.InteropServices from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Console 4.0.0 -> runtime.win.System.Console 4.3.0 -> System.Runtime.InteropServices (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.InteropServices (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.Extensions from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.IO.FileSystem 4.0.1 -> runtime.win.System.IO.FileSystem 4.3.0 -> System.Runtime.Extensions (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.Extensions (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.InteropServices from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.IO.FileSystem 4.0.1 -> runtime.win.System.IO.FileSystem 4.3.0 -> System.Runtime.InteropServices (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.InteropServices (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.IO.FileSystem from 4.3.0 to 4.0.1. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.Sockets 4.1.0 -> runtime.win.System.Net.Sockets 4.3.0 -> System.IO.FileSystem (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.IO.FileSystem (>= 4.0.1)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Net.NameResolution from 4.3.0 to 4.0.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.Sockets 4.1.0 -> runtime.win.System.Net.Sockets 4.3.0 -> System.Net.NameResolution (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.NameResolution (>= 4.0.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Net.Primitives from 4.3.0 to 4.0.11. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.Sockets 4.1.0 -> runtime.win.System.Net.Sockets 4.3.0 -> System.Net.Primitives (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.Sockets 4.1.0 -> System.Net.Primitives (>= 4.0.11)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.Extensions from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.Sockets 4.1.0 -> runtime.win.System.Net.Sockets 4.3.0 -> System.Runtime.Extensions (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.Extensions (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.InteropServices from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.Sockets 4.1.0 -> runtime.win.System.Net.Sockets 4.3.0 -> System.Runtime.InteropServices (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.InteropServices (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.InteropServices from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Diagnostics.Process 4.1.0 -> Microsoft.Win32.Primitives 4.0.1 -> runtime.win.Microsoft.Win32.Primitives 4.3.0 -> System.Runtime.InteropServices (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.InteropServices (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.InteropServices from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.IO.FileSystem.Watcher 4.0.0 -> Microsoft.Win32.Primitives 4.0.1 -> runtime.win.Microsoft.Win32.Primitives 4.3.0 -> System.Runtime.InteropServices (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.InteropServices (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.Extensions from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.NameResolution 4.0.0 -> System.Net.Primitives 4.0.11 -> runtime.win.System.Net.Primitives 4.3.0 -> System.Runtime.Extensions (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.Extensions (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.InteropServices from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.NameResolution 4.0.0 -> System.Net.Primitives 4.0.11 -> runtime.win.System.Net.Primitives 4.3.0 -> System.Runtime.InteropServices (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.InteropServices (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.Extensions from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.Requests 4.0.11 -> System.Net.Primitives 4.0.11 -> runtime.win.System.Net.Primitives 4.3.0 -> System.Runtime.Extensions (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.Extensions (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.InteropServices from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.Requests 4.0.11 -> System.Net.Primitives 4.0.11 -> runtime.win.System.Net.Primitives 4.3.0 -> System.Runtime.InteropServices (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.InteropServices (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.Extensions from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.Sockets 4.1.0 -> System.Net.Primitives 4.0.11 -> runtime.win.System.Net.Primitives 4.3.0 -> System.Runtime.Extensions (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.Extensions (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.InteropServices from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.Sockets 4.1.0 -> System.Net.Primitives 4.0.11 -> runtime.win.System.Net.Primitives 4.3.0 -> System.Runtime.InteropServices (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.InteropServices (>= 4.1.0)\r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605: Detected package downgrade: System.Runtime.InteropServices from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Net.NameResolution 4.0.0 -> System.Security.Principal.Windows 4.0.0 -> Microsoft.Win32.Primitives 4.0.1 -> runtime.win.Microsoft.Win32.Primitives 4.3.0 -> System.Runtime.InteropServices (>= 4.3.0) \r\nC:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj : error NU1605:  RssBandit -> NewsComponents -> log4net 2.0.8 -> System.Runtime.InteropServices (>= 4.1.0)\r\n  Restore failed in 467.8 ms for C:\\dev\\RssBandit\\source\\RssBandit\\RssBandit.csproj.\r\n\r\n```\r\n\r\n"},{"Id":"9758647469","Type":"PullRequestEvent","CreatedAt":"2019-06-04T21:18:26","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3289","RelatedDescription":"Merged pull request \"Adding ResolveReferences target to PublishItemsOutputGroup dependencies\" (#3289) at dotnet/sdk","RelatedBody":"This is needed in order for this output group to contain output from referenced projects."}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"452312341","IsPullRequest":true,"CreatedAt":"2019-06-05T04:42:13","Actor":"kouvel","Number":"24967","RawContent":null,"Title":"Add optimization tiers to the Linux perf maps for perfcollect","State":"open","Body":"Fixes https://github.com/dotnet/coreclr/issues/23222:\r\n- It looks like module unloads are currently not taken into account. Once they would be taken into account, Although we have method JIT events from `lttng` with the code address and optimization tier, samples can only be associated with method JIT events by associating the time range when the module is loaded with times of samples, and the event times from `lttng` would not necessarily correspond with times from samples taken by `perf`.\r\n- Updated to include the optimization tier in the perf map for each jitted or R2R method code address","Url":"https://github.com/dotnet/coreclr/pull/24967","RelatedDescription":"Open PR \"Add optimization tiers to the Linux perf maps for perfcollect\" (#24967)"},{"Id":"452309083","IsPullRequest":false,"CreatedAt":"2019-06-05T04:24:22","Actor":"kouvel","Number":"24966","RawContent":null,"Title":"[Linux / perfcollect] R2R image perf map offsets don't correspond with offsets collected in perf trace","State":"open","Body":"I see stacks like this:\r\n\r\n```\r\nName\r\n test.dll!unknown\r\n+ System.Private.CoreLib.dll!unknown\r\n|+ libcoreclr.so!CallDescrWorkerInternal\r\n```\r\n\r\nThis is with test.dll crossgen'ed with R2R. Sometimes it says \"unknown\" and sometimes (often in System.Private.CoreLib), it shows an incorrect method.\r\n\r\ntest.ni.{guid}.map - these are the only methods that show up in the perf trace, and the first two are the lowest offsets in the map:\r\n\r\n```\r\n00028450 147 void [test] PerfViewTierEventsTest::Main()[ReadyToRun]\r\n000285a0 3a void [test] PerfViewTierEventsTest::Run(bool)[ReadyToRun]\r\n...\r\n0002ba80 16 instance void [test] PerfViewTierEventsTest+<>c::<Main>b__0_0()[ReadyToRun]\r\n```\r\n\r\nperf.data.txt - code offsets recorded for test.dll are lower than the lowest entries in test.ni.{guid}.map and don't correspond with methods in the map:\r\n\r\n```\r\n\t          250e7e DelayLoad_MethodCall (/home/kount/temp/dotnet/test/libcoreclr.so)\r\n\t            84ea [unknown] (/home/kount/test/code.r2r/test.dll)\r\n\t          250cbf CallDescrWorkerInternal (/home/kount/temp/dotnet/test/libcoreclr.so)\r\n```\r\n\r\n```\r\n\t            85cf [unknown] (/home/kount/test/code.r2r/test.dll)\r\n\t            ba90 [unknown] (/home/kount/test/code.r2r/test.dll)\r\n```\r\n\r\nLooks like the map is using a different base for calculating the offset than the base being used for code offsets that are collected in the trace.","Url":"https://github.com/dotnet/coreclr/issues/24966","RelatedDescription":"Open issue \"[Linux / perfcollect] R2R image perf map offsets don't correspond with offsets collected in perf trace\" (#24966)"},{"Id":"452296576","IsPullRequest":true,"CreatedAt":"2019-06-05T03:15:14","Actor":"codetriage-readme-bot","Number":"24965","RawContent":null,"Title":"Add CodeTriage badge to dotnet/coreclr","State":"open","Body":"Adds a badge showing the number of people helping this repo on CodeTriage.\n\n[![Open Source Helpers](https://www.codetriage.com/dotnet/coreclr/badges/users.svg)](https://www.codetriage.com/dotnet/coreclr)\n\n\n## What is CodeTriage?\n\nCodeTriage is an Open Source app that is designed to make contributing to Open Source projects easier. It works by sending subscribers a few open issues in their inbox. If subscribers get busy, there is an algorithm that backs off issue load so they do not get overwhelmed\n\n[Read more about the CodeTriage project](https://www.codetriage.com/what).\n\n## Why am I getting this PR?\n\nYour project was picked by the human, @schneems. They selected it from the projects submitted to https://www.codetriage.com and hand edited the PR. How did your project get added to [CodeTriage](https://www.codetriage.com/what)? Roughly about 3 years ago, [cameronjacobson](https://github.com/cameronjacobson) added this project to CodeTriage in order to start contributing. Since then, 87 people have subscribed to help this repo.\n\n## What does adding a badge accomplish?\n\nAdding a badge invites people to help contribute to your project. It also lets developers know that others are invested in the longterm success and maintainability of the project.\n\nYou can see an example of a CodeTriage badge on these popular OSS READMEs:\n\n- [![Email clients like GMAIL do not render SVG images](https://www.codetriage.com/rails/rails/badges/users.svg)](https://www.codetriage.com/rails/rails) https://github.com/rails/rails\n- [![Email clients like GMAIL do not render SVG images](https://www.codetriage.com/crystal-lang/crystal/badges/users.svg)](https://www.codetriage.com/crystal-lang/crystal) https://github.com/crystal-lang/crystal\n\n## Have a question or comment?\n\nWhile I am a bot, this PR was manually reviewed and monitored by a human - @schneems. My job is writing commit messages and handling PR logistics.\n\nIf you have any questions, you can reply back to this PR and they will be answered by @schneems. If you do not want a badge right now, no worries, close the PR, you will not hear from me again.\n\nThanks for making your project Open Source! Any feedback is greatly appreciated.","Url":"https://github.com/dotnet/coreclr/pull/24965","RelatedDescription":"Open PR \"Add CodeTriage badge to dotnet/coreclr\" (#24965)"},{"Id":"452285332","IsPullRequest":true,"CreatedAt":"2019-06-05T02:18:06","Actor":"andy-ms","Number":"24964","RawContent":null,"Title":"Always fire join events for an rjoin","State":"open","Body":"Perviously, there was an additional check\r\n`if (!join_struct.wait_done)` at the beginning of an rjoin.\r\n\r\nThis usually had no effect as the join isn't usually done yet. But if\r\nthread A is the first to enter the join and finishes before thread B\r\nstarts, then B will never enter the `if`.\r\n\r\nThe only effect this had was that B would not fire join events in these\r\nrare cases. (After that we check `join_struct.wait_done` again anyway.)\r\nAs of this PR we will always fire the events, which makes them easier\r\nto analyze consistently.\r\n\r\nBefore this PR, looking at the join events for a single thread would show\r\nno traces of the rjoin happening, except for an extra restart event from\r\nthe other thread.\r\n\r\nView diff with [`?w=1`](https://github.com/dotnet/coreclr/pull/24964/files?w=1)","Url":"https://github.com/dotnet/coreclr/pull/24964","RelatedDescription":"Open PR \"Always fire join events for an rjoin\" (#24964)"},{"Id":"452279902","IsPullRequest":false,"CreatedAt":"2019-06-05T01:50:34","Actor":"kkokosa","Number":"24963","RawContent":null,"Title":"Local GC API to support object scanning","State":"open","Body":"Current GC API to support creating custom GCs is nice but lacks one important feature: possibility to enumerate all the references inside an object.\r\n\r\n`IGCToCLR` interface provides already methods to suspend/restart managed threads and stack root scanning. So we can write the simplest implementation as follows:\r\n\r\n```\r\nScanContext sc;\r\ngcToCLR->SuspendEE(SUSPEND_FOR_GC);\r\ngcToCLR->GcScanRoots(UpsilonGCHeap::MarkReachableRoot, 0, 0, &sc);\r\n// discover other roots\r\ngcToCLR->RestartEE(true);\r\n```\r\n\r\nWhere provided callback is as simple as:\r\n\r\n```\r\nvoid UpsilonGCHeap::MarkReachableRoot(Object** ppObject, ScanContext* sc, uint32_t flags)\r\n{\r\n\tObject* obj = *ppObject;\r\n\tif (obj == nullptr)\r\n\t\treturn;\r\n\tMarkObjectTransitively(obj, sc, flags);\r\n}\r\n\r\nvoid UpsilonGCHeap::MarkObjectTransitively(Object* obj, ScanContext* sc, uint32_t flags)\r\n{\r\n\tif (obj->IsMarked())\r\n\t{\r\n\t\treturn;\r\n\t}\r\n\tobj->SetMarked();\r\n\tMarkOutgoingReferences(obj, UpsilonGCHeap::MarkObjectTransitively);\r\n}\r\n```\r\n\r\nUnfortunately, implementing `MarkOutgoingReferences` from inside custom GC is very tedious and requires implementation-heavy details of the runtime itself. Currently, knowledge about discovering outgoing references from an object is \"hidden\" inside macros like `go_through_object_cl` and `go_through_object`, that depends on quite many macros and types defined inside `gc.cpp` file (like `CObjectHeader`).\r\n\r\nI would love to see in `IGCToCLR` something like:\r\n\r\n```\r\ninline void GcEnumerateReferences(Object* obj, enumerate_func* fn);\r\n```\r\n\r\nwhich uses runtime's knowledge about the object layout and just allows to call a specific callback on each discovered outgoing reference (if any).\r\n\r\nWith the current GC API, I do not imagine any custom GC implementation that so heavily depends on decoding `GCDesc` info. It is deep implementation detail and may change in time. \r\n\r\nI was able to provide such method implementation quite easily by reusing the above-mentioned macro (snippet from `gcenv.ee.cpp` file):\r\n\r\n```\r\nvoid GCToEEInterface::GcEnumerateReferences(Object* obj, enumerate_func* fn)\r\n{\r\n    size_t s = size(obj);\r\n    uint8_t* o = (uint8_t*)obj;\r\n    go_through_object_cl(method_table(o), o, s, poo,\r\n        {\r\n            fn((Object*)*poo);\r\n        }\r\n    );\r\n}\r\n```\r\n\r\nHowever, it required quite a lot of copy-pasting from `gc.cpp`:\r\n* macros: `size`, `go_through_object_cl`, `get_class_object`, `go_through_object_nostart`, `go_through_object`, `method_table`, `header` and `plug_skew`\r\n* inline methods `my_get_size`\r\n\r\nAs none of this code contains GC-related knowledge, where they should be moved to make it reusable both grom `gc.cpp` and `gcenv.ee.cpp`?","Url":"https://github.com/dotnet/coreclr/issues/24963","RelatedDescription":"Open issue \"Local GC API to support object scanning\" (#24963)"},{"Id":"452270033","IsPullRequest":true,"CreatedAt":"2019-06-05T01:00:34","Actor":"BruceForstall","Number":"24962","RawContent":null,"Title":"Improve corefx testing","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24962","RelatedDescription":"Open PR \"Improve corefx testing\" (#24962)"},{"Id":"452226817","IsPullRequest":true,"CreatedAt":"2019-06-05T00:09:31","Actor":"safern","Number":"24958","RawContent":null,"Title":"Remove stale Task async extension methods from TaskExtensions","State":"closed","Body":"While re-generating System.Threading.Tasks reference source against implementation I noticed these APIs were showing on both TaskExtensions and TaskAsyncEnumerableExtensions, then found the TODO comment.\r\n\r\ncc: @stephentoub @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/24958","RelatedDescription":"Closed or merged PR \"Remove stale Task async extension methods from TaskExtensions\" (#24958)"},{"Id":"452257345","IsPullRequest":true,"CreatedAt":"2019-06-04T23:57:37","Actor":"fadimounir","Number":"24961","RawContent":null,"Title":"Add R2R outerloop test mode without any stress modes","State":"open","Body":"@sandreenko PTAL. Is this the right way of adding an R2R test mode without any stress mode?","Url":"https://github.com/dotnet/coreclr/pull/24961","RelatedDescription":"Open PR \"Add R2R outerloop test mode without any stress modes\" (#24961)"},{"Id":"452254450","IsPullRequest":true,"CreatedAt":"2019-06-04T23:42:45","Actor":"jkoritzinsky","Number":"24960","RawContent":null,"Title":"Resolve Windows 10 Kits dir via the registry.","State":"open","Body":"Resolve the Windows 10 SDK location via the registry to support contributors who don't install the Windows 10 SDK in the default location.\r\n\r\nFixes #24828 ","Url":"https://github.com/dotnet/coreclr/pull/24960","RelatedDescription":"Open PR \"Resolve Windows 10 Kits dir via the registry.\" (#24960)"},{"Id":"451746150","IsPullRequest":true,"CreatedAt":"2019-06-04T23:27:56","Actor":"safern","Number":"24938","RawContent":null,"Title":"Remove Collection<T> range APIs","State":"closed","Body":"Removing these APIs from 3.0 based on discussion here: https://github.com/dotnet/corefx/issues/10752#issuecomment-498404073\r\n\r\nWe will be willing to just revert this PR or re implement these APIs for .NET 5 with a better investigation of what can break and how to actually tackle this problem by working closely with WPF in order to break people the least.\r\n\r\ncc: @karelz @robertmclaws @ahoefling @danmosemsft @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/24938","RelatedDescription":"Closed or merged PR \"Remove Collection<T> range APIs\" (#24938)"},{"Id":"452251256","IsPullRequest":true,"CreatedAt":"2019-06-04T23:27:55","Actor":"jkoritzinsky","Number":"24959","RawContent":null,"Title":"Add test verifying reliable SafeHandle unmarshalling","State":"open","Body":"Add test ensuring we correctly unmarshal a SafeHandle even when the stub throws an exception.\r\n\r\nRemove the SafeHandles/ReleaseHandle test that didn't actually test anything about releasing. It was testing reliable unmarshalling. A bug in the test caused an intermittent break on Nano. Removing the test fixes #24799.","Url":"https://github.com/dotnet/coreclr/pull/24959","RelatedDescription":"Open PR \"Add test verifying reliable SafeHandle unmarshalling\" (#24959)"},{"Id":"452103311","IsPullRequest":true,"CreatedAt":"2019-06-04T22:38:48","Actor":"jkotas","Number":"24951","RawContent":null,"Title":"Synchronize managed and unmanaged Variant fields","State":"closed","Body":"Fixes #24948","Url":"https://github.com/dotnet/coreclr/pull/24951","RelatedDescription":"Closed or merged PR \"Synchronize managed and unmanaged Variant fields\" (#24951)"},{"Id":"452047894","IsPullRequest":false,"CreatedAt":"2019-06-04T22:38:48","Actor":"svick","Number":"24948","RawContent":null,"Title":"Debug Error: stack was corrupted in olevariant.cpp","State":"closed","Body":"When executing `tests\\runtest.cmd`, I encountered a Debug Error in the ConsumeNETServer test.\r\n\r\nWhat I did to reproduce it:\r\n\r\n1. `set CORE_ROOT=C:\\code\\coreclr\\bin\\tests\\Windows_NT.x64.Debug\\Tests\\Core_Root`\r\n2. `C:\\code\\coreclr\\bin\\tests\\Windows_NT.x64.Debug\\Interop\\COM\\NETClients\\ConsumeNETServer\\ConsumeNETServer\\ConsumeNETServer.cmd`\r\n\r\nThis displays:\r\n\r\n![](https://user-images.githubusercontent.com/287848/58889917-f22c4400-86e9-11e9-92b7-d0a3768d6db2.png)\r\n\r\nOutput:\r\n\r\n```\r\nBEGIN EXECUTION\r\nCopying 'C:\\code\\coreclr\\bin\\tests\\Windows_NT.x64.Debug\\Tests\\Core_Root\\CoreShim.dll'...\r\n        1 file(s) copied.\r\n \"C:\\code\\coreclr\\bin\\tests\\Windows_NT.x64.Debug\\Tests\\Core_Root\\corerun.exe\" ConsumeNETServer.exe\r\nValidate_Activation...\r\nValidate_CCW_Wasnt_Unwrapped...\r\nValidate_Client_CCW_RCW...\r\nExpected: 100\r\nActual: 3\r\nEND EXECUTION - FAILED\r\n```\r\n\r\ncc: @jkotas","Url":"https://github.com/dotnet/coreclr/issues/24948","RelatedDescription":"Closed issue \"Debug Error: stack was corrupted in olevariant.cpp\" (#24948)"},{"Id":"452148048","IsPullRequest":true,"CreatedAt":"2019-06-04T21:48:14","Actor":"cshung","Number":"24955","RawContent":null,"Title":"Make sure we can enable auto-trace when the root level define is added","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24955","RelatedDescription":"Closed or merged PR \"Make sure we can enable auto-trace when the root level define is added\" (#24955)"},{"Id":"452221529","IsPullRequest":true,"CreatedAt":"2019-06-04T21:43:19","Actor":"sandreenko","Number":"24957","RawContent":null,"Title":"Small fixes around AST nodes.","State":"open","Body":"Fixes `MEASURE_NODE_SIZE` and its output (for `GT_INDEX_ADDR`) + fix several comments.","Url":"https://github.com/dotnet/coreclr/pull/24957","RelatedDescription":"Open PR \"Small fixes around AST nodes.\" (#24957)"},{"Id":"452119394","IsPullRequest":true,"CreatedAt":"2019-06-04T20:17:52","Actor":"cshung","Number":"24952","RawContent":null,"Title":"EventPipe fixes","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24952","RelatedDescription":"Closed or merged PR \"EventPipe fixes\" (#24952)"},{"Id":"452180170","IsPullRequest":false,"CreatedAt":"2019-06-04T19:59:10","Actor":"stephentoub","Number":"24956","RawContent":null,"Title":"PLINQ test hit SEHException on Ubuntu ARM64","State":"open","Body":"https://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fpull~2F38211~2Fmerge/test~2Ffunctional~2Fcli~2Finnerloop~2F/20190604.1/workItem/System.Linq.Parallel.Tests/wilogs\r\n```\r\n  Discovering: System.Linq.Parallel.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Linq.Parallel.Tests (found 320 of 1188 test cases)\r\n  Starting:    System.Linq.Parallel.Tests (parallel test collections = on, max threads = 46)\r\nSystem.Runtime.InteropServices.SEHException (0x80004005): External component has thrown an exception.\r\n   at System.Linq.Parallel.Lookup`2+<GetEnumerator>d__10[[System.Int32, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].System.Collections.Generic.IEnumerator<System.Linq.IGrouping<TKey,TElement>>.get_Current()\r\n   at System.Collections.Generic.LargeArrayBuilder`1[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].AddRange(System.Collections.Generic.IEnumerable`1<System.__Canon>)\r\n   at System.Collections.Generic.EnumerableHelpers.ToArray[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.Collections.Generic.IEnumerable`1<System.__Canon>)\r\n   at Xunit.Assert.All[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]](System.Collections.Generic.IEnumerable`1<System.__Canon>, System.Action`1<System.__Canon>)\r\n   at System.Linq.Parallel.Tests.ToLookupTests.ToLookup(Int32)\r\n   at System.Linq.Parallel.Tests.ToLookupTests.ToLookup_Longrunning()\r\n```","Url":"https://github.com/dotnet/coreclr/issues/24956","RelatedDescription":"Open issue \"PLINQ test hit SEHException on Ubuntu ARM64\" (#24956)"},{"Id":"452094321","IsPullRequest":true,"CreatedAt":"2019-06-04T18:49:52","Actor":"jkoritzinsky","Number":"24949","RawContent":null,"Title":"Fix PGO on Windows","State":"closed","Body":"Fixes #24900 ","Url":"https://github.com/dotnet/coreclr/pull/24949","RelatedDescription":"Closed or merged PR \"Fix PGO on Windows\" (#24949)"},{"Id":"452139965","IsPullRequest":true,"CreatedAt":"2019-06-04T18:21:00","Actor":"dotnet-maestro-bot","Number":"24954","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"open","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @jashook\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/24954","RelatedDescription":"Open PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#24954)"},{"Id":"452136189","IsPullRequest":false,"CreatedAt":"2019-06-04T18:11:38","Actor":"CarolEidt","Number":"24953","RawContent":null,"Title":"Zero-length cpblk or initblk should be removed","State":"open","Body":"See Issue #24846 and PRs #24871 and #24950 (and test case JIT/Regression/JitBlue/GitHub_24846).\r\nThe zero-length cpblk could be removed by `Lowering`, but it will need to take care not to remove any side-effects.","Url":"https://github.com/dotnet/coreclr/issues/24953","RelatedDescription":"Open issue \"Zero-length cpblk or initblk should be removed\" (#24953)"},{"Id":"452100887","IsPullRequest":true,"CreatedAt":"2019-06-04T16:46:23","Actor":"CarolEidt","Number":"24950","RawContent":null,"Title":"Cleanup block stores and test for 24846","State":"open","Body":"Fix zero-length assert/bad codegen for initblk.\r\nRemove redundant assertions in codegen and those that don't directly relate to codegen requirements.\r\nRemove zero-length block store in `Lowering`.\r\nEliminate redundant LEA that was being generated by `genCodeForCpBlk`.\r\nRename `genCodeFor[Cp|Init]Blk` to `genCodeFor[Cp|Init]BlkHelper` to parallel the other forms.\r\nFix the test case for #24846.","Url":"https://github.com/dotnet/coreclr/pull/24950","RelatedDescription":"Open PR \"Cleanup block stores and test for 24846\" (#24950)"},{"Id":"451905485","IsPullRequest":true,"CreatedAt":"2019-06-04T15:28:02","Actor":"ComeWithMe","Number":"24942","RawContent":null,"Title":"Update Nullable.cs","State":"closed","Body":"replace \"\" with string.Empty.","Url":"https://github.com/dotnet/coreclr/pull/24942","RelatedDescription":"Closed or merged PR \"Update Nullable.cs\" (#24942)"},{"Id":"451966531","IsPullRequest":true,"CreatedAt":"2019-06-04T15:16:54","Actor":"dotnet-maestro[bot]","Number":"24944","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.1\r\n- **Date Produced**: 6/4/2019 8:16 AM\r\n- **Commit**: d2599acd9703ef747dfb4329ec3e3beff182e755\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19304.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19304.1\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/24944","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#24944)"},{"Id":"451974008","IsPullRequest":true,"CreatedAt":"2019-06-04T15:16:39","Actor":"dotnet-maestro[bot]","Number":"24945","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190603.11\r\n- **Date Produced**: 6/4/2019 4:02 AM\r\n- **Commit**: c113140681cdb8224dffc2da8df3e2f9bcbdc4a0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27803-11\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/24945","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#24945)"},{"Id":"452037350","IsPullRequest":false,"CreatedAt":"2019-06-04T14:41:04","Actor":"leecow","Number":"24947","RawContent":null,"Title":"Review and update THIRD-PARTY-NOTICES.TXT for 3.0","State":"open","Body":"Review and update repo THIRD-PARTY-NOTICES.TXT as appropriate. Work should be completed for Preview 7.","Url":"https://github.com/dotnet/coreclr/issues/24947","RelatedDescription":"Open issue \"Review and update THIRD-PARTY-NOTICES.TXT for 3.0\" (#24947)"},{"Id":"451923923","IsPullRequest":false,"CreatedAt":"2019-06-04T10:42:10","Actor":"spacelg","Number":"24943","RawContent":null,"Title":"CoreCLR failed to build due to error MSB3073 with MSVC on windows","State":"open","Body":"We tried to build CoreCLR and it failed to build due to error MSB3073 with MSVC on windows. It can be first reproduced on fa8383f revision. It should be a CoreCLR source issue. Could you look at this issue? Thanks a lot.\r\n\r\nRepro steps:\r\n1.git clone https://github.com/dotnet/coreclr D:\\CoreCLR\\src\r\n2.Open a clean x86 prompt and browse to D:\\CoreCLR\\src\r\n3.build x86 release -- /clp:ShowCommandLine\r\n\r\n[log_x86_build.log](https://github.com/dotnet/coreclr/files/3251912/log_x86_build.log)\r\n\r\n\r\nError info:\r\nERROR: An error occured when trying to initialize the tools. \r\nD:\\CoreCLR\\src\\.dotnet\\sdk\\3.0.100-preview6-011681\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(148,5): error NETSDK1032: The RuntimeIdentifier platform 'win-x64' and the PlatformTarget 'x86' must be compatible. [D:\\CoreCLR\\src\\Tools\\ilasm\\ilasm.depproj]\r\nD:\\CoreCLR\\src\\Tools\\IL.targets(49,5): error MSB3073: The command \"D:\\CoreCLR\\src\\Tools\\\\ilasm\\\\ilasm -QUIET -NOLOGO -OPTIMIZE -DLL  -OUTPUT=D:\\CoreCLR\\src\\bin\\tests\\obj\\Windows_NT.x86.Release\\Managed\\Interop\\COM\\NETServer\\NETServer.DefaultInterfaces\\NETServer.DefaultInterfaces.dll  NETServer.DefaultInterfaces.il\" exited with code 9009.\r\n\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/24943","RelatedDescription":"Open issue \"CoreCLR failed to build due to error MSB3073 with MSVC on windows\" (#24943)"},{"Id":"451792250","IsPullRequest":true,"CreatedAt":"2019-06-04T04:28:02","Actor":"Maoni0","Number":"24941","RawContent":null,"Title":"fix doc for stress run instructions","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/24941","RelatedDescription":"Closed or merged PR \"fix doc for stress run instructions\" (#24941)"},{"Id":"451757018","IsPullRequest":false,"CreatedAt":"2019-06-04T01:34:21","Actor":"echesakovMSFT","Number":"24940","RawContent":null,"Title":"Assertion failed 'rn != nullptr' in 'System.Runtime.Intrinsics.Vector256:AsByte(struct):struct'","State":"open","Body":"Could be repro with `COMPlus_NGenDisasm=System.Runtime.Intrinsics.Vector256:AsByte(struct):struct` when crossgen-ing System.Private.CoreLib.dll with Hostx64/arm64 crossgen\r\n\r\n```\r\nAssert failure(PID 1360944 [0x0014c430], Thread: 1342116 [0x147aa4]): Assertion failed 'rn != nullptr' in 'System.Runtime.Intrinsics.Vector256:AsByte(struct):struct' (IL size 7)\r\n\r\n    File: d:\\git\\coreclr1\\src\\jit\\emitarm64.cpp Line: 1211\r\n    Image: D:\\git\\coreclr1\\bin\\Product\\Windows_NT.arm64.Checked\\x64\\crossgen.exe\r\n```\r\nStack trace\r\n```\r\n>\tclrjit.dll!emitter::emitRegName(_regNumber_enum reg, emitAttr size, bool varName) Line 1214\tC++\r\n \tclrjit.dll!emitter::emitDispIns(emitter::instrDesc * id, bool isNew, bool doffs, bool asmfm, unsigned int offset, unsigned char * pCode, unsigned __int64 sz, insGroup * ig) Line 11491\tC++\r\n \tclrjit.dll!emitter::dispIns(emitter::instrDesc * id) Line 1240\tC++\r\n \tclrjit.dll!emitter::emitIns_Call(emitter::EmitCallType callType, CORINFO_METHOD_STRUCT_ * methHnd, CORINFO_SIG_INFO * sigInfo, void * addr, __int64 argSize, emitAttr retSize, emitAttr secondRetSize, unsigned __int64 * const & ptrVars, unsigned __int64 gcrefRegs, unsigned __int64 byrefRegs, unsigned int ilOffset, _regNumber_enum ireg, _regNumber_enum xreg, unsigned int xmul, __int64 disp, bool isJump) Line 7532\tC++\r\n \tclrjit.dll!CodeGen::genEmitCall(int callType, CORINFO_METHOD_STRUCT_ * methHnd, CORINFO_SIG_INFO * sigInfo, void * addr, emitAttr retSize, emitAttr secondRetSize, unsigned int ilOffset, _regNumber_enum base, bool isJump) Line 2006\tC++\r\n \tclrjit.dll!CodeGen::genCallInstruction(GenTreeCall * call) Line 2528\tC++\r\n \tclrjit.dll!CodeGen::genCodeForTreeNode(GenTree * treeNode) Line 428\tC++\r\n \tclrjit.dll!CodeGen::genCodeForBBlist() Line 438\tC++\r\n \tclrjit.dll!CodeGen::genGenerateCode(void * * codePtr, unsigned long * nativeSizeOfCode) Line 2150\tC++\r\n \tclrjit.dll!Compiler::compCompile(void * * methodCodePtr, unsigned long * methodCodeSize, JitFlags * compileFlags) Line 4822\tC++\r\n \tclrjit.dll!Compiler::compCompileHelper(CORINFO_MODULE_STRUCT_ * classPtr, ICorJitInfo * compHnd, CORINFO_METHOD_INFO * methodInfo, void * * methodCodePtr, unsigned long * methodCodeSize, JitFlags * compileFlags, CorInfoInstantiationVerification instVerInfo) Line 6026\tC++\r\n \t[Inline Frame] clrjit.dll!Compiler::compCompile::__l50::__Body::Run(Compiler::compCompile::__l2::__JITParam *) Line 5367\tC++\r\n \tclrjit.dll!Compiler::compCompile(CORINFO_METHOD_STRUCT_ * methodHnd, CORINFO_MODULE_STRUCT_ * classPtr, ICorJitInfo * compHnd, CORINFO_METHOD_INFO * methodInfo, void * * methodCodePtr, unsigned long * methodCodeSize, JitFlags * compileFlags) Line 5371\tC++\r\n \t[Inline Frame] clrjit.dll!jitNativeCode::__l8::__Body::Run::__l6::__Body::Run(jitNativeCode::__l8::__Body::Run::__l5::__JITParam *) Line 6663\tC++\r\n \tclrjit.dll!`jitNativeCode'::`8'::__Body::Run(jitNativeCode::__l2::__JITParam * __JITpParam) Line 6667\tC++\r\n \tclrjit.dll!jitNativeCode(CORINFO_METHOD_STRUCT_ * methodHnd, CORINFO_MODULE_STRUCT_ * classPtr, ICorJitInfo * compHnd, CORINFO_METHOD_INFO * methodInfo, void * * methodCodePtr, unsigned long * methodCodeSize, JitFlags * compileFlags, void * inlineInfoPtr) Line 6691\tC++\r\n \tclrjit.dll!CILJit::compileMethod(ICorJitInfo * compHnd, CORINFO_METHOD_INFO * methodInfo, unsigned int flags, unsigned char * * entryAddress, unsigned long * nativeSizeOfCode) Line 319\tC++\r\n \tcrossgen.exe!ZapInfo::CompileMethod() Line 500\tC++\r\n \tcrossgen.exe!ZapImage::TryCompileMethodWorker(CORINFO_METHOD_STRUCT_ * handle, unsigned int md, unsigned int methodProfilingDataFlags) Line 2146\tC++\r\n \tcrossgen.exe!ZapImage::TryCompileMethodDef(unsigned int md, unsigned int methodProfilingDataFlags) Line 1967\tC++\r\n \tcrossgen.exe!ZapImage::CompileColdRegion() Line 1742\tC++\r\n \tcrossgen.exe!ZapImage::Compile() Line 1802\tC++\r\n \tcrossgen.exe!Zapper::CompileModule(CORINFO_MODULE_STRUCT_ * hModule, IMetaDataAssemblyEmit * pAssemblyEmit) Line 1474\tC++\r\n \tcrossgen.exe!Zapper::CompileAssembly(_GUID * pNativeImageSig) Line 1360\tC++\r\n \tcrossgen.exe!Zapper::CompileInCurrentDomain(const wchar_t * string, _GUID * pNativeImageSig) Line 1093\tC++\r\n \tcrossgen.exe!Zapper::Compile(const wchar_t * string, _GUID * pNativeImageSig) Line 1023\tC++\r\n \tcrossgen.exe!NGenWorker(const wchar_t * pwzFilename, unsigned long dwFlags, const wchar_t * pwzPlatformAssembliesPaths, const wchar_t * pwzTrustedPlatformAssemblies, const wchar_t * pwzPlatformResourceRoots, const wchar_t * pwzAppPaths, const wchar_t * pwzOutputFilename, const wchar_t * pwzPlatformWinmdPaths, ICorSvcLogger * pLogger, const wchar_t * pwszCLRJITPath) Line 122\tC++\r\n \tcrossgen.exe!wmain(int argc, wchar_t * * argv) Line 933\tC++\r\n```\r\n\r\nreg=REG_R2\r\nsize=EA_16BYTE\r\n\r\n@dotnet/jit-contrib \r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/24940","RelatedDescription":"Open issue \"Assertion failed 'rn != nullptr' in 'System.Runtime.Intrinsics.Vector256:AsByte(struct):struct'\" (#24940)"},{"Id":"451752817","IsPullRequest":true,"CreatedAt":"2019-06-04T01:13:08","Actor":"tommcdon","Number":"24939","RawContent":null,"Title":"Store ARM volatile registers when populating RegDisplay","State":"open","Body":"This fixes AV's in the GC caused by ARM32 volatile registers not being populated correctly \r\n\r\nThe customer that reported the issue is validating the fix","Url":"https://github.com/dotnet/coreclr/pull/24939","RelatedDescription":"Open PR \"Store ARM volatile registers when populating RegDisplay\" (#24939)"},{"Id":"451743091","IsPullRequest":true,"CreatedAt":"2019-06-04T00:21:14","Actor":"safern","Number":"24937","RawContent":null,"Title":"Fix some nullable annotations from API Review","State":"open","Body":"I fixed the annotations that we found out were wrong during API Reviews and also enabled CS8609 (covariant overriden return type) globally and disabled in places where we intentionally are overriding with a different return type.\r\n\r\nAlso, fixed some annotations in MethodInfo based on an offline conversation with @jkotas \r\n\r\nHere are the notes from the review: https://github.com/dotnet/apireviews/blob/b2a7fcaf18d92267cf41258205e55ad0dd1b2a41/2019/System.Runtime-Nullable/README.md","Url":"https://github.com/dotnet/coreclr/pull/24937","RelatedDescription":"Open PR \"Fix some nullable annotations from API Review\" (#24937)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"452296379","IsPullRequest":false,"CreatedAt":"2019-06-05T03:14:18","Actor":"YunWeiaa","Number":"11483","RawContent":null,"Title":"Hotkey conflict on the runtime installation wizard with Turkish ","State":"open","Body":"## Steps to reproduce\r\n1.Open the runtime installation (.NET core runtime-[3.0.0-preview6-27804-01](https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fdotnetcli.blob.core.windows.net%2Fdotnet%2FRuntime%2Frelease%2F3.0%2Fdotnet-runtime-latest-win-x64.exe&data=02%7C01%7Cv-yunwei%40microsoft.com%7C2074437f22144735d02208d6e9392843%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636952829055574888&sdata=4pd3nSCUhKBt4zhAHtDIiVtgIMgKVJxUoZ9dHyjheGE%3D&reserved=0))\r\n2.Tap \"Alt\" key to observe the hotkey on installation wizard\r\n\r\n## Expected  behavior\r\nHotkeys work fine on the installation wizard\r\n\r\n## Actual behavior\r\nHotkey \"k\" is conflicted on the installation wizard\r\n![image](https://user-images.githubusercontent.com/33921754/58927697-34a15f80-8782-11e9-9540-09eacd1f3f6a.png)\r\n\r\n\r\n## Environment data\r\nwin10-x64 with Turkish \r\n","Url":"https://github.com/dotnet/cli/issues/11483","RelatedDescription":"Open issue \"Hotkey conflict on the runtime installation wizard with Turkish \" (#11483)"},{"Id":"452255633","IsPullRequest":false,"CreatedAt":"2019-06-04T23:48:49","Actor":"wli3","Number":"11482","RawContent":null,"Title":"ToolManifestEditor should catch FormatException ","State":"open","Body":"https://github.com/dotnet/cli/blob/8ab442a668e63d902d03715b84f0764a92ee13eb/src/dotnet/ToolManifest/ToolManifestEditor.cs#L218-L223\r\n\r\nThe TryGetInt32Value API could throw FormatException if the JSON payload had \"version\" property with a non-int32 value (like double - e.g. 1.23 or (u)int64 - e.g. 4294967296).\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11482","RelatedDescription":"Open issue \"ToolManifestEditor should catch FormatException \" (#11482)"},{"Id":"452226944","IsPullRequest":true,"CreatedAt":"2019-06-04T23:12:22","Actor":"nguerrera","Number":"11481","RawContent":null,"Title":"Remove dotnet migrate","State":"closed","Body":"`dotnet migrate` will not be supported in .NET Core SDK 3.0.100+\r\n\r\nThis removes it.\r\n\r\nFix https://github.com/dotnet/cli/issues/11458","Url":"https://github.com/dotnet/cli/pull/11481","RelatedDescription":"Closed or merged PR \"Remove dotnet migrate\" (#11481)"},{"Id":"451003970","IsPullRequest":false,"CreatedAt":"2019-06-04T23:12:22","Actor":"nguerrera","Number":"11458","RawContent":null,"Title":"Source-Build: Eliminate Microsoft.DotNet.Cli.Utils prebuilt from cli-migrate","State":"closed","Body":"cli-migrate   Prebuilts: |   |   |\r\n-- | -- | --\r\n**Package** | **Version** | **Status**\r\nMicrosoft.DotNet.Cli.Utils | 1.0.1 | Use Source Built Version \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11458","RelatedDescription":"Closed issue \"Source-Build: Eliminate Microsoft.DotNet.Cli.Utils prebuilt from cli-migrate\" (#11458)"},{"Id":"451958308","IsPullRequest":true,"CreatedAt":"2019-06-04T22:45:27","Actor":"dotnet-maestro[bot]","Number":"11476","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190603.5\r\n- **Date Produced**: 6/4/2019 4:11 AM\r\n- **Commit**: 69d51538bdbdb03c758b924f887a6f596e590c7d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19303.5\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11476","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11476)"},{"Id":"451004262","IsPullRequest":false,"CreatedAt":"2019-06-04T20:05:26","Actor":"nguerrera","Number":"11459","RawContent":null,"Title":"Source-Build: Eliminate DotNetHostResolver from core-sdk","State":"closed","Body":"Core-sdk   Prebuilts: |   |   |\r\n-- | -- | --\r\n**Package** | **Version** | **Status** |   |  \r\nruntime.win-x64.Microsoft.NETCore.DotNetHostResolver | 3.0.0-preview4-27615-11 | Exclude from Source-build  \r\nruntime.win-x86.Microsoft.NETCore.DotNetHostResolver | 3.0.0-preview4-27615-11 | Exclude from Source-build  \r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11459","RelatedDescription":"Closed issue \"Source-Build: Eliminate DotNetHostResolver from core-sdk\" (#11459)"},{"Id":"451004832","IsPullRequest":false,"CreatedAt":"2019-06-04T19:36:49","Actor":"nguerrera","Number":"11460","RawContent":null,"Title":"Source-Build: Remove System.Data.SqlClient prebuilt from toolset","State":"closed","Body":"Package | Version | Status  \r\n -- | -- | --\r\nSystem.Data.SqlClient |\t4.3.0 | |\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11460","RelatedDescription":"Closed issue \"Source-Build: Remove System.Data.SqlClient prebuilt from toolset\" (#11460)"},{"Id":"452139304","IsPullRequest":false,"CreatedAt":"2019-06-04T18:19:23","Actor":"spartanroger","Number":"11480","RawContent":null,"Title":"Support custom scripts","State":"open","Body":"My project has some micro-services written with DotNet Core C# and we have some scripts that we use very often and are very long to remind, so we have to put them in a README.MD file and copy every time, which isn't very productive.\r\n\r\nExample: \r\n\r\n```\r\ndotnet test --no-build /p:CollectCoverage=true /p:Exclude=\\\"[Crosscutting.*]*,[xunit.*]*\\\" /p:CoverletOutputFormat=cobertura /p:CoverletOutput='../'\r\n```\r\n\r\nAnd would be very nice if we could just have a JSON file in the project root folder and add some shortcuts. Just like npm-scripts (but without installing anything other than dotnet cli).\r\n\r\n```\r\n{\r\ntests: dotnet test --no-build /p:CollectCoverage=true /p:Exclude=\\\"[Crosscutting.*]*,[xunit.*]*,[*]*.Models*,[*]*.DTO*\\\" /\r\n}\r\n```","Url":"https://github.com/dotnet/cli/issues/11480","RelatedDescription":"Open issue \"Support custom scripts\" (#11480)"},{"Id":"451654883","IsPullRequest":true,"CreatedAt":"2019-06-04T17:11:08","Actor":"dotnet-maestro[bot]","Number":"11474","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190603.1\r\n- **Date Produced**: 6/3/2019 7:39 PM\r\n- **Commit**: 9a92095d8ad0112291573385dc8f67adfdfe9322\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19303.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11474","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#11474)"},{"Id":"452107950","IsPullRequest":false,"CreatedAt":"2019-06-04T17:03:34","Actor":"ardove","Number":"11479","RawContent":null,"Title":"dotnet global tool exe product version should match product version of dll","State":"open","Body":"## Steps to reproduce\r\n* Create a dotnet global tool\r\n* In the assembly properties of the csproj specify the version to be 0.0.1\r\n* Install the global tool on a windows host\r\n* Inspect the executable generated by installation in C:\\Users\\<userName>\\.dotnet\\tools\r\n\r\n## Expected  behavior\r\nProduct version should be 0.0.1 and file version should be 0.0.1.0\r\n\r\n## Actual behavior\r\nProduct version and file version are blank\r\n\r\n## Environment data\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview5-011568\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview5-011568 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11479","RelatedDescription":"Open issue \"dotnet global tool exe product version should match product version of dll\" (#11479)"},{"Id":"452087196","IsPullRequest":false,"CreatedAt":"2019-06-04T16:14:42","Actor":"ardove","Number":"11478","RawContent":null,"Title":"dotnet tool install/uninstall should support post-install/uninstall action","State":"open","Body":"In dotnet templates, you can run a set of specific, standardized actions or even a custom script after a template is executed. It'd be great if the dotnet tool install supported something similar as part of the distributed nuget package. \r\n\r\nA good use case for this is that we have a dotnet global tool which uses a specific set of templates. It supports a command to install/update the templates, but it means that any user of the CLI needs to either have already installed the template via the dotnet cli or installed the global tool and run the update/install command. \r\n\r\nFurthermore, when troubleshooting our global tool, I think a user would be confused if they ran a dotnet tool uninstall and there were still leftover artifacts (even if those artifacts are just dependencies). \r\n\r\n## Environment data\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview5-011568\r\n Commit:    b487ff10aa\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview5-011568\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview5-27626-15\r\n  Commit:  61f30f5a23\r\n\r\n.NET Core SDKs installed:\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview5-011568 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspN                                                                       etCore.All]\r\n  Microsoft.AspNetCore.All 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.All]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspN                                                                       etCore.App]\r\n  Microsoft.AspNetCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNe                                                                       tCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview5-19227-01 [C:\\Program Files\\dotnet\\shar                                                                       ed\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared                                                                       \\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore                                                                       .App]\r\n  Microsoft.NETCore.App 2.2.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.                                                                       App]\r\n  Microsoft.NETCore.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\shared\\                                                                       Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview5-27626-15 [C:\\Program Files\\dotnet\\                                                                       shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11478","RelatedDescription":"Open issue \"dotnet tool install/uninstall should support post-install/uninstall action\" (#11478)"},{"Id":"451961368","IsPullRequest":true,"CreatedAt":"2019-06-04T12:49:48","Actor":"dotnet-maestro[bot]","Number":"11477","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190603.1\r\n- **Date Produced**: 6/3/2019 1:06 PM\r\n- **Commit**: a59c4747634fcbfa08493b7348ad9ba07b5599dc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19303.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11477","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11477)"},{"Id":"451958119","IsPullRequest":true,"CreatedAt":"2019-06-04T12:42:09","Actor":"dotnet-maestro[bot]","Number":"11475","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.1\r\n- **Date Produced**: 6/4/2019 8:16 AM\r\n- **Commit**: d2599acd9703ef747dfb4329ec3e3beff182e755\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11475","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11475)"},{"Id":"451619975","IsPullRequest":true,"CreatedAt":"2019-06-03T18:50:56","Actor":"dotnet-maestro[bot]","Number":"11473","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190603.2\r\n- **Date Produced**: 6/3/2019 6:06 PM\r\n- **Commit**: 3f2e65dd99395dfb5741d943158243bc77c4ac80\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19303.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11473","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/templating\" (#11473)"},{"Id":"451269077","IsPullRequest":true,"CreatedAt":"2019-06-03T18:15:52","Actor":"wli3","Number":"11469","RawContent":null,"Title":"Update branding to preview 7","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11469","RelatedDescription":"Closed or merged PR \"Update branding to preview 7\" (#11469)"},{"Id":"451266397","IsPullRequest":true,"CreatedAt":"2019-06-03T18:14:47","Actor":"wli3","Number":"11468","RawContent":null,"Title":"Merge master to release/3.0.1xx for preview6","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11468","RelatedDescription":"Closed or merged PR \"Merge master to release/3.0.1xx for preview6\" (#11468)"},{"Id":"451022299","IsPullRequest":true,"CreatedAt":"2019-06-03T15:49:18","Actor":"johnbeisner","Number":"11461","RawContent":null,"Title":"On a x64 OS, the x86 SDK bundle installer displays the incorrect installation directory","State":"closed","Body":"On a x64 OS, the x86 SDK bundle installer was trying to incorrectly install to \"C:\\Program Files\\dotnet\". The MSIs were correcting the MsiProperty [see below], but the installation directory on display is still incorrect.\r\n\r\n\r\n\r\n```\r\nMSI (s) (BC:B0) [15:19:43:943]: WIN64DUALFOLDERS: 'C:\\Program Files (x86)\\' will substitute 17 characters in 'C:\\Program Files\\dotnet\\' folder path. (mask argument = 0, the folder pair's iSwapAttrib member = 0).\r\nMSI (s) (BC:B0) [15:19:43:943]: PROPERTY CHANGE: Modifying DOTNETHOME property. Its current value is 'C:\\Program Files\\dotnet'. Its new value: 'C:\\Program Files (x86)\\dotnet\\'.\r\n```\r\n\r\n\r\n**WiX documentation:**\r\nProgramFilesFolder - gets the well-known folder for CSIDL_PROGRAM_FILESX86.\r\nProgramFiles64Folder - gets the well-known folder for CSIDL_PROGRAM_FILES.\r\nProgramFiles6432Folder - gets the well-known folder for CSIDL_PROGRAM_FILES on 64-bit Windows and CSIDL_PROGRAM_FILESX86 on 32-bit Windows.\r\n\r\nAddresses: https://github.com/dotnet/sdk/issues/3267\r\n","Url":"https://github.com/dotnet/cli/pull/11461","RelatedDescription":"Closed or merged PR \"On a x64 OS, the x86 SDK bundle installer displays the incorrect installation directory\" (#11461)"},{"Id":"451447576","IsPullRequest":true,"CreatedAt":"2019-06-03T12:45:58","Actor":"dotnet-maestro[bot]","Number":"11472","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190602.1\r\n- **Date Produced**: 6/2/2019 12:45 PM\r\n- **Commit**: 6e7805d201f2fe43d7205101c238419dcef74fac\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19302.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11472","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11472)"},{"Id":"451445808","IsPullRequest":true,"CreatedAt":"2019-06-03T12:41:32","Actor":"dotnet-maestro[bot]","Number":"11471","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190602.2\r\n- **Date Produced**: 6/2/2019 1:09 PM\r\n- **Commit**: e6a5d5f970bb872451c6310ae34eda31041fb552\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19302.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11471","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11471)"},{"Id":"451444151","IsPullRequest":true,"CreatedAt":"2019-06-03T12:02:05","Actor":"dotnet-bot","Number":"11470","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11470","RelatedDescription":"Open PR \"Merge release/2.2.2xx to release/3.0.1xx\" (#11470)"},{"Id":"451136746","IsPullRequest":true,"CreatedAt":"2019-06-03T02:13:21","Actor":"dotnet-bot","Number":"11466","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11466","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to release/3.0.1xx\" (#11466)"},{"Id":"451249554","IsPullRequest":true,"CreatedAt":"2019-06-03T00:01:15","Actor":"dotnet-bot","Number":"11467","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11467","RelatedDescription":"Open PR \"Merge release/3.0.1xx to master\" (#11467)"},{"Id":"451078555","IsPullRequest":true,"CreatedAt":"2019-06-02T18:33:15","Actor":"dotnet-maestro[bot]","Number":"11464","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190531.6\r\n- **Date Produced**: 6/1/2019 12:41 AM\r\n- **Commit**: 5bea321cf4616560b8b5fc4442f86be3dd99df2f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19281.6\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190531.6\r\n- **Date Produced**: 6/1/2019 12:41 AM\r\n- **Commit**: 5bea321cf4616560b8b5fc4442f86be3dd99df2f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19281.6\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11464","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11464)"},{"Id":"451078917","IsPullRequest":true,"CreatedAt":"2019-06-02T12:44:56","Actor":"dotnet-maestro[bot]","Number":"11465","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190531.1\r\n- **Date Produced**: 5/31/2019 1:08 PM\r\n- **Commit**: 7359a18d42369a6e078a76370ed904f90589d1ea\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19281.1\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190601.1\r\n- **Date Produced**: 6/1/2019 1:04 PM\r\n- **Commit**: 1b687f22bef2ba1ec7d4ff2f8c080b5c833e077c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19301.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11465","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11465)"},{"Id":"451078530","IsPullRequest":true,"CreatedAt":"2019-06-02T12:40:37","Actor":"dotnet-maestro[bot]","Number":"11463","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190531.5\r\n- **Date Produced**: 5/31/2019 10:53 PM\r\n- **Commit**: c901850aa1e175c124da771863dacc763743a520\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19281.5\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190601.2\r\n- **Date Produced**: 6/1/2019 1:04 PM\r\n- **Commit**: 8fd0b50b9d689e8d87ab202f11b7c9fbe81271c4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19301.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11463","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11463)"},{"Id":"451029894","IsPullRequest":true,"CreatedAt":"2019-06-01T12:01:20","Actor":"wli3","Number":"11462","RawContent":null,"Title":"Merges/release/2.2.2xx to release/3.0.1xx","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/11462","RelatedDescription":"Closed or merged PR \"Merges/release/2.2.2xx to release/3.0.1xx\" (#11462)"},{"Id":"450768804","IsPullRequest":true,"CreatedAt":"2019-05-31T21:04:14","Actor":"dotnet-maestro[bot]","Number":"11455","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190530.2\r\n- **Date Produced**: 5/30/2019 6:58 PM\r\n- **Commit**: 64427bdb934241a66e0123d060d6f7a3f0977098\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 1.0.2-beta5.19280.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11455","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11455)"},{"Id":"450861383","IsPullRequest":false,"CreatedAt":"2019-05-31T15:41:18","Actor":"Thraka","Number":"11457","RawContent":null,"Title":"Improve dotnet pack command to create templates","State":"open","Body":"The current CLI requires users to install and use `nuget pack`  to create a template for the dotnet SDK. This incurs a penalty on non-Windows computers where the user will have to install Mono and get nuget.exe running just to create templates.\r\n\r\nThe existing `dotnet pack` command should support targeting a nuspec (or something.props?) and look for the settings that `nuget pack` does and output a template.\r\n\r\nDocs bug: dotnet/docs#11066","Url":"https://github.com/dotnet/cli/issues/11457","RelatedDescription":"Open issue \"Improve dotnet pack command to create templates\" (#11457)"},{"Id":"450766437","IsPullRequest":true,"CreatedAt":"2019-05-31T12:41:29","Actor":"dotnet-maestro[bot]","Number":"11454","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190530.5\r\n- **Date Produced**: 5/31/2019 8:14 AM\r\n- **Commit**: edab73adbf6f7ba08a91026e2a0b57eaa2d0baf7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview6.19280.5\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11454","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11454)"},{"Id":"450766296","IsPullRequest":true,"CreatedAt":"2019-05-31T12:36:09","Actor":"dotnet-maestro[bot]","Number":"11453","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190530.2\r\n- **Date Produced**: 5/30/2019 5:22 PM\r\n- **Commit**: 7c50d548001a83a18449ad4dda370122ede5fbf6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19280.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11453","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11453)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"451078421","IsPullRequest":true,"CreatedAt":"2019-06-05T00:46:32","Actor":"dotnet-maestro[bot]","Number":"1224","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190531.5\r\n- **Date Produced**: 5/31/2019 10:53 PM\r\n- **Commit**: c901850aa1e175c124da771863dacc763743a520\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19281.5\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190601.2\r\n- **Date Produced**: 6/1/2019 1:04 PM\r\n- **Commit**: 8fd0b50b9d689e8d87ab202f11b7c9fbe81271c4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19301.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190602.2\r\n- **Date Produced**: 6/2/2019 1:09 PM\r\n- **Commit**: e6a5d5f970bb872451c6310ae34eda31041fb552\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19302.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.1\r\n- **Date Produced**: 6/4/2019 8:16 AM\r\n- **Commit**: d2599acd9703ef747dfb4329ec3e3beff182e755\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19304.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1224","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1224)"},{"Id":"451983344","IsPullRequest":true,"CreatedAt":"2019-06-04T13:12:14","Actor":"dotnet-maestro[bot]","Number":"1229","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190603.11\r\n- **Date Produced**: 6/4/2019 8:34 AM\r\n- **Commit**: 6d5959cbc7d489406f8f85dba0a42f06d4a0ea9b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19303.11\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19303.11\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19303.11\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1229","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1229)"},{"Id":"451725417","IsPullRequest":false,"CreatedAt":"2019-06-03T23:00:31","Actor":"wpatter6","Number":"1228","RawContent":null,"Title":"Hosting environment or server.mappath in .net framework","State":"open","Body":"Hi, I'm building a nuget package that will be used in both .NET Framework 4.6.2+ and dotnet core MVC type applications.\r\n\r\nThere is some functionality I'm providing that requires knowing the web root path.  Within the dotnet core world, I'm able to access the hosting environment and get the web root from there. \r\n\r\nBut how can this be done for framework 4.6.2+ applications, without the hosting environment, Server.MapPath or some equivalent?  Is it possible?  \r\n\r\nI'm currently using `Directory.GetCurrentDirectory() + @\"..\\..\\\";` but this is obviously quite hacky and only supports the default hosting configuration.\r\n\r\nThanks","Url":"https://github.com/dotnet/standard/issues/1228","RelatedDescription":"Open issue \"Hosting environment or server.mappath in .net framework\" (#1228)"},{"Id":"449369049","IsPullRequest":false,"CreatedAt":"2019-06-03T13:58:00","Actor":"llolic","Number":"1214","RawContent":null,"Title":"System.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.","State":"closed","Body":"I am getting \"System.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.'\"\r\nI have made an application in vs 2019 that currently just has a textbox, a textblock, and a button. When I run it, the error is shown for the following line: \"rootFrame.Navigate(typeof(MainPage), e.Arguments);\"\r\n\r\nDoes anyone know how to fix this error?","Url":"https://github.com/dotnet/standard/issues/1214","RelatedDescription":"Closed issue \"System.IO.FileNotFoundException: 'Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The system cannot find the file specified.\" (#1214)"},{"Id":"451464633","IsPullRequest":true,"CreatedAt":"2019-06-03T12:58:57","Actor":"dotnet-maestro[bot]","Number":"1227","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190603.1\r\n- **Date Produced**: 6/3/2019 10:38 AM\r\n- **Commit**: 0eed4042f056b4d9f6f4d1bf2918e234d67a6f88\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19303.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19303.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19303.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1227","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1227)"},{"Id":"451188035","IsPullRequest":true,"CreatedAt":"2019-06-02T12:49:02","Actor":"dotnet-maestro[bot]","Number":"1226","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190601.4\r\n- **Date Produced**: 6/2/2019 6:27 AM\r\n- **Commit**: 9813f2de83c5f4b270b7cbb34f7117f80d402f4d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19301.4\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19301.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19301.4\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1226","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1226)"},{"Id":"451082070","IsPullRequest":true,"CreatedAt":"2019-06-01T12:54:30","Actor":"dotnet-maestro[bot]","Number":"1225","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190531.7\r\n- **Date Produced**: 5/31/2019 11:58 PM\r\n- **Commit**: b4fa2006c2e9757e4446e3fdad413bdbf265eedc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19281.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19281.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19281.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1225","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1225)"},{"Id":"450941804","IsPullRequest":true,"CreatedAt":"2019-05-31T22:52:40","Actor":"dotnet-maestro-bot","Number":"1221","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"closed","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @wtgodbe\n* @dotnet-maestro[bot]\n* @ericstj\n* @terrajobst\n* @ViktorHofer\n* @JohnTortugo\n* @joperezr\n* @mmitche\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/standard/pull/1221","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#1221)"},{"Id":"450951486","IsPullRequest":true,"CreatedAt":"2019-05-31T19:59:28","Actor":"safern","Number":"1222","RawContent":null,"Title":"Revert \"Add bulk operations to Collection<T>\"","State":"closed","Body":"Due to: https://github.com/dotnet/corefx/issues/38085\r\n\r\ncc: @terrajobst @wtgodbe @karelz ","Url":"https://github.com/dotnet/standard/pull/1222","RelatedDescription":"Closed or merged PR \"Revert \"Add bulk operations to Collection<T>\"\" (#1222)"},{"Id":"450955142","IsPullRequest":true,"CreatedAt":"2019-05-31T19:49:00","Actor":"wtgodbe","Number":"1223","RawContent":null,"Title":"Update branding to preview7 in master","State":"closed","Body":"CC @terrajobst @mmitche ","Url":"https://github.com/dotnet/standard/pull/1223","RelatedDescription":"Closed or merged PR \"Update branding to preview7 in master\" (#1223)"},{"Id":"449798213","IsPullRequest":true,"CreatedAt":"2019-05-31T17:00:11","Actor":"dotnet-maestro[bot]","Number":"1216","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190528.7\r\n- **Date Produced**: 5/29/2019 4:03 AM\r\n- **Commit**: c7d48ca7732b7717e84d8375588d83866104ef58\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19278.7\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19278.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19278.7\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190529.8\r\n- **Date Produced**: 5/30/2019 8:05 AM\r\n- **Commit**: e23119d577e644d2c2a25419c88c1181681358e0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19279.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19279.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19279.8\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190531.1\r\n- **Date Produced**: 5/31/2019 9:51 AM\r\n- **Commit**: 82408cd90f4d4573d502e8df2ca437b35e6a37f7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19281.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19281.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19281.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1216","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1216)"},{"Id":"450765638","IsPullRequest":true,"CreatedAt":"2019-05-31T12:14:07","Actor":"dotnet-maestro[bot]","Number":"1220","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190530.2\r\n- **Date Produced**: 5/30/2019 5:22 PM\r\n- **Commit**: 7c50d548001a83a18449ad4dda370122ede5fbf6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19280.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1220","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1220)"},{"Id":"450570292","IsPullRequest":true,"CreatedAt":"2019-05-31T01:08:56","Actor":"terrajobst","Number":"1219","RawContent":null,"Title":"Add HttpResponseMessage.TrailingHeaders","State":"open","Body":"Fixes #1144\r\n\r\n/cc @JamesNK @davidfowl @davidsh @karelz ","Url":"https://github.com/dotnet/standard/pull/1219","RelatedDescription":"Open PR \"Add HttpResponseMessage.TrailingHeaders\" (#1219)"},{"Id":"450273832","IsPullRequest":true,"CreatedAt":"2019-05-30T12:36:19","Actor":"dotnet-maestro[bot]","Number":"1218","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190529.5\r\n- **Date Produced**: 5/30/2019 3:41 AM\r\n- **Commit**: fb62c6377a6bd163af2a7516260f064498942585\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19279.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1218","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1218)"},{"Id":"450026795","IsPullRequest":true,"CreatedAt":"2019-05-29T22:45:51","Actor":"ericstj","Number":"1217","RawContent":null,"Title":"Source build fixes","State":"closed","Body":"Use GenFacades instead of GenAPI and remove GenAPI and APICompat from source build.","Url":"https://github.com/dotnet/standard/pull/1217","RelatedDescription":"Closed or merged PR \"Source build fixes\" (#1217)"},{"Id":"449768348","IsPullRequest":true,"CreatedAt":"2019-05-29T12:16:21","Actor":"dotnet-maestro[bot]","Number":"1215","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190528.1\r\n- **Date Produced**: 5/28/2019 6:41 PM\r\n- **Commit**: 11f90a2a260422201895de58e57170131ab4efe7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19278.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1215","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1215)"},{"Id":"449247865","IsPullRequest":true,"CreatedAt":"2019-05-28T12:54:12","Actor":"dotnet-maestro[bot]","Number":"1213","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190527.2\r\n- **Date Produced**: 5/27/2019 11:45 PM\r\n- **Commit**: d58a8ade31b4731759c92df00d0f6398c52f3d83\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19277.2\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19277.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19277.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1213","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1213)"},{"Id":"448751215","IsPullRequest":false,"CreatedAt":"2019-05-27T09:16:48","Actor":"KexyBiscuit","Number":"1212","RawContent":null,"Title":"NETSDK1073 occurs on netcoreapp3.0 projects","State":"open","Body":"```\r\n>C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012085\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.TargetingPackResolution.targets(194,5): error NETSDK1073: The FrameworkReference 'NETStandard.Library' was not recognized\r\n```\r\n\r\n```\r\n<TargetFramework>netcoreapp3.0</TargetFramework>\r\n\r\n<ItemGroup>\r\n  <PackageReference Include=\"System.Text.Encoding.CodePages\" Version=\"4.6.0-preview5.19224.8\" /> <!--It doesn't matter what's referenced-->\r\n</ItemGroup>\r\n```","Url":"https://github.com/dotnet/standard/issues/1212","RelatedDescription":"Open issue \"NETSDK1073 occurs on netcoreapp3.0 projects\" (#1212)"},{"Id":"448462812","IsPullRequest":true,"CreatedAt":"2019-05-25T13:11:36","Actor":"dotnet-maestro[bot]","Number":"1211","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190524.8\r\n- **Date Produced**: 5/25/2019 8:10 AM\r\n- **Commit**: ca535178383c526a0eb7a00f7ff6df36e0af1ea1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19274.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19274.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19274.8\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1211","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1211)"},{"Id":"448458458","IsPullRequest":true,"CreatedAt":"2019-05-25T12:20:56","Actor":"dotnet-maestro[bot]","Number":"1210","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190524.6\r\n- **Date Produced**: 5/24/2019 11:03 PM\r\n- **Commit**: b5016f5688dc8ca9f3e4811ee7e2e86ad8907a40\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19274.6\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19274.6\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1210","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1210)"},{"Id":"448225868","IsPullRequest":false,"CreatedAt":"2019-05-24T15:20:02","Actor":"dagood","Number":"1209","RawContent":null,"Title":"Build netstandard targeting pack assets in dotnet/standard, not dotnet/core-setup","State":"open","Body":"(See https://github.com/dotnet/standard/issues/1106)\r\n\r\nThe netstandard targeting pack may not version completely in sync with .NET Core Runtime, so producing it in Core-Setup via a transport package is not ideal. These artifacts should be produced in dotnet/standard itself.\r\n\r\nI don't think it makes sense to work on this until targeting pack infra is shared. (https://github.com/dotnet/core-setup/issues/4773)","Url":"https://github.com/dotnet/standard/issues/1209","RelatedDescription":"Open issue \"Build netstandard targeting pack assets in dotnet/standard, not dotnet/core-setup\" (#1209)"},{"Id":"448158285","IsPullRequest":true,"CreatedAt":"2019-05-24T13:09:47","Actor":"dotnet-maestro[bot]","Number":"1208","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190523.8\r\n- **Date Produced**: 5/24/2019 7:26 AM\r\n- **Commit**: c539d6c627b169d45f0b4cf1826b560cd0862abe\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19273.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19273.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19273.8\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1208","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1208)"},{"Id":"448135323","IsPullRequest":true,"CreatedAt":"2019-05-24T12:21:08","Actor":"dotnet-maestro[bot]","Number":"1207","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190523.11\r\n- **Date Produced**: 5/24/2019 5:52 AM\r\n- **Commit**: 02a90cc69d2d32bbde9e6e0e41186711c591de27\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19273.11\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19273.11\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1207","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1207)"},{"Id":"447649294","IsPullRequest":true,"CreatedAt":"2019-05-23T13:11:12","Actor":"dotnet-maestro[bot]","Number":"1206","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190522.8\r\n- **Date Produced**: 5/23/2019 6:40 AM\r\n- **Commit**: daa005b23d4954d4a41b1663171d6ada2d960bd2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19272.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19272.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19272.8\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1206","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1206)"},{"Id":"447620634","IsPullRequest":true,"CreatedAt":"2019-05-23T12:15:47","Actor":"dotnet-maestro[bot]","Number":"1205","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190522.13\r\n- **Date Produced**: 5/23/2019 1:51 AM\r\n- **Commit**: 86e674361bdcefecbd8199ab62d0b1a6cb25703d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19272.13\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19272.13\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1205","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1205)"},{"Id":"447122667","IsPullRequest":true,"CreatedAt":"2019-05-22T13:15:56","Actor":"dotnet-maestro[bot]","Number":"1204","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190521.9\r\n- **Date Produced**: 5/22/2019 6:10 AM\r\n- **Commit**: b9b357f9a5a6ccf6a70c2e13b5a7d84a3ed1a684\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19271.9\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19271.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19271.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1204","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1204)"},{"Id":"446749048","IsPullRequest":true,"CreatedAt":"2019-05-21T19:26:08","Actor":"ericstj","Number":"1203","RawContent":null,"Title":"Fix public key of ns2.0 shims","State":"closed","Body":"System.Buffers, System.Memory, and System.Threading.Tasks.Extensions all use\r\nthe open key.  Ensure we use the same key here.","Url":"https://github.com/dotnet/standard/pull/1203","RelatedDescription":"Closed or merged PR \"Fix public key of ns2.0 shims\" (#1203)"},{"Id":"446608759","IsPullRequest":true,"CreatedAt":"2019-05-21T14:48:22","Actor":"dotnet-maestro[bot]","Number":"1202","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190521.1\r\n- **Date Produced**: 5/21/2019 9:31 AM\r\n- **Commit**: 51a1f16ee2aaded4ce1fca6847471b58f7ffa160\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19271.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19271.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19271.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1202","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1202)"},{"Id":"446103850","IsPullRequest":true,"CreatedAt":"2019-05-20T13:38:53","Actor":"dotnet-maestro[bot]","Number":"1201","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190520.1\r\n- **Date Produced**: 5/20/2019 11:22 AM\r\n- **Commit**: e58b35cd0f8fe6caa194ca7e48388d8d59854fe0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19270.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19270.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19270.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1201","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1201)"},{"Id":"445816606","IsPullRequest":true,"CreatedAt":"2019-05-19T13:14:40","Actor":"dotnet-maestro[bot]","Number":"1200","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190518.5\r\n- **Date Produced**: 5/18/2019 11:19 PM\r\n- **Commit**: 36ad1c62d4bb753a489d4c055b909af2cb6d407f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview6.19268.5\r\n  - **System.Reflection.Emit** -> 4.6.0-preview6.19268.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview6.19268.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1200","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1200)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"452318996","IsPullRequest":false,"CreatedAt":"2019-06-05T05:19:49","Actor":"wangleigpt","Number":"38249","RawContent":null,"Title":"How to add a new oid to the lookup table ?","State":"open","Body":"When i use X509Certificate2 to parse a .cer file which has some oids like \"1.2.156.10197.1.501\",  it returns  \"The OID value is invalid.\"\r\nIs there a way to  add new oids to the lookup table ?\r\nTHANKS!","Url":"https://github.com/dotnet/corefx/issues/38249","RelatedDescription":"Open issue \"How to add a new oid to the lookup table ?\" (#38249)"},{"Id":"452305078","IsPullRequest":false,"CreatedAt":"2019-06-05T04:40:18","Actor":"amagrath","Number":"38247","RawContent":null,"Title":"Environment.OSVersion","State":"closed","Body":"The .NET Core property `Environment.OSVersion` is reporting my Windows 10 Professional PC as being:\r\n\r\n`Microsoft Windows NT 6.2.9200.0`\r\n\r\nI know that software version numbering is bizarre at the best of times, but I'm sure this is wrong.\r\n\r\nThat version corresponds to Windows 8 according to: https://en.wikipedia.org/wiki/List_of_Microsoft_Windows_versions\r\n\r\nIf I run:\r\n\r\n`dotnet --info`\r\n\r\nat the command line, I get:\r\n\r\n````.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.105\r\n Commit:    7cecb35b92\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.105\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.3\r\n  Commit:  6b8ad509b6\r\n\r\n.NET Core SDKs installed:\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.105 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]```","Url":"https://github.com/dotnet/corefx/issues/38247","RelatedDescription":"Closed issue \"Environment.OSVersion\" (#38247)"},{"Id":"452287913","IsPullRequest":false,"CreatedAt":"2019-06-05T03:35:16","Actor":"cromachina","Number":"38243","RawContent":null,"Title":"Add Ptr<T>, type safe IntPtr wrapper for marshaling","State":"closed","Body":"Typically wrapping native libraries that produce (own) and consume native pointers is done with System.IntPtr. It seems like a better way to match a native interface is to wrap IntPtr in another structure to give it a unique type, `Ptr<T>`. This would be similar to the idea of `SafeHandle` but unmanaged and not for just Windows Handle types. `OpaquePtr<T>` may represent a pointer of unknown implementation (such as a C header only declaring `struct Bar;`), in which case it does not make sense to provide a Read/Write interface, but still have it be distinguishable from other pointers.\r\n\r\nPossible simple implementation and example usage:\r\n```csharp\r\nusing System;\r\nusing System.Runtime.InteropServices;\r\n\r\n[StructLayout(LayoutKind.Sequential)]\r\npublic struct Ptr<T> where T : struct\r\n{\r\n    public IntPtr ptr;\r\n    \r\n    public T Read()\r\n    {\r\n        return Marshal.PtrToStructure<T>(ptr);\r\n    }\r\n    \r\n    public void Write(T t)\r\n    {\r\n        Marshal.StructureToPtr(t, ptr, false);\r\n    }\r\n}\r\n\r\n[StructLayout(LayoutKind.Sequential)]\r\npublic struct OpaquePtr<T> where T : struct\r\n{\r\n    public IntPtr ptr;\r\n}\r\n\r\n[StructLayout(LayoutKind.Sequential)]\r\npublic struct Foo\r\n{\r\n    public double bar;\r\n}\r\n\r\n[StructLayout(LayoutKind.Sequential)]\r\npublic struct Bar\r\n{}\r\n\r\npublic class Bindings\r\n{\r\n    private const string blahLib = \"blah.so\";\r\n    \r\n    [DllImport(blahLib)]\r\n    public static extern Ptr<Foo> createFoo();\r\n    \r\n    [DllImport(blahLib)]\r\n    public static extern void destroyFoo(Ptr<Foo> foo);\r\n    \r\n    [DllImport(blahLib)]\r\n    public static extern void makeFoo(out Ptr<Foo> foo);\r\n\r\n    public static void Main()\r\n    {\r\n        Ptr<Foo> f;\r\n        makeFoo(out f);\r\n        \r\n        Ptr<Foo> g = createFoo();\r\n\r\n        Foo h = f.Read();\r\n        h.bar = 1.0;\r\n        g.Write(h);\r\n        \r\n        // Compiler error.\r\n        // Ptr<Bar> b;\r\n        // destroyFoo(b);\r\n        \r\n        destroyFoo(f);\r\n        destroyFoo(g);\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/38243","RelatedDescription":"Closed issue \"Add Ptr<T>, type safe IntPtr wrapper for marshaling\" (#38243)"},{"Id":"452296828","IsPullRequest":true,"CreatedAt":"2019-06-05T03:16:30","Actor":"imcarolwang","Number":"38246","RawContent":null,"Title":"Fix issue38181 and add related test.","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/38246","RelatedDescription":"Open PR \"Fix issue38181 and add related test.\" (#38246)"},{"Id":"452291822","IsPullRequest":true,"CreatedAt":"2019-06-05T02:49:52","Actor":"DustinCampbell","Number":"38244","RawContent":null,"Title":"Enable code path in TypeDescriptor.GetAssociation(...) to use IDesignerHost","State":"open","Body":"Fixes #38241\r\n\r\n`TypeDescriptor.GetAssociation(...)` is supposed to have a fallback in the case that the primary object passed to it is a sited IComponent in design-mode. In that case, it tries to acquire an IDesignerHost from the component site and calls IDesignerHost.GetDesigner(...). Unfortunately, this code path has been disabled since TypeDescriptor was introduced in the corefx code base 3 years ago.\r\n\r\nThis change enables that code path and adds a test for the scenario.\r\n\r\nThis is currently blocking WinForms Designer work.","Url":"https://github.com/dotnet/corefx/pull/38244","RelatedDescription":"Open PR \"Enable code path in TypeDescriptor.GetAssociation(...) to use IDesignerHost\" (#38244)"},{"Id":"452283974","IsPullRequest":false,"CreatedAt":"2019-06-05T02:49:32","Actor":"zhusheping","Number":"38242","RawContent":null,"Title":"unable to get cpuid by ManagementObjectSearcher","State":"closed","Body":"I wan't get cpuid in a console app with core3.0 preview with\r\n\r\n```c#\r\n           String processorID = \"\";\r\n            ManagementObjectSearcher searcher = new ManagementObjectSearcher(\r\n                \"Select * FROM WIN32_Processor\");\r\n            ManagementObjectCollection mObject = searcher.Get();\r\n            foreach (ManagementObject obj in mObject)\r\n            {\r\n                processorID = obj[\"ProcessorId\"].ToString();\r\n            }\r\n            return processorID;\r\n```\r\nAnd exception throwed:Cannot marshal 'parameter #3': Cannot marshal a string by-value with the [Out] attribute.","Url":"https://github.com/dotnet/corefx/issues/38242","RelatedDescription":"Closed issue \"unable to get cpuid by ManagementObjectSearcher\" (#38242)"},{"Id":"452278110","IsPullRequest":false,"CreatedAt":"2019-06-05T01:41:15","Actor":"DustinCampbell","Number":"38241","RawContent":null,"Title":"TypeDescriptor.GetAssociation(...) does not use IDesignerHost","State":"open","Body":"The code path in `TypeDescriptor.GetAssociation(...)` to use an `IDesignerHost` to return an associated `IDesigner` at design-time is disabled behind a `FEATURES_IDESIGNERHOST` define, which doesn't appear anywhere else in the corefx code base.\r\n\r\nhttps://github.com/dotnet/corefx/blob/be2a1c4b62f8a7886792aaa361ca6b09d8aceaee/src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeDescriptor.cs#L602-L633\r\n\r\nThis is critically needed for WinForms Designer support. cc @danmosemsft ","Url":"https://github.com/dotnet/corefx/issues/38241","RelatedDescription":"Open issue \"TypeDescriptor.GetAssociation(...) does not use IDesignerHost\" (#38241)"},{"Id":"452257681","IsPullRequest":true,"CreatedAt":"2019-06-05T00:57:26","Actor":"FailedShack","Number":"38237","RawContent":null,"Title":"Expose two missing known folder flags","State":"closed","Body":"On Windows, the locations of special folders [can be changed by the user](https://docs.microsoft.com/es-es/windows/desktop/api/shlobj_core/nf-shlobj_core-shsetknownfolderpath).\r\nCurrently, there's no way to retrieve the default path to these folders after they have been changed, other than calling the native functions directly. This is really not ideal for portability.\r\nThis PR exposes two new `SpecialFolderOptions` fields, which facilitate access to that information:\r\nDefaultPath, which is equivalent to KF_FLAG_DEFAULT_PATH, and NotParentRelative, which is equivalent to KF_FLAG_NOT_PARENT_RELATIVE.\r\nThe Unix code path remains unaffected as there is currently no way for the special folders to change in that platform, meaning that these new flags are simply ignored.","Url":"https://github.com/dotnet/corefx/pull/38237","RelatedDescription":"Closed or merged PR \"Expose two missing known folder flags\" (#38237)"},{"Id":"452259259","IsPullRequest":true,"CreatedAt":"2019-06-05T00:05:58","Actor":"MattGal","Number":"38240","RawContent":null,"Title":"Add Debian 10 \"Buster\" test execution","State":"open","Body":"Add test leg to full matrix using debian-10-helix-amd64-f55606d-20190521154431","Url":"https://github.com/dotnet/corefx/pull/38240","RelatedDescription":"Open PR \"Add Debian 10 \"Buster\" test execution\" (#38240)"},{"Id":"452258245","IsPullRequest":true,"CreatedAt":"2019-06-05T00:01:49","Actor":"safern","Number":"38239","RawContent":null,"Title":"Enable nullable in System.Threading.ThreadPool ref and re-generate against impl","State":"open","Body":"There are no nullable annotations for this contract.\r\n\r\ncc: @stephentoub @danmosemsft @jkotas ","Url":"https://github.com/dotnet/corefx/pull/38239","RelatedDescription":"Open PR \"Enable nullable in System.Threading.ThreadPool ref and re-generate against impl\" (#38239)"},{"Id":"452258055","IsPullRequest":false,"CreatedAt":"2019-06-05T00:00:57","Actor":"pranavkm","Number":"38238","RawContent":null,"Title":"[System.Text.Json] JsonExtensionData should allow non-JsonElement types during serialization","State":"open","Body":"Consider the model\r\n\r\n```C#\r\npublic class TestModel\r\n{\r\n    public string Name { get; set; } = \"Test\"\r\n\r\n    public Dictionary<string, object> Extensions { get; set; } = new Dictionary<string, object>()\r\n    {\r\n       [\"foo\"] = 1,\r\n     }\r\n}\r\n```\r\n\r\nThis serializes correctly. If I annotate the `Extensions` property with `JsonExtensionDataAttribute`, serialization fails with:\r\n\r\n`The data extension property 'WebApplication1.Test2Controller+TestModel.Extensions' cannot contain dictionary values of type 'System.Int32'. Dictionary values must be of type JsonElement.`\r\n\r\nIt's not entirely clear why serialization requires the type be an instance of `JsonElement`. Additionally, it's not particularly trivial to produce `JsonElement` instances to put inside a dictionary.\r\n\r\nCould this constraint be removed so that it's treated the same as a regular dictionary for the purposes of serialization?\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/38238","RelatedDescription":"Open issue \"[System.Text.Json] JsonExtensionData should allow non-JsonElement types during serialization\" (#38238)"},{"Id":"452241801","IsPullRequest":true,"CreatedAt":"2019-06-04T22:51:26","Actor":"safern","Number":"38236","RawContent":null,"Title":"Add nullable annotations to System.Threading.Thread ref assembly","State":"open","Body":"Yet to be reviewed in API Review.\r\n\r\ncc: @dotnet/nullablefc @jkotas ","Url":"https://github.com/dotnet/corefx/pull/38236","RelatedDescription":"Open PR \"Add nullable annotations to System.Threading.Thread ref assembly\" (#38236)"},{"Id":"452236246","IsPullRequest":true,"CreatedAt":"2019-06-04T22:30:40","Actor":"maryamariyan","Number":"38235","RawContent":null,"Title":"[OLEDB] Add 3 more OleDbParameterCollection members","State":"open","Body":"Adds IsFixedSize, IsReadOnly, IsSynchronized appear to be missing from OleDbParameterCollection.\r\n\r\ncc: @divega ","Url":"https://github.com/dotnet/corefx/pull/38235","RelatedDescription":"Open PR \"[OLEDB] Add 3 more OleDbParameterCollection members\" (#38235)"},{"Id":"452233286","IsPullRequest":true,"CreatedAt":"2019-06-04T22:20:35","Actor":"vcsjones","Number":"38234","RawContent":null,"Title":"Increase sample size for random tests.","State":"open","Body":"I was able to reliably get these tests to fail after around a hundred thousand runs. This increases the sample size of the random numbers, and I was unable to get the tests to fail with the changes.\r\n\r\nThe additional output in the assertion failure would give better info if this fails in CI again.\r\n\r\nFixes #38002 \r\n\r\n/cc @bartonjs @stephentoub ","Url":"https://github.com/dotnet/corefx/pull/38234","RelatedDescription":"Open PR \"Increase sample size for random tests.\" (#38234)"},{"Id":"452216820","IsPullRequest":true,"CreatedAt":"2019-06-04T22:16:00","Actor":"stephentoub","Number":"38228","RawContent":null,"Title":"Add missing PlatformSpecific attribute to ProcessStart_OnLinux_UsesSpecifiedProgram test","State":"closed","Body":"Fixes https://github.com/dotnet/corefx/issues/38227\r\ncc: @tmds, @ViktorHofer ","Url":"https://github.com/dotnet/corefx/pull/38228","RelatedDescription":"Closed or merged PR \"Add missing PlatformSpecific attribute to ProcessStart_OnLinux_UsesSpecifiedProgram test\" (#38228)"},{"Id":"452216422","IsPullRequest":false,"CreatedAt":"2019-06-04T22:15:59","Actor":"stephentoub","Number":"38227","RawContent":null,"Title":"ProcessStart_OnLinux_UsesSpecifiedProgram test failing on macOS","State":"closed","Body":"```\r\nMessage :\r\nAssert.Equal() Failure\r\n          ↓ (pos 0)\r\nExpected: sleep\r\nActual:   dotnet\r\n          ↑ (pos 0)\r\nStack Trace :\r\n   at System.Diagnostics.Tests.ProcessTests.ProcessStart_OnLinux_UsesSpecifiedProgram() in /_/src/System.Diagnostics.Process/tests/ProcessTests.Unix.cs:line 312\r\n```","Url":"https://github.com/dotnet/corefx/issues/38227","RelatedDescription":"Closed issue \"ProcessStart_OnLinux_UsesSpecifiedProgram test failing on macOS\" (#38227)"},{"Id":"452231623","IsPullRequest":true,"CreatedAt":"2019-06-04T22:15:13","Actor":"YohDeadfall","Number":"38233","RawContent":null,"Title":"Added reflection emit member accessor","State":"open","Body":"This is prerequisite for #36505 and opened as a separate PR because it can be viewed as an optimization of existing code. The feature will come after merging this one.\r\n\r\n/cc @ahsonkhan @steveharter","Url":"https://github.com/dotnet/corefx/pull/38233","RelatedDescription":"Open PR \"Added reflection emit member accessor\" (#38233)"},{"Id":"452228757","IsPullRequest":true,"CreatedAt":"2019-06-04T22:05:41","Actor":"bartonjs","Number":"38232","RawContent":null,"Title":"Reenable BuildInvalidSignatureTwice with better diagnostics","State":"open","Body":"Fixes #36124.\r\n\r\nThe asserts have been reversed so that the most informative one comes first.  If there's something weird about our CI state then it becomes more actionable.  Similarly, if it was caused by a bad OS update that has since been cleared, we'll be in a better position of knowing what that bad update did.\r\n\r\n(The test is succeeding in my local development environment, so just re-enabling it and seeing if CI agrees.)","Url":"https://github.com/dotnet/corefx/pull/38232","RelatedDescription":"Open PR \"Reenable BuildInvalidSignatureTwice with better diagnostics\" (#38232)"},{"Id":"452227540","IsPullRequest":true,"CreatedAt":"2019-06-04T22:01:28","Actor":"safern","Number":"38231","RawContent":null,"Title":"Re-generate reference source against impl for System.Threading.Tasks","State":"open","Body":"In order to reduce noise when adding nullable annotations.\r\n\r\ncc: @stephentoub @jkotas @danmosemsft @ahsonkhan ","Url":"https://github.com/dotnet/corefx/pull/38231","RelatedDescription":"Open PR \"Re-generate reference source against impl for System.Threading.Tasks\" (#38231)"},{"Id":"452225165","IsPullRequest":false,"CreatedAt":"2019-06-04T22:00:33","Actor":"vcsjones","Number":"38230","RawContent":null,"Title":"SIGFPE in OpenSsl in CryptoNative_GetRandomBytes","State":"closed","Body":"While tinkering with #38002 I got a hard crash from inside openssl with a SIGFPE (which as far as I know is a divide by zero). The native stack:\r\n\r\n<details>\r\n<summary><code>* thread #1, name = 'dotnet', stop reason = signal SIGFPE</code></summary>\r\n<pre>\r\n  * frame #0: 0x00007efef1ebf8c9 libcrypto.so.1.1`___lldb_unnamed_symbol1265$$libcrypto.so.1.1 + 1177\r\n    frame #1: 0x00007efef2449442 System.Security.Cryptography.Native.OpenSsl.so`CryptoNative_GetRandomBytes(buf=\"X\\xbaI\\xbc�~, num=4) at openssl.c:1070\r\n    frame #2: 0x00007eff33ab730b\r\n    frame #3: 0x00007eff33ab71d9\r\n    frame #4: 0x00007eff33ab6efa\r\n    frame #5: 0x00007eff33ab6df8\r\n    frame #6: 0x00007eff33f2ae06\r\n    frame #7: 0x00007eff33f8b5d8\r\n    frame #8: 0x00007eff33f89fea\r\n    frame #9: 0x00007eff33f89ac1\r\n    frame #10: 0x00007eff33f89438\r\n    frame #11: 0x00007eff33fb1953\r\n    frame #12: 0x00007eff33fda3e1\r\n    frame #13: 0x00007eff33fd9dbc\r\n    frame #14: 0x00007eff33a299c9\r\n    frame #15: 0x00007effabae75af libcoreclr.so`CallDescrWorkerInternal at unixasmmacrosamd64.inc:862\r\n    frame #16: 0x00007effaba155f3 libcoreclr.so`MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) at callhelpers.cpp:70\r\n    frame #17: 0x00007effaba15598 libcoreclr.so`MethodDescCallSite::CallTargetWorker(this=<unavailable>, pArguments=0x0000000000000000, pReturnValue=0x00007efd49ffabc8, cbReturnValue=8) at callhelpers.cpp:604\r\n    frame #18: 0x00007effabb78005 libcoreclr.so`QueueUserWorkItemManagedCallback(void*) [inlined] MethodDescCallSite::Call_RetBool(this=0x00007efd49ffabd0, pArguments=<unavailable>) at callhelpers.h:468\r\n    frame #19: 0x00007effabb77ff6 libcoreclr.so`QueueUserWorkItemManagedCallback(pArg=0x00007efd49ffae9e) at comthreadpool.cpp:477\r\n    frame #20: 0x00007effab9ea0d5 libcoreclr.so`ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) [inlined] ManagedThreadBase_DispatchInner(ManagedThreadCallState*) at threads.cpp:7390\r\n    frame #21: 0x00007effab9ea0d3 libcoreclr.so`ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) [inlined] ManagedThreadBase_DispatchMiddle(pCallState=<unavailable>) at threads.cpp:7434\r\n    frame #22: 0x00007effab9ea0d3 libcoreclr.so`ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) [inlined] ManagedThreadBase_DispatchOuter(ManagedThreadCallState*)::$_6::operator()(ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) const::TryArgs*) const::'lambda'(Param*)::operator()(Param*) const at threads.cpp:7598\r\n    frame #23: 0x00007effab9ea083 libcoreclr.so`ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) at threads.cpp:7600\r\n    frame #24: 0x00007effab9ea083 libcoreclr.so`ManagedThreadBase_DispatchOuter(pCallState=<unavailable>) at threads.cpp:7626\r\n    frame #25: 0x00007effab9ea73d libcoreclr.so`ManagedThreadBase::ThreadPool(void (*)(void*), void*) [inlined] ManagedThreadBase_FullTransition(pTarget=<unavailable>, args=<unavailable>, filterType=ThreadPoolThread)(void*), void*, UnhandledExceptionLocation) at threads.cpp:7646\r\n    frame #26: 0x00007effab9ea725 libcoreclr.so`ManagedThreadBase::ThreadPool(pTarget=<unavailable>, args=<unavailable>)(void*), void*) at threads.cpp:7688\r\n    frame #27: 0x00007effabb5f1ce libcoreclr.so`ManagedPerAppDomainTPCount::DispatchWorkItem(this=<unavailable>, foundWork=0x00007efd49ffae9f, wasNotRecalled=0x00007efd49ffae9e) at threadpoolrequest.cpp:640\r\n    frame #28: 0x00007effaba057a9 libcoreclr.so`ThreadpoolMgr::WorkerThreadStart(void*) [inlined] ThreadpoolMgr::ExecuteWorkRequest(bool*, bool*) at win32threadpool.cpp:1556\r\n    frame #29: 0x00007effaba05788 libcoreclr.so`ThreadpoolMgr::WorkerThreadStart(lpArgs=<unavailable>) at win32threadpool.cpp:2009\r\n    frame #30: 0x00007effabd4c7fd libcoreclr.so`CorUnix::CPalThread::ThreadEntry(pvParam=0x00007efea4052420) at thread.cpp:1749\r\n    frame #31: 0x00007effad4446db libpthread.so.0`start_thread + 219\r\n    frame #32: 0x00007effac62a88f libc.so.6`__GI___clone at clone.S:95\r\n</pre>\r\n</details>\r\n\r\nAnd the relative managed stack from LLDB+SOS:\r\n\r\n<details>\r\n<summary><code>\r\n00007EFD49FFA288 00007efef1ebf8c9 [InlinedCallFrame: 00007efd49ffa288] Interop+Crypto.CryptoNative_GetRandomBytes(Byte*, Int32)</code></summary>\r\n<pre>\r\n00007EFD49FFA288 00007eff33ab730b [InlinedCallFrame: 00007efd49ffa288] Interop+Crypto.CryptoNative_GetRandomBytes(Byte*, Int32)\r\n00007EFD49FFA280 00007EFF33AB730B ILStubClass.IL_STUB_PInvoke(Byte*, Int32)\r\n00007EFD49FFA340 00007EFF33AB71D9 Interop+Crypto.GetRandomBytes(Byte*, Int32) [/code/personal/corefx/src/Common/src/Interop/Unix/System.Security.Cryptography.Native/Interop.RAND.cs @ 16]\r\n00007EFD49FFA370 00007EFF33AB6EFA System.Security.Cryptography.RandomNumberGeneratorImplementation.GetBytes(Byte*, Int32) [/code/personal/corefx/src/System.Security.Cryptography.Algorithms/src/Internal/Cryptography/RandomNumberGeneratorImplementation.Unix.cs @ 15]\r\n00007EFD49FFA3A0 00007EFF33AB6DF8 System.Security.Cryptography.RandomNumberGeneratorImplementation.FillSpan(System.Span`1<Byte>) [/code/personal/corefx/src/System.Security.Cryptography.Algorithms/src/Internal/Cryptography/RandomNumberGeneratorImplementation.cs @ 17]\r\n00007EFD49FFA400 00007EFF33F2AE06 System.Security.Cryptography.RandomNumberGenerator.GetInt32(Int32, Int32) [/code/personal/corefx/src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/RandomNumberGenerator.cs @ 132]\r\n</pre>\r\n</details>\r\n\r\nNote that the failure occurred during heavy parallel use. I have a full core dump. I've never hit this before and a SIGFPE seems strange, especially inside of OpenSSL.\r\n\r\n/cc @bartonjs \r\n\r\nEdit: Should note, this is a build from master at 53dc71ce6fccd9457a43da15c10c7cd687f2d921.","Url":"https://github.com/dotnet/corefx/issues/38230","RelatedDescription":"Closed issue \"SIGFPE in OpenSsl in CryptoNative_GetRandomBytes\" (#38230)"},{"Id":"452220948","IsPullRequest":false,"CreatedAt":"2019-06-04T21:41:26","Actor":"stephentoub","Number":"38229","RawContent":null,"Title":"Add some HttpClientMiniStressTest coverage for HTTP/2","State":"open","Body":"https://github.com/dotnet/corefx/blob/master/src/System.Net.Http/tests/FunctionalTests/HttpClientMiniStressTest.cs","Url":"https://github.com/dotnet/corefx/issues/38229","RelatedDescription":"Open issue \"Add some HttpClientMiniStressTest coverage for HTTP/2\" (#38229)"},{"Id":"452175605","IsPullRequest":true,"CreatedAt":"2019-06-04T21:12:41","Actor":"dotnet-maestro-bot","Number":"38220","RawContent":null,"Title":"Update ProjectNTfs to beta-27804-00 (master)","State":"closed","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/38220","RelatedDescription":"Closed or merged PR \"Update ProjectNTfs to beta-27804-00 (master)\" (#38220)"},{"Id":"452204225","IsPullRequest":true,"CreatedAt":"2019-06-04T20:56:19","Actor":"wfurt","Number":"38226","RawContent":null,"Title":"follow up on duplex operation for HTTP/2","State":"open","Body":"This is follow-up on #36884 to address concerns about UnobservedTaskExceptions and error propagation. \r\n\r\nThis change wraps all ignored tasks to make sure it does not end up in failed state without seeing the exception.   \r\n\r\nI also added test case for case when exception happens while sending RequestBody after Response headers are received. When we hit plain IO exception, reading response will fail as it always did so I did not worry about is new test case.  \r\n\r\nfixes #36855\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/38226","RelatedDescription":"Open PR \"follow up on duplex operation for HTTP/2\" (#38226)"},{"Id":"452203316","IsPullRequest":true,"CreatedAt":"2019-06-04T20:54:11","Actor":"MarcoRossignoli","Number":"38225","RawContent":null,"Title":"Fix digest authentication on SocketsHttpHandler","State":"open","Body":"fixes https://github.com/dotnet/corefx/issues/37729\r\n\r\nProblem I found:\r\n\r\n\r\n1) Updated code to follow https://tools.ietf.org/html/rfc2617#section-3.2.2\r\n\r\n```\r\nqop\r\n     Indicates what \"quality of protection\" the client has applied to\r\n     the message. If present, its value MUST be one of the alternatives\r\n     the server indicated it supports in the WWW-Authenticate header.\r\n     These values affect the computation of the request-digest. Note\r\n     that this is a single token, not a quoted list of alternatives as\r\n     in WWW- Authenticate.  This directive is optional in order to\r\n     preserve backward compatibility with a minimal implementation of\r\n     RFC 2069 [6], but SHOULD be used if the server indicated that qop\r\n     is supported by providing a qop directive in the WWW-Authenticate\r\n     header field.\r\n```\r\nAt the moment `qop` is always included and not follow `but SHOULD be used if the server indicated that qop is supported by providing a qop directive in the WWW-Authenticate header field`\r\n\r\n2) Updated code to follow: https://tools.ietf.org/html/rfc2617#section-3.2.2\r\n\r\n```\r\nThe values of the opaque and algorithm fields must be those supplied\r\n   in the WWW-Authenticate response header for the entity being\r\n   requested.\r\n```\r\nTo be compatible with .NET full and WinHttpHandler we'll send `algorithm` only if specified in `WWW-Authenticate` header, otherwise we \"silently\" use default.\r\n\r\n3) Fixed `-sess` tests, passing `qop` otherwise now that we follow 1) server side validation fails because we don't pass nouces anymore. \r\n    But it's not correct avoid to pass `qop`, `-sess` is present only in rfc2617 where `qop` `it SHOULD be used by all implementations compliant with this version of the Digest scheme.`\r\n    rfc2069 does not mention this kind of algorithm.\r\n\r\n4) Implemented missing part https://tools.ietf.org/html/rfc2617#section-3.2.2.1 (some tests fail without)\r\n```\r\nIf the \"qop\" directive is not present (this construction is for\r\n   compatibility with RFC 2069):\r\n\r\n      request-digest  =\r\n                 <\"> < KD ( H(A1), unq(nonce-value) \":\" H(A2) ) >\r\n   <\">\r\n```\r\n\r\nI added tests where I validate the presence of fields using regex.\r\n\r\nI did issue's test on fiddler, log:\r\n```\r\nGET https://jigsaw.w3.org/HTTP/Digest/ HTTP/1.1\r\nHost: jigsaw.w3.org\r\n\r\nHTTP/1.1 401 Unauthorized\r\nDate: Tue, 04 Jun 2019 20:11:58 GMT\r\nContent-Length: 261\r\nContent-Type: text/html;charset=ISO-8859-1\r\nServer: Jigsaw/2.3.0-beta2\r\nWWW-Authenticate: Digest realm=\"test\", domain=\"/HTTP/Digest\", nonce=\"b9aa1067c188f78cdbedd405741231c2\"\r\nStrict-Transport-Security: max-age=15552015; includeSubDomains; preload\r\nPublic-Key-Pins: pin-sha256=\"cN0QSpPIkuwpT6iP2YjEo1bEwGpH/yiUn6yhdy+HNto=\"; pin-sha256=\"WGJkyYjx1QMdMe0UqlyOKXtydPDVrk7sl2fV+nNm1r4=\"; pin-sha256=\"LrKdTxZLRTvyHM4/atX2nquX9BeHRZMCxg3cf4rhc2I=\"; max-age=864000\r\nX-Frame-Options: deny\r\nX-XSS-Protection: 1; mode=block\r\n\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\r\n               \"http://www.w3.org/TR/html4/loose.dtd\">\r\n<html>\r\n<head>\r\n <title>Unauthorized</title>\r\n</head>\r\n<body>\r\n<h1>Unauthorized access</h1><p>You are denied access to this resource.</body>\r\n</html>\r\n```\r\n```\r\nGET https://jigsaw.w3.org/HTTP/Digest/ HTTP/1.1\r\nHost: jigsaw.w3.org\r\nAuthorization: Digest username=\"guest\", realm=\"test\", nonce=\"b9aa1067c188f78cdbedd405741231c2\", uri=\"/HTTP/Digest/\", response=\"5641fcab8f7b107e90eab9fc059008fd\"\r\n\r\nHTTP/1.1 200 OK\r\nDate: Tue, 04 Jun 2019 20:11:58 GMT\r\nContent-Length: 459\r\nContent-Location: https://jigsaw.w3.org/HTTP/Digest/ok.html\r\nContent-Type: text/html\r\nEtag: \"6km9jn:qogunjao\"\r\nLast-Modified: Thu, 01 Jun 2000 22:07:10 GMT\r\nServer: Jigsaw/2.3.0-beta2\r\nStrict-Transport-Security: max-age=15552015; includeSubDomains; preload\r\nPublic-Key-Pins: pin-sha256=\"cN0QSpPIkuwpT6iP2YjEo1bEwGpH/yiUn6yhdy+HNto=\"; pin-sha256=\"WGJkyYjx1QMdMe0UqlyOKXtydPDVrk7sl2fV+nNm1r4=\"; pin-sha256=\"LrKdTxZLRTvyHM4/atX2nquX9BeHRZMCxg3cf4rhc2I=\"; max-age=864000\r\nX-Frame-Options: deny\r\nX-XSS-Protection: 1; mode=block\r\n\r\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML//EN\">\r\n<html>\r\n  <head>\r\n    <title>Digest Authentication test page</title>\r\n<!-- Changed by: Yves Lafon, 22-Feb-1999 -->\r\n  </head>\r\n\r\n<BODY BGCOLOR=\"white\">\r\n<P>\r\n      <A HREF=\"..\"><IMG SRC=\"/icons/jigsaw\" ALT=\"Jigsaw\" BORDER=\"0\" WIDTH=\"212\"\r\n\t  HEIGHT=\"49\"></A><IMG SRC=\"/icons/jigpower.gif\" WIDTH=\"94\" HEIGHT=\"52\" ALT=\"Jigsaw Powered !\"\r\n\tBORDER=\"0\" ALIGN=\"Right\">\r\n      \r\n<P>\r\n<HR>\r\n<P>Your browser made it!\r\n  </body>\r\n</html>\r\n```\r\n\r\ncc area owners: @geoffkizer, @wfurt, @davidsh, @karelz","Url":"https://github.com/dotnet/corefx/pull/38225","RelatedDescription":"Open PR \"Fix digest authentication on SocketsHttpHandler\" (#38225)"},{"Id":"452179170","IsPullRequest":true,"CreatedAt":"2019-06-04T20:54:03","Actor":"stephentoub","Number":"38222","RawContent":null,"Title":"Disable JSON LookupOverflow test","State":"closed","Body":"https://github.com/dotnet/corefx/issues/38221\r\ncc: @ahsonkhan ","Url":"https://github.com/dotnet/corefx/pull/38222","RelatedDescription":"Closed or merged PR \"Disable JSON LookupOverflow test\" (#38222)"},{"Id":"452185896","IsPullRequest":true,"CreatedAt":"2019-06-04T20:13:27","Actor":"wtgodbe","Number":"38224","RawContent":null,"Title":"[release/2.1] Disable tests on netfx for loop in URI & IPv6AddressHelper","State":"open","Body":"CC @davidsh @karelz @danmosemsft \r\n\r\n#### Description \r\n\r\nBack-ports test fixes from https://github.com/dotnet/corefx/pull/37734 and https://github.com/dotnet/corefx/pull/38076 to 2.1. Some of these test cases should be disabled on netfx until our test machines have the latest patches, otherwise they will fail.  \r\n\r\n#### Customer Impact \r\n\r\nCustomers running our test suite on desktop won't see unexpected/surprising test failures\r\n\r\n#### Regression? \r\n\r\n Just a test fix, so should not cause any\r\n\r\n#### Risk \r\n\r\nWe may forget to circle back and re-enable these on netfx once an appropriate amount of time has passed.","Url":"https://github.com/dotnet/corefx/pull/38224","RelatedDescription":"Open PR \"[release/2.1] Disable tests on netfx for loop in URI & IPv6AddressHelper\" (#38224)"},{"Id":"452182633","IsPullRequest":true,"CreatedAt":"2019-06-04T20:05:00","Actor":"safern","Number":"38223","RawContent":null,"Title":"Add nullable annotations to System.Threading ref","State":"open","Body":"Yet to be reviewed in API Review\r\n\r\ncc: @dotnet/nullablefc @jkotas ","Url":"https://github.com/dotnet/corefx/pull/38223","RelatedDescription":"Open PR \"Add nullable annotations to System.Threading ref\" (#38223)"},{"Id":"452178595","IsPullRequest":false,"CreatedAt":"2019-06-04T19:55:18","Actor":"stephentoub","Number":"38221","RawContent":null,"Title":"LookupOverflow JSON test consistently failing across all platforms","State":"open","Body":"https://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fpull~2F38211~2Fmerge/test~2Ffunctional~2Fcli~2Finnerloop~2F/20190604.1/workItem/System.Text.Json.Tests/analysis/xunit/System.Text.Json.Tests.Utf8JsonReaderTests~2FLookupOverflow\r\n```\r\nMessage :\r\nExpected OverflowException was not thrown when calling ValueTextEquals with large lookup string\r\nExpected: True\r\nActual:   False\r\nStack Trace :\r\n   at System.Text.Json.Tests.Utf8JsonReaderTests.LookupOverflow() in /_/src/System.Text.Json/tests/Utf8JsonReaderTests.ValueTextEquals.cs:line 651\r\n```","Url":"https://github.com/dotnet/corefx/issues/38221","RelatedDescription":"Open issue \"LookupOverflow JSON test consistently failing across all platforms\" (#38221)"},{"Id":"452313484","IsPullRequest":false,"CreatedAt":"2019-05-30T22:31:21","Actor":"PedroCavaleiro","Number":"38248","RawContent":null,"Title":"ExtendedSocketException: nodename nor servname provided, or not known. ","State":"open","Body":"Hi,\r\n\r\nI'm trying to send a mail using MailKit from my WebAPI but keep getting this error\r\nOn .NETCore 3: \r\nExtendedSocketException: nodename nor servname provided, or not known\r\n\r\nAnd on .NetCore 2: \r\nDevice Not Configured\r\n\r\nThis error is what made me test the .NET Core 3\r\nThis is my current system configuration\r\n\r\nOS: macOS Mojave (10.14.5)\r\n.NET Core (SDK): 3.0.100-preview5-011568\r\n.NET Core (Runtime): 3.0.0-preview5-27626-15\r\nVisual Studio for Mac: 8.1 Preview (8.1 build 2460)\r\nConnected to the router by WiFi","Url":"https://github.com/dotnet/corefx/issues/38248","RelatedDescription":"Open issue \"ExtendedSocketException: nodename nor servname provided, or not known. \" (#38248)"},{"Id":"452293893","IsPullRequest":false,"CreatedAt":"2019-05-02T09:40:34","Actor":"bauca","Number":"38245","RawContent":null,"Title":"AddRange doesn't throw System.InvalidOperationException if a collection was modified.","State":"open","Body":"# AddRange doesn't throw System.InvalidOperationException if a collection was modified.\r\n\r\n\r\n# Environment\r\n\r\nMicrosoft Windows 10 Pro\r\n10.0.17763 N/A Build 17763\r\nVisual Studio Professional 2017 - 15.9.10\r\n**.NET Core 2.2.102**\r\nConsole Application\r\n\r\n# Problem description and repro steps\r\nConsidering the following scenario and classes described:\r\n```c#\r\n    public class MyClass\r\n    {\r\n        public MyClass() { }\r\n\r\n        public Guid Id { get; set; }\r\n        public string Description { get; set; }\r\n    }\r\n```\r\n\r\n```c#\r\n          ///Sample code that adds three items in a List\r\n           var list = new List<MyClass>\r\n            {\r\n                new MyClass { Description = \"Mydesc1\" },\r\n                new MyClass { Description = \"Mydesc2\" },\r\n                new MyClass { Description = \"Mydesc3\" }\r\n            };\r\n           //Creates a new Enumerable with the 2x the number of items in the 'list' object\r\n            var newList = list.Select(o => new MyClass\r\n            {\r\n                Id = Guid.NewGuid(),\r\n                Description = Guid.NewGuid().ToString().Substring(0, 10)\r\n            });\r\n\r\n            //At this moment in the .NET Framework < 4.7.2 an exception of type System.InvalidOperationException is thrown      \r\n           //Due to the fact that the Collection was modified above, however in .NET Core 2.2 the exception is never thrown, even checking the checkbox to break on System.InvalidOperationException\r\n            list.AddRange(newList);\r\n```\r\n\r\n**Found result:**\r\nThe application get stucked in the AddRange operation consuming resources.\r\n\r\n**Expected result:**\r\nAn exception of type System.InvalidOperationException being thrown as in .NET Framework 4.7.2","Url":"https://github.com/dotnet/corefx/issues/38245","RelatedDescription":"Open issue \"AddRange doesn't throw System.InvalidOperationException if a collection was modified.\" (#38245)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"452297684","IsPullRequest":false,"CreatedAt":"2019-06-05T03:20:49","Actor":"davidhunter22","Number":"36175","RawContent":null,"Title":"'CS8629: Nullable value type may be null' reported when it can not be null after HasValue","State":"open","Body":"This occurs with C# 8\r\n\r\n```\r\npublic struct Foo\r\n{\r\n    int get_value( )\r\n   {\r\n        int? value = get_value_from_somewhere( );\r\n\r\n        // This test will not generate a 'Nullable value type may be null' \r\n        // if( value == null ) return 0;\r\n\r\n        // This test will not generate a 'Nullable value type may be null' \r\n        // if( !value.HasValue ) return 0;\r\n\r\n        // This test will generate a 'Nullable value type may be null' \r\n        if( value.HasValue == false ) return 0;\r\n\r\n        return value.Value; // Warning on this line\r\n    }\r\n\r\n    // In reality do something that may or may not return a value\r\n    int? get_value_from_somewhere( ) => 0; \r\n}\r\n```\r\nI think the last test is simple enough that it should not generate a warning\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/36175","RelatedDescription":"Open issue \"'CS8629: Nullable value type may be null' reported when it can not be null after HasValue\" (#36175)"},{"Id":"452295999","IsPullRequest":true,"CreatedAt":"2019-06-05T03:12:24","Actor":"codetriage-readme-bot","Number":"36174","RawContent":null,"Title":"Add CodeTriage badge to dotnet/roslyn","State":"open","Body":"Adds a badge showing the number of people helping this repo on CodeTriage.\n\n[![Open Source Helpers](https://www.codetriage.com/dotnet/roslyn/badges/users.svg)](https://www.codetriage.com/dotnet/roslyn)\n\n\n## What is CodeTriage?\n\nCodeTriage is an Open Source app that is designed to make contributing to Open Source projects easier. It works by sending subscribers a few open issues in their inbox. If subscribers get busy, there is an algorithm that backs off issue load so they do not get overwhelmed\n\n[Read more about the CodeTriage project](https://www.codetriage.com/what).\n\n## Why am I getting this PR?\n\nYour project was picked by the human, @schneems. They selected it from the projects submitted to https://www.codetriage.com and hand edited the PR. How did your project get added to [CodeTriage](https://www.codetriage.com/what)? Roughly about 3 years ago, [The-Q](https://github.com/The-Q) added this project to CodeTriage in order to start contributing. Since then, 266 people have subscribed to help this repo.\n\n## What does adding a badge accomplish?\n\nAdding a badge invites people to help contribute to your project. It also lets developers know that others are invested in the longterm success and maintainability of the project.\n\nYou can see an example of a CodeTriage badge on these popular OSS READMEs:\n\n- [![Email clients like GMAIL do not render SVG images](https://www.codetriage.com/rails/rails/badges/users.svg)](https://www.codetriage.com/rails/rails) https://github.com/rails/rails\n- [![Email clients like GMAIL do not render SVG images](https://www.codetriage.com/crystal-lang/crystal/badges/users.svg)](https://www.codetriage.com/crystal-lang/crystal) https://github.com/crystal-lang/crystal\n\n## Have a question or comment?\n\nWhile I am a bot, this PR was manually reviewed and monitored by a human - @schneems. My job is writing commit messages and handling PR logistics.\n\nIf you have any questions, you can reply back to this PR and they will be answered by @schneems. If you do not want a badge right now, no worries, close the PR, you will not hear from me again.\n\nThanks for making your project Open Source! Any feedback is greatly appreciated.","Url":"https://github.com/dotnet/roslyn/pull/36174","RelatedDescription":"Open PR \"Add CodeTriage badge to dotnet/roslyn\" (#36174)"},{"Id":"452288207","IsPullRequest":true,"CreatedAt":"2019-06-05T02:31:29","Actor":"jasonmalinowski","Number":"36173","RawContent":null,"Title":"Fix generate field nullability handling","State":"open","Body":"\"Fixes\" generate field in that this really just fixes up the rest of the TypeInferrer -- at this point once that was fixed the feature just lit up. Added some basic tests to cover.","Url":"https://github.com/dotnet/roslyn/pull/36173","RelatedDescription":"Open PR \"Fix generate field nullability handling\" (#36173)"},{"Id":"452162396","IsPullRequest":true,"CreatedAt":"2019-06-05T01:11:39","Actor":"heejaechang","Number":"36156","RawContent":null,"Title":"mark NFW from OOP critical","State":"closed","Body":"currently, whenever OOP throws an exception, we show infobar saying \"restart VS\". whenever that happens, we report NFW. now those NFW will be marked as critical and we will stop reporting NFW after that in VS.\r\n\r\nbasically making critical NFW behavior same as fatal watson in VS. and management will treat critical NFW same as fatal watson.\r\n\r\nalso, now we will show callstack like code fix exception when info bar is shown\r\n\r\n![image](https://user-images.githubusercontent.com/1333179/58910771-3bb96680-86cb-11e9-8eab-bfaa80f60a41.png)\r\n","Url":"https://github.com/dotnet/roslyn/pull/36156","RelatedDescription":"Closed or merged PR \"mark NFW from OOP critical\" (#36156)"},{"Id":"452259776","IsPullRequest":true,"CreatedAt":"2019-06-05T00:08:25","Actor":"jcouv","Number":"36172","RawContent":null,"Title":"MaybeNullWhen and NotNullWhen attribute affects callers","State":"open","Body":"Design notes:\r\n\r\n1. In an invocation, we first visit the arguments and save the results. We unsplit after each argument, except for those marked with `AssertsTrue`/`AssertsFalse` (which will be renamed to `DoesNotReturnIf(bool)` later on) where we drop half of the state.\r\nNote that for lambda arguments, we just save a non-null result type and store the state for later use.\r\n\r\n2. We then do type inference.\r\n\r\n3. We then validate inbound values and conversions, considering pre-condition attributes. This all happens in an unsplit state.\r\n\r\n4. We then validate outbound values:\r\n    - for `ref` and `out` arguments, we track an assignment from parameter to argument \r\n    - for `in`/by-value, we don't do any assignment, but we can still learn from various attributes\r\n\r\n\r\nRelates to https://github.com/dotnet/roslyn/issues/35816\r\nLDM notes: https://github.com/dotnet/csharplang/blob/master/meetings/2019/LDM-2019-05-15.md\r\n\r\nFixes https://github.com/dotnet/roslyn/issues/35949 (complexity issue with lambdas in invocations with nullability annotation attributes)","Url":"https://github.com/dotnet/roslyn/pull/36172","RelatedDescription":"Open PR \"MaybeNullWhen and NotNullWhen attribute affects callers\" (#36172)"},{"Id":"452258125","IsPullRequest":true,"CreatedAt":"2019-06-05T00:01:14","Actor":"dotnet-bot","Number":"36171","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"open","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36171","RelatedDescription":"Open PR \"Merge master to features/param-nullchecking\" (#36171)"},{"Id":"452258097","IsPullRequest":true,"CreatedAt":"2019-06-05T00:01:07","Actor":"dotnet-bot","Number":"36170","RawContent":null,"Title":"Merge master to demos/records","State":"open","Body":"\nThis is an automatically generated pull request from master into demos/records.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-demos/records\ngit reset --hard upstream/demos/records\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-demos/records --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36170","RelatedDescription":"Open PR \"Merge master to demos/records\" (#36170)"},{"Id":"452258086","IsPullRequest":true,"CreatedAt":"2019-06-05T00:01:03","Actor":"dotnet-bot","Number":"36169","RawContent":null,"Title":"Merge master-vs-deps to features/razorSupport2","State":"open","Body":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36169","RelatedDescription":"Open PR \"Merge master-vs-deps to features/razorSupport2\" (#36169)"},{"Id":"452258056","IsPullRequest":true,"CreatedAt":"2019-06-05T00:00:57","Actor":"dotnet-bot","Number":"36168","RawContent":null,"Title":"Merge master to features/lspSupport","State":"open","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36168","RelatedDescription":"Open PR \"Merge master to features/lspSupport\" (#36168)"},{"Id":"452258016","IsPullRequest":true,"CreatedAt":"2019-06-05T00:00:49","Actor":"dotnet-bot","Number":"36167","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36167","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#36167)"},{"Id":"452252069","IsPullRequest":true,"CreatedAt":"2019-06-04T23:31:36","Actor":"333fred","Number":"36166","RawContent":null,"Title":"Remove prebuilts during source-build","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/36036\r\nFixes https://github.com/dotnet/roslyn/issues/36035\r\nFixes https://github.com/dotnet/roslyn/issues/36034\r\nFixes https://github.com/dotnet/roslyn/issues/36033\r\nFixes https://github.com/dotnet/roslyn/issues/36032\r\nFixes https://github.com/dotnet/roslyn/issues/36031","Url":"https://github.com/dotnet/roslyn/pull/36166","RelatedDescription":"Open PR \"Remove prebuilts during source-build\" (#36166)"},{"Id":"452244478","IsPullRequest":false,"CreatedAt":"2019-06-04T23:01:19","Actor":"sharwell","Number":"36165","RawContent":null,"Title":"Use MSBuild Locator's AppDomainManager","State":"open","Body":"Starting with #36113, AnalyzerRunner uses the AppDomainManager from [SourceBrowser](https://github.com/KirillOsenkov/SourceBrowser/) to work around https://github.com/Microsoft/MSBuildLocator/issues/16. Once MSBuild Locator ships its own copy of a custom AppDomainManager, the changes in commit fbc4b38f8d1de75163e10b5f8af07451d77a1d14 should be updated to use that version instead, and the references to SourceBrowser removed from dotnet/roslyn.","Url":"https://github.com/dotnet/roslyn/issues/36165","RelatedDescription":"Open issue \"Use MSBuild Locator's AppDomainManager\" (#36165)"},{"Id":"452244366","IsPullRequest":false,"CreatedAt":"2019-06-04T23:00:56","Actor":"jcouv","Number":"36164","RawContent":null,"Title":"NullableWalker.LearnFromNullTest should not blindly strip conversions","State":"open","Body":"```C#\r\n        private int LearnFromNullTest(BoundExpression expression, ref LocalState state)\r\n        {\r\n            var expressionWithoutConversion = RemoveConversion(expression, includeExplicitConversions: true).expression;\r\n            var slot = MakeSlot(expressionWithoutConversion);\r\n            return LearnFromNullTest(slot, expressionWithoutConversion.Type, ref state);\r\n        }\r\n```\r\n\r\nDepending on the conversion, we can learn something about `x` when we learn that `(C)x` is null.\r\nFor instance, in an implicit reference conversion.\r\n\r\nAlso, in a scenario with a user-defined conversion `operator C(X x)` with non-null input and output, I think we can infer from the contract that `x` was null if the output was null.\r\n\r\n```C#\r\n        [Fact]\r\n        public void MaybeNull_OnExplicitConversion()\r\n        {\r\n            var c = CreateCompilation(new[] { @\"\r\nusing System.Runtime.CompilerServices;\r\npublic class A\r\n{\r\n    public static explicit operator C(A? a) => throw null!;\r\n}\r\npublic class C\r\n{\r\n    public void Main()\r\n    {\r\n        A a = new A();\r\n        _ = IsNull((C)a)\r\n            ? a.ToString()\r\n            : a.ToString();\r\n    }\r\n    public static bool IsNull([MaybeNull] C c) => throw null!;\r\n}\r\n\", MaybeNullAttributeDefinition }, options: WithNonNullTypesTrue());\r\n\r\n            // Both diagnostics are unexpected \r\n            // We should not blindly strip conversions when learning that a value is null.\r\n            // In this case, we shouldn't infer that `a` may be null from the fact that `(C)a` may be null.\r\n            // Tracked by https://github.com/dotnet/roslyn/issues/36164\r\n            c.VerifyDiagnostics(\r\n                // (13,15): warning CS8602: Dereference of a possibly null reference.\r\n                //             ? a.ToString()\r\n                Diagnostic(ErrorCode.WRN_NullReferenceReceiver, \"a\").WithLocation(13, 15),\r\n                // (14,15): warning CS8602: Dereference of a possibly null reference.\r\n                //             : a.ToString();\r\n                Diagnostic(ErrorCode.WRN_NullReferenceReceiver, \"a\").WithLocation(14, 15)\r\n                );\r\n        }\r\n\r\n```","Url":"https://github.com/dotnet/roslyn/issues/36164","RelatedDescription":"Open issue \"NullableWalker.LearnFromNullTest should not blindly strip conversions\" (#36164)"},{"Id":"452233070","IsPullRequest":true,"CreatedAt":"2019-06-04T22:19:53","Actor":"ivanbasov","Number":"36163","RawContent":null,"Title":"Override completion must not include parameter attributes","State":"open","Body":"Fixes #5646","Url":"https://github.com/dotnet/roslyn/pull/36163","RelatedDescription":"Open PR \"Override completion must not include parameter attributes\" (#36163)"},{"Id":"452117128","IsPullRequest":true,"CreatedAt":"2019-06-04T21:26:02","Actor":"JoeRobich","Number":"36154","RawContent":null,"Title":"Update ILAsm and ILDasm version to match expected SDK version","State":"closed","Body":"As pointed out by @AlekseyTs, #36042 should have also bumped the ILAsm and ILDasm version numbers.","Url":"https://github.com/dotnet/roslyn/pull/36154","RelatedDescription":"Closed or merged PR \"Update ILAsm and ILDasm version to match expected SDK version\" (#36154)"},{"Id":"452203858","IsPullRequest":false,"CreatedAt":"2019-06-04T20:55:26","Actor":"AdamAllison","Number":"36162","RawContent":null,"Title":"Large file with Lambda compilation is slow (Minutes instead of seconds)","State":"open","Body":"**Version Used**: 16.0.462+g62fb89029d\r\n\r\n**Steps to Reproduce**:\r\nCreate file with a large array with a delegate that uses a lambda (Compiles in 8-9 minutes)\r\nCreate same file instead have delegate point to function (Compiles in 4 seconds)\r\n\r\nThis was discovered by converting a large auto generate C files to C#\r\nATTACHED is a program that will generate the below steps.\r\n\r\n\r\n1.  Create large file that uses lambdas:\r\nnamespace Test0 {\r\n     class C {\r\n          internal delegate void FuncCallback(C c);\r\n          internal FuncCallback Func;\r\n          internal static C[] LargeArray = new C[] {\r\n               // Repeat this 70000x\r\n              new C() { Func  = (C c)=> {} },\r\n              //\r\n         };\r\n     }\r\n}\r\n\r\n2. Create large file that uses explicit function calls\r\nnamespace Test1\r\n[Program.txt](https://github.com/dotnet/roslyn/files/3254454/Program.txt)\r\n\r\n\r\n{\r\n    class C\r\n    {\r\n        internal delegate void FuncCallback(C c);\r\n        internal FuncCallback Func;\r\n        internal static C[] LargeArray = new C[] {\r\n               // Repeat this 70000x\r\n              new C() { Func = AutoFuncX },\r\n              //\r\n         };\r\n        // Repeat, each item in array gets its own function so ~70000 functions\r\n        static void AutoFuncX(C c)\r\n        { // ... }\r\n        }\r\n    }\r\n}\r\n\r\n**Expected Behavior**:\r\nLambda compilation should be near parity of explicit functions.\r\n\r\n**Actual Behavior**:\r\nVS crashes, building takes minutes.\r\n\r\n[Program.txt](https://github.com/dotnet/roslyn/files/3254456/Program.txt)\r\n","Url":"https://github.com/dotnet/roslyn/issues/36162","RelatedDescription":"Open issue \"Large file with Lambda compilation is slow (Minutes instead of seconds)\" (#36162)"},{"Id":"452197716","IsPullRequest":true,"CreatedAt":"2019-06-04T20:41:02","Actor":"sharwell","Number":"36161","RawContent":null,"Title":"Avoid in-process captures in UpdateReferencesAync","State":"open","Body":"This change produced a 220MB (6.7%) allocation reduction in the scenario described by #36158.","Url":"https://github.com/dotnet/roslyn/pull/36161","RelatedDescription":"Open PR \"Avoid in-process captures in UpdateReferencesAync\" (#36161)"},{"Id":"452189644","IsPullRequest":false,"CreatedAt":"2019-06-04T20:22:36","Actor":"AlekseyTs","Number":"36160","RawContent":null,"Title":"Consider consolidating the error messages CS8713, CS8376 and CS0449 together. ","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/issues/36160","RelatedDescription":"Open issue \"Consider consolidating the error messages CS8713, CS8376 and CS0449 together. \" (#36160)"},{"Id":"452174437","IsPullRequest":true,"CreatedAt":"2019-06-04T19:44:49","Actor":"lostmsu","Number":"36159","RawContent":null,"Title":"Improve performance of Formatter.Format method","State":"open","Body":"I need help with this request, as it requires `SyntaxToken.Position` to switch to `public` to be accessible from `TokenStream`, but `TokenStream.cs` is shared with a project, that references `Microsoft.CodeAnalysis` from NuGet, where `SyntaxToken.Position` is still internal. What are the steps here? First merge `Position` becoming public, wait for it to get out to NuGet, then release the rest?\r\n\r\nThis change includes the following improvements, affecting `Formatter.Format` performance:\r\n1. Instead of performing full binary search on the token stream, it first guesses approximate token position based on average token length to narrow search scope.\r\n2. `TokenOrderComparer` used for binary search does not access `SyntaxToken.FullSpan` property unless necessary, as it is very compute-intensive. Instead, it uses newly exposed `SyntaxToken.Position` first.\r\n3. Cached delegate references to functions of the same instance used in `TokenStream.GetOriginalColumn` and some other functions has been replaced with a generic over struct types, which avoids delegate dispatch.\r\n\r\nOverall speedup is over 40% on a 2.5MB file\r\n\r\nThis addresses #36157","Url":"https://github.com/dotnet/roslyn/pull/36159","RelatedDescription":"Open PR \"Improve performance of Formatter.Format method\" (#36159)"},{"Id":"452170885","IsPullRequest":false,"CreatedAt":"2019-06-04T19:36:14","Actor":"sharwell","Number":"36158","RawContent":null,"Title":"Manual allocation performance testing: AnalyzerRunner for SymbolTreeInfoIncrementalAnalyzerProvider on Roslyn.sln","State":"open","Body":"**Version Used**: ba24589046961e98198518b7a82c78ab5d42b677\r\n\r\n### Scenario details\r\n\r\nThis test executes the SymbolTreeInfoIncrementalAnalyzerProvider with the following configuration:\r\n\r\n* Database persistence is enabled (SQLite at this time)\r\n* The database does not exist in advance\r\n* Full solution analysis is disabled for both C# and Visual Basic\r\n\r\n### Steps to run the test\r\n\r\n1. Delete the **%TEMP%\\\\RoslynTests\\\\AnalyzerRunner\\\\temp-db** folder (if it exists)\r\n\r\n1. Run AnalyzerRunner in release mode with the following command line (this is the **IIncrementalAnalyzer SymbolTreeInfoIncrementalAnalyzerProvider** profile)\r\n\r\n    > $(OutDir) $(SolutionDir)Roslyn.sln /stats /ia SymbolTreeInfoIncrementalAnalyzerProvider /persist /profileroot $(SolutionDir)artifacts\\\\profileRoot\r\n\r\n1. Start PerfView GC-only profiling during the 5 second delay before project analysis starts\r\n    * Make sure to use a circular buffer large enough to hold the complete result data\r\n    * For 64-bit profiling, PerfView will need to start before AnalyzerRunner starts. The 5-second delay is still helpful as it will show up in the trace as a 5-second period of no allocations.\r\n\r\n1. Stop profiling when the AnalyzerRunner completes","Url":"https://github.com/dotnet/roslyn/issues/36158","RelatedDescription":"Open issue \"Manual allocation performance testing: AnalyzerRunner for SymbolTreeInfoIncrementalAnalyzerProvider on Roslyn.sln\" (#36158)"},{"Id":"452168724","IsPullRequest":false,"CreatedAt":"2019-06-04T19:30:28","Actor":"lostmsu","Number":"36157","RawContent":null,"Title":"Formatter.Format is very slow (2.5 MB file over 10 minutes)","State":"open","Body":"**Version Used**: dev16.0\r\n\r\n**Steps to Reproduce**:\r\n\r\n```csharp\r\nstring sourceCode = File.ReadAllText(args[0]);\r\nvar ast = CSharpSyntaxTree.ParseText(sourceCode);\r\n// generate some work for the formatter\r\nvar unformatted = new WhitespaceRemover().Visit(ast.GetRoot());\r\nvar workspace = new AdhocWorkspace();\r\nworkspace.Options = workspace.Options\r\n    .WithChangedOption(FormattingOptions.NewLine, LanguageNames.CSharp, \"\\n\");\r\nvar stopwatch = Stopwatch.StartNew();\r\nvar reformatted = Formatter.Format(unformatted, workspace, workspace.Options);\r\nstring newCode = reformatted.GetText().ToString();\r\nConsole.WriteLine($\"formatting: {stopwatch.ElapsedMilliseconds / 1000}s\");\r\n\r\n...\r\n\r\npublic class WhitespaceRemover : CSharpSyntaxRewriter\r\n{\r\n    public override SyntaxTrivia VisitTrivia(SyntaxTrivia trivia) => default;\r\n    public override SyntaxNode Visit(SyntaxNode node) => node == null ? null : base.Visit(node).WithoutTrivia();\r\n}\r\n```\r\n\r\n**Expected Behavior**: formatting should take reasonable time\r\n\r\n**Actual Behavior**: 2.5MB file takes over 10 minutes to format on i7 8700K\r\n","Url":"https://github.com/dotnet/roslyn/issues/36157","RelatedDescription":"Open issue \"Formatter.Format is very slow (2.5 MB file over 10 minutes)\" (#36157)"},{"Id":"452115084","IsPullRequest":false,"CreatedAt":"2019-06-04T17:21:00","Actor":"vsfeedback","Number":"36153","RawContent":null,"Title":"Remove unused parameter does not do anything when clicked","State":"open","Body":"VSF_TYPE_MARKDOWNI see a parameter in my constructor with a greyed out identifer and the 3 green dots under it. I hover over it and see the message that the parameter is unused. I click on the light bulb icon next to the message but nothing happens.\n\nThe parameter is correctly being identified as unused.\nThe menu offering the option to remove the parameter does not appear. Nor is the parameter removed.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/593322/remove-unused-parameter-does-not-do-anything-when.html\nVSTS ticketId: 904617_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 6/3/2019, 08:13 PM (14 hours ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\nVisual Studio Feedback System on 6/4/2019, 09:07 AM (73 min ago): <p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/36153","RelatedDescription":"Open issue \"Remove unused parameter does not do anything when clicked\" (#36153)"},{"Id":"452091617","IsPullRequest":true,"CreatedAt":"2019-06-04T16:24:39","Actor":"cston","Number":"36152","RawContent":null,"Title":"Reduce the impact of nullable attributes in metadata","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36152","RelatedDescription":"Open PR \"Reduce the impact of nullable attributes in metadata\" (#36152)"},{"Id":"451955872","IsPullRequest":true,"CreatedAt":"2019-06-04T13:30:08","Actor":"dotnet-bot","Number":"36150","RawContent":null,"Title":"Merge master-vs-deps to features/razorSupport2","State":"closed","Body":"\nThis is an automatically generated pull request from master-vs-deps into features/razorSupport2.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-features/razorSupport2\ngit reset --hard upstream/features/razorSupport2\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-features/razorSupport2 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36150","RelatedDescription":"Closed or merged PR \"Merge master-vs-deps to features/razorSupport2\" (#36150)"},{"Id":"451983611","IsPullRequest":true,"CreatedAt":"2019-06-04T13:02:28","Actor":"sharwell","Number":"36151","RawContent":null,"Title":"Implement RestrictedInternalsVisibleToAttribute","State":"open","Body":"* Define RestrictedInternalsVisibleToAttribute, and hook up code generation (see dotnet/roslyn-analyzers#2498)\r\n* Define external access APIs for LegacyCodeAnalysis (supersedes #35500; see #35080)\r\n* Remove Microsoft.CodeAnalysis.ExternalAccess.LegacyCodeAnalysis","Url":"https://github.com/dotnet/roslyn/pull/36151","RelatedDescription":"Open PR \"Implement RestrictedInternalsVisibleToAttribute\" (#36151)"},{"Id":"451940840","IsPullRequest":false,"CreatedAt":"2019-06-04T11:24:09","Actor":"MihaZupan","Number":"36149","RawContent":null,"Title":"Support null checking with property in Nullable Reference Type analysis","State":"open","Body":"```c#\r\nclass Foo\r\n{\r\n    public TaskCompletionSource<bool>? _completionSource;\r\n\r\n    public bool IsStopped => !(_completionSource is null);\r\n    // or\r\n    public bool IsStopped => _completionSource != null;\r\n\r\n    public void Bar()\r\n    {\r\n        if (IsStopped)\r\n        {\r\n            // Possible dereference\r\n            _completionSource.SetResult(true);\r\n        }\r\n\r\n        if (!(_completionSource is null))\r\n        {\r\n            // This is fine\r\n            _completionSource.SetResult(true);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI know I can stick a dammit operator in there, was just wondering if there are plans to support such null checks in analysis.","Url":"https://github.com/dotnet/roslyn/issues/36149","RelatedDescription":"Open issue \"Support null checking with property in Nullable Reference Type analysis\" (#36149)"},{"Id":"451861360","IsPullRequest":false,"CreatedAt":"2019-06-04T08:24:21","Actor":"DominikDitoIvosevic","Number":"36148","RawContent":null,"Title":"\"Enable navigation to decompiled sources.\" does not support stepping into decompiled source","State":"open","Body":"**Version Used**: \r\nMicrosoft Visual Studio Professional 2019 Preview\r\nVersion 16.2.0 Preview 1.0\r\nVisualStudio.16.Preview/16.2.0-pre.1.0+28917.182\r\nMicrosoft .NET Framework\r\nVersion 4.7.03190\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a solution and include NuGet package https://github.com/chroma-sdk/Colore/blob/master/src/Corale.Colore/Core/Chroma.cs\r\n2. Enable \"Enable navigation to decompiled sources.\" and disable \"Just My Code\"\r\n3. Press F12 to go to definition of Chroma class and put a breakpoint on \r\n\r\n       public override void SetAll(Color color)\r\n        {\r\n            _grid.Set(color);\r\n            SetGuid(NativeWrapper.CreateKeyboardEffect(Effect.CustomKey, _grid));\r\n        }\r\n\r\n4. Run the solution and step into the decompiled source\r\n\r\n**Expected Behavior**:\r\nExpect a step in into the decompiled source\r\n\r\n\r\n**Actual Behavior**:\r\nSteps over the method. Does not go into the decompiled source\r\n\r\nThis works with ReSharper so I guess it's a missing feature for the Visual Studio version. I'm not sure if this is a Roslyn feature or some closed source Visual Studio one","Url":"https://github.com/dotnet/roslyn/issues/36148","RelatedDescription":"Open issue \"\"Enable navigation to decompiled sources.\" does not support stepping into decompiled source\" (#36148)"},{"Id":"451818408","IsPullRequest":true,"CreatedAt":"2019-06-04T06:25:26","Actor":"agocke","Number":"36147","RawContent":null,"Title":"Optimize indexer access of an inline range expression","State":"open","Body":"Introduces optimizations in lowering for an indexer access of the form\r\nreceiver[a..b]. With the optimizations, the generation of intermediate\r\nSystem.Index and System.Range types will be avoided.","Url":"https://github.com/dotnet/roslyn/pull/36147","RelatedDescription":"Open PR \"Optimize indexer access of an inline range expression\" (#36147)"},{"Id":"451739041","IsPullRequest":true,"CreatedAt":"2019-06-04T01:30:11","Actor":"dotnet-bot","Number":"36145","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36145","RelatedDescription":"Closed or merged PR \"Merge master to features/param-nullchecking\" (#36145)"},{"Id":"451739970","IsPullRequest":true,"CreatedAt":"2019-06-04T00:05:36","Actor":"genlu","Number":"36146","RawContent":null,"Title":"[WIP] Add support for Expand Filter","State":"open","Body":"Currently, the default behavior depends on the intelliSense option for unimported types. If completion for unimported types option is disabled, then the expanded items will only be displayed when user click the new \"expander filter\", which will not be remembered in subsequent completion list.\r\n\r\nAlso want to point out that, with expander filter, import completion will be triggered on-demand. So it won't run until the expander is actually selected.\r\n\r\nFilter text: Add items from unimported namespaces\r\nFilter hotkey: Alt + X\r\n\r\nText and hotkey are not finalized yet.\r\n\r\nThe corresponding editor change is here:\r\nhttps://dev.azure.com/devdiv/DevDiv/_git/VS-Platform/pullrequest/182863\r\n\r\nAnimation:\r\n![ExpandFilter](https://user-images.githubusercontent.com/788783/58842072-60590400-8621-11e9-9c61-ef24cf82ca58.gif)\r\n\r\nUpdate1: \r\n\r\nWe are using the same icon as C++ now.\r\n\r\n![image](https://user-images.githubusercontent.com/788783/58922625-94e7c100-86f0-11e9-9135-e37c1a0168f2.png)\r\n\r\n\r\nTODO: \r\n\r\n- [ ] Consume new editor API when available, which will trnasfer the ownership of the expander from Roslyn to Editor and enable us to use \"ctrl + j\" to trigger the expander.\r\n- [ ] change text for unimported types completion option to better reflect this?\r\n- [ ] Add tests\r\n\r\nFYI @AmadeusW @ivanbasov @dpoeschl @CyrusNajmabadi \r\n","Url":"https://github.com/dotnet/roslyn/pull/36146","RelatedDescription":"Open PR \"[WIP] Add support for Expand Filter\" (#36146)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"452208062","IsPullRequest":true,"CreatedAt":"2019-06-04T23:26:43","Actor":"tannergooding","Number":"7486","RawContent":null,"Title":"Updating MicrosoftNetCompilersToolsetVersion to 3.2.0-beta3-19304-07","State":"closed","Body":"CC. @dotnet/nullablefc\r\n\r\nCoreRT side for https://github.com/dotnet/arcade/pull/2946 and https://github.com/dotnet/buildtools/pull/2257","Url":"https://github.com/dotnet/corert/pull/7486","RelatedDescription":"Closed or merged PR \"Updating MicrosoftNetCompilersToolsetVersion to 3.2.0-beta3-19304-07\" (#7486)"},{"Id":"452221551","IsPullRequest":false,"CreatedAt":"2019-06-04T21:43:21","Actor":"timmydo","Number":"7487","RawContent":null,"Title":"Process crashes on Linux when catching a null pointer exception from managed code","State":"open","Body":"I have a program that does something like this:\r\n\r\n```\r\n        static void Main(string[] args)\r\n        {\r\n            // this loads a corert native library\r\n            var blah= NativeMethods.DoSomething(IntPtr.Zero, IntPtr.Zero, 10_000);\r\n            try\r\n            {\r\n                string x = null;\r\n                Console.WriteLine($\"{x.Length}\");\r\n            }\r\n            catch (System.Exception)\r\n            {\r\n            }\r\n            Console.WriteLine(\"done\");\r\n        }\r\n```\r\n\r\nwhen the null pointer exception is thrown, the corert sigsegv handler is invoked. https://github.com/dotnet/corert/blob/635cf21aca11265ded9d78d216424bd609c052f5/src/Native/Runtime/unix/HardwareExceptions.cpp#L582\r\n\r\nAround L582, the processess crashes with sigabort:\r\n\r\n```\r\ndotnet TestConsoleApp.dll\r\n*** stack smashing detected ***: dotnet terminated\r\n======= Backtrace: =========\r\n/lib/x86_64-linux-gnu/libc.so.6(+0x70bfb)[0x7fe006ea4bfb]\r\n/lib/x86_64-linux-gnu/libc.so.6(__fortify_fail+0x37)[0x7fe006f2d437]\r\n/lib/x86_64-linux-gnu/libc.so.6(__fortify_fail+0x0)[0x7fe006f2d400]\r\n/root/.nuget/packages/runtime.linux-x64.microsoft.netcore.app/2.2.4/runtimes/linux-x64/native/libcoreclr.so(+0x4e15c7)[0x7fe00656b5c7]\r\n```\r\n","Url":"https://github.com/dotnet/corert/issues/7487","RelatedDescription":"Open issue \"Process crashes on Linux when catching a null pointer exception from managed code\" (#7487)"},{"Id":"452085003","IsPullRequest":true,"CreatedAt":"2019-06-04T18:54:04","Actor":"MichalStrehovsky","Number":"7484","RawContent":null,"Title":"Avoid custom attributes when resolving lazy pinvokes","State":"closed","Body":"We already know the DllImportSearchPath wasn't specified in the assembly - no point in looking for the custom attribute.\r\n\r\nThe custom attribute lookup was failing when reflection is disabled.","Url":"https://github.com/dotnet/corert/pull/7484","RelatedDescription":"Closed or merged PR \"Avoid custom attributes when resolving lazy pinvokes\" (#7484)"},{"Id":"452108239","IsPullRequest":true,"CreatedAt":"2019-06-04T18:53:48","Actor":"Dotnet-GitSync-Bot","Number":"7485","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @adamsitnik @Youssef1313","Url":"https://github.com/dotnet/corert/pull/7485","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7485)"},{"Id":"451695299","IsPullRequest":true,"CreatedAt":"2019-06-04T13:26:04","Actor":"Dotnet-GitSync-Bot","Number":"7483","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7483","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7483)"},{"Id":"450157595","IsPullRequest":false,"CreatedAt":"2019-06-04T12:01:14","Actor":"lukaszorg","Number":"7468","RawContent":null,"Title":"Cannot build app package due to nutc_driver.exe 1.7.6 out of memory error ","State":"closed","Body":"Creating an App Package for publication in the store results in the following errors:\r\n\r\nError: NUTC300F:Internal Compiler Error: Native compilation failed due to out of memory error <our>.App\r\nError ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\1.7.6\\tools\\x64\\ilc\\Tools\\nutc_driver.exe @\"C:\\Users\\myself\\<path>\\<to>\\<our>.App\\obj\\x64\\Release\\ilc\\intermediate\\MDIL\\<our>.App.rsp\"' returned exit code 1 <our>.App\r\n\r\nWe are targeting Surface Hub (Creators Update 1703) so we cannot use newer version of microsoft.net.native.compiler.  \r\nWe have found not documented parameter for nutc_driver (/d2threads1) that helps building the solution on local machines. \r\nIs there any way to pass this flag on build agents? \r\nAre there any other workarounds?\r\n","Url":"https://github.com/dotnet/corert/issues/7468","RelatedDescription":"Closed issue \"Cannot build app package due to nutc_driver.exe 1.7.6 out of memory error \" (#7468)"},{"Id":"451675402","IsPullRequest":true,"CreatedAt":"2019-06-04T06:28:15","Actor":"trylek","Number":"7482","RawContent":null,"Title":"CPAOT: token context cleanup in JIT interface","State":"closed","Body":"One of the remaining debts in CPAOT I noticed during my recent\r\ninvestigations was the notion of input module token context. This\r\nis just wrong in the presence of inlining as we may never presume\r\nthat a token originated in the input module. This simple change\r\nchanges token resolution to resolve token context modules based on\r\nthe token scope instead.\r\n\r\nWith this change we no longer need to create a dictionary of\r\nper-module CorInfoImpl instances so that we can get by with just\r\na singleton; this is the gist of the additional cleanup in\r\nReadyToRunCodegenCompilation.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7482","RelatedDescription":"Closed or merged PR \"CPAOT: token context cleanup in JIT interface\" (#7482)"},{"Id":"451647153","IsPullRequest":true,"CreatedAt":"2019-06-03T21:16:27","Actor":"Dotnet-GitSync-Bot","Number":"7481","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7481","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7481)"},{"Id":"451615942","IsPullRequest":true,"CreatedAt":"2019-06-03T19:46:23","Actor":"MichalStrehovsky","Number":"7480","RawContent":null,"Title":"Merge nmirror to master","State":"closed","Body":"I guess we could also do a cherry pick. I mostly want to get ebc91d6 into master.","Url":"https://github.com/dotnet/corert/pull/7480","RelatedDescription":"Closed or merged PR \"Merge nmirror to master\" (#7480)"},{"Id":"451194717","IsPullRequest":true,"CreatedAt":"2019-06-02T19:30:13","Actor":"Dotnet-GitSync-Bot","Number":"7479","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @danmosemsft","Url":"https://github.com/dotnet/corert/pull/7479","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7479)"},{"Id":"451144350","IsPullRequest":true,"CreatedAt":"2019-06-02T05:00:00","Actor":"Suchiman","Number":"7478","RawContent":null,"Title":"Port GC changes from coreclr - 12","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7477\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/0bdf138318b737884fec898b0af68661172fa4da):**\r\n- https://github.com/dotnet/coreclr/commit/08337799278cfb546464acf3ef3ce701e685879f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/9726fd25ebdf0304056e20a33d71812994b80f17 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/3c23eded44b73f66d2fa6742dfc214d3700be7cc (skipped, does not apply)\r\n- https://github.com/dotnet/coreclr/commit/8edb3ef2529cc0beb0c034482fdb32fa4c95c606 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/49815bbb020eb3aae0a01f5b240fb3ee573c72ff (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d67a99436216ce7379d3c42dc8940d7c02eb3c0f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/fa15aac7fe11d951c4b85dcb9a23285007e0c620 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/ef88a92215a8f90fe0bd8b0327c16bb889902105 (gc only port, omitted vm side changes because i couldn't find where to put it in corert)\r\n- https://github.com/dotnet/coreclr/commit/27a710b82880f67e8fe1bf29babee9243c7c9c2e (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/48ec2b058e182a0191af04ca7cb400e53e273b64 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/2583ce936776a0eac31df904e41d5119840c203b (gc only port, omitted outdated vm integration)\r\n- https://github.com/dotnet/coreclr/commit/f5cb31cdf5cce0516d2e20fe38e72bc3fcd947ae (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/db55a1decc1d02538e61eac7db80b7daa351d5b6 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/535a4311f5702ecd57090f8fb397932ba5aa5ecf (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/542be7dabc037a82b65492da05a42130dda5938d (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/8ea97b120e691cae11883cef0c3cd6c184edeb4e (skipped, cgroup only change)\r\n- https://github.com/dotnet/coreclr/commit/58254b513146b138e80b3abea62c56322abf1807 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/2bedc5757cfad4a222a02e74ee11a5debd70a810 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/8e48db2c113052ef18cdafb43e114a8633864ec0 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/3148a6dd0a1999cbb987b12de2368a7c0b09077e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/a7f6a9d7a1302c355bbf87aba81143e586bdfad8 (already merged)\r\n- https://github.com/dotnet/coreclr/commit/79aadb8c6455e30065cbd817e3ec5b52d17f3dce (already merged)\r\n- https://github.com/dotnet/coreclr/commit/911d332c523848023e3c6564788b72b7f419fca1 (gc only port, [managed side is already merged](https://github.com/dotnet/corert/commit/d966f7361ca8d295bec58af7853c74ebe03f2b47))\r\n- https://github.com/dotnet/coreclr/commit/cc3e7d05c9248c0951beef289c48909066d27345 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/d4738d1e9e9b50d00023eb4caca225812cabe285 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/ca5b0d1caa47abdebac13233553c6e44db2e3168 (skipped, cgroup changes)","Url":"https://github.com/dotnet/corert/pull/7478","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 12\" (#7478)"},{"Id":"451016904","IsPullRequest":true,"CreatedAt":"2019-06-02T00:51:41","Actor":"Dotnet-GitSync-Bot","Number":"7476","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7476","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7476)"},{"Id":"451020527","IsPullRequest":true,"CreatedAt":"2019-06-02T00:50:41","Actor":"Suchiman","Number":"7477","RawContent":null,"Title":"Port GC changes from coreclr - 11","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7473\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/e64cbb5c722ab9b7d93ca32445e17df1115be70c):**\r\n- https://github.com/dotnet/coreclr/commit/571d469cef5d41dcb460e650bb04b738675abdd8 ([already merged](https://github.com/dotnet/corert/commit/f9bf1fc506347c30357a0d708bf69459f142eee4))\r\n- https://github.com/dotnet/coreclr/commit/7f9230129f047bfa6a5fd9e4be734b9e9fe2c93e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/c755e3b7f5d597c8d192675dbaaa337268d93f1c (manual port)\r\n- https://github.com/dotnet/coreclr/commit/a37369ab73d49d9957034d8accbdfba4e7f59367 (skipped due to getting reverted)\r\n- https://github.com/dotnet/coreclr/commit/c2331126c1963a81c70943a9530e0a8f823b21ae (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/3a295a078701f72edc18a4404cab7b7e1bc104c7 (skipped revert)\r\n- https://github.com/dotnet/coreclr/commit/8df01f50ca980ab8840124c74037782f75702032 (skipped revert)\r\n- https://github.com/dotnet/coreclr/commit/bc5a76d93f21392acbdfb8ec820fa287b31f09e4 (skipped revert of revert)\r\n- https://github.com/dotnet/coreclr/commit/8b8b3b95adada2a9cb2b00876c6d11ef3e4438f7 (skipped due to lacking cgroup)\r\n- https://github.com/dotnet/coreclr/commit/59714b683f40fac869050ca08acc5503e84dc776 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/facdc8b97f73973fb416ed13e4b9dd9a255864bf (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/f3f12666c822d8b4db8a9ca051618b6dc2420c68 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/145cfe19f9e4f3e8a84b75a3048fe98fffb59a68 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/951222555cbc4155f171180bee78da7631f03b20 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/cb73944d6d159bd02adc29f0588b97f0f76da1a1 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/338b9fa5c5216bdaa4f6c66fc36aea7bb19276b7 (manual port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/0bdf138318b737884fec898b0af68661172fa4da (manual port)","Url":"https://github.com/dotnet/corert/pull/7477","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 11\" (#7477)"},{"Id":"450927985","IsPullRequest":false,"CreatedAt":"2019-05-31T18:31:30","Actor":"VSadov","Number":"7475","RawContent":null,"Title":"Implementation of CLRServices::GarbageCollect  is different between coreclr and corert","State":"open","Body":"\r\nOne result of this is a significant behavior differences between Release and Debug in UWP apps.\r\n\r\nI think coreclr version is more intuitive. We should make corert version to match that.\r\n\r\n=== coreclr:\r\n\r\n```C#\r\nSTDMETHODIMP CLRServicesImpl::GarbageCollect(DWORD dwFlags)\r\n{\r\n    CONTRACTL\r\n    {\r\n        NOTHROW;\r\n        GC_TRIGGERS;\r\n        MODE_PREEMPTIVE;\r\n    }\r\n    CONTRACTL_END;\r\n\r\n    HRESULT hr = S_OK;\r\n    BEGIN_EXTERNAL_ENTRYPOINT(&hr)\r\n    {\r\n        GCX_COOP_THREAD_EXISTS(GET_THREAD());\r\n        if (dwFlags & GC_FOR_APPX_SUSPEND) {\r\n            GCHeapUtilities::GetGCHeap()->GarbageCollect(2, true, collection_blocking | collection_optimized);\r\n        }\r\n        else\r\n            GCHeapUtilities::GetGCHeap()->GarbageCollect();      unconditional collect\r\n    }\r\n    END_EXTERNAL_ENTRYPOINT;\r\n    return hr;\r\n}\r\n```\r\n\r\n=== corert:\r\n\r\n```C#\r\n        [NativeCallable]\r\n        static int GarbageCollect__STUB(System.IntPtr pComThis, int flags)\r\n        {\r\n            try\r\n            {\r\n                GC.Collect(2, GCCollectionMode.Optimized, /* blocking = */ true);    optimized collect\r\n\r\n                if (InteropEventProvider.IsEnabled())\r\n                    InteropEventProvider.Log.TaskJupiterGarbageCollect();\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                // If we set IErrorInfo/IRestrictedErrorInfo, Jupiter might leak\r\n                return ex.HResult;\r\n            }\r\n\r\n            return Interop.COM.S_OK;\r\n        }\r\n```\r\n","Url":"https://github.com/dotnet/corert/issues/7475","RelatedDescription":"Open issue \"Implementation of CLRServices::GarbageCollect  is different between coreclr and corert\" (#7475)"},{"Id":"450547580","IsPullRequest":true,"CreatedAt":"2019-05-31T18:24:33","Actor":"Suchiman","Number":"7473","RawContent":null,"Title":"Port GC changes from coreclr - 10","State":"closed","Body":"This port continues https://github.com/dotnet/corert/pull/7434\r\nPorting strategy: extracting patches via `format-patch` from coreclr, adjusting paths, then `am` them on corert.\r\n\r\n**Glossary:**\r\n- already merged: change already exists in corert\r\n- gc only port: change only affected the gc directory and patch applied with no conflicts\r\n- manual port: change applied with custom changes\r\n- omitted changes: contains changes to files that do not exists in corert and were discarded\r\n\r\n**Changes since [last commit](https://github.com/dotnet/coreclr/commit/9f38303221294f45740feefc1b6ddf72347ff882):**\r\n- https://github.com/dotnet/coreclr/commit/6a1c28f05642ac0420b78f35ad32a00b6aef0488 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/73ef3c13c9b710cb04b67a904b098fb196c224c7 (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/00e7aa00a42debda47a7dbe2b54e924670eaefdd ([already merged](https://github.com/dotnet/corert/pull/4627))\r\n- https://github.com/dotnet/coreclr/commit/5b10f0eb85d8e8ccdcf9b5e38e5dd372e241e24e (gc only port, omitted changes)\r\n- https://github.com/dotnet/coreclr/commit/a7d801aa30e40c6e01536dd0355199842ee5e4c8 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/165ffa6a0bb2d8b57e83aa95a395a798ad5f5f4f (manual port)\r\n- https://github.com/dotnet/coreclr/commit/bd3424913138d10f9c4fdb6176fb471e8d1ba1d7 (manual port)\r\n- https://github.com/dotnet/coreclr/commit/5b02b0104f3ceba491b7b25fcb4d997e477d2840 (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/558f8e99680ab5b6ea9d4796236e12439363657f (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/0b86feb1d2830cc1de5db16ee86c0998c01ca30a (gc only port)\r\n- https://github.com/dotnet/coreclr/commit/e64cbb5c722ab9b7d93ca32445e17df1115be70c (manual port)","Url":"https://github.com/dotnet/corert/pull/7473","RelatedDescription":"Closed or merged PR \"Port GC changes from coreclr - 10\" (#7473)"},{"Id":"450701509","IsPullRequest":true,"CreatedAt":"2019-05-31T13:00:36","Actor":"MichalStrehovsky","Number":"7474","RawContent":null,"Title":"Emit all symbols as global on Windows","State":"closed","Body":"Symbols don't end up in the PDB otherwise and the only things with symbols are methods with debug information and things that have a non-null `_nodeFactory.GetSymbolAlternateName`.\r\n\r\nThis regressed in #7249.","Url":"https://github.com/dotnet/corert/pull/7474","RelatedDescription":"Closed or merged PR \"Emit all symbols as global on Windows\" (#7474)"},{"Id":"450408735","IsPullRequest":true,"CreatedAt":"2019-05-31T04:21:41","Actor":"Dotnet-GitSync-Bot","Number":"7471","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7471","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7471)"},{"Id":"449790158","IsPullRequest":true,"CreatedAt":"2019-05-30T20:47:37","Actor":"trylek","Number":"7465","RawContent":null,"Title":"CPAOT fixes for Linux","State":"closed","Body":"I found out that the R2R I was producing with CPAOT\r\nwas crashing in CoreCLR PAL during memory mapping and\r\nit silently switched over to runtime JIT without any\r\nindications of doing so.\r\n\r\nThe problem is that the relative offset of all section\r\nstart RVA's within a page must match the corresponding\r\nfile offsets. As PEBuilder doesn't support this logic,\r\nI ended up copying a bunch of enumerations from the\r\nrelated CoreFX code and I added logic to patch the\r\nsection headers manually. At some point we might want\r\nto flow some of these changes back to the CoreFX repo.\r\n\r\nI have also moved the machine OS override logic to\r\nR2RPEBuilder for better encapsulation. As a side effect\r\nof the TargetBuilder propagatioin I have fixed code\r\npadding to select the proper instruction on all\r\narchitectures.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7465","RelatedDescription":"Closed or merged PR \"CPAOT fixes for Linux\" (#7465)"},{"Id":"450411333","IsPullRequest":true,"CreatedAt":"2019-05-30T17:09:07","Actor":"MichalStrehovsky","Number":"7472","RawContent":null,"Title":"Selective integration to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7472","RelatedDescription":"Closed or merged PR \"Selective integration to nmirror\" (#7472)"},{"Id":"450353364","IsPullRequest":true,"CreatedAt":"2019-05-30T16:55:27","Actor":"MichalStrehovsky","Number":"7469","RawContent":null,"Title":"Enable devirtualization/stackalloc optimization with RyuJIT","State":"closed","Body":"(Implementation for both CPAOT and full AOT, since the non-shared parts are just a couple lines)\r\n\r\nWe've had a TODO for a while that disabled devirtualization on valuetype methods because we didn't have a representation of unboxing thunks in the type system (the result of a devirtualization that lands on a valuetype method is an unboxing thunk).\r\n\r\nWith this, I'm adding an unboxing thunk `MethodDesc` _within the JitInterface only_. Unboxing thunks are weird enough that we don't want them to roam around the whole system, but if they're just something we hand to RyuJIT when needed and convert them back to the real thing when we're done, it's less of a trouble. I'm fully expecting that we're going to see these escaping into the dependency system from time to time, causing bugs. But that's life.\r\n\r\n* Most of the commit is a general purpose `MethodDelegator` class that delegates calls to a different `MethodDesc`.\r\n* We use the `MethodDelegator` within the JitInterface to create a wrapper for non-unboxing methods to represent an unboxing thunk.\r\n* We make it so that the unboxing wrapper is returned from `resolveVirtualMethod` when the result of resolution is a valuetype method.\r\n* We then make it possible for RyuJIT to unwrap it with `getUnboxedEntry`\r\n* We also unwrap it in `getCallInfo` so that it doesn't get into the dependency system.\r\n\r\nFixes #7463.","Url":"https://github.com/dotnet/corert/pull/7469","RelatedDescription":"Closed or merged PR \"Enable devirtualization/stackalloc optimization with RyuJIT\" (#7469)"},{"Id":"449590916","IsPullRequest":false,"CreatedAt":"2019-05-30T16:55:26","Actor":"jkotas","Number":"7463","RawContent":null,"Title":"Missing devirtualization + conversion to stackallocation optimization","State":"closed","Body":"```\r\nusing System;\r\n\r\ninterface IMyInterface\r\n{\r\n    void foo();\r\n}\r\n\r\nstruct MyStruct : IMyInterface\r\n{\r\n    public void foo() { }\r\n}\r\n\r\nclass Program\r\n{\r\n    static void Work<T>(T s)\r\n    {\r\n        if (s is IMyInterface) ((IMyInterface)s).foo();\r\n    }\r\n\r\n    static void Main(string[] args)\r\n    {\r\n        for (int i = 0; i < 10000000; i++)\r\n            Work<MyStruct>(default);\r\n        Console.WriteLine(GC.CollectionCount(0));\r\n    }\r\n}\r\n```\r\n\r\n`dotnet publish -c Release -r win-x64`\r\nActual result: 57\r\nExpected result: 0","Url":"https://github.com/dotnet/corert/issues/7463","RelatedDescription":"Closed issue \"Missing devirtualization + conversion to stackallocation optimization\" (#7463)"},{"Id":"450358407","IsPullRequest":true,"CreatedAt":"2019-05-30T16:55:17","Actor":"stephentoub","Number":"7470","RawContent":null,"Title":"Expose Environment.TickCount64","State":"closed","Body":"Contributes to https://github.com/dotnet/corefx/issues/35499","Url":"https://github.com/dotnet/corert/pull/7470","RelatedDescription":"Closed or merged PR \"Expose Environment.TickCount64\" (#7470)"},{"Id":"449918770","IsPullRequest":true,"CreatedAt":"2019-05-30T12:32:49","Actor":"Dotnet-GitSync-Bot","Number":"7467","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7467","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7467)"},{"Id":"449916034","IsPullRequest":true,"CreatedAt":"2019-05-29T20:01:50","Actor":"MichalStrehovsky","Number":"7466","RawContent":null,"Title":"Delete netci.groovy","State":"closed","Body":"Bye Jenkins.","Url":"https://github.com/dotnet/corert/pull/7466","RelatedDescription":"Closed or merged PR \"Delete netci.groovy\" (#7466)"},{"Id":"449601675","IsPullRequest":true,"CreatedAt":"2019-05-29T11:55:19","Actor":"jkotas","Number":"7464","RawContent":null,"Title":"Print descriptive error for GeneratePackageOnBuild","State":"closed","Body":"Fixes #7460","Url":"https://github.com/dotnet/corert/pull/7464","RelatedDescription":"Closed or merged PR \"Print descriptive error for GeneratePackageOnBuild\" (#7464)"},{"Id":"449495977","IsPullRequest":false,"CreatedAt":"2019-05-29T11:55:19","Actor":"timmydo","Number":"7460","RawContent":null,"Title":"Publish native shared library fails because project.deps.json not found","State":"closed","Body":"csproj:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Library</OutputType>\r\n    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.DotNet.ILCompiler\" Version=\"1.0.0-alpha-*\" />\r\n  </ItemGroup>\r\n</Project>\r\n\r\n```\r\n\r\nprogram.cs:\r\n```\r\nusing System;\r\n\r\nnamespace System.Runtime.InteropServices\r\n{\r\n    [AttributeUsage(AttributeTargets.Method)]\r\n    public sealed class NativeCallableAttribute : Attribute\r\n    {\r\n        public string EntryPoint;\r\n        public CallingConvention CallingConvention;\r\n        public NativeCallableAttribute() { }\r\n    }\r\n}\r\n\r\nnamespace BlahBlah\r\n{\r\n    using System;\r\n    using System.Runtime.InteropServices;\r\n\r\n    public static class NativeMethods\r\n    {\r\n        [NativeCallable(EntryPoint = \"Blah\", CallingConvention = CallingConvention.StdCall)]\r\n        public static void Blah(IntPtr blah)\r\n        {\r\n        }\r\n    }\r\n}\r\n\r\n\r\n```\r\n\r\n\r\n```\r\nC:\\Users\\timmydo\\source\\repos\\corert1\\corert1\r\nλ  dotnet publish /p:NativeLib=Shared -r win-x64 -c Debug\r\nMicrosoft (R) Build Engine version 16.2.0-preview-19274-01+7708b265e for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 758.81 ms for C:\\Users\\timmydo\\source\\repos\\corert1\\corert1\\corert1.csproj.\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\n     Creating library bin\\Debug\\netstandard2.0\\win-x64\\native\\corert1.lib and object bin\\Debug\\netstandard2.0\\win-x64\\native\\corert1.exp\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012078\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(152,5): error MSB3030: Could not copy the file \"C:\\Users\\timmydo\\source\\repos\\corert1\\corert1\\bin\\Debug\\netstandard2.0\\win-x64\\corert1.deps.json\" because it was not found. [C:\\Users\\timmydo\\source\\repos\\corert1\\corert1\\corert1.csproj]\r\n```\r\n\r\nIt seems the culprit is GeneratePackagesOnBuild. If you remove that, it works.","Url":"https://github.com/dotnet/corert/issues/7460","RelatedDescription":"Closed issue \"Publish native shared library fails because project.deps.json not found\" (#7460)"},{"Id":"449548102","IsPullRequest":true,"CreatedAt":"2019-05-29T04:33:43","Actor":"Dotnet-GitSync-Bot","Number":"7461","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @VSadov @stephentoub","Url":"https://github.com/dotnet/corert/pull/7461","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7461)"},{"Id":"449473749","IsPullRequest":true,"CreatedAt":"2019-05-29T00:44:47","Actor":"Dotnet-GitSync-Bot","Number":"7459","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @marek-safar","Url":"https://github.com/dotnet/corert/pull/7459","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7459)"},{"Id":"449408805","IsPullRequest":true,"CreatedAt":"2019-05-28T20:55:22","Actor":"Dotnet-GitSync-Bot","Number":"7458","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @EgorBo @MarcoRossignoli","Url":"https://github.com/dotnet/corert/pull/7458","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7458)"},{"Id":"449179795","IsPullRequest":true,"CreatedAt":"2019-05-28T15:30:22","Actor":"Dotnet-GitSync-Bot","Number":"7457","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7457","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7457)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"451028964","IsPullRequest":true,"CreatedAt":"2019-06-04T21:18:26","Actor":"MSLukeWest","Number":"3289","RawContent":null,"Title":"Adding ResolveReferences target to PublishItemsOutputGroup dependencies","State":"closed","Body":"This is needed in order for this output group to contain output from referenced projects.","Url":"https://github.com/dotnet/sdk/pull/3289","RelatedDescription":"Closed or merged PR \"Adding ResolveReferences target to PublishItemsOutputGroup dependencies\" (#3289)"},{"Id":"451739279","IsPullRequest":true,"CreatedAt":"2019-06-04T02:30:22","Actor":"dotnet-bot","Number":"3298","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3298","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#3298)"},{"Id":"451268345","IsPullRequest":true,"CreatedAt":"2019-06-03T18:15:49","Actor":"wli3","Number":"3294","RawContent":null,"Title":"Update branding to preview 7","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3294","RelatedDescription":"Closed or merged PR \"Update branding to preview 7\" (#3294)"},{"Id":"451262824","IsPullRequest":true,"CreatedAt":"2019-06-03T18:14:34","Actor":"wli3","Number":"3293","RawContent":null,"Title":"Merge master to release/3.0.1xx for preview6","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3293","RelatedDescription":"Closed or merged PR \"Merge master to release/3.0.1xx for preview6\" (#3293)"},{"Id":"451585629","IsPullRequest":true,"CreatedAt":"2019-06-03T16:49:19","Actor":"sbomer","Number":"3297","RawContent":null,"Title":"Update link (aka.ms/illink -> aka.ms/dotnet-illink)","State":"open","Body":"Received feedback from @richlander that we usually use links of the form dotnet-*.\r\n\r\n@nguerrera PTAL","Url":"https://github.com/dotnet/sdk/pull/3297","RelatedDescription":"Open PR \"Update link (aka.ms/illink -> aka.ms/dotnet-illink)\" (#3297)"},{"Id":"451127590","IsPullRequest":false,"CreatedAt":"2019-06-03T15:30:58","Actor":"AntonPlotnikov","Number":"3291","RawContent":null,"Title":"DotNetAppHost's version info and icon","State":"closed","Body":"Hello. I need to add a version info and custom icon for DotNetAppHost? We use potable mode (Framework-dependent deployment), and there are some branding and security requirements. Unfortunately, I can add version info only to application's main assembly file (dll), not to exe file (we use RID win7-x64) during building in Visual Studio 2019. Is it any way to do this during MSBuild process?\r\n![2019-06-01_23-57-09](https://user-images.githubusercontent.com/18666703/58753548-558b5b80-84c9-11e9-9deb-c51f6890484b.png)\r\n","Url":"https://github.com/dotnet/sdk/issues/3291","RelatedDescription":"Closed issue \"DotNetAppHost's version info and icon\" (#3291)"},{"Id":"451422781","IsPullRequest":true,"CreatedAt":"2019-06-03T11:07:48","Actor":"vitek-karas","Number":"3296","RawContent":null,"Title":"Add support for RollForward property","State":"open","Body":"The `GenerateRuntimeConfigurationFiles` task now recognizes `RollForward` parameter (and it's passed from the `RollForward` property). It writes its value into the .runtimeconfig.json as the `rollForward` setting.\r\n\r\nThis implements the SDK side of the roll forward feature as described in the [runtime binding](https://github.com/dotnet/designs/blob/master/accepted/runtime-binding.md#rollforward).","Url":"https://github.com/dotnet/sdk/pull/3296","RelatedDescription":"Open PR \"Add support for RollForward property\" (#3296)"},{"Id":"451374216","IsPullRequest":false,"CreatedAt":"2019-06-03T09:14:09","Actor":"ViktorHofer","Number":"3295","RawContent":null,"Title":"TargetExt conflicts with UseAppHost","State":"open","Body":"`TargetExt` defaults to \".dll\" on .NETCore and .NETStandard even if the `OutputType` is \".exe\": https://github.com/dotnet/sdk/blob/90e8a529be026d06fc8965d460927193aca5b005/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.BeforeCommon.targets#L74-L75\r\n\r\nStarting with \".NETCoreApp, Version=3.0\", `UseAppHost` defaults to true: https://github.com/dotnet/sdk/blob/372e67d51167792db2fdaeebf48b6d8fb962e713/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.RuntimeIdentifierInference.targets#L110\r\n\r\nThe `_NativeExecutableExtension` defaults to true as the `DefaultAppHostRuntimeIdentifier` on Windows is \"win-x64\":\r\nhttps://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.targets#L67\r\n\r\nThe `_GetAppHostPaths` target sets the `AppHostIntermediatePath` property (based on `_NativeExecutableExtension` which defaults to \".exe\" because auf `UseAppHost` is true) which then is added to the `None` ItemGroup determined to be copied to the output directory:\r\nhttps://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.targets#L491-L497\r\n\r\n![image](https://user-images.githubusercontent.com/7412651/58790220-35a28780-85f0-11e9-9e2c-7e55d80d66e6.png)\r\n\r\nThe issue is that such a file is never produced as the TargetExt defaults to \".dll\". If I got this right this means that every app \".NETCoreApp, Version=3.0\" with `OutputType` \"Exe\" fails to copy its content to the output directory. This would be big break and I'm sure this would have already been caught. I assume I'm missing something here. \r\n\r\ncc @nguerrera @dsplaisted @ericstj ","Url":"https://github.com/dotnet/sdk/issues/3295","RelatedDescription":"Open issue \"TargetExt conflicts with UseAppHost\" (#3295)"},{"Id":"451078446","IsPullRequest":true,"CreatedAt":"2019-06-01T12:04:11","Actor":"dotnet-maestro[bot]","Number":"3290","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190531.5\r\n- **Date Produced**: 5/31/2019 10:53 PM\r\n- **Commit**: c901850aa1e175c124da771863dacc763743a520\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19281.5\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190601.2\r\n- **Date Produced**: 6/1/2019 1:04 PM\r\n- **Commit**: 8fd0b50b9d689e8d87ab202f11b7c9fbe81271c4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19301.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19301.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190602.2\r\n- **Date Produced**: 6/2/2019 1:09 PM\r\n- **Commit**: e6a5d5f970bb872451c6310ae34eda31041fb552\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19302.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19302.2\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.1\r\n- **Date Produced**: 6/4/2019 8:16 AM\r\n- **Commit**: d2599acd9703ef747dfb4329ec3e3beff182e755\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19304.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3290","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3290)"},{"Id":"450415518","IsPullRequest":true,"CreatedAt":"2019-05-31T23:21:24","Actor":"sbomer","Number":"3279","RawContent":null,"Title":"Set ILLink defaults","State":"closed","Body":"These defaults root the non-framework assemblies.\r\n@nguerrera @fadimounir @swaroop-sridhar PTAL","Url":"https://github.com/dotnet/sdk/pull/3279","RelatedDescription":"Closed or merged PR \"Set ILLink defaults\" (#3279)"},{"Id":"449528063","IsPullRequest":true,"CreatedAt":"2019-05-31T21:02:35","Actor":"dotnet-bot","Number":"3269","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3269","RelatedDescription":"Closed or merged PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#3269)"},{"Id":"450799201","IsPullRequest":false,"CreatedAt":"2019-05-31T18:06:56","Actor":"DustinCampbell","Number":"3287","RawContent":null,"Title":"Getting package assets cache messages on build with the latest master bits","State":"closed","Body":"@nguerrera, @dsplaisted: I started getting loads of messages during build in the winforms-designer repo after updating to the most recent SDK:\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012135\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(234,5):\r\nmessage NETSDK1062: Unable to use package assets cache due to I/O error . This can occur when the\r\nsame project is built more than once in parallel. Performance may be degraded,  but the build result will \r\nnot be impacted. [D:\\Projects\\winforms-designer\\src\\WinFormsSurface\\WinFormsS urface.csproj]\r\n```\r\n\r\nAre these messages possibly related to https://github.com/dotnet/sdk/pull/3268? It looks like this error comes from ResolvePackageAssets.cs and those are the most recent changes around the code that triggers this message. Setting `<DisablePackageAssetsCache>true</DisablePackageAssetsCache>` makes the messages go away, but it doesn't seem like the right fix.","Url":"https://github.com/dotnet/sdk/issues/3287","RelatedDescription":"Closed issue \"Getting package assets cache messages on build with the latest master bits\" (#3287)"},{"Id":"450641573","IsPullRequest":true,"CreatedAt":"2019-05-31T18:06:56","Actor":"dsplaisted","Number":"3284","RawContent":null,"Title":"Fix failure to read assets cache file the first time it's written","State":"closed","Body":"Fixes issue reported by @nguerrera, introduced in #3268:\r\n\r\n> Seeing message NETSDK1062: Unable to use package assets cache due to I/O error. This can occur when the same project is built more than once in parallel. Performance may be degraded, but the build result will not be impacted. [D:\\Temp\\demo\\demo.csproj]\r\n>\r\n> Looks like the change you made has the file still open for write when we try to read it back on first build.\r\n>\r\n> Can you take a look, this will be a significant perf regression in preview 6\r\n\r\nFix #3287","Url":"https://github.com/dotnet/sdk/pull/3284","RelatedDescription":"Closed or merged PR \"Fix failure to read assets cache file the first time it's written\" (#3284)"},{"Id":"450472482","IsPullRequest":true,"CreatedAt":"2019-05-31T17:54:26","Actor":"fadimounir","Number":"3281","RawContent":null,"Title":"Refactor ComputeFilesToPublish to enable ILLinker and R2R for packaging projects","State":"closed","Body":"Packaging projects depend on ComputeFilesToPublish only instead of ComputeAndCopyFilesToPublishDirectory, so this refactoring will enable R2R and ILLinker to execute.","Url":"https://github.com/dotnet/sdk/pull/3281","RelatedDescription":"Closed or merged PR \"Refactor ComputeFilesToPublish to enable ILLinker and R2R for packaging projects\" (#3281)"},{"Id":"450077235","IsPullRequest":true,"CreatedAt":"2019-05-31T17:36:11","Actor":"peterhuene","Number":"3275","RawContent":null,"Title":"Log error when building for Windows Desktop on non-Windows.","State":"closed","Body":"This PR causes the SDK to log an error (NETSDK1100) if the user attempts to\r\nbuild a Windows Desktop targeted application on a non-Windows platform.\r\n\r\nThis works via any explicit or implicit (i.e. from the SDK) framework reference\r\nto `Microsoft.WindowsDesktop.App*`; if the current platform is not Windows and\r\nthe framework reference exists, the error is logged.\r\n\r\nFixes dotnet/cli#11410 and dotnet/cli#10842.","Url":"https://github.com/dotnet/sdk/pull/3275","RelatedDescription":"Closed or merged PR \"Log error when building for Windows Desktop on non-Windows.\" (#3275)"},{"Id":"450829429","IsPullRequest":false,"CreatedAt":"2019-05-31T14:33:34","Actor":"atanasa","Number":"3288","RawContent":null,"Title":"dotnet publish does not warn on version conflicts with packages in the store manifest","State":"open","Body":"I have a project that depends on the `Newtonsoft.Json` package version **10.0.1**.\r\nI have a store manifest file that includes `Newtonsoft.Json` package version **10.0.3**.\r\nWhen I run `dotnet publish` the output contains the Newtonsoft.Json.dll.\r\n\r\n### Steps to reproduce:\r\n1. Create a store manifest file:\r\n```xml\r\n<StoreArtifacts>\r\n   <Package Id=\"Newtonsoft.Json\" Version=\"10.0.3\" />\r\n</StoreArtifacts>\r\n```\r\n1. Create an executable project that specifies that manifest:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"10.0.1\" />\r\n  </ItemGroup>\r\n  <PropertyGroup>\r\n    <TargetManifestFiles>manifest.xml</TargetManifestFiles>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n1. Run `dotnet publish` and observe the output of the publish\r\n\r\n### Expected:\r\nWhen I run `dotnet publish` the output should not contain Newtonsoft.Json.dll (as the version in the \"store\" is higher).\r\n\r\n**Edit by nguerrera** Above is by design as there is no unification to higher version when a package is resolved from the store at runtime. But we should have a warning when this case is triggered since it can be surprising. Changed title of bug appropriate.\r\n\r\n### Actual:\r\nWhen I run `dotnet publish` the output contains the Newtonsoft.Json.dll.\r\n\r\n**Edit by nguerrera** And there is no diagnostic that a different version is in the manifest.\r\n\r\nI've created a simple repro solution:\r\n[ReproResolvePublishedAssemblies.zip](https://github.com/dotnet/sdk/files/3241624/ReproResolvePublishedAssemblies.zip)\r\n\r\n`dotnet --info`:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.300\r\n Commit:    73efd5bd87\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.300\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n```\r\n","Url":"https://github.com/dotnet/sdk/issues/3288","RelatedDescription":"Open issue \"dotnet publish does not warn on version conflicts with packages in the store manifest\" (#3288)"},{"Id":"450787725","IsPullRequest":false,"CreatedAt":"2019-05-31T13:00:19","Actor":"davkean","Number":"3286","RawContent":null,"Title":"Entering an unrecognized TFM crashes ResolvePackageAssets task during design-time builds","State":"open","Body":"Create a project with the following:\r\n\r\n``` XML\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFrameworks>foobar</TargetFrameworks>\r\n  </PropertyGroup>\r\n</Project>\r\n```\r\n\r\nExpected: Friendly error similar to command-line:\r\n\r\n```\r\n  C:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets(96,\r\n5): error NETSDK1013: The TargetFramework value 'foobar' was not recognized. It may be misspelled. If not, then the Tar\r\ngetFrameworkIdentifier and/or TargetFrameworkVersion properties must be specified explicitly. [C:\\Users\\davkean\\Source\\\r\nRepos\\ConsoleApp424\\ConsoleApp424\\ConsoleApp424.csproj]\r\n```\r\n\r\nActual:\r\n```\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tMSB4018\tThe \"ResolvePackageAssets\" task failed unexpectedly.\r\nNuGet.Frameworks.FrameworkException: Invalid framework identifier ''.\r\n   at NuGet.Frameworks.NuGetFramework.GetShortFolderName(IFrameworkNameProvider mappings)\r\n   at Microsoft.NET.Build.Tasks.LockFileExtensions.GetTargetAndThrowIfNotFound(LockFile lockFile, NuGetFramework framework, String runtime)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheWriter..ctor(ResolvePackageAssets task, Stream stream)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.CreateReaderFromDisk(ResolvePackageAssets task, Byte[] settingsHash)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader..ctor(ResolvePackageAssets task)\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ReadItemGroups()\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ExecuteCore()\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\tConsoleApp424\tC:\\Program Files\\dotnet\\sdk\\2.2.202\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets\t208\t\r\n```\r\n\r\nWhat's worse is that you have lots of TFMs you have no idea which is the broken one as the error doesn't include it.","Url":"https://github.com/dotnet/sdk/issues/3286","RelatedDescription":"Open issue \"Entering an unrecognized TFM crashes ResolvePackageAssets task during design-time builds\" (#3286)"},{"Id":"450765833","IsPullRequest":true,"CreatedAt":"2019-05-31T12:04:31","Actor":"dotnet-maestro[bot]","Number":"3285","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190530.2\r\n- **Date Produced**: 5/30/2019 5:22 PM\r\n- **Commit**: 7c50d548001a83a18449ad4dda370122ede5fbf6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19280.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3285","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3285)"},{"Id":"450273987","IsPullRequest":true,"CreatedAt":"2019-05-31T12:04:04","Actor":"dotnet-maestro[bot]","Number":"3278","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190529.5\r\n- **Date Produced**: 5/30/2019 3:41 AM\r\n- **Commit**: fb62c6377a6bd163af2a7516260f064498942585\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19279.5\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3278","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3278)"},{"Id":"450571724","IsPullRequest":true,"CreatedAt":"2019-05-31T06:07:03","Actor":"peterhuene","Number":"3283","RawContent":null,"Title":"Fix filtering of satellite assemblies when publishing for netcoreapp3.0.","State":"closed","Body":"This PR fixes filtering of satellite assemblies when publishing an\r\napplication targeting netcoreapp3.0.\r\n\r\nAn incorrect property name in the `_FilterSatelliteResourcesForPublish` target\r\nwas causing the satellite filtering done for publish to have no effect.\r\n\r\nThis was only a problem when not reusing the build output for publish;\r\nunfortunately this is currently the case for netcoreapp3.0 targeted\r\napplications due to references that are marked as `PrivateAssets=\"all\"`.\r\n\r\nThis PR fixes the property name and adds test coverage for publishing\r\nwhen targeting netcoreapp3.0 with filtered satellite assemblies.\r\n\r\nFixes #3277.","Url":"https://github.com/dotnet/sdk/pull/3283","RelatedDescription":"Closed or merged PR \"Fix filtering of satellite assemblies when publishing for netcoreapp3.0.\" (#3283)"},{"Id":"450115097","IsPullRequest":false,"CreatedAt":"2019-05-31T06:07:03","Actor":"dsplaisted","Number":"3277","RawContent":null,"Title":"SatelliteResourceLanguages doesn't filter resources from Publish output when targeting .NET Core 3.0","State":"closed","Body":"Publish the following project:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <SatelliteResourceLanguages>en;de;pt</SatelliteResourceLanguages>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Humanizer\" Version=\"2.6.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n## Expected\r\n\r\nPublish folder should only have resource subfolders for `de` and `pt`.\r\n\r\n## Actual\r\n\r\nThe publish folder will include the Humanizer resources for all languages the package supports:\r\n\r\n![image](https://user-images.githubusercontent.com/145043/58606671-4f8b4580-8251-11e9-9e22-593e29ceab4d.png)\r\n\r\n## Notes\r\n\r\nWhen targeting .NET Core 2.2, the publish output is correctly filtered.  Also, when targeting .NET Core 3.0, the build output is correctly filtered, but the publish output is not.\r\n\r\nFYI @peterhuene @livarcocc, we should fix this for 3.0","Url":"https://github.com/dotnet/sdk/issues/3277","RelatedDescription":"Closed issue \"SatelliteResourceLanguages doesn't filter resources from Publish output when targeting .NET Core 3.0\" (#3277)"},{"Id":"450525123","IsPullRequest":true,"CreatedAt":"2019-05-31T04:37:01","Actor":"dsplaisted","Number":"3282","RawContent":null,"Title":"Better test logging","State":"closed","Body":"This PR removes all direct uses of the CLI Utils `Command` class, and instead routes them through the SDK's `TestCommand`.  This will log the start info, STDOUT, and STDERR.\r\n\r\nThis will, for example, make it a lot easier to see what the problem is from the test logs when a test fails because the right shared framework isn't installed.  The error information in that case goes to STDERR, which a lot of the tests which used `Command.Create` weren't capturing.\r\n\r\nFYI @dotnet/dotnet-cli, we should continue to follow the new pattern of using `DotnetCommand` and `RunExeCommand` instead of `Command.Create` in future tests.","Url":"https://github.com/dotnet/sdk/pull/3282","RelatedDescription":"Closed or merged PR \"Better test logging\" (#3282)"},{"Id":"450457056","IsPullRequest":true,"CreatedAt":"2019-05-30T21:22:34","Actor":"fadimounir","Number":"3280","RawContent":null,"Title":"Fix property name in error messages","State":"closed","Body":"Change `ReadyToRun` to `PublishReadyToRun` in error messages","Url":"https://github.com/dotnet/sdk/pull/3280","RelatedDescription":"Closed or merged PR \"Fix property name in error messages\" (#3280)"},{"Id":"450071695","IsPullRequest":true,"CreatedAt":"2019-05-30T17:40:01","Actor":"livarcocc","Number":"3274","RawContent":null,"Title":"Merge release/2.2.2xx into release/2.2.3xx","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3274","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx into release/2.2.3xx\" (#3274)"},{"Id":"450070741","IsPullRequest":true,"CreatedAt":"2019-05-30T17:39:42","Actor":"livarcocc","Number":"3273","RawContent":null,"Title":"Merge release/2.1.6xx into release/2.1.7xx","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3273","RelatedDescription":"Closed or merged PR \"Merge release/2.1.6xx into release/2.1.7xx\" (#3273)"},{"Id":"450081027","IsPullRequest":true,"CreatedAt":"2019-05-30T00:56:27","Actor":"cdmihai","Number":"3276","RawContent":null,"Title":"Add build and clean tests for static graph","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3276","RelatedDescription":"Open PR \"Add build and clean tests for static graph\" (#3276)"},{"Id":"449768564","IsPullRequest":true,"CreatedAt":"2019-05-29T14:03:17","Actor":"dotnet-maestro[bot]","Number":"3271","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190528.1\r\n- **Date Produced**: 5/28/2019 6:41 PM\r\n- **Commit**: 11f90a2a260422201895de58e57170131ab4efe7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19278.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3271","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3271)"},{"Id":"449528087","IsPullRequest":true,"CreatedAt":"2019-05-29T00:02:08","Actor":"dotnet-bot","Number":"3270","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3270","RelatedDescription":"Open PR \"Merge release/2.2.2xx to release/3.0.1xx\" (#3270)"},{"Id":"450060047","IsPullRequest":false,"CreatedAt":"2019-05-25T01:04:11","Actor":"kakiyama1018","Number":"3272","RawContent":null,"Title":"Build issue when targeting .NET core 2.1 on machine with only .NET Core SDK 2.2","State":"open","Body":"I'm trying to ship some code samples to users that will work regardless of whether they have .NET SDK 2.1 or 2.2.\r\n\r\nAccording to...\r\nhttps://docs.microsoft.com/en-us/dotnet/core/versions/selection\r\n... it states that:\r\n\r\n\"A given SDK supports a fixed set of frameworks, capped to the target framework of the runtime it ships with. For example, the .NET Core 2.0 SDK includes the .NET Core 2.0 runtime, which is an implementation of the netcoreapp2.0 target framework. The .NET Core 2.0 SDK supports netcoreapp1.0, netcoreapp1.1, and netcoreapp2.0 but not netcoreapp2.1 (or higher). You install the .NET Core 2.1 SDK to build for netcoreapp2.1.\"\r\n\r\nAs such, I've chosen to have...\r\n  <TargetFramework>netcoreapp2.1</TargetFramework>.\r\n... in the .csproj in hopes that the sample can be built on machines that have either .NET Core SDK 2.1 or 2.2.\r\n\r\nHowever, we are running into the following build-time error on machines that simply have .NET Core SDK 2.2 installed:\r\n\r\nerror NU1202: Package Microsoft.NETCore.App 2.2.0 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1). Package Microsoft.NETCore.App 2.2.0 supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2)\r\n\r\nWhy can't we build an application that targets 2.1 on a machine that has .NET Core SDK 2.2, as the documentation implies to be allowed (since the target of 2.1 is lower than the SDK version that is installed on the machine)?","Url":"https://github.com/dotnet/sdk/issues/3272","RelatedDescription":"Open issue \"Build issue when targeting .NET core 2.1 on machine with only .NET Core SDK 2.2\" (#3272)"},{"Id":"451752075","IsPullRequest":false,"CreatedAt":"2018-06-29T10:44:56","Actor":"petroemil","Number":"3299","RawContent":null,"Title":"Define InternalsVisibleTo \"attributes\" in the csproj file","State":"open","Body":"Many of the AssemblyInfo.cs file's content are already generated from the project file, meaning in many (or more like most) cases we don't need to have an AssemblyInfo.cs file in our projects. \r\n\r\nThere is one quite frequently used assembly level attribute though that still has to be defined as a traditional attribute - the `InternalsVisibleToAttribute`.\r\n\r\nIt would be nice if this could also be defined from the project file, which would also mean we could easily define it in a solution level props file, enabling all projects implicitly to see their `internal`s from the test project(s).","Url":"https://github.com/dotnet/sdk/issues/3299","RelatedDescription":"Open issue \"Define InternalsVisibleTo \"attributes\" in the csproj file\" (#3299)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1136040221730934785","CreatedAt":"2019-06-04T22:41:10+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":9,"FavoriteCount":5,"RawContent":null},{"Id":"1135955901439971328","CreatedAt":"2019-06-04T17:06:06+00:00","UserScreenname":"dotnet","Text":"A Microsoft Build 2019, @LadyNaggaga showed us a new way to learn .NET using Try .NET\n\nhttps://t.co/KnbAuDyRzr #dotnet #dotnetcore","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":7,"RawContent":null},{"Id":"1134142130094346245","CreatedAt":"2019-05-30T16:58:49+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":5,"FavoriteCount":1,"RawContent":null},{"Id":"1133749843564740608","CreatedAt":"2019-05-29T15:00:01+00:00","UserScreenname":"dotnet","Text":"ML .NET Model Lifecycle with Azure DevOps CI/CD pipelines\nhttps://t.co/zlCqa4I8vn https://t.co/K17nKopaZn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":37,"FavoriteCount":25,"RawContent":null},{"Id":"1133746063792205826","CreatedAt":"2019-05-29T14:45:00+00:00","UserScreenname":"dotnet","Text":"In 15 minutes, watch @terrajobst adding return statements and control flow analysis to his compiler project. https://t.co/guh6xtpdbd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":7,"RawContent":null},{"Id":"1133416391522918401","CreatedAt":"2019-05-28T16:55:00+00:00","UserScreenname":"dotnet","Text":"Porting desktop apps to .NET Core by @oliagavrysh. https://t.co/XV5Ed3Nku8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":107,"FavoriteCount":44,"RawContent":null},{"Id":"1131606214717116418","CreatedAt":"2019-05-23T17:02:00+00:00","UserScreenname":"dotnet","Text":"We're now live! https://t.co/mHsIdILy7f","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null},{"Id":"1131209353829052418","CreatedAt":"2019-05-22T14:45:01+00:00","UserScreenname":"dotnet","Text":"Join @terrajobst in 15 minutes when he'll be adding break and continue statements to his compiler project. https://t.co/guh6xtpdbd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":1,"RawContent":null}]}},"RunOn":"2019-06-05T05:30:38.2264599Z","RunDurationInMilliseconds":14302}