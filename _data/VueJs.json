{"Data":{"Vue-Issues":{"Issues":[{"Id":"391482646","IsPullRequest":false,"CreatedAt":"2018-12-16T17:58:22","Actor":"DominikSerafin","Number":"9207","RawContent":null,"Title":"Client-side rendered template adds additional Carriage Return characters to DOM","State":"closed","Body":"## Version\r\n\r\nvue: 2.5.21\r\nvue-server-renderer: 2.5.21\r\nvue-template-compiler: 2.5.21\r\nvue-loader: 15.4.2\r\nwebpack: 4.27.1\r\n@babel/core: 7.2.0\r\n@babel/plugin-transform-runtime: 7.2.0\r\n@babel/preset-env: 7.2.0\r\n\r\n(I'm not sure, but I think this problem was non-existent when I was using vue-loader@13)\r\n\r\n## Reproduction link\r\n\r\n(Needs build step)\r\n\r\n## Steps to reproduce\r\n\r\n1. Write source code with markup elements that have new lines in it\r\n2. Build it & run it (or hot-reload in development environment)\r\n3. (More info in the image below)\r\n\r\n\r\n## What is expected?\r\nLine feeds, carriage returns and whitespaces should be removed from the compiled template. Like here: https://vuejs.org/v2/guide/render-function.html#Template-Compilation\r\n\r\nHydration doesn't add additional carriage return (%0D) characters to rendered content.\r\n\r\nVisually rendered content doesn't have any unnecessary spaces.\r\n\r\n\r\n## What is actually happening?\r\n\r\nLine feeds, carriage returns and whitespaces remain in compiled code and on top of that render differently after SSR hydration.\r\n\r\nHydration adds additional carriage return (%0D) characters to rendered content.\r\n\r\nVisually rendered content has unnecessary spaces after SSR hydration (but not before).\r\n\r\nThis behavior can be observed here: https://workaline.com/collection/vue (it looks fine before hydration kicks in)\r\n\r\n## Image explaining it a little bit more: \r\n\r\n![crlf](https://user-images.githubusercontent.com/7447244/50055831-346dc300-0154-11e9-83e6-b96d4ed74b6e.png)\r\n\r\n\r\n## Configs:\r\n\r\nNote: I've tried changing vue-loader `compilerOptions.preserveWhitespace` to different values - but that didn't changed anything.\r\n\r\n### webpack.base.config.js\r\n\r\n```\r\n/*------------------------------------*\\\r\n  Imports\r\n\\*------------------------------------*/\r\nconst NODE_ENV = process.env.NODE_ENV || 'development';\r\nconst path = require('path');\r\nconst postCSSPresetEnv = require('postcss-preset-env');\r\n\r\n\r\n/*------------------------------------*\\\r\n  Options\r\n\\*------------------------------------*/\r\nconst browsersList = [\r\n  '> 1%',\r\n  'ie >= 10',\r\n  'ie_mob >= 10',\r\n  'ff >= 40',\r\n  'chrome >= 40',\r\n  'safari >= 7',\r\n  'ios >= 7',\r\n  'android >= 4.4',\r\n]\r\n\r\n\r\n/*------------------------------------*\\\r\n  Base\r\n\\*------------------------------------*/\r\nvar baseConfig = {\r\n\r\n  mode: NODE_ENV,\r\n\r\n  devtool: 'cheap-module-eval-source-map',\r\n\r\n  module: {\r\n\r\n    rules: [\r\n\r\n      {\r\n        test: /\\.vue$/,\r\n        loader: 'vue-loader',\r\n        options: {\r\n          compilerOptions: {\r\n            preserveWhitespace: false\r\n          }\r\n        }\r\n      },\r\n\r\n      {\r\n        test: /\\.js$/,\r\n        include : path.join(__dirname, '/src'),\r\n        exclude: /node_modules/,\r\n        use: [\r\n          {\r\n            loader: 'babel-loader',\r\n            options: {\r\n              cacheDirectory: true,\r\n              compact: true,\r\n              presets: [\r\n                [\r\n                  '@babel/preset-env', {\r\n                    targets: {\r\n                      browsers: browsersList,\r\n                    }\r\n                  },\r\n                ],\r\n              ],\r\n\r\n            },\r\n          },\r\n        ],\r\n      },\r\n\r\n      {\r\n        test: /\\.scss$/,\r\n        exclude: /node_modules/,\r\n        use: [\r\n          {\r\n            loader: 'vue-style-loader',\r\n          },\r\n          {\r\n            loader: 'css-loader',\r\n          },\r\n          {\r\n            loader: 'sass-loader',\r\n            options: {\r\n              outputStyle: 'compressed',\r\n            },\r\n          },\r\n          {\r\n            loader: 'postcss-loader',\r\n            options: {\r\n              ident: 'postcss',\r\n              plugins: () => [\r\n                postCSSPresetEnv({\r\n                  browsers: browsersList,\r\n                }),\r\n              ]\r\n            },\r\n          },\r\n\r\n        ],\r\n      },\r\n\r\n      {\r\n        test: /\\.css$/,\r\n        use: [\r\n          {\r\n            loader: 'vue-style-loader',\r\n          },\r\n          {\r\n            loader: 'css-loader',\r\n          },\r\n          {\r\n            loader: 'postcss-loader',\r\n            options: {\r\n              ident: 'postcss',\r\n              plugins: () => [\r\n                postCSSPresetEnv({\r\n                  browsers: browsersList,\r\n                }),\r\n              ]\r\n            },\r\n          },\r\n\r\n        ],\r\n      },\r\n\r\n      {\r\n        test: /\\.(png|jpe?g|gif|eot|svg|otf|ttf|woff|woff2)(\\?\\S*)?$/,\r\n        use: [\r\n          {\r\n            loader: 'url-loader',\r\n            query: {\r\n              limit: 100000000,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n\r\n    ],\r\n\r\n  },\r\n\r\n};\r\n\r\n\r\n/*------------------------------------*\\\r\n  Export\r\n\\*------------------------------------*/\r\nmodule.exports = baseConfig;\r\n\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### webpack.client.config.js\r\n\r\n```\r\n/*------------------------------------*\\\r\n  Imports\r\n\\*------------------------------------*/\r\nconst path = require('path');\r\nconst webpack = require('webpack');\r\nconst webpackMerge = require('webpack-merge');\r\nconst WebpackCleanupPlugin = require('webpack-cleanup-plugin');\r\nconst VueLoaderPlugin = require('vue-loader/lib/plugin');\r\nconst VueSSRClientPlugin = require('vue-server-renderer/client-plugin');\r\nconst BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin;\r\nconst NODE_ENV = process.env.NODE_ENV || 'development';\r\n\r\n\r\n/*------------------------------------*\\\r\n  Import Base Config\r\n\\*------------------------------------*/\r\nvar baseConfig = require('./webpack.base.config.js');\r\n\r\n\r\n/*------------------------------------*\\\r\n  Client\r\n\\*------------------------------------*/\r\nvar clientConfig = webpackMerge(baseConfig, {\r\n\r\n  entry: {\r\n    app: path.join(__dirname, '/src/entry.client.js'),\r\n  },\r\n\r\n  plugins: [\r\n    new webpack.DefinePlugin({\r\n      'process.env': {\r\n        NODE_ENV: '\"' + NODE_ENV + '\"',\r\n        VUE_ENV: '\"client\"',\r\n      }\r\n    }),\r\n    new VueLoaderPlugin(),\r\n    new VueSSRClientPlugin(),\r\n  ],\r\n\r\n\r\n});\r\n\r\n\r\n/*------------------------------------*\\\r\n  Development\r\n\\*------------------------------------*/\r\nif (NODE_ENV === 'development') {\r\n\r\n  clientConfig.output = {\r\n    path: path.join(__dirname, '/dist'),\r\n    publicPath: '/dist/',\r\n    filename: '[name].[hash].js',\r\n  };\r\n\r\n}\r\n\r\n\r\n/*------------------------------------*\\\r\n  Production\r\n\\*------------------------------------*/\r\nif (NODE_ENV === 'production') {\r\n\r\n  clientConfig.devtool = '';\r\n\r\n  clientConfig.output = {\r\n    path: path.join(__dirname, '/dist'),\r\n    publicPath: '/dist/',\r\n    filename: '[name].[hash].js',\r\n  }\r\n\r\n  clientConfig.plugins = (clientConfig.plugins || []).concat([\r\n\r\n    new WebpackCleanupPlugin({\r\n      preview: false,\r\n    }),\r\n\r\n    new BundleAnalyzerPlugin({\r\n      analyzerMode: 'static',\r\n      openAnalyzer: false,\r\n    }),\r\n\r\n  ]);\r\n\r\n}\r\n\r\n\r\n/*------------------------------------*\\\r\n  Export\r\n\\*------------------------------------*/\r\nmodule.exports = clientConfig;\r\n\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n### webpack.server.config.js\r\n\r\n\r\n```\r\n/*------------------------------------*\\\r\n  Imports\r\n\\*------------------------------------*/\r\nconst path = require('path');\r\nconst webpack = require('webpack');\r\nconst webpackMerge = require('webpack-merge');\r\nconst packageJSON = require('../../package.json');\r\nconst VueLoaderPlugin = require('vue-loader/lib/plugin');\r\nconst VueSSRServerPlugin  = require('vue-server-renderer/server-plugin');\r\nconst NODE_ENV = process.env.NODE_ENV || 'development';\r\n\r\n\r\n/*------------------------------------*\\\r\n  Import Base Config\r\n\\*------------------------------------*/\r\nvar baseConfig = require('./webpack.base.config.js');\r\n\r\n\r\n/*------------------------------------*\\\r\n  Server\r\n\\*------------------------------------*/\r\nvar serverConfig = webpackMerge(baseConfig, {\r\n\r\n  target: 'node',\r\n\r\n  externals: Object.keys(packageJSON.dependencies),\r\n\r\n  entry: path.join(__dirname, '/src/entry.server.js'),\r\n\r\n  devtool: 'source-map',\r\n\r\n  output: {\r\n    path: path.resolve(__dirname, './dist'),\r\n    publicPath: '/dist/',\r\n    filename: 'server.bundle.js',\r\n    libraryTarget: 'commonjs2',\r\n  },\r\n\r\n  plugins: [\r\n    new webpack.DefinePlugin({\r\n      'process.env': {\r\n        NODE_ENV: '\"' + NODE_ENV + '\"',\r\n        VUE_ENV: '\"server\"',\r\n      }\r\n    }),\r\n    new VueLoaderPlugin(),\r\n    new VueSSRServerPlugin(),\r\n  ],\r\n\r\n});\r\n\r\n\r\n/*------------------------------------*\\\r\n  Export\r\n\\*------------------------------------*/\r\nmodule.exports = serverConfig;\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9207","RelatedDescription":"Closed issue \"Client-side rendered template adds additional Carriage Return characters to DOM\" (#9207)"},{"Id":"391448554","IsPullRequest":false,"CreatedAt":"2018-12-16T17:49:29","Actor":"VadymGidulian","Number":"9203","RawContent":null,"Title":"#7981 is a breaking change","State":"closed","Body":"### Version\r\n2.5.18-beta.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/806315/](https://jsfiddle.net/50wL7mdz/806315/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nChange `src` attributes in HTML to try w/ different versions\r\n\r\n### What is expected?\r\n`isChanged` computed property to be `true` after delay\r\n\r\n### What is actually happening?\r\nit doesn't get an updated value of `isChanged`\r\n\r\n---\r\nLet's consider a bit simplified situation of my real one. Suppose I have a `DataWrapper` which purpose is to tell whether the held data object was changed or not.\r\n\r\nThis wrapper has 2 properties: `isChanged` (read-only, boolean, false by default) and `data` (read-write, any type); and it is initialized w/ some data.\r\n\r\nI think it's clear and not a problem that `isChanged` property should only have a getter, but for the sake of reactivity, it's allowed to have setter be added. Also, in `data` setter there's a line \r\n```js\r\ntry { this.isChanged = true } catch (e) {/*ignore*/}\r\n```\r\nfor this purpose, i.e. if a setter was defined by some reactivity library (built into Vue in our case), we should invoke it before changing the internal state to let it pass the Vue's check and propagate the change across dependent values:\r\n```js\r\nif (newVal === value || (newVal !== newVal && value !== value)) {\r\n    return\r\n}\r\n```\r\n\r\nBut then, since we hadn't any setter initially defined for `isChanged` property, the following check\r\n```js\r\n// #7981: for accessor properties without setter\r\nif (getter && !setter) { return }\r\n```\r\n, which was added in PR #7981, is failed and the change is not propagated, which is definitely not a desired behavior.\r\n\r\nCommenting of this line completely solves the problem.\r\n\r\nSo I consider this change as a breaking and think it should be reverted to original behavior.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9203","RelatedDescription":"Closed issue \"#7981 is a breaking change\" (#9203)"},{"Id":"391486270","IsPullRequest":false,"CreatedAt":"2018-12-16T17:08:51","Actor":"Justineo","Number":"9208","RawContent":null,"Title":"Handle whitespaces in templates more wisely","State":"open","Body":"### What problem does this feature solve?\r\nCurrently we have an boolean option for `vue-template-compiler`: `preserveWhitespace`. It either removes all whitespace-only text nodes, or leave them untouched. There were already earlier questions about either behavior: #6200, #7701, #9021, #9127. I think the current behavior is kind of oversimplified to cover actual usage.\r\n\r\nWhen we write a template we tend to leverage line breaks and indents to make it more readable, like:\r\n\r\n```html\r\n<div class=\"item\">\r\n  <div class=\"aside\">Aside</div>\r\n  <div class=\"main\">Main</div>\r\n</div>\r\n```\r\n\r\nAnd if we choose to layout this component with inline formatting context, sometimes we may not want to precisely control the margin between the inner parts with CSS, instead of using the size of a whitespace (which is related to those `font-*` styles). For similar cases we don't want these whitespace-only text nodes. This leads to `preserveWhitespace: false` (and it even became the default behavior for Vue CLI 3: https://github.com/vuejs/vue-cli/commit/1864cef09e186cdf094fca876f8638a8ba1b4adb).\r\n\r\nBut when we craft some document/article-like content, this behavior becomes annoying. With `preserveWhitespace: false`, the following template:\r\n\r\n```html\r\n<p>\r\n  Welcome to <b>Vue.js</b> <i>world</i>.\r\n  Have fun!\r\n</p>\r\n```\r\n\r\nWill generate:\r\n\r\n```html\r\n<p>\r\n  Welcome to <b>Vue.js</b><i>world</i>.\r\n  Have fun!\r\n</p>\r\n```\r\n\r\nWhich looks like:\r\n\r\n> Welcome to <b>Vue.js</b><i>world</i>. Have fun!\r\n\r\nAnd this is clearly not desired.\r\n\r\n### What does the proposed API look like?\r\nIn short, I suggest we offer a new compiler option, to apply the strategy React uses to handles whitespaces for JSX ([source](https://reactjs.org/docs/jsx-in-depth.html#string-literals-1)):\r\n\r\n> JSX removes whitespace at the beginning and ending of a line. It also removes blank lines. New lines adjacent to tags are removed; new lines that occur in the middle of string literals are condensed into a single space.\r\n\r\nFor examples:\r\n\r\n```html\r\n<p>\r\n  Welcome to <b>Vue.js</b> <i>world</i>.\r\n  Have fun!\r\n</p>\r\n```\r\n\r\nThe whitespaces between `<p>` and `Welcome` are removed but the one between `</b>` and `<i>` and the one between `.` and `Have` are preserved thus giving us:\r\n\r\n```html\r\n<p>Welcome to <b>Vue.js</b> <i>world</i>. Have fun!</p>\r\n```\r\n\r\nThis seem to be much more reasonable IMO. And in this mode users will have more flexibility to better serve their different purposes.\r\n\r\nIn general, the proposal is:\r\n\r\n1. Keep `preserveWhitespace` but mark it as deprecated.\r\n2. Offer a new option to specify whether/how to remove whitespace-only text nodes: `removeWhitespace: 'with-linebreak' | 'any' | 'none'`.\r\n3. Ignore `preserveWhitespace` if `removeWhitespace` is specified.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9208","RelatedDescription":"Open issue \"Handle whitespaces in templates more wisely\" (#9208)"},{"Id":"391462382","IsPullRequest":false,"CreatedAt":"2018-12-16T12:40:14","Actor":"gepengjun","Number":"9206","RawContent":null,"Title":"i can't name the parameter with upperCase when i user $emit","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/gepengjun/108shofc/1/](https://jsfiddle.net/gepengjun/108shofc/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nclick the button, it just run the method   enlargeTestHandler but doesn't run the method  onEnLargeText;\r\nif i name the $emit parameter in lowerCase ,such as lagert,  it can run the method onEnLargeText\r\n\r\n### What is expected?\r\nthe parent's method-'onEnLargeText' will run;\r\n\r\n\r\n### What is actually happening?\r\nthe parent's method-'onEnLargeText' does not  run\r\n\r\n---\r\nhave no;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9206","RelatedDescription":"Closed issue \"i can't name the parameter with upperCase when i user $emit\" (#9206)"},{"Id":"391460273","IsPullRequest":false,"CreatedAt":"2018-12-16T11:58:33","Actor":"DominusVilicus","Number":"9205","RawContent":null,"Title":"Add Vue function to render VNode to html string","State":"open","Body":"### What problem does this feature solve?\r\n**Use case:**\r\n\r\nI'm developing a Server-Side Renderer for Vue (which works with Express, Koa & etc. Will increase migration to Vue). For the SSR's head management to work, it needs a stable API to render `VNode`s to text.\r\n\r\n**The way my Vue SSR package will function:**\r\n`master.vue`\r\n```html\r\n<template>\r\n    <div id=\"app\">\r\n        <slot name=\"content\"></slot>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    created: function(){\r\n        if(this.$isServer){\r\n            this.$ssrContext.head = \"HEAD HERE\" // Something needed like:  renderVNodesToString(this.$slots.head)\r\n        }\r\n    },\r\n}\r\n</script>\r\n```\r\n\r\n`home.vue`\r\n```html\r\n<template>\r\n    <master>\r\n        <template slot=\"content\">\r\n            Hello World\r\n        </template>\r\n        <template slot=\"head\">\r\n            <script src=\"https://unpkg.com/vue/dist/vue.js\"></script>\r\n            <title>Hello</title>\r\n        </template>\r\n    </master>\r\n</template>\r\n<script>\r\nimport master from \"layouts/master.vue\"\r\n\r\nexport default {\r\n    components: {\r\n        master\r\n    }\r\n}\r\n</script>\r\n```\r\n\r\nMy goal is getting `home.vue`'s `head` slot rendered into a string and injecting it into the `this.$ssrContext` so it can be read and injected on the server-side\r\n\r\nin `master.vue`, I can access `this.$slots.head` with no issue, and it contains the correct `VNode`s\r\n\r\nmy question is, how can I render them into a string? a way to basically do:\r\n```js\r\nthis.$ssrContext.head = renderVNodesToString(this.$slots.head)\r\n```\r\n\r\nFrom my research, I have been unable to find an easy way to do this.\r\n\r\n---- \r\n\r\n**To understand how the renderer works**\r\n```js\r\nconst renderer = createBundleRenderer(bundle.server, {\r\n    runInNewContext: false,\r\n    inject: false,\r\n    template: `<!DOCTYPE html>\r\n        <html>\r\n            <head>\r\n                {{{ head }}}\r\n                {{{ renderResourceHints() }}}\r\n                {{{ renderStyles() }}}\r\n            </head>\r\n            <body>\r\n                <!--vue-ssr-outlet-->\r\n                <script>${ bundle.client }</script>\r\n            </body>\r\n       </html>`\r\n})\r\n```\r\nThis is the code for the serverbundlerenderer\r\n\r\n### What does the proposed API look like?\r\n```js\r\n/**\r\n* @param {VNode}\r\n* \r\n* @returns {string} - VNode rendered to a html string\r\n*/\r\nVue.renderVNode = function(VNode){\r\n    //...\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9205","RelatedDescription":"Open issue \"Add Vue function to render VNode to html string\" (#9205)"},{"Id":"391459735","IsPullRequest":false,"CreatedAt":"2018-12-16T11:51:05","Actor":"gepengjun","Number":"9204","RawContent":null,"Title":"Why can't i use $emit with upperCase to name the parameter? ","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/9204","RelatedDescription":"Closed issue \"Why can't i use $emit with upperCase to name the parameter? \" (#9204)"},{"Id":"391169260","IsPullRequest":false,"CreatedAt":"2018-12-14T16:39:43","Actor":"snirp","Number":"9202","RawContent":null,"Title":"Single default setting for `shadowMode` in the webpack config","State":"closed","Body":"### What problem does this feature solve?\r\nIf you wrap a component with the `web-component-wrapper`, its styles will be applied to the head of the document, rather than to web-component's shadow DOM. This can be changed by setting every occurrence of `shadowMode` to `true` in the webpack config (through vue.config.js). Currently this requires finding and setting about 16 different options.\r\n\r\nIf these options inherit from a default shadowMode setting, it would be much easier to change the options.\r\n\r\n### What does the proposed API look like?\r\na `shadowModeDefault` variable (initially set to `false`), from which the `shadowMode` options can take their value.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9202","RelatedDescription":"Closed issue \"Single default setting for `shadowMode` in the webpack config\" (#9202)"},{"Id":"390984068","IsPullRequest":false,"CreatedAt":"2018-12-14T06:34:33","Actor":"AlenSD","Number":"9201","RawContent":null,"Title":"inquiry","State":"closed","Body":"Hi,\r\n\r\nI would like to speak with Mr. You about speaking at a conference.\r\n\r\nDo contact me via email, please.\r\n\r\nThanks!","Url":"https://github.com/vuejs/vue/issues/9201","RelatedDescription":"Closed issue \"inquiry\" (#9201)"},{"Id":"390518010","IsPullRequest":false,"CreatedAt":"2018-12-13T20:33:42","Actor":"nabab","Number":"9195","RawContent":null,"Title":"Adding inline-template to slots","State":"closed","Body":"### What problem does this feature solve?\r\nIn my case I would like to use a slot as a template for a local component created dynamically in my main component. \r\n\r\nBut I think a specific directive given (even on a slot) to prevent a container to compile its content could be useful in many cases. \r\n\r\nI am trying to find for a couple of days in which variable you hide a conditional content when the condition is false and I havent succeeded so far. If the feature cannot be added please feel free to tell me where I can find this uncompiled content :)\r\n\r\nMany thanks, your library is an amazing work, I love it so much!\r\n\r\n### What does the proposed API look like?\r\n    Vue.component('my-cp', {\r\n      template: `<div><slot inline-template></slot></div>',\r\n      beforeMount(){\r\n        let myTemplates = [];\r\n        // In this case a single property with the content of the slot would be best\r\n        // Otherwise\r\n        for ( let i = 0; i < this.$slots.default.length; i++   ){\r\n          myTemplates.push(this.$slots.default[i].innerHTML);\r\n        }\r\n        // Do what needs to be done\r\n      }\r\n    })\r\n\r\n    <my-cp>\r\n      <!-- This should't get compiled -->\r\n       <ul v-for=\"t in test\">\r\n           <li>{{t.text}}</li>\r\n        </ul>\r\n        <another-component/>\r\n      </div>\r\n    </my-cp>\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9195","RelatedDescription":"Closed issue \"Adding inline-template to slots\" (#9195)"},{"Id":"390707702","IsPullRequest":false,"CreatedAt":"2018-12-13T18:15:40","Actor":"szalapski","Number":"9200","RawContent":null,"Title":"How to wait for a browser re-render?  Vue.nextTick doesn't seem to cover it, and setTimeout(..., 0) is not good enough.","State":"closed","Body":"### What problem does this feature solve?\r\n\r\nExample in a fiddle: https://jsfiddle.net/szal/eywraw8t/500316/ - when I click Load, I never see the \"Loading...\" indicator. \r\n\r\nWhen I have a Vue component in a .vue file with a data member isLoading: false, and a template:\r\n\r\n    <div v-show=\"isLoading\" id=\"hey\" ref=\"hey\">Loading...</div>\r\n    <button @click=\"loadIt()\">Load it</button>\r\n\r\nAnd a method:\r\n\r\n     loadIt() {\r\n       this.isLoading = true\r\n       this.$nextTick(() => {\r\n          console.log(this.$refs.hey)\r\n          // ...other synchronous work here that causes other DOM changes\r\n        this.isLoading = false\r\n       })\r\n     }\r\n\r\n(\"Loading\" here refers to loading from the in-memory store, not an AJAX request. I want to do this so that I can show a simple \"loading\" indicator instantly while the DOM changes that might take 0.2-0.5 second or so are occurring.)\r\n\r\nI thought that the $nextTick function would allow both the virtual and actual DOM to update. The console log reads that the item was \"shown\" (removing the display: none style). However, in both Chrome and Firefox, I never see the \"Loading...\" indicator; the short delay happens, and the other DOM changes happen without the Loading indicator being shown.\r\n\r\nIf I use setTimeout instead of $nextTick, I will see the loading indicator, but only when the other work is sufficiently slow. If there is a delay of a few tenths of a second, the loading indicator never shows. I'd like it to appear immediately on click so that I can present a snappy GUI.\r\n\r\nMy unsatisfying solution: I have to wrap the work in a setTimeout(..., 25), per seebiscuit's findings here: https://github.com/vuejs/vuex/issues/1023#issuecomment-358456384\r\n\r\nThis seems to reveal that the documentation on Vue.nextTick at https://vuejs.org/v2/api/#Vue-nextTick is inaccurate: \"Defer the callback to be executed after the next DOM update cycle. Use it immediately after you’ve changed some data to wait for the DOM update.\"  This seems wrong; this is a good case where the user doesn't see the DOM update at all even though Vue.nextTick was used.\r\n\r\n Calling setTimeout(..., 25) doesn't seem very discoverable or intuitive for anyone.\r\n\r\n\r\n### What does the proposed API look like?\r\nI'd propose either a change to Vue.nextTick to work better, or a parallel call just like Vue.nextTick, perhaps \"nextRender\" (maybe there's a better name?) that ensures that any DOM changes can get displayed to the user before its callback is invoked asynchronously.  So then I could do something like:\r\n\r\n    methods: {\r\n     async selectThing() {\r\n      this.thingIsLoading = true  // this triggers a dead-simple v-show\r\n      await this.$nextRender() // the new Vue API call; give browser a chance to paint the loading indicator\r\n      const route = setQuery(this.$route, 'thingid', this.thingViewModel.thing.id)\r\n      this.$router.push(route) // this triggers lots of reactivity that may take a big fraction of a second to rerender/paint\r\n      this.thingIsLoading = false\r\n     }\r\n    }\r\n\r\nIf others feel that instead an enhancement to the behavior of Vue.nextTick is in order, I'd prefer that.\r\n\r\nI'd also propose changing the documentation at https://vuejs.org/v2/api/#Vue-nextTick to be more accurate and perhaps explain this limitation and a workaround to future developers.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9200","RelatedDescription":"Closed issue \"How to wait for a browser re-render?  Vue.nextTick doesn't seem to cover it, and setTimeout(..., 0) is not good enough.\" (#9200)"},{"Id":"390706087","IsPullRequest":true,"CreatedAt":"2018-12-13T14:35:00","Actor":"hikerpig","Number":"9199","RawContent":null,"Title":"fix(#9198): fix merged twice bug when passing extended constructor to mixins","State":"open","Body":"(#9198)\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9199","RelatedDescription":"Open PR \"fix(#9198): fix merged twice bug when passing extended constructor to mixins\" (#9199)"},{"Id":"390692634","IsPullRequest":false,"CreatedAt":"2018-12-13T14:03:03","Actor":"hikerpig","Number":"9198","RawContent":null,"Title":"Vue does not correctly dedupe global mixin, global mixined lifecycle hook be called twice","State":"open","Body":"### Version\r\n2.5.21\r\n\r\n### Reproduction link\r\n[https://codepen.io/hikerpig/pen/dwYEej](https://codepen.io/hikerpig/pen/dwYEej)\r\n\r\n### Steps to reproduce\r\nGoto the minimal reproduction link\r\n\r\nOr simply add this to test/unit/features/options/mixins.spec.js\r\n\r\n```js\r\n  it('should not mix global mixined lifecycle hook twice', () => {\r\n    const spy = jasmine.createSpy('global mixed in lifecycle hook')\r\n    Vue.mixin({\r\n      created() {\r\n        spy()\r\n      }\r\n    })\r\n\r\n    const mixin = Vue.extend({})\r\n\r\n    const Child = Vue.extend({\r\n      mixins: [mixin],\r\n      created() {}\r\n    })\r\n\r\n    const vm = new Child()\r\n\r\n    expect(spy.calls.count()).toBe(1)\r\n  })\r\n```\r\n\r\n### What is expected?\r\nspy to be called once\r\n\r\n### What is actually happening?\r\nspy is called twice\r\n\r\n---\r\nWhen using vue-class-component , it's easy to pass not-plain-object to Vue.extends mixins\r\n\r\nI've added a similar issue in https://github.com/vuejs/vue-class-component/issues/291 , and it is still not fixed\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9198","RelatedDescription":"Open issue \"Vue does not correctly dedupe global mixin, global mixined lifecycle hook be called twice\" (#9198)"},{"Id":"390650677","IsPullRequest":false,"CreatedAt":"2018-12-13T12:21:55","Actor":"hqzh","Number":"9197","RawContent":null,"Title":"template  no wrap","State":"closed","Body":"### What problem does this feature solve?\r\n\r\n`\r\n<template>\r\n<span></span>\r\n<span></span>\r\n</template>\r\n`\r\n\r\n### What does the proposed API look like?\r\n`\r\n<template>\r\n<>\r\n<span></span>\r\n<span></span>\r\n</>\r\n</template>\r\n`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9197","RelatedDescription":"Closed issue \"template  no wrap\" (#9197)"},{"Id":"390528469","IsPullRequest":false,"CreatedAt":"2018-12-13T05:55:56","Actor":"wws19125","Number":"9196","RawContent":null,"Title":"How can i get the vue instance through Dom element","State":"closed","Body":"### What problem does this feature solve?\r\n项目中使用类似Jquery的load方法，动态 new 了一个Vue实例，想知道如何通过绑定的Dom元素（就是绑定的el）反向获取到创建的Vue实例，，注意是Vue实例，不是组件实例。因为是动态创建的，我需要获取到该实例，并调用$destroy销毁，否则会引起内存泄漏问题，谢谢\r\n\r\n### What does the proposed API look like?\r\nVue.instance(el:xxxx)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9196","RelatedDescription":"Closed issue \"How can i get the vue instance through Dom element\" (#9196)"},{"Id":"390201603","IsPullRequest":false,"CreatedAt":"2018-12-12T17:28:52","Actor":"thet","Number":"9189","RawContent":null,"Title":"v-model on components seem not to correctly bind properties","State":"closed","Body":"### Version\r\n2.5.21\r\n\r\n### Reproduction link\r\n[https://codepen.io/thetetet/pen/QzjyEZ](https://codepen.io/thetetet/pen/QzjyEZ)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIn the example app there are two instances of the same \"Search input\" component.\r\n\r\n1) First component: Value is bound via ``v-model`` AND ``v-bind``\r\n\r\n2) Second component: value is only bound via ``v-model`` \r\n\r\n### What is expected?\r\nWhen using ``v-model`` only, I expect the property to be reactive and data changes in the parent component should be reflected in the v-model-bound component.\r\n\r\nIn the example linked above, I expect the \"default term\" value from the ``search_term`` data variable to show up in the second component, which binds via ``v-model``.\r\n\r\n### What is actually happening?\r\nWhen using ``v-model`` only, data changes in the parent component are not reflected in the v-model-bound sub component. When using ``v-bind`` additionally, it is.\r\n\r\n---\r\nSeems to be related to: https://github.com/vuejs/vue/issues/8430\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9189","RelatedDescription":"Closed issue \"v-model on components seem not to correctly bind properties\" (#9189)"},{"Id":"390271458","IsPullRequest":true,"CreatedAt":"2018-12-12T16:41:46","Actor":"clarkdo","Number":"9193","RawContent":null,"Title":"refactor: tiny cleanup changes","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9193","RelatedDescription":"Closed or merged PR \"refactor: tiny cleanup changes\" (#9193)"},{"Id":"390245431","IsPullRequest":true,"CreatedAt":"2018-12-12T16:41:37","Actor":"nickhall","Number":"9191","RawContent":null,"Title":"Minor comment cleanup","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: minor comment style update\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n \r\nJust a minor nitpick that I ran across while perusing the source. Feel free to reject.","Url":"https://github.com/vuejs/vue/pull/9191","RelatedDescription":"Closed or merged PR \"Minor comment cleanup\" (#9191)"},{"Id":"390271599","IsPullRequest":false,"CreatedAt":"2018-12-12T15:15:44","Actor":"AlexandreBonaventure","Number":"9194","RawContent":null,"Title":"[vue-server-renderer] Bug failing when using a reference of process - related to SSRClientWebpackPlugin","State":"open","Body":"### Version\r\n2.5.21\r\n\r\n### Reproduction link\r\n[https://github.com/AlexandreBonaventure/repro-vue-ssr-bug](https://github.com/AlexandreBonaventure/repro-vue-ssr-bug)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. `yarn install`\r\n2. `yarn run ssr:build && yarn ssr:start`\r\n3. go to localhost:8000\r\n\r\n\r\n### What is expected?\r\nto serve / correctly\r\n\r\n### What is actually happening?\r\nerror 500:\r\n```\r\nTypeError: Cannot read property 'replace' of undefined\r\n    at normalizeFile (.../node_modules/vue-server-renderer/build.js:8183:27)\r\n```\r\n\r\n---\r\nHi, I came across this weird bug when I was trying to retrieve a global variable (eg. global.localenv.PUBLIC_URL) in App.vue to populate a meta tag (using vue-meta).\r\nI stumble upon the bug, and narrowed it down to referencing `process` being the cause here.\r\nAnother weird thing is that if you remove the component Icons import in the minimal repro, it works fine!\r\n\r\nThe error stack is initiated by `TemplateRenderer.renderPreloadLinks` which makes me think that maybe it is a bug in the webpack SSRClientPlugin which inject preload links for every assets.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9194","RelatedDescription":"Open issue \"[vue-server-renderer] Bug failing when using a reference of process - related to SSRClientWebpackPlugin\" (#9194)"},{"Id":"390209034","IsPullRequest":false,"CreatedAt":"2018-12-12T12:42:21","Actor":"CyberAP","Number":"9190","RawContent":null,"Title":"Alias for v-on and v-bind","State":"open","Body":"### What problem does this feature solve?\r\nIf you've decided to go with `v-bind` and `v-on` shorthands then `v-on=\"$listeners\"` looks out of place and creates a mixture of syntax. Shorthands for `v-on` and `v-bind` would solve that issue.\r\n\r\n### What does the proposed API look like?\r\n`v-on=\"$listeners\"` should be aliased like this: `@=\"$listeners\"`\r\n\r\n`v-bind=\"$attrs\"` should be aliased like this: `:=\"$attrs\"`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9190","RelatedDescription":"Open issue \"Alias for v-on and v-bind\" (#9190)"},{"Id":"389587181","IsPullRequest":true,"CreatedAt":"2018-12-11T21:53:19","Actor":"skyline0705","Number":"9182","RawContent":null,"Title":"fix(types): genChildren function with error normalizationType","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9182","RelatedDescription":"Closed or merged PR \"fix(types): genChildren function with error normalizationType\" (#9182)"},{"Id":"389586678","IsPullRequest":false,"CreatedAt":"2018-12-11T21:52:18","Actor":"skyline0705","Number":"9181","RawContent":null,"Title":"genChildren function with error normalizationType","State":"closed","Body":"### Version\r\n2.5.19\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/roaKMY](https://codepen.io/anon/pen/roaKMY)\r\n\r\n### Steps to reproduce\r\nopen the link and open the console\r\n\r\n### What is expected?\r\nconsole should not has error, and the result in dom should be empty\r\n\r\n### What is actually happening?\r\nconsole shows \"Cannot read property 'length' of undefined\r\n​    at simpleNormalizeChildren\"\r\n\r\n---\r\nbefore the version 2.5.16, it works fine, and I saw the source, when compile the template, function genChildren choose an error normalizationType, it should be `ALWAYS_NORMALIZE`.\r\n\r\nand I think there is something wrong when compiling v-for and component with an \"undefined\" list because I find this words in `'src/core/vdom/helpers/normalize-children.js'`:\r\n\r\nhttps://github.com/vuejs/vue/blob/d780dd2e2adcf71f40c086055a659a9a2b4a8282/src/core/vdom/helpers/normalize-children.js#L27-L30\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9181","RelatedDescription":"Closed issue \"genChildren function with error normalizationType\" (#9181)"},{"Id":"389824833","IsPullRequest":false,"CreatedAt":"2018-12-11T16:40:12","Actor":"jtandy123","Number":"9188","RawContent":null,"Title":"@click.prevent.self does not prevent all click","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jtandy/eywraw8t/501804/](https://jsfiddle.net/jtandy/eywraw8t/501804/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nstep 1: open console panel in chrome\r\nstep 2: click the link \"https://cn.vuejs.org\"\r\n\r\n\r\n### What is expected?\r\n@click.prevent.self will prevent all clicks. no response to click the link\r\n\r\n### What is actually happening?\r\nclick is executed and print the result in console panel\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9188","RelatedDescription":"Closed issue \"@click.prevent.self does not prevent all click\" (#9188)"},{"Id":"389599685","IsPullRequest":false,"CreatedAt":"2018-12-11T15:28:03","Actor":"andrew-humu","Number":"9183","RawContent":null,"Title":"[vue-template-compiler] Multiline v-model expressions break compilation","State":"closed","Body":"### Version\r\n2.5.19\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/88633ym7y0](https://codesandbox.io/s/88633ym7y0)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSee below.\r\n\r\n### What is expected?\r\n```\r\n<my-input\r\n  propa=\"a\"\r\n  propb=\"b\"\r\n  v-model=\"\r\n    some.very.long[dynamic]expression\r\n  \"\r\n>\r\n```\r\n\r\nThis should compile, and behave identically to the single-line version:\r\n\r\n```\r\n<my-input\r\n  propa=\"a\"\r\n  propb=\"b\"\r\n  v-model=\"some.very.long[dynamic]expression\"\r\n>\r\n```\r\n\r\n### What is actually happening?\r\nCompilation fails, with an error that looks like this:\r\n\r\n```\r\nSyntaxError: Unterminated string constant (3:142)\r\n    at Parser.pp$4.raise (/node_modules/vue-template-es2015-compiler/buble.js:2610:13)\r\n    at Parser.pp$8.readString (/node_modules/vue-template-es2015-compiler/buble.js:3436:35)\r\n    at Parser.pp$8.getTokenFromCode (/node_modules/vue-template-es2015-compiler/buble.js:3220:17)\r\n````\r\n\r\n---\r\nNote that this only applies when setting v-model on a custom component (not a string-element, e.g. `<input>`).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9183","RelatedDescription":"Closed issue \"[vue-template-compiler] Multiline v-model expressions break compilation\" (#9183)"},{"Id":"389609708","IsPullRequest":true,"CreatedAt":"2018-12-11T15:27:44","Actor":"andrew-humu","Number":"9184","RawContent":null,"Title":"fix #9183 multiline v-model expressions","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**","Url":"https://github.com/vuejs/vue/pull/9184","RelatedDescription":"Closed or merged PR \"fix #9183 multiline v-model expressions\" (#9184)"},{"Id":"389721902","IsPullRequest":false,"CreatedAt":"2018-12-11T15:05:33","Actor":"sugarnut001","Number":"9187","RawContent":null,"Title":" 有2.5.20版本了，但是 vue-template-compiler 最高版本却是 2.5.18，导致构建报错：[vue-loader] vue-template-compiler must be installed as a peer dependency, or a compatible compiler implementation must be passed via options.  ","State":"closed","Body":"### Version\r\n2.5.20\r\n\r\n### Reproduction link\r\n[https://www.npmjs.com/package/vue-template-compiler](https://www.npmjs.com/package/vue-template-compiler)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\npackage.json 中写成 \"vue\": \"^2.5.17\", \"vue-template-compiler\": \"^2.5.17\", 这样的写法安装下来得到的 vue 的版本是 2.5.20，vue-template-compiler 的版本是2.5.18，这两个版本不一致了。\r\n\r\n### What is expected?\r\nhttps://www.npmjs.com/package/vue-template-compiler 这里的 tag 有 2.5.20。\r\n\r\n### What is actually happening?\r\n实际安装的过程中 vue-template-compiler 却是2.5.18，和最新的 vue 版本不一致。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9187","RelatedDescription":"Closed issue \" 有2.5.20版本了，但是 vue-template-compiler 最高版本却是 2.5.18，导致构建报错：[vue-loader] vue-template-compiler must be installed as a peer dependency, or a compatible compiler implementation must be passed via options.  \" (#9187)"},{"Id":"389716801","IsPullRequest":false,"CreatedAt":"2018-12-11T11:23:49","Actor":"sugarnut001","Number":"9186","RawContent":null,"Title":"vue 有2.5.20版本了，但是 vue-template-compiler 最高版本确实 2.5.18，导致构建的时候报错了","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/9186","RelatedDescription":"Closed issue \"vue 有2.5.20版本了，但是 vue-template-compiler 最高版本确实 2.5.18，导致构建的时候报错了\" (#9186)"},{"Id":"389647073","IsPullRequest":false,"CreatedAt":"2018-12-11T08:30:49","Actor":"ligouhai","Number":"9185","RawContent":null,"Title":"写的真好","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/9185","RelatedDescription":"Closed issue \"写的真好\" (#9185)"},{"Id":"389532797","IsPullRequest":false,"CreatedAt":"2018-12-10T23:31:58","Actor":"yyx990803","Number":"9180","RawContent":null,"Title":"RFC: Simplify scoped slot usage","State":"open","Body":"This is a follow up of https://github.com/vuejs/vue/issues/7740#issuecomment-371309357\r\n\r\n### Rational\r\n\r\nProblems with current scoped slot usage:\r\n\r\n- Verbose if using `<template slot-scope>`\r\n- Limited to one element/component is using `slot-scope` directly on the slot element.\r\n\r\n### Proposal\r\n\r\nIntroduce a new `v-scope` directive, that can only be used on components:\r\n\r\n``` vue\r\n<comp v-scope=\"scope\">\r\n  {{ scope.msg }}\r\n</comp>\r\n```\r\n\r\nIt would work the same as `slot-scope` for the default scoped slot for `<comp>` (with `<comp>` providing the scope value). So it also works with deconstructing:\r\n\r\n``` vue\r\n<comp v-scope=\"{ msg }\">\r\n  {{ msg }}\r\n</comp>\r\n```\r\n\r\n### Why a New Directive\r\n\r\nI believe the team briefly discussed what I proposed in https://github.com/vuejs/vue/issues/7740#issuecomment-371309357 on Slack some time back, but I could no longer find the chat record. Here's the reasoning behind a new directive:\r\n\r\n- `slot-scope` was introduced as a special attribute instead of a directive (attributes that start with `v-` prefix) because `slot` is an attribute, and we wanted to keep slot-related attributes consistent. `slot` was in turn introduced as a non-directive attribute because we want the usage to mirror the actual slot usage in the Shadow DOM standard. We figured it would be best to avoid having our own parallel `v-slot` when there's something that is conceptually the same in the standard.\r\n\r\n- Originally, `slot-scope` was designed to be only usable on `<template>` elements that act as abstract containers. But that was verbose - so we introduced the ability to use it directly on a slot element without the wrapping `<template>`. However, this also makes it impossible to allow using `slot-scope` directly on the component itself, because it would lead to ambiguity as illustrated [here](https://github.com/vuejs/vue/issues/7740#issuecomment-370252860).\r\n\r\n- I thought about adding modifiers or special prefixes to `slot-scope` so that that we can use it on a component directly to indicate its slot content should be treated as the default scoped slot, but neither a modifier or a prefix like `$` seem to be the right fit. The modifier by design should only be applied to directives, while new special syntax for a single use case is inconsistent with the whole syntax design.\r\n\r\n- For a very long time we've shied away from adding more directives, part of it being template syntax is something we want to keep as stable as possible, part of it being that we want to keep core directives to a minimum and only do things that users cannot easily do in userland. However, in this case scoped slot usage is important enough, and I think a new directive can be justified for making its usage significantly less noisy.\r\n\r\n### Concerns\r\n\r\n- The expression accepted by `v-scope` is different from most other directives: it expects a temporary variable name (which can also be a deconstruction), but not without a precedence: it acts just like the alias part of `v-for`. So conceptually `v-scope` falls into the same camp with `v-for` as a structural directive that creates temporary variables for its inner scope.\r\n\r\n- This would break the users code if the user has a custom directive named `v-scope` and is used on a component.\r\n\r\n  - Since custom directives in v2 are primarily focused on direct DOM manipulations, it's relatively rare to see custom directives used on components, even more so for something that happens to be called `v-scope`, so the impact should be minimal.\r\n\r\n  - Even in the case of it actually happening, it is straightforward to deal with by simply renaming the custom directive.","Url":"https://github.com/vuejs/vue/issues/9180","RelatedDescription":"Open issue \"RFC: Simplify scoped slot usage\" (#9180)"},{"Id":"389397144","IsPullRequest":false,"CreatedAt":"2018-12-10T17:30:33","Actor":"minaseem","Number":"9179","RawContent":null,"Title":"Autocomplete email field's model is not populated properly when there are multiple forms in a single page","State":"closed","Body":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/5xlrk8v80k](https://codesandbox.io/s/5xlrk8v80k)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSteps to reproduce:\r\nGo to https://codesandbox.io/s/5xlrk8v80k\r\n1. Click on Form 3 email input field\r\n2. Select any email from autocomplete list\r\n3. Observe that \"Model value\" for Form 1's email field set.\r\n\r\n### What is expected?\r\nWhen an email is selected from autocomplete list, modal of that particular field should be filled\r\n\r\n### What is actually happening?\r\nWhen an email is selected from autocomplete list, modal of first email field gets filled\r\n\r\nBrowser on which issue is reproducible:\r\nmacOS Chrome -  70.0.3538.110 \r\n\r\n---\r\nIt works fine when there are multiple fields in a single form. Issue arises when there are multiple forms\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n","Url":"https://github.com/vuejs/vue/issues/9179","RelatedDescription":"Closed issue \"Autocomplete email field's model is not populated properly when there are multiple forms in a single page\" (#9179)"},{"Id":"389358092","IsPullRequest":false,"CreatedAt":"2018-12-10T15:55:25","Actor":"nicholasnet","Number":"9178","RawContent":null,"Title":"inheritAttrs: false is not working as mentioned in documentation","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/EGayYJ](https://codepen.io/anon/pen/EGayYJ)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSimply run the codepen. You will see class is injected in root element instead of input.\r\n\r\n### What is expected?\r\nClass should be injected in input not in root element.\r\n\r\n### What is actually happening?\r\nClass is injected in root element\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9178","RelatedDescription":"Closed issue \"inheritAttrs: false is not working as mentioned in documentation\" (#9178)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"390471534","IsPullRequest":true,"CreatedAt":"2018-12-13T18:22:29","Actor":"zspencer","Number":"2531","RawContent":null,"Title":"Prevent exceptions when a consumer calls `isSameRoute` with falsey `a`","State":"closed","Body":"In certain cases, I've encountered an exception where `isSameRoute` is\r\ncalled by an upstream consumer where a is undefined. This is despite the\r\nfact that the type declaration explicitely prohibits such a thing.\r\n\r\nUnfortunately, due to my own incompetence at reading the way the vue\r\nerror handling stack works; I've been unable to isolate the *caller*.\r\n\r\nSo, I've added a test case where `a` is a falsey value; in the hope that\r\nthis will prevent an exception from being raised, which was triggering\r\nan infinite loop in my particular case; which, again unfortunately, I couldn't figure\r\nout higher up the stack.\r\n\r\nSince this is possibly a bug in the calling library, I'm not really\r\nsure it's worth fixing here; but if it is fixed here it'd save me a few\r\nmore hours or days of debugging.\r\n\r\nFurther, I've been unable to create an isolated use case; as my app relies on a number of plugins and middleware with NuxtJS and reproducing it outside of the app I'm working with (Sadly) seems like another huge time sink.\r\n\r\nIf you'd like, I can try to convince my client to invest the time to resolving the error in a more appropriate manner, otherwise I'll likely wind up needing to rely on a forked version of vue-router :/.","Url":"https://github.com/vuejs/vue-router/pull/2531","RelatedDescription":"Closed or merged PR \"Prevent exceptions when a consumer calls `isSameRoute` with falsey `a`\" (#2531)"},{"Id":"390741594","IsPullRequest":true,"CreatedAt":"2018-12-13T18:13:36","Actor":"patriciussanctus","Number":"2532","RawContent":null,"Title":"public method \"reload\"","State":"closed","Body":"test page: /reload\r\nmy reason: i needs in method to trig router-events (eaches), because in my project, static information about page title (document.title and title-markup in header with i18n) gets of $route information (?id or /:id, (supply №${id})), but now i need extra values such as \"company_name\"...\r\n\r\n1. this.$router.meta.company_name = 'Some company'\r\n2. this.$router.reload()\r\n3. ???\r\n4. all titles in page updated\r\n\r\nin test-page \"examples/reload\" there are other useful uses (transition update, re-confirm, counts)\r\n","Url":"https://github.com/vuejs/vue-router/pull/2532","RelatedDescription":"Closed or merged PR \"public method \"reload\"\" (#2532)"},{"Id":"390312436","IsPullRequest":false,"CreatedAt":"2018-12-12T17:22:13","Actor":"plehnen","Number":"2530","RawContent":null,"Title":"Routing to same url should fire event","State":"closed","Body":"### What problem does this feature solve?\r\nI need to update the current page (request new data from server) whenever the link in the navigation or breadcrumb is clicked. (like it is implemented on amazon)\r\n\r\nCurrently the `router-link` will do absolutely nothing when clicked, while already being on the target page.\r\nNeither `beforeRouteUpdate` or `router.beforeEach` are triggered.\r\nBut it would be nice to be able to notice a route request to the same route.\r\n\r\n\r\n### What does the proposed API look like?\r\nMaybe a `beforeRouteReload` hook, which returns `false` per default and does nothing (as it is now), but when it returns `true` the normal events get fired and I can handle them.\r\n\r\nOr a global parameter which allows me to enable events even if `from` and `to` are the same. Ideally on route level, individually for each route.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2530","RelatedDescription":"Closed issue \"Routing to same url should fire event\" (#2530)"},{"Id":"390243031","IsPullRequest":false,"CreatedAt":"2018-12-12T17:17:48","Actor":"waqas385","Number":"2529","RawContent":null,"Title":"next() callback is not executed under beforeEnter","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/waqas385/pvqz8s6u/](https://jsfiddle.net/waqas385/pvqz8s6u/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nin beforeEnter(to, from, next) under next-callback i used code:\r\nnext(vm => { console.log(vm, 'this line wont be called'));\r\n\r\nnext callback is not called.\r\n\r\ngoto link (https://jsfiddle.net/waqas385/pvqz8s6u/)\r\n\r\n- Click button \"Goto Test\"\r\n- Click button \"Goto Home\"\r\n- See console log\r\n\r\nIn above example I tried to get 'this' but found an unusual behavior \r\n\r\n### What is expected?\r\nI believe next callback should call and this should be also be available\r\n\r\n### What is actually happening?\r\nnext callback function will not call\r\n\r\n---\r\nLet me know, if I miss-understood beforeEnter\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2529","RelatedDescription":"Closed issue \"next() callback is not executed under beforeEnter\" (#2529)"},{"Id":"389610451","IsPullRequest":false,"CreatedAt":"2018-12-11T14:59:52","Actor":"Lee66","Number":"2528","RawContent":null,"Title":"Enter the page for the first time, then click back; BeforeRouteLeave is not executed","State":"closed","Body":"### What problem does this feature solve?\r\nThe h5 form embedded in the native app is confirmed to be saved before leaving\r\n\r\n### What does the proposed API look like?\r\nBeforeRouteLeave can be the same as any other page\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2528","RelatedDescription":"Closed issue \"Enter the page for the first time, then click back; BeforeRouteLeave is not executed\" (#2528)"},{"Id":"389187357","IsPullRequest":false,"CreatedAt":"2018-12-10T08:19:06","Actor":"wxfjamdc","Number":"2527","RawContent":null,"Title":"Dynamic Route Matching connot replace params","State":"closed","Body":"route config like this\r\n\r\n> {\r\n    path: '/test/:type?',\r\n    name: 'test',\r\n    component: test,\r\n  }\r\n\r\ncurrent full path  `/test/demo`\r\n\r\nscript \r\n`this.$router.replace({params:{}})`\r\n\r\nIt's not work","Url":"https://github.com/vuejs/vue-router/issues/2527","RelatedDescription":"Closed issue \"Dynamic Route Matching connot replace params\" (#2527)"},{"Id":"388977952","IsPullRequest":false,"CreatedAt":"2018-12-09T01:57:35","Actor":"yoonasy","Number":"2526","RawContent":null,"Title":"utility function to update the query","State":"open","Body":"### What problem does this feature solve?\r\nhave a search function in my project, implemented with query, and then props in an id query, needs to be updated query.id ，don't need to remove the query for the search\r\n\r\n### What does the proposed API look like?\r\n`queryUpdate({id: xxxxxxx})`\r\n\r\nLook at the ` iss ` before\r\n```\r\n let query = Object.assign({}, $route.query)\r\nquery.id = xxxxxxxxxx\r\nthis.$router.push({ query: query })\r\n```\r\n\r\nUsing a lot of them in a project can be cumbersome\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2526","RelatedDescription":"Open issue \"utility function to update the query\" (#2526)"},{"Id":"386577689","IsPullRequest":false,"CreatedAt":"2018-12-08T18:34:22","Actor":"deepkolos","Number":"2513","RawContent":null,"Title":"router-link doesn't work correctly when rendered within a functional component","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/deepkolos/vue-router-link-bug-demo](https://github.com/deepkolos/vue-router-link-bug-demo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n![router-link-bug.gif](https://upload-images.jianshu.io/upload_images/252050-56ab6f579680300d.gif?imageMogr2/auto-orient/strip)\r\n\r\n### What is expected?\r\nwhen come back router-link's classList is \"f-link default-link\" as it's inital state\r\n\r\n### What is actually happening?\r\nrouter-link's classList become empty\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2513","RelatedDescription":"Closed issue \"router-link doesn't work correctly when rendered within a functional component\" (#2513)"},{"Id":"388862186","IsPullRequest":false,"CreatedAt":"2018-12-08T00:31:12","Actor":"SKEPDIMI","Number":"2525","RawContent":null,"Title":"Optional dynamic routing parameters in documentation","State":"open","Body":"### What problem does this feature solve?\r\nIt aims to solve the lack of documentation on optional parameters when performing dynamic route matching. At the moment, the documentation for dynamic route matching does NOT show that you have the ability to make your params optional with the '?' character. Example:\r\n```\r\n    {\r\n      path: '/blog:id?', // optional parameter. this feature is not shown in the documentation\r\n      name: 'blog',\r\n      component: Blog,\r\n    },\r\n```\r\n\r\n### What does the proposed API look like?\r\nhttps://router.vuejs.org/guide/essentials/dynamic-matching.html#reacting-to-params-changes is updated to show this feature\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2525","RelatedDescription":"Open issue \"Optional dynamic routing parameters in documentation\" (#2525)"},{"Id":"388580697","IsPullRequest":true,"CreatedAt":"2018-12-07T19:02:04","Actor":"Alex-Sokolov","Number":"2524","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2524","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#2524)"},{"Id":"388539739","IsPullRequest":false,"CreatedAt":"2018-12-07T08:46:39","Actor":"xuzpeng","Number":"2523","RawContent":null,"Title":"keep-alive can not cache two router-view","State":"closed","Body":"### Version\r\n2.5.1\r\n\r\n### Reproduction link\r\n[https://github.com/xuzpeng/vue-sell.git](https://github.com/xuzpeng/vue-sell.git)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThe order page and home page switch pages are not cached, or the home page -> find page -> order page -> home page still occurs.\r\n\r\n### What is expected?\r\nOrder page and home page are cached\r\n\r\n\r\n### What is actually happening?\r\nnot cached\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2523","RelatedDescription":"Closed issue \"keep-alive can not cache two router-view\" (#2523)"},{"Id":"388496060","IsPullRequest":false,"CreatedAt":"2018-12-07T03:55:57","Actor":"xuzpeng","Number":"2522","RawContent":null,"Title":"keep-alive can not cache two routing pages at the same time","State":"closed","Body":"this is router code:\r\nexport default new VueRouter({\r\n  routes: [\r\n    {\r\n      path: '/', \r\n      component: Menu,\r\n      children: [\r\n        {path: '', component: Home, meta: {keepAlive: true}},\r\n        {path: 'find', component: Find, meta: {keepAlive: false}},\r\n        {path: 'order', component: Order, meta: {keepAlive: true}},\r\n        {path: 'mine', component: Mine, meta: {keepAlive: false}},\r\n      ]\r\n    },\r\n    {\r\n      path: '/login',\r\n      component: Login,\r\n      meta: {keepAlive: false}\r\n    }\r\n  ]\r\n});\r\n\r\nthis is router-view:\r\n <keep-alive>\r\n      <router-view v-if=\"$route.meta.keepAlive\"></router-view>\r\n    </keep-alive>\r\n    <router-view v-if=\"!$route.meta.keepAlive\"></router-view>\r\n\r\nquestion:\r\nWhen I switch from meta.keepAlive to true to meta.keepAlive to true, the page will make a request, not cached, and false and true before switching will not request, cached。","Url":"https://github.com/vuejs/vue-router/issues/2522","RelatedDescription":"Closed issue \"keep-alive can not cache two routing pages at the same time\" (#2522)"},{"Id":"388471216","IsPullRequest":false,"CreatedAt":"2018-12-07T01:51:19","Actor":"yoonasy","Number":"2521","RawContent":null,"Title":"ClassName problem when navigation activates routing","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net](https://jsfiddle.net)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWhen navigating with query parameters\r\n\r\n`active-class` will not match\r\n\r\n`/a?id=10` situation\r\n\r\n### What is expected?\r\nThe query parameter should match\r\n\r\n### What is actually happening?\r\n`active-class` No activation\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2521","RelatedDescription":"Closed issue \"ClassName problem when navigation activates routing\" (#2521)"},{"Id":"388134048","IsPullRequest":false,"CreatedAt":"2018-12-06T09:50:41","Actor":"Dmitrij-Polyanin","Number":"2520","RawContent":null,"Title":"router.go() refreshes all page, is it noraml?","State":"closed","Body":"I try to reload (but not full page) current location.\r\n\r\nI use `router.go()` method or  `router.go(0)`, but it refreshes whole page (not as SPA).\r\n\r\nIs it normal?","Url":"https://github.com/vuejs/vue-router/issues/2520","RelatedDescription":"Closed issue \"router.go() refreshes all page, is it noraml?\" (#2520)"},{"Id":"388064251","IsPullRequest":false,"CreatedAt":"2018-12-06T06:05:38","Actor":"NBSeven","Number":"2519","RawContent":null,"Title":"Set different route path and same component ,  the scope is same.","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/pk39zjm5lj](https://codesandbox.io/s/pk39zjm5lj)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nrouter-view render different route path and use same component ,the data cant be changed after i change the path.Is there any way to fix it.\r\n\r\n### What is expected?\r\nchange scope data after change path .path 'abc' input '123' and pape '' bcd\"  dont change\r\n\r\n### What is actually happening?\r\nchange scope after change path .path 'abc' input '123' and path '' bcd\"  is still '123'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2519","RelatedDescription":"Closed issue \"Set different route path and same component ,  the scope is same.\" (#2519)"},{"Id":"387335486","IsPullRequest":true,"CreatedAt":"2018-12-04T15:17:54","Actor":"rchl","Number":"2518","RawContent":null,"Title":"style(test): add eslint configuration for unit tests","State":"open","Body":"While trying to familiarize myself with code base and tests, got annoyed by my editor highlighting \"errors\" in test files so decided to add config for unit tests.","Url":"https://github.com/vuejs/vue-router/pull/2518","RelatedDescription":"Open PR \"style(test): add eslint configuration for unit tests\" (#2518)"},{"Id":"387197472","IsPullRequest":false,"CreatedAt":"2018-12-04T09:40:46","Actor":"QinFeiFei","Number":"2517","RawContent":null,"Title":"如何根据router的name值，获取其url","State":"closed","Body":"现在有一个需求是iframe的src中，需要填写 this.$router.push({name: 'home'}) 跳转后的 url 地址，请问如何实现。 ","Url":"https://github.com/vuejs/vue-router/issues/2517","RelatedDescription":"Closed issue \"如何根据router的name值，获取其url\" (#2517)"},{"Id":"387110138","IsPullRequest":false,"CreatedAt":"2018-12-04T08:08:38","Actor":"medmin","Number":"2516","RawContent":null,"Title":"beforeRouteEnter next callback cannot return next(false)","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/whizjs/netlify-identity-demo-vue/blob/master/src/components/Protected.vue#L21](https://github.com/whizjs/netlify-identity-demo-vue/blob/master/src/components/Protected.vue#L21)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nhttps://github.com/whizjs/netlify-identity-demo-vue/blob/master/src/components/Protected.vue#L21\r\n\r\nChange the code on Line 21 to \"return next(false);\" or \"return false;\"  the router will proceed even the user is not logged in.\r\n\r\nIt's very easy to reproduce this bug.\r\n\r\n\r\n\r\n### What is expected?\r\nI need the unauthenticated guest to stay in the current page, not redirect to home or any other page. \r\n\r\n### What is actually happening?\r\nChange the code on Line 21 to \"return next(false);\" or \"return false;\"  the router will proceed even the user is not logged in.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2516","RelatedDescription":"Closed issue \"beforeRouteEnter next callback cannot return next(false)\" (#2516)"},{"Id":"386760453","IsPullRequest":false,"CreatedAt":"2018-12-03T13:25:24","Actor":"masquevil","Number":"2515","RawContent":null,"Title":"Inside guards, get to know current navigating is under router.replace or router.push.","State":"closed","Body":"### What problem does this feature solve?\r\nwhen doing `router.replace('url')`, `next('otherUrl')` will cause this navigation become `router.push`.\r\n\r\nwhen doing `router.push('url')`, `next({..., replace: true})` will cause this navigation become `router.replace`.\r\n\r\nwant to know current navigating statue inside guards to solve this problem.\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nbeforeEach: (to, from, next, infos) => {\r\n  console.log(info.replace)    // true or false\r\n}\r\n```\r\n\r\nor:\r\n\r\n```javascript\r\nbeforeEach: (to, from, next) => {\r\n  console.log(to.replace)    // true or false\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2515","RelatedDescription":"Closed issue \"Inside guards, get to know current navigating is under router.replace or router.push.\" (#2515)"},{"Id":"386683853","IsPullRequest":false,"CreatedAt":"2018-12-03T07:01:07","Actor":"cpfeng","Number":"2514","RawContent":null,"Title":"vue-router back not work when some async js status is pending","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/issues/2514","RelatedDescription":"Closed issue \"vue-router back not work when some async js status is pending\" (#2514)"},{"Id":"386568823","IsPullRequest":true,"CreatedAt":"2018-12-02T15:15:34","Actor":"miewx","Number":"2512","RawContent":null,"Title":"no need set init data;just use async data","State":"open","Body":"use like this\r\n```\r\nexport default {\r\n    beforeRouteEnter:(from, to, next)->\r\n        li = (await $.get '/api/li.txt').split('\\n').filter(Boolean)\r\n        @data = ->\r\n            {\r\n                n:0\r\n                now:1\r\n                li\r\n                src : [\r\n                    li[0]\r\n                    li[1]\r\n                ]\r\n            }\r\n        next()\r\n\r\n```","Url":"https://github.com/vuejs/vue-router/pull/2512","RelatedDescription":"Open PR \"no need set init data;just use async data\" (#2512)"},{"Id":"385955336","IsPullRequest":false,"CreatedAt":"2018-11-30T13:08:43","Actor":"michaeldjeffrey","Number":"2509","RawContent":null,"Title":"isError only identifies literal errors when extending Error and targeting IE","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/o8v2plnoz](https://codesandbox.io/s/o8v2plnoz)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nMake a custom error using the class-extends syntax.\r\nThrow error during a route transition.\r\n\r\n### What is expected?\r\nError is caught and sent to Router.onError handler.\r\n\r\n### What is actually happening?\r\nError is being identified as a plain object.\r\n\r\n---\r\nHave a custom error to carry notifications with uncaught errors in an application. \r\nNo notifications were showing up in production where we support IE11. \r\nThe custom error correctly identifies as an instanceof Error, but the util/isError function deems it an object.\r\n\r\nI'm currently using some snippets from https://github.com/onury/custom-error-test to get the Error prototype on my custom error.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2509","RelatedDescription":"Closed issue \"isError only identifies literal errors when extending Error and targeting IE\" (#2509)"},{"Id":"386068040","IsPullRequest":false,"CreatedAt":"2018-11-30T12:40:47","Actor":"dmmikkel","Number":"2511","RawContent":null,"Title":"Make it possible to specify depth on RouterView component","State":"closed","Body":"### What problem does this feature solve?\r\nIn order to render children of a route you must nest RouterView components inside each other. In certain projects with advanced layouts this forces the wrong components to be responsible for the layout.\r\n\r\nI propose that RouterView accepts an optional property that overrides the depth. I have already implemented and tested this feature in our project.\r\n\r\nThe benefits of this is\r\n \r\n- Removes the need for nesting RouterViews\r\n- Makes it possible for a single component to be responsible for layout when using child views\r\n- In devtools it is easier to find the router views as they are siblings\r\n- Is 100% optional and does not break any existing code\r\n\r\n### What does the proposed API look like?\r\n    routes: [\r\n      { path: '/', component: Foo,\r\n        children: [\r\n          { path: 'child', component: Bar,\r\n            children: [\r\n              { path: 'another-child', component: Baz }\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n\r\n    <RouterView :depth=\"0\"/>\r\n    <RouterView name=\"some-name\" :depth=\"0\"/>\r\n    <RouterView :depth=\"1\"/>\r\n    <RouterView :depth=\"2\"/>\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2511","RelatedDescription":"Closed issue \"Make it possible to specify depth on RouterView component\" (#2511)"},{"Id":"385992623","IsPullRequest":false,"CreatedAt":"2018-11-30T01:00:05","Actor":"1060352728","Number":"2510","RawContent":null,"Title":"Routing jump after the # appears in front of one?","State":"closed","Body":"i use  'this.$router.push('/main');'  after url     'http://127.0.0.1:8080/?#/main'.   It seems to me that it has a question mark","Url":"https://github.com/vuejs/vue-router/issues/2510","RelatedDescription":"Closed issue \"Routing jump after the # appears in front of one?\" (#2510)"},{"Id":"385847742","IsPullRequest":false,"CreatedAt":"2018-11-29T17:34:18","Actor":"GNSubrahmanyam","Number":"2508","RawContent":null,"Title":"What are the best practices for hiding/disablinga component on some routes?","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2508","RelatedDescription":"Closed issue \"What are the best practices for hiding/disablinga component on some routes?\" (#2508)"},{"Id":"385144571","IsPullRequest":false,"CreatedAt":"2018-11-28T07:59:40","Actor":"Youn9er","Number":"2507","RawContent":null,"Title":"TypeError: Cannot read property 'topBar' of undefined","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2507","RelatedDescription":"Closed issue \"TypeError: Cannot read property 'topBar' of undefined\" (#2507)"},{"Id":"384895343","IsPullRequest":true,"CreatedAt":"2018-11-27T17:03:06","Actor":"clarkdo","Number":"2506","RawContent":null,"Title":"fix: expect 0 to be defined","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nTry to fix #2505, delegate `params['pathMatch']` to `params['0']` for `pathToRegexp` package matching.","Url":"https://github.com/vuejs/vue-router/pull/2506","RelatedDescription":"Open PR \"fix: expect 0 to be defined\" (#2506)"},{"Id":"384855230","IsPullRequest":false,"CreatedAt":"2018-11-27T15:39:21","Actor":"manniL","Number":"2505","RawContent":null,"Title":"Catch all route with prefix throw `Expected \"0\" to be defined`","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/lykxn57kr7](https://codesandbox.io/s/lykxn57kr7)\r\n\r\n\r\nPrefix routes are fine when they don't have a prefix but with a `/sth/` it becomes problematic.\r\n\r\nThis causes problems especially for `nuxt-i18n` together with a catch-all-route (as it uses lang prefixes)\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Visit the CSB/Website\r\n2. See warning in the console.\r\n\r\nInfo: This did not happen in 3.0.1\r\nRelated: #2496, #2503 \r\n\r\n### What is expected?\r\nNo warning\r\n\r\n### What is actually happening?\r\nWarning\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2505","RelatedDescription":"Open issue \"Catch all route with prefix throw `Expected \"0\" to be defined`\" (#2505)"},{"Id":"384785306","IsPullRequest":false,"CreatedAt":"2018-11-27T13:04:16","Actor":"yigu","Number":"2504","RawContent":null,"Title":"path not change","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2504","RelatedDescription":"Closed issue \"path not change\" (#2504)"},{"Id":"384785011","IsPullRequest":false,"CreatedAt":"2018-11-27T13:03:27","Actor":"rchl","Number":"2503","RawContent":null,"Title":"Unclear structure of params object","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\nhttps://codesandbox.io/s/lykxn57kr7\r\n\r\n### Steps to reproduce\r\nAccess `$route.params[0]` for route with a `*`.\r\n\r\n### What is expected?\r\nThe matched part is returned.\r\n\r\n### What is actually happening?\r\nValue is undefined. The value is at `pathMatch` property instead.\r\n\r\n---\r\nhttps://github.com/vuejs/vue-router/pull/1995/files (@posva) has done a change that changes from having `0` property on the `params` object to having `pathMatch`.\r\n\r\nI would argue that this is an API breaking change and should be done in a major version release. I would, but `params` object is not documented very well so it's hard to reason about. (see https://router.vuejs.org/api/#route-object-properties)\r\n\r\nAs the damage is done already, maybe you can use this bug to improve on documentation and state in documentation for `$route.params` where the matched part is exposed for routes that are using `*`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2503","RelatedDescription":"Open issue \"Unclear structure of params object\" (#2503)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"390153226","IsPullRequest":false,"CreatedAt":"2018-12-12T10:11:47","Actor":"jdoubleu","Number":"1471","RawContent":null,"Title":"Destroy hook in plugin for hotReload","State":"open","Body":"### What problem does this feature solve?\r\nSo far it is only possible for a plugin to be registered through a single function. On the other hand it is not possible to hook into a plugins destroy/replacement.\r\nIn production mode there is no need for such hook, because it's not possible to remove a plugin (this might be reconsidered after https://github.com/vuejs/vuex/issues/467#issuecomment-266493888).\r\n\r\nBut given the [plugin example](https://vuex.vuejs.org/guide/plugins.html#committing-mutations-inside-plugins) which registers event handlers on the `socket` and taking [hot reloading](https://vuex.vuejs.org/guide/hot-reload.html) into account, the handlers are registered multiple times.\r\nThere is no way to unregister an event handler before the plugin gets replaced.\r\n\r\nI'm not sure if this is a general problem with a HMR system (like webpack's) or if its caused by the [`store.hotUpdate()`](https://vuex.vuejs.org/api/#hotupdate) function. I suspect, that even `store.subscribe()` gets called multiple times causing the code to be executed multiple times after some hot replacements.\r\n\r\n**Workaround**:\r\nStore event handlers in a local variable outside the plugin's context.\r\n\r\n### What does the proposed API look like?\r\nEither additional methods exposed by the plugin (similar to [this](https://github.com/vuejs/vuex/issues/467#issuecomment-270836284)):\r\n```\r\nconst myPlugin = {\r\n  init(store) {\r\n     registerAllEventListeners()\r\n\r\n     store.subscribe((mutation, state) => {\r\n        doSomething()\r\n     })\r\n  },\r\n  beforeDestroy(store) {\r\n     unregisterAllEventListeners()\r\n  }\r\n}\r\n```\r\n\r\nOr as a store instance method:\r\n```\r\nconst myPlugin = (store) => {\r\n   registerAllEventListeners()\r\n\r\n   store.subscribe((mutation, state) => {\r\n       doSomething()\r\n   })\r\n\r\n  store.subscribeBeforeDestroy(() => {\r\n     unregisterAllEventListeners()\r\n  }\r\n}\r\n```\r\n\r\nThe latter wouldn't introduce breaking changes of the plugin API.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1471","RelatedDescription":"Open issue \"Destroy hook in plugin for hotReload\" (#1471)"},{"Id":"390120640","IsPullRequest":false,"CreatedAt":"2018-12-12T08:46:41","Actor":"oxiaojiano","Number":"1470","RawContent":null,"Title":"actions and mutations 异同","State":"open","Body":"### What problem does this feature solve?\r\n在文档上应该明确说明，actions和mutations都是用来改变state，mutations是只能是同步执行，在执行异步操作的时候在devtools中追踪不到state数据的变化，而actions是可以处理异步函数的数据的\r\n\r\n### What does the proposed API look like?\r\n改变一下描述文字\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1470","RelatedDescription":"Open issue \"actions and mutations 异同\" (#1470)"},{"Id":"382201955","IsPullRequest":false,"CreatedAt":"2018-12-11T10:23:52","Actor":"hqzh","Number":"1451","RawContent":null,"Title":"使用mapState 辅助函数绑定表单v-model","State":"closed","Body":"### What problem does this feature solve?\r\n看见文档说input表单输入绑定可以, 或者通过表单的change事件commit也可以\r\n```javascript\r\ncomputed: {\r\n  message: {\r\n    get () {\r\n      return this.$store.state.obj.message\r\n    },\r\n    set (value) {\r\n      this.$store.commit('updateMessage', value)\r\n    }\r\n  }\r\n},\r\n```\r\n\r\n但是使用使用mapState 辅助函数没有看到有暴露set和get,\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nimport { mapState } from 'vuex'\r\n\r\nexport default {\r\n  // ...\r\n  computed: mapState({\r\n    message: state => {\r\n       get() {\r\n          \r\n        },\r\n        set(value) {\r\n         \r\n        }\r\n   }\r\n  })\r\n}\r\n```\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1451","RelatedDescription":"Closed issue \"使用mapState 辅助函数绑定表单v-model\" (#1451)"},{"Id":"388967040","IsPullRequest":false,"CreatedAt":"2018-12-08T22:49:51","Actor":"superbiche","Number":"1469","RawContent":null,"Title":"Access modules easily from store","State":"open","Body":"### What problem does this feature solve?\r\nI'd like to register dynamically a module that would have access to already registered modules - native module, with custom attributes - thus allowing these modules to leverage presenters and other utilities.\r\nCurrently I can do this with `store._modules.root._children` but the fact it takes two `_` makes me feel I'm doing something really dirty\r\n\r\n### What does the proposed API look like?\r\nSomething like `store.getModules = () => store._modules.root._children`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1469","RelatedDescription":"Open issue \"Access modules easily from store\" (#1469)"},{"Id":"388904450","IsPullRequest":true,"CreatedAt":"2018-12-08T09:24:41","Actor":"NataliaTepluhina","Number":"1468","RawContent":null,"Title":"docs: add a description of providing store to Vue instance","State":"open","Body":"_Note:_ This change was already introduced in #858 and it's still crucial for Vuex docs but since this PR exists for 1.5 years and has conflicts with a base branch, I'm opening a new one.\r\n\r\nAdded a short description of how to provide a store to Vue instance to have access to it from inside Vue components.\r\n\r\n**Update:** found docs on injecting store in the `State` doc. I still think they should be moved to `Getting started` part because it's just easier not to miss it in the entry doc.","Url":"https://github.com/vuejs/vuex/pull/1468","RelatedDescription":"Open PR \"docs: add a description of providing store to Vue instance\" (#1468)"},{"Id":"388672064","IsPullRequest":false,"CreatedAt":"2018-12-07T14:16:19","Actor":"xereda","Number":"1467","RawContent":null,"Title":"Vuex getters arguments","State":"open","Body":"### What problem does this feature solve?\r\nIs there a specific reason for a getter to get store context through separate arguments?\r\n\r\nI like how the actions receive the context of the store, that is, with only one argument, this being an object. With this, we have the possibility of using es6 destructuring to extract something specific.\r\n\r\nIf I just need to trigger a mutation (the most common behavior), I just to extract commit from context object. But, if I need to access a getter from a parent module, for example, I extract together with dispatch, the rootGetters.\r\n\r\nAlthough they are exceptional cases, I have some situations that I need, inside a getter, access a getter from another module (parent module). With this, I need to inform arguments that I will not use in the getter scope.\r\n\r\nAnalyze the following example:\r\n\r\n```js\r\nisLoading: (state, getters, rootState, rootGetters) => {\r\n  // getters and rootState not used\r\n  return state.isLoading || rootGetters.module.isLoading;\r\n};\r\n```\r\n\r\nSee that I have passed the getters and rootState arguments, even though, in this case, I do not need them.\r\n\r\nThe question I have is: Is there any specific reason why it has been treated differently from how it is handled in the vuex actions? Why does an vuex action get only one argument and vuex getter get 4 arguments?\r\n\r\nThanks in advance for the time spent by friends. Sorry for bad English.\r\n\r\n### What does the proposed API look like?\r\nJust document, through this issue, the difference between the behavior of getters and actions.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1467","RelatedDescription":"Open issue \"Vuex getters arguments\" (#1467)"},{"Id":"388670505","IsPullRequest":false,"CreatedAt":"2018-12-07T14:11:58","Actor":"xereda","Number":"1466","RawContent":null,"Title":"Vuex getters arguments","State":"closed","Body":"Is there a specific reason for a getter to get store context through separate arguments?\r\n\r\nI like how the actions receive the context of the store, that is, with only one argument, this being an object. With this, we have the possibility of using es6 destructuring to extract something specific.\r\n\r\nIf I just need to trigger a mutation (the most common behavior), I just to extract commit from context object. But, if I need to access a getter from a parent module, for example, I extract together with dispatch, the rootGetters.\r\n\r\nAlthough they are exceptional cases, I have some situations that I need, inside a getter, access a getter from another module (parent module). With this, I need to inform arguments that I will not use in the getter scope.\r\n\r\nAnalyze the following example:\r\n\r\n```javascript\r\nisLoading: (state, getters, rootState, rootGetters) => {\r\n  // getters and rootState not used\r\n  return state.isLoading || rootGetters.module.isLoading;\r\n};\r\n```\r\n\r\nSee that I have passed the getters and rootState arguments, even though, in this case, I do not need them.\r\n\r\nThe question I have is: Is there any specific reason why it has been treated differently from how it is handled in the vuex actions? Why does an vuex action get only one argument and vuex getter get 4 arguments?\r\n\r\nThanks in advance for the time spent by friends. Sorry for bad English.\r\n","Url":"https://github.com/vuejs/vuex/issues/1466","RelatedDescription":"Closed issue \"Vuex getters arguments\" (#1466)"},{"Id":"388075586","IsPullRequest":true,"CreatedAt":"2018-12-06T06:34:01","Actor":"Jinjiang","Number":"1465","RawContent":null,"Title":"docs: fixed links to vm.$watch","State":"open","Body":"In [\"API Reference\" > \"Vuex.Store Instance Methods\" > \"watch\"](https://vuex.vuejs.org/api/#watch) section of the `en` docs, there is a link of \"Vue's `vm.$watch` method\" but linked to `watch` options. It should be https://vuejs.org/v2/api/#vm-watch if I don't misunderstand it.\r\n\r\nI also fixed the `zh` docs. And the `ru` docs seems right. but other language docs seems not same to the latest `en` version. So I am not sure whether should be updated too.\r\n\r\nThanks.\r\n","Url":"https://github.com/vuejs/vuex/pull/1465","RelatedDescription":"Open PR \"docs: fixed links to vm.$watch\" (#1465)"},{"Id":"387770827","IsPullRequest":false,"CreatedAt":"2018-12-05T14:02:45","Actor":"alexeigs","Number":"1464","RawContent":null,"Title":"Using typescript, I cannot access imported store in router.ts","State":"closed","Body":"vue-cli 3.0 setup incl. Typescript\r\n\r\nI try to access a getter through the store property from inside my _router.ts_ which doesn't find anything and results in `undefined`. The imported `store` object doesn't work. Using the debugger, the reference to the store object at this point in time is something like `_store_index__WEBPACK_IMPORTED_MODULE_5__` instead (going down the tree, I can find my getters under `_store_index__WEBPACK_IMPORTED_MODULE_5__.default.getters`).\r\n\r\n_store.ts_\r\n```\r\nimport Vue from 'vue'\r\nimport Vuex, { StoreOptions } from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nconst store: StoreOptions<RootState> = {\r\n    state: {\r\n        version: '1.0.0' // a simple property\r\n    },\r\n    modules: {\r\n        authModule\r\n    }\r\n}\r\n\r\nexport default new Vuex.Store<RootState>(store)\r\n\r\nexport interface RootState {\r\n    version: string\r\n}\r\n\r\n```\r\n\r\n_router.ts_\r\n```\r\nimport Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport store from '@/store/index'\r\n\r\nconst router = new Router({\r\n    mode: 'history',\r\n    base: process.env.BASE_URL,\r\n    routes: [{}]\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n    if (store.getters.authModule.isUserLoggedIn) {\r\n        // continue\r\n    }\r\n}\r\n\r\n```\r\n\r\nAny idea what's wrong and how I could access the getters instead?","Url":"https://github.com/vuejs/vuex/issues/1464","RelatedDescription":"Closed issue \"Using typescript, I cannot access imported store in router.ts\" (#1464)"},{"Id":"382477598","IsPullRequest":false,"CreatedAt":"2018-12-02T06:12:45","Actor":"dinglittle","Number":"1452","RawContent":null,"Title":"mapGetters 辅助函数，将一个 getter 属性另取一个名字","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://vuex.vuejs.org/zh/guide/getters.html](https://vuex.vuejs.org/zh/guide/getters.html)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nVuex 官方 [链接所示](https://vuex.vuejs.org/zh/guide/getters.html)  mapGetters 辅助函数，将一个 getter 属性另取一个名字 ， 示例代码\r\n\r\n\r\n### What is expected?\r\n\r\n```\r\nmapGetters({\r\n  // 把 `this.doneCount` 映射为 `this.$store.getters.doneTodosCount`\r\n  doneCount: 'doneTodosCount'\r\n})\r\n```\r\n\r\n### What is actually happening?\r\n修正\r\n\r\n```\r\n...mapGetters({\r\n  // 把 `this.doneCount` 映射为 `this.$store.getters.doneTodosCount`\r\n  doneCount: 'doneTodosCount'\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1452","RelatedDescription":"Closed issue \"mapGetters 辅助函数，将一个 getter 属性另取一个名字\" (#1452)"},{"Id":"385345295","IsPullRequest":false,"CreatedAt":"2018-12-02T05:37:58","Actor":"guywithdoubts","Number":"1462","RawContent":null,"Title":"Separate instances of Vuex store clash each other when working across separate Vue instances","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/9rLp5t4s/](https://jsfiddle.net/9rLp5t4s/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI am currently learning/prototyping vue.js and vuex (using plain js, at the moment). I am trying to accomplish following:\r\n\r\n1)create multiple vue instances having their own vuex stores independent to each other. Right now, I am storing only ajax status/progress in vuex store and improve it gradually.\r\n2)vue instances can come from same vue definition (template, methods etc.), but need to work with different vuex store instances.\r\n3)vuex stores should not know about each other (no clashes) and should only work exclusively with their respective vue instance counter parts.\r\n\r\nI almost achieved the above as shown in fiddle:\r\n\r\nTheoritically, we can just create one class out of app.js and app2.js (identical code). But, just to test/troubleshoot things, I separated them.\r\n\r\nI am able to pull data and everything seems working fine.   If I refresh button in second instance the console log shows perfectly.  If I refresh button in first instance it clashes with the vuex store in second instance\r\n\r\n### What is expected?\r\nthe vue instance should not clash with other vuex stores not related to it\r\n\r\n### What is actually happening?\r\nfirst vue instance clashes with vuex store in second instance\r\n\r\n---\r\nmore information here: https://stackoverflow.com/questions/53522844/separate-instances-of-vuex-store-clash-each-other-when-working-across-separate-v\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1462","RelatedDescription":"Closed issue \"Separate instances of Vuex store clash each other when working across separate Vue instances\" (#1462)"},{"Id":"385338921","IsPullRequest":false,"CreatedAt":"2018-12-02T05:18:39","Actor":"farzadmf","Number":"1461","RawContent":null,"Title":"Actions not recognized when using ActionTree","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/farzadmf/vuex-action-tree-issue](https://github.com/farzadmf/vuex-action-tree-issue)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThere's no need to run anything, just open the repo in VSCode, and you will see the error. I've added comments to make it clear\r\n\r\n### What is expected?\r\nWhen I create an `ActionTree<...>`, I should be able to call my individual Actions on it\r\n\r\n### What is actually happening?\r\nWhen I type my actions to be of type `ActionTree<...>`, then when I call my action(s), I see the error of \"no compatible call signatures\"\r\n\r\n---\r\nI've created constants to be used as names for my actions (so that I don't use strings). At first, I though that is what's causing the problem; that's why I created the 'hello()' function to test, and it seems to me the constants are not an issue here.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1461","RelatedDescription":"Closed issue \"Actions not recognized when using ActionTree\" (#1461)"},{"Id":"385534522","IsPullRequest":false,"CreatedAt":"2018-11-29T01:57:43","Actor":"leoyli","Number":"1463","RawContent":null,"Title":"silent and ignore any dispatch or commit during time-traveling in the dev mode","State":"open","Body":"### What problem does this feature solve?\r\nIMO, time-traveling (or traversing in the event sourcing record) should have no side-effects.  Often, I found it is annoying when I \"time-traveled\", there is a side-effect being performed due to the component life cycle or routing middleware try to do their \"regular\" task... this resulted in a polluted mutation records... Consider the fact that some component can be delayed rendered by `v-if=state` (so components may be mounted/unmounted during time-traveling), the same may also happen if the one uses `@vue/vuex-router-sync`, this feature is good to have.\r\n\r\n### What does the proposed API look like?\r\nWhen we click \"time travel to the state\" in the dev tool, Vuex internally have a mechanism to silent and ignore any dispatch or commit to be performed (or prevent state to be mutated during time-traveling).  This locking mechanism can be unlocked if we decide to either **revert** or **traverse** to the latest state (they are basically the same).  While I have little clue how we are going to implement this or should we have this, after discussed with my colleagues, I think it would be beneficial to open this discussion.\r\n\r\n** the reason I post this here is due to the fact that the devTool have to touch the vuex core if we want to have this.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1463","RelatedDescription":"Open issue \"silent and ignore any dispatch or commit during time-traveling in the dev mode\" (#1463)"},{"Id":"384820659","IsPullRequest":true,"CreatedAt":"2018-11-28T02:21:24","Actor":"jshindo-gladd","Number":"1460","RawContent":null,"Title":"docs(ja): fix translation","State":"closed","Body":"- Fixed description of `fn`'s arguments.\r\n- Tweaked 1st sentence.\r\n\r\nEnglish:\r\n> Reactively watch `fn`'s return value, and call the callback when the value changes. `fn` receives the store's state as the first argument, and getters as the second argument.","Url":"https://github.com/vuejs/vuex/pull/1460","RelatedDescription":"Closed or merged PR \"docs(ja): fix translation\" (#1460)"},{"Id":"384599520","IsPullRequest":false,"CreatedAt":"2018-11-27T03:03:39","Actor":"JaeYeopHan","Number":"1459","RawContent":null,"Title":"Suggestion to Vuex best practice when using nested modules","State":"open","Body":"### What problem does this feature solve?\r\nIMHO, there are several problems with Vuex.\r\n\r\n1. Overuse string when using `mapState`, `mapGetters`, `mapActions`\r\n2. Duplicated namespace in components\r\n\r\nlike this:\r\n_my-component.vue_ (AS-IS version)\r\n\r\n```js\r\nexport default {\r\n  computed: {\r\n    ...mapState(\"todos\", {\r\n      allItems: ({ items }) => items,\r\n    }),\r\n    ...mapGetters(\"todos\", {\r\n      doneItems: \"doneItems\",\r\n      activeItems: \"activeItems\",\r\n    }),\r\n  }\r\n}\r\n```\r\n\r\nIn this code, `\"doneItmes\"` is written by string. It will cause bug easily.\r\nAnd there are duplicated namespace called `\"todos\"`. It will inhibit maintainabillity.\r\n\r\n### What does the proposed API look like?\r\nThe way to introduce it is not to suggest a new API, but to use the existing API properly.\r\nWe can use `createNamespacedHelpers` API with constants in store directory!\r\n\r\n### Example\r\n\r\n_@/store/todos/types.js_\r\n\r\n```js\r\nexport const NAMESPACE = \"todos\";\r\n```\r\n\r\n_@/store/todos/index.js_\r\n\r\n```js\r\nimport { createNamespacedHelpers } from\"vuex\";\r\nimport { NAMESPACE } from \"./types\";\r\n\r\n// Key point !\r\nconst { mapState, mapGetters, mapActions } = createNamespacedHelpers(NAMESPACE);\r\n\r\nexport { mapState, mapGetters, mapActions };\r\n\r\nexport default { /* namespaced, state, getters, mutations, actions */ }\r\n```\r\n\r\n_@/store/todos/getters.js_\r\n\r\n```js\r\n// Key point !\r\nexport const DONE_ITEMS = \"DONE_ITEMS\";\r\nexport const ACTIVE_ITEMS = \"ACTIVE_ITEMS\";\r\n\r\nexport default {\r\n  [DONE_ITEMS]: state => state.items.filter(todo => todo.isDone),\r\n  [ACTIVE_ITEMS]: state => state.items.filter(todo => !todo.isDone)\r\n};\r\n```\r\n\r\nIf we do this, we can use customized binding helpers.\r\n\r\n_my-component.vue_ (TO-BE version)\r\n\r\n```js\r\nimport * as todos from '@/store/todos'; // Key point !\r\nimport * as getters from '@/store/todos/getters'; // Key point !\r\nimport * as actions from '@/store/todos/types'; // Key point !\r\n\r\nexport default {\r\n  computed: {\r\n    ...todos.mapState({\r\n      allItems: ({ items }) => items,\r\n    }),\r\n    ...todos.mapGetters([\r\n      getters.DONE_ITEMS,\r\n      getters.ACTIVE_ITEMS,\r\n    ])\r\n  },\r\n  methods: {\r\n    ...todos.mapActions([\r\n      actions.ADD_ITEM,\r\n    ]),\r\n  }\r\n}\r\n```\r\n\r\nHow about this? If you do not mind this, I would like to post it on the official Vuex document.\r\nYou can see the all example code in [this repository](https://github.com/JaeYeopHan/vuex-best-practice-lab)\r\n\r\nThanks!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1459","RelatedDescription":"Open issue \"Suggestion to Vuex best practice when using nested modules\" (#1459)"},{"Id":"382483849","IsPullRequest":true,"CreatedAt":"2018-11-27T01:30:46","Actor":"Jinjiang","Number":"1453","RawContent":null,"Title":"docs: replaced video preview code to a VideoPreview component","State":"closed","Body":"... for better maintenance and translation.\r\nRef: https://v0.vuepress.vuejs.org/guide/using-vue.html#using-components\r\nThanks.","Url":"https://github.com/vuejs/vuex/pull/1453","RelatedDescription":"Closed or merged PR \"docs: replaced video preview code to a VideoPreview component\" (#1453)"},{"Id":"383775059","IsPullRequest":true,"CreatedAt":"2018-11-26T03:24:41","Actor":"Flamenco","Number":"1457","RawContent":null,"Title":"Fix typo and update tense","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1457","RelatedDescription":"Closed or merged PR \"Fix typo and update tense\" (#1457)"},{"Id":"382484140","IsPullRequest":true,"CreatedAt":"2018-11-26T03:15:09","Actor":"Jinjiang","Number":"1454","RawContent":null,"Title":"docs(zh): update","State":"closed","Body":"Ref: https://github.com/vuejs/vuex/compare/f64a89c...4b82bb2\r\n/ping @justineo\r\nThanks.","Url":"https://github.com/vuejs/vuex/pull/1454","RelatedDescription":"Closed or merged PR \"docs(zh): update\" (#1454)"},{"Id":"380798629","IsPullRequest":true,"CreatedAt":"2018-11-26T03:04:15","Actor":"pvrsouza","Number":"1449","RawContent":null,"Title":"removing English text from pt-br file","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1449","RelatedDescription":"Closed or merged PR \"removing English text from pt-br file\" (#1449)"},{"Id":"384145966","IsPullRequest":false,"CreatedAt":"2018-11-26T01:51:52","Actor":"mrbuds","Number":"1458","RawContent":null,"Title":"Vuex website: Homepage video doesn't load right with firefox nightly","State":"closed","Body":"When clicking on the video of https://vuex.vuejs.org/ home page with firefox nightly (on windows) the javascript doesn't load like it should.\r\n\r\n![preview](https://i.imgur.com/OCbS5ju.png)\r\n\r\nTested with all addons disabled and after restarting it.\r\n\r\nIt's fine with chrome.","Url":"https://github.com/vuejs/vuex/issues/1458","RelatedDescription":"Closed issue \"Vuex website: Homepage video doesn't load right with firefox nightly\" (#1458)"},{"Id":"382592306","IsPullRequest":true,"CreatedAt":"2018-11-20T10:18:29","Actor":"isnifer","Number":"1456","RawContent":null,"Title":"Return original Action Promise instead of pipe after \"catch\" when registerAction","State":"open","Body":"Hello everyone!\r\n\r\n## Prerequisites\r\nIn my project, I do not use just a promise to do actions.\r\nSimplified version looks like this:\r\n```js\r\nclass CustomPromise {\r\n  constructor({ promise }) {\r\n    this.promise = promise.then(this.handleSuccess, this.handleError)\r\n  }\r\n\r\n  handleSuccess = () => {\r\n    // ...\r\n  }\r\n\r\n  handleError = () => {\r\n    // ...\r\n  }\r\n\r\n  handleCancel = () => {\r\n    // ...\r\n  }\r\n\r\n  then = (success, error) => this.promise.then(success, error)\r\n\r\n  catch = error => this.promise.catch(error)\r\n}\r\n```\r\nWhen I wanted to explicitly work with my action promise I found that I got only PromiseValue instead of my `CustomPromise`.\r\nI had a `vue extenstion` for Chrome (yes, I removed it to test and verify a bug).\r\n\r\n## Finally\r\n[This line](https://github.com/vuejs/vuex/blob/dev/src/store.js#L415) creates a promise chain that not only subscribes to `catch`. This line provides only promise value/error to userland code instead of an original promise.\r\n\r\n## How to fix?\r\nDeveloper tools may be a useful tool, but `Vuex` should not change itself behavior when Devtools are available.\r\nThis `catch` should **ONLY** subscribes to errors (creates a parallel pipe and **DO NOT THROW** an error inside).\r\nA userland code also will catch an error.\r\n","Url":"https://github.com/vuejs/vuex/pull/1456","RelatedDescription":"Open PR \"Return original Action Promise instead of pipe after \"catch\" when registerAction\" (#1456)"},{"Id":"382540617","IsPullRequest":false,"CreatedAt":"2018-11-20T07:53:56","Actor":"eltonchan","Number":"1455","RawContent":null,"Title":"Can I ask a question?","State":"closed","Body":"This is not a Issues, But it has been bothering me.\r\nwhy vuex  don't use mixin data, Choose new Vue ?\r\n","Url":"https://github.com/vuejs/vuex/issues/1455","RelatedDescription":"Closed issue \"Can I ask a question?\" (#1455)"},{"Id":"381739958","IsPullRequest":false,"CreatedAt":"2018-11-16T19:59:44","Actor":"toymachiner62","Number":"1450","RawContent":null,"Title":"Update documentation for $watch with an example","State":"open","Body":"### What problem does this feature solve?\r\nThe documentation for $watch is pretty unclear how to use without an example https://vuex.vuejs.org/api/#watch\r\n\r\nI figured out how to use it from this comment in the forums https://forum.vuejs.org/t/correct-way-to-use-store-watch-in-vuex/1800/6\r\n\r\n### What does the proposed API look like?\r\nThe documentation will have an example similar to https://forum.vuejs.org/t/correct-way-to-use-store-watch-in-vuex/1800/6\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1450","RelatedDescription":"Open issue \"Update documentation for $watch with an example\" (#1450)"},{"Id":"380635432","IsPullRequest":false,"CreatedAt":"2018-11-14T10:36:22","Actor":"Danilo-Araujo-Silva","Number":"1448","RawContent":null,"Title":"Possibility to log all state changes (not only actions or mutations)","State":"open","Body":"### What problem does this feature solve?\r\nWith these [built-in logger plugin](https://vuex.vuejs.org/guide/plugins.html#built-in-logger-plugin) we are able to subscribe to our store and log all state mutations.\r\n\r\nBut, it looks like, for now, we are not able to log all state changes other than mutations or actions. What does it mean? For example, if we are controlling the state of the application drawer (like this [one](https://vuetifyjs.com/en/components/navigation-drawers#example-dark) on the Vuetify project or more specifically some inline editing actions in the data table component) and we would like to connect (even mapping) the store state directly in the component we will not be able to log the mutations there, since there's no mutation action involved.\r\n\r\nMaybe we could use events to try to accomplish that but I'll be far more difficult.\r\n\r\nI think it could be very good for us we have the possibility to log state changes that are not triggered by mutations and actions too.\r\n\r\n### What does the proposed API look like?\r\n```\r\nconst myPlugin = store => {\r\n  // called when the store is initialized\r\n  store.subscribe((state, mutation, action) => {\r\n    // called after every state change and not only on mutations.\r\n    // The mutation comes in the format of `{ type, payload }`.\r\n  })\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1448","RelatedDescription":"Open issue \"Possibility to log all state changes (not only actions or mutations)\" (#1448)"},{"Id":"380547836","IsPullRequest":true,"CreatedAt":"2018-11-14T06:11:01","Actor":"chrisvfritz","Number":"1447","RawContent":null,"Title":"Add 5-minute video to What is Vuex?","State":"closed","Body":"Since a lot of people have a difficult time understanding Vuex at first, we collaborated with the Vue Mastery team on this short video. I think it will provide a much gentler onboarding experience. 🙂","Url":"https://github.com/vuejs/vuex/pull/1447","RelatedDescription":"Closed or merged PR \"Add 5-minute video to What is Vuex?\" (#1447)"},{"Id":"380333486","IsPullRequest":false,"CreatedAt":"2018-11-13T17:15:14","Actor":"lyz1991","Number":"1446","RawContent":null,"Title":"About unregisterModule ","State":"closed","Body":"my version of vuex is 3.0.1 and project is ssr\r\nwhen I call unregisterModule the api in beforeRouteLeave like this:\r\n<img width=\"316\" alt=\"wechatimg14\" src=\"https://user-images.githubusercontent.com/15042461/48430087-739da280-e7a9-11e8-8fee-1e3111ff816e.png\">\r\nIt throw a error like this：\r\n<img width=\"497\" alt=\"wechatimg15\" src=\"https://user-images.githubusercontent.com/15042461/48430384-2bcb4b00-e7aa-11e8-9da3-8ae7f8750f5d.png\">\r\nand I debug find that \r\n<img width=\"544\" alt=\"wechatimg16\" src=\"https://user-images.githubusercontent.com/15042461/48430528-7ea50280-e7aa-11e8-9a03-3180c2d4c42f.png\">\r\nthere path is [], how can I deal with?\r\nAnd if I not use this api  how can I check a module it is installed \r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1446","RelatedDescription":"Closed issue \"About unregisterModule \" (#1446)"},{"Id":"379882149","IsPullRequest":true,"CreatedAt":"2018-11-13T03:05:38","Actor":"Alex-Sokolov","Number":"1445","RawContent":null,"Title":"[RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1445","RelatedDescription":"Closed or merged PR \"[RU] Translation update\" (#1445)"},{"Id":"379720373","IsPullRequest":true,"CreatedAt":"2018-11-13T03:03:50","Actor":"talentedunicorn","Number":"1444","RawContent":null,"Title":"Added copy to clarify context","State":"closed","Body":"Although it is mentioned further down the document; I think this line will make it more clear especially for newcomers of vuex. I see similar questions regarding this like https://stackoverflow.com/questions/45848974/call-an-action-from-within-another-action","Url":"https://github.com/vuejs/vuex/pull/1444","RelatedDescription":"Closed or merged PR \"Added copy to clarify context\" (#1444)"},{"Id":"379393333","IsPullRequest":false,"CreatedAt":"2018-11-10T05:42:26","Actor":"miracle9312","Number":"1443","RawContent":null,"Title":"arrow function style advice","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vuex/issues/1443","RelatedDescription":"Closed issue \"arrow function style advice\" (#1443)"},{"Id":"378041385","IsPullRequest":true,"CreatedAt":"2018-11-07T17:04:56","Actor":"dcrall","Number":"1442","RawContent":null,"Title":"Eliminate extra word","State":"closed","Body":"\"You can ~do~ achieve this\" -> \"You can achieve this\"","Url":"https://github.com/vuejs/vuex/pull/1442","RelatedDescription":"Closed or merged PR \"Eliminate extra word\" (#1442)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-12-17T05:31:24.6385421Z","RunDurationInMilliseconds":4840}