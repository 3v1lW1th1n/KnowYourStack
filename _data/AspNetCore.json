{"Data":{"Blog":{"FeedItems":[{"Title":"Razor support in Visual Studio Code now in Preview","PublishedOn":"2018-11-16T18:00:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Earlier this week we released a preview of support for working with Razor files (.cshtml) in the C# extension for Visual Studio Code (1.17.1). This initial release introduces C# completions, directive...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/11/16/razor-support-in-visual-studio-code-now-in-preview/","RawContent":null},{"Title":"Blazor 0.7.0 experimental release now available","PublishedOn":"2018-11-15T18:30:09+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Blazor 0.7.0 is now available! This release focuses on enabling component coordination across ancestor-descendent relationships. We&#039;ve also added some improvements to the debugging experience....","Href":"https://blogs.msdn.microsoft.com/webdev/2018/11/15/blazor-0-7-0-experimental-release-now-available/","RawContent":null},{"Title":"ASP.NET SignalR 2.4.0","PublishedOn":"2018-11-14T20:19:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We&#8217;ve just shipped the final 2.4.0 version of ASP.NET SignalR, the version of SignalR for System.Web and/or OWIN-based applications. As we mentioned in a previous post on the future of ASP.NET...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/11/14/asp-net-signalr-2-4-0/","RawContent":null},{"Title":"When should you right click publish","PublishedOn":"2018-11-09T21:38:26+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Some people say ‘friends don’t let friends right click publish’ but is that true? If they mean that there are great benefits to setting up a CI/CD workflow, that’s true and we will talk more about...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/11/09/when-should-you-right-click-publish/","RawContent":null},{"Title":"A first look at changes coming in ASP.NET Core 3.0","PublishedOn":"2018-10-29T22:18:38+00:00","CommentsCount":29,"FacebookCount":0,"Summary":"While we continue to work on finalizing the next minor version of ASP.NET Core, we’re also working on major updates to our next release that will include some changes in how projects are composed with...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/10/29/a-first-look-at-changes-coming-in-asp-net-core-3-0/","RawContent":null},{"Title":"Announcing CosmosDB Table Async OutputCache Provider Release and ASP.NET Providers Connected Service Extension Update","PublishedOn":"2018-10-25T21:09:49+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Through the years, ASP.NET team have been releasing new ASP.NET SessionState and OutputCache providers to help developers make their web applications ready for the cloud environment. Today we are...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/10/25/announcing-cosmosdb-table-async-outputcache-provider-release-and-asp-net-providers-connected-service-extension-update/","RawContent":null},{"Title":"ASP.NET SignalR 2.4.0 Preview 2","PublishedOn":"2018-10-22T21:01:44+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We&#8217;ve just released the second preview of the upcoming 2.4.0 release of ASP.NET SignalR. As we mentioned in our previous blog post on the future of ASP.NET SignalR we are releasing a minor...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/10/22/asp-net-signalr-2-4-0-preview-2/","RawContent":null},{"Title":"ASP.NET Core 2.2.0-preview3 now available","PublishedOn":"2018-10-17T17:00:55+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Today we&#8217;re very happy to announce that the third preview of the next minor release of ASP.NET Core and .NET Core is now available for you to try out. We’ve been working hard on this release,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/10/17/asp-net-core-2-2-0-preview3-now-available/","RawContent":null},{"Title":"Use Hybrid Connections to Incrementally Migrate Applications to the Cloud","PublishedOn":"2018-10-04T22:57:53+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"As the software industry shifts to running software in the cloud, organizations are looking to migrate existing applications from on-premises to the cloud. Last week at Microsoft’s Ignite conference,...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/10/04/use-hybrid-connections-to-incrementally-migrate-applications-to-the-cloud/","RawContent":null},{"Title":"Announcing ASP.NET SignalR 2.4.0 Preview 1","PublishedOn":"2018-10-04T17:36:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We recently released the first preview of the upcoming 2.4.0 release of ASP.NET SignalR. As we mentioned in our previous blog post on the future of ASP.NET SignalR we are releasing a new minor update...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/10/04/announcing-asp-net-signalr-2-4-0-preview-1/","RawContent":null}],"ResultType":"Feed"},"Home-Issues":{"Issues":[{"Id":"383696587","IsPullRequest":false,"CreatedAt":"2018-11-23T03:47:23","Actor":"davidfowl","Number":"4229","RawContent":null,"Title":"Change Don't allocate a closure for IO callbacks in IIS in proc","State":"open","Body":"https://github.com/aspnet/AspNetCore/blob/4d57528704d7ec54570f5960b3b9ddca503d5c89/src/IISIntegration/src/Microsoft.AspNetCore.Server.IIS/Core/IO/AsyncIOOperation.cs#L154\r\n\r\nWhile we're at it we should not capture the ExecutionContext. Lets make the switch to UnsafeQueueUserWorkItem as well.\r\n\r\ncc @pakrym @jkotalik ","Url":"https://github.com/aspnet/AspNetCore/issues/4229","RelatedDescription":"Open issue \"Change Don't allocate a closure for IO callbacks in IIS in proc\" (#4229)"},{"Id":"383351434","IsPullRequest":true,"CreatedAt":"2018-11-22T20:56:35","Actor":"natemcmaster","Number":"4225","RawContent":null,"Title":"Remove Roslyn from the shared framework","State":"closed","Body":"Reacting to https://github.com/aspnet/Mvc/pull/8755.\r\n\r\nThis is one more step towards resolving #4004. This removes Roslyn from the shared framework.","Url":"https://github.com/aspnet/AspNetCore/pull/4225","RelatedDescription":"Closed or merged PR \"Remove Roslyn from the shared framework\" (#4225)"},{"Id":"383619831","IsPullRequest":false,"CreatedAt":"2018-11-22T17:31:33","Actor":"Tratcher","Number":"4228","RawContent":null,"Title":"[Announcement] Empty Microsoft.AspNetCore.Server.Kestrel.Https assembly being removed","State":"open","Body":"In ASP.NET Core 2.1 the contents of Microsoft.AspNetCore.Server.Kestrel.Https.dll were moved to Microsoft.AspNetCore.Server.Kestrel.Core.dll. This was done in a non-breaking way using TypeForwardedTo attributes. In the next major release (3.0) this empty assembly will be removed. Note that the nuget package was already being removed as part of https://github.com/aspnet/Announcements/issues/325.\r\n\r\nAction required:\r\n- Libraries referencing Microsoft.AspNetCore.Server.Kestrel.Https 2.0 should update all AspNetCore dependencies to 2.1 or later. Otherwise they may break when loaded into a 3.0 application.\r\n- Applications and libraries targeting AspNetCore 2.1 and later should remove any direct references to the Microsoft.AspNetCore.Server.Kestrel.Https nuget package. \r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/4228","RelatedDescription":"Open issue \"[Announcement] Empty Microsoft.AspNetCore.Server.Kestrel.Https assembly being removed\" (#4228)"},{"Id":"383443275","IsPullRequest":false,"CreatedAt":"2018-11-22T09:17:31","Actor":"hishamco","Number":"4227","RawContent":null,"Title":"Localization Repository","State":"open","Body":"Why the localization repo doesn't moved to the `aspnet/Extensions` like the other repos such as: logging, DI .. etc, Is there any reason or it's by design?!!\r\n\r\n/cc @Eilon @mkArtakMSFT ","Url":"https://github.com/aspnet/AspNetCore/issues/4227","RelatedDescription":"Open issue \"Localization Repository\" (#4227)"},{"Id":"383339637","IsPullRequest":true,"CreatedAt":"2018-11-22T01:17:16","Actor":"natemcmaster","Number":"4208","RawContent":null,"Title":"Merge 2.2","State":"closed","Body":"This merges the release/2.2 branch to master, which includes aspnet/Diagnostics release/2.2 and some updates to infrastructure and submodules.","Url":"https://github.com/aspnet/AspNetCore/pull/4208","RelatedDescription":"Closed or merged PR \"Merge 2.2\" (#4208)"},{"Id":"383351829","IsPullRequest":false,"CreatedAt":"2018-11-22T01:01:15","Actor":"KirillOsenkov","Number":"4226","RawContent":null,"Title":"Simple controller no longer working","State":"open","Body":"1. `git clone https://github.com/KirillOsenkov/SourceBrowser`\r\n2. `msbuild /r`\r\n3. Open `SourceBrowser.sln` in VS and F5 - this will generate a static website\r\n4. Set `SourceIndexServer` project as Startup and F5 again\r\n\r\n#### Description of the problem:\r\n\r\n`http://localhost:58320/api/symbols?symbol=pro` is supposed to call my SymbolsController\r\n\r\nActual results: 404\r\n\r\nThis used to work in 2.0.","Url":"https://github.com/aspnet/AspNetCore/issues/4226","RelatedDescription":"Open issue \"Simple controller no longer working\" (#4226)"},{"Id":"383326877","IsPullRequest":true,"CreatedAt":"2018-11-22T00:51:46","Actor":"rynowak","Number":"4203","RawContent":null,"Title":"Update Roslyn for VS to 2.11.0-beta3-63519-01","State":"closed","Body":"","Url":"https://github.com/aspnet/AspNetCore/pull/4203","RelatedDescription":"Closed or merged PR \"Update Roslyn for VS to 2.11.0-beta3-63519-01\" (#4203)"},{"Id":"383339605","IsPullRequest":true,"CreatedAt":"2018-11-22T00:39:12","Actor":"ryanbrandenburg","Number":"4207","RawContent":null,"Title":"Mondo 2.2: Antiforgery CORS HttpSysServer ResponseCaching Routing and Security","State":"open","Body":"","Url":"https://github.com/aspnet/AspNetCore/pull/4207","RelatedDescription":"Open PR \"Mondo 2.2: Antiforgery CORS HttpSysServer ResponseCaching Routing and Security\" (#4207)"},{"Id":"383326988","IsPullRequest":true,"CreatedAt":"2018-11-22T00:26:30","Actor":"ryanbrandenburg","Number":"4204","RawContent":null,"Title":"Mondo 2.1: Antiforgery CORS HttpSysServer ResponseCaching Routing and Security","State":"closed","Body":"","Url":"https://github.com/aspnet/AspNetCore/pull/4204","RelatedDescription":"Closed or merged PR \"Mondo 2.1: Antiforgery CORS HttpSysServer ResponseCaching Routing and Security\" (#4204)"},{"Id":"383328545","IsPullRequest":true,"CreatedAt":"2018-11-22T00:11:41","Actor":"natemcmaster","Number":"4205","RawContent":null,"Title":"Merge 2.1 to 2.2","State":"closed","Body":"This includes\r\n\r\n* The release/2.2 branch of aspnet/Diagnostics\r\n* Changes made in release/2.1","Url":"https://github.com/aspnet/AspNetCore/pull/4205","RelatedDescription":"Closed or merged PR \"Merge 2.1 to 2.2\" (#4205)"},{"Id":"383333844","IsPullRequest":false,"CreatedAt":"2018-11-22T00:06:08","Actor":"epignosisx","Number":"4206","RawContent":null,"Title":"In-Process hosting Directory.GetCurrentDirectory() location","State":"open","Body":"Hi folks. I was reading the documentation on the new IIS in-process hosting option and kind of disappointing about this point:\r\n\r\n> Directory.GetCurrentDirectory() returns the worker directory of the process started by IIS rather than the application directory (for example, C:\\Windows\\System32\\inetsrv for w3wp.exe).\r\n\r\nSource: https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/aspnet-core-module?view=aspnetcore-2.2\r\n\r\nAny code that was expecting the location to point to the application folder will be up for a big surprise. This might also be a problem for libraries relying on the current behavior. \r\n\r\nThis difference is going to trip up developers trying to evaluate the new model. Even worse if they develop in one hosting model but deploy to another another hosting model.\r\n\r\nThe w3wp process path feels very useless in my mind. I can’t think of a use case where I would care about it.","Url":"https://github.com/aspnet/AspNetCore/issues/4206","RelatedDescription":"Open issue \"In-Process hosting Directory.GetCurrentDirectory() location\" (#4206)"},{"Id":"383312172","IsPullRequest":true,"CreatedAt":"2018-11-21T22:55:26","Actor":"ryanbrandenburg","Number":"4201","RawContent":null,"Title":"Fix directory structure","State":"closed","Body":"","Url":"https://github.com/aspnet/AspNetCore/pull/4201","RelatedDescription":"Closed or merged PR \"Fix directory structure\" (#4201)"},{"Id":"383309916","IsPullRequest":true,"CreatedAt":"2018-11-21T22:44:37","Actor":"natemcmaster","Number":"4200","RawContent":null,"Title":"Merge some projects from aspnet/Diagnostics into this repo","State":"closed","Body":"As a part of #3598, this merges the content and history for some projects from aspnet/Diagnostics.\r\n\r\nNotably, this does not include everything from aspnet/Diagnostics.\r\n\r\n* Microsoft.Extensions.Diagnostics.HealthCheck.\\* projects are now in aspnet/Extensions.\r\n* This does not include Diagnostics.Elm, which is not going to ship in a 2.1.x release.\r\n\r\nFYI @Eilon ","Url":"https://github.com/aspnet/AspNetCore/pull/4200","RelatedDescription":"Closed or merged PR \"Merge some projects from aspnet/Diagnostics into this repo\" (#4200)"},{"Id":"383321084","IsPullRequest":false,"CreatedAt":"2018-11-21T11:20:50","Actor":"Hammad6264","Number":"4202","RawContent":null,"Title":"The ‘Access-Control-Allow-Origin’ header contains multiple values ‘http://localhost:8100, *’, but only one is allowed ","State":"open","Body":"Hy all friends actually I am facing this error\r\n…\r\n\r\n\r\nAccess to fetch at ‘https://MYWEBLINK.com/wp-json/wc/v3/products/categories?consumer_key=ck_MYConsumerKey&consumer_secret=cs_MyConsumerSecretkey’ from origin ‘http://localhost:8100’ has been blocked by CORS policy: The ‘Access-Control-Allow-Origin’ header contains multiple values ‘http://localhost:8100, *’, but only one is allowed. Have the server send the header with a valid value, or, if an opaque response serves your needs, set the request’s mode to ‘no-cors’ to fetch the resource with CORS disabled.\r\nmenu.ts:37 TypeError: Failed to fetch\r\nat new MenuPage (menu.ts:28)\r\nat createClass (core.js:12483)\r\nat createDirectiveInstance (core.js:12326)\r\nat createViewNodes (core.js:13784)\r\nat createRootView (core.js:13673)\r\nat callWithDebugContext (core.js:15098)\r\nat Object.debugCreateRootView [as createRootView] (core.js:14381)\r\nat ComponentFactory_.create (core.js:11278)\r\nat ComponentFactoryBoundToModule.create (core.js:4030)\r\nat NavControllerBase._viewInit (nav-controller-base.js:441)\r\nat nav-controller-base.js:254\r\nat t.invoke (polyfills.js:3)\r\nat Object.onInvoke (core.js:4760)\r\nat t.invoke (polyfills.js:3)\r\nat r.run (polyfills.js:3)\r\nat polyfills.js:3\r\nat t.invokeTask (polyfills.js:3)\r\nat Object.onInvokeTask (core.js:4751)\r\nat t.invokeTask (polyfills.js:3)\r\nat r.runTask (polyfills.js:3)\r\n…\r\nI don’t know why I am getting this error. Can anyone help me please???","Url":"https://github.com/aspnet/AspNetCore/issues/4202","RelatedDescription":"Open issue \"The ‘Access-Control-Allow-Origin’ header contains multiple values ‘http://localhost:8100, *’, but only one is allowed \" (#4202)"},{"Id":"383343038","IsPullRequest":false,"CreatedAt":"2018-11-21T00:21:58","Actor":"JamesNK","Number":"4212","RawContent":null,"Title":"Link generation behaviour change: page to controller in area","State":"open","Body":"Linking from a page in an area to a controller in the same area, without specifying the area is changing.\r\n\r\n* Succeeded in 2.1\r\n* Succeeded in 2.2 (unintentionally)\r\n* Fails in 3.0 (current behaviour)\r\n\r\nWe could make 3.0 succeed with a moderate amount of additional work. The question is whether anyone is doing this and if it is important to customers.\r\n\r\nThis issue is something to evaluate near the end of 3.0 to make a decision.\r\n\r\nAffected test: PagesInAreas_CanGenerateLinksToControllersAndPages\r\n```cs\r\n<a asp-controller=\"Home\" asp-action=\"Index\">Link to area action</a>\r\n```\r\n\r\nPR that is changing this - https://github.com/aspnet/Routing/pull/914","Url":"https://github.com/aspnet/AspNetCore/issues/4212","RelatedDescription":"Open issue \"Link generation behaviour change: page to controller in area\" (#4212)"},{"Id":"383343129","IsPullRequest":false,"CreatedAt":"2018-11-07T08:32:25","Actor":"JamesNK","Number":"4213","RawContent":null,"Title":"Update templates to use endpoint routing API","State":"open","Body":"","Url":"https://github.com/aspnet/AspNetCore/issues/4213","RelatedDescription":"Open issue \"Update templates to use endpoint routing API\" (#4213)"},{"Id":"383343646","IsPullRequest":false,"CreatedAt":"2018-11-07T05:16:33","Actor":"JamesNK","Number":"4217","RawContent":null,"Title":"FindEndpoints_LookedUpByCriteria_MultipleMatches weirdness","State":"open","Body":"https://github.com/aspnet/Routing/commit/25b5ab2c3980569907d7c467dff185d00b9fbd64#diff-d27ab64c4b8a9e9cc5f4487c4b7f2864R227\r\n\r\nFindEndpoints_LookedUpByCriteria_MultipleMatches is producing odd results. The same endpoint is returned 3 times. Is this expected?\r\n\r\nAlso the assert in the test is duplicated.\r\n\r\n// @drieseng","Url":"https://github.com/aspnet/AspNetCore/issues/4217","RelatedDescription":"Open issue \"FindEndpoints_LookedUpByCriteria_MultipleMatches weirdness\" (#4217)"},{"Id":"383343292","IsPullRequest":false,"CreatedAt":"2018-11-05T02:27:15","Actor":"JamesNK","Number":"4215","RawContent":null,"Title":"Static files and matching","State":"open","Body":"I updated [a sample](https://github.com/aspnet/AuthSamples/pull/65) to use static files + endpoints + authz. To achieve the desired result I had to write a DIY static file endpoint matcher and it got me thinking.\r\n\r\n# RANDOM THOUGHT 1\r\nWe could add configurable static file matching to `UseEndpointRouting`. It would be useful when you want to run the file through APIs that use endpoints, e.g. `AuthorizationMiddleware`. There could be a couple of modes for matching:\r\n* The static files all live as endpoints provided by an endpoint datasource. High memory, long startup time, high perf\r\n* Or the endpoint for a static file is created on demand. Low memory, short startup time, low perf. This is what the [authz sample](https://github.com/aspnet/AuthSamples/pull/65) is doing.\r\n\r\n```cs\r\napp.UseEndpointRouting(routes =>\r\n{\r\n    routes.MapApplication();\r\n    routes.MapStaticFiles();\r\n});\r\n```\r\n\r\n# RANDOM THOUGHT 2\r\n`UseStaticFiles` today is terminal if there is a matching file. If static files have endpoints then it could disappear from 3.0 templates and the static file could be returned at the end of the request pipeline.\r\n\r\nWould there be performance considerations from doing this? It would mean static files experience the entire request pipeline, e.g. if authentication is enabled then static file requests would be authenticated.\r\n\r\nAlternatively `UseStaticFiles` could remain present in templates, and if the request was matched to a static file endpoint in `UseEndpointRouting` then `UseStaticFiles` would do nothing more than invoke the endpoint and exit.","Url":"https://github.com/aspnet/AspNetCore/issues/4215","RelatedDescription":"Open issue \"Static files and matching\" (#4215)"},{"Id":"383343731","IsPullRequest":false,"CreatedAt":"2018-11-03T08:14:41","Actor":"JamesNK","Number":"4218","RawContent":null,"Title":"Move endpoint convention builder to HttpAbstractions","State":"open","Body":"Consider moving builder related types to HttpAbstractions:\r\n* `IEndpointConventionBuilder`\r\n* `EndpointModel`\r\n\r\nhttps://github.com/aspnet/Security/pull/1894#discussion_r230487509","Url":"https://github.com/aspnet/AspNetCore/issues/4218","RelatedDescription":"Open issue \"Move endpoint convention builder to HttpAbstractions\" (#4218)"},{"Id":"383343218","IsPullRequest":false,"CreatedAt":"2018-10-16T20:35:12","Actor":"rynowak","Number":"4214","RawContent":null,"Title":"Redesign LinkGenerationTemplate","State":"open","Body":"","Url":"https://github.com/aspnet/AspNetCore/issues/4214","RelatedDescription":"Open issue \"Redesign LinkGenerationTemplate\" (#4214)"},{"Id":"383344010","IsPullRequest":false,"CreatedAt":"2018-09-29T20:17:58","Actor":"rynowak","Number":"4221","RawContent":null,"Title":"Plan to migrate IRouter based implementations onto Endpoint Routing","State":"open","Body":"# Summary\r\n\r\nI'm developing a plan to make it possible for folks implementing `IRouter` based functionality to migrate endpoint routing. This is our future direction for MVC and the stack in general, and we don't want to leave users/frameworks behind.\r\n\r\nI'm also lumping in this category custom `IActionSelector` implementations. `IActionSelector` is not used in endpoint routing so it's just as relevant/obsolete for new apps. \r\n\r\nOver time we're going to evolve in the direction of endpoint routing being the primary experience for the whole stack. I don't expect that we'd ever be able to delete `IRouter` or remove `IRouter` support from MVC. We can offer users more options to migrate and try to make it as enticing as possible, but some portion will be left behind; either by our choice not to add a feature they want, or their choice not to adopt new features and concepts.\r\n\r\n\r\n## Analysis\r\n\r\nBased on analysis, I've found 3 major types of usages:\r\n1. I want to rewrite the route values (usually localization) - [example](https://github.com/aspnet/Routing/issues/823)\r\n2. My route values are in a database (usually a CMS, SimpleCommerce) - [example](https://github.com/simplcommerce/SimplCommerce/blob/master/src/Modules/SimplCommerce.Module.Core/Extensions/UrlSlugRoute.cs)\r\n3. I am implementing a framework (OData) - [example](https://github.com/OData/WebApi/blob/d02bc61ea7b31ada1e54abbeebbecb3c5df0e3ac/src/Microsoft.AspNetCore.OData/Routing/ODataActionSelector.cs#L33)\r\n\r\nNote that these are roughly in ascending order of 'off-road-ness' - reusing less of our implementation gradually.  Most genuine challenges in framework design related to application authors writing extensibility that *uses* and is *used by* the framework.\r\n\r\nLet's go case by case and look at these...\r\n\r\n## I want to rewrite the route values\r\n\r\nUsually the case for this is that you want to have one set of actions that you 'multiply' (cross-product) across different localized strings that you want to appear in the URL. There's a major pivot here regarding whether you want to localize the 'route values' or just localize the URL template. \r\n\r\nIn general all of these things 'just work' with application model today. Some users *choose* to implement this with `IRouter` because they have done that in the past or it's what seems most obvious to them, but there's no real problem with using application model for this. \r\n\r\n## My route values in the database\r\n\r\nGenerally this kind of system works by defining a `slug` route in the route table that matches all URLs, and then looking up a set of route values in a database using the URL path or part of it as a key.\r\n\r\nExample:\r\n```\r\nvar urlSlug = ... do database query...;\r\nRouteData.Values[\"controller\"] = urlSlug.EntityType.RoutingController;\r\nRouteData.Values[\"action\"] = urlSlug.EntityType.RoutingAction;\r\nRouteData.Values[\"id\"] = urlSlug.EntityId;\r\n```\r\nThis requires a slightly more involved solution, because the route templates can't be defined statically, and because we don't provide a simple way to 'run code' to select an MVC action. My assumption here is that this user doesn't want to access the DB once on startup to create the route table, they want to make configuration changes while the app is running. \r\n\r\nThe key here is that this user is reusing MVC's action selector by rewriting the route values.\r\n\r\n---- \r\n\r\nHere's a proposal:\r\n1. Make it so that an `IEndpointSelectorPolicy` can be filter where it applies by candidate set. This is for isolation.\r\n2. Register a single endpoint that with a metadata that identifies it as a 'slug' endpoint\r\n3. Write an endpoint selector policy that selects the real/action/endpoint and returns it when it finds the 'slug' endpoint\r\n\r\nThis has a few drawbacks:\r\n- There is no path to support link generation, but I have yet to see an example of this pattern that includes link generation.\r\n- This does not allow you to reuse HTTP method filtering or other policies. The custom implementation is responsible for handling these concerns.\r\n\r\nAnother approach would be to rewrite the URL. That might be more straightforward.\r\n\r\n## I am implementing a framework\r\n\r\nUpon further analysis, this case is very similar to the above. The framework registers a route that matches a 'slug', and has a custom implementation that produces an action.\r\n\r\nThis case has fewer drawbacks because they are not using MVC's action selection.\r\n\r\n## Next steps\r\n\r\n> Make it so that an `IEndpointSelectorPolicy` can be filter where it applies by candidate set. This is for isolation.\r\n\r\nWe need to do this. This is a nice perf enhancement to `IEndpointSelectorPolicy` and can unblock a framework like OData migrate. We need to do this in 2.2 so it's not a breaking change. \r\n\r\nWe should consider further whether URL rewriting is a better solution for most of these scenarios. \r\n\r\nI think the timeframe for any other choices we'd consider is 3.0","Url":"https://github.com/aspnet/AspNetCore/issues/4221","RelatedDescription":"Open issue \"Plan to migrate IRouter based implementations onto Endpoint Routing\" (#4221)"},{"Id":"383343840","IsPullRequest":false,"CreatedAt":"2018-09-29T06:33:57","Actor":"JamesNK","Number":"4219","RawContent":null,"Title":"Domains with EP routing","State":"open","Body":"I came across this question while waiting for a flight - https://www.reddit.com/r/dotnet/comments/9jn69g/question_not_having_much_luck_on_stack_overflow/\r\n\r\nWhat can we do to make multiple domains with asp.net core easy? Am I right that a policy could work? Should come up with a sample.","Url":"https://github.com/aspnet/AspNetCore/issues/4219","RelatedDescription":"Open issue \"Domains with EP routing\" (#4219)"},{"Id":"383344163","IsPullRequest":false,"CreatedAt":"2018-09-26T19:42:18","Actor":"JamesNK","Number":"4223","RawContent":null,"Title":"Update ASP.NET template Startup.cs with new routing API","State":"open","Body":"Templates's Startup.cs needs to use UseEndpointRouting and UseEndpoint instead of UseMvc.","Url":"https://github.com/aspnet/AspNetCore/issues/4223","RelatedDescription":"Open issue \"Update ASP.NET template Startup.cs with new routing API\" (#4223)"},{"Id":"383344271","IsPullRequest":false,"CreatedAt":"2018-09-20T19:51:34","Actor":"JamesNK","Number":"4224","RawContent":null,"Title":"Replat slim framework on endpoint routing","State":"open","Body":"https://github.com/davidfowl/Web.Framework/tree/master/Web.Framework","Url":"https://github.com/aspnet/AspNetCore/issues/4224","RelatedDescription":"Open issue \"Replat slim framework on endpoint routing\" (#4224)"},{"Id":"383342938","IsPullRequest":false,"CreatedAt":"2018-09-18T21:39:10","Actor":"JamesNK","Number":"4211","RawContent":null,"Title":"Inbound route parameter transformer","State":"open","Body":"As discussed at EndpointCon 2018","Url":"https://github.com/aspnet/AspNetCore/issues/4211","RelatedDescription":"Open issue \"Inbound route parameter transformer\" (#4211)"},{"Id":"383344077","IsPullRequest":false,"CreatedAt":"2018-07-15T01:37:53","Actor":"JamesNK","Number":"4222","RawContent":null,"Title":"UseDispatcher multiple times","State":"open","Body":"What should happen if `DispatcherMiddleware` is registered multiple times? Error? No op on second run for a request?","Url":"https://github.com/aspnet/AspNetCore/issues/4222","RelatedDescription":"Open issue \"UseDispatcher multiple times\" (#4222)"},{"Id":"383342740","IsPullRequest":false,"CreatedAt":"2018-06-20T00:49:52","Actor":"JamesNK","Number":"4209","RawContent":null,"Title":"Handle optional extension in conventional route via dispatching","State":"open","Body":"Imagine this conventional route: `\"{controller}/{action}.{ext?}\"`\r\nWhen calculating endpoints it is updated to: `\"TestController/TestAction.{ext?}\"`\r\n\r\nThe updated template is a problem because the optional extension is following more than just a `.` literal.","Url":"https://github.com/aspnet/AspNetCore/issues/4209","RelatedDescription":"Open issue \"Handle optional extension in conventional route via dispatching\" (#4209)"},{"Id":"383343495","IsPullRequest":false,"CreatedAt":"2018-06-06T22:32:02","Actor":"JamesNK","Number":"4216","RawContent":null,"Title":"Update AuthZ middleware to use dispatcher","State":"open","Body":"- [x] Write AuthorizationMiddleware\r\n- [ ] No op MVC authorization filter when enabled\r\n- [ ] Consider warning/error when endpoints have IAuthorizeData metadata but no AuthorizationMiddleware is registered in application","Url":"https://github.com/aspnet/AspNetCore/issues/4216","RelatedDescription":"Open issue \"Update AuthZ middleware to use dispatcher\" (#4216)"},{"Id":"383342822","IsPullRequest":false,"CreatedAt":"2018-06-06T22:25:24","Actor":"JamesNK","Number":"4210","RawContent":null,"Title":"Update CORS middleware to use dispatcher","State":"open","Body":"","Url":"https://github.com/aspnet/AspNetCore/issues/4210","RelatedDescription":"Open issue \"Update CORS middleware to use dispatcher\" (#4210)"},{"Id":"383343928","IsPullRequest":false,"CreatedAt":"2017-02-06T20:52:41","Actor":"Eilon","Number":"4220","RawContent":null,"Title":"Consider adding a way to use strict comparison for routes matching","State":"open","Body":"_From @PinpointTownes on February 6, 2017 4:3_\n\nhttp://stackoverflow.com/questions/42048770/asp-net-core-openiddict-throws-an-openid-connect-response-cannot-be-returned-fr\r\n\r\nConsider this action:\r\n\r\n```csharp\r\n[HttpPost(\"~/path\")]\r\npublic IActionResult Test() => Empty();\r\n```\r\n\r\nOddly, either the routing stack or MVC seems to consider `/path/` requests as valid candidates for this route/action, which is incorrect as `/path` and `/path/` are two different addresses.\r\n\r\nIs there any particular reason for this (abusive) normalization?\r\n\r\n/cc @Eilon @rynowak \n\n_Copied from original issue: aspnet/Mvc#5757_","Url":"https://github.com/aspnet/AspNetCore/issues/4220","RelatedDescription":"Open issue \"Consider adding a way to use strict comparison for routes matching\" (#4220)"}],"ResultType":"GitHubIssue"},"Mvc-Issues":{"Issues":[{"Id":"383634738","IsPullRequest":false,"CreatedAt":"2018-11-22T18:49:25","Actor":"remcoros","Number":"8761","RawContent":null,"Title":"Use of \"AppDomain.FriendlyName\" in Microsoft.AspNetCore.Mvc.Testing causes issues with test runner","State":"open","Body":"#### Is this a Bug or Feature request?\r\n\r\nA bug report for AspNetCore.Mvc.Testing package\r\n\r\n\r\n#### Steps to reproduce:\r\n\r\n- Create an ASP Core project and a Test project, targeting net462.\r\n- Make sure it has the solution file in the root, and all projects in folders inside a \"src\" folder.\r\n\r\nExample project: https://github.com/remcoros/MvcTestingReSharper\r\n\r\nIt's the default file new -> asp core template.\r\n\r\n#### Description of the problem:\r\n\r\nWhen using MS.AspNetCore.Mvc.Testing on .net framework, I get the following exception when using the ReSharper test runner: \r\n\r\n```\r\nThe content root 'C:\\Projects\\MvcTestingReSharper\\MvcTestingReSharper' does not exist.\r\nParameter name: contentRootPath\r\n```\r\n\r\nI've tracked the cause of this down to: https://github.com/aspnet/Mvc/blob/master/src/Microsoft.AspNetCore.Mvc.Testing/WebApplicationFactory.cs#L218 where the location of the web project is determined.\r\n\r\nIt uses AppDomain.FriendlyName, but this turns out to be not so consistent. E.g. ReSharper domains are called \"Entryway\", and when disabling appdomains, it's called \"Tests: <assembly name>\". \r\n\r\nI reported this to JetBrains here: https://youtrack.jetbrains.com/issue/RSRP-472316?replyTo=27-3174095\r\n\r\nAs seen in the comments there, using FriendlyName might not always work.\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`: \r\n\r\n2.1.6\r\n","Url":"https://github.com/aspnet/Mvc/issues/8761","RelatedDescription":"Open issue \"Use of \"AppDomain.FriendlyName\" in Microsoft.AspNetCore.Mvc.Testing causes issues with test runner\" (#8761)"},{"Id":"383363568","IsPullRequest":true,"CreatedAt":"2018-11-22T14:34:23","Actor":"natemcmaster","Number":"8758","RawContent":null,"Title":"Remove the custom nuspec for Microsoft.AspNetCore.Mvc.Razor","State":"closed","Body":"Follow-up to https://github.com/aspnet/Mvc/pull/8755. The dependencies in the nuspec weren't updated, but we don't really need the nuspec at all now that this package only supports netcoreapp3.0.","Url":"https://github.com/aspnet/Mvc/pull/8758","RelatedDescription":"Closed or merged PR \"Remove the custom nuspec for Microsoft.AspNetCore.Mvc.Razor\" (#8758)"},{"Id":"383454375","IsPullRequest":false,"CreatedAt":"2018-11-22T09:46:23","Actor":"troncomputers","Number":"8760","RawContent":null,"Title":"Razor Pages - whole app logic on server side, without JS/Ajax","State":"open","Body":"Sorry if this is wrong when I put everything in one issue, but I thought it would be nice when all of my feature requests are in one place.\r\n\r\n1. **Temp objects without JS** - for my case I need a list of products that users selected.\r\nEXAMPLE:\r\n```\r\npublic class NewModel : PageModel\r\n{\r\n    public List<string> SelectedProducts {get;set;}\r\n\r\n   public async Task<IActionResult> OnGetAsync()\r\n   {\r\n        SelectedProducts = new List<string>();\r\n        return Page();\r\n   }\r\n   \r\n   public async Task<IActionResult> OnPostAddProduct(string product)\r\n   {\r\n       SelectedProducts.Add(product);\r\n       return RedirectToPage();\r\n   }\r\n}\r\n```\r\n```\r\n<form method='post' asp-page-handler='AddProduct'>\r\n    <input name=\"product\" />\r\n</form>\r\n```\r\n`SelectedProducts` is null and every `AddProduct` is empty because `OnGetAsync()` is fired. In this case only `HttpContext.Session` with converting object to JSON is working but... If I navigate from menu somewhere else and go back to `New` page, the selected products are still there which brings us to next feature I need.\r\n\r\n2. **Page model `OnDestroy` event** - is not firing on self redirection or post redirection. Should fire only if I navigate to or from somewhere else.\r\n\r\n3. **Url change detection** - I didn't find any info about how to manage url changes. It would help with `OnDestroy` event, because then I am able to do my own logic for session object.\r\n\r\nI don't care about page refreshing. It's not that big project. I want whole logic on server side without JS/ajax etc.","Url":"https://github.com/aspnet/Mvc/issues/8760","RelatedDescription":"Open issue \"Razor Pages - whole app logic on server side, without JS/Ajax\" (#8760)"},{"Id":"383373303","IsPullRequest":false,"CreatedAt":"2018-11-22T04:43:22","Actor":"wilsonrivera","Number":"8759","RawContent":null,"Title":"RazorPages do not respect the RequestCultureProviders from RequestLocalizationOptions","State":"closed","Body":"#### Is this a Bug or Feature request?:\r\nBug\r\n\r\n#### Steps to reproduce (preferably a link to a GitHub repo with a repro project):\r\nhttps://github.com/wilsonrivera/localized-razor-pages\r\n\r\n\r\n#### Description of the problem:\r\nWhen you navigate to the endpoint `http://localhost:5000/?locale=es` it should have accepted the locale \"es\", but it doesn't work, on the other hand, if you visit `http://localhost:5000/?culture=es` it does work, it feels like is ignoring the custom `RequestCultureProviders` I have defined while configuring the options.\r\n\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\nVersion `2.2.0-preview3-35497`\r\n\r\n\r\n<!--\r\n                                    --- NOTE ---\r\n1.  Try enabling logging (in the most verbose level) and see if the details help you in fixing\r\n    the issue you are seeing. Share the logs too if it helps in diagnosing the issue faster.\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging\r\n\r\n2.  If you are seeing an exception, include the full exceptions details (message and stack trace).\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/error-handling\r\n\r\n3.  If you believe you have an issue that affects the security of the platform please do\r\n    not create an issue, instead email your issue to 'secure@microsoft.com'. Your report may\r\n    be eligible for our bug bounty. More info: https://technet.microsoft.com/en-us/mt764065.aspx\r\n-->\r\n","Url":"https://github.com/aspnet/Mvc/issues/8759","RelatedDescription":"Closed issue \"RazorPages do not respect the RequestCultureProviders from RequestLocalizationOptions\" (#8759)"},{"Id":"383346474","IsPullRequest":true,"CreatedAt":"2018-11-22T01:22:33","Actor":"pranavkm","Number":"8757","RawContent":null,"Title":"Fixup RazorInjectAttribute namespace","State":"closed","Body":"","Url":"https://github.com/aspnet/Mvc/pull/8757","RelatedDescription":"Closed or merged PR \"Fixup RazorInjectAttribute namespace\" (#8757)"},{"Id":"383298807","IsPullRequest":true,"CreatedAt":"2018-11-22T01:14:12","Actor":"pranavkm","Number":"8755","RawContent":null,"Title":"Remove runtime compilation from MVC.Razor","State":"closed","Body":"","Url":"https://github.com/aspnet/Mvc/pull/8755","RelatedDescription":"Closed or merged PR \"Remove runtime compilation from MVC.Razor\" (#8755)"},{"Id":"383293503","IsPullRequest":false,"CreatedAt":"2018-11-21T21:11:39","Actor":"pranavkm","Number":"8754","RawContent":null,"Title":"Figure out runtime compilation for EmbeddedFiles","State":"open","Body":"Orthogonal to https://github.com/aspnet/Mvc/issues/8753, `RazorViewEngine` supports arbitrary file providers including Embedded. Without runtime compilation in MVC by default, we don't have a good story to continue supporting this feature.","Url":"https://github.com/aspnet/Mvc/issues/8754","RelatedDescription":"Open issue \"Figure out runtime compilation for EmbeddedFiles\" (#8754)"},{"Id":"383274957","IsPullRequest":false,"CreatedAt":"2018-11-21T20:05:40","Actor":"pranavkm","Number":"8753","RawContent":null,"Title":"Add support for runtime compilation in 3.0","State":"open","Body":"Currently supported features:\r\n\r\n* [ ] Changes to file or `_ViewImports` cause recompilation\r\n* [ ] Changes to cshtml file cause route table to rebuilt. Required for Razor Pages\r\n* [ ] Files on disk with different checksum during MVC initialization are preferred\r\n","Url":"https://github.com/aspnet/Mvc/issues/8753","RelatedDescription":"Open issue \"Add support for runtime compilation in 3.0\" (#8753)"},{"Id":"382911987","IsPullRequest":true,"CreatedAt":"2018-11-21T01:36:48","Actor":"natemcmaster","Number":"8751","RawContent":null,"Title":"React to the deprecation of Microsoft.AspNetCore.All","State":"closed","Body":"Resolves https://github.com/aspnet/AspNetCore/issues/4175","Url":"https://github.com/aspnet/Mvc/pull/8751","RelatedDescription":"Closed or merged PR \"React to the deprecation of Microsoft.AspNetCore.All\" (#8751)"},{"Id":"382171567","IsPullRequest":false,"CreatedAt":"2018-11-20T20:22:57","Actor":"brackers17","Number":"8740","RawContent":null,"Title":"Editor Template Tag Helper incorrectly naming name attribute","State":"closed","Body":"#### Is this a Bug or Feature request?:\r\nBug\r\n\r\n#### Steps to reproduce (preferably a link to a GitHub repo with a repro project):\r\n`output.Attributes.SetAttribute(\"Id\", AspFor.Name);`\r\n\r\n#### Description of the problem:\r\nWhen creating my own custom tag helper I use ModelExpression.Name to set the name attribute for the element. \r\n\r\nThis works except in editor/display templates where it sets the name incorrectly to the property name instead of the prefix then the property name. \r\n\r\nFor example if you have list of person objects with age properties, the tag helper should set the name attribute to `[0].Age` but it just sets to `Age`.\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n\r\n\r\n<!--\r\n                                    --- NOTE ---\r\n1.  Try enabling logging (in the most verbose level) and see if the details help you in fixing\r\n    the issue you are seeing. Share the logs too if it helps in diagnosing the issue faster.\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging\r\n\r\n2.  If you are seeing an exception, include the full exceptions details (message and stack trace).\r\n    More info: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/error-handling\r\n\r\n3.  If you believe you have an issue that affects the security of the platform please do\r\n    not create an issue, instead email your issue to 'secure@microsoft.com'. Your report may\r\n    be eligible for our bug bounty. More info: https://technet.microsoft.com/en-us/mt764065.aspx\r\n-->\r\n","Url":"https://github.com/aspnet/Mvc/issues/8740","RelatedDescription":"Closed issue \"Editor Template Tag Helper incorrectly naming name attribute\" (#8740)"},{"Id":"382812639","IsPullRequest":true,"CreatedAt":"2018-11-20T19:22:30","Actor":"rynowak","Number":"8750","RawContent":null,"Title":"[Design] Simplify parameter transformer usage","State":"open","Body":"","Url":"https://github.com/aspnet/Mvc/pull/8750","RelatedDescription":"Open PR \"[Design] Simplify parameter transformer usage\" (#8750)"},{"Id":"381915428","IsPullRequest":true,"CreatedAt":"2018-11-20T19:03:39","Actor":"rynowak","Number":"8735","RawContent":null,"Title":"Relayer action discovery infrastructure","State":"closed","Body":"This change introduces a service facade for creating the application\r\nmodel, running conventions, validating the result, and flattening the\r\nmodel.\r\n\r\nThis is used in the ControllerActionDescriptorProvider and provides the\r\nexisting functionality for now. The ControllerActionDescriptorProvider\r\nwill process the results and turn each 'flattened' model into a single\r\naction descriptor.\r\n\r\nThe next change will introduce another consumer of this service, that\r\nturns the 'flattened' model into an EndpointModel so that it can be\r\nexposed via Endpoint Routing's convention system.\r\n\r\n---\r\n\r\nThe main considerations here:\r\n\r\nThe flattening semantics of application model are pretty complicated :(\r\n\r\nThe validation that CADP does is actually pretty in depth and might be\r\nreally low value... Errors with writing route templates do happen, and\r\nthose will be caught by the routing system eventually.... Errors with\r\nduplicate route names are similar... Errors with 'mixed' attribute and\r\nconventional routing are not at all common. I don't think I've ever seen\r\nan issue get filed about this. I did the work to port all of this stuff\r\nforward but I'm not totally sure it's valuable - however, I don't really\r\nwant to make an argument for its removal. These are just some random\r\nthoughts to keep in mind if you're reviewing this :+1:","Url":"https://github.com/aspnet/Mvc/pull/8735","RelatedDescription":"Closed or merged PR \"Relayer action discovery infrastructure\" (#8735)"},{"Id":"382389963","IsPullRequest":true,"CreatedAt":"2018-11-20T18:50:39","Actor":"pranavkm","Number":"8745","RawContent":null,"Title":"API review feedback for pubinternal type changes","State":"closed","Body":"Fixes https://github.com/aspnet/Mvc/issues/8694","Url":"https://github.com/aspnet/Mvc/pull/8745","RelatedDescription":"Closed or merged PR \"API review feedback for pubinternal type changes\" (#8745)"},{"Id":"382587336","IsPullRequest":false,"CreatedAt":"2018-11-20T10:06:51","Actor":"ArtemAstashkin","Number":"8749","RawContent":null,"Title":"JsonInputFromatter validation issue","State":"open","Body":"#### Is this a Bug or Feature request?:\r\nBug\r\n\r\n#### Steps to reproduce (preferably a link to a GitHub repo with a repro project):\r\n1. You have an action in a Controller\r\n2. The action has a requestModel with array of integers\r\n3. You send a request to the action with invalid model - for example array with string.Empty instead integers\r\n4. You expect to receive BadRequest, but you will receive Http Ok after a long period of time\r\n\r\nI've attached the repo to reproduce this issue https://github.com/ArtemAstashkin/JsonInputFormatterTest\r\n\r\n1) The repo has 2 projects (Web and Web.Tests). Web has HomeController and Post action with RequestModel \r\n```C#\r\n    public class RequestModel\r\n    {\r\n        public string Key { get; set; }\r\n\r\n        [FromBody]\r\n        [Required]\r\n        public PostRequestModelBody Body { get; set; }\r\n    }\r\n```\r\n2) The Web.Tests project has only one specific test to reproduce the issue\r\n```C#\r\n        [Fact]\r\n        public async Task ShouldReturnBadRequest()\r\n        {\r\n            var itemIds = Enumerable.Repeat(string.Empty, 621).ToArray();\r\n            var body = JSON.SerializeDynamic(new { ItemIds = itemIds });\r\n\r\n            var request = new HttpRequestMessage\r\n            {\r\n                Method = HttpMethod.Post,\r\n                RequestUri = new Uri(\"/api/home?key=test\", UriKind.Relative),\r\n                Content = new StringContent(body, Encoding.UTF8, \"application/json\"),\r\n            };\r\n\r\n            var sut = await Sut.AsyncInstance;\r\n            var response = await sut.SendAsync(request);\r\n\r\n            Assert.Equal(\r\n                expected: HttpStatusCode.BadRequest,\r\n                actual: response.StatusCode);\r\n        }\r\n```\r\n\r\nThe test will fail. But, if you change 621 to 199 it will pass.\r\n\r\n#### Description of the problem:\r\nThe issue is related to the JsonInputFormatter which tries to mark validation errors as handled and validate all items in arrays and all properties in a model. But it take a lot of time. Moreover it has a limit of exceptions (200 as default). Eventually if somebody sends invalid model with 600 string.Empty (for example, 201 - enough) in array instead of integers, the formatter will spend a lot of time to parse it without any expected result - because it will fail after 200th error and return status OK instead of BadRequest.\r\n\r\nIt has 2 problems:\r\n1) validation doesn't work properly\r\n2) performance issue - formatter spends a lot of time to try to parse all invalid values so a malefactor can cause serious performance issues on online high-load services\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n2.1.1\r\n","Url":"https://github.com/aspnet/Mvc/issues/8749","RelatedDescription":"Open issue \"JsonInputFromatter validation issue\" (#8749)"},{"Id":"382417205","IsPullRequest":false,"CreatedAt":"2018-11-20T00:19:09","Actor":"glennc","Number":"8746","RawContent":null,"Title":"Change version of code-gen to 0.1.0-pre","State":"closed","Body":"We want this to be the version that we ship our initial preview release.","Url":"https://github.com/aspnet/Mvc/issues/8746","RelatedDescription":"Closed issue \"Change version of code-gen to 0.1.0-pre\" (#8746)"},{"Id":"382431818","IsPullRequest":true,"CreatedAt":"2018-11-20T00:18:29","Actor":"dougbu","Number":"8747","RawContent":null,"Title":"Make Microsoft.Extensions.ApiDescription.Design experimental","State":"closed","Body":"- `$(ExpermentalPackageVersion)`, `$(ExpermentalVersionPrefix)` and `$(ExpermentalVersionSuffix)` were not used","Url":"https://github.com/aspnet/Mvc/pull/8747","RelatedDescription":"Closed or merged PR \"Make Microsoft.Extensions.ApiDescription.Design experimental\" (#8747)"},{"Id":"382437850","IsPullRequest":true,"CreatedAt":"2018-11-19T23:38:21","Actor":"pranavkm","Number":"8748","RawContent":null,"Title":"Re-enable extensibility points for ExpressionHelper.GetExpressionText, ExpressionMetadataProvider.FromStringExpression","State":"open","Body":"Fixes https://github.com/aspnet/Mvc/issues/8724","Url":"https://github.com/aspnet/Mvc/pull/8748","RelatedDescription":"Open PR \"Re-enable extensibility points for ExpressionHelper.GetExpressionText, ExpressionMetadataProvider.FromStringExpression\" (#8748)"},{"Id":"382014750","IsPullRequest":false,"CreatedAt":"2018-11-19T20:50:50","Actor":"pranavkm","Number":"8738","RawContent":null,"Title":"Follow up PR https://github.com/aspnet/Mvc/pull/8737","State":"closed","Body":"PR: https://github.com/aspnet/Mvc/pull/8737\r\n\r\nMerging it in before the repos get merged. Using this issue to track further follow up if any","Url":"https://github.com/aspnet/Mvc/issues/8738","RelatedDescription":"Closed issue \"Follow up PR https://github.com/aspnet/Mvc/pull/8737\" (#8738)"},{"Id":"382386770","IsPullRequest":false,"CreatedAt":"2018-11-19T20:48:16","Actor":"pranavkm","Number":"8744","RawContent":null,"Title":"Consider making RequiredValidationAdapter public","State":"open","Body":"FluentValidation uses the type: https://github.com/JeremySkinner/FluentValidation/blob/master/src/FluentValidation.AspNetCore/FluentValidationClientModelValidatorProvider.cs#L113. An alternative might be to consider changing FluentValidation to use `IValidationAttributeAdapterProvider`\r\n","Url":"https://github.com/aspnet/Mvc/issues/8744","RelatedDescription":"Open issue \"Consider making RequiredValidationAdapter public\" (#8744)"},{"Id":"382338281","IsPullRequest":false,"CreatedAt":"2018-11-19T18:23:36","Actor":"glennc","Number":"8743","RawContent":null,"Title":"Change default document directory to obj","State":"open","Body":"Today the directory that we store the API document is empty, meaning that we put it in the root of the project. For this type of asset, one that is purely used to make sure we don't redo work we don't need to, I think obj is a better default.","Url":"https://github.com/aspnet/Mvc/issues/8743","RelatedDescription":"Open issue \"Change default document directory to obj\" (#8743)"},{"Id":"382335282","IsPullRequest":false,"CreatedAt":"2018-11-19T18:14:26","Actor":"glennc","Number":"8742","RawContent":null,"Title":"Generated files re-appearing without explicit build","State":"open","Body":"If I delete a generated client file then it will reappear immediately. My theory for this was that changing the files in the project was causing a design-time build to happen.","Url":"https://github.com/aspnet/Mvc/issues/8742","RelatedDescription":"Open issue \"Generated files re-appearing without explicit build\" (#8742)"},{"Id":"381981298","IsPullRequest":false,"CreatedAt":"2018-11-19T17:12:51","Actor":"pranavkm","Number":"8736","RawContent":null,"Title":"Follow up PR https://github.com/aspnet/Mvc/pull/8324/files","State":"closed","Body":"Merging PR https://github.com/aspnet/Mvc/pull/8324/files before the repo gets merged. Tracking any additional review work using this item. cc @dou","Url":"https://github.com/aspnet/Mvc/issues/8736","RelatedDescription":"Closed issue \"Follow up PR https://github.com/aspnet/Mvc/pull/8324/files\" (#8736)"},{"Id":"382206887","IsPullRequest":false,"CreatedAt":"2018-11-19T13:08:31","Actor":"MatthiasLaroche","Number":"8741","RawContent":null,"Title":"FileResult returns 500 instead of 416 when requesting an invalid range.","State":"open","Body":"#### Is this a Bug or Feature request?:\r\n\r\nBug\r\n\r\n#### Steps to reproduce (preferably a link to a GitHub repo with a repro project):\r\n\r\n* Return any type of FileResult with enableRangeProcessing = true from a controller.\r\n* Request an invalid Range form the client (e.g. after the end of file)\r\n* Http StatusCode is \"500 Internal Server Error\" instead of \"416 Range Not Satisfiable\"\r\n\r\nExample: https://github.com/MatthiasLaroche/AspNetInvalidRangeBug\r\n\r\n#### Description of the problem:\r\n\r\nKestrel throws this exception: \r\nSystem.InvalidOperationException: Response Content-Length mismatch: too few bytes written\r\n\r\nIt's thrown from line 913 in HttpProtocol.cs in the method VerifyResponseContentLength.\r\nhttps://github.com/aspnet/KestrelHttpServer/blob/5d80016b4fb991acf6f639549b784ed5882d8de0/src/Kestrel.Core/Internal/Http/HttpProtocol.cs#L896-L916\r\n\r\nThe response generated is invalid because an header for Content-Length was set from the length of the file, but the response length is 0 byte long because of the invalid range request and 416 status.\r\n\r\nThe content length seems to be set at line 93 of FileResultExecutorBase.cs in the method SetHeadersAndLog.\r\nhttps://github.com/aspnet/Mvc/blob/8d66f104f7f2ca42ee8b21f75b0e2b3e1abe2e00/src/Microsoft.AspNetCore.Mvc.Core/Infrastructure/FileResultExecutorBase.cs#L86-L108\r\n\r\nAnd the status 416 for invalid range is set at line 323 of FileResultExecutorBase.cs in the method SetRangeHeaders.\r\nhttps://github.com/aspnet/Mvc/blob/8d66f104f7f2ca42ee8b21f75b0e2b3e1abe2e00/src/Microsoft.AspNetCore.Mvc.Core/Infrastructure/FileResultExecutorBase.cs#L317-L327\r\n\r\nWhen 416 status code is set, the content length header is not reset or removed, so the response end up invalid for Kestrel and a 500 is issued.\r\n\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n\r\nMicrosoft.AspNetCore.App v2.1.1\r\n\r\n","Url":"https://github.com/aspnet/Mvc/issues/8741","RelatedDescription":"Open issue \"FileResult returns 500 instead of 416 when requesting an invalid range.\" (#8741)"},{"Id":"382062537","IsPullRequest":false,"CreatedAt":"2018-11-19T05:28:46","Actor":"fabercs","Number":"8739","RawContent":null,"Title":"Support localization resources in a separate assembly","State":"open","Body":"#### Is this a Bug or Feature request?:\r\nIt is a feature, but not sure if it exists or not\r\n\r\n#### Description of the problem:\r\nI am trying to move the localization resources(`MyProject.Web.Resources`) in `MyProject.Web` asp.net core mvc project to another separate `MyProject.Resources` project. I guess it is only doable for a shared resource, however, by doing this, I still want to make use of the `IStringLocalizer` work in my views and controllers. It seems it does not right now.\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc`","Url":"https://github.com/aspnet/Mvc/issues/8739","RelatedDescription":"Open issue \"Support localization resources in a separate assembly\" (#8739)"},{"Id":"381984953","IsPullRequest":true,"CreatedAt":"2018-11-18T23:47:56","Actor":"pranavkm","Number":"8737","RawContent":null,"Title":"Zero cost(ish) diagnositcs when disabled","State":"closed","Body":"Inlinable fast-path check if Diagnositcs is enabled","Url":"https://github.com/aspnet/Mvc/pull/8737","RelatedDescription":"Closed or merged PR \"Zero cost(ish) diagnositcs when disabled\" (#8737)"},{"Id":"381795610","IsPullRequest":true,"CreatedAt":"2018-11-17T00:28:36","Actor":"natemcmaster","Number":"8734","RawContent":null,"Title":"Update projects and packages to netcoreapp3.0","State":"closed","Body":"Part of https://github.com/aspnet/AspNetCore/issues/3754.\r\n\r\nThis changes the projects in MVC to target netcoreapp3.0 only.\r\n\r\nI've also updated dependencies and buildtools to latest bits.","Url":"https://github.com/aspnet/Mvc/pull/8734","RelatedDescription":"Closed or merged PR \"Update projects and packages to netcoreapp3.0\" (#8734)"},{"Id":"381584672","IsPullRequest":false,"CreatedAt":"2018-11-16T12:44:26","Actor":"CXuesong","Number":"8733","RawContent":null,"Title":"Stop setting name attribute in DefaultHtmlGenerator.GenerateHiddenForCheckbox","State":"open","Body":"#### Is this a Bug or Feature request?:\r\nBug\r\n\r\n#### Steps to reproduce (preferably a link to a GitHub repo with a repro project):\r\nSee https://github.com/CXuesong/AspNetCoreAppTest2/blob/master/WebApplication2/Pages/Test.cshtml .\r\n\r\n#### Description of the problem:\r\n\r\nIf I specify the `name` for `<checkbox>`, like [this](https://github.com/CXuesong/AspNetCoreAppTest2/blob/b4a609e43009c414c4a0a404b2b27d3c2f605d91/WebApplication2/Pages/Test.cshtml#L17)\r\n```cshtml\r\n<input type=\"checkbox\" asp-for=\"Input.CheckBox\" name=\"check\" />\r\n```\r\nThe generated hidden will still keep the default field name, i.e. `Input.CheckBox`, like this\r\n```html\r\n<input type=\"checkbox\" name=\"check\" data-val=\"true\" data-val-required=\"The CheckBox field is required.\" id=\"Input_CheckBox\" value=\"true\">\r\n...\r\n...\r\n<input name=\"Input.CheckBox\" type=\"hidden\" value=\"false\">\r\n```\r\n\r\nI think the reason why a hidden is here, is to [provide \"false\" value for unchecked checkbox](https://stackoverflow.com/questions/2697299/asp-net-mvc-why-is-html-checkbox-generating-an-additional-hidden-input). Thus it's nonsense to generate a hidden with default field name, while we have already overridden the checkbox's `name` in razor code.\r\n\r\nIt seems that in [`InputTagHelper.GenerateCheckBox`](https://github.com/aspnet/Mvc/blob/7c6823312540c72a0579f4a4b2e8357b1df42de8/src/Microsoft.AspNetCore.Mvc.TagHelpers/InputTagHelper.cs#L313), it's assumed that `GenerateHiddenForCheckbox` will return a hidden without `name` attribute, if the `Generator` won't bother to provide a non-empty fallback name. However, in [`DefaultHtmlGenerator.GenerateHiddenForCheckbox`](https://github.com/aspnet/Mvc/blob/7c6823312540c72a0579f4a4b2e8357b1df42de8/src/Microsoft.AspNetCore.Mvc.ViewFeatures/DefaultHtmlGenerator.cs#L278), the generated hidden's `name` is set to the default model name explicitly. Perhaps we need to remove this statement so that InputTagHelper.GenerateCheckBox will use the `Name` specified by the razor code.\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`:\r\n2.1.1","Url":"https://github.com/aspnet/Mvc/issues/8733","RelatedDescription":"Open issue \"Stop setting name attribute in DefaultHtmlGenerator.GenerateHiddenForCheckbox\" (#8733)"},{"Id":"381460094","IsPullRequest":false,"CreatedAt":"2018-11-16T06:06:46","Actor":"dougbu","Number":"8732","RawContent":null,"Title":"Make it possible to prevent code generation per-reference","State":"open","Body":"#### Is this a Bug or Feature request?\r\nEnhancement that's part of #7947\r\n\r\n#### Description of the problem\r\nUsers can currently set the `$(ServiceUriReferenceCheckIfNewer)` property to `false` (default is `true`) and disable downloading for all `<ServiceUriReference>` items in their project. However\r\n1. The existing `$(ServiceProjectReferenceCheckIfNewer)` and `$(ServiceFileReferenceCheckIfNewer)` properties aren't wired up (oops).\r\n2. Would be better to be able to disable document retrieval and code generation on a per-item basis e.g. `<ServiceUriReference ... CheckIfUriIsNewer=\"false\" CheckIfDocumentIsNewer=\"true\" />`.\r\n\r\nShould wire up the existing properties (renamed) as defaults for the new metadata. And, should use the new metadata in our glue code i.e. [Microsoft.Extensions.ApiDescription.Design.targets](https://github.com/aspnet/Mvc/blob/7c6823312540c72a0579f4a4b2e8357b1df42de8/src/Microsoft.Extensions.ApiDescription.Design/buildMultiTargeting/Microsoft.Extensions.ApiDescription.Design.targets).\r\n\r\nThis issue is somewhat related to #8567.\r\n\r\n#### Version of `Microsoft.AspNetCore.Mvc` or `Microsoft.AspNetCore.App` or `Microsoft.AspNetCore.All`\r\nSee the [Microsoft.Extensions.ApiDescription.Design](https://github.com/aspnet/Mvc/blob/7c6823312540c72a0579f4a4b2e8357b1df42de8/src/Microsoft.Extensions.ApiDescription.Design/) project which is scheduled to ship soon.","Url":"https://github.com/aspnet/Mvc/issues/8732","RelatedDescription":"Open issue \"Make it possible to prevent code generation per-reference\" (#8732)"},{"Id":"381444202","IsPullRequest":true,"CreatedAt":"2018-11-16T04:41:36","Actor":"JamesNK","Number":"8731","RawContent":null,"Title":"Update MVC to use routing required values for endpoints","State":"open","Body":"Exploring what MVC code would look like when consuming RoutePatternTransformer.\r\n\r\nNeither tests or routing are updated yet so everything will fail.","Url":"https://github.com/aspnet/Mvc/pull/8731","RelatedDescription":"Open PR \"Update MVC to use routing required values for endpoints\" (#8731)"},{"Id":"380954502","IsPullRequest":false,"CreatedAt":"2018-11-15T01:00:57","Actor":"pranavkm","Number":"8730","RawContent":null,"Title":"Determine the extensibility model for ValidationHtmlAttributeProvider","State":"open","Body":"As a follow up to the [API review](https://github.com/aspnet/Mvc/issues/8694#issuecomment-438872471), the plan is to do a follow up to determine what the right extensibility needs to be  before determining what needs to be done with these types.","Url":"https://github.com/aspnet/Mvc/issues/8730","RelatedDescription":"Open issue \"Determine the extensibility model for ValidationHtmlAttributeProvider\" (#8730)"}],"ResultType":"GitHubIssue"},"SignalR-Issues":{"Issues":[{"Id":"383695399","IsPullRequest":false,"CreatedAt":"2018-11-23T03:37:26","Actor":"bluetianx","Number":"3333","RawContent":null,"Title":"How to benchmark my signalR?","State":"open","Body":"I want to benchmark my signalr, I dose not find Microsoft doc that about benchmark signalr. can you give some advice to me . Tks very .  my  version of asp.net core  is  2.1","Url":"https://github.com/aspnet/SignalR/issues/3333","RelatedDescription":"Open issue \"How to benchmark my signalR?\" (#3333)"},{"Id":"383092977","IsPullRequest":false,"CreatedAt":"2018-11-22T17:32:58","Actor":"Buli1212","Number":"3328","RawContent":null,"Title":"SignalR not supported on Android 8.0.0 and higher","State":"closed","Body":"\r\nError while installing on Android 8 device or higher. I've tried Android 8.0.0 and Android 9.0.0:\r\n\r\n> Installation failed with message INSTALL_FAILED_NO_MATCHING_ABIS: Failed to extract native libraries, res =-113.\r\n\r\nIt looks like an issue with native libraries used by SignalR. \r\nWith Android 9 already out there is there any chance to add support for the latest architectures ?\r\n\r\nI've tried 'com.microsoft.signalr:signalr:1.0.0-preview3-35501' and implementation 'com.microsoft.aspnet:signalr:0.1.0-preview2-35174' using gradle implementation on Samsung S7 and Google Pixel 1","Url":"https://github.com/aspnet/SignalR/issues/3328","RelatedDescription":"Closed issue \"SignalR not supported on Android 8.0.0 and higher\" (#3328)"},{"Id":"383467293","IsPullRequest":false,"CreatedAt":"2018-11-22T10:18:16","Actor":"shkwaleed","Number":"3332","RawContent":null,"Title":"SignalR client not running on android below 26 version","State":"open","Body":"Exception Details\r\njava.lang.ClassNotFoundException: Didn't find class \"java.time.Duration\" on path: DexPathList[[zip file \"/data/app/com.microsoft.aspnet.signalr.samples.androidjavaclient-1/base.apk\", zip file \"/data/app/com.microsoft.aspnet.signalr.samples.androidjavaclient-1/split_lib_dependencies_apk.apk\", zip file \"/data/app/com.microsoft.aspnet.signalr.samples.androidjavaclient-1/split_lib_slice_0_apk.apk\", zip file \"/data/app/com.microsoft.aspnet.signalr.samples.androidjavaclient-1/split_lib_slice_1_apk.apk\", zip file \"/data/app/com.microsoft.aspnet.signalr.samples.androidjavaclient-1/split_lib_slice_2_apk.apk\", zip file \"/data/app/com.microsoft.aspnet.signalr.samples.androidjavaclient-1/split_lib_slice_3_apk.apk\", zip file \"/data/app/com.microsoft.aspnet.signalr.samples.androidjavaclient-1/split_lib_slice_4_apk.apk\", zip file \"/data/app/com.microsoft.aspnet.signalr.samples.androidjavaclient-1/split_lib_slice_5_apk.apk\", zip file \"/data/app/com.microsoft.aspnet.signalr.samples.androidjavaclient-1/split_lib_slice_6_apk.apk\", zip file \"/data/app/com.microsoft.aspnet.signalr.samples.androidjavaclient-1/split_lib_slice_7_apk.apk\", zip file \"/data/app/com.microsoft.aspnet.signalr.samples.androidjavaclient-1/split_lib_slice_8_apk.apk\", zip file \"/data/app/com.microsoft.aspnet.signalr.samples.androidjavaclient-1/split_lib_slice_9_apk.apk\"],nativeLibraryDirectories=[/data/app/com.microsoft.aspnet.signalr.samples.androidjavaclient-1/lib/arm, /vendor/lib, /system/lib]]\r\n        at dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:56)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:511)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:469)\r\n        at com.microsoft.signalr.HubConnection.<init>(HubConnection.java:50) \r\n        at com.microsoft.signalr.HttpHubConnectionBuilder.build(HttpHubConnectionBuilder.java:64) \r\n        at com.microsoft.aspnet.signalr.samples.androidjavaclient.MainActivity.onCreate(MainActivity.java:27) \r\n        at android.app.Activity.performCreate(Activity.java:6876) \r\n        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1135) \r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3206) \r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3349) \r\n        at android.app.ActivityThread.access$1100(ActivityThread.java:221) \r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1794) \r\n        at android.os.Handler.dispatchMessage(Handler.java:102) \r\n        at android.os.Looper.loop(Looper.java:158) \r\n        at android.app.ActivityThread.main(ActivityThread.java:7224) \r\n        at java.lang.reflect.Method.invoke(Native Method) \r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1230) \r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1120) \r\n    \tSuppressed: java.io.IOException: No original dex files found for dex location /data/app/com.microsoft.aspnet.signalr.samples.androidjavaclient-1/split_lib_slice_5_apk.apk\r\n        at dalvik.system.DexFile.openDexFileNative(Native Method)\r\n        at dalvik.system.DexFile.openDexFile(DexFile.java:295)\r\n        at dalvik.system.DexFile.<init>(DexFile.java:80)\r\n        at dalvik.system.DexFile.<init>(DexFile.java:59)\r\n        at dalvik.system.DexPathList.loadDexFile(DexPathList.java:279)\r\n        at dalvik.system.DexPathList.makePathElements(DexPathList.java:248)\r\n        at dalvik.system.DexPathList.<init>(DexPathList.java:120)\r\n        at dalvik.system.BaseDexClassLoader.<init>(BaseDexClassLoader.java:48)\r\n        at dalvik.system.PathClassLoader.<init>(PathClassLoader.java:65)\r\n        at android.app.ApplicationLoaders.getClassLoader(ApplicationLoaders.java:84)\r\n        at android.app.ApplicationLoaders.getClassLoader(ApplicationLoaders.java:45)\r\n        at android.app.LoadedApk.getClassLoader(LoadedApk.java:434)\r\n        at android.app.LoadedApk.makeApplication(LoadedApk.java:659)\r\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:6289)\r\n\r\n\r\n\r\nOn Android api below 26 we are unable to run signalr client","Url":"https://github.com/aspnet/SignalR/issues/3332","RelatedDescription":"Open issue \"SignalR client not running on android below 26 version\" (#3332)"},{"Id":"383422917","IsPullRequest":false,"CreatedAt":"2018-11-22T08:15:28","Actor":"debashish2014","Number":"3331","RawContent":null,"Title":"Server error 502 - Web server received an invalid response while acting as a gateway or proxy server","State":"open","Body":"Hi,\r\n\r\nI have written a Console application to do load testing and I am using c# Microsoft.AspNetCore.SignalR.Client.Core.**HubConnectionBuilder** for creating connections to AspNet Core SignalR application, which is hosted on IIS running on a Windows Server 2012 R2 having 8 Cores and 32 GB RAM. \r\n\r\nWe have a single Hub in the project, with below method.\r\n\r\n```\r\npublic async Task Send(string name, string message)\r\n{\r\n         await Clients.All.SendAsync(\"BroadcastMessage\", name, message);\r\n}\r\n```\r\n\r\n.Net Clr Version of Application pool has been set to No Managed Code.\r\n\r\nWe are able to reach up to 16000 connections approx. Any subsequent request to the IIS leads to below error:\r\n\r\n![image](https://user-images.githubusercontent.com/8132553/48888089-87a36d00-ee57-11e8-90bf-b710575240e9.png)\r\n\r\nThe application targets .Net Core 2.1\r\n\r\n![image](https://user-images.githubusercontent.com/8132553/48888417-a7876080-ee58-11e8-97c4-663e7ac8e149.png)\r\n\r\nWe have tried deploying the applction on a Azure VM (8 Cores, 32 Gb RAM, Windows Server 2016) as well, but the result is same. \r\n\r\nIIS configuration **appConcurrentRequestLimit** has been set to 80000\r\n\r\n`appcmd.exe set config /section:system.webserver/serverRuntime /appConcurrentRequestLimit:80000\r\n`\r\n\r\nWe also tried modifying below Kestrel settings, but ended up in vain.\r\n\r\n```\r\n.UseKestrel(options =>\r\n        {\r\n            options.Limits.MaxConcurrentConnections = 80000;\r\n            options.Limits.MaxConcurrentUpgradedConnections = 80000;\r\n        });\r\n```\r\n\r\nAre we missing anything?","Url":"https://github.com/aspnet/SignalR/issues/3331","RelatedDescription":"Open issue \"Server error 502 - Web server received an invalid response while acting as a gateway or proxy server\" (#3331)"},{"Id":"383307315","IsPullRequest":false,"CreatedAt":"2018-11-21T22:02:37","Actor":"mikaelm12","Number":"3330","RawContent":null,"Title":"Consider using ReadWriteLock to protect HubConnctionState in Java client","State":"open","Body":"Currently we're just using a ReEntrant lock when we update the HubConnectionState enum in the Java client. We should considering changing this to a Read Write lock.","Url":"https://github.com/aspnet/SignalR/issues/3330","RelatedDescription":"Open issue \"Consider using ReadWriteLock to protect HubConnctionState in Java client\" (#3330)"},{"Id":"382817834","IsPullRequest":true,"CreatedAt":"2018-11-21T19:47:40","Actor":"BrennanConroy","Number":"3326","RawContent":null,"Title":"Avoid zero-byte send in WebSockets","State":"closed","Body":"The motivation behind this was a flaky test that started appearing in some PRs because of a race between the client closing the connection when it received all the bytes and the 0-byte write being sent.\r\n\r\nNow we write one segment behind where we've read up to, to allow writing a non 0-byte end of message frame.","Url":"https://github.com/aspnet/SignalR/pull/3326","RelatedDescription":"Closed or merged PR \"Avoid zero-byte send in WebSockets\" (#3326)"},{"Id":"383117446","IsPullRequest":false,"CreatedAt":"2018-11-21T13:26:36","Actor":"ncthbrt","Number":"3329","RawContent":null,"Title":"[JAVA] Concurrency and hub connection state","State":"open","Body":"The latest version of the Java client on the `/release/2.2` branch does not have measures in place to ensure that the hub connection state is synchronized across threads (with the naked variable being read without concurrency control), this leads to invoke calls failing even when the connection status is `Connected` on other threads. \r\n\r\nA possible fix might be to mark this variable as volatile (though can at times be a fragile solution), or switch to using the accessor at all times, along with some form of locking. ","Url":"https://github.com/aspnet/SignalR/issues/3329","RelatedDescription":"Open issue \"[JAVA] Concurrency and hub connection state\" (#3329)"},{"Id":"382882050","IsPullRequest":true,"CreatedAt":"2018-11-20T23:17:29","Actor":"natemcmaster","Number":"3327","RawContent":null,"Title":"Set local builds to build as 3.0.0-dev","State":"closed","Body":"Reacting to https://github.com/aspnet/AspNetCore/pull/4171","Url":"https://github.com/aspnet/SignalR/pull/3327","RelatedDescription":"Closed or merged PR \"Set local builds to build as 3.0.0-dev\" (#3327)"},{"Id":"381811224","IsPullRequest":false,"CreatedAt":"2018-11-20T00:11:34","Actor":"mikaelm12","Number":"3316","RawContent":null,"Title":"[Java] Stream Item payload is an item, not a result","State":"closed","Body":"The stream item payload is an \"item\" as per the spec, not a \"result\". \r\nhttps://github.com/aspnet/SignalR/blob/3db604d9d25429b1a622bd018f6d59549a7a9f22/clients/java/signalr/src/main/java/com/microsoft/signalr/StreamItem.java#L9\r\n\r\nThis messes with serialization. ","Url":"https://github.com/aspnet/SignalR/issues/3316","RelatedDescription":"Closed issue \"[Java] Stream Item payload is an item, not a result\" (#3316)"},{"Id":"382429750","IsPullRequest":true,"CreatedAt":"2018-11-19T23:05:27","Actor":"BrennanConroy","Number":"3325","RawContent":null,"Title":"Collect transport fallback errors to provide better errors","State":"open","Body":"~Want to solicit early feedback while I start the Typescript client changes~\r\n\r\nFixes https://github.com/aspnet/SignalR/issues/2887","Url":"https://github.com/aspnet/SignalR/pull/3325","RelatedDescription":"Open PR \"Collect transport fallback errors to provide better errors\" (#3325)"},{"Id":"382359698","IsPullRequest":true,"CreatedAt":"2018-11-19T19:47:43","Actor":"BrennanConroy","Number":"3323","RawContent":null,"Title":"Update TFM for Http.Connections","State":"closed","Body":"","Url":"https://github.com/aspnet/SignalR/pull/3323","RelatedDescription":"Closed or merged PR \"Update TFM for Http.Connections\" (#3323)"},{"Id":"382366691","IsPullRequest":false,"CreatedAt":"2018-11-19T19:47:32","Actor":"AdanStudent","Number":"3324","RawContent":null,"Title":"Connection Fails with accented character in URL","State":"open","Body":"URL: adánchatroom.azurewebsites.net\r\n\r\nWould not connect with when trying to use URL like above, and changed URL to adanchatroom.azurewebsites.net and was able to establish connection.","Url":"https://github.com/aspnet/SignalR/issues/3324","RelatedDescription":"Open issue \"Connection Fails with accented character in URL\" (#3324)"},{"Id":"381817720","IsPullRequest":true,"CreatedAt":"2018-11-19T18:32:43","Actor":"mikaelm12","Number":"3317","RawContent":null,"Title":"[Java] Change StreamItem to have items instead of results","State":"closed","Body":"The payload on `StreamItem` should be an \"item\" instead of a \"result\". This has serialization/deserialization implications when reading json payloads. \r\nhttps://github.com/aspnet/SignalR/issues/3316","Url":"https://github.com/aspnet/SignalR/pull/3317","RelatedDescription":"Closed or merged PR \"[Java] Change StreamItem to have items instead of results\" (#3317)"},{"Id":"382333177","IsPullRequest":false,"CreatedAt":"2018-11-19T18:07:57","Actor":"mikaelm12","Number":"3322","RawContent":null,"Title":"Consider changing project structure to be shorter","State":"open","Body":"Moving to Mondo repo could potentially cause long path issues. We should make our project structure have shorter path length. We can't really do this for java since the folder structure needs to match the package name. This could be mitigated by having a separate SignalR clients repo.","Url":"https://github.com/aspnet/SignalR/issues/3322","RelatedDescription":"Open issue \"Consider changing project structure to be shorter\" (#3322)"},{"Id":"382322489","IsPullRequest":true,"CreatedAt":"2018-11-19T17:58:06","Actor":"dotnet-maestro-bot","Number":"3321","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @BrennanConroy\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/SignalR merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/SignalR merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/SignalR merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/SignalR/pull/3321","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#3321)"},{"Id":"382320465","IsPullRequest":true,"CreatedAt":"2018-11-19T17:44:48","Actor":"BrennanConroy","Number":"3320","RawContent":null,"Title":"Reenable logging for SSE tests","State":"closed","Body":"Fixes #2879","Url":"https://github.com/aspnet/SignalR/pull/3320","RelatedDescription":"Closed or merged PR \"Reenable logging for SSE tests\" (#3320)"},{"Id":"380923749","IsPullRequest":true,"CreatedAt":"2018-11-19T17:29:29","Actor":"BrennanConroy","Number":"3306","RawContent":null,"Title":"Fix dynamic require for Webpack","State":"closed","Body":"Fixes https://github.com/aspnet/SignalR/issues/3254\r\n\r\n@muratg We'd like to discuss the release timeline for this fix as it's a broken scenario when using Angular 6+.","Url":"https://github.com/aspnet/SignalR/pull/3306","RelatedDescription":"Closed or merged PR \"Fix dynamic require for Webpack\" (#3306)"},{"Id":"382265735","IsPullRequest":false,"CreatedAt":"2018-11-19T16:30:50","Actor":"JMaroz","Number":"3319","RawContent":null,"Title":"[Java] Crash when close a connections","State":"closed","Body":"After invoke close on hubconnections.stop the app crash when using the 1.0.0-preview3-35501.\r\n\r\n`java.lang.NullPointerException: Attempt to invoke virtual method 'int java.lang.Integer.intValue()' on a null object reference at com.microsoft.signalr.WebSocketTransport.lambda$start$1(WebSocketTransport.java:56)\r\n        at com.microsoft.signalr.-$$Lambda$WebSocketTransport$AQhmDI2aQR6xOI_rRCG9Mm31O2o.accept(Unknown Source:6)\r\n        at com.microsoft.signalr.OkHttpWebSocketWrapper$SignalRWebSocketListener.onFailure(OkHttpWebSocketWrapper.java:103)\r\n        at okhttp3.internal.ws.RealWebSocket.failWebSocket(RealWebSocket.java:570)\r\n        at okhttp3.internal.ws.RealWebSocket$2.onResponse(RealWebSocket.java:215)\r\n        at okhttp3.RealCall$AsyncCall.execute(RealCall.java:153)\r\n        at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n        at java.lang.Thread.run(Thread.java:764)`\r\n\r\nno problem with the 0.1.0-preview2-35174 version\r\n","Url":"https://github.com/aspnet/SignalR/issues/3319","RelatedDescription":"Closed issue \"[Java] Crash when close a connections\" (#3319)"},{"Id":"382261004","IsPullRequest":false,"CreatedAt":"2018-11-19T15:17:00","Actor":"AlkisFortuneFish","Number":"3318","RawContent":null,"Title":"Add Func<T1...Tn, Task> extension methods to HubConnectionExtensions","State":"open","Body":"The Action<T1...Tn> extension methods in HubConnectionExtension that wrap around the base Func<object[], object, Task> On method are very handy. It would be very useful to have Func<T1...Tn, Task> extension methods, allowing async delegates to be registered using the higher level API.","Url":"https://github.com/aspnet/SignalR/issues/3318","RelatedDescription":"Open issue \"Add Func<T1...Tn, Task> extension methods to HubConnectionExtensions\" (#3318)"},{"Id":"381680606","IsPullRequest":true,"CreatedAt":"2018-11-17T03:54:25","Actor":"BrennanConroy","Number":"3311","RawContent":null,"Title":"Dispose WebSocket if StartAsync fails","State":"closed","Body":"Fixes #3127 \r\n\r\nDon't think we can test this since `_webSocket` is entirely internal and there is no way to check if it's disposed or not.","Url":"https://github.com/aspnet/SignalR/pull/3311","RelatedDescription":"Closed or merged PR \"Dispose WebSocket if StartAsync fails\" (#3311)"},{"Id":"381779904","IsPullRequest":true,"CreatedAt":"2018-11-17T00:44:37","Actor":"natemcmaster","Number":"3315","RawContent":null,"Title":"Upgrade SignalR.Core to netcoreapp3.0","State":"closed","Body":"This updates samples, tests, and projects to netcoreapp3.0. \r\n\r\nNotably, the SignalR client remains netstandard2.0\r\n\r\nPart of https://github.com/aspnet/AspNetCore/issues/3754","Url":"https://github.com/aspnet/SignalR/pull/3315","RelatedDescription":"Closed or merged PR \"Upgrade SignalR.Core to netcoreapp3.0\" (#3315)"},{"Id":"381702908","IsPullRequest":false,"CreatedAt":"2018-11-17T00:33:02","Actor":"mikaelm12","Number":"3312","RawContent":null,"Title":"Completion Message in Java client should not require result","State":"closed","Body":"Currently in the Java client we require a result in completion messages when the spec says that a completion message only needs an invocation id https://github.com/aspnet/SignalR/blob/7e96a029756079d0f978f51bf2ceb34b0b366d65/clients/java/signalr/src/main/java/com/microsoft/signalr/InvocationRequest.java#L22-L26","Url":"https://github.com/aspnet/SignalR/issues/3312","RelatedDescription":"Closed issue \"Completion Message in Java client should not require result\" (#3312)"},{"Id":"381741294","IsPullRequest":true,"CreatedAt":"2018-11-16T20:26:10","Actor":"BrennanConroy","Number":"3314","RawContent":null,"Title":"Merge branch 'release/2.2'","State":"closed","Body":"Merging after PR validation","Url":"https://github.com/aspnet/SignalR/pull/3314","RelatedDescription":"Closed or merged PR \"Merge branch 'release/2.2'\" (#3314)"},{"Id":"381705321","IsPullRequest":true,"CreatedAt":"2018-11-16T20:26:09","Actor":"dotnet-maestro-bot","Number":"3313","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @BrennanConroy\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/SignalR merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/SignalR merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/SignalR merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/SignalR/pull/3313","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#3313)"},{"Id":"381387077","IsPullRequest":false,"CreatedAt":"2018-11-15T23:44:20","Actor":"bradygaster","Number":"3310","RawContent":null,"Title":"Add protocol package for System.Text.Json","State":"open","Body":"","Url":"https://github.com/aspnet/SignalR/issues/3310","RelatedDescription":"Open issue \"Add protocol package for System.Text.Json\" (#3310)"},{"Id":"381385453","IsPullRequest":false,"CreatedAt":"2018-11-15T23:37:28","Actor":"bradygaster","Number":"3309","RawContent":null,"Title":"Design a client experience for serverless","State":"open","Body":"We never actually did this, it just happened. So let's review it and shore it up in 3.0. ","Url":"https://github.com/aspnet/SignalR/issues/3309","RelatedDescription":"Open issue \"Design a client experience for serverless\" (#3309)"},{"Id":"381346726","IsPullRequest":false,"CreatedAt":"2018-11-15T21:28:19","Actor":"BrennanConroy","Number":"3308","RawContent":null,"Title":"Rename Protocols.Json package to Protocols.NewtonsoftJson","State":"open","Body":"As well as changing the namespaces and `AddJsonProtocol` -> `AddNewtonsoftJsonProtocol`","Url":"https://github.com/aspnet/SignalR/issues/3308","RelatedDescription":"Open issue \"Rename Protocols.Json package to Protocols.NewtonsoftJson\" (#3308)"},{"Id":"381185868","IsPullRequest":false,"CreatedAt":"2018-11-15T18:00:36","Actor":"sidatacom","Number":"3307","RawContent":null,"Title":"After update today to VS 15.9 iOS not working","State":"closed","Body":"\r\n![unbenanntes bild](https://user-images.githubusercontent.com/43718498/48561951-6db2d900-e8f1-11e8-8f09-348e2505355e.png)\r\n\r\n`[0:] Method not found: void System.Threading.Tasks.ValueTask`1..ctor(System.Threading.Tasks.Sources.IValueTaskSource`1<!0>,int16)`\r\n\r\nOn connecting to the hub this error show's\r\n\r\nex = {System.MissingMethodException: Method not found: void System.Threading.Tasks.ValueTask`1..ctor(System.Threading.Tasks.Sources.IValueTaskSource`1<!0>,int16)\r\n  at System.IO.Pipelines.Pipe+DefaultPipeWriter.FlushAsync (System.Threading.CancellationToken cance...\r\n\r\nThe exception raised after : await _hubConnection.StartAsync(cancellationToken);\r\n\r\nIn the update the MONO VERSION and Xamarin Version will be updated.","Url":"https://github.com/aspnet/SignalR/issues/3307","RelatedDescription":"Closed issue \"After update today to VS 15.9 iOS not working\" (#3307)"},{"Id":"380893608","IsPullRequest":false,"CreatedAt":"2018-11-14T21:26:26","Actor":"twsouthwick","Number":"3305","RawContent":null,"Title":"Restarting TypeScript client does not resubscribe to subscriptions","State":"open","Body":"### Please include as much of the following as you can in your bug report\r\n\r\n* Versions of Server-Side NuGet Packages: 1.0.3\r\n* Versions of Client-Side NuGet/NPM Packages: 1.1.0-preview3-35497. We need a fix that's not in the latest released version for the JS client and reconnects\r\n* Are you using the C# client or the JavaScript client: JavaScript\r\n* The Server you are using (Kestrel/HttpSysServer/IIS/IIS Express/Azure Web App/etc.): Kestrel\r\n* The Operating System on the Server (Windows/Linux/macOS): Windows\r\n* The Operating System on the Client (Windows/Linux/macOS): Windows/iOS/Android\r\n* The Browser on the client, if using the JavaScript client (IE/Chrome/Edge/Firefox/etc.): Edge/Chrome\r\n\r\nWe are seeing issues with subscriptions after a disconnect. We are handling disconnects by calling `HubConnection.start()` every 5 seconds or so. After we are reconnected, we are fine calling any method, but do not receive any messages. We are looking at handling resubscribing as part of the reconnection, but wanted to see if there are plans to handle resubscribing the client so that the observables can keep working.\r\n\r\nLogs:\r\n[server.log](https://github.com/aspnet/SignalR/files/2582705/server.log)\r\n[client.log](https://github.com/aspnet/SignalR/files/2582706/client.log)\r\n[network.har.txt](https://github.com/aspnet/SignalR/files/2582707/network.har.txt)\r\n\r\n","Url":"https://github.com/aspnet/SignalR/issues/3305","RelatedDescription":"Open issue \"Restarting TypeScript client does not resubscribe to subscriptions\" (#3305)"},{"Id":"380839807","IsPullRequest":true,"CreatedAt":"2018-11-14T19:28:09","Actor":"dotnet-maestro-bot","Number":"3304","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @BrennanConroy\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/SignalR merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/SignalR merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/SignalR merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/SignalR/pull/3304","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#3304)"}],"ResultType":"GitHubIssue"},"Identity-Issues":{"Issues":[{"Id":"383003537","IsPullRequest":false,"CreatedAt":"2018-11-22T13:29:00","Actor":"LindaLawton","Number":"2079","RawContent":null,"Title":"Remember me isPersistent understanding","State":"closed","Body":"This is more of a question but its not enough of a question that i could post it up on stack overflow without risking it just getting closed as primary opinion based or to broad.   So i am going to put it here in hopes of getting an answer.\r\n\r\nThe issue is the understanding of how remember me is supposed to work.    My problem is that its not doing what we would expect it to do.   \r\n\r\nManagement expects when a user logs in and clicks remember me that they will then not be required to type their login and password again for a month.  Whether or not they will still have to type in the 2fa code is up for debate.\r\n\r\nWhat is actually happening is that i can close the browser reboot and come back for about an hour and 15 minutes and then i will be forced to type my password again.    This still happens even with a valid `.AspNetCore.Identity.Application` cookie set that is not due to expire for another month.\r\n\r\nAfter digging around in the code i found that Remember me is actually isPersistent and it is defined as.\r\n\r\n>Flag indicating whether the sign-in cookie should persist after the browser is closed.\r\n\r\nWhich brings you to:\r\n\r\nThere are two different types of Cookies:\r\n\r\n- session cookies, held in memory, and which expire once the browser exits\r\n- persistent cookies, which have a time-to-live, are persisted on disk, and are sent by the browser until their time-to-live has elapsed.\r\n\r\nAll this being said remember machine 2fa works as expected i am not prompted again for the 2fa and i have a cookie on my machine `Identity.TwoFactorRememberMe`.\r\n\r\nSo I guess my question is why are we not getting a `Identity.FactorRememberMe` or why isn't sign in respecting a long life time of the `AspNetCore.Identity.Application` cookie?\r\n\r\nHow is this supposed to work exactly?   I am following the code here even though we have normal MVC and not razor pages like you have in the example.  I am still just calling \r\n\r\n>var signInUserResult = await _signInManager.PasswordSignInAsync(userName, password, rememberMe, true);\r\n\r\nNote: I am using Asp .net Identity in Identity server 4 application.\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2079","RelatedDescription":"Closed issue \"Remember me isPersistent understanding\" (#2079)"},{"Id":"383297898","IsPullRequest":false,"CreatedAt":"2018-11-21T22:08:40","Actor":"mmillican","Number":"2080","RawContent":null,"Title":"Replace a Role Validator","State":"closed","Body":"I am trying to create a custom role validator to support pseudo-multi-tenancy (which I know is not _officially_ supported in Identity) and am running into some issues.\r\n\r\nI've verified that my validator does work and is being called. However, the default validator appears to be called also. \r\n\r\nHere's my Identity service registration\r\n```\r\nservices.AddIdentity<User, Role>(setup =>\r\n    {\r\n        // Redacted settings\r\n    })\r\n    .AddRoleValidator<CustomRoleValidator<Role>>()\r\n    .AddEntityFrameworkStores<ApplicationDbContext>()\r\n    .AddDefaultTokenProviders();\r\n```\r\n\r\nHow can I _remove_ the default RoleValidator?","Url":"https://github.com/aspnet/Identity/issues/2080","RelatedDescription":"Closed issue \"Replace a Role Validator\" (#2080)"},{"Id":"382890054","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"dotnet-maestro-bot","Number":"2078","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2078","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2078)"},{"Id":"382876972","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"javiercn","Number":"2076","RawContent":null,"Title":"Update to IdentityServer 2.3.0","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2076","RelatedDescription":"Closed or merged PR \"Update to IdentityServer 2.3.0\" (#2076)"},{"Id":"382885320","IsPullRequest":true,"CreatedAt":"2018-11-20T23:19:15","Actor":"javiercn","Number":"2077","RawContent":null,"Title":"Update Identity Server dependencies to 2.3.0","State":"closed","Body":"This updates things on non-shipping product code, so it's ok to update (I asked).","Url":"https://github.com/aspnet/Identity/pull/2077","RelatedDescription":"Closed or merged PR \"Update Identity Server dependencies to 2.3.0\" (#2077)"},{"Id":"382432623","IsPullRequest":true,"CreatedAt":"2018-11-19T23:16:12","Actor":"HaoK","Number":"2075","RawContent":null,"Title":"Port retry handler test improvement to 2.1","State":"open","Body":"Port of similar fix for 2.2 https://github.com/aspnet/Identity/pull/2052","Url":"https://github.com/aspnet/Identity/pull/2075","RelatedDescription":"Open PR \"Port retry handler test improvement to 2.1\" (#2075)"},{"Id":"382068763","IsPullRequest":false,"CreatedAt":"2018-11-19T12:16:11","Actor":"wpqs","Number":"2074","RawContent":null,"Title":"Login doesn't show registered social logins after error","State":"closed","Body":"I'm using ASPNET Core 2.1 with Razor Pages UI Library and noticed that whilst registered social logins appear when I open the Login page, they disappear after an error like incorrect password.\r\n\r\nThere seems to be a bug in Identity\\Pages\\Account\\Login.cshtml.cs as \r\n````\r\n public IList<AuthenticationScheme> ExternalLogins { get; set; }\r\n\r\n````\r\nis only initialised in OnGetAsync(), but if an error happens OnPostAsync() then Page() is returned so OnGetAsyn() doesn't get called. Changing error handling in  OnPostAsync() so RedirectToPage() is returned seems to fix the problem.\r\n\r\nPlease confirm this is a bug and comment on my fix","Url":"https://github.com/aspnet/Identity/issues/2074","RelatedDescription":"Closed issue \"Login doesn't show registered social logins after error\" (#2074)"},{"Id":"381839694","IsPullRequest":false,"CreatedAt":"2018-11-17T07:58:00","Actor":"mduu","Number":"2073","RawContent":null,"Title":"How to translate Identity Core 2.1 DefaultUI to german","State":"open","Body":"I'm trying to switch the Identity Core 2.1 Default UI to another language.\r\n\r\nIn the startup.cs I forced the app to german but the default UI still shows up in englisch:\r\n\r\n            services.Configure<RequestLocalizationOptions>(options =>\r\n            {\r\n                options.DefaultRequestCulture = new RequestCulture(\"de-CH\");\r\n                options.SupportedCultures = new List<CultureInfo> { new CultureInfo(\"de-CH\") };\r\n                options.RequestCultureProviders = new List<IRequestCultureProvider>();\r\n                options.RequestCultureProviders.Insert(0, new CustomRequestCultureProvider(\r\n                    async context => new ProviderCultureResult(\"de\")\r\n                ));\r\n            });\r\n\r\nHow can I a) switch to german texts for the default UI or b) do my own german translations for the texts in the default UI?\r\n\r\nI did research for several hours already without success. I read that one may can influence the texts like error messages with .resx files but I don't know what file with which content to put where. Further more I think there should be german translations already available as they are for the .Net since years.\r\n\r\nI'm using Visual Studio for Mac and deploy the app to Azure AppServer on Windows. I welcome any help to get german translations for Identity Core 2.1 into place.","Url":"https://github.com/aspnet/Identity/issues/2073","RelatedDescription":"Open issue \"How to translate Identity Core 2.1 DefaultUI to german\" (#2073)"},{"Id":"381789469","IsPullRequest":true,"CreatedAt":"2018-11-17T00:27:58","Actor":"natemcmaster","Number":"2072","RawContent":null,"Title":"Upgrade projects to netcoreapp3.0","State":"closed","Body":"Changes:\r\n\r\n* Upgrade dependencies\r\n* Change TFM on Microsoft.AspNetCore.Identity to netcoreapp3.0\r\n* Remove .NET Framework tests\r\n\r\nPart of https://github.com/aspnet/AspNetCore/issues/3754","Url":"https://github.com/aspnet/Identity/pull/2072","RelatedDescription":"Closed or merged PR \"Upgrade projects to netcoreapp3.0\" (#2072)"},{"Id":"381388426","IsPullRequest":false,"CreatedAt":"2018-11-15T23:50:11","Actor":"enumjorge","Number":"2071","RawContent":null,"Title":"Make the presence of Identity UI more explicit in the starter template or documentation","State":"open","Body":"I just started looking into authentication for Razor pages, and I found the experience with the starter template to be very confusing. I saw that there's already a couple of GitHub issues related to this, but I think the experience still needs some work. [This post on StackOverflow](https://stackoverflow.com/questions/50802781/where-are-the-login-and-register-pages-in-an-aspnet-core-scafolded-app) exemplifies exactly what I went through earlier today. I wanted to share some feedback.\r\n\r\nThe idea of packaging UI in a library, especially UI as involved as authentication, is intriguing. But it hasn't been done in an ASP.net template before (that I'm aware of), so when you create a starter project and you see register and login forms that appear nowhere in your project files, it's quite disorienting. Like the poster in the StackOverflow question, I searched for that string to find the source, but found nothing. Other pages like the landing page, About, etc. do exist, but the account pages are there as if by magic.\r\n\r\nThe source of the UI, the AddDefaultIdentity statement in Startup.cs, gives no hints that it comes with UI included. The previous method of including AddDefaultUI in your service configuration at least had UI in the name.\r\n\r\nMentioning the existence of Identity UI in the documentation or somewhere in the template would help. I'm not sure what the main entry point to Razor pages is as far as documentation goes, but I was using this article: [Introduction to Identity on ASP.NET Core](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity). That might be a good place for a heads up about this new thing called Identity UI, which is the component that causing those authentication forms to appear. But you may be aware of a better place to put it.","Url":"https://github.com/aspnet/Identity/issues/2071","RelatedDescription":"Open issue \"Make the presence of Identity UI more explicit in the starter template or documentation\" (#2071)"},{"Id":"380931030","IsPullRequest":true,"CreatedAt":"2018-11-14T23:29:46","Actor":"pranavkm","Number":"2070","RawContent":null,"Title":"Use 3.0 configuration in RCLs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2070","RelatedDescription":"Closed or merged PR \"Use 3.0 configuration in RCLs\" (#2070)"},{"Id":"378005714","IsPullRequest":false,"CreatedAt":"2018-11-14T21:00:55","Actor":"papyr","Number":"2057","RawContent":null,"Title":"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups","State":"closed","Body":"There is a disconnect with Active Directory, since we don't have support for User Groups in Identity, how can we implement or mirror this functionality inside ASP identity","Url":"https://github.com/aspnet/Identity/issues/2057","RelatedDescription":"Closed issue \"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups\" (#2057)"},{"Id":"380813149","IsPullRequest":false,"CreatedAt":"2018-11-14T17:43:50","Actor":"vankampenp","Number":"2068","RawContent":null,"Title":"Consider HasClaimAsync or GetClaimAsync","State":"open","Body":"It is easy to get a claim from a logged in user, but not from a user that is not (yet) logged in.\r\n\r\nWhen generating a JWT token for my API, I want to check if the user for which the credentials are provided has the right claim to allow access to the API. Without such a check the token is provided, but than using the token fails because the access policy checks the claim. \r\n\r\nWhen using Roles you can use IsInRoleAsync(). But there is no equivalent for claims.\r\n\r\nSo when getting the user:\r\n\r\n`  var user = await _userManager.FindByNameAsync(model.Email);\r\n          `\r\n\r\nI would like to do something like:\r\n```\r\nif (!await _userManager.HasClaimAsync(user, \"IsApiUser\", \"true\"))\r\n            {\r\n                               return BadRequest(\"Invalid user or password\");\r\n            }\r\n```\r\nI have now written my own extension method:\r\n\r\n ```\r\npublic static async Task<bool> HasClaimAsync(this UserManager<ApplicationUser> userManager,  ApplicationUser user, string claimType, string value)\r\n        {\r\n            var claims = await userManager.GetClaimsAsync(user);\r\n            var claim = claims.FirstOrDefault(c => c.Type == claimType);\r\n            return claim !=null &&  claim.Value == value;\r\n        }\r\n```\r\n\r\nI understand that HasClaim is based on cookies rather than database access, so much cheaper for logged in users:\r\n`var valid = User.HasClaim(c => c.Type == \"IsApiUser\" && c.Value == \"true\");\r\n`\r\nBut I think the HasClaimAsync or an more generic GetClaimAsync is missing for cases such as the above. \r\n","Url":"https://github.com/aspnet/Identity/issues/2068","RelatedDescription":"Open issue \"Consider HasClaimAsync or GetClaimAsync\" (#2068)"},{"Id":"380198930","IsPullRequest":false,"CreatedAt":"2018-11-14T17:33:59","Actor":"blankenbush","Number":"2065","RawContent":null,"Title":"Spelling error DeletePersonalData.cshtml.cs ","State":"closed","Body":"The word \"deleteing\" is wrong.  It should be \"deleting\" on line: 111; DeletePersonalData.cshtml.cs.\r\n\r\nAlso found in comment on line 183; SqlStoreTestBase.cs\r\n\r\n![capture](https://user-images.githubusercontent.com/187785/48412982-33401500-e714-11e8-903b-6e2fcc8e0a6a.PNG)\r\n","Url":"https://github.com/aspnet/Identity/issues/2065","RelatedDescription":"Closed issue \"Spelling error DeletePersonalData.cshtml.cs \" (#2065)"},{"Id":"380389829","IsPullRequest":true,"CreatedAt":"2018-11-14T17:33:01","Actor":"blankenbush","Number":"2066","RawContent":null,"Title":"Fix typo","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2066","RelatedDescription":"Closed or merged PR \"Fix typo\" (#2066)"},{"Id":"380746507","IsPullRequest":false,"CreatedAt":"2018-11-14T15:18:33","Actor":"wijnsema","Number":"2067","RawContent":null,"Title":"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False","State":"open","Body":"As requested by @brockallen in #850 it is now possible to bypass 2FA in case of an external login. \r\n\r\nI'm sure there are good reasons to bypass 2FA, however the current implementation is far to general: \r\n\r\n- All providers all treated equal (some providers might not even support 2FA at all)\r\n- All users all treated equal (users can have 2FA enabled or not)\r\n\r\nThis bypass of 2FA really needs more refinement.\r\n\r\n**What makes this really a problem is the fact that it is enabled in the UI templates!** \r\nAs a developer using the template and enabling 2FA you expect 2FA to work for both local and external login!\r\n\r\nFurthermore, the redirect to the 2FA page is missing, so changing to call to `bypassTwoFactor = false` results in a confusing error that the user already exists.\r\n\r\nIn my opinion the following fragment from ExternalLogin.cshtml.cs\r\n```\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n      info.ProviderKey, isPersistent: false, bypassTwoFactor: true);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\n```\r\nshould be replaced with\r\n```\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n   info.ProviderKey, isPersistent: false, bypassTwoFactor: false);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\nif (result.RequiresTwoFactor)\r\n{\r\n   return RedirectToPage(\"./LoginWith2fa\", new { ReturnUrl = returnUrl });\r\n}\r\n```\r\nIf you enabled bypassTwoFactor it will still work.\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2067","RelatedDescription":"Open issue \"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False\" (#2067)"},{"Id":"380836986","IsPullRequest":false,"CreatedAt":"2018-11-13T06:32:54","Actor":"meloman001","Number":"2069","RawContent":null,"Title":"Problem with call UpdateSecurityStampAsync","State":"open","Body":"I need to update user security stamp for logout user from system on all devices . For this purpose i wanna use UpdateSecurityStampAsync, but i get an exception and i cannot fix it\r\n\r\n```\r\nInvalidOperationException: The instance of entity type 'ApplicationUser' cannot be tracked because another instance with the same key value for {'Id'} is already being tracked. When attaching existing entities, ensure that only one entity instance with a given key value is attached.\r\n\r\nMicrosoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.ThrowIdentityConflict(InternalEntityEntry entry)\r\nMicrosoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.Add(TKey key, InternalEntityEntry entry, bool updateDuplicate)\r\nMicrosoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap<TKey>.Add(TKey key, InternalEntityEntry entry)\r\nMicrosoft.EntityFrameworkCore.ChangeTracking.Internal.NullableKeyIdentityMap<TKey>.Add(InternalEntityEntry entry)\r\nMicrosoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(InternalEntityEntry entry)\r\nMicrosoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState oldState, EntityState newState, bool acceptChanges)\r\nMicrosoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(EntityState entityState, bool acceptChanges, Nullable<EntityState> forceStateWhenUnknownKey)\r\nMicrosoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.PaintAction(EntityEntryGraphNode node, bool force)\r\nMicrosoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraph<TState>(EntityEntryGraphNode node, TState state, Func<EntityEntryGraphNode, TState, bool> handleNode)\r\nMicrosoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraph(InternalEntityEntry rootEntry, EntityState entityState, bool forceStateWhenUnknownKey)\r\nMicrosoft.EntityFrameworkCore.DbContext.SetEntityState(InternalEntityEntry entry, EntityState entityState)\r\nMicrosoft.EntityFrameworkCore.DbContext.SetEntityState<TEntity>(TEntity entity, EntityState entityState)\r\nMicrosoft.EntityFrameworkCore.DbContext.Attach<TEntity>(TEntity entity)\r\nMicrosoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.UpdateAsync(TUser user, CancellationToken cancellationToken)\r\nMicrosoft.AspNetCore.Identity.UserManager<TUser>.UpdateUserAsync(TUser user)\r\nMicrosoft.AspNetCore.Identity.UserManager<TUser>.UpdateSecurityStampAsync(TUser user)\r\nWebAIS.Services.UserManager.UserManagerService.UpdateSecurityStampAsync(ApplicationUser user) in UserManagerService.cs\r\n```\r\n\r\n```c#\r\n/// Метод обновляет SecurityStamp для пользователя\r\n        /// </summary>\r\n        /// <param name=\"user\">Пользователь</param>\r\n        public async Task<IdentityResult> UpdateSecurityStampAsync(ApplicationUser user)\r\n        {\r\n            var result = await _userManager.UpdateSecurityStampAsync(user);\r\n            await ResetUserRedisCacheAsync(user);\r\n            return result;\r\n        }\r\n```\r\nI changed the type of used services to the scoped and singleton, but this did not solve the problem\r\n","Url":"https://github.com/aspnet/Identity/issues/2069","RelatedDescription":"Open issue \"Problem with call UpdateSecurityStampAsync\" (#2069)"},{"Id":"379398908","IsPullRequest":false,"CreatedAt":"2018-11-10T07:16:04","Actor":"jijiechen","Number":"2062","RawContent":null,"Title":"EmailConfirmationToken generated from UserManager does not reflect user's email address","State":"open","Body":"The token generated by `UserManager.GenerateEmailConfirmationTokenAsync` does not reflect current email address of the user, and no email address assertion is performed when validating a  confirmation token.\r\n\r\nTherefore the user is able to \"confirm\" his/her updated email address (B) by following a link containing a token generated before the changing is made when the email address was actually (A) if he/she changes his/her email address to (B).\r\n\r\nThis causes some risk that a user could \"confirm\" an email address doesn't really owned by him/her unless application blocks further email address changing before a pending confirmation completes.","Url":"https://github.com/aspnet/Identity/issues/2062","RelatedDescription":"Open issue \"EmailConfirmationToken generated from UserManager does not reflect user's email address\" (#2062)"},{"Id":"377364575","IsPullRequest":false,"CreatedAt":"2018-11-09T11:16:05","Actor":"yetanotherchris","Number":"2056","RawContent":null,"Title":"Should IdentityUser be in the EntityFramework namespace?","State":"closed","Body":"https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.identity.entityframeworkcore.identityuser?view=aspnetcore-1.1\r\n\r\nI'm looking through various implementations from the [readme](https://github.com/aspnet/Identity/blob/master/README.md) and I've noticed they all use `IdentityUser ` for their concrete type to pass to `UserManager`, or have had to craft a custom type to be able to have a contract between the database and the .NET AspNetIdentity implentation they've written (see the DynamoDB library).\r\n\r\nI've had to do this too for the [Marten implementation I've written](https://github.com/yetanotherchris/Marten.AspNetIdentity), and the reason is, a `TUser` that your `UserStore` takes, should really be an interface - it will always have an email, most likely an Id of some sort, firstname, lastname and then a bag of properties.\r\n\r\nThings become even more abstract when dealing with claims.\r\n\r\nIf everyone is using `IdentityUser` or their own custom `TUser` doesn't this defeat the purpose of AspnetIdentity - which is to be able to switch and change implementations easily? That isn't possible if your consumer is tightly coupled with a `TUser` implementation of the library.\r\n\r\n### Example `TUser` implementations\r\n\r\n- [MongoIdentityUser](https://github.com/tugberkugurlu/AspNetCore.Identity.MongoDB/blob/master/src/AspNetCore.Identity.MongoDB/MongoIdentityUser.cs)\r\n- [DynamoIdentityUser](https://github.com/miltador/AspNetCore.Identity.DynamoDB/blob/master/src/AspNetCore.Identity.DynamoDB/DynamoIdentityUser.cs)\r\n- [Redis uses `IdentityUser<string>`](https://github.com/aguacongas/Identity.Redis/blob/develop/src/Aguacongas.Identity.Redis/UserStore.cs)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2056","RelatedDescription":"Closed issue \"Should IdentityUser be in the EntityFramework namespace?\" (#2056)"},{"Id":"378822046","IsPullRequest":true,"CreatedAt":"2018-11-08T16:47:07","Actor":"grahamehorner","Number":"2060","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"open","Body":"20bytes is 160bits","Url":"https://github.com/aspnet/Identity/pull/2060","RelatedDescription":"Open PR \"Update Rfc6238AuthenticationService.cs\" (#2060)"},{"Id":"378006056","IsPullRequest":false,"CreatedAt":"2018-11-06T19:48:11","Actor":"blowdart","Number":"2058","RawContent":null,"Title":"Survey: Your experience using Identity UI and customization","State":"open","Body":"We're taking a survey about how your experiences using ASP.NET Core Identity, and specifically Identity UI as a package.\r\n\r\nPlease give us your feedback, and, if you're willing, you might get a phone call to talk about your experiences in detail.\r\n\r\nhttps://microsoft.qualtrics.com/jfe/form/SV_3mTmFYDZAQutZMF ","Url":"https://github.com/aspnet/Identity/issues/2058","RelatedDescription":"Open issue \"Survey: Your experience using Identity UI and customization\" (#2058)"},{"Id":"376980171","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:29","Actor":"dotnet-maestro-bot","Number":"2055","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2055","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2055)"},{"Id":"376978591","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:26","Actor":"javiercn","Number":"2054","RawContent":null,"Title":"Fixes integrity validation in Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2054","RelatedDescription":"Closed or merged PR \"Fixes integrity validation in Identity UI V3\" (#2054)"},{"Id":"376977750","IsPullRequest":false,"CreatedAt":"2018-11-02T21:48:32","Actor":"javiercn","Number":"2053","RawContent":null,"Title":"Fix integrity tags on Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/issues/2053","RelatedDescription":"Closed issue \"Fix integrity tags on Identity UI V3\" (#2053)"},{"Id":"376973581","IsPullRequest":true,"CreatedAt":"2018-11-02T21:48:08","Actor":"javiercn","Number":"2052","RawContent":null,"Title":"Fixes integrity validation hashes for Identity UI V3","State":"closed","Body":"Fixes https://github.com/aspnet/Identity/issues/2053","Url":"https://github.com/aspnet/Identity/pull/2052","RelatedDescription":"Closed or merged PR \"Fixes integrity validation hashes for Identity UI V3\" (#2052)"},{"Id":"376607709","IsPullRequest":false,"CreatedAt":"2018-11-01T23:29:51","Actor":"ycrumeyrolle","Number":"2051","RawContent":null,"Title":"[Question] Passwords should not be of type String ?","State":"closed","Body":"My security team escalated to me that the `PasswordHasher` is vulnerable to heap inspection, as the password is of type `String`. \r\nIt should be instead a byte array / span of bytes cleared at the end of the process, as it is done by any cryptographic operation in corefx. CC @bartonjs.\r\nSame problem with any password related types (`IPasswordValidator`, and maybe also the `IUserPasswordStore`)","Url":"https://github.com/aspnet/Identity/issues/2051","RelatedDescription":"Closed issue \"[Question] Passwords should not be of type String ?\" (#2051)"},{"Id":"376561899","IsPullRequest":true,"CreatedAt":"2018-11-01T21:02:20","Actor":"dotnet-maestro-bot","Number":"2050","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @natemcmaster\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2050","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2050)"},{"Id":"376549651","IsPullRequest":true,"CreatedAt":"2018-11-01T20:32:24","Actor":"natemcmaster","Number":"2049","RawContent":null,"Title":"Ensure ApiAuthorization.IdentityServer doesn't build a 2.2.0 package with the rest of RTM","State":"closed","Body":"This will prevent us from ending up with a \"2.2.0\" package when we do our final 2.2.0 RTM build, which would end up in build caches and drops. ","Url":"https://github.com/aspnet/Identity/pull/2049","RelatedDescription":"Closed or merged PR \"Ensure ApiAuthorization.IdentityServer doesn't build a 2.2.0 package with the rest of RTM\" (#2049)"},{"Id":"376532012","IsPullRequest":false,"CreatedAt":"2018-11-01T19:16:32","Actor":"blowdart","Number":"2048","RawContent":null,"Title":"Discussion for API authentication and Identity Server","State":"open","Body":"Some of you may have noticed that the [Identity Server](https://identityserver.io/) integration is now in the [master branch](https://github.com/aspnet/Identity/tree/master/src/ApiAuth.IS) along with a [sample](https://github.com/aspnet/Identity/tree/master/samples/ApiAuthSample) on how it all hangs together.\r\n\r\nThis issue is meant to centralize feedback as much as possible, so let's first discuss what this feature is aimed at and its limits\r\n\r\n- The feature will appear as an authorization option for API and SPA templates where you require Individual Authentication with a local database.\r\n- This will _not_ appear as an option for MVC or Razor Pages applications, those will continue as is for now.\r\n- It is meant as a _simple_ starting point, supporting APIs and first party clients. \r\n- It uses conventions to register the clients and apis without the need for configuring Identity Server beyond the helper methods in ConfigureServices()\r\n\r\n```\r\n            services.AddDbContext<ApplicationDbContext>(options =>\r\n                options.UseSqlite(Configuration.GetConnectionString(\"DefaultConnection\")));\r\n\r\n            services.AddDefaultIdentity<ApplicationUser>()\r\n                .AddEntityFrameworkStores<ApplicationDbContext>();\r\n\r\n            services.AddIdentityServer()\r\n                .AddApiAuthorization<ApplicationUser, ApplicationDbContext>();\r\n\r\n            services.AddAuthentication()\r\n                .AddIdentityServerJwt();\r\n```\r\n\r\n- It still uses ASPNET Identity for the user database, and thus requires EF.\r\n- It will not support any advanced usage of Identity Server, like federation, WS-Fed, client certificates etc. although nothing will stop you migrating to those should you require them, you just have to abandon the helper functions and go full throttle with Identity Server's configuration system.\r\n- We'll be examining service to service authentication at some point.\r\n\r\nSo, have at it.","Url":"https://github.com/aspnet/Identity/issues/2048","RelatedDescription":"Open issue \"Discussion for API authentication and Identity Server\" (#2048)"},{"Id":"376524638","IsPullRequest":true,"CreatedAt":"2018-11-01T18:56:57","Actor":"javiercn","Number":"2047","RawContent":null,"Title":"Merge branch 'release/2.2' => 'master'","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2047","RelatedDescription":"Closed or merged PR \"Merge branch 'release/2.2' => 'master'\" (#2047)"}],"ResultType":"GitHubIssue"},"Kestrel-Issues":{"Issues":[{"Id":"383411391","IsPullRequest":false,"CreatedAt":"2018-11-22T07:32:12","Actor":"somsekhar","Number":"3107","RawContent":null,"Title":"Unit test : Could not load file or assembly 'Leadtools.Document.Writer, Version=20.0.4.0, Culture=neutral, PublicKeyToken=9cf889f53ea9b907' or one of its dependencies. An attempt was made to load a program with an incorrect format.","State":"open","Body":"Created console application for OCR with LeadTools SDK and it works fine.\r\n \r\nAdded unit test application and given reference of OCR project.\r\nWhen unit test runs throwing an error. **_Could not load file or assembly 'Leadtools.Document.Writer, Version=20.0.4.0, Culture=neutral, PublicKeyToken=9cf889f53ea9b907' or one of its dependencies. An attempt was made to load a program with an incorrect format._**\r\n\r\nBoth the applications are created using .Net Framework 4.6.1 ","Url":"https://github.com/aspnet/KestrelHttpServer/issues/3107","RelatedDescription":"Open issue \"Unit test : Could not load file or assembly 'Leadtools.Document.Writer, Version=20.0.4.0, Culture=neutral, PublicKeyToken=9cf889f53ea9b907' or one of its dependencies. An attempt was made to load a program with an incorrect format.\" (#3107)"},{"Id":"383091379","IsPullRequest":false,"CreatedAt":"2018-11-21T12:15:22","Actor":"sambauwens","Number":"3106","RawContent":null,"Title":"Provide option to not catch all request exceptions","State":"open","Body":"When I'm debugging my server code, I like to break on unhandled exceptions right into context. I noticed that when debugging my aspnet core application it never breaks in my code.\r\n\r\nThe last line of my stacktrace is :\r\n```\r\nat Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)\r\n```\r\n\r\nI did some research, and noticed [HttpProtocol.ProcessRequestsAsync()](https://github.com/aspnet/KestrelHttpServer/blob/5d80016b4fb991acf6f639549b784ed5882d8de0/src/Kestrel.Core/Internal/Http/HttpProtocol.cs#L461) does seem to catch all exceptions unconditionnally.\r\n\r\nSo I would appreciate a configuration option that I set when the debugger is attached and which tells kestrel not to catch exceptions.","Url":"https://github.com/aspnet/KestrelHttpServer/issues/3106","RelatedDescription":"Open issue \"Provide option to not catch all request exceptions\" (#3106)"},{"Id":"382269775","IsPullRequest":false,"CreatedAt":"2018-11-19T15:36:21","Actor":"Tragetaschen","Number":"3105","RawContent":null,"Title":"Kestrel doesn't end connections timely when pulling the network cable","State":"open","Body":"I have a page with an active SignalR connection based on WebSockets and a large file upload post request (~180 MiB) in `netcoreapp2.1` version `2.1.6`. While these things are running, I pull the network cable on my USB RNDIS connection, which results in a carrier loss in Linux. Now I look at the active connections using `netstat`:\r\n\r\nInitially, all connection are still `ESTABLISHED`, there's the POST request, the WebSocket and a couple of remaining keep-alive connections.\r\n\r\nAfter around two minutes, the keep-alive connections go away.\r\n\r\nAfter 15 minutes (!) the WebSocket closes with a timeout. Before that, the Send-Q was filling up (probably with SignalR PINGs).\r\n\r\nNow, after about 30 minutes, the POST request is still `ESTABLISHED` and there is no progress whatsoever. This is especially annoying as the request holds on to an open file handle. When I reconnect the network (USB) cable and re-run the POST request, it fails with a proper IOException.\r\n\r\nThe only way it seems to get rid of the POST request is to stop the application. Only then, I can see in the logs that the `CancellationToken` of the that request has actually fired.\r\n\r\nI haven't configured any of the limits explicitly, so I am expecting the `MinRequestBodyDataRate` of 240 bytes/second to trigger and actually close the connection much sooner. The only configuration is on my Controller method (`RequestSizeLimitAttribute`).","Url":"https://github.com/aspnet/KestrelHttpServer/issues/3105","RelatedDescription":"Open issue \"Kestrel doesn't end connections timely when pulling the network cable\" (#3105)"},{"Id":"380271183","IsPullRequest":false,"CreatedAt":"2018-11-16T22:31:55","Actor":"mmulhearn","Number":"3098","RawContent":null,"Title":"Server header still present after setting AddServerHeader to false","State":"closed","Body":"Referring to https://github.com/aspnet/KestrelHttpServer/issues/852, the following code should remove the Server header from the response:\r\n\r\n```\r\n public static IWebHostBuilder CreateWebHostBuilder(string[] args) =>\r\n            WebHost.CreateDefaultBuilder(args)\r\n                .UseKestrel(k => k.AddServerHeader = false)\r\n                .UseStartup<Startup>();\r\n```\r\n\r\nHowever, I am still seeing Server: Kestrel header in the response.  I have killed the process and re-built multiple times to no change.\r\n\r\nUsing Asp.Net Core 2.1.1.","Url":"https://github.com/aspnet/KestrelHttpServer/issues/3098","RelatedDescription":"Closed issue \"Server header still present after setting AddServerHeader to false\" (#3098)"},{"Id":"381263892","IsPullRequest":false,"CreatedAt":"2018-11-15T17:49:06","Actor":"TechnikEmpire","Number":"3104","RawContent":null,"Title":"Publish 2.2 release to Nuget","State":"closed","Body":"I see the 2.2 release is 20 hours old, but is not available on Nuget. Can you guys please upload it to Nuget? Excited to roll this into a project of mine.","Url":"https://github.com/aspnet/KestrelHttpServer/issues/3104","RelatedDescription":"Closed issue \"Publish 2.2 release to Nuget\" (#3104)"},{"Id":"380900845","IsPullRequest":true,"CreatedAt":"2018-11-15T16:43:54","Actor":"natemcmaster","Number":"3102","RawContent":null,"Title":"This repo will be archived, its contents moved into aspnet/AspNetCore","State":"closed","Body":"As a part of https://github.com/aspnet/AspNetCore/issues/3598, this repository will be archived and active development of Kestrel will continue in https://github.com/aspnet/AspNetCore.\r\n\r\nThis PR updates the README to point users to the new home for Kestrel.\r\n\r\ncref https://github.com/aspnet/AspNetCore/pull/4026","Url":"https://github.com/aspnet/KestrelHttpServer/pull/3102","RelatedDescription":"Closed or merged PR \"This repo will be archived, its contents moved into aspnet/AspNetCore\" (#3102)"},{"Id":"381042365","IsPullRequest":true,"CreatedAt":"2018-11-15T09:24:50","Actor":"JunTaoLuo","Number":"3103","RawContent":null,"Title":"Fix Selenium tests WIP","State":"closed","Body":"Trying to address https://github.com/aspnet/AspNetCore-Internal/issues/1363.\r\n\r\nThese tests pass locally and passes on the VSTS linux agents. I'm suspecting that there's something wrong with the setup of the VSTS Windows agents. I see that the version Chrome and Selenium Chrome driver is different from my local machine so I'm going to see if using the installed chrome driver fixes the issue.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/3103","RelatedDescription":"Closed or merged PR \"Fix Selenium tests WIP\" (#3103)"},{"Id":"379587909","IsPullRequest":true,"CreatedAt":"2018-11-14T20:05:26","Actor":"benaadams","Number":"3094","RawContent":null,"Title":"[2.2] Use non-pinnable buffer for zero byte read","State":"closed","Body":"Time is being spent Pinning \r\n\r\n![image](https://user-images.githubusercontent.com/1142958/48315798-b5282500-e5d2-11e8-8ffc-d43a54dccae5.png)\r\n\r\nand Unpinning\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/48322423-648ae900-e61f-11e8-9d2d-8ceff0b9ed97.png)\r\n\r\nKestrel uses prepinned buffers so shouldn't have these costs. It comes from pinning `Array.Empty<byte>()` in the zero-byte reads.\r\n\r\nAfter using `Memory<byte>.Empty` these costs go away:\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/48322467-9bf99580-e61f-11e8-8792-34ff383688b0.png)\r\n\r\n\r\n@sebastienros could you benchmark this; see if it makes a difference?","Url":"https://github.com/aspnet/KestrelHttpServer/pull/3094","RelatedDescription":"Closed or merged PR \"[2.2] Use non-pinnable buffer for zero byte read\" (#3094)"},{"Id":"380864243","IsPullRequest":false,"CreatedAt":"2018-11-14T20:03:11","Actor":"Tratcher","Number":"3101","RawContent":null,"Title":"Remove Microsoft.AspNetCore.Server.Kestrel.Https package","State":"open","Body":"The contents were merged into Kestrel.Core in 2.1 and this assembly now only contains type forwarders.","Url":"https://github.com/aspnet/KestrelHttpServer/issues/3101","RelatedDescription":"Open issue \"Remove Microsoft.AspNetCore.Server.Kestrel.Https package\" (#3101)"},{"Id":"378984402","IsPullRequest":true,"CreatedAt":"2018-11-14T19:14:31","Actor":"JunTaoLuo","Number":"3084","RawContent":null,"Title":"Use Selenium to test Chrome","State":"closed","Body":"Addresses https://github.com/aspnet/KestrelHttpServer/issues/3075\r\nI still want to evaluate whether this version is more reliable. It ended up being a test only change so I was hoping to resolve the flakiness in 2.2 as well.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/3084","RelatedDescription":"Closed or merged PR \"Use Selenium to test Chrome\" (#3084)"},{"Id":"380534413","IsPullRequest":false,"CreatedAt":"2018-11-14T04:52:13","Actor":"Chetas1","Number":"3100","RawContent":null,"Title":"How to add Security Headers in Response from server","State":"closed","Body":"Like in IIS server we have web.config file where if we add security headers like X-XSS-Protection , then in response we get that headers. Since i am using kestrel i am not getting where to add this security headers. Does this also has some configuration file where we could add security headers. ","Url":"https://github.com/aspnet/KestrelHttpServer/issues/3100","RelatedDescription":"Closed issue \"How to add Security Headers in Response from server\" (#3100)"},{"Id":"379931060","IsPullRequest":true,"CreatedAt":"2018-11-13T21:14:36","Actor":"benaadams","Number":"3096","RawContent":null,"Title":"[WIP][2.2] Remove lock contention in IOQueue","State":"closed","Body":"For testing https://github.com/aspnet/KestrelHttpServer/pull/3093\r\n\r\n@sebastienros version for benchmarking; should effect pipelined, may effect non-pipelined","Url":"https://github.com/aspnet/KestrelHttpServer/pull/3096","RelatedDescription":"Closed or merged PR \"[WIP][2.2] Remove lock contention in IOQueue\" (#3096)"},{"Id":"380391384","IsPullRequest":true,"CreatedAt":"2018-11-13T20:04:24","Actor":"dotnet-maestro-bot","Number":"3099","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @halter73\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/KestrelHttpServer merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/KestrelHttpServer merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/KestrelHttpServer merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/3099","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#3099)"},{"Id":"379378678","IsPullRequest":true,"CreatedAt":"2018-11-13T19:58:55","Actor":"halter73","Number":"3092","RawContent":null,"Title":" Avoid possible tearing in HeartbeatManager.UtcNow","State":"closed","Body":"","Url":"https://github.com/aspnet/KestrelHttpServer/pull/3092","RelatedDescription":"Closed or merged PR \" Avoid possible tearing in HeartbeatManager.UtcNow\" (#3092)"},{"Id":"379375747","IsPullRequest":true,"CreatedAt":"2018-11-13T19:34:18","Actor":"halter73","Number":"3091","RawContent":null,"Title":"Stop skipping libuv functional tests","State":"closed","Body":"I accidentally removed all the test classes shared between Sockets and libuv from the libuv functional test project as part of #3036. Fortunately, we haven't made any transport changes since #3036 was merged.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/3091","RelatedDescription":"Closed or merged PR \"Stop skipping libuv functional tests\" (#3091)"},{"Id":"379372910","IsPullRequest":true,"CreatedAt":"2018-11-13T19:33:49","Actor":"halter73","Number":"3090","RawContent":null,"Title":"Wait for reads before advancing clock in Http2TimeoutTests","State":"closed","Body":"Prior to this change, HTTP/2 read rate limit tests would fail when the stalled read started after the test started advancing the clock. Example:\r\n\r\n```\r\nFailed   DATA_Received_TooSlowlyOnSecondStream_AbortsConnectionAfterNonAdditiveRateTimeout\r\n  Error Message:\r\n   Moq.MockException :\r\n  Expected invocation on the mock once, but was 0 times: h => h.OnTimeout(TimeoutReason.ReadDataRate)\r\n\r\n  Configured setups:\r\n  ITimeoutHandler h => h.OnTimeout(It.IsAny<TimeoutReason>())\r\n  No invocations performed.\r\n  Stack Trace:\r\n     at Moq.Mock.VerifyCalls(Mock targetMock, InvocationShape expectation, LambdaExpression expression, Times times, String failMessage)\r\n     at Moq.Mock.Verify[T](Mock`1 mock, Expression`1 expression, Times times, String failMessage)\r\n     at Moq.Mock`1.Verify(Expression`1 expression, Times times)\r\n     at Moq.Mock`1.Verify(Expression`1 expression, Func`1 times)\r\n     at Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2TimeoutTests.<DATA_Received_TooSlowlyOnSecondStream_AbortsConnectionAfterNonAdditiveRateTimeout>d__14.MoveNext() in C:\\dev\\aspnet\\KestrelHttpServer\\test\\Kestrel.InMemory.FunctionalTests\\Http2\\Http2TimeoutTests.cs:line 781\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n  --- End of stack trace from previous location where exception was thrown ---\r\n     at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n     at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n  Standard Output Messages:\r\n   | [0.001s] TestLifetime Information: Starting test DATA_Received_TooSlowlyOnSecondStream_AbortsConnectionAfterNonAdditiveRateTimeout at 2018-11-09T20:20:47\r\n   | [0.005s] Microsoft.AspNetCore.Server.Kestrel Trace: Connection id \"(null)\" sending SETTINGS frame for stream ID 0 with length 18 and flags NONE\r\n   | [0.005s] Microsoft.AspNetCore.Server.Kestrel Trace: Connection id \"(null)\" sending WINDOW_UPDATE frame for stream ID 0 with length 4 and flags 0x0\r\n   | [0.005s] Microsoft.AspNetCore.Server.Kestrel Trace: Connection id \"(null)\" received SETTINGS frame for stream ID 0 with length 0 and flags NONE\r\n   | [0.005s] Microsoft.AspNetCore.Server.Kestrel Trace: Connection id \"(null)\" sending SETTINGS frame for stream ID 0 with length 0 and flags ACK\r\n   | [0.005s] Microsoft.AspNetCore.Server.Kestrel Trace: Connection id \"(null)\" received HEADERS frame for stream ID 1 with length 318 and flags END_HEADERS\r\n   | [0.005s] Microsoft.AspNetCore.Server.Kestrel Trace: Connection id \"(null)\" received DATA frame for stream ID 1 with length 16384 and flags END_STREAM\r\n   | [0.005s] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"(null)\", Request id \":00000001\": started reading request body.\r\n   | [0.006s] Microsoft.AspNetCore.Server.Kestrel Trace: Connection id \"(null)\" sending HEADERS frame for stream ID 1 with length 37 and flags END_HEADERS\r\n   | [0.006s] Microsoft.AspNetCore.Server.Kestrel Trace: Connection id \"(null)\" sending DATA frame for stream ID 1 with length 16384 and flags NONE\r\n   | [0.006s] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"(null)\", Request id \":00000001\": done reading request body.\r\n   | [0.006s] Microsoft.AspNetCore.Server.Kestrel Trace: Connection id \"(null)\" sending DATA frame for stream ID 1 with length 0 and flags END_STREAM\r\n   | [0.006s] Microsoft.AspNetCore.Server.Kestrel Trace: Connection id \"(null)\" received HEADERS frame for stream ID 3 with length 318 and flags END_HEADERS\r\n   | [0.007s] Microsoft.AspNetCore.Server.Kestrel Trace: Connection id \"(null)\" received DATA frame for stream ID 3 with length 16384 and flags NONE\r\n   | [0.007s] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"(null)\", Request id \":00000003\": started reading request body.\r\n   | [0.007s] Microsoft.AspNetCore.Server.Kestrel Trace: Connection id \"(null)\" sending HEADERS frame for stream ID 3 with length 37 and flags END_HEADERS\r\n   | [0.007s] Microsoft.AspNetCore.Server.Kestrel Trace: Connection id \"(null)\" sending DATA frame for stream ID 3 with length 16384 and flags NONE\r\n   | [0.024s] Microsoft.AspNetCore.Server.Kestrel Trace: Connection id \"(null)\" sending GOAWAY frame for stream ID 0 with length 8 and flags 0x0\r\n   | [0.024s] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"(null)\" is closed. The last processed stream ID was 3.\r\n   | [0.025s] Microsoft.AspNetCore.Server.Kestrel Error: Connection id \"(null)\", Request id \":00000003\": An unhandled exception was thrown by the application.\r\n   | System.IO.IOException: The request stream was aborted. ---> Microsoft.AspNetCore.Connections.ConnectionAbortedException: The HTTP/2 connection faulted.\r\n   |    --- End of inner exception stack trace ---\r\n   |    at System.IO.Pipelines.PipeCompletion.ThrowLatchedException()\r\n   |    at System.IO.Pipelines.Pipe.GetReadResult(ReadResult& result)\r\n   |    at System.IO.Pipelines.Pipe.GetReadAsyncResult()\r\n   |    at System.IO.Pipelines.Pipe.DefaultPipeReader.GetResult(Int16 token)\r\n   |    at System.Runtime.CompilerServices.ValueTaskAwaiter`1.GetResult()\r\n   |    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.<ReadAsync>d__27.MoveNext() in C:\\dev\\aspnet\\KestrelHttpServer\\src\\Kestrel.Core\\Internal\\Http\\MessageBody.cs:line 54\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   |    at System.Runtime.CompilerServices.ValueTaskAwaiter`1.GetResult()\r\n   |    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpRequestStream.<ReadAsyncInternal>d__21.MoveNext() in C:\\dev\\aspnet\\KestrelHttpServer\\src\\Kestrel.Core\\Internal\\Http\\HttpRequestStream.cs:line 130\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   |    at Microsoft.AspNetCore.Server.Kestrel.Core.Tests.Http2TestBase.<>c.<<-ctor>b__49_10>d.MoveNext() in C:\\dev\\aspnet\\KestrelHttpServer\\test\\Kestrel.InMemory.FunctionalTests\\Http2\\Http2TestBase.cs:line 218\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   |    at Microsoft.AspNetCore.Testing.DummyApplication.<ProcessRequestAsync>d__7.MoveNext() in C:\\dev\\aspnet\\KestrelHttpServer\\test\\shared\\DummyApplication.cs:line 45\r\n   | --- End of stack trace from previous location where exception was thrown ---\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   |    at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   |    at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequests>d__185`1.MoveNext() in C:\\dev\\aspnet\\KestrelHttpServer\\src\\Kestrel.Core\\Internal\\Http\\HttpProtocol.cs:line 545\r\n   | [0.026s] Microsoft.AspNetCore.Server.Kestrel Debug: Connection id \"(null)\", Request id \":00000003\": done reading request body.\r\n   | [0.026s] Microsoft.AspNetCore.Server.Kestrel Information: Connection id \"(null)\", Request id \":00000003\": the application completed without reading the entire request body.\r\n   | [0.026s] TestLifetime Information: Finished test DATA_Received_TooSlowlyOnSecondStream_AbortsConnectionAfterNonAdditiveRateTimeout in 0.025\r\n```","Url":"https://github.com/aspnet/KestrelHttpServer/pull/3090","RelatedDescription":"Closed or merged PR \"Wait for reads before advancing clock in Http2TimeoutTests\" (#3090)"},{"Id":"380005841","IsPullRequest":false,"CreatedAt":"2018-11-13T00:23:46","Actor":"JeremyKuhne","Number":"3097","RawContent":null,"Title":"Consume SequenceReader from CoreFX","State":"open","Body":"`SequenceReader<T>` is the CoreFX implementation of `BufferReader<T>`.  Any drop of CoreFX past https://github.com/dotnet/corefx/commit/9ae14ba629e7547b2d27180431cfd7f5a3c14709 will have this type.\r\n\r\n#3068 implements changes that are based on an API compatible `BufferReader<T>` that `SequenceReader<T>` should just drop in and replace.","Url":"https://github.com/aspnet/KestrelHttpServer/issues/3097","RelatedDescription":"Open issue \"Consume SequenceReader from CoreFX\" (#3097)"},{"Id":"379868129","IsPullRequest":true,"CreatedAt":"2018-11-12T19:42:22","Actor":"benaadams","Number":"3095","RawContent":null,"Title":"Use .NET Core 3.0 ThreadPool scheduling","State":"closed","Body":"On top of https://github.com/aspnet/KestrelHttpServer/pull/3093\r\n\r\nRemoves QUWIC allocations from the IOQueue\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/48327874-08cd5980-e639-11e8-8e9d-d38a1b4106f8.png)\r\n\r\nResolves: https://github.com/aspnet/KestrelHttpServer/issues/3042","Url":"https://github.com/aspnet/KestrelHttpServer/pull/3095","RelatedDescription":"Closed or merged PR \"Use .NET Core 3.0 ThreadPool scheduling\" (#3095)"},{"Id":"379365693","IsPullRequest":true,"CreatedAt":"2018-11-12T19:12:46","Actor":"JunTaoLuo","Number":"3089","RawContent":null,"Title":"WIP Revert https://github.com/aspnet/KestrelHttpServer/pull/2502","State":"closed","Body":"The performance regression may be too significant. See https://github.com/aspnet/Benchmarks/issues/569. cc @muratg @Eilon: @davidfowl wanted to potentially revert this for 2.2.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/3089","RelatedDescription":"Closed or merged PR \"WIP Revert https://github.com/aspnet/KestrelHttpServer/pull/2502\" (#3089)"},{"Id":"379544480","IsPullRequest":true,"CreatedAt":"2018-11-11T17:34:47","Actor":"benaadams","Number":"3093","RawContent":null,"Title":"Remove lock contention in IOQueue","State":"open","Body":"Currently a lot of contention on the lock\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/48316131-4c8f7700-e5d7-11e8-8d6f-7118399f6a79.png)\r\n\r\nGo through the lock if its not already doing work; otherwise skip the lock.\r\n\r\nSubmit work to threadpool outside the lock\r\n\r\nAfter contention is much reduced\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/48323012-04497680-e622-11e8-8310-0479454a9fdc.png)\r\n\r\n\r\nAlso removes QUWIC allocations from the IOQueue on .NET Core 3.0\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/48327874-08cd5980-e639-11e8-8e9d-d38a1b4106f8.png)\r\n\r\nResolves: https://github.com/aspnet/KestrelHttpServer/issues/3042","Url":"https://github.com/aspnet/KestrelHttpServer/pull/3093","RelatedDescription":"Open PR \"Remove lock contention in IOQueue\" (#3093)"},{"Id":"379316537","IsPullRequest":true,"CreatedAt":"2018-11-09T20:53:44","Actor":"dotnet-maestro-bot","Number":"3088","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @halter73\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/KestrelHttpServer merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/KestrelHttpServer merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/KestrelHttpServer merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/3088","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#3088)"},{"Id":"378500520","IsPullRequest":false,"CreatedAt":"2018-11-09T20:46:30","Actor":"halter73","Number":"3079","RawContent":null,"Title":"Flaky Test: Test run aborted due to \"Missing stream\" in OnStreamCompleted","State":"closed","Body":"```\r\n13:05:07   The active test run was aborted. Reason: Assertion Failed\r\n13:05:07   Missing stream\r\n13:05:07      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Connection.Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.IHttp2StreamLifetimeHandler.OnStreamCompleted(Int32 streamId) in /_/src/Kestrel.Core/Internal/Http2/Http2Connection.cs:line 1067\r\n13:05:07      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Stream.OnRequestProcessingEnded() in /_/src/Kestrel.Core/Internal/Http2/Http2Stream.cs:line 79\r\n13:05:07      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequestsAsync[TContext](IHttpApplication`1 application)\r\n13:05:07      at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)\r\n13:05:07      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequestsAsync[TContext](IHttpApplication`1 application)\r\n13:05:07      at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http2.Http2Connection.<>c__74`1.<StartStream>b__74_0(Object state) in /_/src/Kestrel.Core/Internal/Http2/Http2Connection.cs:line 1002\r\n13:05:07      at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```\r\n\r\nhttps://ci3.dot.net/job/aspnet_KestrelHttpServer/job/release_2.2/job/linux-Configuration_Debug_prtest/382/consoleFull","Url":"https://github.com/aspnet/KestrelHttpServer/issues/3079","RelatedDescription":"Closed issue \"Flaky Test: Test run aborted due to \"Missing stream\" in OnStreamCompleted\" (#3079)"},{"Id":"379307921","IsPullRequest":true,"CreatedAt":"2018-11-09T20:40:51","Actor":"halter73","Number":"3087","RawContent":null,"Title":"Always decrement count on HTTP/2 stream completion","State":"closed","Body":"#3079 \r\n","Url":"https://github.com/aspnet/KestrelHttpServer/pull/3087","RelatedDescription":"Closed or merged PR \"Always decrement count on HTTP/2 stream completion\" (#3087)"},{"Id":"379278699","IsPullRequest":true,"CreatedAt":"2018-11-09T19:19:01","Actor":"dotnet-maestro-bot","Number":"3086","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @halter73\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/KestrelHttpServer merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/KestrelHttpServer merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/KestrelHttpServer merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/3086","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#3086)"},{"Id":"378984580","IsPullRequest":true,"CreatedAt":"2018-11-09T18:39:25","Actor":"halter73","Number":"3085","RawContent":null,"Title":"Expect correct error message in HTTP/2 test","State":"closed","Body":"Since AbortedStream_ResetsAndDrainsRequest_RefusesFramesAfterClientReset sends an RST frame before the final frame instead of an EOS frame like AbortedStream_ResetsAndDrainsRequest_RefusesFramesAfterEndOfStream, we need to expect a slightly different error message in the client reset test.\r\n\r\nYou can see the issue in the most recent failure reported in #3022:\r\n\r\nhttp://aspnetci/viewLog.html?buildId=590193&buildTypeId=Releases_22xPublic_Win2012","Url":"https://github.com/aspnet/KestrelHttpServer/pull/3085","RelatedDescription":"Closed or merged PR \"Expect correct error message in HTTP/2 test\" (#3085)"},{"Id":"378958054","IsPullRequest":true,"CreatedAt":"2018-11-08T23:22:17","Actor":"dotnet-maestro-bot","Number":"3083","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @halter73\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/KestrelHttpServer merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/KestrelHttpServer merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/KestrelHttpServer merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/KestrelHttpServer/pull/3083","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#3083)"},{"Id":"378525307","IsPullRequest":false,"CreatedAt":"2018-11-08T23:10:37","Actor":"BrennanConroy","Number":"3081","RawContent":null,"Title":"Websocket sniffing doesn't work for Http2 compatible connections","State":"closed","Body":"In SignalR we use the presence of the `IHttpWebSocketFeature` to determine if we should tell the client that websockets is \"available\". The `Http2Connection` no longer sets the `IHttpUpgradeFeature` which the websockets middleware uses and this makes websocket sniffing fail so clients will fallback to SSE even though websockets is supported over Http1.","Url":"https://github.com/aspnet/KestrelHttpServer/issues/3081","RelatedDescription":"Closed issue \"Websocket sniffing doesn't work for Http2 compatible connections\" (#3081)"},{"Id":"378544969","IsPullRequest":true,"CreatedAt":"2018-11-08T23:10:08","Actor":"halter73","Number":"3082","RawContent":null,"Title":"Implement no-op HTTP/2 IHttpUpgradeFeature","State":"closed","Body":"Addresses #3081 \r\n\r\n@muratg We'd like to get this in for 2.2","Url":"https://github.com/aspnet/KestrelHttpServer/pull/3082","RelatedDescription":"Closed or merged PR \"Implement no-op HTTP/2 IHttpUpgradeFeature\" (#3082)"},{"Id":"378465028","IsPullRequest":true,"CreatedAt":"2018-11-08T01:09:45","Actor":"halter73","Number":"3078","RawContent":null,"Title":"[2.2] Fix race conditions in HTTP/2 tests","State":"closed","Body":"","Url":"https://github.com/aspnet/KestrelHttpServer/pull/3078","RelatedDescription":"Closed or merged PR \"[2.2] Fix race conditions in HTTP/2 tests\" (#3078)"},{"Id":"378502230","IsPullRequest":true,"CreatedAt":"2018-11-08T01:08:45","Actor":"halter73","Number":"3080","RawContent":null,"Title":"Remove invalid Debug.Assert in Http2Connection","State":"closed","Body":"The _streams dictionary may not contain the completing stream in\r\nOnStreamCompleted since the IsDraining flag is applied beforehand\r\nwhich allows it to be removed by the request processing thread.\r\n\r\n#3079","Url":"https://github.com/aspnet/KestrelHttpServer/pull/3080","RelatedDescription":"Closed or merged PR \"Remove invalid Debug.Assert in Http2Connection\" (#3080)"}],"ResultType":"GitHubIssue"},"Razor-Issues":{"Issues":[{"Id":"383346063","IsPullRequest":true,"CreatedAt":"2018-11-22T01:22:28","Actor":"pranavkm","Number":"2747","RawContent":null,"Title":"Fixup RazorInjectAttribute namespace","State":"closed","Body":"","Url":"https://github.com/aspnet/Razor/pull/2747","RelatedDescription":"Closed or merged PR \"Fixup RazorInjectAttribute namespace\" (#2747)"},{"Id":"381693314","IsPullRequest":false,"CreatedAt":"2018-11-22T00:52:34","Actor":"pranavkm","Number":"2734","RawContent":null,"Title":"RazorServerLog does not correctly log incoming parameters","State":"closed","Body":"Log looks like so:\r\n\r\n```\r\n--- PID=25180 TID=13 Ticks=187782265: Argument[0] = 'Microsoft.AspNetCore.Razor.Tools.RequestArgument'\r\n--- PID=25180 TID=13 Ticks=187782265: Argument[1] = 'Microsoft.AspNetCore.Razor.Tools.RequestArgument'\r\n--- PID=25180 TID=13 Ticks=187782265: Argument[2] = 'Microsoft.AspNetCore.Razor.Tools.RequestArgument'\r\n--- PID=25180 TID=13 Ticks=187782265: Argument[3] = 'Microsoft.AspNetCore.Razor.Tools.RequestArgument'\r\n```\r\n\r\nOverriding `RequestArgument.ToString` should help here.","Url":"https://github.com/aspnet/Razor/issues/2734","RelatedDescription":"Closed issue \"RazorServerLog does not correctly log incoming parameters\" (#2734)"},{"Id":"383245875","IsPullRequest":true,"CreatedAt":"2018-11-21T23:15:37","Actor":"rynowak","Number":"2745","RawContent":null,"Title":"Injest new Roslyn and do netstandard2.0/net472","State":"closed","Body":"Everywhere we run now supports net472 or netcoreapp3.0.\r\n\r\nI've changed all of the non-tooling packages to netstandard2.0 and all of the tooling packages to net472. VSCode work will continue from a branch based on net46 until Omnisharp upgrades.","Url":"https://github.com/aspnet/Razor/pull/2745","RelatedDescription":"Closed or merged PR \"Injest new Roslyn and do netstandard2.0/net472\" (#2745)"},{"Id":"383296956","IsPullRequest":true,"CreatedAt":"2018-11-21T21:24:37","Actor":"NTaylorMullen","Number":"2746","RawContent":null,"Title":"Add Microsoft.VisualStudio.LiveShare.Razor","State":"open","Body":"- Added `Microsoft.VisualStudio.LiveShare.Razor`\r\n- Added tests for the liveshare assembly.\r\n- Removed `GuestWorkspaceProvider` because its interface (`RazorLiveShareWorkspaceProvider`) will be implemented by LiveShare\r\n- Leaving `RazorGuestInitializationService` commented out until we have the file API from liveshare\r\n- Made the `RazorLiveShareWorkspaceProvider` public so it can be implemented on the LiveShare side.\r\n- Added LiveShare.Razor to the RazorExtension\r\n\r\n@rynowak First commit is a direct copy of Razor.LiveShare into this repo. Second commit is the modifications to the initial code dump to include it in Razor, i'd recommend looking at the second.\r\n\r\n@natemcmaster @ryanbrandenburg these are the bits i'm expecting my https://github.com/aspnet/AspNetCore/pull/4198 PR to enable to start generating packages for the LiveShare team (@srivatsn) to consume\r\nLeaving this PR open until all LiveShare dependencies are ready.","Url":"https://github.com/aspnet/Razor/pull/2746","RelatedDescription":"Open PR \"Add Microsoft.VisualStudio.LiveShare.Razor\" (#2746)"},{"Id":"383213495","IsPullRequest":false,"CreatedAt":"2018-11-21T17:02:06","Actor":"pranavkm","Number":"2744","RawContent":null,"Title":"2-phase compile in SDK follow up items","State":"open","Body":"* [ ] Make `ComponentTagHelperDescriptorProvider` not public.\r\n* [ ] `GenerateCommand` uses `IImportFeature` to locate imports. There is only one implementation of the interface today that returns `_ViewImports.cshtml`.\r\n* [ ] Need a nicer way to set `RazorCodeGenerationOptions`","Url":"https://github.com/aspnet/Razor/issues/2744","RelatedDescription":"Open issue \"2-phase compile in SDK follow up items\" (#2744)"},{"Id":"383211414","IsPullRequest":false,"CreatedAt":"2018-11-21T16:57:14","Actor":"pranavkm","Number":"2743","RawContent":null,"Title":"Figure out how ComponentDocumentClassifierPass knows what files are components","State":"open","Body":"The Sdk uses an `ItemGroup` to determine what constitutes a `RazorComponent`. By default, it's populated with files with a `.razor` extension, but we want this information to come from MSBuild evaluation. `ComponentDocumentClassifierPass` needs to know this information. In the 2-phase compile PR, this is done by adding a feature that sets a value `RazorCodeDocument.SetInputDocumentKind` and the classifier uses this to figure out if it needs to do a component. This needs to be designed correctly. Using this issue to track this work","Url":"https://github.com/aspnet/Razor/issues/2743","RelatedDescription":"Open issue \"Figure out how ComponentDocumentClassifierPass knows what files are components\" (#2743)"},{"Id":"380830646","IsPullRequest":true,"CreatedAt":"2018-11-21T16:14:18","Actor":"KirillOsenkov","Number":"2732","RawContent":null,"Title":"Hardcode two constants from Microsoft.VisualStudio.ImageCatalog.dll","State":"closed","Body":"This removes the runtime reference to ImageCatalog which is not available on VS for Mac.","Url":"https://github.com/aspnet/Razor/pull/2732","RelatedDescription":"Closed or merged PR \"Hardcode two constants from Microsoft.VisualStudio.ImageCatalog.dll\" (#2732)"},{"Id":"382480596","IsPullRequest":false,"CreatedAt":"2018-11-20T03:07:02","Actor":"NickCraver","Number":"2742","RawContent":null,"Title":"Discussion: bringing back @helper for views","State":"open","Body":"In porting some existing applications (from ASP.NET MVC 5), we're seeing immense amounts of pain with views that use `@helper` today. `@helper`, from the user view point, is a very simple way to use Razor templating to re-use some code. Perhaps to render a date a certain way, or a chart, or a graph, or whatever. As an example, Stack Overflow's codebase has 458 `@helper`s today.\r\n\r\nSome history:\r\n- [`@helper` was removed in #281](https://github.com/aspnet/Razor/issues/281) after findings in https://github.com/aspnet/Mvc/issues/1130\r\n- Parser errors were added in https://github.com/aspnet/Razor/issues/472,\r\n- A lot of user discussion in https://github.com/aspnet/Razor/issues/715, ultimate closed as \"We have no plans to do this\"\r\n\r\nBut `@helper` still lacks an equally (or even close) usable replacement. The alternatives I'm aware of today are:\r\n- [Tag Helpers](https://docs.microsoft.com/en-us/aspnet/core/mvc/views/tag-helpers/intro?view=aspnetcore-2.1) which involve writing C# per helper\r\n- [View Components](https://docs.microsoft.com/en-us/aspnet/core/mvc/views/view-components?view=aspnetcore-2.1) which involve writing C# and a view per helper\r\n- Using [a `dynamic` workaround](https://github.com/aspnet/Razor/issues/715#issuecomment-198456302) which isn't type safe and I'm not sure on the performance implications of\r\n- Build the string yourself, and hope you encode everything correctly\r\n\r\nThere are 2 ways `@helper` worked in ASP.NET MVC 5: globally from App_Data and in individual views. **I am only advocating for support of the latter**. IMO, Tag Helpers or view components (pick your flavor!) are excellent replacements for the global use case. That makes total sense and having another view file is also reasonable.\r\n\r\nLet's say we have a view today with 5 `@helper` sections in ASP.NET MVC 5. In ASP.NET Core, it's a regression. We have a few options:\r\n- Copy the code everywhere\r\n- Write a function rendering HTML strings (basically no Razor or safety for the helper)\r\n- Have a child view per helper, going from 1 view to 6, and 1 file to 6\r\n- Create a tag helper for each (5 classes...and again mostly removing HTML safety, or suffering overhead)\r\n- Use the `dynamic` approach, eat the performance, and hope it doesn't go boom at runtime\r\n\r\nNote: I am not sure about the performance differences on these. That needs to be tested. I'll try and get benchmarks going when time allows. I have a hard time imagining any of these would be as fast as what `@helper` used to do, though. But I take nothing for a given here...we need to benchmark, even if `@helper` isn't a candidate yet.\r\n\r\nA lot of users have chimed in on closed issues above. A lot of migration pain is being felt. Probably much more than was envisioned when `@helper` was removed. This is one of the largest issues I see in our migrations and it's something I'm really feeling right now. Is there a possibility we bring `@helper` or equivalent functionality (re-using some Razor templating inside the same view) back?\r\n\r\ncc @DamianEdwards @rynowak ","Url":"https://github.com/aspnet/Razor/issues/2742","RelatedDescription":"Open issue \"Discussion: bringing back @helper for views\" (#2742)"},{"Id":"382445596","IsPullRequest":false,"CreatedAt":"2018-11-20T00:13:37","Actor":"NTaylorMullen","Number":"2741","RawContent":null,"Title":"Directive completion when overlapping an existing Razor directive","State":"open","Body":"Razor directive completion doesn't work if you try and trigger auto-complete on an existing Razor directive. aka `@add|TagHelper` doesn't trig completion to show all of the TagHelper completions.","Url":"https://github.com/aspnet/Razor/issues/2741","RelatedDescription":"Open issue \"Directive completion when overlapping an existing Razor directive\" (#2741)"},{"Id":"382324074","IsPullRequest":true,"CreatedAt":"2018-11-19T23:53:54","Actor":"rynowak","Number":"2740","RawContent":null,"Title":"Update VS-only tooling to 4.7.2","State":"closed","Body":"","Url":"https://github.com/aspnet/Razor/pull/2740","RelatedDescription":"Closed or merged PR \"Update VS-only tooling to 4.7.2\" (#2740)"},{"Id":"381987733","IsPullRequest":false,"CreatedAt":"2018-11-18T18:45:14","Actor":"RushilLak","Number":"2739","RawContent":null,"Title":"rzc discover exited with code -1073741701.\t\t","State":"open","Body":"I'm running Visual Studio 2017 Community Edition. My project is a Hello World.  I have a single build error that refers to code that I didn't write myself (it's part of the template). The error is:\r\n\r\nrzc discover exited with code -1073741701.\r\nC:\\Users\\Rushil\\.nuget\\packages\\microsoft.aspnetcore.razor.design\\2.1.2\\build\\netstandard2.0\\Microsoft.AspNetCore.Razor.Design.CodeGeneration.targets\tLine 69.\r\n\r\nI copied the subsequent lines too because they form part of the same XML tag.\r\n\r\n```\r\n    <RazorTagHelper\r\n      Debug=\"$(_RazorDebugTagHelperTask)\"\r\n      DebugTool=\"$(_RazorDebugTagHelperTool)\"\r\n      ToolAssembly=\"$(_RazorToolAssembly)\"\r\n      UseServer=\"$(UseRazorBuildServer)\"\r\n      ForceServer=\"$(_RazorForceBuildServer)\"\r\n      SuppressCurrentUserOnlyPipeOptions=\"$(_RazorSuppressCurrentUserOnlyPipeOptions)\"\r\n      PipeName=\"$(_RazorBuildServerPipeName)\"\r\n      Version=\"$(RazorLangVersion)\"\r\n      Configuration=\"@(ResolvedRazorConfiguration)\"\r\n      Extensions=\"@(ResolvedRazorExtension)\"\r\n      Assemblies=\"@(RazorReferencePath)\"\r\n      ProjectRoot=\"$(MSBuildProjectDirectory)\"\r\n      TagHelperManifest=\"$(_RazorTagHelperOutputCache)\">\r\n      <Output\r\n        TaskParameter=\"TagHelperManifest\"\r\n        ItemName=\"FileWrites\"/>\r\n    </RazorTagHelper>\r\n```\r\n\r\nI have placed ```<UseRazorBuildServer>false</UseRazorBuildServer> ``` in my .csproj file but still I have the same error.\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n    <UseRazorBuildServer>false</UseRazorBuildServer>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.App\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Razor.Design\" Version=\"2.1.2\" PrivateAssets=\"All\" />\r\n  </ItemGroup>\r\n</Project>\r\n ``` \r\nCould you please help ? Thanks in advance","Url":"https://github.com/aspnet/Razor/issues/2739","RelatedDescription":"Open issue \"rzc discover exited with code -1073741701.\t\t\" (#2739)"},{"Id":"381799686","IsPullRequest":false,"CreatedAt":"2018-11-16T23:48:40","Actor":"pranavkm","Number":"2738","RawContent":null,"Title":"Update components build icrementalism test to check if the component definition cache is regenerated when the component definition changes","State":"open","Body":"Add a variant to  `BuildComponents_RegeneratesComponentDefinition_WhenFilesChange` that checks if the manifest.json is regenerated if the definition is updated","Url":"https://github.com/aspnet/Razor/issues/2738","RelatedDescription":"Open issue \"Update components build icrementalism test to check if the component definition cache is regenerated when the component definition changes\" (#2738)"},{"Id":"381762412","IsPullRequest":true,"CreatedAt":"2018-11-16T23:47:03","Actor":"ajaybhargavb","Number":"2737","RawContent":null,"Title":"Show Razor build errors in non build server scenarios","State":"closed","Body":"Without this, errors are not displayed in the console when build server isn't used.\r\n\r\nFixes https://github.com/aspnet/Razor/issues/2733","Url":"https://github.com/aspnet/Razor/pull/2737","RelatedDescription":"Closed or merged PR \"Show Razor build errors in non build server scenarios\" (#2737)"},{"Id":"381394645","IsPullRequest":false,"CreatedAt":"2018-11-16T23:47:03","Actor":"pranavkm","Number":"2733","RawContent":null,"Title":"Running rzc without build server does not include errors ","State":"closed","Body":"1. Add a parser error to a cshtml file\r\n2. Run `dotnet build /p:UseRazorBuildServer=false`\r\n\r\nExpected:\r\nShows parser diagnostics\r\n\r\nActual:\r\nA failure exit code without any parser diagnostics.\r\n\r\nThe bug's here: https://github.com/aspnet/Razor/blob/master/src/Microsoft.AspNetCore.Razor.Tools/Program.cs#L44-L47. In the Server equivalent, the command [returns the output to the caller](https://github.com/aspnet/Razor/blob/master/src/Microsoft.AspNetCore.Razor.Tools/CompilerHost.cs#L68-L71) which is printed to the output. This is missing in the standalone case.\r\n","Url":"https://github.com/aspnet/Razor/issues/2733","RelatedDescription":"Closed issue \"Running rzc without build server does not include errors \" (#2733)"},{"Id":"381731237","IsPullRequest":false,"CreatedAt":"2018-11-16T19:31:30","Actor":"pranavkm","Number":"2736","RawContent":null,"Title":"Avoid recompiling \\ resolving components if the declaration files are identical","State":"open","Body":"When doing a declaration-only build, we can often end up with file content that is identical to existing content (i.e. only the body of `BuildRenderTree` changed, but nothing outside of it). In such a case, we could avoid the work of recompiling the temp assembly and doing component discovery which should speed up things since resolving components tends to be fairly expensive.","Url":"https://github.com/aspnet/Razor/issues/2736","RelatedDescription":"Open issue \"Avoid recompiling \\ resolving components if the declaration files are identical\" (#2736)"},{"Id":"381708247","IsPullRequest":false,"CreatedAt":"2018-11-16T18:18:10","Actor":"pranavkm","Number":"2735","RawContent":null,"Title":"Use namespace specified in project system \\ MSBuild to calculate default namespace for components","State":"open","Body":"The current code uses the path to calculate the base namespace for RazorComponents. We should instead use the `RootNamespace` property specified in MSBuild","Url":"https://github.com/aspnet/Razor/issues/2735","RelatedDescription":"Open issue \"Use namespace specified in project system \\ MSBuild to calculate default namespace for components\" (#2735)"},{"Id":"380011251","IsPullRequest":true,"CreatedAt":"2018-11-14T19:02:43","Actor":"KirillOsenkov","Number":"2729","RawContent":null,"Title":"Update VSMac addin to MonoDevelop version 8.0 (current).","State":"closed","Body":"","Url":"https://github.com/aspnet/Razor/pull/2729","RelatedDescription":"Closed or merged PR \"Update VSMac addin to MonoDevelop version 8.0 (current).\" (#2729)"},{"Id":"380435372","IsPullRequest":true,"CreatedAt":"2018-11-14T17:14:23","Actor":"pranavkm","Number":"2731","RawContent":null,"Title":"Disable instrumentation pass with 3.0 configuration","State":"closed","Body":"","Url":"https://github.com/aspnet/Razor/pull/2731","RelatedDescription":"Closed or merged PR \"Disable instrumentation pass with 3.0 configuration\" (#2731)"},{"Id":"380010065","IsPullRequest":true,"CreatedAt":"2018-11-13T21:36:21","Actor":"pranavkm","Number":"2727","RawContent":null,"Title":"Add RazorLanguageVersion.3_0","State":"closed","Body":"Fixes https://github.com/aspnet/Razor/issues/2612","Url":"https://github.com/aspnet/Razor/pull/2727","RelatedDescription":"Closed or merged PR \"Add RazorLanguageVersion.3_0\" (#2727)"},{"Id":"380382948","IsPullRequest":true,"CreatedAt":"2018-11-13T19:27:12","Actor":"rynowak","Number":"2730","RawContent":null,"Title":"Add back legacy constructors used by live-share","State":"closed","Body":"Only the FAR code uses Older and Newer, most of our features still just\r\nrely on file paths, so this is fine because it won't be running in a\r\nlive-share scenario.\r\n\r\nOur live-share code constructs this eventargs type.","Url":"https://github.com/aspnet/Razor/pull/2730","RelatedDescription":"Closed or merged PR \"Add back legacy constructors used by live-share\" (#2730)"},{"Id":"380010889","IsPullRequest":false,"CreatedAt":"2018-11-13T19:13:35","Actor":"KirillOsenkov","Number":"2728","RawContent":null,"Title":"Build error: IntegrationTestBase.cs(130,8): Target frameworks need to be updated","State":"closed","Body":"1. `git clone https://github.com/aspnet/razor`\r\n2. `nuget restore`\r\n3. `msbuild /bl`\r\n\r\n**Expected:**\r\nbuilds fine\r\n\r\n**Actual:**\r\n```\r\nErrors\r\n    Language\\IntegrationTests\\IntegrationTestBase.cs(130,8): error CS1029: #error: 'Target frameworks need to be updated            ' [C:\\razor\\test\\Microsoft.AspNetCore.Razor.Test.Common\\Microsoft.AspNetCore.Razor.Test.Common.csproj]\r\n    Language\\Legacy\\ParserTestBase.cs(74,8): error CS1029: #error: 'Target frameworks need to be updated.' [C:\\razor\\test\\Microsoft.AspNetCore.Razor.Test.Common\\Microsoft.AspNetCore.Razor.Test.Common.csproj]\r\n```\r\n\r\nThis is because neither `NETFRAMEWORK` nor `NETCOREAPP` define is defined. \r\n\r\nI realize the instructions say to use build.cmd (which will eventually call run.ps1 which will use KoreBuild), however it feels like it's very close to be able to build just by using nuget restore + msbuild.\r\n\r\nI'm filing this bug in hope that there's an easy default somewhere that will allow this repo to build by just calling `msbuild /r`. This is an ideal that repos in our ecosystem should strive towards, because custom tooling such as build.cmd or KoreBuild is not standard and so creates barriers that are probably avoidable.","Url":"https://github.com/aspnet/Razor/issues/2728","RelatedDescription":"Closed issue \"Build error: IntegrationTestBase.cs(130,8): Target frameworks need to be updated\" (#2728)"},{"Id":"379376763","IsPullRequest":false,"CreatedAt":"2018-11-10T01:43:03","Actor":"ajaybhargavb","Number":"2726","RawContent":null,"Title":"Whitespace between two RazorComments should be markup","State":"open","Body":"```HTML\r\n<div>@* Comment1 *@|    |@* Comment2 *@</div>\r\n```\r\nIn the above case, the whitespace between the two comments should be rendered but it is not.\r\n\r\nWe did a related change years ago https://github.com/aspnet/Razor/issues/428. \r\n\r\nAlso, this is a low priority issue as this has been the behavior forever and no one has asked for this.","Url":"https://github.com/aspnet/Razor/issues/2726","RelatedDescription":"Open issue \"Whitespace between two RazorComments should be markup\" (#2726)"},{"Id":"379361761","IsPullRequest":true,"CreatedAt":"2018-11-10T01:07:56","Actor":"ajaybhargavb","Number":"2725","RawContent":null,"Title":"Upgrade Razor vsix project","State":"closed","Body":"Without this the Razor Extension project won't load in dev16","Url":"https://github.com/aspnet/Razor/pull/2725","RelatedDescription":"Closed or merged PR \"Upgrade Razor vsix project\" (#2725)"},{"Id":"379283268","IsPullRequest":true,"CreatedAt":"2018-11-09T19:51:40","Actor":"pranavkm","Number":"2722","RawContent":null,"Title":"SDK does not correctly resolve RazorExtension when multiple instances…","State":"closed","Body":"… of RazorConfiguration are present\r\n\r\nFixes https://github.com/aspnet/Razor/issues/2721","Url":"https://github.com/aspnet/Razor/pull/2722","RelatedDescription":"Closed or merged PR \"SDK does not correctly resolve RazorExtension when multiple instances…\" (#2722)"},{"Id":"379282679","IsPullRequest":false,"CreatedAt":"2018-11-09T19:51:40","Actor":"pranavkm","Number":"2721","RawContent":null,"Title":"SDK does not correctly resolve RazorExtension when multiple instances of RazorConfiguration are present","State":"closed","Body":"This is a bug in how we do filtering here: https://github.com/aspnet/Razor/blob/master/src/Microsoft.NET.Sdk.Razor/build/netstandard2.0/Sdk.Razor.CurrentVersion.targets#L282-L284\r\n\r\nIn addition, there's also an issue when multiple instances of `RazorConfiguration` with the same identity are resolved. This occurs in our interim builds when projects target `netcoreapp3.0` but resolve a `Microsoft.AspNetCore.App v2.x`. We can do a small fix to do a better job here.","Url":"https://github.com/aspnet/Razor/issues/2721","RelatedDescription":"Closed issue \"SDK does not correctly resolve RazorExtension when multiple instances of RazorConfiguration are present\" (#2721)"},{"Id":"379288788","IsPullRequest":true,"CreatedAt":"2018-11-09T19:35:19","Actor":"ajaybhargavb","Number":"2724","RawContent":null,"Title":"Skip test","State":"closed","Body":"Skipping this test to unblock CI while we investigate further","Url":"https://github.com/aspnet/Razor/pull/2724","RelatedDescription":"Closed or merged PR \"Skip test\" (#2724)"},{"Id":"379287782","IsPullRequest":false,"CreatedAt":"2018-11-09T19:15:16","Actor":"ajaybhargavb","Number":"2723","RawContent":null,"Title":"Investigate and update rzc test to react to netcoreapp3.0 changes","State":"open","Body":"This test https://github.com/aspnet/Razor/blob/master/test/Microsoft.NET.Sdk.Razor.Test/IntegrationTests/BuildServerIntegrationTest.cs#L118 has started behaving differently and one of our assumptions about Mutex constructor no longer seems to be true. Need to investigate and update the test.","Url":"https://github.com/aspnet/Razor/issues/2723","RelatedDescription":"Open issue \"Investigate and update rzc test to react to netcoreapp3.0 changes\" (#2723)"},{"Id":"378965269","IsPullRequest":true,"CreatedAt":"2018-11-09T00:08:42","Actor":"ajaybhargavb","Number":"2720","RawContent":null,"Title":"Port new vs completion changes from rel/vs16.0 branch","State":"closed","Body":"Without this, directive completion is broken when we F5 master on VS.","Url":"https://github.com/aspnet/Razor/pull/2720","RelatedDescription":"Closed or merged PR \"Port new vs completion changes from rel/vs16.0 branch\" (#2720)"},{"Id":"378963498","IsPullRequest":false,"CreatedAt":"2018-11-08T23:39:51","Actor":"NTaylorMullen","Number":"2719","RawContent":null,"Title":"Can't install Razor tooling VSIX locally on dev16.","State":"open","Body":"The install fails stating it expects MPF15 to be available which it isn't.","Url":"https://github.com/aspnet/Razor/issues/2719","RelatedDescription":"Open issue \"Can't install Razor tooling VSIX locally on dev16.\" (#2719)"},{"Id":"378851118","IsPullRequest":true,"CreatedAt":"2018-11-08T19:35:12","Actor":"dotnet-maestro-bot","Number":"2718","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @natemcmaster\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Razor merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Razor merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Razor merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Razor/pull/2718","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2718)"}],"ResultType":"GitHubIssue"},"Templates-Issues":{"Issues":[{"Id":"233959214","IsPullRequest":false,"CreatedAt":"2018-09-20T20:23:28","Actor":"mlorbetske","Number":"850","RawContent":null,"Title":"File new default names inconsistency.","State":"closed","Body":"_From @Bartmax on July 24, 2015 2:48_\n\nAll items in the file new dialog (client side) default names kind of follows a pattern but it's not consistent:\n\nStyleSheet.css\nJavaScript.js\nhtmlpage.html (all lowercase)\nCoffeeScript.coffee\njson-schema.json\npackage.json\netc.\n\nSome must have a specific name (like package.json) while others just reflect the file type. \n\nI see 2 inconsistencies here:\n\n1) casing is inconsistent.\n2) TypeScript it suggest file.ts instead of TypeScript.ts\n\n\n_Copied from original issue: aspnet/Tooling#118_","Url":"https://github.com/aspnet/Templates/issues/850","RelatedDescription":"Closed issue \"File new default names inconsistency.\" (#850)"},{"Id":"255851740","IsPullRequest":false,"CreatedAt":"2018-09-20T20:23:20","Actor":"marcusien","Number":"867","RawContent":null,"Title":"Cannot force version of the template to install","State":"closed","Body":"Hi,\r\n\r\nMaybe there's something not documented but I'd like to install a version of my own template in a specific version.\r\n\r\nWe are creating our own template for our project and we create prerelease packages for our template using semver. The problem is with \"dotnet new -i\" command, we cannot specify a specific version","Url":"https://github.com/aspnet/Templates/issues/867","RelatedDescription":"Closed issue \"Cannot force version of the template to install\" (#867)"},{"Id":"264318035","IsPullRequest":true,"CreatedAt":"2018-09-20T20:23:13","Actor":"scottsauber","Number":"870","RawContent":null,"Title":"Change Lockout wording of comment","State":"closed","Body":"The Razor Pages Identity template turns on Lockout by default, unlike the MVC one.  This comment is left over from the MVC one and it no longer lines up with what is configured in the template.  I've reworded it to be accurate.  I can change it to just remove the comment all together if you want.","Url":"https://github.com/aspnet/Templates/pull/870","RelatedDescription":"Closed or merged PR \"Change Lockout wording of comment\" (#870)"},{"Id":"266880667","IsPullRequest":true,"CreatedAt":"2017-10-24T21:42:12","Actor":"s-whaley","Number":"873","RawContent":null,"Title":"Account AccessDenied View Razor Syntax Bug Fix","State":"closed","Body":"views/account/accessdenied ViewData[title] missing @ symbol","Url":"https://github.com/aspnet/Templates/pull/873","RelatedDescription":"Closed or merged PR \"Account AccessDenied View Razor Syntax Bug Fix\" (#873)"},{"Id":"267855162","IsPullRequest":false,"CreatedAt":"2017-10-24T19:00:48","Actor":"ezeasharma","Number":"874","RawContent":null,"Title":"The project file could not be loaded for csproj","State":"closed","Body":"I migrated my .netcore 1.1 proj to 2.0 using this link https://docs.microsoft.com/en-us/aspnet/core/migration/1x-to-2x/\r\n\r\nbut when i perform \"dotnet restore -v d\" i get the following error:\r\n\r\n```\r\nBuild started 10/23/2017 19:57:01.\r\n     1>Project \"someproj.csproj\" on node 1 (Restore target(s)).\r\n     1>Building with tools version \"15.0\".\r\n     1>someproj.csproj(1,1): error MSB4025: The project file could not be loaded. Data at the root level is invalid. Line 1, position 1.\r\n     1>Done Building Project \"someproj.csproj\" (Restore target(s)) -- FAILED.\r\n\r\nBuild FAILED.\r\n\r\n       \"/someproj/someproj.csproj\" (Restore target) (1) ->\r\n         /someproj.csproj(1,1): error MSB4025: The project file could not be loaded. Data at the root level is invalid. Line 1, position 1.\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n```\r\n\r\nHere is the output for dotnet --info\r\n\r\n```\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.12\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.0.0/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n\r\nThis is my csproj file\r\n```\r\n\r\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"yes\"?>\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Folder Include=\"wwwroot\\\" />\r\n    <Folder Include=\"swagger_static\\\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Serilog\" Version=\"2.4.0\" />\r\n    <PackageReference Include=\"Serilog.Extensions.Logging\" Version=\"1.4.0\" />\r\n    <PackageReference Include=\"Serilog.Sinks.Console\" Version=\"2.1.0\" />\r\n    <PackageReference Include=\"Swashbuckle.AspNetCore\" Version=\"1.0.0\" />\r\n    <PackageReference Include=\"Dapper\" Version=\"1.50.2\" />\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.2\" />\r\n    <PackageReference Include=\"System.Threading\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"Newtonsoft.Json\" Version=\"10.0.3\" />\r\n  </ItemGroup>\r\n  <ItemGroup>\r\n  <DotNetCliToolReference Include=\"Microsoft.EntityFrameworkCore.Tools.DotNet\" Version=\"2.0.0\" />\r\n  <DotNetCliToolReference Include=\"Microsoft.Extensions.SecretManager.Tools\" Version=\"2.0.0\" />\r\n  <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.0\" />\r\n</ItemGroup>\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\..\\..\\..\\recon.curator.common\\recon.curator.common.csproj\" />\r\n    <ProjectReference Include=\"..\\..\\..\\..\\recon.curator.service\\recon.curator.service.csproj\" />\r\n  </ItemGroup>\r\n</Project>\r\n```","Url":"https://github.com/aspnet/Templates/issues/874","RelatedDescription":"Closed issue \"The project file could not be loaded for csproj\" (#874)"},{"Id":"232879172","IsPullRequest":false,"CreatedAt":"2017-10-24T16:37:14","Actor":"a-elnajjar","Number":"847","RawContent":null,"Title":"Post test ","State":"closed","Body":"Hi asp.net Team;\r\nI see your Templates/test/Microsoft.Web.Templates.Web.Tests/WebAPITests.cs only have tow test methods for testing and verify GET Web API is working. I want to ask can I add testing and verify methods for POST Web API?","Url":"https://github.com/aspnet/Templates/issues/847","RelatedDescription":"Closed issue \"Post test \" (#847)"},{"Id":"252192148","IsPullRequest":false,"CreatedAt":"2017-10-24T16:36:47","Actor":"Dave3of5","Number":"864","RawContent":null,"Title":"Authentication on SPA apps","State":"closed","Body":"There seems to be no template for authentication on the SPA templates.\r\n\r\nI've been looking up various blog post and third party articles on how to add Jwt Authentication but they are scattered and most are for dotnet core 1.1. It would be nice if there was a template that showed the \"correct\" way to do this in dotnet core 2.0.","Url":"https://github.com/aspnet/Templates/issues/864","RelatedDescription":"Closed issue \"Authentication on SPA apps\" (#864)"},{"Id":"252376700","IsPullRequest":false,"CreatedAt":"2017-10-24T16:36:23","Actor":"pejta2207","Number":"865","RawContent":null,"Title":"Account/ConfirmEmail - NullReferenceException in Error.cshtml when providing incorrect token","State":"closed","Body":"**Description**\r\nThe issue is related to Individual Accounts Authentication template. It seems that providing incorrect authentication code for ConfirmEmail action in AccountController (e.g. token which already expired) should result in displaying error page. However, Razor throws an exception while generating the default error view:\r\n\r\n```\r\nNullReferenceException: Object reference not set to an instance of an object.\r\nAspNetCore._Views_Shared_Error_cshtml+<ExecuteAsync>d__0.MoveNext() in Error.cshtml, line 9\r\n```\r\n\r\n**Steps to reproduce**\r\n1. Create new project with Individual Accounts Authentication template.\r\n2. Run the application.\r\n3. Register any user via the registration form.\r\n4. Retrieve UserId of the registered user.\r\n5. Try to confirm email with incorrect token, e.g. http://localhost:PORT/Account/ConfirmEmail?UserId={UserId}&Code=INVALID_CODE\r\n\r\n**Further technical details**\r\nIt's probably caused by the last line in ConfirmEmail action in AccountController:\r\n```\r\nvar result = await _userManager.ConfirmEmailAsync(user, code);\r\nreturn View(result.Succeeded ? \"ConfirmEmail\" : \"Error\");\r\n```\r\n\r\nWhen invalid token is passed, Error view is not provided with `ErrorViewModel`. When `Model` is accessed in 9th line of Error.cshtml (`@if (Model.ShowRequestId)`), it throws NullReferenceException.","Url":"https://github.com/aspnet/Templates/issues/865","RelatedDescription":"Closed issue \"Account/ConfirmEmail - NullReferenceException in Error.cshtml when providing incorrect token\" (#865)"},{"Id":"260997320","IsPullRequest":false,"CreatedAt":"2017-10-24T16:36:05","Actor":"joeaudette","Number":"868","RawContent":null,"Title":"IEmailSender should have explicitly named parameters for html vs plain text","State":"closed","Body":"There have been a number of people reporting bugs about the email confirmation link in the StarterWeb template not working.\r\n\r\nThis is happening because people implement IEmailSender and don't realize that the message being passed in is html. When they send the email as plain text the confirmation link does not work because of the url encoding.\r\n\r\nI think the \"message\" parameter of SendEmailAsync should be renamed to htmlMessage and possibly should have an additional parameter for \"plainTextMessage\" and both should be passed in from AccountController.\r\n\r\nThis would make it more clear to implementors of IEmailSender what kind of string(s) they are dealing with and how to correctly implement it.\r\n\r\nrelated issues:\r\nhttps://github.com/aspnet/Home/issues/2152\r\nhttps://github.com/aspnet/Home/issues/2217","Url":"https://github.com/aspnet/Templates/issues/868","RelatedDescription":"Closed issue \"IEmailSender should have explicitly named parameters for html vs plain text\" (#868)"},{"Id":"268102418","IsPullRequest":false,"CreatedAt":"2017-10-24T16:35:17","Actor":"Eilon","Number":"875","RawContent":null,"Title":"This repo is OBSOLETE - please see the README file for information","State":"open","Body":"Please refer to the README at https://github.com/aspnet/Templates for information.","Url":"https://github.com/aspnet/Templates/issues/875","RelatedDescription":"Open issue \"This repo is OBSOLETE - please see the README file for information\" (#875)"},{"Id":"266114525","IsPullRequest":false,"CreatedAt":"2017-10-21T00:03:24","Actor":"tverboon","Number":"872","RawContent":null,"Title":"Unnecessary User.Id provided in password reset link?","State":"closed","Body":"The user Id is provided in the callback link:\r\n\r\nhttps://github.com/aspnet/Templates/blob/f237bb024e1c8f05a7d78c215be2224022d2c153/template_feed/Microsoft.DotNet.Web.ProjectTemplates.2.0/content/StarterWeb-CSharp/Controllers/AccountController.cs#L424\r\n\r\nBut in the controller action only code is used:\r\nhttps://github.com/aspnet/Templates/blob/f237bb024e1c8f05a7d78c215be2224022d2c153/template_feed/Microsoft.DotNet.Web.ProjectTemplates.2.0/content/StarterWeb-CSharp/Controllers/AccountController.cs#L443\r\n\r\nIn my opinion it's better not to provide more information than necessary.","Url":"https://github.com/aspnet/Templates/issues/872","RelatedDescription":"Closed issue \"Unnecessary User.Id provided in password reset link?\" (#872)"},{"Id":"265394026","IsPullRequest":false,"CreatedAt":"2017-10-13T20:09:16","Actor":"jkotalik","Number":"871","RawContent":null,"Title":"Add HttpsRedirection and HSTS middleware template","State":"closed","Body":"With https://github.com/aspnet/BasicMiddleware/pull/264 being added, @Eilon asked me to write templates for this feature.\r\ncc/ @javiercn @Tratcher ","Url":"https://github.com/aspnet/Templates/issues/871","RelatedDescription":"Closed issue \"Add HttpsRedirection and HSTS middleware template\" (#871)"},{"Id":"262627101","IsPullRequest":false,"CreatedAt":"2017-10-04T00:00:30","Actor":"Rick-Anderson","Number":"869","RawContent":null,"Title":"QR Codes should be supported in templates","State":"closed","Body":"[Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes)\r\n\r\nThat should be supported in the templates like [SMS 2FA](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/2fa) used to be. \r\n\r\nrequested by customer in [Enabling QR Code generation for authenticator apps](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-enable-qrcodes) comments","Url":"https://github.com/aspnet/Templates/issues/869","RelatedDescription":"Closed issue \"QR Codes should be supported in templates\" (#869)"},{"Id":"254163608","IsPullRequest":false,"CreatedAt":"2017-09-07T12:16:42","Actor":"elAndyG","Number":"866","RawContent":null,"Title":"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)","State":"closed","Body":"After updating angular to 4.3.6, an internal server error begins to throw \"NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor.\"\r\n\r\nSteps to reproduce:\r\n1. cmd to c:\\\r\n2. dotnet --version \r\n_2.0.0_\r\n3. mkdir dummy\r\n4. cd dummy\r\n5. dotnet new angular\r\n6. dotnet restore\r\n7. npm install\r\n8. dotnet run (prove it works)\r\n8a. ctrl+c to stop the server/build\r\n9. update all @angular from \"4.2.5\" to \"4.3.6\"\r\n10. npm update\r\n11. dotnet run\r\n...You should now crash... (see below)\r\n12. change 4.3.6 back to 4.2.5 and \r\nrepeat 10 and 11.\r\nYou should now work again.\r\n\r\nPlease let me know i there's anything else i can provide to help. Thank you!\r\n\r\n`NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]).\r\n Error: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]). at Error (native) at syntaxError (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:37092:34) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getDependenciesMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51159:35) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getTypeMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51027:26) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getInjectableMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51013:21) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getProviderMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51304:40) at C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51233:49 at Array.forEach (native) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getProvidersMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51193:19) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getNgModuleMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:50848:50)\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance+<InvokeExportAsync>d__7.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance+<InvokeExportAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.SpaServices.Prerendering.PrerenderTagHelper+<ProcessAsync>d__29.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner+<RunAsync>d__0.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nAspNetCore._Views_Home_Index_cshtml+<ExecuteAsync>d__12.MoveNext() in Index.cshtml\r\n+\r\n    ViewData[\"Title\"] = \"Home Page\";\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageCoreAsync>d__16.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__21.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()`\r\n","Url":"https://github.com/aspnet/Templates/issues/866","RelatedDescription":"Closed issue \"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)\" (#866)"},{"Id":"251697737","IsPullRequest":true,"CreatedAt":"2017-08-22T14:57:33","Actor":"phenning","Number":"862","RawContent":null,"Title":"Use template engine templates","State":"closed","Body":"","Url":"https://github.com/aspnet/Templates/pull/862","RelatedDescription":"Closed or merged PR \"Use template engine templates\" (#862)"},{"Id":"251783689","IsPullRequest":false,"CreatedAt":"2017-08-21T22:59:07","Actor":"GoshaFighten","Number":"863","RawContent":null,"Title":"Can't compile the devextreme-angular package in the Production mode using the ASP.NET Core 2.0 Angular template","State":"closed","Body":"This issue relates to the [one](https://github.com/DevExpress/devextreme-angular/issues/534). I've created an Angular application using .NET Core 2.0. The issue is reproducible regardless if I use Visual Studio 2017 15.3 or `dotnet new angular`. Everything works fine in the Development mode. But, once I publish my application with the [DevExtreme Angular](https://github.com/DevExpress/devextreme-angular) package using `dotnet publish -c Release`, I'm getting the following error:\r\n\r\n```\r\n      ERROR in ./$$_gendir/~/devextreme-angular/ui/data-grid.ngfactory.ts\r\n      Module parse failed: D:\\FromCustomers\\GH534\\NGCore\\NGCore\\$$_gendir\\node_modules\\devextreme-angular\\ui\\data-grid.ngfactory.ts Unexpected token (63:38)\r\n      You may need an appropriate loader to handle this file type.\r\n      | import * as i52 from 'devextreme-angular/core/iterable-differ-helper';\r\n      | import * as i53 from 'devextreme-angular/core/nested-option';\r\n      | export const DxDataGridModuleNgFactory:i0.NgModuleFactory<i1.DxDataGridModule> = i0.╔╡cmf(i1.DxDataGridModule,\r\n      |     ([] as any[]),(_l:any) => {\r\n      |       return i0.╔╡mod([i0.╔╡mpd(512,i0.ComponentFactoryResolver,i0.╔╡CodegenComponentFactoryResolver,\r\n       @ ./$$_gendir/ClientApp/app/components/fetchdata/fetchdata.component.ngfactory.ts 8:0-102\r\n       @ ./$$_gendir/ClientApp/app/app.module.server.ngfactory.ts\r\n       @ ./ClientApp/boot.server.ts\r\nD:\\FromCustomers\\GH534\\NGCore\\NGCore\\NGCore.csproj(41,5): error MSB3073: The command \"node node_modules/webpack/bin/webpack.js --env.prod\" exited with code 2.\r\n```\r\n\r\nI added\r\n\r\n```\r\n\"devextreme\": \"^17.1.5\",\r\n\"devextreme-angular\": \"^17.1.5\",\r\n```\r\n\r\nto the `package.json` file. Then, I added DevExtreme CSS files to the `webpack.config.vendor.js` as\r\n\r\n```\r\nconst nonTreeShakableModules = [\r\n    'bootstrap',\r\n    'bootstrap/dist/css/bootstrap.css',\r\n    'es6-promise',\r\n    'es6-shim',\r\n    'event-source-polyfill',\r\n    'jquery',\r\n    'devextreme/dist/css/dx.common.css',\r\n    'devextreme/dist/css/dx.light.css'\r\n];\r\n```\r\n\r\nIf instead of the following line in the webpack.config.js file\r\n\r\n```\r\n{ test: /\\.ts$/, include: /ClientApp/, use: isDevBuild ? ['awesome-typescript-loader?silent=true', 'angular2-template-loader'] : '@ngtools/webpack' },\r\n```\r\n\r\nI use\r\n\r\n```\r\n{ test: /\\.ts$/, use: isDevBuild ? ['awesome-typescript-loader?silent=true', 'angular2-template-loader'] : '@ngtools/webpack' },\r\n```\r\n\r\nor\r\n\r\n```\r\n{ test: /\\.ts$/, include: /ClientApp/, use: ['awesome-typescript-loader?silent=true', 'angular2-template-loader'] },\r\n```\r\n\r\neverything works fine. A similar configuration in a project created using Angular CLI works fine as well.\r\n\r\nThe attached `NGCore` project illustrates the issue and `test-app` created with Angular CLI illustrates that this works in a standard Angular CLI project after I call `ng eject`.\r\n\r\nWhat can be the problem here? Is it in DevExtreme modules or in your webpack configuration?\r\n[test-app.zip](https://github.com/aspnet/Templates/files/1240256/test-app.zip)\r\n[NGCore.zip](https://github.com/aspnet/Templates/files/1240259/NGCore.zip)\r\n\r\n","Url":"https://github.com/aspnet/Templates/issues/863","RelatedDescription":"Closed issue \"Can't compile the devextreme-angular package in the Production mode using the ASP.NET Core 2.0 Angular template\" (#863)"},{"Id":"248880384","IsPullRequest":false,"CreatedAt":"2017-08-09T00:05:00","Actor":"Rick-Anderson","Number":"861","RawContent":null,"Title":"Razor Page scaffolder should add `@page \"{id:int}\"` directive","State":"closed","Body":"The RP scaffolder should add `@page \"{id:int}\"` directive so generated links pass the ID as route data, not query strings.\r\n\r\n","Url":"https://github.com/aspnet/Templates/issues/861","RelatedDescription":"Closed issue \"Razor Page scaffolder should add `@page \"{id:int}\"` directive\" (#861)"},{"Id":"248842171","IsPullRequest":false,"CreatedAt":"2017-08-08T20:59:26","Actor":"Rick-Anderson","Number":"860","RawContent":null,"Title":"Razor Pages scaffolder eats    DbUpdateConcurrencyException","State":"closed","Body":"Expected behavior:\r\nScaffolder should correctly handle `DbUpdateConcurrencyException`\r\n\r\nActual behavior:\r\n`DbUpdateConcurrencyException` is caught and ignored.\r\n\r\nTo repro: \r\n\r\n* Create a RP project and add a model.\r\n* [Scaffold the model](https://docs.microsoft.com/en-us/aspnet/core/tutorials/razor-pages/model#add-scaffold-tooling-and-perform-initial-migration)\r\n\r\nThe *Edit.cshtml.cs* file contains the following code:\r\n\r\n```cs\r\npublic async Task<IActionResult> OnPostAsync()\r\n{\r\n    if (!ModelState.IsValid)\r\n    {\r\n        return Page();\r\n    }\r\n\r\n    _context.Attach(Movie).State = EntityState.Modified;\r\n\r\n    try\r\n    {\r\n        await _context.SaveChangesAsync();\r\n    }\r\n    catch (DbUpdateConcurrencyException)\r\n    {\r\n        \r\n    }\r\n\r\n    return RedirectToPage(\"./Index\");\r\n}\r\n```\r\nIt should be\r\n\r\n```cs\r\ncatch (DbUpdateConcurrencyException)\r\n        {\r\n            if (!MovieExists(movie.ID))\r\n            {\r\n                return NotFound();\r\n            }\r\n            else\r\n            {\r\n                throw;\r\n            }\r\n        }\r\n```\r\n","Url":"https://github.com/aspnet/Templates/issues/860","RelatedDescription":"Closed issue \"Razor Pages scaffolder eats    DbUpdateConcurrencyException\" (#860)"},{"Id":"248139089","IsPullRequest":false,"CreatedAt":"2017-08-08T04:05:18","Actor":"alexavrutin","Number":"859","RawContent":null,"Title":"r1","State":"closed","Body":"","Url":"https://github.com/aspnet/Templates/issues/859","RelatedDescription":"Closed issue \"r1\" (#859)"},{"Id":"238353055","IsPullRequest":false,"CreatedAt":"2017-08-03T18:01:57","Actor":"stevedesmond-ca","Number":"851","RawContent":null,"Title":"Why do non-sentence headers end in a period?","State":"closed","Body":"See https://github.com/aspnet/Templates/blob/dev/src/Rules/StarterWeb/IndividualAuth/Views/Account/ResetPasswordConfirmation.cshtml as an example -- almost all the `<h1>`s have periods after them, when they should more likely be Title Case with no period.","Url":"https://github.com/aspnet/Templates/issues/851","RelatedDescription":"Closed issue \"Why do non-sentence headers end in a period?\" (#851)"},{"Id":"247185643","IsPullRequest":false,"CreatedAt":"2017-08-03T17:58:29","Actor":"Rick-Anderson","Number":"858","RawContent":null,"Title":"Razor Page templates use fully qualified name ","State":"closed","Body":"The constructor uses the FQN when it's not necessary. For example:\r\n\r\nSee [Pages/Movie/Index.cshtml.cs](https://github.com/aspnet/Docs/blob/master/aspnetcore/tutorials/razor-pages/razor-pages-start/sample/RazorPagesMovie/Pages/Movie/Index.cshtml.cs#L14-L16)\r\n\r\n`using RazorPagesMovie.Models;` is in the template.\r\n\r\nTo repro - follow the [Razor Pages tutorial](https://docs.microsoft.com/en-us/aspnet/core/tutorials/razor-pages/model)\r\n","Url":"https://github.com/aspnet/Templates/issues/858","RelatedDescription":"Closed issue \"Razor Page templates use fully qualified name \" (#858)"},{"Id":"246217674","IsPullRequest":false,"CreatedAt":"2017-08-03T17:56:43","Actor":"Rick-Anderson","Number":"857","RawContent":null,"Title":"Templates should use app.UseMvcWithDefaultRoute();","State":"closed","Body":"I recommend the templates use `app.UseMvcWithDefaultRoute();` rather than\r\n\r\n```csharp\r\napp.UseMvc(routes =>\r\n{\r\n    routes.MapRoute(\r\n        name: \"default\",\r\n        template: \"{controller}/{action=Index}/{id?}\");\r\n});\r\n```\r\n\r\nThe more complex code is a barrier to entry for new users who don't need this flexibility. Advanced users will have no problem adding the above code when they need it. The code above doesn't make much sense to Razor Pages developers. Recommend this change for all templates but especially for the Razor Pages template.\r\n\r\ncc @DamianEdwards  - part of the lower the barrier to entry effort.","Url":"https://github.com/aspnet/Templates/issues/857","RelatedDescription":"Closed issue \"Templates should use app.UseMvcWithDefaultRoute();\" (#857)"},{"Id":"244917331","IsPullRequest":false,"CreatedAt":"2017-08-03T17:55:35","Actor":"RehanSaeed","Number":"856","RawContent":null,"Title":"Sharing Common Files Between Templates","State":"closed","Body":"I have a ReadMe.html file which I'd like to share between my project templates. The file is mostly the same for all three templates, except that it contains a few symbols common to all my templates. I'd like to keep one copy of this file and use symbols to define template specific sections.\r\n```\r\n<html>\r\n<p>Common paragraph...</p>\r\n<!--#if MyTemplate1-->\r\n<p>MyTemplate1 paragraph...</p>\r\n<!--#endif-->\r\n<!--#if MyTemplate2-->\r\n<p>MyTemplate2 paragraph...</p>\r\n<!--#endif-->\r\n</html>\r\n```\r\n\r\nI can think of a way this might work without any help from the templating engine: Keep a common copy of the file, then copy the file into the template folders as a pre-packaging step in my build script. The disadvantage is that now I have three copies of my file unless I use a .gitignores file but then I have the extra step of having to remove the .gitignores file from the template output.\r\n\r\nI propose that you should be able to add a file as a link, then mark that file as common in your template.json file. Finally, when generating the project, the file is converted from a linked file, into a real one.\r\n","Url":"https://github.com/aspnet/Templates/issues/856","RelatedDescription":"Closed issue \"Sharing Common Files Between Templates\" (#856)"},{"Id":"244134597","IsPullRequest":false,"CreatedAt":"2017-08-03T17:30:02","Actor":"jkotalik","Number":"855","RawContent":null,"Title":"File new template error for Windows 8.1 32 bit for individual auth.","State":"closed","Body":"Steps:\r\n\r\n1. Download VS2017 Int Preview and dotnet preview3 on Windows 8.1 32 bit.\r\n2. File new... ASP.NET Core app, Web Application with Individual User Accounts Authorization\r\n3. Run application, try to register a new user\r\n\r\nExpected Results: A page would show up saying to apply migrations to the database or the user is registered.\r\nActual Results: SqlException on the SQL Server not being found. \r\n![4fce5f97](https://user-images.githubusercontent.com/8302101/28383504-3b7bf12c-6c76-11e7-91d0-5fe2675924a2.PNG)\r\n\r\n\r\nThe fix I had to do was change the ConnectionStrings' DefaultConnection from mssqllocaldb to ProjectsV12. \r\n\r\nMost likely, we would need to change https://github.com/aspnet/Templates/blob/a594b47c417593d43141d3b4eb2bc41d6ad85f20/src/Rules/StarterWeb/IndividualAuth/appsettings.json#L3 to use a variable for the database.","Url":"https://github.com/aspnet/Templates/issues/855","RelatedDescription":"Closed issue \"File new template error for Windows 8.1 32 bit for individual auth.\" (#855)"},{"Id":"244047453","IsPullRequest":false,"CreatedAt":"2017-07-20T08:45:31","Actor":"dazinator","Number":"854","RawContent":null,"Title":"typescript confiugration file item template","State":"closed","Body":"When the typescript configuration file is added to a project, by default it is \"content\" which also by default means it ends up being included in the nuget package when you do a `dotnet pack`. Given that the typescript configuration file is used primarily at build time, I don't think it should be included in a resulting nuget pack by default. Can it be changed to create this in the `csproj`:\r\n\r\n```\r\n <ItemGroup>\r\n    <Content Update=\"Scripts\\tsconfig.json\">\r\n      <Pack>false</Pack>\r\n    </Content>\r\n  </ItemGroup>\r\n```\r\n\r\nWithout this, if another project takes a dependency on this nuget package, you get build errors like this:\r\n\r\n```\r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tTS18003\tBuild:No inputs were found in config file 'C:/Users/darrell.tunnell/.nuget/packages/gluon.module.themeswitcher/2.0.0/contentFiles/any/net452/Scripts/tsconfig.json'. Specified 'include' paths were '[\"**/*\"]' and 'exclude' paths were '[\"node_modules\",\"wwwroot\"]'.\tReach.GCv3.Mvc.Module.CompanyLogo\tC:\\Users\\darrell.tunnell\\Source\\Repos\\gc3-website\\src\\Reach.GCv3.Mvc.Module.CompanyLogo\\tsc\t1\t\r\n\r\n\r\n```\r\n\r\ni.e VS is doscovering the typescript configuration files within referenced nuget packages!","Url":"https://github.com/aspnet/Templates/issues/854","RelatedDescription":"Closed issue \"typescript confiugration file item template\" (#854)"},{"Id":"240276652","IsPullRequest":true,"CreatedAt":"2017-07-05T16:50:58","Actor":"ryanbrandenburg","Number":"853","RawContent":null,"Title":"Remove PackageTargetFallback","State":"closed","Body":"","Url":"https://github.com/aspnet/Templates/pull/853","RelatedDescription":"Closed or merged PR \"Remove PackageTargetFallback\" (#853)"},{"Id":"239518221","IsPullRequest":true,"CreatedAt":"2017-07-05T14:09:36","Actor":"scottaddie","Number":"852","RawContent":null,"Title":"Clarify password reset sentence in ForgotPassword view","State":"closed","Body":"The `ForgotPassword.cshtml` view includes a sentence which was missing a comma and reversed the words \"reset\" and \"password\".\r\n\r\n/cc: @phenning @mlorbetske ","Url":"https://github.com/aspnet/Templates/pull/852","RelatedDescription":"Closed or merged PR \"Clarify password reset sentence in ForgotPassword view\" (#852)"},{"Id":"233568569","IsPullRequest":false,"CreatedAt":"2017-06-05T12:14:20","Actor":"neman","Number":"849","RawContent":null,"Title":"Unable to install nuget template","State":"closed","Body":"I created nuget template. When I try to install it, I got the following error at the end\r\n\r\n```C:\\Program Files\\dotnet\\sdk\\1.0.4\\NuGet.targets(97,5): error : Unable to resolve 'Test.Templates' for '.NETCoreApp,Version=v1.0'. [C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\restore.csproj]\r\n\r\nGenerating MSBuild file C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\obj\\restore.csproj.nuget.g.props.\r\n  Generating MSBuild file C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\obj\\restore.csproj.nuget.g.targets.\r\n  Writing lock file to disk. Path: C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\obj\\project.assets.json\r\n  Restore failed in 13,16 sec for C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\restore.csproj.\r\n\r\n  Errors in C:\\Users\\nemke\\.templateengine\\dotnetcli\\v1.0.4\\scratch\\restore.csproj\r\n      Unable to resolve 'BIB.Templates' for '.NETCoreApp,Version=v1.0'.\r\n\r\n  NuGet Config files used:\r\n      C:\\Users\\nemke\\AppData\\Roaming\\NuGet\\NuGet.Config\r\n      C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config\r\n\r\n  Feeds used:\r\n      https://api.nuget.org/v3/index.json\r\n      C:\\local-nuget\r\n      C:\\Users\\nemke\\.dotnet\\NuGetFallbackFolder\r\n      C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\\r\n```\r\n\r\n#### dotnetinfo\r\n\r\n```\r\nC:\\Temp> dotnet --info\r\n.NET Command Line Tools (1.0.4)\r\n\r\nProduct Information:\r\n Version:            1.0.4\r\n Commit SHA-1 hash:  af1e6684fd\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.14393\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\1.0.4\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0-preview1-002111-00\r\n  Build    : 1ff021936263d492539399688f46fd3827169983\r\n``` \r\n\r\n","Url":"https://github.com/aspnet/Templates/issues/849","RelatedDescription":"Closed issue \"Unable to install nuget template\" (#849)"},{"Id":"233555569","IsPullRequest":false,"CreatedAt":"2017-06-05T12:13:42","Actor":"neman","Number":"848","RawContent":null,"Title":"Wrong CLI command for template installation at nuget.org","State":"closed","Body":"When I go tu nuget.org to search for some template I got the following page for link https://www.nuget.org/packages/NetEscapades.Templates/\r\n\r\n![image](https://cloud.githubusercontent.com/assets/350314/26781234/bf4cc98c-49ed-11e7-9e4a-08bb168b6c62.png)\r\n\r\nThe command instruct to use `Install-Package NetEscapades.Templates` which does not work. \r\n\r\n```\r\nInstall-Package NetEscapades.Templates\r\nInstall-Package : No match was found for the specified search criteria and package name 'NetEscapades.Templates'. Try Get-PackageSource to see all available registered p ackage sources.\r\nAt line:1 char:1\r\n+ Install-Package NetEscapades.Templates\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Microsoft.Power....InstallPackage:InstallPackage) [Install-Package], Exception\r\n    + FullyQualifiedErrorId : NoMatchFoundForCriteria,Microsoft.PowerShell.PackageManagement.Cmdlets.InstallPackage\r\n```\r\nThe correct command is `dotnet new --install \"NetEscapades.Templates::*\"`\r\n\r\nWill this be fixed in future release?  Which will be the correct CLI command?\r\n\r\n","Url":"https://github.com/aspnet/Templates/issues/848","RelatedDescription":"Closed issue \"Wrong CLI command for template installation at nuget.org\" (#848)"},{"Id":"226082169","IsPullRequest":true,"CreatedAt":"2017-05-03T18:58:53","Actor":"phenning","Number":"846","RawContent":null,"Title":"Revert \"Add MVC precompilation package for 1.1\"","State":"closed","Body":"This reverts commit 461cd822646505fb53c6b0ac416af3780e32578f.\r\n\r\n# Conflicts:\r\n#\tsrc/BaseTemplates/StarterWeb/StarterWeb.csproj\r\n#\tsrc/Templates.xml","Url":"https://github.com/aspnet/Templates/pull/846","RelatedDescription":"Closed or merged PR \"Revert \"Add MVC precompilation package for 1.1\"\" (#846)"}],"ResultType":"GitHubIssue"},"Tooling-Issues":{"Issues":[{"Id":"383440110","IsPullRequest":false,"CreatedAt":"2018-11-22T09:08:48","Actor":"eriawan","Number":"1078","RawContent":null,"Title":"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019","State":"open","Body":"Apologize if my feedback may sound controversial or may spark a debate.\r\n\r\nI need to be sure that the problem mentioned on this [page](https://github.com/aspnet/Tooling/blob/master/known-issues-vs2017.md#to-create-aspnet-core-10--11-projects-install-visual-studios-net-core-10---11-developer-tools-for-web-component) about .NET Core 1.0/1.1 tooling is installed when creating new ASP.NET Core 1.0/1.1 project should not happen or should not be supported in VS 2019.\r\n\r\nThese are my main concerns:\r\n\r\n1. VS 2019 is about to be released in around early 2019\r\n2. ASP.NET Core 1.0/1.1 is not going to be supported anymore, based on [this page](https://github.com/dotnet/core/blob/master/microsoft-support.md).\r\n3. Creating new ASP.NET Core 1.0/1.1 will always install the .NET Core 1.0/1.1 web tooling, and this is not necessary when previous reason has reached the unsupported period and it's quite near or might be the same time of VS 2019 release.\r\n4. Based on the problem mentioned above, VS 2017 has no \"built in\" tooling when creating new ASP.NET Core 1.0/1.1 project, but the external tooling may help. Therefore for those that still need to maintain ASP.NET Core 1.0/1.1 projects, we could use VS 2017 as long as the VS 2017 is still in support lifecycle or in mainstream support lifecycle.\r\n\r\nI welcome feedback 🙂 \r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1078","RelatedDescription":"Open issue \"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019\" (#1078)"},{"Id":"349649932","IsPullRequest":true,"CreatedAt":"2018-08-10T20:38:21","Actor":"Andrew-MSFT","Number":"1077","RawContent":null,"Title":"Adding a .net core -> vs mapping table","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1077","RelatedDescription":"Closed or merged PR \"Adding a .net core -> vs mapping table\" (#1077)"},{"Id":"333613195","IsPullRequest":false,"CreatedAt":"2018-06-27T12:59:29","Actor":"Liero","Number":"1076","RawContent":null,"Title":"Unable to publish when using Microsoft.NET.Sdk.Razor","State":"closed","Body":"After I upgraded my solution from asp.net core 2.0 to 2.1, I'm not able to publish my web app from Visual Studio, although it can build.\r\n\r\nDuring the upgrade I've changed SDK in one of my class libraries to **Microsoft.NET.Sdk.Razor**, but now I'm getting a lot of errors and if project references were not recognized in this library when publishing.\r\n\r\n```\r\nConnecting to C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\publish\\...\r\nMyProject.Web -> C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\MyProject.Web.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\\csc.exe /noconfig /unsafe- /checked- /nowarn:1701,1702,1701,1702,2008 /nostdlib+ /errorreport:prompt /warn:4 /define:TRACE;RELEASE;NETCOREAPP;NETCOREAPP2_1 /errorendlocation /preferreduilang:en-US /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.antiforgery\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Antiforgery.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization.policy\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.Policy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cryptography.internal\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cryptography.Internal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.diagnostics.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.server.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.html.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Html.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.features\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Features.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.jsonpatch\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.JsonPatch.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.apiexplorer\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.dataannotations\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.formatters.json\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razorpages\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.RazorPages.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.taghelpers\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.TagHelpers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.viewfeatures\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.language\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Language.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.runtime\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.responsecaching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.webutilities\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.WebUtilities.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.csharp\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.common\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.CodeAnalysis.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.dotnet.platformabstractions\\2.1.0\\lib\\netstandard1.3\\Microsoft.DotNet.PlatformAbstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.relational\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Relational.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.sqlserver\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.SqlServer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.memory\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.binder\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Binder.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection\\2.1.0\\lib\\netcoreapp2.0\\Microsoft.Extensions.DependencyInjection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencymodel\\2.1.0\\lib\\netstandard1.6\\Microsoft.Extensions.DependencyModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.composite\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Composite.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.filesystemglobbing\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileSystemGlobbing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.objectpool\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.ObjectPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.options\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Options.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.primitives\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.webencoders\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.WebEncoders.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.net.http.headers\\2.1.0\\lib\\netstandard2.0\\Microsoft.Net.Http.Headers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.VisualBasic.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.Win32.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.win32.registry\\4.5.0\\ref\\netstandard2.0\\Microsoft.Win32.Registry.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\netstandard.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json.bson\\1.0.1\\lib\\netstandard1.3\\Newtonsoft.Json.Bson.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json\\11.0.2\\lib\\netstandard2.0\\Newtonsoft.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\remotion.linq\\2.2.0\\lib\\netstandard1.0\\Remotion.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.AppContext.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Buffers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Concurrent.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Immutable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.NonGeneric.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Specialized.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Annotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.EventBasedAsync.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.TypeConverter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Console.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.Common.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.data.sqlclient\\4.5.0\\ref\\netcoreapp2.1\\System.Data.SqlClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Contracts.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Debug.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.DiagnosticSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.FileVersionInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Process.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.StackTrace.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TextWriterTraceListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tools.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TraceSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tracing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Dynamic.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Calendars.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.interactive.async\\3.1.1\\lib\\netstandard1.3\\System.Interactive.Async.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.Brotli.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.ZipFile.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.DriveInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Watcher.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.IsolatedStorage.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.MemoryMappedFiles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Pipes.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.UnmanagedMemoryStream.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Expressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Queryable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.HttpListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Mail.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NameResolution.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NetworkInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Ping.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Requests.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.ServicePoint.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Sockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebHeaderCollection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.Client.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.Vectors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ObjectModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.DispatchProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.ILGeneration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.Lightweight.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.TypeExtensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Reader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.ResourceManager.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Writer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.runtime.compilerservices.unsafe\\4.5.0\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.CompilerServices.VisualC.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Handles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.RuntimeInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.WindowsRuntime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Loader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Formatters.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.accesscontrol\\4.5.0\\ref\\netstandard2.0\\System.Security.AccessControl.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Claims.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Algorithms.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Csp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.X509Certificates.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.cryptography.xml\\4.5.0\\ref\\netstandard2.0\\System.Security.Cryptography.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.permissions\\4.5.0\\ref\\netstandard2.0\\System.Security.Permissions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Principal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.principal.windows\\4.5.0\\ref\\netstandard2.0\\System.Security.Principal.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.SecureString.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceModel.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceProcess.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.text.encodings.web\\4.5.0\\lib\\netstandard2.0\\System.Text.Encodings.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.RegularExpressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Overlapped.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Dataflow.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Thread.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.ThreadPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Timer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.Local.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ValueTuple.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.HttpUtility.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.ReaderWriter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlSerializer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\WindowsBase.dll\" /debug- /debug:portable /filealign:512 /optimize+ /out:obj\\Release\\netcoreapp2.1\\MyProject.Mail.dll /ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\" /target:library /warnaserror- /utf8output /deterministic+ /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.CSharp.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.analyzers\\2.1.0\\analyzers\\dotnet\\cs\\Microsoft.EntityFrameworkCore.Analyzers.dll\" EmailDefaults.cs EmailOptions.cs MailSender.cs NotificationService.cs RazorViewToStringRenderer.cs \"C:\\Users\\daniel.turan\\AppData\\Local\\Temp\\.NETCoreApp,Version=v2.1.AssemblyAttributes.cs\" obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs obj\\Release\\netcoreapp2.1\\\\Tem\tporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.RazorAssemblyInfo.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.AssemblyInfo.cs /warnaserror+:NU1605\r\nNotificationService.cs(15,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\nNotificationService.cs(16,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\n...\r\n```\r\n\r\nAlso, see https://stackoverflow.com/questions/50926116/publish-failed-when-using-microsoft-net-sdk-razor-if-reference-was-not-recognize for more details","Url":"https://github.com/aspnet/Tooling/issues/1076","RelatedDescription":"Closed issue \"Unable to publish when using Microsoft.NET.Sdk.Razor\" (#1076)"},{"Id":"257171895","IsPullRequest":false,"CreatedAt":"2018-06-25T20:46:49","Actor":"shirhatti","Number":"1057","RawContent":null,"Title":"Support for multi-line string values","State":"closed","Body":"_From @alexvy86 on August 3, 2017 21:11_\n\nI'm using Akka.NET in a project and the way they do configuration is not-quite-JSON, but still a hierarchical structure, which I haven't been able to successfully integrate into `appsettings.json`. The only way I've been able to do it is to collapse all of their hierarchy into a single-line string value, which makes it a bit of a pain to work with.\r\n\r\nFor now I just put the whole thing as CDATA in an XML file and use the `AddXmlFile()` extension from `Microsoft.Extensions.Configuration.Xml` to read it, but it'd be preferable to have it in `appsetings.json`.\n\n_Copied from original issue: aspnet/Configuration#703_","Url":"https://github.com/aspnet/Tooling/issues/1057","RelatedDescription":"Closed issue \"Support for multi-line string values\" (#1057)"},{"Id":"329605262","IsPullRequest":false,"CreatedAt":"2018-06-05T20:05:23","Actor":"AngelosP","Number":"1075","RawContent":null,"Title":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator","State":"open","Body":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","Url":"https://github.com/aspnet/Tooling/issues/1075","RelatedDescription":"Open issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator\" (#1075)"},{"Id":"328747170","IsPullRequest":false,"CreatedAt":"2018-06-02T14:10:13","Actor":"AceHack","Number":"1074","RawContent":null,"Title":"Docker in launchSettings.json","State":"open","Body":"Please give documentation on how to add volume mounts.  I need to add a custom volume mount into my image.","Url":"https://github.com/aspnet/Tooling/issues/1074","RelatedDescription":"Open issue \"Docker in launchSettings.json\" (#1074)"},{"Id":"328082529","IsPullRequest":true,"CreatedAt":"2018-06-01T17:41:04","Actor":"federicorinaldi","Number":"1073","RawContent":null,"Title":"Update dotnet-core-2.1.md","State":"closed","Body":"Visual Studio 2017 15.7 has been released now so this document is outdated","Url":"https://github.com/aspnet/Tooling/pull/1073","RelatedDescription":"Closed or merged PR \"Update dotnet-core-2.1.md\" (#1073)"},{"Id":"323850872","IsPullRequest":false,"CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Number":"1072","RawContent":null,"Title":"can not upload file FTPS. ","State":"closed","Body":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072)"},{"Id":"268293817","IsPullRequest":false,"CreatedAt":"2018-05-17T02:25:02","Actor":"Pichasepong","Number":"1060","RawContent":null,"Title":"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. ","State":"closed","Body":"Problems installing on Server 2012 R2 ,Dot net core 1.0.1 vs 2015 tooling preview 2 error logs file.\r\n\r\n![product_dotnetcoreerror](https://user-images.githubusercontent.com/12063904/31985990-040a5f72-b991-11e7-9356-ddd06160a87c.jpg)\r\n","Url":"https://github.com/aspnet/Tooling/issues/1060","RelatedDescription":"Closed issue \"Problems .net core 1.0.1 vs 2015 tooling preview 2 error logs file.Help Me. \" (#1060)"},{"Id":"317494886","IsPullRequest":false,"CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Number":"1071","RawContent":null,"Title":" Unable to start debugging","State":"open","Body":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Open issue \" Unable to start debugging\" (#1071)"},{"Id":"316585462","IsPullRequest":false,"CreatedAt":"2018-04-24T05:17:55","Actor":"rberger247","Number":"1070","RawContent":null,"Title":"Visual studio freezes when I run add-migration ","State":"closed","Body":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger.","Url":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070)"},{"Id":"308764422","IsPullRequest":false,"CreatedAt":"2018-03-27T05:23:09","Actor":"dvdobrovolskiy","Number":"1069","RawContent":null,"Title":"EntityFramework migrations not available to be applied during publish","State":"closed","Body":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc","Url":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069)"},{"Id":"304770827","IsPullRequest":false,"CreatedAt":"2018-03-14T05:33:19","Actor":"TheConservativeCoder","Number":"1068","RawContent":null,"Title":"Switch between Razor Page View and Code Behind","State":"closed","Body":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n","Url":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068)"},{"Id":"304312342","IsPullRequest":false,"CreatedAt":"2018-03-13T05:33:42","Actor":"RehanSaeed","Number":"1067","RawContent":null,"Title":"Support dotnet watch in launchSettings.json","State":"closed","Body":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine.","Url":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Closed issue \"Support dotnet watch in launchSettings.json\" (#1067)"},{"Id":"300865938","IsPullRequest":false,"CreatedAt":"2018-02-28T06:01:18","Actor":"rjamesnw","Number":"1066","RawContent":null,"Title":"Nesting bug","State":"closed","Body":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file.","Url":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066)"},{"Id":"290854647","IsPullRequest":false,"CreatedAt":"2018-01-24T01:14:53","Actor":"NeerajaRagesh","Number":"1065","RawContent":null,"Title":"Issue with Sales discount App - Odoo 9","State":"closed","Body":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n","Url":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065)"},{"Id":"273994049","IsPullRequest":true,"CreatedAt":"2018-01-07T03:48:49","Actor":"cartermp","Number":"1062","RawContent":null,"Title":"Update migrate-sql-server.md","State":"closed","Body":"Removed product links in favor of all docs links, changed wording slightly, and moved Get Started to be at the top.","Url":"https://github.com/aspnet/Tooling/pull/1062","RelatedDescription":"Closed or merged PR \"Update migrate-sql-server.md\" (#1062)"},{"Id":"274003770","IsPullRequest":true,"CreatedAt":"2017-11-15T02:15:11","Actor":"cristy","Number":"1064","RawContent":null,"Title":"Re adding","State":"closed","Body":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end...","Url":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Closed or merged PR \"Re adding\" (#1064)"},{"Id":"273996633","IsPullRequest":true,"CreatedAt":"2017-11-15T01:03:12","Actor":"cristy","Number":"1063","RawContent":null,"Title":"Webapp landing page","State":"closed","Body":"This is the markdown for the Web App landing page. Let me know if there's any other changes I should make.","Url":"https://github.com/aspnet/Tooling/pull/1063","RelatedDescription":"Closed or merged PR \"Webapp landing page\" (#1063)"},{"Id":"273873058","IsPullRequest":true,"CreatedAt":"2017-11-14T17:26:42","Actor":"cartermp","Number":"1061","RawContent":null,"Title":"Create migrate-sql-server.md","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1061","RelatedDescription":"Closed or merged PR \"Create migrate-sql-server.md\" (#1061)"},{"Id":"258233429","IsPullRequest":false,"CreatedAt":"2017-09-16T14:09:00","Actor":"ctopher31","Number":"1059","RawContent":null,"Title":"Turn off file nesting in Visual Studio 2017","State":"closed","Body":"To report new issues, use the [Report a Problem](https://developercommunity.visualstudio.com/) tool. The GitHub Issue Tracker for the aspnet/Tooling repo is now deprecated in favor of the Report a Problem tool.\r\n\r\nIf you encounter a problem with Visual Studio, we want to know about it so that we can diagnose and fix it. By using the Report a Problem tool, you can collect detailed information about the problem, and send it to Microsoft with just a few button clicks. See [here](https://docs.microsoft.com/en-us/visualstudio/ide/talk-to-us) for more details. \r\n","Url":"https://github.com/aspnet/Tooling/issues/1059","RelatedDescription":"Closed issue \"Turn off file nesting in Visual Studio 2017\" (#1059)"},{"Id":"257312054","IsPullRequest":false,"CreatedAt":"2017-09-14T00:50:29","Actor":"svallis","Number":"1058","RawContent":null,"Title":"Views in class libraries removed from embedded resources under certain circumstances","State":"closed","Body":"I have a test repo which should hopefully demonstrate this problem, and I hope this is the correct repo for the issue.\r\n\r\nhttps://github.com/svallis/precompilation-classlib\r\n\r\nIf you clone and open this solution and perform the following, the issue should be clear. First, the expected results is what happens when adding views to `app`:\r\n\r\n- Go to `app1\\Views\\Home` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `app1` remains unchanged\r\n\r\nNow perform the same process on `lib1`:\r\n\r\n- Go to `lib1\\Views\\Shared` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `lib1` has the following added to it\r\n\r\n```\r\n<ItemGroup>\r\n    <EmbeddedResource Remove=\"Views\\Shared\\Test - Copy.cshtml\" />\r\n</ItemGroup>\r\n```\r\n\r\nAs you can imagine this is highly frustrating during development, and we're constantly running into it while developing features within a library. I don't know if it's an outright bug, or whether we could improve the existing rules in the `.csproj` for the library. Whatever changes are made to the library project file need to preserve existing functionality though, so that views are not included in the publish output and are embedded in the assembly. This allows everything to work both during development and after publishing with precompiled views.","Url":"https://github.com/aspnet/Tooling/issues/1058","RelatedDescription":"Closed issue \"Views in class libraries removed from embedded resources under certain circumstances\" (#1058)"},{"Id":"254062749","IsPullRequest":false,"CreatedAt":"2017-08-31T04:38:52","Actor":"matthewDDennis","Number":"1056","RawContent":null,"Title":"Docker tools fail if multiple TFMs in project file","State":"closed","Body":"If you modify your projects to have multiple frameworks with the `<TargetFrameworks>` tag, then the Docker tools does not know which framework to use as there is no `<TargetFramework>` tag.\r\n\r\nAdding the `<TargetFramework>`netcoreapp1.1`<...>` fixes the problem in Visual Studio and all the frameworks build and can debug with Docker.\r\n\r\nHowever, if you try and build a framework other than the netcoreapp1.1 with the DotNet CLI, it fails as it, as the documentation states, will ignore the `<TargetFrameworks>` tag if the `<TargetFramework>` tag is present \r\n","Url":"https://github.com/aspnet/Tooling/issues/1056","RelatedDescription":"Closed issue \"Docker tools fail if multiple TFMs in project file\" (#1056)"},{"Id":"249781859","IsPullRequest":true,"CreatedAt":"2017-08-14T15:57:44","Actor":"balachir","Number":"1055","RawContent":null,"Title":"Update known-issues-vs2017.md for VS 15.3 RTW","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1055","RelatedDescription":"Closed or merged PR \"Update known-issues-vs2017.md for VS 15.3 RTW\" (#1055)"},{"Id":"247941709","IsPullRequest":false,"CreatedAt":"2017-08-05T03:07:41","Actor":"snebjorn","Number":"1054","RawContent":null,"Title":"Q: [BrowserLink] HowTo programmatically inject custom script into page body at runtime","State":"closed","Body":"Hi, I'm curious about how you made Browser Link inject a custom script into the page body at runtime.\r\nI have to do something similar (ritterim/stuntman#158) so wondering if you've willing to share the implementation :)\r\n\r\nI also made a [stackoverflow post](https://stackoverflow.com/questions/45501245/programmatically-inject-custom-script-into-page-body-at-runtime-like-browser-l)\r\n\r\nThanks","Url":"https://github.com/aspnet/Tooling/issues/1054","RelatedDescription":"Closed issue \"Q: [BrowserLink] HowTo programmatically inject custom script into page body at runtime\" (#1054)"},{"Id":"247229183","IsPullRequest":false,"CreatedAt":"2017-08-02T06:18:35","Actor":"halter73","Number":"1053","RawContent":null,"Title":"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES environment variable is set incorrectly","State":"closed","Body":"Given the launchSettings.json and Program.cs below, it seems that the ASPNETCORE_HOSTINGSTARTUPASSEMBLIES environment variable is set incorrectly when launching both the \"IIS Express\" or \"WebApplication1\" profiles from VS 2017 26730.0.d15rel and dotnet sdk 2.0.0-preview3-006889.\r\n\r\n\r\n#### Expected output for \"IIS Express\" profile launched from VS:\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'HostingStartup1;Microsoft.AspNetCore.Server.IISIntegration;Microsoft.AspNetCore.ApplicationInsights.HostingStartup'\r\n```\r\n\r\n#### Actual output for \"IIS Express\" profile launched from VS (App Insights is missing):\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'HostingStartup1;Microsoft.AspNetCore.Server.IISIntegration'\r\n```\r\n\r\n#### Expected output for \"WebApplication1\" profile launched from VS:\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'HostingStartup1;Microsoft.AspNetCore.ApplicationInsights.HostingStartup'\r\n```\r\n\r\n#### Actual output for \"WebApplication1\" profile launched from VS (HostingStartup1 is missing):\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'Microsoft.AspNetCore.ApplicationInsights.HostingStartup'\r\n```\r\n\r\n#### Actual output for \"WebApplication1\" profile launched using \"dotnet run\" (Behaves as expected)\r\n\r\n```\r\nASPNETCORE_HOSTINGSTARTUPASSEMBLIES: 'HostingStartup1'\r\n```\r\n\r\n#### launchSettings.json\r\n```json\r\n{\r\n  \"iisSettings\": {\r\n    \"windowsAuthentication\": false,\r\n    \"anonymousAuthentication\": true,\r\n    \"iisExpress\": {\r\n      \"applicationUrl\": \"http://localhost:61008/\",\r\n      \"sslPort\": 0\r\n    }\r\n  },\r\n  \"profiles\": {\r\n    \"IIS Express\": {\r\n      \"commandName\": \"IISExpress\",\r\n      \"launchBrowser\": true,\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\",\r\n        \"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES\": \"HostingStartup1\"\r\n      }\r\n    },\r\n    \"WebApplication1\": {\r\n      \"commandName\": \"Project\",\r\n      \"launchBrowser\": true,\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\",\r\n        \"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES\": \"HostingStartup1\"\r\n      },\r\n      \"applicationUrl\": \"http://localhost:61010/\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n#### Program.cs\r\n```C#\r\nusing Microsoft.AspNetCore;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing System;\r\n\r\nnamespace WebApplication1\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            BuildWebHost(args).Run();\r\n        }\r\n\r\n        public static IWebHost BuildWebHost(string[] args)\r\n        {\r\n            Console.WriteLine(\"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES: '{0}'\", Environment.GetEnvironmentVariable(\"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES\"));\r\n\r\n            return WebHost.CreateDefaultBuilder(args)\r\n                .UseStartup<Startup>()\r\n                .Build();\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/aspnet/Tooling/issues/1053","RelatedDescription":"Closed issue \"ASPNETCORE_HOSTINGSTARTUPASSEMBLIES environment variable is set incorrectly\" (#1053)"},{"Id":"245422589","IsPullRequest":false,"CreatedAt":"2017-07-28T17:44:59","Actor":"varora1406","Number":"1052","RawContent":null,"Title":"Add-Migration command not working.","State":"closed","Body":"IDE : visual studio 15.3 preview 5.0\r\n.net core 2.0\r\nProject : .Net core web application (Angular template) including (Angular v4)\r\n\r\nSteps to reproduce:\r\n* Create a new project and all required nuget packages.\r\n![image](https://user-images.githubusercontent.com/24986539/28577409-559354a8-7174-11e7-9dfb-26cc7efc1228.png)\r\n\r\n* Try to use Add-Migration command. (Don't worry, context classes and rest have been done)\r\n- Result : The term 'Add-Migration' is not recognized as the name of a cmdlet, function, script file, or operable program. \r\n![image](https://user-images.githubusercontent.com/24986539/28577463-81e914c0-7174-11e7-97eb-5cd2a5fb3e28.png)\r\n","Url":"https://github.com/aspnet/Tooling/issues/1052","RelatedDescription":"Closed issue \"Add-Migration command not working.\" (#1052)"},{"Id":"241453336","IsPullRequest":false,"CreatedAt":"2017-07-08T14:19:58","Actor":"RandyBuchholz","Number":"1051","RawContent":null,"Title":"Outdated Reference in ...CodeGeneration.Design\" Version=\"2.0.0-preview2-final\"","State":"open","Body":"There was a compatibility error with Microsoft.Composition. This is being addressed https://github.com/dotnet/corefx/issues/18452.\r\n\r\nCodeGeneration.Design is still referencing the old version and gives:\r\nPackage 'Microsoft.Composition 1.0.27' was restored using '.NETFramework,Version=v4.6.1' instead the project target framework...\r\n\r\nThe correct version is 1.0.31.\r\n\r\n![image](https://user-images.githubusercontent.com/13967891/27986052-85abdeee-63be-11e7-9b53-ec7a6199d628.png)\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1051","RelatedDescription":"Open issue \"Outdated Reference in ...CodeGeneration.Design\" Version=\"2.0.0-preview2-final\"\" (#1051)"},{"Id":"239635705","IsPullRequest":true,"CreatedAt":"2017-06-29T23:09:22","Actor":"anangaur","Number":"1050","RawContent":null,"Title":"Update known-issues-vs2017-preview.md","State":"open","Body":"Removed \"No workaround...\" as there is a workaround","Url":"https://github.com/aspnet/Tooling/pull/1050","RelatedDescription":"Open PR \"Update known-issues-vs2017-preview.md\" (#1050)"},{"Id":"239016783","IsPullRequest":true,"CreatedAt":"2017-06-28T20:04:41","Actor":"balachir","Number":"1049","RawContent":null,"Title":"Updates for VS 2017 15.3 Preview 3 / .NET Core 2.0 Preview 2","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1049","RelatedDescription":"Closed or merged PR \"Updates for VS 2017 15.3 Preview 3 / .NET Core 2.0 Preview 2\" (#1049)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"383620660","IsPullRequest":false,"CreatedAt":"2018-11-22T17:35:15","Actor":"Tratcher","Number":"329","RawContent":null,"Title":"Empty Microsoft.AspNetCore.Server.Kestrel.Https assembly being removed","State":"open","Body":"In ASP.NET Core 2.1 the contents of Microsoft.AspNetCore.Server.Kestrel.Https.dll were moved to Microsoft.AspNetCore.Server.Kestrel.Core.dll. This was done in a non-breaking way using TypeForwardedTo attributes. In the next major release (3.0) this empty assembly will be removed. Note that the nuget package was already being removed as part of https://github.com/aspnet/Announcements/issues/325.\r\n\r\nAction required:\r\n- Libraries referencing Microsoft.AspNetCore.Server.Kestrel.Https 2.0 should update all AspNetCore dependencies to 2.1 or later. Otherwise they may break when loaded into a 3.0 application.\r\n- Applications and libraries targeting AspNetCore 2.1 and later should remove any direct references to the Microsoft.AspNetCore.Server.Kestrel.Https nuget package. \r\n\r\nPlease use https://github.com/aspnet/AspNetCore/issues/4228 for discussion about this issue.","Url":"https://github.com/aspnet/Announcements/issues/329","RelatedDescription":"Open issue \"Empty Microsoft.AspNetCore.Server.Kestrel.Https assembly being removed\" (#329)"},{"Id":"380355496","IsPullRequest":false,"CreatedAt":"2018-11-13T18:07:03","Actor":"pakrym","Number":"328","RawContent":null,"Title":"Microsoft.AspNetCore.SpaServices and NodeServices no longer fallback to console logger by default","State":"open","Body":"`Microsoft.AspNetCore.SpaServices` and `Microsoft.AspNetCore.NodeServices` used to automatically create a console logger when logging is not configured. To align them with how other AspNetCore packages implement logging we are removing this automatic fallback.\r\n\r\nFrom now on `Microsoft.AspNetCore.SpaServices` and `Microsoft.AspNetCore.NodeServices` would not display any console log when logging is not configured.\r\n\r\nTo configure console logging please add `services.AddLogging(builder => builder.AddConsole())` to your `Setup.ConfigureServices` method.","Url":"https://github.com/aspnet/Announcements/issues/328","RelatedDescription":"Open issue \"Microsoft.AspNetCore.SpaServices and NodeServices no longer fallback to console logger by default\" (#328)"},{"Id":"378007197","IsPullRequest":false,"CreatedAt":"2018-11-06T19:51:17","Actor":"blowdart","Number":"327","RawContent":null,"Title":"Survey: Your experience using Identity UI and customization","State":"open","Body":"We're taking a survey about how your experiences using ASP.NET Core Identity, and specifically Identity UI as a package.\r\n\r\nPlease give us your feedback, and, if you're willing, you might get a phone call to talk about your experiences in detail.\r\n\r\nhttps://microsoft.qualtrics.com/jfe/form/SV_3mTmFYDZAQutZMF\r\n","Url":"https://github.com/aspnet/Announcements/issues/327","RelatedDescription":"Open issue \"Survey: Your experience using Identity UI and customization\" (#327)"},{"Id":"377580069","IsPullRequest":false,"CreatedAt":"2018-11-05T20:59:34","Actor":"pranavkm","Number":"326","RawContent":null,"Title":"Making \"pubinternal\" types in MVC internal","State":"open","Body":"In ASP.NET Core, `pubinternal` types are types that are declared as `public` but put in an `.Internal` namespace. While these types are public they have no support policy and are subject to breaking changes. Unfortunately accidental use of these types has been common, resulting in breaking changes to these projects and limiting our ability to maintain the framework.\r\n\r\nIn ASP.NET Core 3.0, we are updating all `pubinternal` types in MVC to either be `public` in a supported namespace, or `internal` as appropriate. This includes types in the following namespaces:\r\n\r\n* Microsoft.AspNetCore.Mvc.Formatters.Xml.Internal\r\n* Microsoft.AspNetCore.Mvc.Cors.Internal\r\n* Microsoft.AspNetCore.Mvc.ViewFeatures.Internal\r\n* Microsoft.AspNetCore.Mvc.Formatters.Json.Internal\r\n* Microsoft.AspNetCore.Mvc.RazorPages.Internal\r\n* Microsoft.AspNetCore.Mvc.DataAnnotations.Internal\r\n* Microsoft.AspNetCore.Mvc.TagHelpers.Internal\r\n* Microsoft.AspNetCore.Mvc.Internal\r\n* Microsoft.AspNetCore.Mvc.Razor.Internal\r\n* Microsoft.AspNetCore.Mvc.Formatters.Internal\r\n* Microsoft.AspNetCore.Mvc.Core.Internal\r\n* Microsoft.AspNetCore.Mvc.ModelBinding.Internal\r\n\r\nIf there are specific types in these namespaces that are critical to your applications, please file an issue in https://github.com/aspnet/Mvc and we will consider making the requested types public.","Url":"https://github.com/aspnet/Announcements/issues/326","RelatedDescription":"Open issue \"Making \"pubinternal\" types in MVC internal\" (#326)"},{"Id":"375243400","IsPullRequest":false,"CreatedAt":"2018-10-29T22:28:29","Actor":"natemcmaster","Number":"325","RawContent":null,"Title":"Breaking changes to Microsoft.AspNetCore.App in 3.0","State":"open","Body":"_This change is one of several which were [announced earlier today on the ASP.NET blog.][aspnet-blog]_\r\n\r\nStarting in 3.0, the ASP.NET Core shared framework (`Microsoft.AspNetCore.App`) will only contain first-party assemblies that are fully developed, supported, and serviceable by Microsoft. You can think of this as constituting the ASP.NET Core “platform.” It will be fully [source buildable by anybody via GitHub](https://github.com/dotnet/source-build) and will continue to bring all the existing benefits of .NET Core shared frameworks to your applications moving forward (smaller deployment size, centralized patching, faster startup time, etc.). \r\n\r\nAs part of this change, some notable breaking changes will be made in Microsoft.AspNetCore.App 3.0.\r\n\r\n## Removal of some sub-components\r\n\r\nAs part of this change, some notable sub-components will be removed from the ASP.NET Core shared framework in 3.0: \r\n\r\n* Json.NET (Newtonsoft.Json)\r\n* Entity Framework Core (Microsoft.EntityFrameworkCore.\\*) \r\n* Microsoft.CodeAnalysis (Roslyn)\r\n\r\nEntity Framework Core will ship as “pure” NuGet packages in 3.0. This makes its shipping model the same as all other data access libraries on .NET, and allows it the simplest path to continue innovation while providing support for all the various .NET platforms customers enjoy it on today. Note, Entity Framework Core moving out of the shared framework has no impact on its status as a Microsoft developed, supported, and serviceable library, and it will continue to be covered by the [.NET Core support policy.](https://www.microsoft.com/net/platform/support-policy)\r\n\r\n**Please note** that this does not mean Json.NET or Entity Framework Core will no longer work with ASP.NET Core. These features will continue exist, but they will not be\r\n\"in the box\" with the shared framework.\r\n\r\nPlease see [\"The future of JSON in .NET Core 3.0\"](https://github.com/dotnet/announcements/issues/90) for details on our plans to remove the dependency from ASP.NET Core to Json.NET and replace it with high-performance JSON APIs.\r\n\r\nWe have separately posted [a complete list of exact binaries][items-removed-from-fx] that are being removed. This list may fluctuate as we continue to work on ASP.NET Core 3.0.\r\n\r\n## Removal of the PackageReference to Microsoft.AspNetCore.App\r\n\r\nStarting in ASP.NET Core 3.0, references to Microsoft.AspNetCore.App will no longer be a `<PackageReference>` element in the project file. The .NET Core SDK will support a new item called\r\n`<FrameworkReference>` which will replace the use of PackageReference. Changes to support this new item type are already under way. \r\n\r\nSee [aspnet/AspNetCore#3612](https://github.com/aspnet/AspNetCore/issues/3612) for more details.\r\n\r\n## Reducing the duplication between NuGet packages and shared frameworks\r\n\r\nAs result these changes, it will not be necessary for projects to consume assemblies in Microsoft.AspNetCore.App as NuGet packages. To simplify the way in which consumers target and use the ASP.NET Core shared framework, we will stop producing many of the NuGet packages that we have been shipping since ASP.NET Core 1.0. The API those packages provide are still available to apps by using a `<FrameworkReference>` to Microsoft.AspNetCore.App. This includes commonly referenced API, such as Kestrel, Mvc, Razor, and others.\r\n\r\n**Please note** that this does not apply to all binaries that are pulled in via Microsoft.AspNetCore.App in 2.x. Notable exceptions include:\r\n\r\n* Microsoft.Extensions libraries which continue to target .NET Standard will be available as NuGet packages (see https://github.com/aspnet/Extensions)\r\n* API produced by the ASP.NET Core team which is not part of Microsoft.AspNetCore.App. For example, Entity Framework Core, API which provides 3rd party integration, experimental features, or API which has dependencies that could not [satisy the requirements to be in the shared framework][shared-fx-guidance] will ship as NuGet packages and not in the shared framework.\r\n* Extensions to MVC that maintain support for Json.NET. We intend to provide API as a NuGet package to support using Json.NET and MVC.\r\n* The SignalR .NET client will continue to support .NET Standard and ship as NuGet package because it is intended for use on many .NET runtimes, like Xamarin and UWP.\r\n\r\nFor more details, please see the [complete list of packages that will only be obsolete in favor of `<FrameworkReference>`.][packages-removed-from-fx] This list may fluctuate as we continue to work on ASP.NET Core 3.0.\r\n\r\nPlease see [the blog post from earlier today][aspnet-blog] for more details on the motivation for this change.\r\n\r\nPlease use [aspnet/AspNetCore#3757][discussion] for discussion.\r\n\r\n[2.1-lts]: https://www.microsoft.com/net/download/dotnet-core/2.1\r\n[aspnet-blog]: https://blogs.msdn.microsoft.com/webdev/2018/10/29/a-first-look-at-changes-coming-in-asp-net-core-3-0\r\n[discussion]: https://github.com/aspnet/AspNetCore/issues/3757\r\n[items-removed-from-fx]: https://github.com/aspnet/AspNetCore/issues/3755\r\n[packages-removed-from-fx]: https://github.com/aspnet/AspNetCore/issues/3756\r\n[shared-fx-guidance]: https://github.com/aspnet/AspNetCore/blob/4e44e5bcbedd961cc0d4f6b846699c7c494f5597/docs/SharedFramework.md\r\n","Url":"https://github.com/aspnet/Announcements/issues/325","RelatedDescription":"Open issue \"Breaking changes to Microsoft.AspNetCore.App in 3.0\" (#325)"},{"Id":"375240026","IsPullRequest":false,"CreatedAt":"2018-10-29T22:16:36","Actor":"natemcmaster","Number":"324","RawContent":null,"Title":"ASP.NET Core 3.0 will only run on .NET Core","State":"open","Body":"_This change is one of several which were [announced earlier today on the ASP.NET blog.][aspnet-blog]_\r\n\r\nAs announced on the [.NET Blog earlier this month][dotnet-blog], .NET Framework will get fewer of the newer platform and language features that come to .NET Core moving forward, due to the in-place update nature of .NET Framework and the desire to limit changes there that might break existing applications. To ensure ASP.NET Core can fully leverage the improvements coming to .NET Core moving forward, ASP.NET Core will only run on .NET Core starting from 3.0. Moving forward, you can simply think of ASP.NET Core as being part of .NET Core.\r\n\r\nCustomers utilizing ASP.NET Core on .NET Framework today can continue to do so in a fully supported fashion using the [2.1 LTS release][2.1-lts]. Support and servicing for 2.1 will continue until at least August 21, 2021 (3 years after its declaration as an LTS release) in accordance with the [.NET Support Policy](https://www.microsoft.com/net/platform/support-policy). \r\n\r\nFor more information about porting from .NET Framework to .NET Core, see our documentation on [Porting to .NET Core.](https://docs.microsoft.com/en-us/dotnet/core/porting/)\r\n\r\n**Please note** that this does not affect the following:\r\n \r\n * **Microsoft.Extensions** packages (such as logging, dependency injection, and config) will continue to support .NET Standard\r\n * **Entity Framework Core** will continue to support .NET Standard\r\n\r\nPlease see [the blog post from earlier today][aspnet-blog] for more details on the motivation for this change.\r\nPlease use [aspnet/AspNetCore#3753][discussion] for discussion.\r\n\r\n[2.1-lts]: https://www.microsoft.com/net/download/dotnet-core/2.1\r\n[dotnet-blog]: https://blogs.msdn.microsoft.com/dotnet/2018/10/04/update-on-net-core-3-0-and-net-framework-4-8/\r\n[aspnet-blog]: https://blogs.msdn.microsoft.com/webdev/2018/10/29/a-first-look-at-changes-coming-in-asp-net-core-3-0\r\n[discussion]: https://github.com/aspnet/AspNetCore/issues/3753","Url":"https://github.com/aspnet/Announcements/issues/324","RelatedDescription":"Open issue \"ASP.NET Core 3.0 will only run on .NET Core\" (#324)"},{"Id":"371164570","IsPullRequest":false,"CreatedAt":"2018-10-17T16:31:22","Actor":"Eilon","Number":"323","RawContent":null,"Title":"ASP.NET Core 2.2.0 Preview 3 known issues","State":"open","Body":"Known issues in ASP.NET / Entity Framework Core 2.2 Preview 3\r\n========\r\n\r\nTo see all issues closed in the 2.2.0 Preview 3 milestone, see the results of [this query](https://github.com/search?q=org%3Aaspnet+is%3Aissue+is%3Aclosed+milestone%3A2.2.0-preview3).\r\n\r\nOfficial announcement blog post: https://blogs.msdn.microsoft.com/webdev/2018/10/17/asp-net-core-2-2-0-preview3-now-available/\r\n\r\nPlease see below for a list of known issues in the 2.2.0 Preview 3 release.\r\n\r\n---\r\n\r\n## Some external CSS styles are failing to load for new Razor and MVC projects:\r\n\r\nWhen running a newly created MVC or Razor Pages project, some styles do not render.\r\n\r\nThis is caused by an integrity check failure for some of the referenced stylesheets. To fix the issue add a `crossorigin=\"anonymous\"` attribute to the `bootstrap.min.css` referencing `<link ...>` tag in the `_Layout.cshtml` file, as follows:\r\n\r\n```html\r\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.min.css\" \r\n\tasp-fallback-href=\"~/lib/bootstrap/dist/css/bootstrap.min.css\" \r\n\tasp-fallback-test-class=\"sr-only\" asp-fallback-test-property=\"position\" asp-fallback-test-value=\"absolute\" \r\n\tcrossorigin=\"anonymous\" \r\n\tintegrity=\"sha256-eSi1q2PG6J7g7ib17yAaWMcrr5GrtohYChqibrV7PBE=\"/>\r\n```\r\n\r\n---\r\n\r\n## URL generation for conventional routes with default values is invalid\r\n\r\nIn an MVC project using Endpoint Routing, URL generation using `IUrlHelper` can generate a URL incorrectly when the route template includes default values.\r\n\r\nExample:\r\n```\r\napp.UseMvc(routes =>\r\n{\r\n    routes.MapRoute(\"default\", \"{controller=Home}/{action=Index}/{id?}\");\r\n});\r\n```\r\n\r\n```\r\nUrl.Action(\"Index\", \"Home\", new { id = 17 });\r\n```\r\n\r\nThis can result in the following URL being generated `/?id=17` - this will work with most uses of MVC but the result of `/Home/Index/17` is intended.\r\n\r\n---\r\n\r\n## NullReferenceException thrown when using IHttpClientFactory\r\n\r\nCrashes can occur due to a bug in how cleanup timers are incorrectly started when using `IHttpClientFactory`. This can be worked around by setting `HttpClientFactoryOptions.HandlerLifetime` to an extremely long value or `Timeout.InfiniteTimespan`. \r\n\r\nhttps://github.com/aspnet/HttpClientFactory/issues/194\r\n\r\n---\r\n\r\nFor discussions, please go to https://github.com/aspnet/AspNetCore/issues/3642","Url":"https://github.com/aspnet/Announcements/issues/323","RelatedDescription":"Open issue \"ASP.NET Core 2.2.0 Preview 3 known issues\" (#323)"},{"Id":"368897417","IsPullRequest":false,"CreatedAt":"2018-10-10T23:45:50","Actor":"BrennanConroy","Number":"322","RawContent":null,"Title":"React to StackExchange.Redis v2.0","State":"open","Body":"We are introducing two new packages to use [StackExchange.Redis](https://www.nuget.org/packages/StackExchange.Redis/) 2.0 with ASP.NET Core Caching and SignalR. We are also introducing support for using Redis to store DataProtection key material using StackExchange.Redis 2.0.\r\n\r\nFor ASP.NET Core 2.2 we will continue to ship our existing packages which use StackExchange.Redis 1.0, to preserve compatibility for existing users. However, we suggest you update to the new package as soon as possible. These packages are now considered deprecated and will be removed in ASP.NET Core 3.0.\r\n\r\n### Caching ###\r\nWe are releasing a new package \"Microsoft.Extensions.Caching.StackExchangeRedis\" which will depend on StackExchange.Redis 2.0. \"Microsoft.Extensions.Caching.Redis\" will continue to ship in ASP.NET Core 2.2 with the StackExchange.Redis 1.0 dependency and will be removed in 3.0.\r\n\r\nTo use the new package, remove your dependency on [Microsoft.Extensions.Caching.Redis](https://www.nuget.org/packages/Microsoft.Extensions.Caching.Redis) (if present), and add a dependency to \"Microsoft.Extensions.Caching.StackExchangeRedis\". Next, change your `AddDistributedRedisCache` invocation in `ConfigureServices` to `AddStackExchangeRedisCache`. No further changes should be necessary.\r\n\r\n### DataProtection ###\r\nThe \"Microsoft.AspNetCore.DataProtection.Redis\" package is new in ASP.NET Core 2.2 and depends on StackExchange.Redis 1.0 in Preview 2. In Preview 3, this package has been renamed to \"Microsoft.AspNetCore.DataProtection.StackExchangeRedis\" and has been updated to use StackExchange.Redis 2.0.\r\n\r\nTo use the new package, remove your dependency on [Microsoft.AspNetCore.DataProtection.Redis](https://www.nuget.org/packages/Microsoft.AspNetCore.DataProtection.Redis) (if present), and add a dependency to \"Microsoft.AspNetCore.DataProtection.StackExchangeRedis\". Next, change your `PersistKeysToRedis` invocation in `ConfigureServices` to `PersistKeysToStackExchangeRedis`. No further changes should be necessary.\r\n\r\n### SignalR ###\r\nWe are releasing a new package \"Microsoft.AspNetCore.SignalR.StackExchangeRedis\" which will depend on StackExchange.Redis 2.0. \"Microsoft.AspNetCore.SignalR.Redis\" will continue to ship in ASP.NET Core 2.2 with the StackExchange.Redis 1.0 dependency and will be removed in 3.0.\r\n\r\nTo use the new package, remove your dependency on [Microsoft.AspNetCore.SignalR.Redis](https://www.nuget.org/packages/Microsoft.AspNetCore.SignalR.Redis) (if present), and add a dependency to \"Microsoft.AspNetCore.SignalR.StackExchangeRedis\". Next, change your `AddRedis` invocation in `ConfigureServices` to `AddStackExchangeRedis`. No further changes should be necessary.\r\n\r\n---\r\nFor questions or further discussions about the changes, please use https://github.com/aspnet/AspNetCore/issues/3606.","Url":"https://github.com/aspnet/Announcements/issues/322","RelatedDescription":"Open issue \"React to StackExchange.Redis v2.0\" (#322)"},{"Id":"368431099","IsPullRequest":false,"CreatedAt":"2018-10-09T23:00:09","Actor":"mikaelm12","Number":"321","RawContent":null,"Title":"SignalR Java Client Package Name Change","State":"open","Body":"_Please use [this issue](https://github.com/aspnet/SignalR/issues/3105) for discussion._\r\n\r\nThe SignalR java client which is currently in preview, was previously under the package name `com.microsoft.aspnet.signalr`. This was the case for the first and second previews of the Java client. Starting in preview 3 the package name will change to `com.microsoft.signalr`. This means that our groupid through maven central will change and that consuming the package through maven or gradle will be slightly different. \r\n\r\nHere's what bringing in the Java client after preview 3 releases without the actual build numbers should look similar to\r\n```xml\r\n<dependency>\r\n  <groupId>com.microsoft.signalr</groupId>\r\n  <artifactId>signalr</artifactId>\r\n  <version>PREVIEW 3 VERSION NUMBER</version>\r\n</dependency>\r\n```\r\n\r\n```gradle\r\nimplementation 'com.microsoft.signalr:signalr:PREVIEW 3 VERSION NUMBER'\r\n```","Url":"https://github.com/aspnet/Announcements/issues/321","RelatedDescription":"Open issue \"SignalR Java Client Package Name Change\" (#321)"},{"Id":"367932540","IsPullRequest":false,"CreatedAt":"2018-10-08T20:00:47","Actor":"natemcmaster","Number":"320","RawContent":null,"Title":"For contributors: unifying to fewer GitHub repos","State":"open","Body":"_Please use [this issue](https://github.com/aspnet/Home/issues/3598) for discussion._\r\n\r\nOver the next few months, we will reduce the number of repos in active development in the @aspnet organization by merging them together. We plan to condense about 53 repos into 5. Repos which merge with another will be archived on GitHub, which makes them read-only. We will also rename a few repositories. GitHub will automatically redirect URLs to issues and commits on renamed repositories. We will update the README and repo descriptions to help you navigate from archived repos to the new repo.\r\n\r\nAfter the merging is complete, the final set of repos will be as follows:\r\n\r\nRepo                            | Primary purpose\r\n--------------------------------|-----------------------------------------------\r\naspnet/AspNetCore               | ASP.NET Core runtime\r\naspnet/Extensions               | Microsoft.Extensions.* APIs\r\naspnet/EntityFrameworkCore      | Entity Framework Core\r\naspnet/AspLabs                  | Experiments not ready for production releases\r\n\r\nTo preserve as much history as possible, we will rename aspnet/Home to aspnet/AspNetCore, and aspnet/Common to aspnet/Extensions instead of creating new repos. We will preserve commit history by merging unrelated histories into the unified repos. We will also review open issues and move them when necessary to keep them aligned with the relevant code.\r\n\r\n### Motivation\r\n\r\nOur primary motivation is simplifying both our engineering systems and our GitHub interactions with all of you. We know there are some drawbacks to working in larger repos, but we find the benefits compelling enough to move forward with this change. The new set of repos more closely aligns with the layering of the products they ship.\r\n\r\n### Timeframe\r\n\r\nWe'll be starting the first round of changes soon. We expect the entire unification effort will take us several weeks. We'll migrate repositories in phases and adjust the plan along the way, as necessary.\r\n\r\n### Archived repos\r\n\r\nThe following repos will be merged into the main repos above. They will not be used any more for active development on 2.1 LTS and new releases. The source code for the projects will move to the new project with any issues we intend to keep working on. Remaining issues and pull requests will be closed. We do not plan to delete the repos or remove tagged commits, but the projects will become read-only.\r\n\r\n* AADIntegration           \r\n* Antiforgery              \r\n* AuthSamples              \r\n* AzureIntegration         \r\n* BasicMiddleware          \r\n* BrowserLink              \r\n* Caching                  \r\n* Common                   \r\n* Configuration            \r\n* CORS                     \r\n* DataProtection           \r\n* DependencyInjection      \r\n* Diagnostics              \r\n* DotNetTools              \r\n* EventNotification        \r\n* FileSystem               \r\n* Hosting                  \r\n* HtmlAbstractions         \r\n* HttpAbstractions         \r\n* HttpClientFactory        \r\n* HttpSysServer            \r\n* Identity                 \r\n* IISIntegration           \r\n* JavaScriptServices       \r\n* JsonPatch                \r\n* KestrelHttpServer        \r\n* Localization             \r\n* Logging                  \r\n* MetaPackages             \r\n* Microsoft.Data.Sqlite    \r\n* MusicStore               \r\n* Mvc                      \r\n* MvcPrecompilation        \r\n* Options                  \r\n* Proxy                    \r\n* Razor                    \r\n* ResponseCaching          \r\n* Routing                  \r\n* Scaffolding              \r\n* Security                 \r\n* ServerTests              \r\n* Session                  \r\n* SignalR                  \r\n* StaticFiles              \r\n* Templating               \r\n* Testing                  \r\n* Universe                 \r\n* WebHooks                 \r\n* WebSockets\r\n\r\n\r\n_Please use https://github.com/aspnet/Home/issues/3598 for discussion._  ","Url":"https://github.com/aspnet/Announcements/issues/320","RelatedDescription":"Open issue \"For contributors: unifying to fewer GitHub repos\" (#320)"},{"Id":"367922912","IsPullRequest":false,"CreatedAt":"2018-10-08T19:29:02","Actor":"pranavkm","Number":"319","RawContent":null,"Title":"3.0 - Removing Microsoft.AspNetCore.Mvc.WebApiCompatShim","State":"open","Body":"The Microsoft.AspNetCore.Mvc.WebApiCompatShim (WebApiCompatShim) package provides partial compatibility in ASP.NET Core with ASP.NET Web API 2 to simplify migrating existing Web API implementations to ASP.NET Core. However, apps using the WebApiCompatShim do not benefit from the API related features shipping in recent ASP.NET Core releases, such as improved Open API Spec genertaion, standardized error handling, and client code generation. To better focus our API efforts in 3.0, we plan to remove WebApiCompatShim. We recommend that existing applications using the WebApiCompatShim migrate to the newer `[ApiController]` model.\r\n\r\nFor questions or further discussions, please use https://github.com/aspnet/Mvc/issues/8570.","Url":"https://github.com/aspnet/Announcements/issues/319","RelatedDescription":"Open issue \"3.0 - Removing Microsoft.AspNetCore.Mvc.WebApiCompatShim\" (#319)"},{"Id":"365011293","IsPullRequest":false,"CreatedAt":"2018-09-28T19:23:51","Actor":"blowdart","Number":"318","RawContent":null,"Title":"Microsoft Security Advisory: iOS12 breaks social, WSFed and OIDC logins","State":"open","Body":"# Microsoft Security Advisory:  iOS12 breaks social, WSFed and OIDC logins\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about an incompatibly between iOS12 and some types of authentication. This advisory also provides guidance on what developers can do to remove current security restrictions added by ASP.NET to their applications to become compatible with iOS12.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/Identity/issues/1984 for ASP.NET Core Identity\r\nDiscussion for this issue can be found at https://github.com/aspnet/Security/issues/1864 for ASP.NET Core Cookie Authentication\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>What has changed\r\n\r\nThe recent iOS12 update has changed Safari's handling of [SameSite](https://tools.ietf.org/html/rfc6265) cookies. The SameSite attribute allows a developer to control when cookies are sent to a web site, enabling the flow to only occur when requests are from the same site. This standard was introduced to reduce exposure to Cross Site Request Forgery (CSRF) attacks. By default ASP.NET Core 2.0 and later protects its authentication cookies using the SameSite property. The change on Apple's part is not limited to ASP.NET Core applications, it is affecting multiple frameworks and authentication software which relay on HTTP forms in a browser, for example authenticating to a third party via Facebook, Twitter or browser based Open ID Connect (OIDC) mechanism.\r\n\r\nApple have stated they believe [their change is correct behavior](https://bugs.webkit.org/show_bug.cgi?id=188165), and that the fault lies in every other browser's implementation.\r\n\r\nWhile we take no stance on the correctness of browser behavior we feel that removing the SameSite protections would expose our customers, and their customers to a wider risk, as it would remove the protection provided everywhere, for all users, in any browser.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nIf your users can no longer login to your web application on iOS12 using Safari then you are affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix this?\r\n\r\nDevelopers can allow iOS12 Safari users to log into their applications by turn off SameSite protection in `ConfigureServices()`.\r\n\r\nIf you are using ASP.NET Core Identity you disable the protection by configuring cookies with the following code\r\n\r\n```c#\r\nservices.ConfigureExternalCookie(options =>\r\n{\r\n    // Other options\r\n    options.Cookie.SameSite = SameSiteMode.None;\r\n});\r\nservices.ConfigureApplicationCookie(options =>\r\n{\r\n    // Other options\r\n    options.Cookie.SameSite = SameSiteMode.None;\r\n});\r\n```\r\n\r\nIf you are using cookie authentication without ASP.NET Core identity you can turn off the protection with the following code\r\n\r\n```c#\r\nservices.AddCookie(CookieAuthenticationDefaults.AuthenticationScheme, options =>\r\n{\r\n    // Other options\r\n    options.Cookie.SameSite = Microsoft.AspNetCore.Http.SameSiteMode.None;\r\n})\r\n```\r\n\r\nIf you are using external OIDC providers you may be able to avoid the issue by changing the response mode your provider uses from a POST to a GET request, using the following code. Not all providers may support this.\r\n\r\n```c#\r\n.AddOpenIdConnect(\"myOIDProvider\", options => {\r\n    // Other options\r\n    options.ResponseType = \"code\";\r\n    options.ResponseMode = \"query\";\r\n};\r\n```\r\n\r\n_Note that in making these changes protection is removed for all users and all browsers. You should ensure that all your actions that make state changes are protected with [CSRF anti-forgery mechanisms](https://docs.microsoft.com/en-us/aspnet/core/security/anti-request-forgery) built into ASP.NET Core.\r\n\r\n#### Rebuilding your application\r\n\r\nAfter making these configuration changes you rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[Bug 188165 - iOS 12 Safari breaks ASP.NET Core 2.1 OIDC authentication](https://bugs.webkit.org/show_bug.cgi?id=188165)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 28, 2018): Advisory published.\r\n","Url":"https://github.com/aspnet/Announcements/issues/318","RelatedDescription":"Open issue \"Microsoft Security Advisory: iOS12 breaks social, WSFed and OIDC logins\" (#318)"},{"Id":"361087870","IsPullRequest":false,"CreatedAt":"2018-09-18T00:05:36","Actor":"halter73","Number":"317","RawContent":null,"Title":"Kestrel Connection Adapter Logging Namespace Changes","State":"open","Body":"The logging namespaces for Kestrel's HttpsConnectionAdapter and LoggingConnectionAdapter are changing in 2.2.0.\r\n\r\n1. The `HttpsConnectionAdapter` logging namespace is now `Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionAdapter`.\r\n2. The `LoggingConnectionAdapter` logging namespace is now `Microsoft.AspNetCore.Server.Kestrel.Core.Adapter.Internal.LoggingConnectionAdapter`.\r\n\r\nHere's an example HttpsConnectionAdapter log prior to the change:\r\n\r\n```\r\ndbug: HttpsConnectionAdapter[2]\r\n      Authentication of the HTTPS connection timed out.\r\n```\r\n\r\nAnd after:\r\n\r\n```\r\ndbug: Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionAdapter[2]\r\n      Authentication of the HTTPS connection timed out.\r\n```","Url":"https://github.com/aspnet/Announcements/issues/317","RelatedDescription":"Open issue \"Kestrel Connection Adapter Logging Namespace Changes\" (#317)"},{"Id":"359136062","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:10","Actor":"blowdart","Number":"316","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: ASP.NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when ASP.NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an ASP.NET Core web application. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing a specially crafted web requests to the ASP.NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how ASP.NET Core handles parsing web requests.\r\n\r\nThe underlying problem exists in the `System.IO.Pipelines` package. If you have other software which uses this package please follow the instructions in the [.NET Core bulletin](https://github.com/dotnet/announcements/issues/83).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/KestrelHttpServer/issues/2914\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses either of the packages with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.AspNetCore.All | 2.1.0, 2.1.1, 2.1.2, 2.1.3 | 2.1.4\r\nMicrosoft.AspNetCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3 | 2.1.4\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use Microsoft.AspNetCore.App or Microsoft.AspNetCore.All\r\n\r\nASP.NET Core 2.1 is distributed as part of the .NET Core runtime. To check the current installed runtimes open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed you will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.401\r\n Commit:    91b1c13032\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.401\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.3\r\n  Commit:  124038c13e\r\n\r\n.NET Core SDKs installed:\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf the highest .NET Core SDK version is less that 2.1.402 or the highest `Microsoft.AspNetCore.App` runtime version is less that 2.1.4 you are vulnerable to this issue. You may not see any SDK versions if you have only installed the runtime.\r\n\r\nTo update ASP.NET Core 2.1 you should [download](https://www.microsoft.com/net/download) and install the .NET Core SDK 2.1.402 on your development machines and build servers, and the .NET Core Runtime 2.1.4 on your deployment servers. Your application will roll forward to these versions on an application restart.\r\n\r\n#### Applications not using Microsoft.AspNetCore.App or Microsoft.AspNetCore.All\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/aspnet/Announcements/issues/316","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: ASP.NET Core Denial Of Service Vulnerability\" (#316)"},{"Id":"353145143","IsPullRequest":false,"CreatedAt":"2018-08-22T22:11:39","Actor":"pranavkm","Number":"315","RawContent":null,"Title":"3.0: Deprecating MvcPrecompilation tool ","State":"open","Body":"In ASP.NET Core 1.1, we introduced the `Microsoft.AspNetCore.Mvc.Razor.ViewCompilation` (MVC precompilation tool) package that added support for publish time compilation of Razor files (.cshtml files). Starting in ASP.NET Core 2.1, we introduced the [Razor SDK](https://docs.microsoft.com/en-us/aspnet/core/razor-pages/sdk?view=aspnetcore-2.1) that expanded on the features of the precompilation tool by adding support for build and publish time of Razor files. The SDK allows for verifying the correctness of cshtml files at build time while also improving on startup time for applications. The Razor SDK is on by default and no gesture is required to start using it.\r\n\r\nIn 3.0, we plan to remove the earlier MVC precompilation tool. Earlier versions of the package will continue receiving important bug and security fixes as part of our patch release. \r\n\r\nFor users of ASP.NET Core 2.1 or later, we recommend migrating to the Razor SDK if you haven't already. If you're currently using the precompilation tool and are unable to migrate to the Razor SDK due to bugs or missing features, please file an issue at https://github.com/aspnet/Razor/issues.\r\n\r\nPlease use https://github.com/aspnet/Mvc/issues/8313 for discussions.","Url":"https://github.com/aspnet/Announcements/issues/315","RelatedDescription":"Open issue \"3.0: Deprecating MvcPrecompilation tool \" (#315)"},{"Id":"349340221","IsPullRequest":false,"CreatedAt":"2018-08-10T00:56:39","Actor":"natemcmaster","Number":"314","RawContent":null,"Title":"3.0: deprecating Microsoft.AspNetCore.All","State":"open","Body":"Earlier this year, we announced the Microsoft.AspNetCore.App metapackage (see https://github.com/aspnet/Announcements/issues/287). That announcement said:\r\n\r\n> The existing Microsoft.AspNetCore.All meta-package will continue to be made available throughout the 2.x lifecycle, but **we recommend customers move to the new Microsoft.AspNetCore.App meta-package** and then add individual references to any of the removed packages if their app requires it.\r\n\r\nSee [our documentation for details](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/metapackage?view=aspnetcore-2.1#migrating-from-microsoftaspnetcoreall-to-microsoftaspnetcoreapp) on how to migrate from Microsoft.AspNetCore.All to .App.\r\n\r\nWe have begun working on ASP.NET Core 3.0, and as a part of that, we will stop producing the Microsoft.AspNetCore.All metapackage and the matching Microsoft.AspNetCore.All shared framework in the 3.0 nightly builds.\r\n\r\nThis package will still be available in ASP.NET Core 2.2 and will continue to receive servicing updates in ASP.NET Core 2.1.\r\n\r\nPlease use https://github.com/aspnet/Home/issues/3418 for questions or comments.\r\n","Url":"https://github.com/aspnet/Announcements/issues/314","RelatedDescription":"Open issue \"3.0: deprecating Microsoft.AspNetCore.All\" (#314)"},{"Id":"346800428","IsPullRequest":false,"CreatedAt":"2018-08-01T23:00:38","Actor":"pranavkm","Number":"313","RawContent":null,"Title":"CorsMiddleware must be explicitly configured to specify all allowed headers","State":"open","Body":"In versions of ASP.NET Core 2.1.0 and earlier, the CorsMiddleware always allowed certain headers in the `Access-Control-Request-Headers` to be sent regardless of the values configured in `CorsPolicy.Headers`. This list of headers includes:\r\n\r\n* `Accept`\r\n* `Accept-Language`\r\n* `Content-Language`\r\n* `Origin`\r\n\r\nFor instance, consider an application configured as follows:\r\n\r\n```C#\r\napp.UseCors(policy => policy.WithHeaders(\"Cache-Control\"));\r\n```\r\n\r\nIn 2.1 and earlier, the CORS middleware would respond successfully to a preflight request with the following request header:\r\n\r\n`Access-Control-Request-Headers: Cache-Control, Content-Language`\r\n\r\nFor 2.2.0, the CORS middleware would no longer treat this as a policy match. The server must explicitly configure policy to allow the `Content-Language` header:\r\n\r\n```C#\r\napp.UseCors(policy => policy.WithHeaders(\"Cache-Control\", \"Content-Language\"));\r\n```\r\n\r\nFor more information on CORS, please refer to [the documentation](https://docs.microsoft.com/en-us/aspnet/core/security/cors?view=aspnetcore-2.1).","Url":"https://github.com/aspnet/Announcements/issues/313","RelatedDescription":"Open issue \"CorsMiddleware must be explicitly configured to specify all allowed headers\" (#313)"},{"Id":"345927303","IsPullRequest":false,"CreatedAt":"2018-07-30T20:44:14","Actor":"danroth27","Number":"312","RawContent":null,"Title":"Razor compilation APIs exposing Roslyn types being obsoleted in 2.2.0 and removed in 3.0.0","State":"open","Body":"As part of the 2.1.0 release, ASP.NET Core added support for build time compilation of cshtml files (Razor Views & Razor Pages). This feature is on by default and allows build time verification of the correctness of Razor files, and also faster startup performance. Additionally, MVC watches for changes to cshtml files and seamlessly updates build-time compiled views with runtime compiled views. This allows editing cshtml files and then refreshing the browser to see the changes.\r\n\r\nMVC uses the app's compilation context, details about the references and settings that were used to compile the source code (.cs) in the app, to compile views at runtime. In addition to the compilation context, MVC exposes options such as [RazorViewEngineOptions.CompilationCallback](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.razor.razorviewengineoptions.compilationcallback?view=aspnetcore-2.1) and [AdditionalCompilationReferences](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.razor.razorviewengineoptions.additionalcompilationreferences?view=aspnetcore-2.1) that allow configuring compilation specifically for runtime. \r\n\r\nRuntime specific customizations are unavailable at build time and consequently the two outputs could be different.\r\n\r\nTo address this inconsistency, we plan on removing APIs in MVC that change or modify runtime compilation. For 2.2.0, we're marking these APIs obsolete with the intent to remove them in 3.0.0. This is the list of affected APIs:\r\n\r\n* Properties on `Microsoft.AspNetCore.Mvc.Razor.RazorViewEngineOptions`\r\n    * `AdditionalCompilationReferences`\r\n    * `CompilationCallback`\r\n\r\n* `Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeature`\r\n* `Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeatureProvider`\r\n* `Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorReferenceManager`\r\n\r\nNo changes are required to your application if it does not use these APIs.\r\n\r\nApps using these APIs to add assembly references to the compilation context for runtime compilation should instead use [`ApplicationPartManager.AddApplicationPart`](https://docs.microsoft.com/dotnet/api/microsoft.extensions.dependencyinjection.mvccoremvccorebuilderextensions.addapplicationpart) to add application parts for each assembly reference, or switch to a built-time compilation model (see [Create reusable UI using the Razor Class Library project](https://docs.microsoft.com/aspnet/core/razor-pages/ui-class)).\r\n\r\nOther scenarios blocked by the removal of these APIs and not covered by alternative MVC features should raised in the linked discussion issue.\r\n\r\nFor discussion, use https://github.com/aspnet/Mvc/issues/8177","Url":"https://github.com/aspnet/Announcements/issues/312","RelatedDescription":"Open issue \"Razor compilation APIs exposing Roslyn types being obsoleted in 2.2.0 and removed in 3.0.0\" (#312)"},{"Id":"339929062","IsPullRequest":false,"CreatedAt":"2018-07-10T17:00:26","Actor":"blowdart","Number":"311","RawContent":null,"Title":"Microsoft Security Advisory ASPNETCore-July18: ASP.NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory ASPNETCore-July18: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.0 and 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in ASP.NET Core when a malformed request is terminated. An attacker who successfully exploited this vulnerability could cause a denial of service attack.\r\n\r\nThe update addresses the vulnerability by correcting how ASP.NET Core handles such requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/KestrelHttpServer/issues/2708\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If your application is behind a forwarding proxy such is Internet Information Server, Azure Application Gateway or nginx you will not be affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses Microsoft.AspNetCore.Server.Kestrel.Core with a vulnerable version listed below and not hosted behind a forwarding proxy.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1, 2.0.2, 2.0.3 <br /> 2.1.0, 2.1.1 | 2.0.4 <br /> 2.1.2\r\nMicrosoft.AspNetCore.All | 2.0.0, 2.0.1, 2.0.2, 2.0.3, 2.0.4, 2.0.5, 2.0.6, 2.0.7, 2.0.8 <br /> 2.1.0, 2.1.1  | 2.0.9 <br /> 2.1.2\r\nMicrosoft.AspNetCore.App | 2.1.0, 2.1.1 | 2.1.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n### ASP.NET Core 2.1\r\n\r\nTo update ASP.NET Core 2.1 you should [download](https://www.microsoft.com/net/download) and install the .NET Core SDK 2.1.302 on your development machines and build servers, and the .NET Core Runtime 2.1.2 on your deployment servers. Your application will roll forward to these versions on an application restart.\r\n\r\n### ASP.NET Core 2.0\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage update its version number to 2.0.9 to update the `Microsoft.AspNetCore.Server.Kestrel.Core` package, recompile, and redeploy. On your deployment servers, you should [download](https://github.com/dotnet/core/blob/master/release-notes/download-archives/2.0.9-download.md) and install the .NET Core 2.0.9 using the Windows Server Hosting Bundle for Windows and the `dotnet-hosting-2.0.9` package for Linux servers.\r\n\r\n### ASP.NET 2.0 & 2.1 not targeting the meta-packages\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects.\r\n\r\nThe `project.assets.json`files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.8\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.All` version 2.0.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.All` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.9\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) .\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `Microsoft.AspNetCore.Server.Kestrel.Core/2.0.0` is a reference to version 2.0.0 of `Microsoft.AspNetCore.Server.Kestrel.Core`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Server.Kestrel.Core` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.34 />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.1 (July 10, 2018): Added .App meta-package details.\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2018-07-10_\r\n","Url":"https://github.com/aspnet/Announcements/issues/311","RelatedDescription":"Open issue \"Microsoft Security Advisory ASPNETCore-July18: ASP.NET Core Denial Of Service Vulnerability\" (#311)"},{"Id":"339928979","IsPullRequest":false,"CreatedAt":"2018-07-10T17:00:13","Actor":"blowdart","Number":"310","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8171: ASP.NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8171: ASP.NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass in ASP.NET Core when the number of incorrect login attempts is not validated. An attacker who successfully exploited this vulnerability could try an infinite number of authentication attempts.\r\n\r\nThe update addresses the vulnerability by correcting how ASP.NET Core validates the number of incorrect login attempts.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/Identity/issues/1870\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If your application does not use ASP.NET Core's implementation of multi-factor authentication you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses Microsoft.AspNetCore.Identity with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Identity | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5 <br /> 1.1.0, 1.1.1, 1.1.2, 1.1.3, 1.1.4, 1.1.5 <br /> 2.0.0, 2.0.1, 2.0.2, 2.0.3 <br /> 2.1.0, 2.1.1 | 1.0.6 <br /> 1.1.6 <br /> 2.0.4 <br /> 2.1.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n### ASP.NET Core 2.1\r\n\r\nTo update ASP.NET Core 2.1 you should [download](https://www.microsoft.com/net/download) and install the .NET Core SDK 2.1.302 on your development machines and build servers, and the .NET Core Runtime 2.1.2 on your deployment servers. Your application will roll forward to these versions on an application restart.\r\n\r\n### ASP.NET Core 2.0\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage update its version number to 2.0.9 to update the `Microsoft.AspNetCore.Identity` package, recompile, and redeploy. On your deployment servers, you should [download](https://github.com/dotnet/core/blob/master/release-notes/download-archives/2.0.9-download.md) and install the .NET Core 2.0.9 using the Windows Server Hosting Bundle for Windows and the `dotnet-hosting-2.0.9` package for Linux servers.\r\n\r\n### ASP.NET Core 1.0, 1.1 or 2.0 not targeting the metapackage.\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n### <a name=\"project-format\"></a>.NET Core Project formats\r\n\r\n.NET Core has two different project file formats, depending on what software created the project.\r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1, .NET Core 2.0 and Microsoft Visual Studio 2017.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file or your `project.json` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects *OR*.\r\n* By examining the `project.lock.json` file contained in the root directory of your project for `project.json` based projects.\r\n\r\nThe `project.assets.json` and `project.lock.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in a csproj based project / Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Identity\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.Identity` version 2.0.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.Identity` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Identity\" Version=\"2.0.4\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"direct-dependencies-vs2015\"></a> Fixing Direct Dependencies in project.json based project / Visual Studio 2015\r\n\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n     \"Microsoft.AspNetCore.Identity\" : \"1.0.5\"\r\n    }\r\n```\r\n\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Mvc.Core` and `Microsoft.AspNetCore.Identity`.\r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on a vulnerable package, `Microsoft.AspNetCore.Identity` version 1.0.5.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `Microsoft.AspNetCore.Identity` to 1.0.6.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n    \"Microsoft.AspNetCore.Identity \": \"1.0.6\"\r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) or the [the `project.lock.json` file](#project-lock-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json (csproj/VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `Microsoft.AspNetCore.Identity/2.0.0` is a reference to version 2.0.0 of `Microsoft.AspNetCore.Identity`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Identity` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Identity\" Version=\"2.0.4\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### <a name=\"project-lock-json\"></a> Manually reviewing project.lock.json (project.json/VS2015)\r\n\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `Microsoft.AspNetCore.Identity/1.0.1` is a reference to v1.0.1 of `Microsoft.AspNetCore.Identity`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to a vulnerable version of  `Microsoft.AspNetCore.Identity` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `Microsoft.AspNetCore.Identity` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Identity\": \"1.0.6\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Martin Knafve](https://www.linkedin.com/in/martin-knafve-99187a2/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8171](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8171)\r\n\r\n### Revisions\r\n\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-07-10_\r\n","Url":"https://github.com/aspnet/Announcements/issues/310","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8171: ASP.NET Core Security Feature Bypass Vulnerability\" (#310)"},{"Id":"336797507","IsPullRequest":false,"CreatedAt":"2018-06-28T22:10:48","Actor":"natemcmaster","Number":"309","RawContent":null,"Title":"For contributors: branch name changes in ASP.NET Core repos","State":"open","Body":"Over the coming weeks, we are planning on making the following changes to most projects in https://github.com/aspnet that are used to build ASP.NET Core.\r\n\r\n* We will create a branch named \"release/2.2\". Work on this branch will be part of [ASP.NET Core 2.2](https://github.com/aspnet/Announcements/issues/307)\r\n* We will rename the \"dev\" branch to \"master\". This is part of aligning aspnet repos with the branch naming used by other Microsoft teams.\r\n* We will change the default branch to \"master\" on GitHub.\r\n* Update the product branding on \"master\" to 3.0. Work on this branch will eventually become part of [ASP.NET Core 3.0](https://blogs.msdn.microsoft.com/dotnet/2018/05/07/net-core-3-and-support-for-windows-desktop-applications/)\r\n\r\nTo help us prevent too much drift between release/2.2 and master, we will enable some automation to merge all changes from release/2.2 into master (3.0).\r\n\r\n## FAQ\r\nThis change may affect the way you help contribute to ASP.NET Core. As a result of this change and dicussion within our team, we've anticipated at least two questions you may have.\r\n\r\n#### Which branch should I use for my work?\r\n<img src=\"https://user-images.githubusercontent.com/2696087/42063035-b5fc9e42-7ae4-11e8-9916-a708fcc8e0e6.png\" width=\"500\" />\r\n\r\n#### I opened my PR to the wrong branch. What should I do?\r\n \r\nYou can edit a PR’s target branch.\r\n\r\n<img width=\"700\" alt=\"one\" src=\"https://user-images.githubusercontent.com/2696087/42063074-eb3060a8-7ae4-11e8-8ec2-d569f8e07f78.png\">\r\n<img width=\"700\" alt=\"two\" src=\"https://user-images.githubusercontent.com/2696087/42063083-f8a9564a-7ae4-11e8-91f0-f57e039085f8.png\">\r\n\r\n\r\n## Questions? Comments?\r\n\r\nThis issue is locked to reduce noise on this repo. Please use https://github.com/aspnet/Home/issues/3278 for questions and comments.\r\n\r\nThanks,\r\nNate","Url":"https://github.com/aspnet/Announcements/issues/309","RelatedDescription":"Open issue \"For contributors: branch name changes in ASP.NET Core repos\" (#309)"},{"Id":"335579239","IsPullRequest":false,"CreatedAt":"2018-06-25T21:44:22","Actor":"divega","Number":"308","RawContent":null,"Title":"EF Core 2.2 Roadmap","State":"open","Body":"## EF Core 2.2 is a small release\r\n\r\nUnlike EF Core 2.1, the 2.2 release will include a small number of new features. We are concentrating most of our efforts to add new functionality on the 3.0 release. Still, you can expect 2.2 to include lots of bugs fixes, community contributions and small improvements.\r\n\r\nYou can access the list of issues currently assigned to the 2.2 milestone using [this query](https://github.com/aspnet/EntityFrameworkCore/issues?q=is%3Aopen+is%3Aissue+milestone%3A2.2.0+sort%3Areactions-%2B1-desc) on our issue tracking system.  \r\n\r\n## Schedule\r\nThe schedule of EF Core 2.2 will align with the schedule of .NET Core and ASP.NET Core 2.2. See [the ASP.NET Core 2.2 Roadmap announcement](https://github.com/aspnet/Announcements/issues/307).\r\n\r\nOur current plan is to have three previews before we ship RTM near the end of 2018:\r\n\r\n- August – Preview 1\r\n- September - Preview 2\r\n- October - Preview 3\r\n- Before end-of-year – RTM\r\n\r\n As usual, this post reflects our current plan, but things may change as we make progress. \r\n\r\n## New features\r\n\r\n### Reverse engineering of database views into query types (This feature was postponed. See update at https://github.com/aspnet/Announcements/issues/308#issuecomment-432395781)\r\n\r\nIn EF Core 2.1 we added query types, which allow mapping .NET objects to views and tables without keys. In 2.2, we plan to leverage this new capability to automatically map existing database views to query types. \r\n\r\nYou can track the progress of this at https://github.com/aspnet/EntityFrameworkCore/issues/1679.\r\n\r\n###  Support for collections of owned entities\r\n\r\nIn EF Core 2.0 we added the concept of owned entity types, which allows modeling ownership relationship that are common between entities that are part of the same document in document-oriented databases or the same aggregate if you use Domain-Driven Design concepts in your model.\r\n\r\nUntil now, we only support reference navigation properties to owned entities. In EF Core 2.2, we plan to enhance this functionality to map collection navigation properties to owned entities. \r\n\r\nYou can track the progress of this at https://github.com/aspnet/EntityFrameworkCore/issues/8172.\r\n\r\n## Other work\r\n\r\nThere are some additional work items that are not strictly EF Core 2.2 features, but we still track as part of the 2.2 milestone because we are doing the work in the same timeframe:\r\n\r\n### Cosmos DB provider\r\n\r\nA lot of our efforts are going into productizing an EF Core provider for the SQL API in Cosmos DB.\r\nWe have already created a prototype, which we have shown in demos such as in this [this EF Core 2.1 talk](https://www.youtube.com/watch?v=k55kDH_ixrQ) we did at the Microsoft Build conference.\r\n\r\nDue to competing priorities, releasing a preview of this provider has taken more than what we originally planned, but we are working on it now, and the current plan is to release a stable version by the end of this calendar year.\r\n\r\nYou can track our progress on this issue: https://github.com/aspnet/EntityFrameworkCore/issues/12086. \r\n\r\n### Preview of spatial support for SQL Server\r\n\r\nWe are also focusing on adding spatial support as an extension to the SQL Server provider for EF Core.\r\nNote that the PostgreSQL provider (Npgsql) already added support in EF Core 2.1. Beside implementing this functionality for SQL Server, we are working closely with the developers of Npgsql to try to achieve a consistent and hopefully improved experience across providers.\r\n\r\nNote that we aren't committing to having a final version of the spatial support for the end of the current calendar year. But we are actively working on this now, and as we make progress, we should be able to provide a more precise estimate.   \r\n\r\nYou can track our progress on this issue: https://github.com/aspnet/EntityFrameworkCore/issues/1100.\r\n\r\n### Improve test coverage for LINQ and reduce query regressions in future releases\r\n\r\nIn the last few releases, we have seen that when we commit improvements to our LINQ implementation, we often break queries that were previously working. The main challenge is that LINQ defines a huge space of possible queries to test, and it is very complex to measure what level of test coverage we have, even for a specific query operator. In the 2.2 timeframe, we will be investing on improving test coverage for this huge space. We also plan to experiment with new approaches to add appropriate coverage, and to reduce the likelihood of introducing regressions in future releases.\r\n\r\nYou can track our progress on this at https://github.com/aspnet/EntityFrameworkCore/issues/12046. \r\n\r\nFor discussion on this roadmap, please use https://github.com/aspnet/EntityFrameworkCore/issues/12465. ","Url":"https://github.com/aspnet/Announcements/issues/308","RelatedDescription":"Open issue \"EF Core 2.2 Roadmap\" (#308)"},{"Id":"335571873","IsPullRequest":false,"CreatedAt":"2018-06-25T21:19:36","Actor":"glennc","Number":"307","RawContent":null,"Title":"ASP.NET Core 2.2 Roadmap","State":"open","Body":"We have grouped the ASP.NET Core 2.2 release into a few themes:\r\n\r\n- APIs & Services\r\n- Server improvements\r\n- SignalR\r\n\r\n## Rough Schedule\r\nWe are currently planning to have 3 previews before RTM:\r\n - August – Preview 1\r\n - September - Preview 2\r\n - October - Preview 3\r\n - Before End-of-year – RTM\r\n\r\nAs with our previous roadmap posts this is what we intend right now, but it's subject to change as we continue development.\r\n\r\n## APIs and Services\r\n\r\nThe 'north star' for this version is to generate better metadata about your app and use that data to make your dev experience better and more productive. This is the main focus for 2.2.\r\n\r\n### API Controller conventions\r\nIn 2.1 we added controller specific conventions that make Web API development more convenient with the [ApiController attribute](https://docs.microsoft.com/en-us/aspnet/core/web-api/index?view=aspnetcore-2.1#annotate-class-with-apicontrollerattribute). In 2.2 we want to expand on this concept to provide metadata for API Explorer and provide a better end-to-end API documentation experience.\r\n\r\nWe want to make it possible for all MVC Core applications to have a good Swagger/OpenAPI definition by default. By following common patterns, your actions will produce rich metadata without falling into 'attribute soup' where you list every possible status code that every action in your app could return. We will include a default set of conventions that match what ASP.NET Core scaffolding generations. It will also be possible to write and share your own conventions to reflect your desired contracts. \r\n\r\nWe will include a set of analyzers that will help you find cases where code that doesn't match the API Explorer metadata, and a code-fix that provides options to explicitly specify the response type metadata, create a new convention with a different pattern, or just let you write code to satisfy the convention.\r\n\r\nAs a concrete example, you could write a convention that says \"every action method that starts with 'Create' will return an HTTP 201\". If you wrote the following code, then you would receive a warning.\r\n\r\n```csharp\r\n[HttpPost(\"/orders\")]\r\npublic ActionResult<Order> CreateOrder(OrderData orderData)\r\n{\r\n    ....\r\n    return Ok(new Order() {...});\r\n}\r\n```\r\n\r\nThis code doesn't match your Swagger/OpenAPI metadata (from the convention) - which says that this action returns a 201. Once you see this, you could `ctrl + .` to add the attributes for what we do know about this method, opting out of conventions, or you could change the code.\r\n\r\nThe analyzer will also be able to 'check your work' if you are being explicit about status codes and results using the existing attributes - it does not require you to use the conventions. Details for how this will all work can be discussed here: https://github.com/aspnet/Mvc/issues/7802\r\n\r\nLet's look at a more fleshed-out out example. The following code snippet is what is required to generate a reasonable Open API document for an action method that will get an item by ID or return a 404:\r\n\r\n```csharp\r\n[ApiController]\r\npublic class CatalogController : ControllerBase\r\n{\r\n    [HttpGet]\r\n    [Route(\"items/{id:int}\")]\r\n    [ProducesResponseType((int)HttpStatusCode.NotFound)]\r\n    [ProducesResponseType(typeof(CatalogItem),(int)HttpStatusCode.OK)]\r\n    public async Task<ActionResult<CatalogItem>> GetItemById(int id)\r\n    {\r\n    }\r\n    ...\r\n}\r\n```\r\n\r\nIn 2.2 with the default conventions the following code should generate the same Open API document that the above code sample does, and this shipped analyzers will give you hints when you do something that doesn't match so you know to go and add attributes or change the conventions:\r\n\r\n```csharp\r\n[ApiController]\r\npublic class CatalogController : ControllerBase\r\n{\r\n    [HttpGet]\r\n    [Route(\"items/{id:int}\")]\r\n    public async Task<ActionResult<CatalogItem>> GetItemById(int id)\r\n    {\r\n    }\r\n    ...\r\n}\r\n```\r\n\r\n### OpenAPI generation\r\nWith the conventions described above it will be possible for code that uses the API Explorer to generate Open API documents to be better by default, since the code you write will either follow the conventions or have attributes allowing generators to create better documents.\r\n\r\n### Dispatcher\r\nIn 2.2 we will introduce a new routing system that will expand the set of scenarios where routing is useful – tentatively called Dispatcher. \r\n\r\nThe current routing system was designed to support MVC’s historical scenarios without much thought to how routing and the composable middleware pipeline will work together. The Dispatcher is designed to run the URL matching step very early in the pipeline so that middleware can see the Endpoint that was selected as well as metadata that is associated with that endpoint. Like existing routing, the dispatcher will branch and call the actual endpoint at the end of the pipeline.\r\n\r\nA concrete example of how this helps us is with CORS. Today there is both a CORS middleware AND a CORS feature of MVC (https://docs.microsoft.com/en-us/aspnet/core/security/cors?view=aspnetcore-2.1). Because routing information is deeply integrated with MVC we can't apply CORS policies that only apply to specific controllers until after we know what controller has been selected. However, if you also want CORS policies to apply to other parts of your pipeline then you need the middleware. This has been a source of confusion for many and we can simplify it if all of the middleware pipeline can have as much information about routing as MVC does today.\r\n\r\nWe’re also using this opportunity to make improvements to the performance of routing and dispatching for MVC and other scenarios.\r\n\r\n### HTTP API REPL tooling\r\nToday there are no tools built into Visual Studio or the dotnet CLI to help you execute HTTP verbs against your API. We have a great language, debugger, and framework but they are somewhat limited when it's difficult to send a POST to my app to see what happens. In 2.2 we want to build a CLI experience for exploring HTTP APIs to imcrease your API inner loop productivity. The CLI builds on all the features we've talked about above as some of its advanced features, like listing all routes in your app, are enabled by consuming the metadata we have about your app via Open API documents. That means the CLI should be useful for executing any HTTP verb, but really shines when you feed it more data like Open API docs. We intend to start by shipping this as a standalone global tool while we explore its feature set and potential.\r\n\r\nYou can see a demo and description of this in Scott Hunter and Scott Hanselman's BUILD talk here: https://youtu.be/KAIJ3ezQb3c?t=18m\r\n\r\n### API client generation (C# & TypeScript)\r\nOnce you have an API with rich metadata and done exploring and testing it, then you need to go and write some client code to call and make use of your API. We are going to build an experience for generating this code based on the same data and documentation described above. We envision a few pieces for this story, one part is a dotnet tool that can generate code from an Open API document, the other is MSBuild SDK work to allow a `ServiceReference` to another project in a solution. That reference will cause build time client code generation to happen via the tool that can generate code. We expect this to work in a similar way to the EF Core tooling experience, where your application is built and most of your startup code executed but instead of running it we use the data we have about your code to generate a client.\r\n\r\n### Authorization Server\r\nOne of the largest gaps we’ve had has been around authorization for applications beyond a simple forms based login. We plan to fill that gap with a simple to use OpenID Connect based authorization server, which will allow your ASP.NET application to act as an authentication point for your projects, be they web site to API, SPA to API, native application to an API or, for distributed applications API to API. As we are concentrating on first party applications we can make the code you need to plumb in trivial, getting as close to zero configuration as you can,  we’re not aiming to replace the excellent third-party solutions out there which enable richer scenarios like third-party applications or which provide a flexibility in configuration and authentication flow.\r\n\r\n## Server Improvements\r\n\r\n### Health Checks\r\nThis feature is a way to trivially setup an endpoint in your application that can be used to check the health of your application, potentially taking into account things like memory consumption or database availability as well as just \"can I accept a HTTP request\".\r\n\r\n### HTTP/2 in Kestrel & HttpClient\r\nThe title says it all in this case. HTTP/2 support for all. We started this work some time ago, and have had the protocol mostly implemented for a while but not compiled into the product since it wasn't ready. This version we will finish that work and implement the missing features.\r\n\r\n### In-proc ANCM\r\nRunning ASP.NET Core applications in-process in IIS, giving a significant performance boost.\r\n\r\n## SignalR\r\n\r\n### Add Java & C++ clients\r\nAllow customers using Java or C++ to connect to SignalR servers, and the [Azure SignalR Service](https://azure.microsoft.com/en-us/blog/azure-signalr-service-a-fully-managed-service-to-add-real-time-functionality/).\r\n\r\n## Other\r\nAs with all releases there is a large tail of bug fixes, performance improvements, small features, and community PRs that we will also work on. You can see the full list of work by browsing the 2.2 milestones on the various [repositories](https://github.com/aspnet/).\r\n\r\nFor discussion on the roadmap in general, use https://github.com/aspnet/Home/issues/3265","Url":"https://github.com/aspnet/Announcements/issues/307","RelatedDescription":"Open issue \"ASP.NET Core 2.2 Roadmap\" (#307)"},{"Id":"333804954","IsPullRequest":false,"CreatedAt":"2018-06-19T19:21:13","Actor":"anurse","Number":"306","RawContent":null,"Title":"SignalR Client 2.1.1 in UWP apps with Minimum Version of 1803","State":"open","Body":"ASP.NET Core 2.1.1 contains fixes to resolve blocking issues when using the SignalR Client from UWP applications where the minimum version is set to \"Windows 10, version 1803\". However, these fixes also require some additional dependencies.\r\n\r\n**NOTE**: UWP Applcations with a minimum version set **below** \"Windows 10, version 1803\" (for example, if the minimum version is set to \"Fall Creators Update\") are **not** affected by this issue and **do not require** these steps.\r\n\r\nIn order to use the SignalR Client in UWP applications where the minimum version is set to \"Windows 10, version 1803\" you will need to:\r\n\r\n1. Upgrade `Microsoft.AspNetCore.SignalR.Client` to `1.0.1`. This build is now available on NuGet.\r\n1. Add the following **additional** package references to your project. These are referenced transitively by the SignalR Client, but newer versions are required to resolve this issue. We are planning to improve this in a future patch.\r\n    * `System.Threading.Tasks.Extensions` version `4.5.1`\r\n    * `System.Runtime.CompilerServices.Unsafe` version `4.5.1`\r\n\r\nFor discussion, use https://github.com/aspnet/SignalR/issues/2406","Url":"https://github.com/aspnet/Announcements/issues/306","RelatedDescription":"Open issue \"SignalR Client 2.1.1 in UWP apps with Minimum Version of 1803\" (#306)"},{"Id":"333802959","IsPullRequest":false,"CreatedAt":"2018-06-19T19:15:05","Actor":"anurse","Number":"305","RawContent":null,"Title":"SignalR Client 2.1.1 in Xamarin","State":"open","Body":"ASP.NET Core 2.1.1 contains fixes to resolve blocking issues when using the SignalR **Client** from Xamarin. However, these fixes also require an updated build of Xamarin.iOS and Xamarin.Android, as well as some additional dependencies.\r\n\r\nIn order to use the SignalR Client in Xamarin applications you will need to:\r\n\r\n1. Upgrade `Microsoft.AspNetCore.SignalR.Client` to `1.0.1`. This build is now available on NuGet.\r\n1. Upgrade Xamarin to the appropriate version:\r\n    * Xamarin.Android `8.4.0.1`\r\n    * Xamarin.iOS `11.14.0.4`\r\n    * These will be included in:\r\n      * Visual Studio 15.8 **Preview 3** (not released at the time of publishing, but coming soon)\r\n      * Visual Studio for Mac 7.6 **Preview 3** (not released at the time of publishing, but coming soon)\r\n\r\nFor discussion, use https://github.com/aspnet/SignalR/issues/1886","Url":"https://github.com/aspnet/Announcements/issues/305","RelatedDescription":"Open issue \"SignalR Client 2.1.1 in Xamarin\" (#305)"},{"Id":"329851587","IsPullRequest":false,"CreatedAt":"2018-06-06T13:30:30","Actor":"ToLearnMoe","Number":"304","RawContent":null,"Title":"怎么找工作啊","State":"closed","Body":"我学spirng的同学都上班两个月了我实习都没找到，学了给asp告诉我现在不能用了要什么点apsnet。你们行不行啊\r\n\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n!!! DO NOT POST ISSUES IN THIS REPO !!!\r\n\r\nThis repo is for team announcements only. See https://github.com/aspnet/announcements#announcements.\r\n\r\nTo file a bug or start a discussion, please find the appropriate repo in https://github.com/aspnet and create a new issue. \r\nFor general issue discussions please go to https://github.com/aspnet/Home/issues and create a new issue.\r\n","Url":"https://github.com/aspnet/Announcements/issues/304","RelatedDescription":"Closed issue \"怎么找工作啊\" (#304)"},{"Id":"329603099","IsPullRequest":false,"CreatedAt":"2018-06-05T20:11:55","Actor":"AngelosP","Number":"303","RawContent":null,"Title":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator","State":"closed","Body":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/\r\n\r\nFor discussion, use https://github.com/aspnet/Tooling/issues/1075","Url":"https://github.com/aspnet/Announcements/issues/303","RelatedDescription":"Closed issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator\" (#303)"},{"Id":"327435771","IsPullRequest":false,"CreatedAt":"2018-05-29T18:26:40","Actor":"shirhatti","Number":"302","RawContent":null,"Title":"IIS in-process hosting moved out of ASP.NET Core 2.1","State":"open","Body":"We are moving IIS in-process hosting out of the ASP.NET Core 2.1 to give more time to validate the design and implementation. We will ship IIS in-process hosting as part of the ASP.NET Core 2.2 release.\r\n\r\n### Why?\r\n\r\nIIS in-process hosting  is a brand new server implementation and hasn't received sufficient attention during the ASP.NET Core 2.1 release for us to feel comfortable shipping it at this time. \r\n\r\nFor discussion, use https://github.com/aspnet/IISIntegration/issues/878","Url":"https://github.com/aspnet/Announcements/issues/302","RelatedDescription":"Open issue \"IIS in-process hosting moved out of ASP.NET Core 2.1\" (#302)"},{"Id":"322891671","IsPullRequest":false,"CreatedAt":"2018-05-14T16:32:50","Actor":"jkotalik","Number":"301","RawContent":null,"Title":"HttpsRedirectionMiddleware will not redirect to HTTPS if no port is available","State":"open","Body":"We have changed the behavior of the HttpsRedirectionMiddleware between 2.1.0-preview2 to 2.1.0-rc1. Instead of always redirecting a request to HTTPS, we will now not redirect to HTTPS if no port is available. The HTTPS port can be specified by setting ```HttpsRedirectionOptions.HttpsPort```, setting the ASPNETCORE_HTTPS_PORT environment variable, or by setting an HTTPS url in launchsettings.json.\r\n\r\nIf you want to continue keeping the original behavior the HttpsRedirectionMiddleware which redirects to port 443, you can set the ```HttpsRedirectionOptions.HttpsPort = 443```.\r\n \r\n---\r\n\r\n*Please use aspnet/BasicMiddleware#329 for further discussion.*","Url":"https://github.com/aspnet/Announcements/issues/301","RelatedDescription":"Open issue \"HttpsRedirectionMiddleware will not redirect to HTTPS if no port is available\" (#301)"},{"Id":"321270218","IsPullRequest":false,"CreatedAt":"2018-05-08T17:07:04","Actor":"blowdart","Number":"300","RawContent":null,"Title":"Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\r\n\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.0.\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft made an internal discovery of a security vulnerability in version 2.x of ASP.NET Core where\r\na specially crafted request can cause excess resource consumption in Kestrel.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/KestrelHttpServer/issues/2553\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigations for this issue.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nThe vulnerability also affects any ASP.NET Core 2.0 project if it uses the following package versions, which must also be [updated](#app-update), in addition to addressing your proxy configuration :\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.Kestrel.Core | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Libuv | 2.0.0, 2.0.1, 2.0.2<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.3<br />2.1.0-rc1-final\r\nMicrosoft.AspNetCore.All | 2.0.0, 2.0,3, 2.0.4, 2.0.5, 2.0.6, 2.0.7<br />2.1.0-preview1, 2.1.0-preview2 | 2.0.8<br />2.1.0-rc1-final\r\n\r\n## Advisory FAQ\r\n\r\n### How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected packages](#affected-software) can be exposed to the vulnerability.\r\n\r\n### How do I fix the issue?\r\n\r\n---\r\n\r\nIf you're targeting .NET Core 2.x and the `Microsoft.AspNetCore.All` \"metapackage\":\r\n\r\n* Update its version number to 2.0.8 if you have targetted 2.0.x *OR*\r\n* Update its version number to 2.1.0-rc1-final if you have targetted previews of 2.1\r\n\r\nUpdating the metapackage will update the [affected packages](#affected-software)\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to a [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.Server.Kestrel.Core` version 2.0.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.Server.Kestrel.Core` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3 />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for each of the [vulnerable packages](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.Server.Kestrel.Core` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel.Core\" Version=\"2.0.3\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_","Url":"https://github.com/aspnet/Announcements/issues/300","RelatedDescription":"Open issue \"Microsoft Security Advisory ASPNETCore-Mar18: ASP.NET Core Denial Of Service Vulnerability\" (#300)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1065031846495318016","CreatedAt":"2018-11-20T23:59:14+00:00","UserScreenname":"aspnet","Text":"Starting now! Come join us for the #ASPNET Community Standup at https://t.co/4Ioo9jNSN2 https://t.co/jo1Wi6VacW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":9,"RawContent":null},{"Id":"1064975943259774976","CreatedAt":"2018-11-20T20:17:05+00:00","UserScreenname":"aspnet","Text":"Today's #ASPNET Community Standup will start at 4 Pacific / 23 UTC\n\nThis week: EventPipe Diagnostics with @anurse… https://t.co/WnO9g3tVDa","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":4,"RawContent":null},{"Id":"1064670095769665537","CreatedAt":"2018-11-20T00:01:46+00:00","UserScreenname":"aspnet","Text":"Don't miss this week's #ASPNET Community Standup this Tuesday at 3:45 Pacific / 22:45 UTC\n\nThis week: EventPipe Dia… https://t.co/5NJ946t8bp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":3,"RawContent":null},{"Id":"1063140702744338432","CreatedAt":"2018-11-15T18:44:30+00:00","UserScreenname":"aspnet","Text":"Blazor 0.7.0 experimental release now available: https://t.co/p8svRvOJK0","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":155,"FavoriteCount":80,"RawContent":null},{"Id":"1059947697258487808","CreatedAt":"2018-11-06T23:16:38+00:00","UserScreenname":"aspnet","Text":"Starting now, it's the #ASPNET Community Standup, talking about #ASPNET Core 3.0 Features with @DamianEdwards and… https://t.co/UcJexlIpRz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":31,"FavoriteCount":9,"RawContent":null},{"Id":"1059908578977280000","CreatedAt":"2018-11-06T20:41:12+00:00","UserScreenname":"aspnet","Text":"Join us for the #ASPNET Community Standup Nov 6 (today) at 3:15 PM Pacific / 22:15 UTC to hear about new… https://t.co/gsECeQco9g","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":29,"FavoriteCount":15,"RawContent":null},{"Id":"1057318146770591744","CreatedAt":"2018-10-30T17:07:44+00:00","UserScreenname":"aspnet","Text":"Starting now! https://t.co/4Ioo9jNSN2 https://t.co/vBeH57Fqih","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":19,"RawContent":null},{"Id":"1056995299640496128","CreatedAt":"2018-10-29T19:44:52+00:00","UserScreenname":"aspnet","Text":"Get ready for this week's #ASPNET Community Standup - Tuesday at 10 AM Pacific / 17 UTC\n\n#ASPNET  Core 3.0 Plans wi… https://t.co/7RiKIjJpXr","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":51,"FavoriteCount":30,"RawContent":null},{"Id":"1052609703774060545","CreatedAt":"2018-10-17T17:18:04+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Core 2.2.0-preview3 now available \nhttps://t.co/4Q1MeWhWXH","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":97,"FavoriteCount":52,"RawContent":null},{"Id":"1052190001897844736","CreatedAt":"2018-10-16T13:30:19+00:00","UserScreenname":"aspnet","Text":"Check out Jeff's show this morning and learn about .NET, Visual Studio Code, and Linux-based development with .NET… https://t.co/Y7qbD2aQvP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":16,"FavoriteCount":6,"RawContent":null},{"Id":"1049792996743372800","CreatedAt":"2018-10-09T22:45:29+00:00","UserScreenname":"aspnet","Text":"#ASPNET Community Standup starting now!\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":6,"RawContent":null},{"Id":"1049789526162300928","CreatedAt":"2018-10-09T22:31:41+00:00","UserScreenname":"aspnet","Text":"Starting soon! #Blazor update with @aVerySpicyBoi @stevensanderson  @danroth27 @DamianEdwards @jongalloway at 3:45… https://t.co/qvemHwct7z","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":8,"RawContent":null},{"Id":"1049387182836789248","CreatedAt":"2018-10-08T19:52:55+00:00","UserScreenname":"aspnet","Text":"Don't miss this week's #ASPNET Community Standup this Tuesday at 3:45 Pacific / 22:45 UTC\n\nThis week: #Blazor updat… https://t.co/ldqMQw90HU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":58,"FavoriteCount":36,"RawContent":null},{"Id":"1047175421974831104","CreatedAt":"2018-10-02T17:24:10+00:00","UserScreenname":"aspnet","Text":"Blazor 0.6.0 experimental release now available\n\nhttps://t.co/PLXAt1u6Ha","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":261,"FavoriteCount":170,"RawContent":null},{"Id":"1044720517997973505","CreatedAt":"2018-09-25T22:49:16+00:00","UserScreenname":"aspnet","Text":"Starting now! Join us!\n\nhttps://t.co/4Ioo9jNSN2 https://t.co/SGEJxKemkG","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2018-11-23T05:30:18.9281326Z","RunDurationInMilliseconds":13484}