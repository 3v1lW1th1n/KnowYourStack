{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing .NET Framework 4.8 Early Access build 3621!","PublishedOn":"2018-06-06T21:19:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.8 Early Access build 3621 for your feedback. This is one of the in-development builds of the next version of the .NET Framework. The changes in this...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/","RawContent":null},{"Title":"Announcing ML.NET 0.2","PublishedOn":"2018-06-06T04:36:25+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Last month at //Build 2018, we released ML.NET 0.1, a cross-platform, open source machine learning framework. We would like to thank the community for the engagement so far in helping us shape ML.NET....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/06/05/announcing-ml-net-0-2/","RawContent":null},{"Title":"Announcing .NET Core 2.1","PublishedOn":"2018-05-30T17:22:16+00:00","CommentsCount":69,"FacebookCount":0,"Summary":"We&#8217;re excited to announce the release of .NET Core 2.1. It includes improvements to performance, to the runtime and tools. It also includes a new way to deploy tools as NuGet packages....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1","PublishedOn":"2018-05-30T17:22:00+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Today we are excited to announce the release of Entity Framework (EF) Core 2.1. This is the latest production-ready release of our open-source and cross-platform data access technology. We are...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-entity-framework-core-2-1/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803)","PublishedOn":"2018-05-24T01:49:57+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803). Quality and Reliability This release contains the following quality and reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/23/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-april-2018-update-version-1803/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update)","PublishedOn":"2018-05-21T22:44:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update). Quality and Reliability This release contains the following quality and reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/21/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-1709-fall-creators-update/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup for Windows 10","PublishedOn":"2018-05-17T17:20:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup for Windows 10 1703 (Creators Update) and Windows 10 1607 (Anniversary Update). Quality and Reliability This release contains the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/17/net-framework-may-2018-preview-of-quality-rollup-for-windows-10/","RawContent":null},{"Title":".NET Framework May 2018 Preview of Quality Rollup","PublishedOn":"2018-05-15T18:10:24+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Resolves an issue in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core May 2018 Update","PublishedOn":"2018-05-08T22:31:30+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core May 2018 Update. This update includes .NET Core 2.1.200 SDK and ASP.NET Core 2.0.8. Security Microsoft is releasing this security advisory to provide information...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-core-may-2018-update/","RawContent":null},{"Title":".NET Framework May 2018 Security and Quality Rollup","PublishedOn":"2018-05-08T21:18:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the May 2018 Security and Quality Rollup. Security CVE-2018-1039 – Windows Security Feature Bypass Vulnerability A security feature bypass vulnerability exists in Windows which...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-framework-may-2018-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7724991049","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:33:10","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Merged pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7724874671","Type":"PullRequestEvent","CreatedAt":"2018-05-24T16:12:32","Actor":"danmosemsft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/103","RelatedDescription":"Opened pull request \"Add ML.NET to readme\" (#103) at dotnet/home","RelatedBody":"cc @shauheen @jongalloway "},{"Id":"7697543163","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:28","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Merged pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"7697541521","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:10:06","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Merged pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"7697539314","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:09:35","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Merged pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"7697528376","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:07:09","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Merged pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7697526900","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:48","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Merged pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7697525283","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:25","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Merged pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7697523628","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:06:02","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Merged pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7697521624","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:05:34","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/100","RelatedDescription":"Merged pull request \"Create mvvmcross.md\" (#100) at dotnet/home","RelatedBody":"Added MvvmCross as project as part of on-boarding.\r\n\r\nhttps://github.com/MvvmCross/MvvmCross/issues/2415"},{"Id":"7697519505","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:05:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/102","RelatedDescription":"Merged pull request \"Update projects.json adding MLNET\" (#102) at dotnet/home","RelatedBody":""},{"Id":"7697516495","Type":"PullRequestEvent","CreatedAt":"2018-05-18T19:04:23","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/101","RelatedDescription":"Merged pull request \"Create mlnet.md\" (#101) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7780591341","Type":"IssuesEvent","CreatedAt":"2018-06-05T20:33:11","Actor":"huanwu","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/72","RelatedDescription":"Opened issue \"Introducing dotnet-svcutil.xmlserializer for .NET Core\" (#72) at dotnet/announcements","RelatedBody":"# Introducing dotnet-svcutil.xmlserializer for .NET Core\r\nOn the full .NET Framework you are able to pre-generate a serialization assembly using the tool svcutil. We are providing similar functionality on .NET Core by releasing the dotnet-svcutil.xmlserializer NuGet package. It pre-generates c# serialization code for the types used by WCF Service Contract in the client applications that can be serialized using the XmlSerializer to improve the startup performance of Xml Serialization when serializing or de-serializing objects of those types using XmlSerializer. \r\nYou can start using the tool today by following the instructions. \r\n## Discussion \r\nPlease share with us any thoughts of questions that you may have at: \r\n\r\n- dotnet/wcf [#2927](https://github.com/dotnet/wcf/issues/2927)\r\n## Details \r\nWhen to use XmlSerializer with WCF in an app to serialize contract data types, it will generate an XmlSerializer during runtime to do the serialization. You can improve the startup performance of Xml serialization by simply adding the reference of dotnet-svcutil.xmlserializer NuGet package to your project. This tool will generate the serialization code and compile it into an assembly next to your output assembly at build time in advance. This assembly can then be deployed and ran with your application. \r\n\r\nPlease create an issue with your feedback at [dotnet/wcf](https://github.com/dotnet/wcf/issues). We are actively looking to improve the tool and your input is a valuable part of the process. "},{"Id":"7719029569","Type":"IssuesEvent","CreatedAt":"2018-05-23T18:04:46","Actor":"mlacouture","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/70","RelatedDescription":"Opened issue \"Introducing dotnet-svcutil\" (#70) at dotnet/announcements","RelatedBody":"# Introducing dotnet-svcutil\r\n\r\nThe Microsoft Windows Communication Foundation (WCF) **dotnet-svcutil** tool is a .NET Core CLI tool that retrieves metadata from a web service on a network location or from a WSDL file, and generates a WCF class containing client proxy methods that you can use to access the web service operations.\r\n\r\nSimilarly to the [Service Model Metadata - svcutil](https://docs.microsoft.com/en-us/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) tool for .NET Framework projects, the **dotnet-svcutil** is a command line tool for generating a web service reference compatible with .NET Core and .NET Standard projects. \r\n\r\nThe **dotnet-svcutil** tool is an alternative option to the [WCF Web Service Reference ](https://docs.microsoft.com/en-us/dotnet/core/additional-tools/wcf-web-service-reference-guide)Visual Studio connected service provider which first shipped with Visual Studio 2017 v15.5.  The **dotnet-svcutil** tool as a .NET Core CLI tool, however, can be run on multiple platforms like Linux and MacOS in addition to Windows.\r\n\r\n# Discussion\r\nPlease share your thoughts with us by commenting on GitHub issue dotnet/wcf#2894\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7803756771","Type":"IssuesEvent","CreatedAt":"2018-06-11T02:59:53","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18408","RelatedDescription":"Opened issue \"Bad codegen + Assertion failed 'varDsc->lvIsParam'\" (#18408) at dotnet/coreclr","RelatedBody":"Repro:\r\n\r\nCompile with `/o+`:\r\n\r\n```csharp\r\nusing System;\r\nusing System.Reflection;\r\nusing System.Threading;\r\nusing System.Runtime.CompilerServices;\r\n\r\nclass MetadataReader\r\n{\r\n    [MethodImpl(MethodImplOptions.NoInlining)]\r\n    public Method GetMethod(MethodHandle handle)\r\n    {\r\n        throw null;\r\n    }\r\n\r\n}\r\n\r\nstruct Handle\r\n{\r\n    int _value;\r\n\r\n    public MethodHandle ToMethodHandle(MetadataReader reader)\r\n    {\r\n        return new MethodHandle(this);\r\n    }\r\n}\r\n\r\nstatic class MetadataReaderExtensions\r\n{\r\n    public static unsafe Handle AsHandle(this int token)\r\n    {\r\n        return *(Handle*)&token;\r\n    }\r\n}\r\n\r\nstruct MethodHandle\r\n{\r\n    internal int _value;\r\n\r\n    [MethodImpl(MethodImplOptions.NoInlining)]\r\n    internal MethodHandle(Handle value)\r\n    {\r\n        throw null;\r\n    }\r\n\r\n    public Method GetMethod(MetadataReader reader)\r\n    {\r\n        return reader.GetMethod(this);\r\n    }\r\n}\r\n\r\nstruct Method\r\n{\r\n    internal MetadataReader _reader;\r\n    internal MethodHandle _handle;\r\n    internal MethodAttributes _flags;\r\n\r\n    public MethodAttributes Flags => _flags;\r\n}\r\n\r\nstruct QMethodDefinition\r\n{\r\n    private QMethodDefinition(MetadataReader reader, int token)\r\n    {\r\n        _reader = reader;\r\n        _handle = token;\r\n    }\r\n\r\n    public static QMethodDefinition FromObjectAndInt(MetadataReader reader, int token)\r\n    {\r\n        return new QMethodDefinition(reader, token);\r\n    }\r\n\r\n    public MetadataReader Reader { get { return _reader; } }\r\n    public int Token { get { return _handle; } }\r\n\r\n    public bool IsValid { get { return _reader == null; } }\r\n\r\n    private readonly MetadataReader _reader;\r\n    private readonly int _handle;\r\n\r\n    public MetadataReader NativeFormatReader { get { return _reader; } }\r\n    public MethodHandle NativeFormatHandle { get { return _handle.AsHandle().ToMethodHandle(NativeFormatReader); } }\r\n}\r\n\r\nclass Test\r\n{\r\n\r\n    [MethodImpl(MethodImplOptions.NoInlining)]\r\n    static object foo(QMethodDefinition methodHandle)\r\n    {\r\n        Method method = methodHandle.NativeFormatHandle.GetMethod(methodHandle.NativeFormatReader);\r\n\r\n        return (method.Flags != (MethodAttributes)0) ? new object() : null;\r\n    }\r\n\r\n    static void Main()\r\n    {\r\n        foo(default(QMethodDefinition));\r\n    }\r\n}\r\n```\r\n\r\nResult:\r\n\r\nOn debug/checked Windows x64 build, this fails with:\r\n\r\n```\r\n\r\nAssert failure(PID 26504 [0x00006788], Thread: 8952 [0x22f8]): Assertion failed 'varDsc->lvIsParam' in 'QMethodDefinition:get_NativeFormatHandle():struct:this' (IL size 26)\r\n\r\n    File: c:\\coreclr\\src\\jit\\compiler.hpp Line: 2321\r\n```"},{"Id":"7803525713","Type":"IssuesEvent","CreatedAt":"2018-06-11T01:01:44","Actor":"tannergooding","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/18407","RelatedDescription":"Opened issue \"Move the HWIntrinsic Load/Store operations to use GenTreeIndir nodes\" (#18407) at dotnet/coreclr","RelatedBody":"Currently, the x86 Hardware Intrinsics handle the load/store operations directly. This was done both for quick bring up and in order to easily represent the various new memory operation types.\r\n\r\nHowever, it would be ideal if we could merge this functionality back in with the normal Indir handling that already exists."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7803009293","Type":"IssuesEvent","CreatedAt":"2018-06-10T18:49:51","Actor":"gehnster","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/772","RelatedDescription":"Opened issue \"New HttpStatusCodes\" (#772) at dotnet/standard","RelatedBody":"Would it be possible to get these added to the next release of .NET Standard, from .NET Core.\r\n\r\nhttps://github.com/dotnet/corefx/issues/4382"},{"Id":"7802771531","Type":"IssuesEvent","CreatedAt":"2018-06-10T16:13:31","Actor":"Lexcess","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/771","RelatedDescription":"Opened issue \"[Proposal] Add GC.GetAllocatedBytesForCurrentThread in .Net Standard vNext\" (#771) at dotnet/standard","RelatedBody":"Given the recent focus on reducing allocations in .Net (e.g. the introduction of `Span<>`). I think it would be useful to have a simple tool for tracking allocations on the current thread. I would categorise this similarly to the `Stopwatch `class; yes I could use an external profiler, but having an in process solution is so much more flexible. I want to use something like this for monitoring, unit tests and even sanity-checking refactorings.  \r\n\r\nThe good news is that `GetAllocatedBytesForCurrentThread` was added to .Net Core CLR a while back now (see dotnet/corefx#10157 and https://github.com/dotnet/corefx/pull/12489 ), and it offers a robust model to follow.\r\n\r\nThe bad news is that the other runtime GC's don't currently have similar implementations and given GC differences the code probably can't be ported straight over. \r\n\r\nI understand that there is a higher cost implied by adding API's to the Standard that don't currently have obvious implementations for each runtime, but I do think this is an area where there will be growing interest in such an API. For example on Mono where allocations are critical to the performance of games and mobile apps.\r\n\r\nFurthermore there are already some people in the wild attempting cross runtime solutions, but it is a lot of hoops even when .Net Core is in play. See for example what Benchmark.Net is having to do right now: [Benchmark.Net/GCStats.cs](https://github.com/dotnet/BenchmarkDotNet/blob/master/src/BenchmarkDotNet/Engines/GcStats.cs)). Adding `GetAllocatedBytesForCurrentThread` to the standard would ease this immediate issue and give the opportunity for the other runtimes to add valuable diagnostic information in the future (with `PlatformNotSupportedException`s perhaps being the cost in the interim)."},{"Id":"7802434780","Type":"IssuesEvent","CreatedAt":"2018-06-10T12:33:45","Actor":"panost","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/770","RelatedDescription":"Opened issue \"[Question] Nullable Ref Types\" (#770) at dotnet/standard","RelatedBody":"I don't ask if are they plans for it, but if it is possible (for technological POV) to support Nullable Ref Types (C# 8.0) annotations even if none of the supported frameworks has them?\r\n\r\nFor example String.Replace to be defined in .NET Standard as \r\n\r\n> public string String.Replace(string oldValue,string? newValue);\r\n\r\neven if none of the supported frameworks has this annotation ?\r\n"},{"Id":"7799259998","Type":"PullRequestEvent","CreatedAt":"2018-06-08T21:18:26","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/769","RelatedDescription":"Opened pull request \"Update BuildTools to preview1-02908-01 (master)\" (#769) at dotnet/standard","RelatedBody":""},{"Id":"7797761610","Type":"PullRequestEvent","CreatedAt":"2018-06-08T15:45:42","Actor":"mairaw","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/768","RelatedDescription":"Opened pull request \"Update version\" (#768) at dotnet/standard","RelatedBody":""},{"Id":"7793338058","Type":"PullRequestEvent","CreatedAt":"2018-06-07T20:51:23","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/762","RelatedDescription":"Merged pull request \"Update BuildTools to preview1-02902-01 (master)\" (#762) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7803856012","Type":"PullRequestEvent","CreatedAt":"2018-06-11T03:46:10","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/30235","RelatedDescription":"Merged pull request \"Use Array.Empty<T>() in more places\" (#30235) at dotnet/corefx","RelatedBody":"We've previously done multiple sweeps.  Doing another."},{"Id":"7803734149","Type":"PullRequestEvent","CreatedAt":"2018-06-11T02:49:46","Actor":"caesar1995","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/30206","RelatedDescription":"Merged pull request \"Improve code coverage for NegotiateStream class\" (#30206) at dotnet/corefx","RelatedBody":"Contributes to #17099\r\n\r\nBefore the PR:\r\n\r\nSystem.Net.Security | 6025 | 2721 | 8746 | 32749 | 68.8% |  55.2%\r\n-- | -- | -- | -- | -- | --  | --\r\nSystem.Net.Security.NegotiateStream | 366 | 217 | 583 | 1158 | **_62.7%_** | 48.3%\r\n\r\nAfter PR:\r\n\r\n\r\nSystem.Net.Security | 6130 | 2613 | 8743 | 32744 | 70.1% | 55.4%\r\n-- | -- | -- | -- | -- | --  | --\r\nSystem.Net.Security.NegotiateStream | 488 | 92 | 580 | 1153 | **_84.1%_** | 68.6%\r\n\r\nSummary:\r\n- Visit all Authenticate/Read/Write sync/async API overloads.\r\n- Check for invalid (but possible) operations on NegotiateStream.\r\n- Test other interesting cases."},{"Id":"7803727642","Type":"PullRequestEvent","CreatedAt":"2018-06-11T02:46:40","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/30260","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx, CoreSetup to preview1-26611-01, preview1-26611-01, preview1-26610-02, respectively (master)\" (#30260) at dotnet/corefx","RelatedBody":""},{"Id":"7803541523","Type":"PullRequestEvent","CreatedAt":"2018-06-11T01:11:54","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/30259","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#30259) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7804017897","Type":"IssuesEvent","CreatedAt":"2018-06-11T05:07:54","Actor":"lidongjia","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/27698","RelatedDescription":"Opened issue \"k!12\" (#27698) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n**Expected Behavior**:\r\n\r\n**Actual Behavior**:\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7802834788","Type":"PullRequestEvent","CreatedAt":"2018-06-10T16:53:28","Actor":"pentp","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5926","RelatedDescription":"Opened pull request \"Optimize Decimal.Remainder\" (#5926) at dotnet/corert","RelatedBody":"In addition to better performance this contributes to making decimal a readonly struct.\r\nI'll add new tests to CoreFX also.\r\nContributes to https://github.com/dotnet/coreclr/issues/18249.\r\n### x64\r\n|  Method |      Mean |     Error |    StdDev | Scaled |\r\n|-------- |----------:|----------:|----------:|-------:|\r\n|  Native | 169.42 ns | 0.3258 ns | 0.1162 ns |   1.00 |\r\n| CoreRT2 |  78.66 ns | 0.0869 ns | 0.0310 ns |   0.46 |\r\n### x86\r\n|  Method |     Mean |     Error |    StdDev | Scaled |\r\n|-------- |---------:|----------:|----------:|-------:|\r\n|  Native | 128.0 ns | 0.1594 ns | 0.0568 ns |   1.00 |\r\n| CoreRT2 | 120.4 ns | 0.2057 ns | 0.0734 ns |   0.94 |\r\n\r\n@jkotas I have a WIP [readonly decimal branch](https://github.com/pentp/corert/commit/ee175a15451c95eddb5941b720219b0b13d47ba5), it doesn't compile yet because of `VarDecMod` and `NumberBufferToDecimal`, but can you check if I'm on the right track?"},{"Id":"7801783801","Type":"PullRequestEvent","CreatedAt":"2018-06-10T02:46:14","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5925","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5925) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7801739010","Type":"PullRequestEvent","CreatedAt":"2018-06-10T02:00:59","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5925","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5925) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7801692965","Type":"IssuesEvent","CreatedAt":"2018-06-10T01:11:55","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5875","RelatedDescription":"Closed issue \"[Build] BuildTools issue\" (#5875) at dotnet/corert","RelatedBody":"CoreRT/CoreFX build doesn't work. CoreCLR buildtools works only.\r\nI checked x86 and x64. Behavior doesn't change. I don't understand - how can this work in CI?)\r\nAt the moment I use CoreCLR BuildTools and DotnetCLI versions in CoreRT/CoreFX.\r\n\r\nCoreRT logs:\r\n```\r\nInstalling dotnet cli...\r\nRestoring BuildTools version 2.1.0-preview3-02711-02...\r\nERROR: Could not restore build tools correctly.\r\nPlease check the detailed log that follows.\r\nRunning: corert/init-tools.sh\r\nInstalling 'https://dotnetcli.azureedge.net/dotnet/Sdk/2.1.300-rc1-008673/dotnet-sdk-2.1.300-rc1-008673-linux-x64.tar.gz' to 'corert/Tools/dotnetcli/dotnet.tar'\r\nRunning: corert/Tools/dotnetcli/dotnet restore \"corert/init-tools.msbuild\" --no-cache --packages corert/packages --source https://dotnet.myget.org/F/dotnet-buildtools/api/v3/index.json /p:BuildToolsPackageVersion=2.1.0-preview3-02711-02\r\ncorert/Tools/dotnetcli/sdk/2.1.300-rc1-008673/Microsoft.Common.CurrentVersion.targets(5955,3): error MSB4019: The imported project \"corert/Tools/dotnetcli/sdk/2.1.300-rc1-008673/15.0/Microsoft.Common.targets/ImportAfter\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk. [corert/init-tools.msbuild]\r\nInitializing BuildTools...\r\nchmod: cannot access 'corert/packages/microsoft.dotnet.buildtools/2.1.0-preview3-02711-02/lib/init-tools.sh': No such file or directory\r\ncorert/buildscripts/../init-tools.sh: line 135: corert/packages/microsoft.dotnet.buildtools/2.1.0-preview3-02711-02/lib/init-tools.sh: No such file or directory\r\nERROR: An error occurred when trying to initialize the tools.\r\nPlease check the detailed log that follows.\r\nRunning: corert/init-tools.sh\r\nInstalling 'https://dotnetcli.azureedge.net/dotnet/Sdk/2.1.300-rc1-008673/dotnet-sdk-2.1.300-rc1-008673-linux-x64.tar.gz' to 'corert/Tools/dotnetcli/dotnet.tar'\r\nRunning: corert/Tools/dotnetcli/dotnet restore \"corert/init-tools.msbuild\" --no-cache --packages corert/packages --source https://dotnet.myget.org/F/dotnet-buildtools/api/v3/index.json /p:BuildToolsPackageVersion=2.1.0-preview3-02711-02\r\ncorert/Tools/dotnetcli/sdk/2.1.300-rc1-008673/Microsoft.Common.CurrentVersion.targets(5955,3): error MSB4019: The imported project \"corert/Tools/dotnetcli/sdk/2.1.300-rc1-008673/15.0/Microsoft.Common.targets/ImportAfter\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk. [corert/init-tools.msbuild]\r\nRunning: corert/packages/microsoft.dotnet.buildtools/2.1.0-preview3-02711-02/lib/init-tools.sh corert corert/Tools/dotnetcli/dotnet corert/Tools corert/packages\r\nUsing CLI tools version:\r\n2.1.300-rc1-008673  NuGetFallbackFolder\r\ncorert/build.proj(20,3): error MSB4019: The imported project \"corert/Tools/clean.targets\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk.\r\n\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:00.37\r\nBuild Exit Code = 1\r\n```\r\n\r\n\r\nCoreFX logs:\r\n```\r\nInstalling dotnet cli...\r\nRestoring BuildTools version 2.2.0-preview1-02830-02...\r\nERROR: Could not restore build tools correctly.\r\nPlease check the detailed log that follows.\r\nRunning: corefx/init-tools.sh\r\nInstalling 'https://dotnetcli.azureedge.net/dotnet/Sdk/2.1.300-rc1-008673/dotnet-sdk-2.1.300-rc1-008673-linux-x64.tar.gz' to 'corefx/Tools/dotnetcli/dotnet.tar'\r\nRunning: corefx/Tools/dotnetcli/dotnet restore \"corefx/init-tools.msbuild\" --no-cache --packages corefx/packages --source https://dotnet.myget.org/F/dotnet-buildtools/api/v3/index.json /p:BuildToolsPackageVersion=2.2.0-preview1-02830-02 /p:ToolsDir=corefx/Tools\r\ncorefx/Tools/dotnetcli/sdk/2.1.300-rc1-008673/Microsoft.Common.CurrentVersion.targets(5955,3): error MSB4019: The imported project \"corefx/Tools/dotnetcli/sdk/2.1.300-rc1-008673/15.0/Microsoft.Common.targets/ImportAfter\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk. [corefx/init-tools.msbuild]\r\nUsing RID linux-x64 for BuildTools native tools\r\nInitializing BuildTools...\r\nchmod: cannot access 'corefx/packages/microsoft.dotnet.buildtools/2.2.0-preview1-02830-02/lib/init-tools.sh': No such file or directory\r\ncorefx/init-tools.sh: line 173: corefx/packages/microsoft.dotnet.buildtools/2.2.0-preview1-02830-02/lib/init-tools.sh: No such file or directory\r\nERROR: An error occurred when trying to initialize the tools.\r\nPlease check the detailed log that follows.\r\nRunning: corefx/init-tools.sh\r\nInstalling 'https://dotnetcli.azureedge.net/dotnet/Sdk/2.1.300-rc1-008673/dotnet-sdk-2.1.300-rc1-008673-linux-x64.tar.gz' to 'corefx/Tools/dotnetcli/dotnet.tar'\r\nRunning: corefx/Tools/dotnetcli/dotnet restore \"corefx/init-tools.msbuild\" --no-cache --packages corefx/packages --source https://dotnet.myget.org/F/dotnet-buildtools/api/v3/index.json /p:BuildToolsPackageVersion=2.2.0-preview1-02830-02 /p:ToolsDir=corefx/Tools\r\ncorefx/Tools/dotnetcli/sdk/2.1.300-rc1-008673/Microsoft.Common.CurrentVersion.targets(5955,3): error MSB4019: The imported project \"corefx/Tools/dotnetcli/sdk/2.1.300-rc1-008673/15.0/Microsoft.Common.targets/ImportAfter\" was not found. Confirm that the path in the <Import> declaration is correct, and that the file exists on disk. [corefx/init-tools.msbuild]\r\nRunning: corefx/packages/microsoft.dotnet.buildtools/2.2.0-preview1-02830-02/lib/init-tools.sh corefx corefx/Tools/dotnetcli/dotnet corefx/Tools corefx/packages\r\n```\r\n\r\n\r\nBut CoreCLR:\r\n```\r\nInstalling dotnet cli...\r\nRestoring BuildTools version 2.2.0-preview1-02829-01...\r\nUsing RID linux-x64 for BuildTools native tools\r\nInitializing BuildTools...\r\nMaking all .sh files executable under Tools.\r\n  Restoring packages for coreclr/Tools/crossgen/crossgen.csproj...\r\n  Installing runtime.linux-x64.Microsoft.NETCore.App 2.1.0-rtm-26507-03.\r\n  Generating MSBuild file coreclr/Tools/crossgen/obj/crossgen.csproj.nuget.g.props.\r\n  Generating MSBuild file coreclr/Tools/crossgen/obj/crossgen.csproj.nuget.g.targets.\r\n  Restore completed in 2.1 min for coreclr/Tools/crossgen/crossgen.csproj.\r\nRunning crossgen on all assemblies in coreclr/Tools.\r\ncoreclr/Tools/Desktop.Analyzers.dll -> coreclr/Tools/Desktop.Analyzers.ni.dll\r\n...\r\n```\r\n"},{"Id":"7801665577","Type":"PullRequestEvent","CreatedAt":"2018-06-10T00:42:38","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5924","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5924) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7801578441","Type":"PullRequestEvent","CreatedAt":"2018-06-09T23:14:37","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5924","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5924) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7801547752","Type":"PullRequestEvent","CreatedAt":"2018-06-09T22:45:27","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5923","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5923) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7801394820","Type":"PullRequestEvent","CreatedAt":"2018-06-09T20:37:21","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5923","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5923) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7800849930","Type":"PullRequestEvent","CreatedAt":"2018-06-09T14:20:59","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5919","RelatedDescription":"Merged pull request \"Use sysconf(_SC_NPROCESSORS_CONF) in PAL and GC ONLY on ARM and ARM64\" (#5919) at dotnet/corert","RelatedBody":"Port https://github.com/dotnet/coreclr/pull/18289"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1005426264029753345","CreatedAt":"2018-06-09T12:27:55+00:00","UserScreenname":"dotnet","Text":"Tune in today at 10a ET / 7a PT / 14:00 UTC / 8p IST and learn about global tools along with Jeff. https://t.co/hqxNjfqPMq","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":5,"RawContent":null},{"Id":"1005082168442449920","CreatedAt":"2018-06-08T13:40:37+00:00","UserScreenname":"dotnet","Text":"Tune in with Jeff as he works through the tutorials to learn F#.  Ask questions, and learn along with him https://t.co/rntL0szWYX","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":31,"FavoriteCount":15,"RawContent":null},{"Id":"1004145068381331456","CreatedAt":"2018-06-05T23:36:55+00:00","UserScreenname":"dotnet","Text":"Cool retro game built with #dotnet #monogame. Clone the repo, play the game, and you could win some serious money!… https://t.co/iHu2MQ1bME","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":70,"FavoriteCount":19,"RawContent":null}]}},"RunOn":"2018-06-11T05:30:35.2481473Z","RunDurationInMilliseconds":8641}