{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10733665492","Type":"IssuesEvent","CreatedAt":"2019-10-29T02:20:10","Actor":"ropean","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7658","RelatedDescription":"Opened issue \"Unable to load the service index for source https://api.nuget.org/v3/index.json\" (#7658) at NuGet/NuGetGallery","RelatedBody":"Install-Package : Unable to load the service index for source https://api.nuget.org/v3/index.json.\r\n  An error occurred while sending the request.\r\n  The underlying connection was closed: An unexpected error occurred on a send.\r\n  Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host.\r\n  An existing connection was forcibly closed by the remote host"},{"Id":"10733121366","Type":"PullRequestEvent","CreatedAt":"2019-10-29T00:06:29","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7645","RelatedDescription":"Merged pull request \"[MSA] Audit the external credential for attempted login in Gallery\" (#7645) at NuGet/NuGetGallery","RelatedBody":"We need to audit the credential which was used to attempt to login in the gallery before it was identified and authorized(from DB). This is necessary for retrospective analysis. Also, log the `Tenant Id` and `OID` used with the external credential.\r\n\r\nThis depends on the shims changes.\r\n\r\nAddresses: https://github.com/NuGet/Engineering/issues/2652 "},{"Id":"10732895407","Type":"IssuesEvent","CreatedAt":"2019-10-28T23:16:53","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7616","RelatedDescription":"Closed issue \"Unlisted packages listed after cacheRebuildFrequencyInMinutes\" (#7616) at NuGet/NuGetGallery","RelatedBody":"Hi, community,\r\n\r\nI'm having problems with my **Nuget.Server v3.4.1**. It is deployed as an Azure App Service.\r\nMy web.config is configured with next keys:\r\n\r\n```\r\n<add key=\"requireApiKey\" value=\"true\" />\r\n<add key=\"apiKey\" value=\"xxx\" />\r\n<add key=\"packagesPath\" value=\"\" />\r\n<add key=\"cacheFileName\" value=\"\" />\r\n<add key=\"allowOverrideExistingPackageOnPush\" value=\"false\" />\r\n<add key=\"ignoreSymbolsPackages\" value=\"false\" />\r\n<add key=\"enableDelisting\" value=\"true\" />\r\n<add key=\"enableFrameworkFiltering\" value=\"false\" />\r\n<add key=\"enableFileSystemMonitoring\" value=\"true\" />\r\n<add key=\"allowRemoteCacheManagement\" value=\"true\" />\r\n<add key=\"initialCacheRebuildAfterSeconds\" value=\"1\" />\r\n<add key=\"cacheRebuildFrequencyInMinutes\" value=\"3\" />\r\n```\r\nWhen I call to:\r\n\r\n_nuget delete My.Package 1.0.0 xxx -Source https://mynugetserver.azurewebsites.net/nuget -NonInteractive -Verbosity detailed_\r\n\r\nResponse is OK and _https://mynugetserver.azurewebsites.net/nuget/Packages_ shows My.Package as unlisted but, **after 3 minutes** (just the time configured in `cacheRebuildFrequencyInMinutes` web.config key), **package is listed again**.\r\n\r\nAm I missing some configuration or it is a bug?\r\n\r\nThanks in advance,\r\nAdrián"},{"Id":"10732563135","Type":"IssuesEvent","CreatedAt":"2019-10-28T22:14:10","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7632","RelatedDescription":"Closed issue \"[Azure Search] Point Gallery to preview service\" (#7632) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10732534356","Type":"IssuesEvent","CreatedAt":"2019-10-28T22:09:20","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7638","RelatedDescription":"Closed issue \"[Azure Search] Update side-by-side page's messaging when the page is disabled\" (#7638) at NuGet/NuGetGallery","RelatedBody":"Old search is now the current search service. New search is now the preview search service.\r\n"},{"Id":"10730544792","Type":"IssuesEvent","CreatedAt":"2019-10-28T17:37:35","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7657","RelatedDescription":"Opened issue \"[Epic] Improve search results for VS\" (#7657) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10729402969","Type":"IssuesEvent","CreatedAt":"2019-10-28T15:33:01","Actor":"zivkan","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7656","RelatedDescription":"Opened issue \"Display warning if package version in URL does not exist\" (#7656) at NuGet/NuGetGallery","RelatedBody":"From memory, when you view an unlisted package, there's a warning that it's unlisted. However, when the URL is for a version that does not exist, there is no warning, it just \"silently\" shows the highest version.  I think gallery should show a warning message."},{"Id":"10718044585","Type":"IssuesEvent","CreatedAt":"2019-10-25T22:34:40","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7655","RelatedDescription":"Opened issue \"Create deployment artifacts for GitHubVulnerabilities2Db job\" (#7655) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10718042271","Type":"IssuesEvent","CreatedAt":"2019-10-25T22:34:05","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7654","RelatedDescription":"Opened issue \"Add E2E test for vulnerability\" (#7654) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10718041359","Type":"IssuesEvent","CreatedAt":"2019-10-25T22:33:49","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7653","RelatedDescription":"Opened issue \"Write V3 documentation for vulnerability protocol\" (#7653) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10718039917","Type":"IssuesEvent","CreatedAt":"2019-10-25T22:33:27","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7652","RelatedDescription":"Opened issue \"Add support for vulnerabilities to Catalog2Registration\" (#7652) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10718039146","Type":"IssuesEvent","CreatedAt":"2019-10-25T22:33:16","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7651","RelatedDescription":"Opened issue \"Add support for vulnerabilities to Db2Catalog\" (#7651) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10718037130","Type":"IssuesEvent","CreatedAt":"2019-10-25T22:32:44","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7650","RelatedDescription":"Opened issue \"Gallery authors should see a message on the Display Package page if their package is vulnerable\" (#7650) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10718035986","Type":"IssuesEvent","CreatedAt":"2019-10-25T22:32:27","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7649","RelatedDescription":"Opened issue \"Newly pushed packages that are vulnerable should be marked vulnerable on upload/push\" (#7649) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10718033226","Type":"IssuesEvent","CreatedAt":"2019-10-25T22:31:46","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7648","RelatedDescription":"Opened issue \"Implement job to fetch vulnerabilities from GitHub\" (#7648) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10717874517","Type":"IssuesEvent","CreatedAt":"2019-10-25T21:55:30","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/6907","RelatedDescription":"Closed issue \"Self-contained icons\" (#6907) at NuGet/NuGetGallery","RelatedBody":"Specs:\r\nhttps://github.com/NuGet/Engineering/wiki/Packaging-Icon,-License-and-Documentation-within-the-nupkg\r\nhttps://github.com/NuGet/Engineering/wiki/Packaging-Icon-within-the-nupkg"},{"Id":"10717862226","Type":"IssuesEvent","CreatedAt":"2019-10-25T21:52:50","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/6746","RelatedDescription":"Closed issue \"Update projects to .NET Framework 4.7.2\" (#6746) at NuGet/NuGetGallery","RelatedBody":"The latest client targets .NET Framework 4.7.2. We will need to update the following items to support the latest client code:\r\n\r\n* [ ] Build machines. Either:\r\n   1. Install .NET Framework 4.7.2. This currently requires an OS update. Or, ...\r\n   2. Move to MicroBuild for Continuous Integration Builds\r\n* [ ] Verify that jobs machine can run .NET Framework 4.7.2 apps\r\n* [ ] Update the Process Signature job to target .NET Framework 4.7.2. See https://github.com/NuGet/NuGet.Jobs/issues/695\r\n\r\nIf the gallery cannot use the .NET Standard 1.6 libraries, also:\r\n\r\n* [ ] Verify that Azure Cloud Services can run .NET Framework 4.7.2 apps\r\n* [ ] Update the Gallery to target .NET Framework 4.7.2\r\n"},{"Id":"10717855235","Type":"IssuesEvent","CreatedAt":"2019-10-25T21:51:21","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7609","RelatedDescription":"Closed issue \"[Vulnerability] design server side\" (#7609) at NuGet/NuGetGallery","RelatedBody":"- [ ] Investigate data source\r\n- [ ] Server/Client protocol\r\n- [ ] Design server side"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10733925447","Type":"IssuesEvent","CreatedAt":"2019-10-29T03:21:59","Actor":"alialooooosh055455","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8761","RelatedDescription":"Opened issue \"Alialooooshi550694 \" (#8761) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Before posting the issue...\r\n\r\n* If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues)\r\n* If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place.\r\n\r\nRemove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\n\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"10732965618","Type":"IssuesEvent","CreatedAt":"2019-10-28T23:31:39","Actor":"dominoFire","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8759","RelatedDescription":"Closed issue \"Include transitive PackageReference dependencies from ProjectReference\" (#8759) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\ndotnet.exe\r\n\r\ndotnet.exe --version (if appropriate):\r\n3.0.100  \r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\nMicrosoft Windows [Version 10.0.18362.418]\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a solution with two projects called e.g. `Test.Lib` and `Test.Package`. Use the `Microsoft.NET.Sdk` csproj style\r\n\r\n2. In `Test.Lib` include:\r\n```\r\n<PropertyGroup>\r\n  <GeneratePackageOnBuild>false</GeneratePackageOnBuild>\r\n  <IsPackable>false</IsPackable>\r\n</PropertyGroup>\r\n<ItemGroup>\r\n    <PackageReference Include=\"Any_Nuget_Package\" Version=\"...\" />\r\n</ItemGroup>\r\n```\r\n\r\n3. In Test.Package include:\r\n```\r\n<PropertyGroup>\r\n  <GeneratePackageOnBuild>True</GeneratePackageOnBuild>\r\n</PropertyGroup>\r\n<ItemGroup>\r\n  <ProjectReference Include=\"..\\Test.Lib\\Test.Lib.csproj\" />\r\n</ItemGroup>\r\n```\r\n\r\n4. Run `dotnet restore` and `dotnet build` generating Test.Package.nupkg\r\n\r\n*Expected behaviour:* Test.Package.nupkg contains Test.package.nuspec with `Any_Nuget_Package` as dependency\r\n\r\n*Actual behaviour:* Test.Package.nupkg contains Test.package.nuspec, but `Any_Nuget_Package` is not a dependency.\r\n\r\nThis results in the consumer of Test.Package.nupkg not knowing about the necessary dependency and resulting in a build with missing dll.\r\n\r\nI fully expect it might be an user error, but I'd appreciate support.\r\n\r\n\r\n\r\n\r\n"},{"Id":"10731369005","Type":"IssuesEvent","CreatedAt":"2019-10-28T19:23:48","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8747","RelatedDescription":"Closed issue \"Plugin: Logging time accuracy is off on linux/Mac\" (#8747) at NuGet/Home","RelatedBody":"We use DateTime + Stopwatch but the ticks in both models are different. \r\n\r\nSee:\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.stopwatch.elapsedticks\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.datetime.ticks"},{"Id":"10730850325","Type":"IssuesEvent","CreatedAt":"2019-10-28T18:15:22","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8760","RelatedDescription":"Opened issue \"Protocol diagnostics: logging\" (#8760) at NuGet/Home","RelatedBody":"Consider allowing customers to be able to write detailed protocol diagnostics to a file, so they can investigate themselves."},{"Id":"10730746701","Type":"IssuesEvent","CreatedAt":"2019-10-28T18:01:55","Actor":"p-kaczynski","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8759","RelatedDescription":"Opened issue \"Include transitive PackageReference dependencies from ProjectReference\" (#8759) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\ndotnet.exe\r\n\r\ndotnet.exe --version (if appropriate):\r\n3.0.100  \r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\nMicrosoft Windows [Version 10.0.18362.418]\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a solution with two projects called e.g. `Test.Lib` and `Test.Package`. Use the `Microsoft.NET.Sdk` csproj style\r\n\r\n2. In `Test.Lib` include:\r\n```\r\n<PropertyGroup>\r\n  <GeneratePackageOnBuild>false</GeneratePackageOnBuild>\r\n  <IsPackable>false</IsPackable>\r\n</PropertyGroup>\r\n<ItemGroup>\r\n    <PackageReference Include=\"Any_Nuget_Package\" Version=\"...\" />\r\n</ItemGroup>\r\n```\r\n\r\n3. In Test.Package include:\r\n```\r\n<PropertyGroup>\r\n  <GeneratePackageOnBuild>True</GeneratePackageOnBuild>\r\n</PropertyGroup>\r\n<ItemGroup>\r\n  <ProjectReference Include=\"..\\Test.Lib\\Test.Lib.csproj\" />\r\n</ItemGroup>\r\n```\r\n\r\n4. Run `dotnet restore` and `dotnet build` generating Test.Package.nupkg\r\n\r\n*Expected behaviour:* Test.Package.nupkg contains Test.package.nuspec with `Any_Nuget_Package` as dependency\r\n\r\n*Actual behaviour:* Test.Package.nupkg contains Test.package.nuspec, but `Any_Nuget_Package` is not a dependency.\r\n\r\nThis results in the consumer of Test.Package.nupkg not knowing about the necessary dependency and resulting in a build with missing dll.\r\n\r\nI fully expect it might be an user error, but I'd appreciate support.\r\n\r\n\r\n\r\n\r\n"},{"Id":"10730708261","Type":"IssuesEvent","CreatedAt":"2019-10-28T17:57:09","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8758","RelatedDescription":"Opened issue \"Protocol diagnostics: instrument local feeds\" (#8758) at NuGet/Home","RelatedBody":""},{"Id":"10730659871","Type":"IssuesEvent","CreatedAt":"2019-10-28T17:51:18","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8757","RelatedDescription":"Opened issue \"Protocol diagnostics aggregation\" (#8757) at NuGet/Home","RelatedBody":"Aggregate protocol diagnostics per restore/search, per source.\r\n\r\ninformation such as:\r\n* number of requests\r\n* minimum request duration\r\n* mean request duration\r\n* max request duration\r\n* source type (http vs local, v2 vs v3)"},{"Id":"10730648692","Type":"IssuesEvent","CreatedAt":"2019-10-28T17:50:00","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8742","RelatedDescription":"Closed issue \"Dotnet pack does not respect floating version.\" (#8742) at NuGet/Home","RelatedBody":"## Details about Problem\r\nI use `nuget pack` and we decided to try floating versions. Alas, it does not work as we expected.\r\n\r\nNuGetVersion: NuGet Command Line `5.3.0.4`\r\ndotnet version: `3.0.100`\r\nVS version: 2019 `16.3.6`\r\nOS version: Win10 Pro v1903 (18362.418) (Under parallesl)\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. I have a package with version set to `5.0`\r\n\r\n2. This package references another package\r\n```XML\r\n<PackageReference Include=\"com.luscii.connect.common\" Version=\"*\" />\r\n```\r\n3. The latest version of the referenced package is `11.0.97`\r\n4. My expectation is that `nuget pack` scans all available feeds, finds the latest version and sets it accordingly in `nuspec` of created package.\r\n```XML\r\n<dependency id=\"com.luscii.connect.common\" version=\"[11.0.97,)\" exclude=\"Build,Analyzers\" />\r\n```\r\n5. What I see in created package is:\r\n```XML\r\n<dependency id=\"com.luscii.connect.common\" version=\"5.0.0\" exclude=\"Build,Analyzers\" />\r\n```\r\nBut there is no version `5.0.0` at all. And why is it fixed?\r\n\r\nThis is similar to the issue #7232"},{"Id":"10730479601","Type":"IssuesEvent","CreatedAt":"2019-10-28T17:29:53","Actor":"xavierdecoster","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8756","RelatedDescription":"Opened issue \"Show transitive packages for PackageReference type projects in PMUI\" (#8756) at NuGet/Home","RelatedBody":"Issue will be updated with UX/spec (WIP)\n\nSpec: https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages"},{"Id":"10730460920","Type":"IssuesEvent","CreatedAt":"2019-10-28T17:27:41","Actor":"xavierdecoster","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8755","RelatedDescription":"Opened issue \"Display vulnerability info on Installed tab of PMUI\" (#8755) at NuGet/Home","RelatedBody":"Display vulnerability information in the package graph on `Installed tab of Package Manager Dialog (PMUI).\n\nSpec: https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages"},{"Id":"10730278284","Type":"IssuesEvent","CreatedAt":"2019-10-28T17:06:38","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8754","RelatedDescription":"Opened issue \"Increment version to 5.5\" (#8754) at NuGet/Home","RelatedBody":""},{"Id":"10730273059","Type":"IssuesEvent","CreatedAt":"2019-10-28T17:06:02","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8753","RelatedDescription":"Opened issue \"Increment .NET Core assembly version after insertion\" (#8753) at NuGet/Home","RelatedBody":"NuGet 5.4 was inserted into .NET Core last week, we need to increment the version in case of another insertion."},{"Id":"10729856846","Type":"IssuesEvent","CreatedAt":"2019-10-28T16:19:05","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8255","RelatedDescription":"Closed issue \"[Centrally managing NuGet packages and versions] Requirements evaluation\" (#8255) at NuGet/Home","RelatedBody":"Gather the requirements and evaluate what needs to be done. Stage the requirements as necessary. "},{"Id":"10729795049","Type":"IssuesEvent","CreatedAt":"2019-10-28T16:12:15","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8752","RelatedDescription":"Opened issue \"[Centrally managing NuGet packages and versions] Implement the changes necessary for the Restore command\" (#8752) at NuGet/Home","RelatedBody":""},{"Id":"10729780525","Type":"IssuesEvent","CreatedAt":"2019-10-28T16:10:38","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8751","RelatedDescription":"Opened issue \"[Centrally managing NuGet packages and versions] Dev design document for the dotnet commands\" (#8751) at NuGet/Home","RelatedBody":"\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10286366828","Type":"IssuesEvent","CreatedAt":"2019-08-26T13:37:09","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/38","RelatedDescription":"Opened issue \"New and improved NuGet Search is live!\" (#38) at NuGet/Announcements","RelatedBody":"Announcing the new and improved search on NuGet.org leveraging Azure Search.\r\n\r\n[Blogpost](https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/) | [Feedback Issue](https://github.com/NuGet/NuGetGallery/issues/4124)"},{"Id":"10168692521","Type":"IssuesEvent","CreatedAt":"2019-08-07T21:31:54","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/37","RelatedDescription":"Opened issue \"Using OData to query NuGet.org repository is being deprecated\" (#37) at NuGet/Announcements","RelatedBody":"We introduced `V3 APIs` in early 2016. We have made continuous investments to make it more reliable, performant and secure. Going forward, we plan to bring all new features and improvements only to the newer `V3 APIs`. As part of this strategy, we are deprecating the usage of `OData` queries. Subsequently, we plan to **disable the `OData` queries starting Feb 5th, 2020**.\r\n\r\n**Call to Action: Transition to V3 APIs**\r\n\r\nHere are some resources to help you with the migration:\r\n* [NuGet Server `V3 APIs` reference](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n* [Guide to transition from NuGet `V2 API` to `V3 API`](https://docs.microsoft.com/en-us/nuget/guides/api/query-for-all-published-packages). \r\n* [Blog post: Switching from WCF OData to Web API](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n\r\nIf you need further help in moving your use case to `V3 APIs`, do reach out to us at [support@nuget.org](mailto:support@nuget.org).\r\n"},{"Id":"10115721045","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:44:31","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Closed issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10115715827","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:43:23","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Opened issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10105705706","Type":"IssuesEvent","CreatedAt":"2019-07-29T18:41:10","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Opened issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1164220617710686209","CreatedAt":"2019-08-21T17:00:00+00:00","UserScreenname":"nuget","Text":"⚠ Restoring packages from https://t.co/KVB7werYQh might fail in some regions. We are investigating the issue. Follo… https://t.co/t69YZ9eFo1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":2,"RawContent":null},{"Id":"1162433926578626560","CreatedAt":"2019-08-16T18:40:19+00:00","UserScreenname":"nuget","Text":"Did you check out the new docs landing page? We tried to make it better and more useful. What do you think?… https://t.co/96nBP0rV5l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":3,"RawContent":null},{"Id":"1159229316351197184","CreatedAt":"2019-08-07T22:26:21+00:00","UserScreenname":"nuget","Text":"Using OData to query https://t.co/F9kiKfdOWi repository is being deprecated\n#Announcement \n\nhttps://t.co/dtelctlNOe","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-10-29T05:30:48.7352763Z","RunDurationInMilliseconds":2782}