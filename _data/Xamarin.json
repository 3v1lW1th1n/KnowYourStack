{"Data":{"Blog":{"FeedItems":[{"Title":"Getting Ready for macOS’s Hardened Runtime and Notary","PublishedOn":"2019-04-15T16:11:14+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With macOS Mojave, Apple introduced support for Hardened Runtime and Notary service. These two services are designed to improve application security on macOS. Recently Apple has...","Href":"https://devblogs.microsoft.com/xamarin/macos-hardened-runtime-notary/","RawContent":null},{"Title":"Xamarin Podcast: Visual Studio 2019 is released!","PublishedOn":"2019-04-12T17:14:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in Xamarin and cloud development.\n\nPodcast Highlights\nVisual Studio 2019 has been released and is...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-visual-studio-2019-is-released/","RawContent":null},{"Title":"Sharing Files & Email Attachments with Xamarin.Essentials Preview Features","PublishedOn":"2019-04-10T19:15:56+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In the recent release of Xamarin.Essentials (1.1.0), we introduced several new stable features including detect shake, browser customization, and a plethora of platform helpers. The team has also been...","Href":"https://devblogs.microsoft.com/xamarin/sharing-files-attachments-xamarin-essentials/","RawContent":null},{"Title":"Getting Started With WorkManager","PublishedOn":"2019-04-08T18:12:29+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"If you need to schedule a background task on Android, you&#8217;re probably familiar with all of the various ways to accomplish this such as:\n\nGoogle Cloud Messaging\nFirebase Cloud...","Href":"https://devblogs.microsoft.com/xamarin/getting-started-workmanager/","RawContent":null},{"Title":"Visual Challenge Conquered!","PublishedOn":"2019-04-03T19:03:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post Visual Challenge Conquered! appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/visual-challenge-conquered/","RawContent":null},{"Title":"What’s New for Xamarin Developers in Visual Studio 2019","PublishedOn":"2019-04-02T19:56:18+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"The post What&#8217;s New for Xamarin Developers in Visual Studio 2019 appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/xamarin-visual-studio-2019/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in April","PublishedOn":"2019-04-01T19:05:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post Xamarin and .NET Developer Events in April appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/xamarin-and-net-developer-events-in-april/","RawContent":null},{"Title":"GlideX For Fast Images on Android","PublishedOn":"2019-03-28T16:01:13+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"The post GlideX For Fast Images on Android appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/glidex-fast-images-android/","RawContent":null},{"Title":"Introducing the Xamarin.iOS Interpreter","PublishedOn":"2019-03-26T16:41:43+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"The post Introducing the Xamarin.iOS Interpreter appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/introducing-xamarin-ios-interpreter/","RawContent":null},{"Title":"Join the Xamarin Visual Challenge","PublishedOn":"2019-03-22T20:00:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past month, we have been running a low-key challenge to flex the new Xamarin.Forms 3.6 feature, Visual with Material Design. For more information about what Visual is and what you can do with...","Href":"https://devblogs.microsoft.com/xamarin/join-the-xamarin-visual-challenge/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9457551670","Type":"IssuesEvent","CreatedAt":"2019-04-17T00:59:47","Actor":"ooikengsiang","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2993","RelatedDescription":"Opened issue \"HTTPClient in Android Behaviour Differently in VS2019 and VS2017 with Linker Enabled\" (#2993) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n1. Compile an Android project with HTTPClient calling https end-point through VS2019 in release mode with linker enabled.\r\n2. Run the app in Android 4.4 emulator.\r\n3. HTTPClient call failed.\r\n\r\n### Expected Behavior\r\nAndroid project compiled with VS2017 in release mode with linker enabled.\r\nHTTPClient work when calling https end-point running in Android 4.4 emulator.\r\nSame project compiled with VS2019 in release mode with linker enabled.\r\nExpected HTTPClient to work normally.\r\n\r\n### Actual Behavior\r\nHTTPClient doesn't work when compiled VS2019 in release mode with linker enabled when running in Android 4.4 emulator.\r\nOldAndroidSSLSocketFactory class not found exception is throw instead.\r\n\r\n### Version Information\r\nVisual Studio 2019 (16.0.1) with Xamarin.Android SDK 9.2.0.5\r\nVisual Studio 2017 (15.9.8) with Xamarin.Android SDK 9.1.7.0\r\n\r\n### Device Log\r\n{Java.Lang.NoClassDefFoundError: xamarin/android/net/OldAndroidSSLSocketFactory ---> Java.Lang.ClassNotFoundException: Didn't find class \"xamarin.android.net.OldAndroidSSLSocketFactory\" on path: DexPathList[[directory \".\"],nativeLibraryDirectories=[/system/lib]]\r\n   --- End of inner exception stack trace ---\r\n  at Java.Interop.JniEnvironment+Types.FindClass (System.String classname) [0x00114] in <6838b1f2b3414511b059ec03565114ce>:0 \r\n  at Java.Interop.JniType..ctor (System.String classname) [0x00006] in <6838b1f2b3414511b059ec03565114ce>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods..ctor (System.Type declaringType) [0x0005b] in <6838b1f2b3414511b059ec03565114ce>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.GetConstructorsForType (System.Type declaringType) [0x00031] in <6838b1f2b3414511b059ec03565114ce>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.StartCreateInstance (System.String constructorSignature, System.Type declaringType, Java.Interop.JniArgumentValue* parameters) [0x00038] in <6838b1f2b3414511b059ec03565114ce>:0 \r\n  at Javax.Net.Ssl.SSLSocketFactory..ctor () [0x00034] in <6f7c932c080044dbbeecffc809d59bba>:0 \r\n  at Xamarin.Android.Net.OldAndroidSSLSocketFactory..ctor () [0x00010] in <6f7c932c080044dbbeecffc809d59bba>:0 \r\n  at Xamarin.Android.Net.AndroidClientHandler.SetupSSL (Javax.Net.Ssl.HttpsURLConnection httpsConnection) [0x00027] in <6f7c932c080044dbbeecffc809d59bba>:0 \r\n  at Xamarin.Android.Net.AndroidClientHandler.SetupRequestInternal (System.Net.Http.HttpRequestMessage request, Java.Net.URLConnection conn) [0x0007b] in <6f7c932c080044dbbeecffc809d59bba>:0 \r\n  at Xamarin.Android.Net.AndroidClientHandler.SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken) [0x00236] in <6f7c932c080044dbbeecffc809d59bba>:0 \r\n  at System.Net.Http.HttpClient.SendAsyncWorker (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken) [0x000ca] in <3fc4898ec9544a7fb4aaef53939ca73e>:0 \r\n  at AppName.GetProduct (System.String bearerToken, Card frontCard, Set set, System.Threading.CancellationToken cancellationToken) [0x000e8] in C:\\Shared\\Repos\\AppName\\AppName\\AppName.Shared\\Libraries\\TCGPlayer\\TCGPlayerAPI.cs:176 \r\n  --- End of managed Java.Lang.NoClassDefFoundError stack trace ---\r\njava.lang.NoClassDefFoundError: xamarin/android/net/OldAndroidSSLSocketFactory\r\n\tat dalvik.system.NativeStart.run(Native Method)\r\nCaused by: java.lang.ClassNotFoundException: Didn't find class \"xamarin.android.net.OldAndroidSSLSocketFactory\" on path: DexPathList[[directory \".\"],nativeLibraryDirectories=[/system/lib]]\r\n\tat dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:56)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:497)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:457)\r\n\t... 1 more\r\n\r\n### Things I Tried.\r\n- Same project compiled in VS2019 with linker enabled, HTTPClient work correctly in Android 6.0 emulator.\r\n- Disable linker in VS2019, compile the same project, HTTPClient work correctly in Android 4.4 emulator.\r\n- Add Xamarin.Android.Net.OldAndroidSSLSocketFactory into linker configuration file, compiled in VS2019 with linker enabled, HTTPClient still failed in Android 4.4 emulator."},{"Id":"9457255654","Type":"PullRequestEvent","CreatedAt":"2019-04-16T23:35:57","Actor":"alexischr","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2992","RelatedDescription":"Opened pull request \"Testing PR (System.IO Move/Replace fixes)\" (#2992) at xamarin/xamarin-android","RelatedBody":""},{"Id":"9456657699","Type":"PullRequestEvent","CreatedAt":"2019-04-16T21:29:02","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2991","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix for ManagedResourceParser\" (#2991) at xamarin/xamarin-android","RelatedBody":"Context: http://build.devdiv.io/2593085\r\nContext: https://github.com/xamarin/xamarin-android/commit/c9c1f8ad1922fc7aad517689f5dff3d1214a0ea5\r\n\r\nThe Android designer's integration tests found another problem:\r\n\r\n    Xamarin.Android.Common.targets(1326,2): warning MSB4018: The \"GenerateResourceDesigner\" task failed unexpectedly.\r\n    System.IO.DirectoryNotFoundException: Could not find a part of the path 'C:\\Users\\myuser\\AppData\\Local\\Xamarin\\Xamarin.Android.Support.CustomTabs\\23.1.1.0\\embedded\\res'.\r\n        at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\r\n        at System.IO.FileSystemEnumerableIterator`1.CommonInit()\r\n        at System.IO.FileSystemEnumerableIterator`1..ctor(String path, String originalUserPath, String searchPattern, SearchOption searchOption, SearchResultHandler`1 resultHandler, Boolean checkHost)\r\n        at System.IO.Directory.EnumerateFiles(String path, String searchPattern, SearchOption searchOption)\r\n        at Xamarin.Android.Tasks.ManagedResourceParser.Parse(String resourceDirectory, IEnumerable`1 additionalResourceDirectories, Boolean isApp, Dictionary`2 resourceMap)\r\n        at Xamarin.Android.Tasks.GenerateResourceDesigner.Execute()\r\n        at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n        at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [C:\\src\\xamarin-android\\bin\\TestDebug\\temp\\ResourceExtractionFalse\\UnnamedProject.csproj]\r\n\r\nThis is very closely related to what I fixed in c9c1f8a.\r\n\r\nI could reproduce the problem by just doing a design-time build with a\r\nproject using the `Xamarin.Android.Support.CustomTabs` 23.x NuGet\r\npackage.\r\n\r\nLooking at the code in `ManagedResourceParser`, it just seems like it\r\nhas always been this way? (circa Sept 2017) I am not sure what has\r\nchanged, that is causing these to pop up."},{"Id":"9456577945","Type":"PullRequestEvent","CreatedAt":"2019-04-16T21:15:38","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2990","RelatedDescription":"Opened pull request \"[tests] Split APK tests into parallel and non-parallel runs\" (#2990) at xamarin/xamarin-android","RelatedBody":"We want to run 2 apk tests, locale and XF, non-parallel. So that the\r\nperformance measurements for these tests make more sense and are\r\ncomparable between test flavors and also between builds.\r\n\r\nThe splitting is implemented by introducing new\r\n`RunPerformanceApkTests` target and pre-filtering `TestApk`,\r\n`TestApkInstrumentation` and `TestApkPermission` item groups for this\r\ntarget and also for `RunApkTests` target."},{"Id":"9456309763","Type":"PullRequestEvent","CreatedAt":"2019-04-16T20:32:51","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2989","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix arbitrary files in App Bundles\" (#2989) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2969\r\n\r\nIf you tried to use our new Android App Bundle feature with an app\r\nusing Google Play Services, you would get an error such as:\r\n\r\n    [BT Module files can be only in pre-defined directories, but found 'protobuf.meta'.\r\n\r\nLooking at `obj\\Release\\android\\bin\\base.zip`, it indeed had a file\r\nnamed `protobuf.meta` in the root of the zip file.\r\n\r\nIn 4f08867, I missed a case where `<BuildApk/>` puts arbitrary files\r\nfrom `.jar` files into `.apk` or `.aab` archives. For this to work\r\nwith app bundles, files like this need to go into a `/root/`\r\ndirectory. I have a `RootPath` property to handle this, which I forgot\r\nto use in this case.\r\n\r\n## Tests ##\r\n\r\nI updated `BundleToolTests` so that we use a\r\n`XamarinFormsMapsApplicationProject` that contains Google Play\r\nServices.\r\n\r\nThis gave us a couple benefits:\r\n\r\n* We now have test coverage of these arbitrary files.\r\n* We now have a new \"split\" based on language: base-en.apk\r\n\r\nI also updated the tests so that *new* files won't cause the tests to\r\nfail.\r\n\r\n## Future changes ##\r\n\r\nAfter seeing this code in `<BuildApk/>`, I want to improve it. It uses\r\n`byte[]` + LINQ, I think there are some perf improvements to be done\r\nhere."},{"Id":"9455883608","Type":"PullRequestEvent","CreatedAt":"2019-04-16T19:24:45","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2988","RelatedDescription":"Opened pull request \"Bump to mono/debugger-libs/master@b024d07\" (#2988) at xamarin/xamarin-android","RelatedBody":"Context: http://build.devdiv.io/2590575\r\nChanges: https://github.com/mono/debugger-libs/compare/b45303f...b024d07\r\n\r\nSome Windows machines fail to build `Xamarin.Android.sln` with:\r\n\r\n    external\\debugger-libs\\Mono.Debugging.Soft\\SoftDebuggerSession.cs(2606,30):\r\n        Error CS0234: The type or namespace name 'Unix' does not exist in the namespace 'Mono' (are you missing an assembly reference?)\r\n\r\nThere is a `<Reference Include=\"Mono.Posix\"/>` that doesn't work on my\r\nWindows machine, and *some* CI machines?\r\n\r\nBut if I look at: http://build.devdiv.io/2590624\r\n\r\nThis build worked using:\r\n\r\n    /reference:\"C:\\Program Files (x86)\\GtkSharp\\2.12\\lib\\Mono.Posix\\Mono.Posix.dll\"\r\n\r\nSo I guess things work if you have GTK installed?\r\n\r\nSince we probably don't want to require GTK to be installed, I fixed\r\nthe issue upstream in mono/debugger-libs by relying on a NuGet package\r\non Windows."},{"Id":"9455741818","Type":"PullRequestEvent","CreatedAt":"2019-04-16T19:01:43","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2987","RelatedDescription":"Opened pull request \"[tests] Dont run the NunitDeviceTests all the time.\" (#2987) at xamarin/xamarin-android","RelatedBody":"We currently invoke `RunApkTests` 3 times with\r\ndifferent parameters. As a result that also\r\nruns the `NUnitDeviceTests` 3 times!!\r\n\r\nThis commit reworks the RunTest.targets and\r\nthe RunApkTests.targets so they only run\r\nonce."},{"Id":"9455335863","Type":"PullRequestEvent","CreatedAt":"2019-04-16T18:00:00","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2985","RelatedDescription":"Merged pull request \"Fix build error when copying Android\\Xamarin.Android.Cecil.dll\" (#2985) at xamarin/xamarin-android","RelatedBody":""}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9458027561","Type":"IssuesEvent","CreatedAt":"2019-04-17T03:11:59","Actor":"yanshouwang","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5935","RelatedDescription":"Opened issue \"[Bug] How to use System.Configuration.ConfigurationManager nuget package in Xamarin.Forms\" (#5935) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI noticed that there is a ['System.Configuration.ConfigurationManager'](https://www.nuget.org/packages/System.Configuration.ConfigurationManager/4.5.0) nuget package from Microsoft and it supports Xamarin and NetStandard, so I want to use it to add some configurations to my app, but I don't know how to use it and when I try to use the 'System.Configuration.ConfigurationManager.AppSettings' property it always throws a exception.\r\n\r\nPlease tell me is it possible to use this feature in Xamarin.Forms?\r\n\r\nThe exception is as follows:\r\nSystem.Configuration.ConfigurationErrorsException: Configuration system failed to initialize ---> System.PlatformNotSupportedException: Operation is not supported on this platform.\r\n  at System.Configuration.ClientConfigPaths..ctor (System.String exePath, System.Boolean includeUserConfig) [0x00050] in <5ae095f7408b4d5cb5cdbfc3d3c31d20>:0 \r\n  at System.Configuration.ClientConfigPaths.GetPaths (System.String exePath, System.Boolean includeUserConfig) [0x00018] in <5ae095f7408b4d5cb5cdbfc3d3c31d20>:0 \r\n  at System.Configuration.ClientConfigurationHost.get_ConfigPaths () [0x0000a] in <5ae095f7408b4d5cb5cdbfc3d3c31d20>:0 \r\n  at System.Configuration.ClientConfigurationHost.GetStreamName (System.String configPath) [0x0006d] in <5ae095f7408b4d5cb5cdbfc3d3c31d20>:0 \r\n  at System.Configuration.ClientConfigurationHost.get_IsAppConfigHttp () [0x00000] in <5ae095f7408b4d5cb5cdbfc3d3c31d20>:0 \r\n  at System.Configuration.Internal.DelegatingConfigHost.get_IsAppConfigHttp () [0x00006] in <5ae095f7408b4d5cb5cdbfc3d3c31d20>:0 \r\n  at System.Configuration.ClientConfigurationSystem..ctor () [0x00051] in <5ae095f7408b4d5cb5cdbfc3d3c31d20>:0 \r\n  at System.Configuration.ConfigurationManager.EnsureConfigurationSystem () [0x00024] in <5ae095f7408b4d5cb5cdbfc3d3c31d20>:0 \r\n   --- End of inner exception stack trace ---\r\n  at System.Configuration.ConfigurationManager.EnsureConfigurationSystem () [0x00060] in <5ae095f7408b4d5cb5cdbfc3d3c31d20>:0 \r\n  at System.Configuration.ConfigurationManager.PrepareConfigSystem () [0x0000a] in <5ae095f7408b4d5cb5cdbfc3d3c31d20>:0 \r\n  at System.Configuration.ConfigurationManager.GetSection (System.String sectionName) [0x0000a] in <5ae095f7408b4d5cb5cdbfc3d3c31d20>:0 \r\n  at System.Configuration.ConfigurationManager.get_AppSettings () [0x00000] in <5ae095f7408b4d5cb5cdbfc3d3c31d20>:0 \r\n  at TPrism.Forms.App.OnStart () [0x0003c] in C:\\Users\\ysw731\\source\\repos\\TPrism\\TPrism.Forms\\TPrism.Forms\\App.xaml.cs:52\r\n\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.2.0.839982\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:['System.Configuration.ConfigurationManager'](https://www.nuget.org/packages/System.Configuration.ConfigurationManager/4.5.0)\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9457554538","Type":"PullRequestEvent","CreatedAt":"2019-04-17T01:00:32","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5934","RelatedDescription":"Opened pull request \"[Shell] Propagate Page bindings to TitleView and Shell Binding to Flyout\" (#5934) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n- Fixed titleview so that it correctly gets propagated the bindingcontext that is set for the current page\r\n- Added exception if user hasn't added any shell items\r\n- fixed it so FlyoutView retains binding context of Shell instead of just getting set to itself\r\n\r\n### Issues Resolved ### \r\n- fixes #5650\r\n\r\n\r\n### Platforms Affected ### \r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\nThe flyout view was always setting its bindingcontext to itself. I'm not sure if this had a useful purpose or not\r\n\r\n\r\n### Testing Procedure ###\r\nRun the included UI Test\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9457370209","Type":"PullRequestEvent","CreatedAt":"2019-04-17T00:07:17","Actor":"dotMorten","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5933","RelatedDescription":"Opened pull request \"Avoid LINQ exception\" (#5933) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nIf the back button in UWP is pressed, but there's nothing in the backstack, the `Last()` LINQ query will throw `System.InvalidOperationException: 'Sequence contains no elements`\r\nThis change avoids that, and just returns false that Forms didn't handle the event.\r\n\r\n\r\n### Issues Resolved ### \r\nException thrown when turning the backbutton on, but not having anything put in the backstack.\r\n\r\n### API Changes ###\r\nNone\r\n None\r\n\r\n### Platforms Affected ### \r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9456861566","Type":"PullRequestEvent","CreatedAt":"2019-04-16T22:05:20","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5925","RelatedDescription":"Closed pull request \"s/SearchBoxVisiblity/SearchBoxVisibility/\" (#5925) at xamarin/Xamarin.Forms","RelatedBody":"Fix typo in type name.\r\n\r\n### Description of Change ###\r\n\r\nI searched for the string `SearchBoxVisiblity` and changed it to `SearchBoxVisibility`. \r\n\r\n### Issues Resolved ### \r\n\r\n\r\n- fixes #5924\r\n\r\n### API Changes ###\r\nXamarin.Forms.Controls.XamStore.AddSearchHandler(string,SearchBoxVisiblty) -> changed arg type\r\nenum SearchBoxVisiblity -> SearchBoxVisibility\r\n\r\n\r\n### Platforms Affected ### \r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nBuild\r\nBuild Xamarin.Forms.Core.UnitTests\r\nRun Unit Tests. \r\n\r\n4 unit tests fail: \r\nListProxyTests.WeakToWeak\r\nMapTests.ElementIsGarbageCollectedAfterItsRemoved\r\nMessagingCenterTests.SubscriberCollectableAfterUnsubscribeEvenIfHeldByClosure\r\nShellUriHandlerTests.SubscriberCollectableAfterUnsubscribeEvenIfHeldByClosure\r\n\r\nI don't think any of those failures plausibly relate to this change\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests \r\n\r\nNo additional tests because renaming enum. If old symbol used, should not compile. Even if reflection, \"Replace in files...\" should have caught string \r\n\r\n- [ x ] Rebased on top of the target branch at time of PR\r\n- [  x ] Changes adhere to coding standard\r\n"},{"Id":"9456859303","Type":"PullRequestEvent","CreatedAt":"2019-04-16T22:04:56","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5931","RelatedDescription":"Merged pull request \"s/SearchBoxVisiblity/SearchBoxVisibility/ from base 4.0.0\" (#5931) at xamarin/Xamarin.Forms","RelatedBody":"Closes https://github.com/xamarin/Xamarin.Forms/pull/5925\r\n\r\nper https://github.com/xamarin/Xamarin.Forms/pull/5925#issuecomment-483573639"},{"Id":"9456409057","Type":"IssuesEvent","CreatedAt":"2019-04-16T20:48:58","Actor":"amirvenus","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5932","RelatedDescription":"Opened issue \"[Bug] [iOS] Xamarin.Forms builds can no longer be sent to Apple\" (#5932) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\n### Steps to Reproduce\r\n\r\n1. Use latest XF nuget 3.6.0.293080\r\n2. Archive for publishing in release mode\r\n3. Upload using Application Loader\r\n\r\n### Expected Behaviour\r\n\r\nIt should work fine as before\r\n\r\n### Actual Behavior\r\n\r\nApple complains that the app makes reference to non-public APIs:\r\n\r\nWe identified one or more issues with a recent delivery for your app. Please correct the following issues, then upload again.\r\n\r\nNon-public API usage:\r\n\r\nThe app references non-public selectors in App.iOS: addTemporaryAttribute:value:forCharacterRange:, addTemporaryAttributes:forCharacterRange:, behaviorWithType:, defaultBaselineOffsetForFont:, defaultLineHeightForFont:, finished, greekingThreshold, horizontalCornerRadius, initWithSource:convolutionState:weights:, initWithType:, postSession:didAddPlayer:, postSession:didReceiveData:fromPlayer:, postSession:didReceiveMessage:withData:fromPlayer:, postSession:didRemovePlayer:, postSession:player:didChangeConnectionState:, postSession:player:didSaveData:, preferredMetalContext, removeData:, removeTemporaryAttribute:forCharacterRange:, setGreekingThreshold:, setHorizontalCornerRadius:, setIsPrimary:, setShouldAntiAlias:, setUUID:, setVerticalCornerRadius:, shouldAntiAlias, temporaryAttribute:atCharacterIndex:effectiveRange:, temporaryAttribute:atCharacterIndex:longestEffectiveRange:inRange:, temporaryAttributesAtCharacterIndex:effectiveRange:, temporaryAttributesAtCharacterIndex:longestEffectiveRange:inRange:, textContainerChangedTextView:, toolTip, usesBackgroundSession, verticalCornerRadius\r\nIf method names in your source code match the private Apple APIs listed above, altering your method names will help prevent this app from being flagged in future submissions. In addition, note that one or more of the above APIs may be located in a static library that was included with your app. If so, they must be removed."},{"Id":"9456179784","Type":"PullRequestEvent","CreatedAt":"2019-04-16T20:12:03","Actor":"lobrien","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5931","RelatedDescription":"Opened pull request \"Lobrien fix visibility from 4.0.0\" (#5931) at xamarin/Xamarin.Forms","RelatedBody":"Replaces https://github.com/xamarin/Xamarin.Forms/pull/5925\r\n\r\nper https://github.com/xamarin/Xamarin.Forms/pull/5925#issuecomment-483573639"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9456478993","Type":"IssuesEvent","CreatedAt":"2019-04-16T20:59:48","Actor":"plynkus","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5910","RelatedDescription":"Opened issue \"IMTLRenderCommandEncoder bindings inconsistencies?\" (#5910) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create or load any boilerplate Metal example project.\r\n2. Attempt to call SetFragmentTexture(null, 0) on any IMTLRenderCommandEncoder.\r\n\r\n### Expected Behavior\r\n\r\nThe call is accepted.\r\n\r\n### Actual Behavior\r\n\r\nUnhandled Exception:\r\n\r\nSystem.ArgumentNullException: Value cannot be null.\r\nParameter name: texture\r\n\r\n### Environment\r\n\r\n```\r\nMicrosoft Visual Studio Community 2019\r\nVersion 16.0.1\r\nVisualStudio.16.Release/16.0.1+28803.156\r\nMicrosoft .NET Framework\r\nVersion 4.7.03190\r\n\r\nInstalled Version: Community\r\n\r\nVisual C++ 2019   00435-60000-00000-AA963\r\nMicrosoft Visual C++ 2019\r\n\r\nApplication Insights Tools for Visual Studio Package   9.0.20307.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2019   16.0.12311.10635\r\nASP.NET and Web Tools 2019\r\n\r\nASP.NET Web Frameworks and Tools 2019   16.0.12311.10635\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   16.0.12311.10635\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Functions and Web Jobs Tools   16.0.12311.10635\r\nAzure Functions and Web Jobs Tools\r\n\r\nC# Tools   3.0.0-beta4-19170-01+1deafee3682da88bf07d1c18521a99f47446cee8\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.77 (master@24013d5)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 0x10 - v2.9.0.0\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   16.0.300 (573eda3)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   5.0.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   16.0.61903.25110\r\nMicrosoft SQL Server Data Tools\r\n\r\nTest Adapter for Boost.Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Boost.Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTest Adapter for Google Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTypeScript Tools   16.0.10306.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   3.0.0-beta4-19170-01+1deafee3682da88bf07d1c18521a99f47446cee8\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.28625.91\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual F# Tools 10.4 for F# 4.6   16.0.0.0.  Commit Hash: 809f41207b74a1356208f11b8fa3a15233734050.\r\nMicrosoft Visual F# Tools 10.4 for F# 4.6\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   16.0.0.515 (d16-0@a3502d929)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.17.4.418 (remotes/origin/d16-0@3d086e814)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   16.1.47 (31f664d)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.2.0.5 (HEAD/292d27fa)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n    Mono: mono/mono/2018-08-rc@5ad371dab1b\r\n    Java.Interop: xamarin/java.interop/d16-0@c987483\r\n    LibZipSharp: grendello/LibZipSharp/master@44de300\r\n    LibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\n    MXE: xamarin/mxe/xamarin@b9cbb535\r\n    ProGuard: xamarin/proguard/master@905836d\r\n    SQLite: xamarin/sqlite/3.26.0@325e91a\r\n    Xamarin.Android Tools: xamarin/xamarin-android-tools/d16-0@0a7edd6\r\n\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.8.0.0 (0aa8452)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n"},{"Id":"9455032991","Type":"IssuesEvent","CreatedAt":"2019-04-16T17:14:03","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5909","RelatedDescription":"Opened issue \"marksweep-conc is now non-experimental, should update text (change default?)\" (#5909) at xamarin/xamarin-macios","RelatedBody":"@BrzVlad informed me that the options that `--sgen-conc` enable are no longer experimental. \r\n\r\nWe should update the text for sure. Maybe we consider changing the default if that is safe and reasonable."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1117944446899896322","CreatedAt":"2019-04-16T00:15:01+00:00","UserScreenname":"xamarinhq","Text":"We're getting ready for macOS’s Hardened Runtime and Notary. Learn how to get started; from configuring your entitl… https://t.co/p4W2CszalI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":26,"FavoriteCount":13,"RawContent":null},{"Id":"1116762533346652160","CreatedAt":"2019-04-12T17:58:31+00:00","UserScreenname":"xamarinhq","Text":"There’re tons in store for you in the latest podcast... @codemillmatt and @JamesMontemagno rundown the new features… https://t.co/1TlcD9N8yV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":36,"FavoriteCount":18,"RawContent":null},{"Id":"1115620503232962560","CreatedAt":"2019-04-09T14:20:29+00:00","UserScreenname":"xamarinhq","Text":"Under the Hood: Take an inside look at #DevOps at Microsoft, in this webinar with @abelsquidhead and @Applitools on… https://t.co/qgf7T5OPvM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":40,"FavoriteCount":23,"RawContent":null},{"Id":"1115323538091720704","CreatedAt":"2019-04-08T18:40:27+00:00","UserScreenname":"xamarinhq","Text":"Say 'Hello' to WorkManager - a library that makes it easy to schedule deferrable, asynchronous tasks even if the ap… https://t.co/xOYvf5E0K0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":106,"FavoriteCount":46,"RawContent":null},{"Id":"1113833658920472576","CreatedAt":"2019-04-04T16:00:12+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":31,"FavoriteCount":11,"RawContent":null},{"Id":"1113554700702449664","CreatedAt":"2019-04-03T21:31:44+00:00","UserScreenname":"xamarinhq","Text":"Last week we issued a challenge to the Xamarin community to use the new Material Design controls with Visual by rep… https://t.co/JpaGEihELG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":144,"FavoriteCount":53,"RawContent":null},{"Id":"1113137014768066560","CreatedAt":"2019-04-02T17:52:00+00:00","UserScreenname":"xamarinhq","Text":"News from the #VisualStudio 2019 Launch Event. See what’s new for #Xamarin Developers in #VS2019,… https://t.co/ylrA7eBnQ4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":146,"FavoriteCount":72,"RawContent":null},{"Id":"1112804184166944768","CreatedAt":"2019-04-01T19:49:27+00:00","UserScreenname":"xamarinhq","Text":"Learn about the new, exciting releases and tooling to help jumpstart your next mobile development project.\n\nJoin us… https://t.co/4AhXCdCrB0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":27,"FavoriteCount":13,"RawContent":null},{"Id":"1111358962681765893","CreatedAt":"2019-03-28T20:06:39+00:00","UserScreenname":"xamarinhq","Text":"Unlock the power of Glide with “GlideX”: a simple library to swap-in Glide’s image loading implementation in-place… https://t.co/bAk49l9er6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":47,"FavoriteCount":25,"RawContent":null},{"Id":"1111318034789158912","CreatedAt":"2019-03-28T17:24:01+00:00","UserScreenname":"xamarinhq","Text":"How are we doing? The #Xamarin March survey is now ready for your feedback: https://t.co/yfktVy49Pl \nIt's only avai… https://t.co/gX2uC9QShF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":55,"FavoriteCount":37,"RawContent":null},{"Id":"1110599405390962693","CreatedAt":"2019-03-26T17:48:26+00:00","UserScreenname":"xamarinhq","Text":"Interpret some of the #CSharp in your application while compiling the rest ahead of time as usual.\n\nCool.... Introd… https://t.co/vkhDptAeTr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":96,"FavoriteCount":44,"RawContent":null},{"Id":"1109140611515498502","CreatedAt":"2019-03-22T17:11:43+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/GFuU36E9x5 - Let's walk through a basic building block of #Xamarin.Forms. In the latest episode of Xam… https://t.co/qczJXvqcNK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":68,"FavoriteCount":29,"RawContent":null},{"Id":"1108410911151345664","CreatedAt":"2019-03-20T16:52:09+00:00","UserScreenname":"xamarinhq","Text":"We're ready for testing &amp; app submission. The latest #Xamarin .iOS SDKs shipping with #VS2019 and #VS4Mac 8.0, are… https://t.co/KC1Gih3MFF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":26,"RawContent":null},{"Id":"1107723971531862017","CreatedAt":"2019-03-18T19:22:29+00:00","UserScreenname":"xamarinhq","Text":"We have received some great pull requests to add some new features and that have gone into the newest release. Now… https://t.co/EqNQUDloOm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":120,"FavoriteCount":47,"RawContent":null},{"Id":"1106650380182659080","CreatedAt":"2019-03-15T20:16:25+00:00","UserScreenname":"xamarinhq","Text":"Introducing the New Xamarin Customer Showcase\n\nHighlighting the amazing work developers are doing for all sorts of… https://t.co/yQbcA4cYc6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":97,"FavoriteCount":42,"RawContent":null},{"Id":"1106576630884065280","CreatedAt":"2019-03-15T15:23:22+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @JamesMontemagno &amp; @JonathanPeppers show us how to optimize image loading for Androi… https://t.co/FkiznwhBep","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":74,"FavoriteCount":17,"RawContent":null},{"Id":"1105942645308678144","CreatedAt":"2019-03-13T21:24:08+00:00","UserScreenname":"xamarinhq","Text":"There have been some drastic changes across key libraries for Google Play Services &amp; Android Support. Let's get a q… https://t.co/heywxPz0Qs","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":41,"FavoriteCount":25,"RawContent":null},{"Id":"1105573743986917377","CreatedAt":"2019-03-12T20:58:15+00:00","UserScreenname":"xamarinhq","Text":"#MFractor is a powerful #VS4Mac extension to streamline Xamarin app dev so you can save significant time &amp; effort o… https://t.co/pEwcgwzd3t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":45,"FavoriteCount":22,"RawContent":null},{"Id":"1105491570583851008","CreatedAt":"2019-03-12T15:31:44+00:00","UserScreenname":"xamarinhq","Text":".@codemillmatt &amp; @JamesMontemagno talk about a ton of newness out there for all mobile devs including a hot new… https://t.co/05m3VTmUBe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":24,"RawContent":null}]}},"RunOn":"2019-04-17T05:30:53.5771933Z","RunDurationInMilliseconds":2189}