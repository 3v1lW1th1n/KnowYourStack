{"Data":{"Blog":{"FeedItems":[{"Title":"Take a Break with Azure Functions","PublishedOn":"2017-12-22T05:41:48+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"So, it&#8217;s the Holidays. The office is empty, the boss is away, and you&#8217;ve got a bit of free time on your hands. How about learning a new skill and having some fun? Azure Functions are a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/21/take-a-break-with-azure-functions/","RawContent":null},{"Title":"Testing ASP.NET Core MVC web apps in-memory","PublishedOn":"2017-12-07T17:00:35+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written and submitted by Javier Calvarro Nelson, a developer on the ASP.NET Core MVC team Testing is an important part of the development process of any app. In this blog post...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/07/testing-asp-net-core-mvc-web-apps-in-memory/","RawContent":null},{"Title":"Configuring HTTPS in ASP.NET Core across different platforms","PublishedOn":"2017-11-29T17:00:12+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As the web moves to be more secure by default, it&#8217;s more important than ever to make sure your websites have HTTPS enabled. And if you&#8217;re going to use HTTPS in production its a good idea...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/29/configuring-https-in-asp-net-core-across-different-platforms/","RawContent":null},{"Title":"Improve website performance by optimizing images","PublishedOn":"2017-11-28T18:02:29+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We all want our web applications to load as fast as possible to give the best possible experience to the users. One of the steps to achieve that is to make sure the images we use are as optimized as...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/28/improve-website-performance-by-optimizing-images/","RawContent":null},{"Title":"Orchard Core Beta 1 released","PublishedOn":"2017-11-21T19:32:10+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This is a guest post by Sebastien Ros on behalf of the Orchard community Two years ago, the Orchard community started developing Orchard on .NET Core. After 1,500 commits, 297,000 lines of code, 127...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/21/orchard-core-beta-annoucement/","RawContent":null},{"Title":"Announcing .NET 4.7.1 Tools for the Cloud","PublishedOn":"2017-11-17T17:41:35+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today we are releasing a set of providers for ASP.NET 4.7.1 that make it easier than ever to deploy your applications to cloud services and take advantage of cloud-scale features.  This release...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/17/announcing-net-4-7-1-tools-for-the-cloud/","RawContent":null},{"Title":"Improvements to Azure Functions in Visual Studio","PublishedOn":"2017-11-15T19:00:43+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"We&#8217;re excited to announce several improvements to the Azure Functions experience in Visual Studio as part of the latest update to the Azure Functions tools on top of Visual Studio 2017 v15.5....","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/15/improvements-to-azure-functions-in-visual-studio/","RawContent":null},{"Title":"Creating a Minimal ASP.NET Core Windows Container","PublishedOn":"2017-11-09T16:18:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post by Mike Rousos One of the benefits of containers is their small size, which allows them to be more quickly deployed and more efficiently packed onto a host than virtual machines...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/09/creating-a-minimal-asp-net-core-windows-container/","RawContent":null},{"Title":"Publishing a Web App to an Azure VM from Visual Studio","PublishedOn":"2017-11-01T22:35:42+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We know virtual machines (VMs) are one of the most popular places to run apps in Azure, but publishing to a VM from Visual Studio has been a tricky experience for some. So, we’re pleased to announce...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/01/publishing-a-web-app-to-an-azure-vm-from-visual-studio/","RawContent":null},{"Title":"Recent updates for publishing","PublishedOn":"2017-10-31T18:18:45+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We have recently added a few interesting features for ASP.NET publishing. The updates include: Container Registry Publish Updates Create publish profile without publishing In this post, we will...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/31/recent-updates-for-publishing/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7054508636","Type":"IssuesEvent","CreatedAt":"2018-01-04T01:14:42","Actor":"embryologist","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2740","RelatedDescription":"Opened issue \"AntiForgeryToken validation keeps failing\" (#2740) at aspnet/Home","RelatedBody":"I am developing a web `API` app running using `asp.net core2` and `Angular`. The detailed development environment config is [here][1].\r\nI am trying to configure `AntiForgeryToken` validation but it keeps failing. I followed the config. [here][2], but I had to modify it as my angular app and asp.net servers are running on two different ports because the front end startup doesn't generate the token. I kick start the backend by calling an `API` path (`/api/Account/ContactInitialization`) at the app component `ngOnInit` which allowed me to generate the token. \r\nThe config is shown below,\r\n\r\n`IServiceCollection` Service:\r\n\r\n            services.AddAntiforgery(options =>\r\n                    {\r\n                        options.HeaderName = \"X-CSRF-TOKEN\";\r\n                        options.SuppressXFrameOptionsHeader = false;\r\n                    });\r\n\r\nand at `IApplicationBuilder Configure`:\r\n\r\n    app.Use(next => context =>\r\n                    {\r\n                        string path = context.Request.Path.Value;\r\n                        if (\r\n    \r\n                            string.Equals(path, \"/\", StringComparison.OrdinalIgnoreCase) ||\r\n                            string.Equals(path, \"/api/Account/ContactInitialization\", StringComparison.OrdinalIgnoreCase) ||\r\n                            string.Equals(path, \"/index.html\", StringComparison.OrdinalIgnoreCase))\r\n                        {\r\n                            // We can send the request token as a JavaScript-readable cookie, \r\n                            // and Angular will use it by default.\r\n                             var tokens = antiforgery.GetAndStoreTokens(context);\r\n                            context.Response.Cookies.Append(\"XSRF-TOKEN\", tokens.RequestToken,\r\n                                new CookieOptions() { HttpOnly = false });\r\n                        }\r\n    \r\n                        return next(context);\r\n                    });\r\n\r\nasp.net. generates two set of keys, \r\n\r\n[![enter image description here][3]][3]\r\n\r\nI decorated my method with `[ValidateAntiForgeryToken]` and angular includes `XSRF-TOKEN` cookie content in my header request. yet I keep receiving a `400 (Bad Request)` response after calling the `API`! what am I missing here?\r\n\r\nController Method,\r\n\r\n        [Authorize]\r\n        [ValidateAntiForgeryToken]\r\n        [HttpPost]\r\n        public IEnumerable<string> AutherizeCookie()\r\n        {\r\n            return new string[] { \"Hello\", \"Auth Cookie\" };\r\n        }\r\n\r\nmy detailed header request looks like below,\r\n\r\n```\r\nPOST /api/Values/AutherizeBaseController HTTP/1.1\r\nHost: localhost:4200\r\nConnection: keep-alive\r\nContent-Length: 2\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nAccept: application/json, text/plain, */*\r\nOrigin: http://localhost:4200\r\nAuthorization: **Bearer** eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhaG1hZCIsImp0aSI6IjJhMTA1NzJjLWY2MWMtNGQwNi05ZjEzLThmOWZlOTUyYjQ4NyIsImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3QvIiwiaWF0IjoxNTE1MDI4MzUzLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6ImNhYjIxYTdlLTMwZjAtNDJhNi05NGIyLWNiYjczN2MzNmNmMyIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWUiOiJhaG1hZCIsIkRpc3BsYXlOYW1lIjoiQWJ1IE1haXphciIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9jbGFpbXMvc2VyaWFsbnVtYmVyIjoiZjgyZDdlZTgtOTA5ZC00MTMzLTlmZjUtMjczYTBjMzAxNDgyIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy91c2VyZGF0YSI6ImNhYjIxYTdlLTMwZjAtNDJhNi05NGIyLWNiYjczN2MzNmNmMyIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9jbGFpbXMvcm9sZSI6WyJEYXRhYmFzZSBTdXBlciBVc2VyIiwiQWRtaW5pc3RyYXRvciJdLCJuYmYiOjE1MTUwMjgzNTIsImV4cCI6MTUxNTAzMTk1MiwiYXVkIjoiaHR0cDovL2xvY2FsaG9zdC8ifQ.Jhnh-vRSANR0_dDqzBOEwtG5BxI3V6pX28Zdc5IQZMw\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36\r\nContent-Type: application/json\r\nReferer: http://localhost:4200/dbapp\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9\r\nCookie: .AspNetCore.Antiforgery.jY5Bh2HGy8s=CfDJ8MxOovOd259BlsEMLYWAq1gbumuwD_ifl51KgQeExpEGd81dp7zarQ2mZ0C4ZexLTiPJXNSbrCR06mzi2OxqeXh4ZcrQGuo-K4yyIYG3bUhIy1RiXdA6IuIjcYP13ylyWJeNJ7FiOzm3c5AGvsF2YTk; XSRF-TOKEN=CfDJ8MxOovOd259BlsEMLYWAq1gds0ipk9X5sh3kqK20RnvPBSoo5x5EpzzGyncHjx3-PXX40Orc9NUUlpTejlL8RWTDGB9QUuOk_PCWudkYXyiqdebgcnfuQNQt_2fJkhyijawUSGsX9HmATMsZrHWvGOk; .AspNetCore.Identity.Application=CfDJ8MxOovOd259BlsEMLYWAq1gHJUrf-RKdswXaTtdaDrRIDxhC1FejiDQPMXNMUkox-DIzcIblxOgwwkg-EdQd6q0B0BQd4V5G2tTdncGJWrfqaBwbhVCCIOFNxsJZ8Px0KiSeaL_chJ27VN9M3dSnhIm30gGVN8IEzzhA8JicJUooK2O4Dr4OCzBuYvJKez4A35nnO8XFxFmncSq5vc18hhgH4-CFNKPRT24t1XgN8s_FpV2hdNtSoqMVFlKvwQaiDieM3tLRWsYnjpvDprmCr-MPTNA5oCBEVE56vOc-gViAPPBrA_AVDH0EaOBOBFVrBP2UFUOHE0wz3y8jsHIOCRNOeowyQnPsBMobywd1bmioTi2LTX0tk4FbC_Y3kE7n4BkggOQiOE-XaXifoNoxaWPQTkWtClr-hVWW1orQZ7hDUIA_VyGxsrOetEd1KMLMVQD_fGAOrBBm4qJZvGFGqq1RWgAGdjf3c15Lrpj4DrSDyF7nICyn_z2LOQkXTQ81VByrqAy4C_boSbCjAO1YlpnBKJpVkrsUPr8szj6kwilumwhSB-PXAYU7Z8nVM3XcgKIvRWDYxLqS8AQZU7-Z4roMmAYlRrqUziEcpnSL5LNJgMUaBnFESpxFpnXmyOiFEKp6-W0f02uwrRhn__eP8vidr27cANwxghDxP92V-b8Wya5Ogbqw_DMmNYweEx1jbAYAqJOhF8Jx_QFoGIUQT8EEeAqsaCNIrMVVQsTWfqRkD_t4RDOaRF5zguTmKl5r_MQcM6xyOtj-UtzhWU8RzetumCQ4i2z7-_qnCLfpuEax3BrdTGMlkVUas__Up6-l_A\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n  [1]: https://medium.com/@levifuller/building-an-angular-application-with-asp-net-core-in-visual-studio-2017-visualized-f4b163830eaa\r\n  [2]: https://docs.microsoft.com/en-us/aspnet/core/security/anti-request-forgery\r\n  [3]: https://i.stack.imgur.com/UqhEt.png"},{"Id":"7054439278","Type":"IssuesEvent","CreatedAt":"2018-01-04T00:44:47","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2739","RelatedDescription":"Closed issue \"Question: specifing non dafault encoding\" (#2739) at aspnet/Home","RelatedBody":"Good day, I am writing with a question to you, because have found no exact tutorials for my problem.\r\n\r\nOn our project we need to deal with 8-bit encoding for data transfer and we need exactly ISO-8859-6 encoding for JSON and HTML output of aspnet core webservice. And server would be on Linux. Netcoreapp 2.0.  So the question is :\r\n1. How to produce Json in such encoding?\r\n2. How to deserialize requests in such encoding in model binding?\r\n3. How to tell Razor to produce HTML-Angular webpage in such encoding?\r\n4. Maybe there is any way to tell ASP.Net Core to use some encoding in the whole application? (like web.config had previously)\r\n\r\nI tried to override the JSON Formatter behavior on the way like:\r\n\r\n``` csharp\r\n    class ForcedISO88596OutputJsonFormatter : JsonOutputFormatter\r\n    {\r\n        public ForcedISO88596OutputJsonFormatter(\r\n            JsonSerializerSettings serializerSettings,\r\n            ArrayPool<char> charPool)\r\n            : base(serializerSettings, charPool)\r\n        {\r\n        }\r\n\r\n        public override Encoding SelectCharacterEncoding(OutputFormatterWriteContext context)\r\n        {\r\n            EncodingProvider provider = CodePagesEncodingProvider.Instance;\r\n            Encoding encoding = provider.GetEncoding(\"iso_8859-6\");\r\n            return encoding;\r\n        }\r\n    }\r\n    public class Startup\r\n    {\r\n        public Startup(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n        }\r\n\r\n        public IConfiguration Configuration { get; }\r\n\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddMvc();\r\n            services.AddMvcCore(options => { //This string I added\r\n                options.OutputFormatters.Add(new ForcedISO88596OutputJsonFormatter(new JsonSerializerSettings(), ArrayPool<char>.Shared));\r\n            }).AddJsonFormatters();\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n                app.UseWebpackDevMiddleware(new WebpackDevMiddlewareOptions\r\n                {\r\n                    HotModuleReplacement = true\r\n                });\r\n            }\r\n            else\r\n            {\r\n                app.UseExceptionHandler(\"/Home/Error\");\r\n            }\r\n\r\n            app.UseStaticFiles();\r\n\r\n            app.UseMvc(routes =>\r\n            {\r\n                routes.MapRoute(\r\n                    name: \"default\",\r\n                    template: \"{controller=Home}/{action=Index}/{id?}\");\r\n\r\n                routes.MapSpaFallbackRoute(\r\n                    name: \"spa-fallback\",\r\n                    defaults: new { controller = \"Home\", action = \"Index\" });\r\n            });\r\n        }\r\n    }\r\n```\r\n\r\n\r\n``` csharp\r\n[Route(\"api/[controller]\")]\r\n    public class DataController : Controller\r\n    {\r\n        [HttpGet()]\r\n        public IActionResult ArabicResponse()\r\n        {\r\n            Response.Headers[\"Content-Type\"] += \"application/json;charset=ISO-8859-6\";\r\n            return Ok(new string[] { \"مرحبا\", \"hello\" });\r\n        }\r\n\r\n        [HttpPost()]\r\n        public IActionResult Data(Class data)\r\n        {\r\n            Response.Headers[\"Content-Type\"] += \"application/json;charset=ISO-8859-6\";\r\n            return Ok(data);\r\n        }\r\n\r\n        public class Class\r\n        {\r\n            public string ComponentName { get; set; }\r\n            public int ComponentId { get; set; }\r\n        }\r\n    }\r\n}\r\n\r\n```"},{"Id":"7054435833","Type":"IssuesEvent","CreatedAt":"2018-01-04T00:43:30","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2735","RelatedDescription":"Closed issue \"multi dimensional array or dictionary binding doesn't work\" (#2735) at aspnet/Home","RelatedBody":"I was able to use following code in asp.net mvc but it's not working in asp.net core and i can't see any other solution rather than writing a custom model binder. i tried whatever solution was out there on the internet but look like it's not working properly.\r\nI am using asp.net core 2.0\r\n\r\n`ScoresViewModel.cs`\r\n\r\n```C#\r\npublic class ScoresViewModel\r\n{\r\n    public List<List<int>> Inputs { get; set; }\r\n}\r\n````\r\n\r\n`index.cshtml`\r\n\r\n```HTML\r\n<from id=\"question\" >\r\n   <input type=\"text\" name=\"Inputs[0][0]\" value=\"10\" />\r\n   <input type=\"text\" name=\"Inputs[0][1]\" value=\"11\" />\r\n   <button type=\"submit\" id=\"submit\" value=\"submit\"/>\r\n</from>\r\n```\r\n\r\n```JS\r\n$(\"#submit\").submit(function () {\r\n    var getData = function () {\r\n        return $(\"#question\").serialize();\r\n    };\r\n    $.ajax({\r\n        url: \"/Api/ScoreCalculator/Calculate\",\r\n        method: \"POST\",\r\n        data: getData(),\r\n        success: function (response) {\r\n           $(\"#panel-report\").html(response);\r\n        },\r\n        error: function (errResponse) {\r\n            debugger;\r\n        }\r\n    });\r\n    return false;\r\n});\r\n```\r\n\r\nI can see in my browser that the request is post and mime type is `x-www-form-urlencode`\r\n\r\n```JSON\r\n\"postData\": {\r\n   \"mimeType\": \"application/x-www-form-urlencoded\",\r\n   \"text\": \"Inputs[0][0]=10&Inputs[0][0]=11\",\r\n   \"params\": [\r\n       {\r\n       \"name\": \"Inputs[0][0]\",\r\n       \"value\": \"10\"\r\n       },\r\n       {\r\n       \"name\": \"Inputs[0][1]\",\r\n       \"value\": \"11\"\r\n       }\r\n   ]\r\n}\r\n```\r\n\r\nand in the controller i am getting the content\r\n\r\n```C#\r\npublic class ScoreCalculatorController{\r\n\r\n     public IActionResult Calculate(ScoresViewModel scores){\r\n             return OK(scores)\r\n     }\r\n}\r\n```\r\n\r\ni tried `[FromBody]` and `[FromForm]` but none is working, also if i just try to model bind a string it works fine so i believe i don't need to use `[FromBody]` and [`FromForm]` in here. \r\n\r\nthis code was working fine in mvc 5. look like asp.net core model binder is not supporting complex types correctly. any hint on this? \r\n\r\n**Expected behavvior**\r\nby passing `Inputs[0][0]` the model binder, bind the value to a multi diemnsional array (int[][], list<int[]>, list<list<int>>) or dictionary (dictionary<int, list<int>>, dictionary<int, int[]> , ...) based on the type. \r\n\r\n**why it should works in this way?**\r\n1. `@Html.TextBoxFor(m => m.Inputs[0][0])` is generating `<input data-val=\"true\" data-val-required=\"The Int32 field is required.\" id=\"Inputs_0__0_\" name=\"Inputs[0][0]\" type=\"text\" value=\"1\">` so passing the `Inputs[0][0]` should bind back to the same model\r\n2. single dimensional array works the same way. simply passing something like `Inputs[0]` will do the binding to `public List<int> Inputs{get; set;}`\r\n3. aps.net mvc works in this way\r\n\r\n**actual behavior** \r\nignoring the data\r\n\r\n"},{"Id":"7054077906","Type":"IssuesEvent","CreatedAt":"2018-01-03T22:33:33","Actor":"jbagga","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2663","RelatedDescription":"Closed issue \"Make our endpoint selectors respond to updates\" (#2663) at aspnet/Home","RelatedBody":"_From @rynowak on Wednesday, September 27, 2017 12:05:29 PM_\r\n\r\n\r\n\r\n_Copied from original issue: aspnet/Routing#454_"},{"Id":"7054017637","Type":"IssuesEvent","CreatedAt":"2018-01-03T22:16:03","Actor":"mkArtakMSFT","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2422","RelatedDescription":"Closed issue \"Apply JsonPatch when set of properties are different in DTO than Entity\" (#2422) at aspnet/Home","RelatedBody":"_From @sachinpachori on Wednesday, December 27, 2017 3:19:02 PM_\r\n\r\nThis is a common scenario where your DTO/viewmodel could be different from the Entities. In this case how to use this JSONPatch with ApplyTo function. If possible, I think you should work on providing this feature.\r\n\r\n_Copied from original issue: aspnet/JsonPatch#127_"},{"Id":"7054010684","Type":"IssuesEvent","CreatedAt":"2018-01-03T22:14:07","Actor":"mkArtakMSFT","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2432","RelatedDescription":"Closed issue \"Adding/Removing from a collection by an index value\" (#2432) at aspnet/Home","RelatedBody":"_From @gilmishal on Monday, June 5, 2017 12:34:10 PM_\r\n\r\nI need to be able to add/remove object from a subcollection of my item - imagine the following json patch string \r\n`{\"op\":\"remove\", \"path\":\"/a/b/123\"}]`\r\nor \r\n`{\"op\":\"add\",\"path\":\"/a/b\", \"value\":\"{\"a\":\"b\"}\"`\r\n\r\nwhere 123 is my database Index, and not a list position (which my client has no actual way of knowing about)\r\n\r\nAs of now, I see no way of actually implementing this (maybe I missed something, but I went through the code of both ListAdapter, and DictionaryAdapter).\r\n\r\nIf I use a Dictionary as the model, the remove operation will work, but the add will not (I could have the client send fake ids, but that would be really odd)\r\n\r\nIf I use a List as the model, well I won't be able to remove by a database Index (I could order the values in the exact same way the client does, but again - this is odd).\r\n\r\nImplementing `IObjectAdapter` myself isn't a good option either - besides the fact that it isn't generic, and won't allow me to use multiple `IObjectAdapter`s via DI - it takes a lot of code to actually implement properly, and will basically be copying your code with minor changes.\r\n\r\nI don't expect it to be able to actually search a list by an Id property, but I do think this entire package should be more configurable to actually allow me to define how to search a list with a given index, without copy pasting your code and applying basic changes. \r\n\r\n_Copied from original issue: aspnet/JsonPatch#85_"},{"Id":"7053013459","Type":"IssuesEvent","CreatedAt":"2018-01-03T17:56:30","Actor":"msvaillant","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2739","RelatedDescription":"Opened issue \"Question: specifing non dafault encoding\" (#2739) at aspnet/Home","RelatedBody":"Good day, I am writing with a question to you, because have found no exact tutorials for my problem.\r\n\r\nOn our project we need to deal with 8-bit encoding for data transfer and we need exactly ISO-8859-6 encoding for JSON and HTML output of aspnet core webservice. And server would be on Linux. Netcoreapp 2.0.  So the question is :\r\n1. How to produce Json in such encoding?\r\n2. How to deserialize requests in such encoding in model binding?\r\n3. How to tell Razor to produce HTML-Angular webpage in such encoding?\r\n4. Maybe there is any way to tell ASP.Net Core to use some encoding in the whole application? (like web.config had previously)\r\n\r\nI tried to override the JSON Formatter behavior on the way like:\r\n\r\n``` csharp\r\n    class ForcedISO88596OutputJsonFormatter : JsonOutputFormatter\r\n    {\r\n        public ForcedISO88596OutputJsonFormatter(\r\n            JsonSerializerSettings serializerSettings,\r\n            ArrayPool<char> charPool)\r\n            : base(serializerSettings, charPool)\r\n        {\r\n        }\r\n\r\n        public override Encoding SelectCharacterEncoding(OutputFormatterWriteContext context)\r\n        {\r\n            EncodingProvider provider = CodePagesEncodingProvider.Instance;\r\n            Encoding encoding = provider.GetEncoding(\"iso_8859-6\");\r\n            return encoding;\r\n        }\r\n    }\r\n    public class Startup\r\n    {\r\n        public Startup(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n        }\r\n\r\n        public IConfiguration Configuration { get; }\r\n\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddMvc();\r\n            services.AddMvcCore(options => { //This string I added\r\n                options.OutputFormatters.Add(new ForcedISO88596OutputJsonFormatter(new JsonSerializerSettings(), ArrayPool<char>.Shared));\r\n            }).AddJsonFormatters();\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n                app.UseWebpackDevMiddleware(new WebpackDevMiddlewareOptions\r\n                {\r\n                    HotModuleReplacement = true\r\n                });\r\n            }\r\n            else\r\n            {\r\n                app.UseExceptionHandler(\"/Home/Error\");\r\n            }\r\n\r\n            app.UseStaticFiles();\r\n\r\n            app.UseMvc(routes =>\r\n            {\r\n                routes.MapRoute(\r\n                    name: \"default\",\r\n                    template: \"{controller=Home}/{action=Index}/{id?}\");\r\n\r\n                routes.MapSpaFallbackRoute(\r\n                    name: \"spa-fallback\",\r\n                    defaults: new { controller = \"Home\", action = \"Index\" });\r\n            });\r\n        }\r\n    }\r\n```\r\n\r\n\r\n``` csharp\r\n[Route(\"api/[controller]\")]\r\n    public class DataController : Controller\r\n    {\r\n        [HttpGet()]\r\n        public IActionResult ArabicResponse()\r\n        {\r\n            Response.Headers[\"Content-Type\"] += \"application/json;charset=ISO-8859-6\";\r\n            return Ok(new string[] { \"مرحبا\", \"hello\" });\r\n        }\r\n\r\n        [HttpPost()]\r\n        public IActionResult Data(Class data)\r\n        {\r\n            Response.Headers[\"Content-Type\"] += \"application/json;charset=ISO-8859-6\";\r\n            return Ok(data);\r\n        }\r\n\r\n        public class Class\r\n        {\r\n            public string ComponentName { get; set; }\r\n            public int ComponentId { get; set; }\r\n        }\r\n    }\r\n}\r\n\r\n```"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7054139403","Type":"PullRequestEvent","CreatedAt":"2018-01-03T22:52:40","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1269","RelatedDescription":"Opened pull request \"MultipleClients -> Clients\" (#1269) at aspnet/SignalR","RelatedBody":"Renaming MultipleClients to Clients is now possible after the HubContext refactor 6baee8b7a98f32bc7fc7c448a068eda74c237296"},{"Id":"7054027165","Type":"PullRequestEvent","CreatedAt":"2018-01-03T22:18:49","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1261","RelatedDescription":"Merged pull request \"Fix ChatSample to send array correctly\" (#1261) at aspnet/SignalR","RelatedBody":"#1236"},{"Id":"7054025872","Type":"IssuesEvent","CreatedAt":"2018-01-03T22:18:26","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1268","RelatedDescription":"Opened issue \"Consider better ways to send array in InvokeAsync\" (#1268) at aspnet/SignalR","RelatedBody":"A very easy mistake to make is passing an array to `InvokeAsync` which will treat the array as a list of arguments instead of a single argument that is an array.\r\n\r\n```\r\npublic async Task Send(byte[] data)\r\n{\r\n    await Clients.All.InvokeAsync(\"Send\", data); // wrong\r\n    await Clients.All.InvokeAsync(\"Send\", new [] { data }); // correct\r\n}\r\n```\r\n\r\nWe should consider ways of either making this more obvious or changing APIs to prevent this issue."},{"Id":"7053891412","Type":"IssuesEvent","CreatedAt":"2018-01-03T21:41:38","Actor":"cooliodoc","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1265","RelatedDescription":"Closed issue \"HubConnection disconnects if it sends bad message\" (#1265) at aspnet/SignalR","RelatedBody":"When using the C# HubConnection, if I send a message such as:\r\n\r\n`await Connection.SendAsync(\"TestMethod\");`\r\n\r\nIf I don't have TestMethod implemented on the Hub then it disconnects. Also, if the parameters don't match then it disconnects.\r\n\r\nI wouldn't expect it to disconnect, just to log an error.\r\n  \r\nUsing SignalR 1.0.0-alpha2-final"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7054439247","Type":"IssuesEvent","CreatedAt":"2018-01-04T00:44:46","Actor":"Eilon","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7188","RelatedDescription":"Opened issue \"Question: specifing non dafault encoding\" (#7188) at aspnet/Mvc","RelatedBody":"_From @msvaillant on January 3, 2018 17:56_\n\nGood day, I am writing with a question to you, because have found no exact tutorials for my problem.\r\n\r\nOn our project we need to deal with 8-bit encoding for data transfer and we need exactly ISO-8859-6 encoding for JSON and HTML output of aspnet core webservice. And server would be on Linux. Netcoreapp 2.0.  So the question is :\r\n1. How to produce Json in such encoding?\r\n2. How to deserialize requests in such encoding in model binding?\r\n3. How to tell Razor to produce HTML-Angular webpage in such encoding?\r\n4. Maybe there is any way to tell ASP.Net Core to use some encoding in the whole application? (like web.config had previously)\r\n\r\nI tried to override the JSON Formatter behavior on the way like:\r\n\r\n``` csharp\r\n    class ForcedISO88596OutputJsonFormatter : JsonOutputFormatter\r\n    {\r\n        public ForcedISO88596OutputJsonFormatter(\r\n            JsonSerializerSettings serializerSettings,\r\n            ArrayPool<char> charPool)\r\n            : base(serializerSettings, charPool)\r\n        {\r\n        }\r\n\r\n        public override Encoding SelectCharacterEncoding(OutputFormatterWriteContext context)\r\n        {\r\n            EncodingProvider provider = CodePagesEncodingProvider.Instance;\r\n            Encoding encoding = provider.GetEncoding(\"iso_8859-6\");\r\n            return encoding;\r\n        }\r\n    }\r\n    public class Startup\r\n    {\r\n        public Startup(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n        }\r\n\r\n        public IConfiguration Configuration { get; }\r\n\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddMvc();\r\n            services.AddMvcCore(options => { //This string I added\r\n                options.OutputFormatters.Add(new ForcedISO88596OutputJsonFormatter(new JsonSerializerSettings(), ArrayPool<char>.Shared));\r\n            }).AddJsonFormatters();\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n                app.UseWebpackDevMiddleware(new WebpackDevMiddlewareOptions\r\n                {\r\n                    HotModuleReplacement = true\r\n                });\r\n            }\r\n            else\r\n            {\r\n                app.UseExceptionHandler(\"/Home/Error\");\r\n            }\r\n\r\n            app.UseStaticFiles();\r\n\r\n            app.UseMvc(routes =>\r\n            {\r\n                routes.MapRoute(\r\n                    name: \"default\",\r\n                    template: \"{controller=Home}/{action=Index}/{id?}\");\r\n\r\n                routes.MapSpaFallbackRoute(\r\n                    name: \"spa-fallback\",\r\n                    defaults: new { controller = \"Home\", action = \"Index\" });\r\n            });\r\n        }\r\n    }\r\n```\r\n\r\n\r\n``` csharp\r\n[Route(\"api/[controller]\")]\r\n    public class DataController : Controller\r\n    {\r\n        [HttpGet()]\r\n        public IActionResult ArabicResponse()\r\n        {\r\n            Response.Headers[\"Content-Type\"] += \"application/json;charset=ISO-8859-6\";\r\n            return Ok(new string[] { \"مرحبا\", \"hello\" });\r\n        }\r\n\r\n        [HttpPost()]\r\n        public IActionResult Data(Class data)\r\n        {\r\n            Response.Headers[\"Content-Type\"] += \"application/json;charset=ISO-8859-6\";\r\n            return Ok(data);\r\n        }\r\n\r\n        public class Class\r\n        {\r\n            public string ComponentName { get; set; }\r\n            public int ComponentId { get; set; }\r\n        }\r\n    }\r\n}\r\n\r\n```\n\n_Copied from original issue: aspnet/Home#2739_"},{"Id":"7054435781","Type":"IssuesEvent","CreatedAt":"2018-01-04T00:43:28","Actor":"Eilon","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7187","RelatedDescription":"Opened issue \"multi dimensional array or dictionary binding doesn't work\" (#7187) at aspnet/Mvc","RelatedBody":"_From @mhamri on January 2, 2018 6:13_\n\nI was able to use following code in asp.net mvc but it's not working in asp.net core and i can't see any other solution rather than writing a custom model binder. i tried whatever solution was out there on the internet but look like it's not working properly.\r\nI am using asp.net core 2.0\r\n\r\n`ScoresViewModel.cs`\r\n\r\n```C#\r\npublic class ScoresViewModel\r\n{\r\n    public List<List<int>> Inputs { get; set; }\r\n}\r\n````\r\n\r\n`index.cshtml`\r\n\r\n```HTML\r\n<from id=\"question\" >\r\n   <input type=\"text\" name=\"Inputs[0][0]\" value=\"10\" />\r\n   <input type=\"text\" name=\"Inputs[0][1]\" value=\"11\" />\r\n   <button type=\"submit\" id=\"submit\" value=\"submit\"/>\r\n</from>\r\n```\r\n\r\n```JS\r\n$(\"#submit\").submit(function () {\r\n    var getData = function () {\r\n        return $(\"#question\").serialize();\r\n    };\r\n    $.ajax({\r\n        url: \"/Api/ScoreCalculator/Calculate\",\r\n        method: \"POST\",\r\n        data: getData(),\r\n        success: function (response) {\r\n           $(\"#panel-report\").html(response);\r\n        },\r\n        error: function (errResponse) {\r\n            debugger;\r\n        }\r\n    });\r\n    return false;\r\n});\r\n```\r\n\r\nI can see in my browser that the request is post and mime type is `x-www-form-urlencode`\r\n\r\n```JSON\r\n\"postData\": {\r\n   \"mimeType\": \"application/x-www-form-urlencoded\",\r\n   \"text\": \"Inputs[0][0]=10&Inputs[0][0]=11\",\r\n   \"params\": [\r\n       {\r\n       \"name\": \"Inputs[0][0]\",\r\n       \"value\": \"10\"\r\n       },\r\n       {\r\n       \"name\": \"Inputs[0][1]\",\r\n       \"value\": \"11\"\r\n       }\r\n   ]\r\n}\r\n```\r\n\r\nand in the controller i am getting the content\r\n\r\n```C#\r\npublic class ScoreCalculatorController{\r\n\r\n     public IActionResult Calculate(ScoresViewModel scores){\r\n             return OK(scores)\r\n     }\r\n}\r\n```\r\n\r\ni tried `[FromBody]` and `[FromForm]` but none is working, also if i just try to model bind a string it works fine so i believe i don't need to use `[FromBody]` and [`FromForm]` in here. \r\n\r\nthis code was working fine in mvc 5. look like asp.net core model binder is not supporting complex types correctly. any hint on this? \r\n\r\n**Expected behavvior**\r\nby passing `Inputs[0][0]` the model binder, bind the value to a multi diemnsional array (int[][], list<int[]>, list<list<int>>) or dictionary (dictionary<int, list<int>>, dictionary<int, int[]> , ...) based on the type. \r\n\r\n**why it should works in this way?**\r\n1. `@Html.TextBoxFor(m => m.Inputs[0][0])` is generating `<input data-val=\"true\" data-val-required=\"The Int32 field is required.\" id=\"Inputs_0__0_\" name=\"Inputs[0][0]\" type=\"text\" value=\"1\">` so passing the `Inputs[0][0]` should bind back to the same model\r\n2. single dimensional array works the same way. simply passing something like `Inputs[0]` will do the binding to `public List<int> Inputs{get; set;}`\r\n3. aps.net mvc works in this way\r\n\r\n**actual behavior** \r\nignoring the data\r\n\r\n\n\n_Copied from original issue: aspnet/Home#2735_"},{"Id":"7054115656","Type":"IssuesEvent","CreatedAt":"2018-01-03T22:45:16","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6952","RelatedDescription":"Closed issue \"HttpRequestMessageExtensions.CreateResponse<T> should not accept T==HttpStatusCode\" (#6952) at aspnet/Mvc","RelatedBody":"In an audit of our code base, we found that there were many calls that looked like:\r\n`return Request.CreateResponse(HttpStatusCode.NotFound);`\r\nthat, due to a refactor, were actually resolving to this:\r\n`HttpResponseMessage CreateResponse<T>(this HttpRequestMessage request, T value)`\r\nThis would make the service return a 200 with a body that says \"NotFound\".  This is clearly not the intent of the programmer.\r\n\r\nPossible solutions would be:\r\n1) Add a more specific extension that specifically targets HttpStatusCode (e.g.System.Net.Http.Formatting has one)\r\n2) Throw if T is HttpStatusCode\r\n\r\n[See also](https://github.com/aspnet/AspNetWebStack/issues/67)"},{"Id":"7053707096","Type":"PullRequestEvent","CreatedAt":"2018-01-03T20:53:47","Actor":"pakrym","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7186","RelatedDescription":"Opened pull request \"Use common BDN runner and config\" (#7186) at aspnet/Mvc","RelatedBody":"Last item from\r\nhttps://github.com/aspnet/Coherence-Signed/issues/684"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7054262116","Type":"PullRequestEvent","CreatedAt":"2018-01-03T23:34:08","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1552","RelatedDescription":"Opened pull request \"Shorten folder names\" (#1552) at aspnet/Identity","RelatedBody":"Fixes https://github.com/aspnet/Identity/issues/1387\r\n\r\nGenerally drop Microsoft.AspNetCore.Identity from all folder names, resulting structure is basically:\r\n\r\n```\r\nCore\r\nStores\r\nIdentity\r\nSpecificationTests\r\nEntityFrameworkCore\r\nService.*\r\nAspNetCoreCompat\r\n```\r\n\r\n@natemcmaster @javiercn @ajcvickers "},{"Id":"7049699194","Type":"PullRequestEvent","CreatedAt":"2018-01-02T23:49:46","Actor":"rynowak","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1551","RelatedDescription":"Merged pull request \"React to breaking change in MVC\" (#1551) at aspnet/Identity","RelatedBody":"/cc @javiercn"},{"Id":"7049685857","Type":"PullRequestEvent","CreatedAt":"2018-01-02T23:44:13","Actor":"rynowak","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1551","RelatedDescription":"Opened pull request \"React to breaking change in MVC\" (#1551) at aspnet/Identity","RelatedBody":"/cc @javiercn"},{"Id":"7048632997","Type":"IssuesEvent","CreatedAt":"2018-01-02T18:32:20","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1550","RelatedDescription":"Opened issue \"Productionize IEmailSender interface\" (#1550) at aspnet/Identity","RelatedBody":"We need to refactor the interface that we had on the template (now on the UI package) into a shape that we like, and find the right place for it. (probably the M.A.I package).\r\n\r\nMy proposal\r\n```csharp\r\npublic interface IEmailSender \r\n{\r\n    Task SendAsync(Email email);\r\n}\r\n\r\npublic class Email\r\n{\r\n    public IList<string> To { get; }\r\n    public string Subject { get; set; }\r\n    public string Body { get; set; }\r\n}\r\n```\r\n\r\nThe idea of using a class is to allow for adding new members if necessary in the future without causing breaking changes.\r\n\r\n/cc: @HaoK "}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7049776399","Type":"IssuesEvent","CreatedAt":"2018-01-03T00:23:26","Actor":"zygimantas","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2242","RelatedDescription":"Closed issue \"UseHttps with dotnet run --project fails\" (#2242) at aspnet/KestrelHttpServer","RelatedBody":"**Actual results:**\r\n\r\n```\r\nApplication startup exception:\r\nInternal.Cryptography.CryptoThrowHelper+WindowsCryptographicException:\r\nThe system cannot find the path specified\r\n```\r\n\r\n**Reproduction steps**\r\n\r\nPass certificate file path to UseHttps method as string (tested with ../ prefix only):\r\n```\r\n../Certificate.pfx \r\n```\r\n\r\nLaunch project like this:\r\n\r\n```\r\ncd Content\r\ndotnet run --project ../Website.csproj\r\n```\r\n\r\nProject file structure:\r\n```\r\n- Project\r\n      Certificate.pfx\r\n      Website\r\n          Content\r\n          Website.csproj\r\n```\r\n\r\n**Expected results**\r\n\r\nThe same as without --project, application should start and certificate should be loaded.\r\n\r\n**Dotnet Info**\r\n\r\n.NET Command Line Tools (2.1.2)\r\n\r\nProduct Information:\r\n Version:            2.1.2\r\n Commit SHA-1 hash:  5695315371\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.2\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.3\r\n  Build    : a9190d4a75f4a982ae4b4fa8d1a24526566c69df"},{"Id":"7049556443","Type":"IssuesEvent","CreatedAt":"2018-01-02T22:55:33","Actor":"zygimantas","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2242","RelatedDescription":"Opened issue \"UseHttps with dotnet run --project fails\" (#2242) at aspnet/KestrelHttpServer","RelatedBody":"**Actual results:**\r\n\r\n```\r\nApplication startup exception:\r\nInternal.Cryptography.CryptoThrowHelper+WindowsCryptographicException:\r\nThe system cannot find the path specified\r\n```\r\n\r\n**Reproduction steps**\r\n\r\nPass certificate file path to UseHttps method as string (tested with ../ prefix only):\r\n```\r\n../Certificate.pfx \r\n```\r\n\r\nLaunch project like this:\r\n\r\n```\r\ncd Content\r\ndotnet run --project ../Website.csproj\r\n```\r\n\r\nProject file structure:\r\n```\r\n- Project\r\n      Certificate.pfx\r\n      Website\r\n          Content\r\n          Website.csproj\r\n```\r\n\r\n**Expected results**\r\n\r\nThe same as without --project, application should start and certificate should be loaded.\r\n"},{"Id":"7049480525","Type":"IssuesEvent","CreatedAt":"2018-01-02T22:30:52","Actor":"rynowak","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2241","RelatedDescription":"Opened issue \"ConnectionResetException running on netcoreapp2.1\" (#2241) at aspnet/KestrelHttpServer","RelatedBody":"We hit this in issue in JitBench running on the ASP.NET Core 2.0.0 libraries against latest bits of CoreFx. See https://github.com/aspnet/JitBench/issues/80\r\n\r\nThe easiest way to repro is:\r\nClone aspnet/JitBench\r\nrun appveyor.ps1 (that will fail)\r\ndotnet run or launch VS from the same console.\r\n\r\nJitBench will throw trying to do an HTTP request as part of it's measurements, but the more interesting part is that that site is unreachable using a browser.\r\n\r\n```\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.Internal.ConnectionResetException\r\n  HResult=0x80131620\r\n  Message=Error -4077 ECONNRESET connection reset by peer\r\n  Source=Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions\r\n  StackTrace:\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed()\r\n\r\nInner Exception 1:\r\nUvException: Error -4077 ECONNRESET connection reset by peer\r\n\r\n>\tMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.dll!Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed()\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.dll!Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.GetResult(ref Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadResult result)\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.dll!Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IReadableBufferAwaiter.GetResult()\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>.ProcessRequestsAsync()\tUnknown\r\n \tSystem.Private.CoreLib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state)\tUnknown\r\n \tSystem.Private.CoreLib.dll!System.Runtime.CompilerServices.AsyncTaskMethodBuilder<System.Threading.Tasks.VoidTaskResult>.AsyncStateMachineBox<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>.<ProcessRequestsAsync>d__2>.MoveNext()\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.dll!Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe..cctor.AnonymousMethod__67_3(object o)\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.LoggingThreadPool.Schedule.AnonymousMethod__0()\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.LoggingThreadPool.RunAction.AnonymousMethod__3_0(object o)\tUnknown\r\n \tSystem.Private.CoreLib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state)\tUnknown\r\n \tSystem.Private.CoreLib.dll!System.Threading.ThreadPoolWorkQueue.Dispatch()\tUnknown\r\n\r\n```"},{"Id":"7048365293","Type":"IssuesEvent","CreatedAt":"2018-01-02T17:21:41","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2232","RelatedDescription":"Closed issue \"Build.cmd fails due to new BenchmarkDotNet RELEASE error\" (#2232) at aspnet/KestrelHttpServer","RelatedBody":"build.cmd now fails by default on dev machines because BenchmarkDotNet started issuing a fatal error if the project is not compiled as RELEASE.\r\n\r\nworkaround: `build /p:configuration=Release`\r\n\r\nProposals:\r\n- Disable BenchmarkDotNet for DEBUG?\r\n- Suppress the error?\r\n"},{"Id":"7048346167","Type":"IssuesEvent","CreatedAt":"2018-01-02T17:16:47","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2240","RelatedDescription":"Closed issue \"Set-Cookie shouldn't return secure cookies on http request\" (#2240) at aspnet/KestrelHttpServer","RelatedBody":"When using ASP.Net Cookie auth and the `CookieSecure` property is set to `CookieSecurePolicy.Always` and a request is made via http to login the `Set-Cookie` header is returned with a `secure` suffix.  I don't think it should do this if the request is made via `http`, it should only return that header if made via `https`\r\n\r\nThere is nothing stopping a client taking and using the cookie value to issue a request which leads to the question for maybe https://github.com/aspnet/Security as to whether that should be allowed.\r\n\r\nAt the moment the onus is on the developer to not allow requests that are made over http when you have `CookieSecurePolicy.Always` set. I would expect the server and/or fwk to step in here.\r\n\r\ncc @PinpointTownes"},{"Id":"7048339725","Type":"IssuesEvent","CreatedAt":"2018-01-02T17:15:10","Actor":"jchannon","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2240","RelatedDescription":"Opened issue \"Set-Cookie shouldn't return secure cookies on http request\" (#2240) at aspnet/KestrelHttpServer","RelatedBody":"When using ASP.Net Cookie auth and the `CookieSecure` property is set to `CookieSecurePolicy.Always` and a request is made via http to login the `Set-Cookie` header is returned with a `secure` suffix.  I don't think it should do this if the request is made via `http`, it should only return that header if made via `https`\r\n\r\nThere is nothing stopping a client taking and using the cookie value to issue a request which leads to the question for maybe https://github.com/aspnet/Security as to whether that should be allowed.\r\n\r\nAt the moment the onus is on the developer to not allow requests that are made over http when you have `CookieSecurePolicy.Always` set. I would expect the server and/or fwk to step in here.\r\n\r\ncc @pinpoint"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7054156819","Type":"IssuesEvent","CreatedAt":"2018-01-03T22:58:13","Actor":"mkArtakMSFT","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1714","RelatedDescription":"Closed issue \"Add wildcard to tag on HtmlTargetElement\" (#1714) at aspnet/Razor","RelatedBody":"In a project, I would need to add functional logic on an unknown range of taghelpers. Why unknown ? just because I have a TagHelper on a homemade framework which contains mandatory logic. This framework is referenced by several projects.\r\nOn these several projects, We can write new TagHelpers but those new TagHelpers must call the TagHelper from the framework.\r\n\r\nTo reach our goal, the easiest way would be to apply our \"framework tag helper\" to every tags which begins by something\r\n\r\nFor instance, I'd like to apply my framework taghelper to every tag helpers beginning with \"mytag-*\". So i think allowing wildcard to \"tag\" parameter in HtmlTargetElement would be a great idea. It's already posible with the attributes"},{"Id":"7053630776","Type":"PullRequestEvent","CreatedAt":"2018-01-03T20:33:11","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1902","RelatedDescription":"Opened pull request \"Add support for running tests using desktop msbuild\" (#1902) at aspnet/Razor","RelatedBody":""},{"Id":"7053248231","Type":"PullRequestEvent","CreatedAt":"2018-01-03T18:55:57","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1901","RelatedDescription":"Merged pull request \"Fix tag helper discovery in our tool\" (#1901) at aspnet/Razor","RelatedBody":""},{"Id":"7053032602","Type":"IssuesEvent","CreatedAt":"2018-01-03T18:01:07","Actor":"mkArtakMSFT","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1808","RelatedDescription":"Closed issue \"Integration testing and Razor\" (#1808) at aspnet/Razor","RelatedBody":"I have the following error:\r\n\r\nSystem.InvalidOperationException: Cannot find reference assembly 'Microsoft.AspNetCore.Mvc.Razor.ViewCompilation-x86.exe' file for package Microsoft.AspNetCore.Mvc.Razor.ViewCompilation-x86.\r\n\r\nI have already followed this steps:\r\n\r\nhttps://github.com/aspnet/samples/tree/master/samples/aspnetcore/mvc/testing/TestingMVC\r\n\r\nWhat problem can it be?\r\n\r\nI should mention (if it's important) that for \"UseStartup<>();\" I'm using a class that inherits from the projects \"Startup\" class because I needed to override some services. This class is in my test project."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6760798601","Type":"IssuesEvent","CreatedAt":"2017-10-24T22:00:58","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/67","RelatedDescription":"Closed issue \"External Logins does not set the Email\" (#67) at aspnet/Templates","RelatedBody":"- Enable Facebook Login\n- Login using Facebook for the first time\n- Email field is blank. It should be set from what we got from Facebook\n"},{"Id":"6760789807","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:58:48","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/86","RelatedDescription":"Closed issue \"Identity: Consider less generic name for ManageController\" (#86) at aspnet/Templates","RelatedBody":"Manage is a very generic name and you would probably expect http://abcdefg/Manage to be about managing something from your applications business domain rather than user accounts.\n\nManageAccount would probably be a better name.\n"},{"Id":"6760785159","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:57:37","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/115","RelatedDescription":"Closed issue \"Need more templates\" (#115) at aspnet/Templates","RelatedBody":"MVC 6 project templates should include a test project template. And the main ASP.NET 5 Preview Templates / Web Application or ... / Empty templates should have a few more sub-options, enabling for example addition and removal of XML support, creation of a minimal MVC project, or adding in EF (without choosing Individual User Accounts authentication).\n\nHopefully this will allow the new project dialogue to enable the options shown below -- plus a few options specific to MVC 6.\n![disabled project features](https://cloud.githubusercontent.com/assets/6431421/8257821/2a76a606-1665-11e5-8e75-cdb21473f6a1.png)\n"},{"Id":"6760779940","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:56:18","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/104","RelatedDescription":"Closed issue \"OrgAuth: Account Controller should return void\" (#104) at aspnet/Templates","RelatedBody":"Since https://github.com/aspnet/Mvc/issues/2409 is fixed. We should change the AccountController for SSO/ MultiOrg to return void\n"},{"Id":"6760777806","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:46","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/120","RelatedDescription":"Closed issue \"Template feedback\" (#120) at aspnet/Templates","RelatedBody":"Porting from MVC repo https://github.com/aspnet/Mvc/issues/2637\n"},{"Id":"6760775251","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:10","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/137","RelatedDescription":"Closed issue \"Need a SPA template\" (#137) at aspnet/Templates","RelatedBody":""},{"Id":"6760770959","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:54:08","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/365","RelatedDescription":"Closed issue \"Poor user and dev experience in Identity email confirmation\" (#365) at aspnet/Templates","RelatedBody":"There are two issues using the default template for identity when using email confirmation.\n\nFollowing the guide here: http://docs.asp.net/en/latest/security/authentication/accconfirm.html\n\nPoor user experience: When you click \"Register\" it sends the email off, but just redirects the user to the Home controller. Redirecting to something else to indicate they have to confirm their account would be a better example. Perhaps the default template should have such a view OOTB.\n\nPoor dev experience: When logging in with an external account (lets say Facebook) if the account doesn't exist you get thrown into AccountController.ExternalLoginConfirmation, great. This screen requires an email, so you complete the registration then you're logged in but never shoots off the email confirmation link here. Perhaps a commented out section in this action to deal with this would improve the dev experience here.\n"},{"Id":"6760770378","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:59","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/382","RelatedDescription":"Closed issue \"MVC Template Should Apply ResponseCache Attribute to Error Action\" (#382) at aspnet/Templates","RelatedBody":"HomeController.Error() should be updated:\n\n```\n    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]\n    public IActionResult Error()\n    {\n        return View();\n    }\n```\n\nThere is no good scenario where you would want errors to be cached, either on the client or via a proxy, or to have error information stored in such caches (especially if it might contain sensitive information in stack traces, etc.).\n"},{"Id":"6760769801","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:51","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/406","RelatedDescription":"Closed issue \"Add a flow for changing email in the Manage page\" (#406) at aspnet/Templates","RelatedBody":"Porting from ASP.NET Identity repo https://github.com/aspnet/Identity/issues/727\n"},{"Id":"6760769204","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:42","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/423","RelatedDescription":"Closed issue \"Don't create Project_Readme.html for ASP.NET 5 Empty\" (#423) at aspnet/Templates","RelatedBody":"I created an empty project for both ASP.NET 4 and ASP.NET 5. The ASP.NET 5 project had a Project_Readme.html and the ASP.NET 4 one did not. I'm not aware if that was on purpose or not, but we should be consistent with the empty projects. I think we should not add the Project_Readme.html for all Empty projects.\n"},{"Id":"6760768174","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:28","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/444","RelatedDescription":"Closed issue \"Support On-Premises option for Work & School Accounts\" (#444) at aspnet/Templates","RelatedBody":"Support this for Web APIs and Web Apps.\n"},{"Id":"6760767634","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:19","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/451","RelatedDescription":"Closed issue \"ValidationSummary.All should be replaced with ModelOnly\" (#451) at aspnet/Templates","RelatedBody":"All the views in the Accounts folder use\n`<div asp-validation-summary=\"ValidationSummary.All\" class=\"text-danger\"></div>`\n\nThey should just use \n`<div asp-validation-summary=\"ValidationSummary.ModelOnly\" class=\"text-danger\"></div>`\n\nSo you get each error twice. \n\n![image](https://cloud.githubusercontent.com/assets/3605364/13896326/ae916ee2-ed2b-11e5-8bf5-f9ad5246e82c.png)\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6856182602","Type":"PullRequestEvent","CreatedAt":"2017-11-15T02:15:11","Actor":"Andrew-MSFT","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Merged pull request \"Re adding\" (#1064) at aspnet/Tooling","RelatedBody":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end..."},{"Id":"6856061013","Type":"PullRequestEvent","CreatedAt":"2017-11-15T01:32:45","Actor":"cristy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Opened pull request \"Re adding\" (#1064) at aspnet/Tooling","RelatedBody":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end..."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7048395292","Type":"IssuesEvent","CreatedAt":"2018-01-02T17:35:05","Actor":"Eilon","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/283","RelatedDescription":"Opened issue \"Using the \"Home\" repo for issue management of other repos\" (#283) at aspnet/Announcements","RelatedBody":"Hi all,\r\n\r\nWe are experimenting to try and use the [Home repo's issue tracker](https://github.com/aspnet/Home/issues) to manage issues for multiple repos. To start with, we have moved the bugs from several other repos to the Home repo, and we will retire the issue trackers of those other repos.\r\n\r\nWe are doing this to try to improve the experience of logging issues for ASP.NET Core.\r\n\r\n* Labels in the form of `repo:RepoName` are used to associate the bug with a product/feature area\r\n* For issue trackers that moved to the Home repo, please log new issues in the Home repo. If a bug is logged in a moved issue tracker, it will be closed.\r\n* Over time, we plan to consolidate more issue trackers into the Home repo\r\n\r\nFor discussions on this topic, please go to https://github.com/aspnet/Home/issues/2736.\r\n\r\nThanks,\r\nEilon\r\n"},{"Id":"6909206856","Type":"IssuesEvent","CreatedAt":"2017-11-27T20:34:10","Actor":"pranavkm","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/282","RelatedDescription":"Opened issue \"aspnetcore-ci-*, aspnetcore-volatile-* feeds being deprecated\" (#282) at aspnet/Announcements","RelatedBody":"As part of some of our infrastructural changes, we're discontinuing the use of the following feeds and may remove them entirely in the future:\r\n* https://dotnet.myget.org/f/aspnetcore-ci-dev \r\n* https://dotnet.myget.org/f/aspnetcore-ci-release\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-dev\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-release\r\n\r\nIf you're currently using one of these feeds in your projects to pick up our daily builds, we recommend migrating to https://dotnet.myget.org/f/aspnetcore-dev.\r\n\r\nPlease use this discussion topic - https://github.com/aspnet/Home/issues/2292 - for feedback and questions. "}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"948343098278477824","CreatedAt":"2018-01-02T23:59:48+00:00","UserScreenname":"aspnet","Text":"The ASPNET Community Standup is live at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":5,"RawContent":null},{"Id":"944564608404205568","CreatedAt":"2017-12-23T13:45:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz - @csharpfritz and MVP @IrisClasson in about an hour for LIVE CODING and pair programming on… https://t.co/RuFa6Hh6S7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":5,"RawContent":null},{"Id":"943234846289289217","CreatedAt":"2017-12-19T21:41:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz (@csharpfritz) in a little more than 2 hours for LIVE CODING. He's working on an @aspnet Core p… https://t.co/wEDxxFaCxu","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"942039735207448576","CreatedAt":"2017-12-16T14:32:29+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz in 30 minutes for some LIVE CODING and answering your questions about .NET and Visual Studio.  https://t.co/OakzDOKxUB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"941295101271212032","CreatedAt":"2017-12-14T13:13:35+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz at 10am ET for a LIVE CODING session.  He'll answer your questions about .NET, Visual Studio, a… https://t.co/aG5z9e5Rgr","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":5,"RawContent":null},{"Id":"941015999809249280","CreatedAt":"2017-12-13T18:44:32+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz in about 15 minutes on Mixer or Twitch for a two-hour LIVE .NET CODING session where he will answ… https://t.co/OC1nGXILjO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938192857902354432","CreatedAt":"2017-12-05T23:46:22+00:00","UserScreenname":"aspnet","Text":"We're live for the #ASPNET Community Standup now at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938163679614214144","CreatedAt":"2017-12-05T21:50:26+00:00","UserScreenname":"aspnet","Text":"Join us for the #aspnet Community Standup today at 3:45 PM Pacific time - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":6,"RawContent":null},{"Id":"931580871378964481","CreatedAt":"2017-11-17T17:52:42+00:00","UserScreenname":"aspnet","Text":"Check out our new ConfigurationBuilders that make it easier than ever to use Azure Key Vault, Environment Variables… https://t.co/itxdVWOnG5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":36,"FavoriteCount":7,"RawContent":null},{"Id":"917884946324250624","CreatedAt":"2017-10-10T22:49:59+00:00","UserScreenname":"aspnet","Text":"The #aspnet Community Standup starts now - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":8,"RawContent":null},{"Id":"917877107904036865","CreatedAt":"2017-10-10T22:18:50+00:00","UserScreenname":"aspnet","Text":"Join us in a half hour (3:45 PM Pacific) for this week's #aspnet Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"915262407743647744","CreatedAt":"2017-10-03T17:08:57+00:00","UserScreenname":"aspnet","Text":"We're live at https://t.co/4Ioo9jNSN2 for the exciting #SignalR deep dive. Join us now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":22,"RawContent":null}]}},"RunOn":"2018-01-04T05:30:10.5044786Z","RunDurationInMilliseconds":9001}