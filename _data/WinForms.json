{"Data":{"GitHub":{"Issues":[{"Id":"479334169","IsPullRequest":true,"CreatedAt":"2019-08-11T05:22:52","Actor":"JeremyKuhne","Number":"1604","RawContent":null,"Title":"Convert the rest of interop for Cursor","State":"open","Body":"## Proposed changes\r\n\r\n- Make all of Cursor Interop clean.\r\n- Update other classes with related imports to use static Interop (which we're doing in the designer)\r\n- Clean style in DeviceContext and WindowsGraphics\r\n- Introduce internal IHandle to make GC.KeepAlive wraps easier\r\n\r\n## Customer Impact\r\n\r\n- Better perf for IPicture related code paths\r\n- More robust for said code paths\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n## Test methodology\r\n\r\n- Ensured areas had test coverage and ran tests\r\n\r\n\r\nNote that I wanted to get this up to demonstrate some patterns, notably:\r\n\r\n1. Using `IHandle` to start providing keepalive overloads\r\n2. Using static for `Interop` (as we're doing in the designer repo now)\r\n3. Union handling (see `PICTDESC`)\r\n4. Generic pattern for `GetObject`\r\n5. Ref disposable pattern on native structs (see `ICONINFO`)\r\n\r\nWhether or not we take it for 3.0 I wanted these examples visible.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1604)","Url":"https://github.com/dotnet/winforms/pull/1604","RelatedDescription":"Open PR \"Convert the rest of interop for Cursor\" (#1604)"},{"Id":"479306219","IsPullRequest":true,"CreatedAt":"2019-08-10T21:22:36","Actor":"JeremyKuhne","Number":"1603","RawContent":null,"Title":"Fix screen related tests","State":"closed","Body":"Recently added tests are not multimonitor friendly. Screens frequently have negative coordinates. The common case is with the primary screen to the right of the secondary screen. The primary screen origin is 0,0. Anything to the left or above will have negative coordinates (including the virtual screen).\r\n\r\n## Customer Impact\r\n\r\nNone- this is a test break.\r\n\r\n## Regression? \r\n\r\nNo\r\n\r\n## Risk\r\n\r\nNone, test only change.\r\n\r\n## Test methodology\r\n\r\n- Ran tests on multimonitor system\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1603)","Url":"https://github.com/dotnet/winforms/pull/1603","RelatedDescription":"Closed or merged PR \"Fix screen related tests\" (#1603)"},{"Id":"479291349","IsPullRequest":false,"CreatedAt":"2019-08-10T17:52:10","Actor":"kirsan31","Number":"1602","RawContent":null,"Title":"AccessViolationException with MenuStrip and VisualStyleState.NoneEnabled","State":"open","Body":"* .NET Core Version: .NET Core Version: 3.0.0-preview7-27912-14\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\nWhen you disable visual stiles:\r\n```c#\r\n            Application.VisualStyleState = System.Windows.Forms.VisualStyles.VisualStyleState.NoneEnabled;\r\n//          Application.EnableVisualStyles();\r\n```\r\nThe winForms mdi app with MenuStrip ans submenus are crushed with AccessViolationException, after you open sub menu and live it. Windows 7 pro x64.\r\n\r\n**Actual behavior:**\r\n\r\n<details><summary><b>Exception, Event logs, Gif of the error</b></summary>\r\n\r\n![nc](https://user-images.githubusercontent.com/17767561/62825179-43582880-bbb0-11e9-9f4a-52489d518be8.gif)\r\n\r\n`AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.`\r\n\r\n```\r\nApplication: WinFormsCoreTest.exe\r\nCoreCLR Version: 4.700.19.32702\r\n.NET Core Version: 3.0.0-preview7-27912-14\r\nDescription: The process was terminated due to an internal error in the .NET Runtime at IP 000007FEC76FA8D4 (000007FEC7540000) with exit code c0000005.\r\n```\r\n\r\n```\r\nFaulting application name: WinFormsCoreTest.exe, version: 1.0.0.0, time stamp: 0x5d29536d\r\nFaulting module name: coreclr.dll, version: 4.700.19.32702, time stamp: 0x5d155e43\r\nException code: 0xc0000005\r\nFault offset: 0x00000000001ba8d4\r\nFaulting process id: 0x248c\r\nFaulting application start time: 0x01d54f9f444a10b0\r\nFaulting application path: D:\\save\\projects\\WinFormsCoreTest\\bin\\Debug\\netcoreapp3.0\\WinFormsCoreTest.exe\r\nFaulting module path: C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\3.0.0-preview7-27912-14\\coreclr.dll\r\nReport Id: b32877c1-bb92-11e9-8c38-40b0760b80f2\r\n```\r\n</details>\r\n\r\n**Expected behavior:** No AccessViolationException.\r\n\r\n**Minimal repro:** \r\n[WinFormsCoreTest.zip](https://github.com/dotnet/winforms/files/3489165/WinFormsCoreTest.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/1602","RelatedDescription":"Open issue \"AccessViolationException with MenuStrip and VisualStyleState.NoneEnabled\" (#1602)"},{"Id":"479289770","IsPullRequest":true,"CreatedAt":"2019-08-10T17:34:25","Actor":"JeremyKuhne","Number":"1601","RawContent":null,"Title":"Wilcard include interop files for System.Windows.Forms","State":"open","Body":"So far System.Windows.Forms is the superset of Interop usage. There was one existing wildcard that wasn't properly defined, including all of interop as one wildcard to make continued work here easier (less conflicts, easier to add files).\r\n\r\nIf we need to exclude individual files we can add those explicitly. If needed we can break this out into individual subdirectories as well.\r\n\r\nThe other projects include only a subset of the interop definitions, so keeping those explicit.\r\n\r\n## Customer Impact\r\n\r\nNone\r\n\r\n## Regression? \r\n\r\nNo\r\n\r\n## Risk\r\n\r\nVery low\r\n\r\n## Test methodology\r\n\r\n- Built, ran tests.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1601)","Url":"https://github.com/dotnet/winforms/pull/1601","RelatedDescription":"Open PR \"Wilcard include interop files for System.Windows.Forms\" (#1601)"},{"Id":"479283365","IsPullRequest":false,"CreatedAt":"2019-08-10T16:21:41","Actor":"Gigas002","Number":"1600","RawContent":null,"Title":"Scrollable MessageBox","State":"open","Body":"The problem's pretty much obvoius: sometimes standard messageboxes are just too short for the contents:\r\n\r\n![image](https://user-images.githubusercontent.com/24297712/62801559-b13c1b80-baee-11e9-9891-7862c678944a.png)\r\n\r\nThere was already good and working solution of this problem. More info:\r\nhttps://www.codeproject.com/Articles/601900/FlexibleMessageBox-A-Flexible-Replacement-for-the\r\n\r\nThe mentioned FlexibleMessageBox class works well on .NET Core 3 WinForms application, but probably that behaviour of MessageBox should be default?","Url":"https://github.com/dotnet/winforms/issues/1600","RelatedDescription":"Open issue \"Scrollable MessageBox\" (#1600)"},{"Id":"479260487","IsPullRequest":true,"CreatedAt":"2019-08-10T12:16:07","Actor":"dotnet-maestro[bot]","Number":"1599","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190809.8\r\n- **Date Produced**: 8/10/2019 1:45 AM\r\n- **Commit**: f22982a641aa6f29585b6ab1de85912814a00bac\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19409.8\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19409.8\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19409.8\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19409.8\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1599)","Url":"https://github.com/dotnet/winforms/pull/1599","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1599)"},{"Id":"479128777","IsPullRequest":true,"CreatedAt":"2019-08-09T19:13:01","Actor":"hughbe","Number":"1598","RawContent":null,"Title":" Cleanup some Kernel32 interop","State":"open","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1598)","Url":"https://github.com/dotnet/winforms/pull/1598","RelatedDescription":"Open PR \" Cleanup some Kernel32 interop\" (#1598)"},{"Id":"479037631","IsPullRequest":false,"CreatedAt":"2019-08-09T15:12:51","Actor":"MatthewBeardmore","Number":"1597","RawContent":null,"Title":"MenuBar checkbox color is different between .NET Core 3 and .NET Framework","State":"open","Body":"* .NET Core Version: 3.0 Preview 7\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\nMenuBar's MenuItem has a different color when it is checked (with no mouse hovering) between .NET Framework and .NET Core 3. The color for .NET Core 3 appears to be a bug, as I wouldn't have expected it to have the solid blue background, nor a different checkmark, as shown below.\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n.NET Core 3:\r\n![NetCoreApp3 0-Issue](https://user-images.githubusercontent.com/808932/62789153-57a80280-ba96-11e9-9a1f-7ca244353854.PNG)\r\n\r\n**Expected behavior:**\r\n.NET Framework\r\n![Net471-NoIssue](https://user-images.githubusercontent.com/808932/62789167-61316a80-ba96-11e9-8a63-d187a3efe792.PNG)\r\n\r\n\r\n**Minimal repro:**\r\n[Repo.zip](https://github.com/dotnet/winforms/files/3486911/Repo.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/1597","RelatedDescription":"Open issue \"MenuBar checkbox color is different between .NET Core 3 and .NET Framework\" (#1597)"},{"Id":"478966574","IsPullRequest":true,"CreatedAt":"2019-08-09T12:40:42","Actor":"RussKie","Number":"1596","RawContent":null,"Title":"Enhance docs","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n## Proposed changes\r\n\r\n- Dotting `i`s and crossing `t`s for the outstanding documentations\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- More API documented\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1596)","Url":"https://github.com/dotnet/winforms/pull/1596","RelatedDescription":"Open PR \"Enhance docs\" (#1596)"},{"Id":"478952934","IsPullRequest":true,"CreatedAt":"2019-08-09T12:26:17","Actor":"dotnet-maestro[bot]","Number":"1595","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190808.13\r\n- **Date Produced**: 8/9/2019 2:43 AM\r\n- **Commit**: 524bb3e06ffd5b483a3c71a8f670b7a4bd2c232a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19408.13\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19408.13\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19408.13\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1595)","Url":"https://github.com/dotnet/winforms/pull/1595","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1595)"},{"Id":"478935321","IsPullRequest":true,"CreatedAt":"2019-08-09T11:18:07","Actor":"vladimir-krestov","Number":"1594","RawContent":null,"Title":"WIP: Fixing menu control type and menu items navigation","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #1582 \r\n**Original bug:**\r\n- [Bug 937670:](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/937670) [Screen Reader - SSMA - Create new project] Incorrect control type is defined for all menus like 'File and Edit and View and Tools...' on SSMA.\r\n\r\n\r\n## Proposed changes\r\nFix the accessibility navigation tree for MenuStrip, ContextMenuStrip, ToolStrip, StatusStrip, BindingNavigator controls.\r\nImplement ToolStrip behavior like as the Notepad:\r\n- Implement ElementProviderFromPoint method for ToolStrip to the Inspect tool can get access to item's AccessibleObject when the mouse is over it\r\n- Implement Accessible properties for ToolStripDropDown as menu\r\n- Remove not localized DropDown name\r\n- Change the fragment navigate to change accessibility tree\r\n\r\nItems will not have children. Instead, the dropdown pane is in the navigation tree as a separate item. This will get rid of this error: \"An element's BoundingRectangle must be contained within its parent element.\"​\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The fix will allow the client to receive an accessible object when hovering over it with the mouse.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None, it repeats the implementation of the Notepad ToolStrip\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/49272759/62637790-e0168e00-b944-11e9-8b3c-c99d44a40472.png)\r\n\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n![image](https://user-images.githubusercontent.com/49272759/62637798-e442ab80-b944-11e9-97da-cb50dfe38b48.png)\r\n\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Manual testing with using the Inspect tool\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- .NET Core SDK (3.0.100-preview8-013392)\r\n- Microsoft Windows [Version 10.0.18362.239]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1594)","Url":"https://github.com/dotnet/winforms/pull/1594","RelatedDescription":"Open PR \"WIP: Fixing menu control type and menu items navigation\" (#1594)"},{"Id":"478736565","IsPullRequest":false,"CreatedAt":"2019-08-08T23:58:44","Actor":"merriemcgaw","Number":"1593","RawContent":null,"Title":"Update templates to set DPI Awareness to System Aware by default","State":"open","Body":".NET Core apps are more likely than not to run on more modern hardware with a higher pixel density. Given that, we should default all new apps to be System Aware. We'll update this in the templates using  `Application.SetHighDpiMode(HighDpiMode.SystemAware);` in program.cs file and the equivalent in VB.\r\n\r\n@OliaG to make porting of apps smoother and work well in the new designer we should also update porting guides to include calling that method in Main(). \r\n","Url":"https://github.com/dotnet/winforms/issues/1593","RelatedDescription":"Open issue \"Update templates to set DPI Awareness to System Aware by default\" (#1593)"},{"Id":"478451136","IsPullRequest":true,"CreatedAt":"2019-08-08T12:49:39","Actor":"vladimir-krestov","Number":"1592","RawContent":null,"Title":"Fixing DataGridViewCell AccessibleObject Value.IsReadOnly property","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #1578 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Override the IsReadOnly property for DataGridViewCell AccessibleObject\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The Narrator will say \"readonly\" for readonly cells\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None, this is a minimal extension.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n![image](https://user-images.githubusercontent.com/49272759/62694277-b01ac980-b9dc-11e9-9e83-681da817ba64.png)\r\n\r\n![image](https://user-images.githubusercontent.com/49272759/62704190-75705b80-b9f3-11e9-838d-5f314a98bdb4.png)\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n![image](https://user-images.githubusercontent.com/49272759/62694079-52867d00-b9dc-11e9-8f4a-b1a1cebc5acd.png)\r\n\r\n![image](https://user-images.githubusercontent.com/49272759/62703993-14488800-b9f3-11e9-9847-e52d613176d3.png)\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Unit test (DataGridViewCellAccessibleObjectTests.cs) \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Manual testing with using the Inspect tool\r\n- Manual testing with using the Narrator\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- .NET Core SDK: 3.0.0-preview9-19407-06\r\n- Microsoft Windows [Version 10.0.18362.239]\r\n\r\n<!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1592)","Url":"https://github.com/dotnet/winforms/pull/1592","RelatedDescription":"Open PR \"Fixing DataGridViewCell AccessibleObject Value.IsReadOnly property\" (#1592)"},{"Id":"478434163","IsPullRequest":true,"CreatedAt":"2019-08-08T12:32:31","Actor":"RussKie","Number":"1591","RawContent":null,"Title":"Fix xmldoc","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- Purely cosmetic change that increases xml-doc spacing to 2 after `///`.  \r\nThe increased spacing makes it slightly easier to read the comments in the code.\r\nThe change is done in VS using regex `///\\s([^< ])` -> `///  $1`\r\n- Fix and add xml-doc\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- None\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1591)","Url":"https://github.com/dotnet/winforms/pull/1591","RelatedDescription":"Closed or merged PR \"Fix xmldoc\" (#1591)"},{"Id":"478429571","IsPullRequest":true,"CreatedAt":"2019-08-08T12:21:34","Actor":"dotnet-maestro[bot]","Number":"1590","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190807.9\r\n- **Date Produced**: 8/7/2019 11:00 PM\r\n- **Commit**: 77597ba7f484bef24368d966b7fe91fe38ec973b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19407.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19407.9\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1590)","Url":"https://github.com/dotnet/winforms/pull/1590","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1590)"},{"Id":"478429439","IsPullRequest":true,"CreatedAt":"2019-08-08T12:16:17","Actor":"dotnet-maestro[bot]","Number":"1589","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190807.9\r\n- **Date Produced**: 8/7/2019 11:00 PM\r\n- **Commit**: 77597ba7f484bef24368d966b7fe91fe38ec973b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19407.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19407.9\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19407.9\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1589)","Url":"https://github.com/dotnet/winforms/pull/1589","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1589)"},{"Id":"478092946","IsPullRequest":true,"CreatedAt":"2019-08-08T10:41:22","Actor":"hughbe","Number":"1585","RawContent":null,"Title":"Remove point","State":"closed","Body":"## Proposed changes\r\n\r\n- Remove `POINT` preferring `Point` which marshals the same\r\n\r\n## Customer Impact\r\n\r\n- Reduced allocations as we now use classes instead of structs\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology\r\n\r\n- Existing tests and #1530 \r\n\r\nExtracted from #1508\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1585)","Url":"https://github.com/dotnet/winforms/pull/1585","RelatedDescription":"Closed or merged PR \"Remove point\" (#1585)"},{"Id":"478307199","IsPullRequest":false,"CreatedAt":"2019-08-08T07:50:03","Actor":"Marie-Shi","Number":"1588","RawContent":null,"Title":"[Accessibility Insights] An element of the given ControlType must support the Text pattern for edit controls: TextBox/MaskedTextBox/ComboBox/NumericUpDown/DomainUpDown","State":"open","Body":"* .NET Core Version: .NET Core 3.0.100-preview8-013656 from release branch\r\n* Have you experienced this same bug with .NET Framework? Yes\r\n\r\n**Affected controls:**\r\nTextBox/MaskedTextBox/ComboBox/NumericUpDown/DomainUpDown\r\n\r\n**Problem description:**\r\n1.\tInstall the .NET Core 3.0 SDK from https://github.com/dotnet/core-sdk.\r\n2.\tOpen the attached ‘NumericUpDown_DomainUpDown’ .NET Core app in VS.\r\n[NumericUpDown_DomainUpDown.zip](https://github.com/dotnet/winforms/files/3480418/NumericUpDown_DomainUpDown.zip)\r\n3.\tBuild and run it.\r\n4.\tStart Accessibility Insights for Windows and test NumericUpDown and DomainUpDown controls in Form.\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nAn element of the given ControlType doesn’t support the Text pattern. \r\nViolation: [Section 508 502.3.10](https://www.access-board.gov/guidelines-and-standards/communications-and-it/about-the-ict-refresh/final-rule/single-file-version#502-interoperability-assistive-technology) \r\nPlease see the below Screenshot:\r\nNumericUpDown:\r\n![NumericUpDown](https://user-images.githubusercontent.com/45864017/62684112-8d93ab00-b9f2-11e9-819b-a3519503fcd7.png)\r\n\r\nDomainUpDown:\r\n![DomainUpDown](https://user-images.githubusercontent.com/45864017/62684118-91273200-b9f2-11e9-94f5-3ed3f13f8644.png)\r\n\r\n**Expected behavior:**\r\nNumericUpDown and DomainUpDown eidt should support the Text pattern.","Url":"https://github.com/dotnet/winforms/issues/1588","RelatedDescription":"Open issue \"[Accessibility Insights] An element of the given ControlType must support the Text pattern for edit controls: TextBox/MaskedTextBox/ComboBox/NumericUpDown/DomainUpDown\" (#1588)"},{"Id":"477800147","IsPullRequest":false,"CreatedAt":"2019-08-08T06:08:27","Actor":"Olina-Zhang","Number":"1579","RawContent":null,"Title":"Accessibility: [Inspect] The name of spinner under “PageUpDown” spinner in PrintPreview dialog should be consistent with .Net framework behavior","State":"closed","Body":"* .NET Core Version: .Net 3.0 SDK Preview8 013656 build\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Repro Steps:**\r\n1.\tOpen attached “PrintDemo” .Net Core app in VS\r\n[PrintDemo.zip](https://github.com/dotnet/winforms/files/3476187/PrintDemo.zip)\r\n\r\n2.\tBuild and run it, click the “Preview” button to show the Print Preview dialog\r\n3.\tOpen Inspect and focus on the last one: ToolStripNumericUpDown in PrintPreviewToolStrip\r\n\r\n**Actual behavior:** \r\nThe name of spinner under “PageUpDown” spinner  is “ToolStripNumericUpDownControl” spinner, is not same as .net framework behavior. Please see following screenshot:\r\n![image](https://user-images.githubusercontent.com/26474449/62609968-8caa2e80-b8b7-11e9-887b-1de17c6b6841.png)\r\n\r\n\r\n**Expected behavior:**\r\nThe name of spinner under “PageUpDown” spinner in Core should keep up with .Net framework, should be “NumericUpDown” spinner.\r\n","Url":"https://github.com/dotnet/winforms/issues/1579","RelatedDescription":"Closed issue \"Accessibility: [Inspect] The name of spinner under “PageUpDown” spinner in PrintPreview dialog should be consistent with .Net framework behavior\" (#1579)"},{"Id":"478259607","IsPullRequest":false,"CreatedAt":"2019-08-08T05:33:40","Actor":"Jessie-Zhang01","Number":"1587","RawContent":null,"Title":"The DataGridViewComboBoxColumn cannot be displayed as combobox mode when the DisplayStyle property is set to Nothing.","State":"open","Body":"* .NET Core Version: (.Net Core SDK 5.0.100.13662 build from master branch)\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n**Steps to reproduce:**\r\n\r\n1. Create a Winforms .Net Core application.\r\n2. Add DataGridView control, then add a DataGridViewComboBoxColumn column.\r\n3. Set the DisplayStyle property of DataGridViewComboBoxColumn as Nothing.\r\n4. Build and run it.\r\n[WindowsFormsApp6.zip](https://github.com/dotnet/winforms/files/3479985/WindowsFormsApp6.zip)\r\n\r\n**Actual:** \r\nThe DataGridViewComboBoxColumn cannot be displayed as combobox mode when the DisplayStyle property is set to Nothing.\r\n\r\n**Expected:** \r\nFrom Merrie comment：Add the Obsolete attribute for the type so that we can warn developers not to use it due to accessibility issues.","Url":"https://github.com/dotnet/winforms/issues/1587","RelatedDescription":"Open issue \"The DataGridViewComboBoxColumn cannot be displayed as combobox mode when the DisplayStyle property is set to Nothing.\" (#1587)"},{"Id":"478153993","IsPullRequest":true,"CreatedAt":"2019-08-07T21:46:32","Actor":"dotnet-maestro[bot]","Number":"1586","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190810.12\r\n- **Date Produced**: 8/11/2019 3:13 AM\r\n- **Commit**: 9408f55c19a0a9118a23b05f83200a3534dd9f7f\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview9-19410-12\r\n\r\n[marker]: <> (End:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview9.19409.17 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview9.19409.17 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.6.0-preview9.19409.17 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview9.19409.17 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview9.19409.17 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview9.19409.17 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview9.19409.17 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview9.19409.17 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview9.19409.17 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 3.0.0-preview9.19409.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-preview9.19409.2 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1586)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1586","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#1586)"},{"Id":"478060340","IsPullRequest":true,"CreatedAt":"2019-08-07T18:03:57","Actor":"dotnet-maestro[bot]","Number":"1584","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190807.06\r\n- **Date Produced**: 8/7/2019 5:47 PM\r\n- **Commit**: f02340ac7635ce12a06bc519152d7b3c30dd54d9\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview9-19407-06\r\n\r\n[marker]: <> (End:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19405.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview8.19405.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.6.0-preview8.19405.3 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview8.19405.3 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview8.19405.3 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview8.19405.3 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview8.19405.3 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview8.19405.3 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview8.19405.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 3.0.0-preview8.19379.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-preview8.19379.2 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1584)","Url":"https://github.com/dotnet/winforms/pull/1584","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#1584)"},{"Id":"477932068","IsPullRequest":true,"CreatedAt":"2019-08-07T13:33:17","Actor":"hughbe","Number":"1583","RawContent":null,"Title":"Remove pointstruct and friends","State":"open","Body":"## Proposed changes\r\n\r\n- Remove `POINTSTRUCT` preferring `Point` which marshals the same\r\n- Remove `_POINTL` preferring `Point` which marshals the same\r\n- Remove `tagPOINTF`, preferring `PointF` which marshals the same\r\n- Remove `tagSIZEL`, preferring `Size` which marshals the same\r\n- Remove `tagSIZE`, preferring `Size` which marshals the same\r\n- Remove `SIZE`, preferring `Size` which marshals the same\r\n\r\n## Customer Impact\r\n\r\n- Reduced allocations as we now use classes instead of structs\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Existing tests and #1530 \r\n\r\nExtracted from #1508\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1583)","Url":"https://github.com/dotnet/winforms/pull/1583","RelatedDescription":"Open PR \"Remove pointstruct and friends\" (#1583)"},{"Id":"477930839","IsPullRequest":false,"CreatedAt":"2019-08-07T13:31:05","Actor":"vladimir-krestov","Number":"1582","RawContent":null,"Title":"[Accessibility]: Incorrect control type of dropdown menu items","State":"open","Body":"* .NET Core Version: 3.0.100-preview8-013392\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n**Original bug:**\r\n- [Bug 937670: ](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/937670)[Screen Reader - SSMA - Create new project] Incorrect control type is defined for all menus like 'File and Edit and View and Tools...' on SSMA.\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n- ToolStrip menu items have incorrect Accessibility ControlType property value when they are expanded. ToolStrip behavior should be like as in the Notepad.\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n- ToolStripDropDown item doesn't change his ControlType property value when it is expanded\r\n- The navigation tree has an extra \"toolbar\".\r\n- The Inspect can't get access to item's AccessibleObject when the mouse is over it\r\n\r\n![image](https://user-images.githubusercontent.com/49272759/62624995-04667080-b92d-11e9-8797-390fd59c030e.png)\r\n\r\n**Expected behavior:**\r\n- ToolStripDropDown item has \"menu item\" control type when it is collapsed.\r\n- ToolStripDropDown item has \"menu\" control type when it is expanded and has separate space in the navigation tree.\r\n- The navigation tree doesn't have an extra \"toolbar\".\r\n- The Inspect can get access to item's AccessibleObject when the mouse is over it\r\n\r\n![image](https://user-images.githubusercontent.com/49272759/62625513-05e46880-b92e-11e9-8c82-050bebe9f81e.png)\r\n\r\n\r\n**Minimal repro:**\r\n- Create Core test app\r\n- Add MenuStrip control\r\n- Add menu items to MenuStrip control\r\n- Add nested items to some dropdown MenuStrip item\r\n- Open the Inspect and check the accessibility navigation tree\r\n","Url":"https://github.com/dotnet/winforms/issues/1582","RelatedDescription":"Open issue \"[Accessibility]: Incorrect control type of dropdown menu items\" (#1582)"},{"Id":"477887840","IsPullRequest":true,"CreatedAt":"2019-08-07T12:16:37","Actor":"dotnet-maestro[bot]","Number":"1581","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190806.7\r\n- **Date Produced**: 8/7/2019 12:08 AM\r\n- **Commit**: c155e609f88491128e1a66d09f413062f3344d4b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19406.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19406.7\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19406.7\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19406.7\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1581)","Url":"https://github.com/dotnet/winforms/pull/1581","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1581)"},{"Id":"477887580","IsPullRequest":true,"CreatedAt":"2019-08-07T12:16:05","Actor":"dotnet-maestro[bot]","Number":"1580","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190806.7\r\n- **Date Produced**: 8/7/2019 12:08 AM\r\n- **Commit**: c155e609f88491128e1a66d09f413062f3344d4b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19406.7\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19406.7\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19406.7\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19406.7\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1580)","Url":"https://github.com/dotnet/winforms/pull/1580","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1580)"},{"Id":"477761651","IsPullRequest":false,"CreatedAt":"2019-08-07T07:46:30","Actor":"Olina-Zhang","Number":"1578","RawContent":null,"Title":"Accessibility: DataGridView cells in a ReadOnly DGV are reported as editable and Value.IsReadOnly is false in Inspect","State":"open","Body":"* .NET Core Version: .Net 3.0 SDK Preview8 013656 build\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n**Repro Steps:**\r\n1. Create a Winforms .Net Core application\r\n\r\n2. Add DataGridView control, set ReadOnly property to true\r\n\r\n3. Add columns and rows\r\n\r\n    public Form1()\r\n        {\r\n            InitializeComponent();\r\n            this.dataGridView1.ReadOnly = true;\r\n            this.dataGridView1.Rows.Insert(0, new object[3] { \"aa\", \"bb\", \"cc\" });\r\n            this.dataGridView1.Rows.Insert(0, new object[3] { \"aa1\", \"bb1\", \"cc1\" });\r\n        }\r\n\r\n4. Run app and navigate to a cell in narrator or check the Value.IsReadOnly property in Inspect \r\n[WindowsFormsApp5.zip](https://github.com/dotnet/winforms/files/3475785/WindowsFormsApp5.zip)\r\n\r\n**Actual behavior:**\r\nIn Narrator, it reads the cell with editing state. And in Inspect, its Value.IsReadyOnly is false. Please see following screenshot:\r\n![image](https://user-images.githubusercontent.com/26474449/62604294-9f6b3600-b8ac-11e9-8254-745fc1fec9c9.png)\r\n\r\n**Expected behavior:**\r\nIn Narrator, it should announce the cell with ReadOnly state, and In Inspect, Value.IsReadOnly property should be true when focusing on cell.\r\n","Url":"https://github.com/dotnet/winforms/issues/1578","RelatedDescription":"Open issue \"Accessibility: DataGridView cells in a ReadOnly DGV are reported as editable and Value.IsReadOnly is false in Inspect\" (#1578)"},{"Id":"477625081","IsPullRequest":false,"CreatedAt":"2019-08-06T22:40:10","Actor":"danmosemsft","Number":"1577","RawContent":null,"Title":"Consider enabling some xunit analyzers","State":"open","Body":"We have done this in corefx and it's helped find some incorrect use of asserts and xunit attributes. Might be something the community is interested in doing - enabling one rule at a time as we have been doing.\r\n\r\noriginal change https://github.com/dotnet/corefx/pull/38676\r\nsubsequent enablings https://github.com/dotnet/corefx/commits/master/src/CodeAnalysis.ruleset\r\nmore pending https://github.com/dotnet/corefx/pull/40079","Url":"https://github.com/dotnet/winforms/issues/1577","RelatedDescription":"Open issue \"Consider enabling some xunit analyzers\" (#1577)"},{"Id":"477341548","IsPullRequest":true,"CreatedAt":"2019-08-06T12:31:51","Actor":"dotnet-maestro[bot]","Number":"1576","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190805.9\r\n- **Date Produced**: 8/6/2019 12:26 AM\r\n- **Commit**: 44ccf0f527de559b07f9ad955a47ec97f03f2146\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19405.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19405.9\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1576)","Url":"https://github.com/dotnet/winforms/pull/1576","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1576)"},{"Id":"477341215","IsPullRequest":true,"CreatedAt":"2019-08-06T12:31:11","Actor":"dotnet-maestro[bot]","Number":"1575","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190805.9\r\n- **Date Produced**: 8/6/2019 12:26 AM\r\n- **Commit**: 44ccf0f527de559b07f9ad955a47ec97f03f2146\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19405.9\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19405.9\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19405.9\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1575)","Url":"https://github.com/dotnet/winforms/pull/1575","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1575)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-08-11T05:30:55.731292Z","RunDurationInMilliseconds":862}