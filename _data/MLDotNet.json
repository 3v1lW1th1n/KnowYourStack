{"Data":{"GitHub":{"Issues":[{"Id":"363406101","IsPullRequest":false,"CreatedAt":"2018-09-25T04:31:35","Actor":"justinormont","Number":"1019","RawContent":null,"Title":"Backslash encoded in filenames for model zip","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: OSX 10.10\r\n\r\nWhen storing the created models in a zip file, we are adding slashes to the filename instead of actual folders. This leads to the **cross-platform oddity** where on OSX (and likely linux) the folder structure isn't created when unzipping a model.\r\n\r\nOn OSX, the entire model unzips to a single monolithic folder: _(note slashes in the actual filename)_\r\n![unzipped_model_on_osx](https://user-images.githubusercontent.com/4080826/45992299-e312d380-c03d-11e8-999d-fb0b87f6f0f4.png)\r\n\r\nUnder Win10, the model unzips to a folder structure: _(see left side of image)_\r\n> ![win10_model_unzip](https://user-images.githubusercontent.com/4080826/45992550-523cf780-c03f-11e8-869c-181fa8e80f03.png)\r\n\r\nModel shown is from: https://github.com/dotnet/machinelearning/blob/a22c4e63cf269eccd19dbb97492346ca3da34db3/test/data/sentiment_model.zip\r\n\r\nFrom quick searching, it looks like the slash is added here:\r\nhttps://github.com/dotnet/machinelearning/blob/5e08fa1ea7bfb54f28ed0815cb6413e0068e6dd1/src/Microsoft.ML.Data/Model/Repository.cs#L223-L229\r\n\r\nWe should look if this is actually necessary, as this is the first I've run into encoding slashes directly in to a filename in a zip file.","Url":"https://github.com/dotnet/machinelearning/issues/1019","RelatedDescription":"Open issue \"Backslash encoded in filenames for model zip\" (#1019)"},{"Id":"363399388","IsPullRequest":false,"CreatedAt":"2018-09-25T03:47:23","Actor":"Anipik","Number":"1018","RawContent":null,"Title":"substitute AlignedArray with a regular array","State":"open","Body":"This issue tracks the progress with removing the aligned array.\r\n\r\nThe aligned array wont make much difference here as we do a lot of move operation.\r\n\r\n\r\nMore Discussion https://github.com/dotnet/machinelearning/pull/383\r\n\r\nRough Implementation :- https://github.com/Anipik/machinelearning/tree/temp\r\n\r\n\r\nThis branch removes all the aligned array code from src as well as implementation. All the tests are passing\r\nWill update the issue with performance numbers soon\r\n\r\ncc @danmosemsft @tannergooding @TomFinley @eerhardt ","Url":"https://github.com/dotnet/machinelearning/issues/1018","RelatedDescription":"Open issue \"substitute AlignedArray with a regular array\" (#1018)"},{"Id":"363303187","IsPullRequest":true,"CreatedAt":"2018-09-25T03:29:47","Actor":"artidoro","Number":"1002","RawContent":null,"Title":"Conversion of ordinary least square linear regression (OlsLinearRegression) to estimator","State":"closed","Body":"Ongoing work on converting the trainers to estimators. This PR converts the ordinary least squares linear regression (OlsLinearRegression).\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1002","RelatedDescription":"Closed or merged PR \"Conversion of ordinary least square linear regression (OlsLinearRegression) to estimator\" (#1002)"},{"Id":"363330592","IsPullRequest":true,"CreatedAt":"2018-09-25T03:19:57","Actor":"TomFinley","Number":"1007","RawContent":null,"Title":"Rename the static pipeline namespace.","State":"closed","Body":"* Microsoft.ML.Data.StaticPipe to Microsoft.ML.StaticPipe.\r\n* Columns now in StaticPipe as opposed to StaticPipe.Runtime.\r\n\r\nThis should fix some of the more obnoxious issues with intellisense involving pipeline columns, just so long as they actually use `Microsoft.ML.StaticPipe` namespace.\r\n\r\nRefinement and iteration of #778.","Url":"https://github.com/dotnet/machinelearning/pull/1007","RelatedDescription":"Closed or merged PR \"Rename the static pipeline namespace.\" (#1007)"},{"Id":"363375439","IsPullRequest":true,"CreatedAt":"2018-09-25T01:18:57","Actor":"zeahmed","Number":"1017","RawContent":null,"Title":"Converted PcaTransform into Transformer using TransformerWrapper.","State":"open","Body":"This PR implements a work item related to #754.","Url":"https://github.com/dotnet/machinelearning/pull/1017","RelatedDescription":"Open PR \"Converted PcaTransform into Transformer using TransformerWrapper.\" (#1017)"},{"Id":"363370340","IsPullRequest":true,"CreatedAt":"2018-09-25T00:46:11","Actor":"mairaw","Number":"1016","RawContent":null,"Title":"replace e.g. with for example","State":"open","Body":"I've noticed in some of the API docs for ML.NET that I was browsing that there is a heavy use of e.g. which is against our style guide rules (https://docs.microsoft.com/en-us/style-guide/a-z-word-list-term-collections/e/eg). So replaced it across the board on the repo. \r\n\r\nOnce this is merged, I can create a separate PR for i.e. which also shouldn't be used.","Url":"https://github.com/dotnet/machinelearning/pull/1016","RelatedDescription":"Open PR \"replace e.g. with for example\" (#1016)"},{"Id":"363365800","IsPullRequest":false,"CreatedAt":"2018-09-25T00:17:52","Actor":"klausmh","Number":"1015","RawContent":null,"Title":"Cannot get parameters for transforms?","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Win 10 / ML.NET 0.5.0\r\n- **.NET Version (eg., dotnet --info)**: 4.6.2\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n\r\nCreated an affine transform, e.g.,\r\n```\r\nNormalizeTransform.Create(environment, new NormalizeTransform.MeanVarArguments { Column = normalizeTransformColumns.ToArray(), UseCdf = true }, data);\r\n```\r\n\r\n- **What happened?**\r\n\r\nThe scale and offset of the actual transform created cannot be retrieved (or can only be retrieved via reflection).\r\n\r\n- **What did you expect?**\r\n\r\nA way to retrieve parameters of transforms.\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/1015","RelatedDescription":"Open issue \"Cannot get parameters for transforms?\" (#1015)"},{"Id":"363364750","IsPullRequest":true,"CreatedAt":"2018-09-25T00:11:41","Actor":"najeeb-kazmi","Number":"1014","RawContent":null,"Title":"Add Benchmark test for PredictionEngine","State":"open","Body":"Adds a benchmark test to measure performance of doing many single predictions with PredictionEngine.\r\n\r\nCloses #1013 ","Url":"https://github.com/dotnet/machinelearning/pull/1014","RelatedDescription":"Open PR \"Add Benchmark test for PredictionEngine\" (#1014)"},{"Id":"363362558","IsPullRequest":false,"CreatedAt":"2018-09-24T23:59:32","Actor":"najeeb-kazmi","Number":"1013","RawContent":null,"Title":"PredictionEngine benchmark test","State":"open","Body":"Add benchmark test to measure performance of single predictions made by PredictionEngine.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/1013","RelatedDescription":"Open issue \"PredictionEngine benchmark test\" (#1013)"},{"Id":"363361545","IsPullRequest":true,"CreatedAt":"2018-09-24T23:53:50","Actor":"artidoro","Number":"1012","RawContent":null,"Title":"WIP: Conversion of Parallel Stochastic Gradient Descent (SymSGD) to estimator","State":"open","Body":"Ongoing work on converting the trainers to estimators. This PR converts the Parallel Stochastic Gradient Descent classification trainer (SymSGD).","Url":"https://github.com/dotnet/machinelearning/pull/1012","RelatedDescription":"Open PR \"WIP: Conversion of Parallel Stochastic Gradient Descent (SymSGD) to estimator\" (#1012)"},{"Id":"363354830","IsPullRequest":false,"CreatedAt":"2018-09-24T23:19:35","Actor":"danmosemsft","Number":"1011","RawContent":null,"Title":"How to build for netcoreapp3.0","State":"open","Body":"We should document how to build to run on .NET Core 3.0 (so as to use the .NET hardware intrinsics)\r\n\r\nI tried various ideas such as `build -- /p:targetframework=netcoreapp3.0` but didn't succeed yet.\r\n\r\n@eerhardt  ? ","Url":"https://github.com/dotnet/machinelearning/issues/1011","RelatedDescription":"Open issue \"How to build for netcoreapp3.0\" (#1011)"},{"Id":"363351849","IsPullRequest":false,"CreatedAt":"2018-09-24T23:04:42","Actor":"wschin","Number":"1010","RawContent":null,"Title":"Another Update in KeyToVector's ONNX exporter","State":"open","Body":"The key range should starts with zero. The following change fixes this bug with the latest runtime.\r\n-`node.AddAttribute(\"cats_int64s\", Enumerable.Range(1, info.TypeSrc.ItemType.KeyCount).Select(x => (long)x));`\r\n+`node.AddAttribute(\"cats_int64s\", Enumerable.Range(0, info.TypeSrc.ItemType.KeyCount).Select(x => (long)x));`","Url":"https://github.com/dotnet/machinelearning/issues/1010","RelatedDescription":"Open issue \"Another Update in KeyToVector's ONNX exporter\" (#1010)"},{"Id":"363351758","IsPullRequest":true,"CreatedAt":"2018-09-24T23:04:14","Actor":"sfilipi","Number":"1009","RawContent":null,"Title":"Adding the extension methods for FastTree classification and regression","State":"open","Body":"OnGoing work to address #754. \r\n\r\nAdded the extensions to the Binary and Regression context for the respective FastTree trainers. \r\nRanking coming on a separate PR, since it needs a bit more work with the context and elevator changes. \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/1009","RelatedDescription":"Open PR \"Adding the extension methods for FastTree classification and regression\" (#1009)"},{"Id":"363342491","IsPullRequest":true,"CreatedAt":"2018-09-24T22:23:34","Actor":"tannergooding","Number":"1008","RawContent":null,"Title":"Move towards being able to build for x86","State":"open","Body":"This is work towards https://github.com/dotnet/machinelearning/issues/97\r\n\r\nIt allows you to build using `build.cmd -buildArch=x86` and, if you manually set the correct testhost, it allows the tests to pass.","Url":"https://github.com/dotnet/machinelearning/pull/1008","RelatedDescription":"Open PR \"Move towards being able to build for x86\" (#1008)"},{"Id":"363330400","IsPullRequest":false,"CreatedAt":"2018-09-24T21:38:14","Actor":"klausmh","Number":"1006","RawContent":null,"Title":"LinearPredictor.Statistics is always null","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Win 10 / ML.NET 0.5.0\r\n- **.NET Version (eg., dotnet --info)**: 4.6.2\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n\r\nI train a model using logistic regression:\r\n```\r\nvar trainer = new LogisticRegression(\r\n                        environment,\r\n                        new LogisticRegression.Arguments() { ShowTrainingStats = true });\r\nvar trainRoles = ...\r\nvar predictor.Train(trainRoles)\r\n```\r\n\r\n- **What happened?**\r\n`predictor.Statistics` is null\r\n\r\n- **What did you expect?**\r\nTo be able to retrieve model statistics\r\n\r\n\r\n### Source code / logs\r\n\r\n`LogisticRegression.CreatePredictor` does not pass its `_stats` `LinearModelingStatistics` field when it creates a `LinearBinaryPredictor`: https://github.com/dotnet/machinelearning/blob/1e7b8be855210f2bd8adbd532396a1840a20541d/src/Microsoft.ML.StandardLearners/Standard/LogisticRegression/LogisticRegression.cs#L327.\r\n\r\nIf I do change that, then `predictor.Statistics.GetCoefficientStatistics` still returns null. It appears that you calculate the inverted Hessian, but then do not use it to calculate standard errors (and pass these in the constructor of `LinearModelStatistics'): https://github.com/dotnet/machinelearning/blob/1e7b8be855210f2bd8adbd532396a1840a20541d/src/Microsoft.ML.StandardLearners/Standard/LogisticRegression/LogisticRegression.cs#L189.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/1006","RelatedDescription":"Open issue \"LinearPredictor.Statistics is always null\" (#1006)"},{"Id":"363256721","IsPullRequest":true,"CreatedAt":"2018-09-24T21:13:32","Actor":"TomFinley","Number":"999","RawContent":null,"Title":"Add analayzer to nuget","State":"closed","Body":"More completion for #778, where I add the code analyzer to the nuget.\r\n\r\nThanks for help from @eerhardt !","Url":"https://github.com/dotnet/machinelearning/pull/999","RelatedDescription":"Closed or merged PR \"Add analayzer to nuget\" (#999)"},{"Id":"363322105","IsPullRequest":true,"CreatedAt":"2018-09-24T21:10:43","Actor":"Zruty0","Number":"1005","RawContent":null,"Title":"TrainTestSplit function","State":"open","Body":"Part of #754\r\nAdded TrainTestSplit function to training contexts.","Url":"https://github.com/dotnet/machinelearning/pull/1005","RelatedDescription":"Open PR \"TrainTestSplit function\" (#1005)"},{"Id":"363316124","IsPullRequest":false,"CreatedAt":"2018-09-24T20:52:58","Actor":"zeahmed","Number":"1004","RawContent":null,"Title":"Consistency issue with LdaTransform","State":"open","Body":"Despite setting the `seed` in the ML.Net environment, LdaTransform does not produce consistent result which is a hurdle to writing a end-to-end functional test.\r\n\r\nResults are consistent when setting `ResetRandomGenerator=true` in LdaTransform on single box. However, on build server test is failing.\r\n\r\nPlease see the following test for more detail.\r\nhttps://github.com/dotnet/machinelearning/blob/5874e16fd652d93630e0622a756f1b913ca8ea55/test/Microsoft.ML.Tests/Transformers/TextFeaturizerTests.cs#L239\r\n ","Url":"https://github.com/dotnet/machinelearning/issues/1004","RelatedDescription":"Open issue \"Consistency issue with LdaTransform\" (#1004)"},{"Id":"363309590","IsPullRequest":false,"CreatedAt":"2018-09-24T20:34:12","Actor":"singlis","Number":"1003","RawContent":null,"Title":"ML.Net needs to publish nuget information to the dotnet versions repo post build","State":"open","Body":"### Issue\r\nML.Net needs to use the dotnet/versions repo to post the latest nuget information when a build is complete. This follows a common pattern for dotnet projects that allows users to subscribe for new changes, triggering a build of their own.","Url":"https://github.com/dotnet/machinelearning/issues/1003","RelatedDescription":"Open issue \"ML.Net needs to publish nuget information to the dotnet versions repo post build\" (#1003)"},{"Id":"363281146","IsPullRequest":true,"CreatedAt":"2018-09-24T19:08:24","Actor":"adamsitnik","Number":"1001","RawContent":null,"Title":"Fix some of the benchmarks","State":"open","Body":"1. Both I and @davidwrighton run today into an issue with NuGet packages restoring.  ML.NET defines the sources in [Directory.Builds.props](https://github.com/dotnet/machinelearning/blob/eb264892e75219b1f191d3c35fcbc636186b8acf/Directory.Build.props#L15-#L18) file, but as suggested by @agocke in https://github.com/dotnet/BenchmarkDotNet/pull/854 BDN ignores those files and needs the classic `nuget.config` file to work. (I know it's not perfect)\r\n2. In #954 I missed the fact that there is no global config. This change sets the `RecommendedConfig` as default and when`[TrainConfig]` is used it overwrites the `RecommendedConfig`.  Few types were missing config (`[Config(typeof(SomeConfig))]`), and they were using the default config from `BenchmarkDotNet`\r\n3. I mentioned how to download external dependencies in the README file","Url":"https://github.com/dotnet/machinelearning/pull/1001","RelatedDescription":"Open PR \"Fix some of the benchmarks\" (#1001)"},{"Id":"363274673","IsPullRequest":false,"CreatedAt":"2018-09-24T18:49:31","Actor":"justinormont","Number":"1000","RawContent":null,"Title":"CDN Compression Needs to be Enabled","State":"open","Body":"Enable CDN content compression. Content sourced from our CDN arrives without gzip/deflate/brotli compression enabled. \r\n\r\nLarger content from our CDN (like the 6GB fastText word embedding) takes too long to download, and can hit the [10min timeout](https://github.com/dotnet/machinelearning/blob/1e7b8be855210f2bd8adbd532396a1840a20541d/src/Microsoft.ML.Transforms/Text/WordEmbeddingsTransform.cs#L149) before finishing. \r\n\r\nOur CDN content lacks the `Content-Encoding: ...` header:\r\n```bash\r\n$ curl -L -I --compress https://aka.ms/tlc-resources/WordVectors/wiki.en.vec\r\nHTTP/1.1 301 Moved Permanently\r\nContent-Length: 0\r\nLocation: https://express-tlcresources.azureedge.net/wordvectors/wiki.en.vec\r\nServer: Kestrel\r\nRequest-Context: appId=cid-v1:26ef1154-5995-4d24-ad78-ef0b04f11587\r\nX-Powered-By: ASP.NET\r\nExpires: Mon, 24 Sep 2018 18:39:45 GMT\r\nCache-Control: max-age=0, no-cache, no-store\r\nPragma: no-cache\r\nDate: Mon, 24 Sep 2018 18:39:45 GMT\r\nConnection: keep-alive\r\nStrict-Transport-Security: max-age=31536000 ; includeSubDomains\r\n\r\nHTTP/1.1 200 OK\r\nCache-Control: no-cache\r\nContent-Type: application/octet-stream\r\nDate: Mon, 24 Sep 2018 18:39:44 GMT\r\nEtag: 0x8D5AEF4AA45D753\r\nExpires: Mon, 24 Sep 2018 18:39:44 GMT\r\nLast-Modified: Mon, 30 Apr 2018 23:46:59 GMT\r\nServer: Windows-Azure-Blob/1.0 Microsoft-HTTPAPI/2.0\r\nx-ms-blob-type: BlockBlob\r\nx-ms-lease-status: unlocked\r\nx-ms-request-id: ef682e2a-b01e-0113-2235-5442d7000000\r\nx-ms-version: 2009-09-19\r\nContent-Length: 6597238061\r\n```\r\n\r\nCompare to content from bing.com, which does have its `Content-Encoding: gzip` header:\r\n```bash\r\n$ curl -L -I --compress https://www.bing.com\r\nHTTP/1.1 200 OK\r\nCache-Control: private, max-age=0\r\nContent-Length: 0\r\nContent-Type: text/html; charset=utf-8\r\nContent-Encoding: gzip\r\nVary: Accept-Encoding\r\nP3P: CP=\"NON UNI COM NAV STA LOC CURa DEVa PSAa PSDa OUR IND\"\r\nSet-Cookie: SRCHD=AF=NOFORM; domain=.bing.com; expires=Thu, 24-Sep-2020 18:41:32 GMT; path=/\r\n  ... trimmed for brevity\r\n```\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/1000","RelatedDescription":"Open issue \"CDN Compression Needs to be Enabled\" (#1000)"},{"Id":"362816900","IsPullRequest":true,"CreatedAt":"2018-09-24T16:29:51","Actor":"Zruty0","Number":"993","RawContent":null,"Title":"Extended contexts to regression and multiclass, added FFM pigstension","State":"closed","Body":"Part of #754, extends #949.\r\nAdded MulticlassClassification context and RegressionContext, with corresponding Evaluate methods. Also added FFM binary trainer to the context extensions.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/993","RelatedDescription":"Closed or merged PR \"Extended contexts to regression and multiclass, added FFM pigstension\" (#993)"},{"Id":"363179674","IsPullRequest":true,"CreatedAt":"2018-09-24T14:47:15","Actor":"feiyun0112","Number":"998","RawContent":null,"Title":"Fix Issue #997","State":"open","Body":"Get name from ColumnNameAttribute\r\n","Url":"https://github.com/dotnet/machinelearning/pull/998","RelatedDescription":"Open PR \"Fix Issue #997\" (#998)"},{"Id":"363173813","IsPullRequest":false,"CreatedAt":"2018-09-24T14:33:49","Actor":"feiyun0112","Number":"997","RawContent":null,"Title":"ColumnNameAttribute not working for TextLoader","State":"open","Body":"### Issue\r\n\r\n[ML.NET Tutorial](https://www.microsoft.com/net/learn/machinelearning-ai/ml-dotnet-get-started-tutorial) define IrisData class like this:\r\n```\r\n       public class IrisData\r\n        {\r\n            [Column(\"0\")]\r\n            public float SepalLength;\r\n\r\n            [Column(\"1\")]\r\n            public float SepalWidth;\r\n\r\n            [Column(\"2\")]\r\n            public float PetalLength;\r\n\r\n            [Column(\"3\")]\r\n            public float PetalWidth;\r\n\r\n            [Column(\"4\")]\r\n            [ColumnName(\"Label\")]\r\n            public string Label;\r\n        }\r\n```\r\n\r\nIf I changed field name from Label to other name(like Label_1) \r\n```\r\n        public class IrisData\r\n        {\r\n            [Column(\"0\")]\r\n            public float SepalLength;\r\n\r\n            [Column(\"1\")]\r\n            public float SepalWidth;\r\n\r\n            [Column(\"2\")]\r\n            public float PetalLength;\r\n\r\n            [Column(\"3\")]\r\n            public float PetalWidth;\r\n\r\n            [Column(\"4\")]\r\n            [ColumnName(\"Label\")]\r\n            public string Label_1;\r\n        }\r\n```\r\n\r\nIt will throw Exception(Source column 'Label' not found):\r\n```\r\nAn unhandled exception of type 'System.Reflection.TargetInvocationException' occurred in System.Private.CoreLib.dll: 'Exception has been thrown by the target of an invocation.'\r\n Inner exceptions found, see $exception in variables window for more details.\r\n Innermost exception \t System.ArgumentOutOfRangeException : Source column 'Label' not found\r\n   at Microsoft.ML.Runtime.Data.OneToOneTransformBase.Bindings.Create(OneToOneTransformBase parent, OneToOneColumn[] column, ISchema input, ITransposeSchema transInput, Func`2 testType)\r\n   at Microsoft.ML.Runtime.Data.OneToOneTransformBase..ctor(IHostEnvironment env, String name, OneToOneColumn[] column, IDataView input, Func`2 testType)\r\n   at Microsoft.ML.Runtime.Data.TermTransform..ctor(ArgumentsBase args, ColumnBase[] column, IHostEnvironment env, IDataView input)\r\n   at Microsoft.ML.Runtime.Transforms.TextAnalytics.TermTransform(IHostEnvironment env, Arguments input)\r\n```\r\n\r\n\r\n### Fix\r\nIt can be fixed by setting name in ColumnAttribute\r\n```\r\n[Column(\"4\",\"Label\")]            \r\npublic string Label_1;\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/997","RelatedDescription":"Open issue \"ColumnNameAttribute not working for TextLoader\" (#997)"},{"Id":"362831926","IsPullRequest":true,"CreatedAt":"2018-09-22T06:42:05","Actor":"sfilipi","Number":"996","RawContent":null,"Title":"PcaTrainer as estimator","State":"open","Body":"Addresses part of #754 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/996","RelatedDescription":"Open PR \"PcaTrainer as estimator\" (#996)"},{"Id":"362830045","IsPullRequest":false,"CreatedAt":"2018-09-22T06:05:28","Actor":"kjsbedi","Number":"995","RawContent":null,"Title":"ML.NET 0.5.0 not getting installed on VS2017 ","State":"open","Body":"### System information\r\n\r\n- **OS version/Windows 10**:\r\n- **.NET Version (VS2017)**: \r\n\r\n### Issue\r\n\r\n- Trying to Install ML.NET 0.5\r\n\r\n-Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\t\tCould not install package 'Microsoft.ML 0.5.0'. You are trying to install this package into a project that targets '.NETFramework,Version=v4.5.2', but the package does not contain any assembly references or content files that are compatible with that framework. For more information, contact the package author.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/995","RelatedDescription":"Open issue \"ML.NET 0.5.0 not getting installed on VS2017 \" (#995)"},{"Id":"362820849","IsPullRequest":true,"CreatedAt":"2018-09-22T02:59:20","Actor":"cTxplorer","Number":"994","RawContent":null,"Title":"Made loop bound checking in hardware intrinsics more efficient","State":"open","Body":"Changed style to make loop bound checking more efficient.\r\n\r\n`Closes #835`","Url":"https://github.com/dotnet/machinelearning/pull/994","RelatedDescription":"Open PR \"Made loop bound checking in hardware intrinsics more efficient\" (#994)"},{"Id":"362806774","IsPullRequest":true,"CreatedAt":"2018-09-21T23:59:10","Actor":"wschin","Number":"992","RawContent":null,"Title":"Fix a conversion bug in KeyToVectorTransform.","State":"open","Body":"This PR addresses #971 and #1010  with the following changes.\r\n\r\n(1) A ReduceSum is missing when Bag+ for merging\r\n    all features' one-hot vectors\r\n(2) Since this conversion depends on the input shape,\r\n    an API is added to retrieve shape of existing\r\n    variables.\r\n(3) Change the starting element of ONNX OneHotEncoder to 0 because the first valid key value (aka 1) gets mapped to 0.\r\n\r\nThis PR hasn't been verified with a runtime due to a potential bug in their interface.","Url":"https://github.com/dotnet/machinelearning/pull/992","RelatedDescription":"Open PR \"Fix a conversion bug in KeyToVectorTransform.\" (#992)"},{"Id":"362806130","IsPullRequest":true,"CreatedAt":"2018-09-21T23:53:46","Actor":"zeahmed","Number":"991","RawContent":null,"Title":"Converted Feature selection transforms in to transformers/estimators.","State":"open","Body":"This PR implements a work item related to #754.\r\n\r\nThe following transforms were converted in this PR.\r\n- CountFeatureSelectionTransform\r\n- MutualInformationFeatureSelectionTransform\r\n","Url":"https://github.com/dotnet/machinelearning/pull/991","RelatedDescription":"Open PR \"Converted Feature selection transforms in to transformers/estimators.\" (#991)"},{"Id":"362805360","IsPullRequest":false,"CreatedAt":"2018-09-21T23:47:47","Actor":"abgoswam","Number":"990","RawContent":null,"Title":"DnnAnalyzer does not work with TensorFlow's SavedModel format","State":"open","Body":"Currently the DnnAnalyzer only works with frozen models.\r\n\r\nWe need to fix it so it also works for TensorFlow's SavedModel format","Url":"https://github.com/dotnet/machinelearning/issues/990","RelatedDescription":"Open issue \"DnnAnalyzer does not work with TensorFlow's SavedModel format\" (#990)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-09-25T05:30:34.6065145Z","RunDurationInMilliseconds":999}