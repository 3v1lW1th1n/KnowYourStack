{"Data":{"Blog":{"FeedItems":[{"Title":"Take a Break with Azure Functions","PublishedOn":"2017-12-22T05:41:48+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"So, it&#8217;s the Holidays. The office is empty, the boss is away, and you&#8217;ve got a bit of free time on your hands. How about learning a new skill and having some fun? Azure Functions are a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/21/take-a-break-with-azure-functions/","RawContent":null},{"Title":"Testing ASP.NET Core MVC web apps in-memory","PublishedOn":"2017-12-07T17:00:35+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written and submitted by Javier Calvarro Nelson, a developer on the ASP.NET Core MVC team Testing is an important part of the development process of any app. In this blog post...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/07/testing-asp-net-core-mvc-web-apps-in-memory/","RawContent":null},{"Title":"Configuring HTTPS in ASP.NET Core across different platforms","PublishedOn":"2017-11-29T17:00:12+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As the web moves to be more secure by default, it&#8217;s more important than ever to make sure your websites have HTTPS enabled. And if you&#8217;re going to use HTTPS in production its a good idea...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/29/configuring-https-in-asp-net-core-across-different-platforms/","RawContent":null},{"Title":"Improve website performance by optimizing images","PublishedOn":"2017-11-28T18:02:29+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We all want our web applications to load as fast as possible to give the best possible experience to the users. One of the steps to achieve that is to make sure the images we use are as optimized as...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/28/improve-website-performance-by-optimizing-images/","RawContent":null},{"Title":"Orchard Core Beta 1 released","PublishedOn":"2017-11-21T19:32:10+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This is a guest post by Sebastien Ros on behalf of the Orchard community Two years ago, the Orchard community started developing Orchard on .NET Core. After 1,500 commits, 297,000 lines of code, 127...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/21/orchard-core-beta-annoucement/","RawContent":null},{"Title":"Announcing .NET 4.7.1 Tools for the Cloud","PublishedOn":"2017-11-17T17:41:35+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today we are releasing a set of providers for ASP.NET 4.7.1 that make it easier than ever to deploy your applications to cloud services and take advantage of cloud-scale features.  This release...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/17/announcing-net-4-7-1-tools-for-the-cloud/","RawContent":null},{"Title":"Improvements to Azure Functions in Visual Studio","PublishedOn":"2017-11-15T19:00:43+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"We&#8217;re excited to announce several improvements to the Azure Functions experience in Visual Studio as part of the latest update to the Azure Functions tools on top of Visual Studio 2017 v15.5....","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/15/improvements-to-azure-functions-in-visual-studio/","RawContent":null},{"Title":"Creating a Minimal ASP.NET Core Windows Container","PublishedOn":"2017-11-09T16:18:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post by Mike Rousos One of the benefits of containers is their small size, which allows them to be more quickly deployed and more efficiently packed onto a host than virtual machines...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/09/creating-a-minimal-asp-net-core-windows-container/","RawContent":null},{"Title":"Publishing a Web App to an Azure VM from Visual Studio","PublishedOn":"2017-11-01T22:35:42+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We know virtual machines (VMs) are one of the most popular places to run apps in Azure, but publishing to a VM from Visual Studio has been a tricky experience for some. So, we’re pleased to announce...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/01/publishing-a-web-app-to-an-azure-vm-from-visual-studio/","RawContent":null},{"Title":"Recent updates for publishing","PublishedOn":"2017-10-31T18:18:45+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We have recently added a few interesting features for ASP.NET publishing. The updates include: Container Registry Publish Updates Create publish profile without publishing In this post, we will...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/31/recent-updates-for-publishing/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7059033453","Type":"IssuesEvent","CreatedAt":"2018-01-04T23:02:11","Actor":"hscanlan","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2742","RelatedDescription":"Opened issue \"The remote party closed the WebSocket connection without completing the close handshake\" (#2742) at aspnet/Home","RelatedBody":"I have a WebSocket middleware in a .NET CORE 2.0.1 WebAPI project. \r\n\r\nI have a separate \"FrontEnd\" project, which connects fine and allows messages to be passed back and forth easily.\r\n\r\nI want to be able to send messages from my Controller to my site, so I extended my WebSocketHandler and created an abstract RecieveAsync method to override and then call via my controller.\r\n\r\nEverything works as expected, UNTIL the page is refreshed or the client leaves and comes back.\r\n\r\nThe error comes from the await SendMessageAsync(value, message) function. The website says the connection is successful on refresh / return, but the API Middleware throws the below error.\r\n\r\n{System.Net.WebSockets.WebSocketException (0x80004005): The remote party closed the WebSocket connection without completing the close handshake. ---> System.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'FrameResponseStream'.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameResponseStream.ValidateState(CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameResponseStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameDuplexStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)\r\n   at System.Net.WebSockets.ManagedWebSocket.SendFrameLockAcquiredNonCancelableAsync(MessageOpcode opcode, Boolean endOfMessage, ArraySegment`1 payloadBuffer)\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at API.WebSocketHandler.<SendMessageAsync>d__7.MoveNext() in C:\\Projects\\API\\API\\WebSocketManager\\WebSocketHandler.cs:line 35\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at API.WebSocketHandler.<SendMessageToAllAsync>d__9.MoveNext() in C:\\Projects\\API\\API\\WebSocketManager\\WebSocketHandler.cs:line 62}\r\n\r\n\r\n\r\nWebSocketHandler:\r\n`using CryptoGameAPI.Models.Game;\r\nusing Newtonsoft.Json;\r\nusing System;\r\nusing System.Net.WebSockets;\r\nusing System.Text;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace CryptoGameAPI\r\n{\r\n    public abstract class WebSocketHandler\r\n    {\r\n        protected WebSocketConnectionManager WebSocketConnectionManager { get; set; }\r\n\r\n        public WebSocketHandler(WebSocketConnectionManager webSocketConnectionManager)\r\n        {\r\n            WebSocketConnectionManager = webSocketConnectionManager;\r\n        }\r\n\r\n        public virtual async Task OnConnected(WebSocket socket)\r\n        {\r\n            WebSocketConnectionManager.AddSocket(socket);\r\n        }\r\n\r\n        public virtual async Task OnDisconnected(WebSocket socket)\r\n        {\r\n            await WebSocketConnectionManager.RemoveSocket(WebSocketConnectionManager.GetId(socket));\r\n        }\r\n\r\n        public async Task SendMessageAsync(WebSocket socket, string message)\r\n        {\r\n            if (socket.State != WebSocketState.Open)\r\n                return;\r\n\r\n            await socket.SendAsync(buffer: new ArraySegment<byte>(array: Encoding.ASCII.GetBytes(message),\r\n                                                                  offset: 0,\r\n                                                                  count: message.Length),\r\n                                   messageType: WebSocketMessageType.Text,\r\n                                   endOfMessage: true,\r\n                                   cancellationToken: CancellationToken.None);\r\n        }\r\n\r\n        public async Task SendMessageAsync(string socketId, string message)\r\n        {\r\n            try\r\n            {\r\n                await SendMessageAsync(WebSocketConnectionManager.GetSocketById(socketId), message);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                throw ex;\r\n            }\r\n        }\r\n\r\n        public async Task SendMessageToAllAsync(string message)\r\n        {\r\n            try\r\n            {\r\n\r\n                foreach (var pair in WebSocketConnectionManager.GetAll())\r\n                {\r\n                    if (pair.Value.State == WebSocketState.Open)\r\n                        await SendMessageAsync(pair.Value, message);\r\n                }\r\n\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                throw ex;\r\n            }\r\n        }\r\n\r\n        public abstract Task ReceiveAsync(WebSocket socket, WebSocketReceiveResult result, byte[] buffer);\r\n    }\r\n}`\r\n\r\nThe override:\r\n`using API.Models.Game;\r\nusing Newtonsoft.Json;\r\nusing System.Net.WebSockets;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace API\r\n{\r\n    public class MessageHandler : WebSocketHandler\r\n    {\r\n        public MessageHandler(WebSocketConnectionManager webSocketConnectionManager) : base(webSocketConnectionManager)\r\n        {\r\n        }\r\n\r\n        public override async Task OnConnected(WebSocket socket)\r\n        {\r\n            await base.OnConnected(socket);\r\n\r\n            var socketId = WebSocketConnectionManager.GetId(socket);\r\n            await SendMessageToAllAsync($\"{socketId} is now connected\");\r\n        }\r\n\r\n        public override async Task ReceiveAsync(WebSocket socket, WebSocketReceiveResult result, byte[] buffer)\r\n        {\r\n            var socketId = WebSocketConnectionManager.GetId(socket);\r\n            \r\n            var message = $\": {Encoding.UTF8.GetString(buffer, 0, result.Count)}\";\r\n\r\n            var cmhm = new MessageHandlerModel();\r\n            cmhm.MessageType = \"Chat\";\r\n            cmhm.Message = message;\r\n\r\n            string json = await Task.Run(() => JsonConvert.SerializeObject(cmhm));\r\n            await SendMessageToAllAsync(json);\r\n        }\r\n    }\r\n}`\r\n\r\nHow I'm sending the message from the controller:\r\n\r\n`\r\n        [HttpGet]\r\n        public async Task SendMessage([FromQueryAttribute]CryptoMessageHandlerModel cmhm)\r\n        {\r\n            string json = await Task.Run(() => JsonConvert.SerializeObject(cmhm));\r\n            await _cryptoMessageHandler.SendMessageToAllAsync(json);\r\n        }\r\n`\r\n\r\n"},{"Id":"7058141020","Type":"IssuesEvent","CreatedAt":"2018-01-04T19:09:16","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2296","RelatedDescription":"Closed issue \"Unable to write to response using Action filter - OnActionExecuted method\" (#2296) at aspnet/Home","RelatedBody":"It is caused by code:\r\n`context.HttpContext.Response.Body.Write(bytes, 0, bytes.Length);`\r\nThe bytes contains text converted to bytes using `Encoding.Unicode.GetBytes` method.\r\n\r\nGetting below error:\r\n```\r\nSystem.InvalidOperationException: Headers are read-only, response has already started.\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameHeaders.ThrowHeadersReadOnlyException()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameHeaders.Microsoft.AspNetCore.Http.IHeaderDictionary.set_Item(String key, StringValues value)\r\n   at Microsoft.AspNetCore.Http.Internal.DefaultHttpResponse.set_ContentType(String value)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.<ExecuteAsync>d__22.MoveNext()\r\n```\r\nMore details:\r\nAsp.Net Core: 2.0\r\nVisual Studio: 2017\r\nOS: Windows 10 1607\r\n\r\n"},{"Id":"7058113554","Type":"IssuesEvent","CreatedAt":"2018-01-04T19:02:18","Actor":"jbagga","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2656","RelatedDescription":"Closed issue \"Get final package descriptions\" (#2656) at aspnet/Home","RelatedBody":"_From @Eilon on Wednesday, November 8, 2017 9:43:05 AM_\r\n\r\nWe put temporary ones in this PR: https://github.com/aspnet/Routing/pull/490\r\n\r\n_Copied from original issue: aspnet/Routing#491_"},{"Id":"7054508636","Type":"IssuesEvent","CreatedAt":"2018-01-04T01:14:42","Actor":"embryologist","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2740","RelatedDescription":"Opened issue \"AntiForgeryToken validation keeps failing\" (#2740) at aspnet/Home","RelatedBody":"I am developing a web `API` app running using `asp.net core2` and `Angular`. The detailed development environment config is [here][1].\r\nI am trying to configure `AntiForgeryToken` validation but it keeps failing. I followed the config. [here][2], but I had to modify it as my angular app and asp.net servers are running on two different ports because the front end startup doesn't generate the token. I kick start the backend by calling an `API` path (`/api/Account/ContactInitialization`) at the app component `ngOnInit` which allowed me to generate the token. \r\nThe config is shown below,\r\n\r\n`IServiceCollection` Service:\r\n\r\n            services.AddAntiforgery(options =>\r\n                    {\r\n                        options.HeaderName = \"X-CSRF-TOKEN\";\r\n                        options.SuppressXFrameOptionsHeader = false;\r\n                    });\r\n\r\nand at `IApplicationBuilder Configure`:\r\n\r\n    app.Use(next => context =>\r\n                    {\r\n                        string path = context.Request.Path.Value;\r\n                        if (\r\n    \r\n                            string.Equals(path, \"/\", StringComparison.OrdinalIgnoreCase) ||\r\n                            string.Equals(path, \"/api/Account/ContactInitialization\", StringComparison.OrdinalIgnoreCase) ||\r\n                            string.Equals(path, \"/index.html\", StringComparison.OrdinalIgnoreCase))\r\n                        {\r\n                            // We can send the request token as a JavaScript-readable cookie, \r\n                            // and Angular will use it by default.\r\n                             var tokens = antiforgery.GetAndStoreTokens(context);\r\n                            context.Response.Cookies.Append(\"XSRF-TOKEN\", tokens.RequestToken,\r\n                                new CookieOptions() { HttpOnly = false });\r\n                        }\r\n    \r\n                        return next(context);\r\n                    });\r\n\r\nasp.net. generates two set of keys, \r\n\r\n[![enter image description here][3]][3]\r\n\r\nI decorated my method with `[ValidateAntiForgeryToken]` and angular includes `XSRF-TOKEN` cookie content in my header request. yet I keep receiving a `400 (Bad Request)` response after calling the `API`! what am I missing here?\r\n\r\nController Method,\r\n\r\n        [Authorize]\r\n        [ValidateAntiForgeryToken]\r\n        [HttpPost]\r\n        public IEnumerable<string> AutherizeCookie()\r\n        {\r\n            return new string[] { \"Hello\", \"Auth Cookie\" };\r\n        }\r\n\r\nmy detailed header request looks like below,\r\n\r\n```\r\nPOST /api/Values/AutherizeBaseController HTTP/1.1\r\nHost: localhost:4200\r\nConnection: keep-alive\r\nContent-Length: 2\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nAccept: application/json, text/plain, */*\r\nOrigin: http://localhost:4200\r\nAuthorization: **Bearer** eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhaG1hZCIsImp0aSI6IjJhMTA1NzJjLWY2MWMtNGQwNi05ZjEzLThmOWZlOTUyYjQ4NyIsImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3QvIiwiaWF0IjoxNTE1MDI4MzUzLCJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6ImNhYjIxYTdlLTMwZjAtNDJhNi05NGIyLWNiYjczN2MzNmNmMyIsImh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3dzLzIwMDUvMDUvaWRlbnRpdHkvY2xhaW1zL25hbWUiOiJhaG1hZCIsIkRpc3BsYXlOYW1lIjoiQWJ1IE1haXphciIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9jbGFpbXMvc2VyaWFsbnVtYmVyIjoiZjgyZDdlZTgtOTA5ZC00MTMzLTlmZjUtMjczYTBjMzAxNDgyIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy91c2VyZGF0YSI6ImNhYjIxYTdlLTMwZjAtNDJhNi05NGIyLWNiYjczN2MzNmNmMyIsImh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vd3MvMjAwOC8wNi9pZGVudGl0eS9jbGFpbXMvcm9sZSI6WyJEYXRhYmFzZSBTdXBlciBVc2VyIiwiQWRtaW5pc3RyYXRvciJdLCJuYmYiOjE1MTUwMjgzNTIsImV4cCI6MTUxNTAzMTk1MiwiYXVkIjoiaHR0cDovL2xvY2FsaG9zdC8ifQ.Jhnh-vRSANR0_dDqzBOEwtG5BxI3V6pX28Zdc5IQZMw\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36\r\nContent-Type: application/json\r\nReferer: http://localhost:4200/dbapp\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-US,en;q=0.9\r\nCookie: .AspNetCore.Antiforgery.jY5Bh2HGy8s=CfDJ8MxOovOd259BlsEMLYWAq1gbumuwD_ifl51KgQeExpEGd81dp7zarQ2mZ0C4ZexLTiPJXNSbrCR06mzi2OxqeXh4ZcrQGuo-K4yyIYG3bUhIy1RiXdA6IuIjcYP13ylyWJeNJ7FiOzm3c5AGvsF2YTk; XSRF-TOKEN=CfDJ8MxOovOd259BlsEMLYWAq1gds0ipk9X5sh3kqK20RnvPBSoo5x5EpzzGyncHjx3-PXX40Orc9NUUlpTejlL8RWTDGB9QUuOk_PCWudkYXyiqdebgcnfuQNQt_2fJkhyijawUSGsX9HmATMsZrHWvGOk; .AspNetCore.Identity.Application=CfDJ8MxOovOd259BlsEMLYWAq1gHJUrf-RKdswXaTtdaDrRIDxhC1FejiDQPMXNMUkox-DIzcIblxOgwwkg-EdQd6q0B0BQd4V5G2tTdncGJWrfqaBwbhVCCIOFNxsJZ8Px0KiSeaL_chJ27VN9M3dSnhIm30gGVN8IEzzhA8JicJUooK2O4Dr4OCzBuYvJKez4A35nnO8XFxFmncSq5vc18hhgH4-CFNKPRT24t1XgN8s_FpV2hdNtSoqMVFlKvwQaiDieM3tLRWsYnjpvDprmCr-MPTNA5oCBEVE56vOc-gViAPPBrA_AVDH0EaOBOBFVrBP2UFUOHE0wz3y8jsHIOCRNOeowyQnPsBMobywd1bmioTi2LTX0tk4FbC_Y3kE7n4BkggOQiOE-XaXifoNoxaWPQTkWtClr-hVWW1orQZ7hDUIA_VyGxsrOetEd1KMLMVQD_fGAOrBBm4qJZvGFGqq1RWgAGdjf3c15Lrpj4DrSDyF7nICyn_z2LOQkXTQ81VByrqAy4C_boSbCjAO1YlpnBKJpVkrsUPr8szj6kwilumwhSB-PXAYU7Z8nVM3XcgKIvRWDYxLqS8AQZU7-Z4roMmAYlRrqUziEcpnSL5LNJgMUaBnFESpxFpnXmyOiFEKp6-W0f02uwrRhn__eP8vidr27cANwxghDxP92V-b8Wya5Ogbqw_DMmNYweEx1jbAYAqJOhF8Jx_QFoGIUQT8EEeAqsaCNIrMVVQsTWfqRkD_t4RDOaRF5zguTmKl5r_MQcM6xyOtj-UtzhWU8RzetumCQ4i2z7-_qnCLfpuEax3BrdTGMlkVUas__Up6-l_A\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n  [1]: https://medium.com/@levifuller/building-an-angular-application-with-asp-net-core-in-visual-studio-2017-visualized-f4b163830eaa\r\n  [2]: https://docs.microsoft.com/en-us/aspnet/core/security/anti-request-forgery\r\n  [3]: https://i.stack.imgur.com/UqhEt.png"},{"Id":"7054439278","Type":"IssuesEvent","CreatedAt":"2018-01-04T00:44:47","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2739","RelatedDescription":"Closed issue \"Question: specifing non dafault encoding\" (#2739) at aspnet/Home","RelatedBody":"Good day, I am writing with a question to you, because have found no exact tutorials for my problem.\r\n\r\nOn our project we need to deal with 8-bit encoding for data transfer and we need exactly ISO-8859-6 encoding for JSON and HTML output of aspnet core webservice. And server would be on Linux. Netcoreapp 2.0.  So the question is :\r\n1. How to produce Json in such encoding?\r\n2. How to deserialize requests in such encoding in model binding?\r\n3. How to tell Razor to produce HTML-Angular webpage in such encoding?\r\n4. Maybe there is any way to tell ASP.Net Core to use some encoding in the whole application? (like web.config had previously)\r\n\r\nI tried to override the JSON Formatter behavior on the way like:\r\n\r\n``` csharp\r\n    class ForcedISO88596OutputJsonFormatter : JsonOutputFormatter\r\n    {\r\n        public ForcedISO88596OutputJsonFormatter(\r\n            JsonSerializerSettings serializerSettings,\r\n            ArrayPool<char> charPool)\r\n            : base(serializerSettings, charPool)\r\n        {\r\n        }\r\n\r\n        public override Encoding SelectCharacterEncoding(OutputFormatterWriteContext context)\r\n        {\r\n            EncodingProvider provider = CodePagesEncodingProvider.Instance;\r\n            Encoding encoding = provider.GetEncoding(\"iso_8859-6\");\r\n            return encoding;\r\n        }\r\n    }\r\n    public class Startup\r\n    {\r\n        public Startup(IConfiguration configuration)\r\n        {\r\n            Configuration = configuration;\r\n        }\r\n\r\n        public IConfiguration Configuration { get; }\r\n\r\n        // This method gets called by the runtime. Use this method to add services to the container.\r\n        public void ConfigureServices(IServiceCollection services)\r\n        {\r\n            services.AddMvc();\r\n            services.AddMvcCore(options => { //This string I added\r\n                options.OutputFormatters.Add(new ForcedISO88596OutputJsonFormatter(new JsonSerializerSettings(), ArrayPool<char>.Shared));\r\n            }).AddJsonFormatters();\r\n        }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n        {\r\n            if (env.IsDevelopment())\r\n            {\r\n                app.UseDeveloperExceptionPage();\r\n                app.UseWebpackDevMiddleware(new WebpackDevMiddlewareOptions\r\n                {\r\n                    HotModuleReplacement = true\r\n                });\r\n            }\r\n            else\r\n            {\r\n                app.UseExceptionHandler(\"/Home/Error\");\r\n            }\r\n\r\n            app.UseStaticFiles();\r\n\r\n            app.UseMvc(routes =>\r\n            {\r\n                routes.MapRoute(\r\n                    name: \"default\",\r\n                    template: \"{controller=Home}/{action=Index}/{id?}\");\r\n\r\n                routes.MapSpaFallbackRoute(\r\n                    name: \"spa-fallback\",\r\n                    defaults: new { controller = \"Home\", action = \"Index\" });\r\n            });\r\n        }\r\n    }\r\n```\r\n\r\n\r\n``` csharp\r\n[Route(\"api/[controller]\")]\r\n    public class DataController : Controller\r\n    {\r\n        [HttpGet()]\r\n        public IActionResult ArabicResponse()\r\n        {\r\n            Response.Headers[\"Content-Type\"] += \"application/json;charset=ISO-8859-6\";\r\n            return Ok(new string[] { \"مرحبا\", \"hello\" });\r\n        }\r\n\r\n        [HttpPost()]\r\n        public IActionResult Data(Class data)\r\n        {\r\n            Response.Headers[\"Content-Type\"] += \"application/json;charset=ISO-8859-6\";\r\n            return Ok(data);\r\n        }\r\n\r\n        public class Class\r\n        {\r\n            public string ComponentName { get; set; }\r\n            public int ComponentId { get; set; }\r\n        }\r\n    }\r\n}\r\n\r\n```"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7059178596","Type":"PullRequestEvent","CreatedAt":"2018-01-04T23:53:06","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1274","RelatedDescription":"Opened pull request \"[WIP First Pass] Split MsgPack into separate assembly\" (#1274) at aspnet/SignalR","RelatedBody":"Got the basics finished and got it to compile. Had to dash out for an afternoon errand and want to get this in front of as many eyes as possible as quick as possible because it's going to land a little hot.\r\n\r\nThis adds three new packages:\r\n* M.A.SignalR.Protocols.MsgPack - Contains the core (pubternal) IHubProtocol implementation for MsgPack\r\n* M.A.SignalR.MsgPack - Contains code to attach MsgPack protocol on the server\r\n* M.A.SignalR.Client.MsgPack - Contains code to attach MsgPack protocol on the client\r\n\r\nI had to move the JSON/MsgPack options off of HubOptions and into their own options types.\r\n\r\nTests and a tidy-up pass are coming tomorrow most likely, but the core architectural stuff should be there.\r\n\r\nFixes #1271 "},{"Id":"7059090655","Type":"IssuesEvent","CreatedAt":"2018-01-04T23:21:16","Actor":"MouthOfMadness","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1273","RelatedDescription":"Opened issue \"Inject a UserId into the OnConnect function?\" (#1273) at aspnet/SignalR","RelatedBody":"Is there a way to inject a userId into the OnConnect function to associate with the ConnectionId?  I cannot use the Authorize attribute for Identity.\r\n\r\n[Authorize] <-- I need to remove this.\r\npublic class MyHub : Hub\r\n{\r\n\r\nCurrent:\r\npublic override Task OnConnectedAsync()\r\n      {\r\n            var name = Context.User.Identity.Name;\r\n\r\n\r\nSuggested:\r\npublic override Task OnConnectedAsync(string id)\r\n      {\r\n            var name = id;\r\n            "},{"Id":"7059061127","Type":"IssuesEvent","CreatedAt":"2018-01-04T23:11:12","Actor":"Antaris","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1272","RelatedDescription":"Opened issue \"[Question] Creating Hub instance from IHostedService\" (#1272) at aspnet/SignalR","RelatedBody":"Hi Team,\r\n\r\nIn my application design, I can have multiple instances of an ASP.NET Core application communicating with each other and backend services over RabbitMQ (via EasyNetQ). I have both publisher and consumer `IHostedServices` that send notification messages to perform actions. Once an action is completed, a notification is then broadcast over RabbitMQ, picked up by a consumer declared by an `IHostedService`. \r\n\r\nMy front-end is an Angular application that has a SignalR integration with the backend. Is it possible to access a `Hub` instance from an `IHostedService` so I can push notifications received from RabbitMQ down to connected clients?"},{"Id":"7058856614","Type":"IssuesEvent","CreatedAt":"2018-01-04T22:10:59","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1271","RelatedDescription":"Opened issue \"[CS] Split MsgPack support into a separate NuGet Package\" (#1271) at aspnet/SignalR","RelatedBody":"Right now, SignalR depends upon `MsgPack-CLI` to provide MsgPack support in the core client/server packages. We'd rather separate it out. My goal will be to provide a single `Microsoft.AspNetCore.SignalR.Protocols.MsgPack` package that can be plugged in to both the server and the client, but that may not be possible if we want to hang extension methods off things in the server and client. If I can't do that I'll build a `...SignalR.MsgPack` and `...SignalR.Client.MsgPack` pair."},{"Id":"7058849806","Type":"IssuesEvent","CreatedAt":"2018-01-04T22:09:07","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1270","RelatedDescription":"Opened issue \"Split MsgPack support into a separate NPM module\" (#1270) at aspnet/SignalR","RelatedBody":"Right now, MsgPack support in the JS client is kinda half built-in. The NPM module requires `msgpack5` and supports MsgPack, but the browser files split it up. I propose we use two separate NPM modules instead:\r\n\r\n1. `@aspnet/signalr-client` - Contains the core client and JSON protocol.\r\n2. `@aspnet/signalr-protocol-msgpack` - Contains the MsgPack protocol.\r\n\r\nThe user will be able to easily plug MsgPack in via something like the following:\r\n\r\nIn Node using TypeScript or ES Modules:\r\n\r\n```javascript\r\nimport MsgPackHubProtocol from \"@aspnet/signalr-protocol-msgpack\"\r\n\r\nlet connection = new HubConnection(url, { protocol: new MsgPackHubProtocol() });\r\n```\r\n\r\nIn Node using CommonJS\r\n\r\n```javascript\r\nconst MsgPackHubProtocol = require(\"@aspnet/signalr-protocol-msgpack\");\r\n\r\nlet connection = new HubConnection(url, { protocol: new MsgPackHubProtocol() });\r\n```\r\n\r\nIn the Browser using UMD distribution:\r\n\r\n```html\r\n<script src=\"/lib/signalr-client.umd.min.js\"></script>\r\n<script src=\"/lib/msgpack5.min.js\"></script>\r\n<script src=\"/lib/signalr-protocol-msgpack.umd.min.js\"></script>\r\n<script>\r\n// setup url, etc\r\nvar connection = new signalR.HubConnection(url, { protocol: new signalR.protocols.msgpack() });\r\n</script>\r\n```\r\n\r\nAt some point in the future, I've got an idea for something a more automatic, but it's a little tricksy and I don't think I like it yet :)"},{"Id":"7057846206","Type":"PullRequestEvent","CreatedAt":"2018-01-04T17:56:40","Actor":"pakrym","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1250","RelatedDescription":"Merged pull request \"React to pipeline changes\" (#1250) at aspnet/SignalR","RelatedBody":""}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7059560702","Type":"IssuesEvent","CreatedAt":"2018-01-05T02:30:10","Actor":"clement911","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7195","RelatedDescription":"Opened issue \"ModelState error \"Request timed out.\" on OnActionExecutionAsync\" (#7195) at aspnet/Mvc","RelatedBody":"I'm using asp.net core mvc 2.0 on full .net and I'm experiencing an issue in an azure prod web app that I don't understand.\r\n\r\nI have a custom `IAsyncActionFilter` and in the `OnActionExecutionAsync` I inspect `context.ModelState` and sometimes there is an error saying \"Request timed out.\" (Key is empty string)\r\n\r\nIf I understand correctly OnActionExecutionAsync executes directly after the model binding, so how could there be a timeout? and how do I track the source?\r\n\r\n```\r\npublic async Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next)\r\n        {\r\n            if (!context.ModelState.IsValid)\r\n            {\r\n                //context.ModelState dictionary contains a \"Request timed out.\" entry.\r\n...\r\n            }\r\n...\r\n        }\r\n```\r\n\r\nThanks"},{"Id":"7059239312","Type":"PullRequestEvent","CreatedAt":"2018-01-05T00:15:40","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7194","RelatedDescription":"Opened pull request \"Allow `null` or empty `fullName` in one special case\" (#7194) at aspnet/Mvc","RelatedBody":"- #6662\r\n- users can now provide a `name` or `data-valmsg-for` attribute to avoid issues\r\n  - affects `<input>`, `<select>`, `<textarea>` elements and validation message `<div>`s\r\n- remove `fullName` check in `DefaultHtmlGenerator.GetCurrentValues(...)` entirely\r\n\r\nThe new workaround is _not_ identical to changing `ViewData.TemplateInfo.HtmlFieldPrefix`\r\n- does not change where expression values are found in `ModelState` or `ViewData`\r\n- likely needs to be combined with additional workarounds i.e. for advanced use only\r\n\r\nnits:\r\n- clean up some excessive argument naming; add a few missing argument names\r\n- take VS suggestions in changed classes e.g. inline a few `out` variable declarations\r\n- clean up some test data"},{"Id":"7058594576","Type":"IssuesEvent","CreatedAt":"2018-01-04T21:02:50","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/5843","RelatedDescription":"Closed issue \"Add Functional Tests: Model Binding\" (#5843) at aspnet/Mvc","RelatedBody":""},{"Id":"7058577673","Type":"IssuesEvent","CreatedAt":"2018-01-04T20:58:34","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6238","RelatedDescription":"Closed issue \"Add FSharpWebsite.fsproj to Mvc.sln\" (#6238) at aspnet/Mvc","RelatedBody":"As per discussion: https://github.com/aspnet/Mvc/pull/6231#issuecomment-299285843\r\n\r\nWe can't do it yet because the F# tools for VS+.NETCore aren't yet shipped, so the `.fsproj` would never load in VS for anyone.\r\n\r\nOnce those tools have shipped, add this project to the solution, and check the developer experience both with and without them. As long as it's not a serious problem if you don't have the F# tools, we can go ahead. But if it is a serious problem, reconsider."},{"Id":"7058556663","Type":"IssuesEvent","CreatedAt":"2018-01-04T20:53:15","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6298","RelatedDescription":"Closed issue \"Razor codegen for MVC doesn't sanitize keywords in class/namespace names\" (#6298) at aspnet/Mvc","RelatedBody":"The new `@namespace` directive makes it easily possible to end up with a reserved word in the class name or namespace name.\r\n\r\nConsider the default template, and a page like:\r\n`/Pages/registraton/class/edit.cshtml`\r\n\r\nYou'll get a generated namespace like `MyApp.registration.class` which is invalid."},{"Id":"7058443359","Type":"IssuesEvent","CreatedAt":"2018-01-04T20:24:32","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6576","RelatedDescription":"Closed issue \"Attribute to generate “action” method for <form> tag builder (including query string)\" (#6576) at aspnet/Mvc","RelatedBody":"The built-in FormTagHelper supports \"asp-action\", \"asp-controller\", \"asp-route\" and other attributes. They work fine. But I don't want to manually specify their values for each form. Is it possible to automatically generate \"action\" attribute based on the current page URL?\r\n\r\nAfter looking at implementation of FormTagHelper I see it uses IHtmlGenerator. When I manually invoke IHtmlGenerator.GenerateForm(this.ViewContext, null,null,null,\"post\", null) in my view, then it works just great. The form is generated automatically with a valid \"action\" method (including query string). But can I get the same result with FormTagBuilder?\r\n\r\nAccording to this implementation I need the following line of code to be invoked in FormTagBuilder. But with \"action\" and \"controller\" set to null\r\n\r\n```c#\r\ntagBuilder = Generator.GenerateForm(\r\n                        ViewContext,\r\n                        Action,\r\n                        Controller,\r\n                        Fragment,\r\n                        routeValues,\r\n                        method: null,\r\n                        htmlAttributes: null);\r\n```\r\n\r\nLooks like `asp-all-route-data=\"@null\"` will work. It looks ugly but it works\r\n\r\nIt would be great if you can add a new \"asp-generate-action\" (or any other name) attribute. If set to \"true\", then it'll automatially generate the \"action\" attribute of the form\r\n\r\n-----\r\n\r\nEdited for style only by @Eilon."},{"Id":"7058082407","Type":"IssuesEvent","CreatedAt":"2018-01-04T18:54:38","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7193","RelatedDescription":"Opened issue \"Add fallback folder to Razor Pages\" (#7193) at aspnet/Mvc","RelatedBody":"With the advent of Razor Pages in class libraries, we'd like to allow a way for application authors to \"override\" certain pages. The convention here is to place any overrideable files under the directory `{RootDirectory}/Shared`. \r\n\r\n* Routing for files under the fallback directory will use the path relative to the fallback directory e.g. `/Pages/Shared/Dir1/Dir2/Home.cshtml` will have the route `/Dir1/Dir2/Home`. \r\n* The file is overridden by a root directory rooted file that has the same path e.g. `/Pages/Dir1/Dir2/Home.cshtml` supersedes `/Pages/Shared/Dir1/Dir2/Home.cshtml`. \r\n* Relative path redirects for files inside and outside the fallback directory should just work:\r\n\r\nConsider\r\n\r\n```\r\n/Pages/\r\n    /Dir1/\r\n        Home.cshtml\r\n        _Partial.cshtml\r\n   /Shared/\r\n        /Dir1/\r\n            _Partial.cshtml\r\n            Home.cshtml\r\n            About.cshtml\r\n```\r\n\r\nThe following should just work.\r\n```\r\n// /Pages/Shared/Dir1/About.cshtml\r\nOnPost() => Redirect(\"./Home\") // Should redirect to /Dir1/Home\r\n\r\n// /Pages/Dir1/Home.cshtml\r\nOnPost() => Redirect(\"./About\") // Should redirect to /Dir1/Shared/A\r\n```\r\n"},{"Id":"7057939742","Type":"IssuesEvent","CreatedAt":"2018-01-04T18:19:31","Actor":"danroth27","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/4603","RelatedDescription":"Closed issue \"Support validation and model binding attributes on action parameters\" (#4603) at aspnet/Mvc","RelatedBody":"``` c#\n[HttpGet]\n[Route(\"\")]\npublic async Task<IActionResult> Get([FromQuery(Name = \"name\")] String name)\n{\n    if (!ModelState.IsValid)\n        throw new Exception();\n}\n```\n\nIn the above snippet, if you call the action without any query string parameters the `ModelState` evaluates as valid and no exception is thrown.\n\nUnfortunately, `BindRequiredAttribute` is not allowed on method parameters and there doesn't appear to be any other tools for marking a parameter as required.  Of course, I can manually go through and null check everything, but I would much rather leverage `ModelState.IsValid` and `HttpBadRequest(ModelState)`.\n"},{"Id":"7057833000","Type":"IssuesEvent","CreatedAt":"2018-01-04T17:53:38","Actor":"danroth27","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6670","RelatedDescription":"Closed issue \"Clarify doc comments for special types for route-related 'values' parameters\" (#6670) at aspnet/Mvc","RelatedBody":"In the various URL helper extension methods there is a `values` parameter that can be a `RouteValueDictionary`, `IDictionary<string, object>`, or a POCO (object with properties), and it does the right conversion based on those. The doc comments of these overloads lack information on the two special types, so we should add details on those.\r\n\r\nhttps://github.com/aspnet/Mvc/blob/036dae292f0017a128170ea2d04fa7f06e353b38/src/Microsoft.AspNetCore.Mvc.Core/UrlHelperExtensions.cs#L53\r\n\r\n@javiercn - can you propose new text for this type of parameter, and then make the change everywhere? Should check the Routing repo in case there is a similar need there."}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7059095918","Type":"PullRequestEvent","CreatedAt":"2018-01-04T23:23:01","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1554","RelatedDescription":"Merged pull request \"Merge release/2.0.0 (without changes)\" (#1554) at aspnet/Identity","RelatedBody":"Resolves #1522 \r\n\r\nChanges on this branch were already cherry-picked to dev\r\n  "},{"Id":"7059082029","Type":"PullRequestEvent","CreatedAt":"2018-01-04T23:18:22","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1554","RelatedDescription":null,"RelatedBody":"Resolves #1522 \r\n\r\nChanges on this branch were already cherry-picked to dev\r\n  "},{"Id":"7059070694","Type":"PullRequestEvent","CreatedAt":"2018-01-04T23:14:25","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1554","RelatedDescription":"Closed pull request \"Merge release/2.0.0 (without changes)\" (#1554) at aspnet/Identity","RelatedBody":"Resolves #1522 \r\n\r\nChanges on this branch were already cherry-picked to dev\r\n  "},{"Id":"7059065255","Type":"IssuesEvent","CreatedAt":"2018-01-04T23:12:33","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1522","RelatedDescription":"Closed issue \"Merge all changes from release/2.0.0 back to dev\" (#1522) at aspnet/Identity","RelatedBody":"I'm not sure https://github.com/aspnet/Identity/pull/1485 made it back into dev. I tried merge the branches and there were a bunch of conflicts. We should look into this closer."},{"Id":"7059030766","Type":"PullRequestEvent","CreatedAt":"2018-01-04T23:01:24","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1554","RelatedDescription":"Opened pull request \"Merge release/2.0.0 (without changes)\" (#1554) at aspnet/Identity","RelatedBody":"Resolves #1522 "},{"Id":"7058669161","Type":"IssuesEvent","CreatedAt":"2018-01-04T21:22:06","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1541","RelatedDescription":"Reopened issue \"User name and email confusing\" (#1541) at aspnet/Identity","RelatedBody":"Hello!\r\nI was created ASP.Net Core project with individual accounts.\r\nAfter user registration User Name and Email are same.\r\nI was edit Profile page to change User Name, becouse I want to display user name, not email in top navbar.\r\nAt now I cant login, cause signInManager.PasswordSignIn need user_email in user name field.\r\nWhen I change user email, I still need to signin with user_name=old_user_email.\r\nIt's very confusing users and developers.\r\n\r\n"},{"Id":"7058668077","Type":"IssuesEvent","CreatedAt":"2018-01-04T21:21:49","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1541","RelatedDescription":"Closed issue \"User name and email confusing\" (#1541) at aspnet/Identity","RelatedBody":"Hello!\r\nI was created ASP.Net Core project with individual accounts.\r\nAfter user registration User Name and Email are same.\r\nI was edit Profile page to change User Name, becouse I want to display user name, not email in top navbar.\r\nAt now I cant login, cause signInManager.PasswordSignIn need user_email in user name field.\r\nWhen I change user email, I still need to signin with user_name=old_user_email.\r\nIt's very confusing users and developers.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7059903637","Type":"IssuesEvent","CreatedAt":"2018-01-05T05:13:55","Actor":"rynowak","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2241","RelatedDescription":"Closed issue \"ConnectionResetException with 2.0.0 kestrel running on netcoreapp2.1\" (#2241) at aspnet/KestrelHttpServer","RelatedBody":"We hit this in issue in JitBench running on the ASP.NET Core 2.0.0 libraries against latest bits of CoreFx. See https://github.com/aspnet/JitBench/issues/80\r\n\r\nThe easiest way to repro is:\r\nClone aspnet/JitBench\r\nrun appveyor.ps1 (that will fail)\r\ndotnet run or launch VS from the same console.\r\n\r\nJitBench will throw trying to do an HTTP request as part of it's measurements, but the more interesting part is that that site is unreachable using a browser.\r\n\r\n```\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.Internal.ConnectionResetException\r\n  HResult=0x80131620\r\n  Message=Error -4077 ECONNRESET connection reset by peer\r\n  Source=Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions\r\n  StackTrace:\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed()\r\n\r\nInner Exception 1:\r\nUvException: Error -4077 ECONNRESET connection reset by peer\r\n\r\n>\tMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.dll!Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed()\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.dll!Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.GetResult(ref Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadResult result)\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.dll!Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IReadableBufferAwaiter.GetResult()\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>.ProcessRequestsAsync()\tUnknown\r\n \tSystem.Private.CoreLib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state)\tUnknown\r\n \tSystem.Private.CoreLib.dll!System.Runtime.CompilerServices.AsyncTaskMethodBuilder<System.Threading.Tasks.VoidTaskResult>.AsyncStateMachineBox<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>.<ProcessRequestsAsync>d__2>.MoveNext()\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.dll!Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe..cctor.AnonymousMethod__67_3(object o)\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.LoggingThreadPool.Schedule.AnonymousMethod__0()\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.LoggingThreadPool.RunAction.AnonymousMethod__3_0(object o)\tUnknown\r\n \tSystem.Private.CoreLib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state)\tUnknown\r\n \tSystem.Private.CoreLib.dll!System.Threading.ThreadPoolWorkQueue.Dispatch()\tUnknown\r\n\r\n```\r\n\r\ndotnet --info\r\n```\r\n.NET Command Line Tools (2.2.0-preview1-007855)\r\n\r\nProduct Information:\r\n Version:            2.2.0-preview1-007855\r\n Commit SHA-1 hash:  5be3d62b82\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   D:\\k\\JitBench\\.dotnet\\sdk\\2.2.0-preview1-007855\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview1-26102-01\r\n  Build    : 280fa5d18f7d5b233fbb81572801b9a3fb1ae12a\r\n```"},{"Id":"7059252030","Type":"IssuesEvent","CreatedAt":"2018-01-05T00:20:47","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2182","RelatedDescription":"Reopened issue \"Change ITlsApplicationProtocolFeature.ApplicationProtocol to Span<byte>\" (#2182) at aspnet/KestrelHttpServer","RelatedBody":"https://github.com/aspnet/KestrelHttpServer/blob/76de77746dd900058f7bd49f66debdd245cf9260/src/Kestrel.Core/Features/ITlsApplicationProtocolFeature.cs#L7-L10\r\n\r\nThis property should not be represented as a string because the ALPN spec intentionally defines it as an \"opaque byte string\" and not a textual string:\r\n\r\n> Protocols are named by IANA-registered, opaque, non-empty byte strings, as described further in Section 6 (\"IANA Considerations\") of this document.\r\n>\r\n> https://tools.ietf.org/html/rfc7301#section-3.1\r\n\r\nThe fact that the currently-registered values are all valid UTF-8 strings is not required by the spec so we shouldn't require it in our type.\r\n\r\nWe could use `byte[]`, which is relatively safe performance-wise since in fast paths this will almost always be set to an existing constant value. Or we could go with the new hotness and make it return `ReadOnlyMemory<byte>`. Probably the latter is best even if we always just end up backing it with a predefined constant array.\r\n\r\n/cc @benaadams @Tratcher @davidfowl "},{"Id":"7059125203","Type":"IssuesEvent","CreatedAt":"2018-01-04T23:33:23","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2182","RelatedDescription":"Closed issue \"Change ITlsApplicationProtocolFeature.ApplicationProtocol to Span<byte>\" (#2182) at aspnet/KestrelHttpServer","RelatedBody":"https://github.com/aspnet/KestrelHttpServer/blob/76de77746dd900058f7bd49f66debdd245cf9260/src/Kestrel.Core/Features/ITlsApplicationProtocolFeature.cs#L7-L10\r\n\r\nThis property should not be represented as a string because the ALPN spec intentionally defines it as an \"opaque byte string\" and not a textual string:\r\n\r\n> Protocols are named by IANA-registered, opaque, non-empty byte strings, as described further in Section 6 (\"IANA Considerations\") of this document.\r\n>\r\n> https://tools.ietf.org/html/rfc7301#section-3.1\r\n\r\nThe fact that the currently-registered values are all valid UTF-8 strings is not required by the spec so we shouldn't require it in our type.\r\n\r\nWe could use `byte[]`, which is relatively safe performance-wise since in fast paths this will almost always be set to an existing constant value. Or we could go with the new hotness and make it return `ReadOnlyMemory<byte>`. Probably the latter is best even if we always just end up backing it with a predefined constant array.\r\n\r\n/cc @benaadams @Tratcher @davidfowl "},{"Id":"7059122377","Type":"PullRequestEvent","CreatedAt":"2018-01-04T23:32:23","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2239","RelatedDescription":"Merged pull request \"Change ApplicationProtocol to ReadOnlyMemory<byte> \" (#2239) at aspnet/KestrelHttpServer","RelatedBody":"#2182 \r\nIn the process I realized the prior change for merging the https and core packages had dropped the new netcoreapp2.1 TFM so all of the HTTP/2 code was disabled. Filed https://github.com/aspnet/KestrelHttpServer/issues/2238 for followup."},{"Id":"7058922740","Type":"IssuesEvent","CreatedAt":"2018-01-04T22:29:13","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2191","RelatedDescription":"Closed issue \"Apparent regression in Plaintext around 15-Nov\" (#2191) at aspnet/KestrelHttpServer","RelatedBody":"It seems a regression was introduced around 15-Nov, affecting Plaintext for both libuv and sockets transports. See https://msit.powerbi.com/view?r=eyJrIjoiYTZjMTk3YjEtMzQ3Yi00NTI5LTg5ZDItNmUyMGRlOTkwMGRlIiwidCI6IjcyZjk4OGJmLTg2ZjEtNDFhZi05MWFiLTJkN2NkMDExZGI0NyIsImMiOjV9\r\n\r\n![image](https://user-images.githubusercontent.com/249088/33411076-4ffe6fdc-d538-11e7-913f-f9dea867d250.png)\r\n\r\n@halter73 @davidfowl @sebastienros @muratg \r\n"},{"Id":"7057863848","Type":"IssuesEvent","CreatedAt":"2018-01-04T18:00:55","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2243","RelatedDescription":"Opened issue \"Add ParseRequestLineSplitBufferWithoutNewLineDoesNotUpdateConsumed test back\" (#2243) at aspnet/KestrelHttpServer","RelatedBody":"Was removed as part of https://github.com/aspnet/KestrelHttpServer/pull/2234"},{"Id":"7057837920","Type":"PullRequestEvent","CreatedAt":"2018-01-04T17:54:43","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2234","RelatedDescription":"Merged pull request \"React to pipeline changes\" (#2234) at aspnet/KestrelHttpServer","RelatedBody":""}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7059933477","Type":"IssuesEvent","CreatedAt":"2018-01-05T05:29:34","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1898","RelatedDescription":"Reopened issue \"Consider adding HTML templates\" (#1898) at aspnet/Razor","RelatedBody":"Would adding custom local HTML templates not be a good option to consider?\r\nSomething similar to the following would be an option for the implementation:\r\n\r\n```\r\n\r\n@functions{\r\n    IHtmlContent DispItem(string id, string name, string description)\r\n    {\r\n        <li>\r\n            <a href=\"/manage/@id\">@name</a>\r\n            <span>@description</span>\r\n        </li>\r\n    }\r\n}\r\n...\r\n<ul id=\"list1\">\r\n    @foreach(var item in items1)\r\n    {\r\n        DispItem(item.Id, item.Name, item.Description)\r\n    }\r\n</ul>\r\n\r\n<ul id=\"list2\">\r\n    @foreach(var item in items2)\r\n    {\r\n        DispItem(item.Id, item.Name, item.Description)\r\n    }\r\n</ul>\r\n\r\n\r\n```\r\n\r\nCreating a separate file and model for this kind of display is sometimes too much as compared as what it intends to do. \r\nSimplifying this by allowing local templates would be helpful. \r\n\r\nExcept if I missed it, it is not possible at this time (except by using html strings concat or external sub-pages/components).\r\n  "},{"Id":"7059512718","Type":"IssuesEvent","CreatedAt":"2018-01-05T02:09:28","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1741","RelatedDescription":"Closed issue \"Razor Startup Time investigation\" (#1741) at aspnet/Razor","RelatedBody":"We've collected some data recently that shows that Razor is about 35% of the time to first request for an MVC starter site. This item is a meta-item tracking our investigations and investments\r\n\r\n----------------\r\n\r\n#### Data\r\nOf that time the rough breakdown is:\r\n5% misc overhead\r\n24% emitting assembly\r\n32% tag helper discovery\r\n35% expression rewriter\r\n4% razor parsing and codegen\r\n\r\n#### Conclusions\r\n\r\nJIT and initialization is the biggest factor by far. JIT is approx 40% of process CPU time. Specifically Roslyn+ValueTypes+ImmutableCollections is the worst case for crossgen and results in a lot of runtime JIT happening for things that crossgen can't deal with.\r\n\r\nWe know that JIT is significant because subsequent compilations after the first are orders of magnitude faster and are already measured in the test.\r\n\r\nWe have some low-hanging fruit in Razor/MVC.\r\n\r\nThe 'core' Razor engine only accounts for 4% of the view compilation time. Most of our general Razor features are not a candidate for optimization.\r\n\r\nGC isn't really a factor. The process doesn't allocate much. \r\n\r\n#### Investments\r\n\r\n- [ ] Optimize TagHelper discovery #1737\r\n- [ ] Optimize Expression Rewriter #1738\r\n- [ ] Investigate Pre-Loading Roslyn #1739\r\n- [ ] Big Rock: Eliminate Roslyn from Inner Loop Startup #1740"},{"Id":"7059404141","Type":"PullRequestEvent","CreatedAt":"2018-01-05T01:23:13","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1907","RelatedDescription":"Opened pull request \"[Design] Add RazorProjectEngine abstractions to replace template engine.\" (#1907) at aspnet/Razor","RelatedBody":"- Added initial designs for a non-template engine project engine that owns the processing of a Razor view and allows external pieces to configure it.\r\n- Updated existing usages to use the new RazorProjectEngine to flesh out requirements.\r\n\r\n#1828 \r\n\r\nFYI @mkArtakMSFT "},{"Id":"7059031817","Type":"PullRequestEvent","CreatedAt":"2018-01-04T23:01:43","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1906","RelatedDescription":"Opened pull request \"Always deserialize to DefaultRazorDiagnostic\" (#1906) at aspnet/Razor","RelatedBody":"#1886 \r\n\r\nJust some cleanup\r\n\r\nFYI @mkArtakMSFT "},{"Id":"7058950434","Type":"PullRequestEvent","CreatedAt":"2018-01-04T22:37:00","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1903","RelatedDescription":"Merged pull request \"Use common BDN runner and config\" (#1903) at aspnet/Razor","RelatedBody":"aspnet/Coherence-Signed#684\r\n\r\nFYI @mkArtakMSFT "}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6760798601","Type":"IssuesEvent","CreatedAt":"2017-10-24T22:00:58","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/67","RelatedDescription":"Closed issue \"External Logins does not set the Email\" (#67) at aspnet/Templates","RelatedBody":"- Enable Facebook Login\n- Login using Facebook for the first time\n- Email field is blank. It should be set from what we got from Facebook\n"},{"Id":"6760789807","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:58:48","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/86","RelatedDescription":"Closed issue \"Identity: Consider less generic name for ManageController\" (#86) at aspnet/Templates","RelatedBody":"Manage is a very generic name and you would probably expect http://abcdefg/Manage to be about managing something from your applications business domain rather than user accounts.\n\nManageAccount would probably be a better name.\n"},{"Id":"6760785159","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:57:37","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/115","RelatedDescription":"Closed issue \"Need more templates\" (#115) at aspnet/Templates","RelatedBody":"MVC 6 project templates should include a test project template. And the main ASP.NET 5 Preview Templates / Web Application or ... / Empty templates should have a few more sub-options, enabling for example addition and removal of XML support, creation of a minimal MVC project, or adding in EF (without choosing Individual User Accounts authentication).\n\nHopefully this will allow the new project dialogue to enable the options shown below -- plus a few options specific to MVC 6.\n![disabled project features](https://cloud.githubusercontent.com/assets/6431421/8257821/2a76a606-1665-11e5-8e75-cdb21473f6a1.png)\n"},{"Id":"6760779940","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:56:18","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/104","RelatedDescription":"Closed issue \"OrgAuth: Account Controller should return void\" (#104) at aspnet/Templates","RelatedBody":"Since https://github.com/aspnet/Mvc/issues/2409 is fixed. We should change the AccountController for SSO/ MultiOrg to return void\n"},{"Id":"6760777806","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:46","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/120","RelatedDescription":"Closed issue \"Template feedback\" (#120) at aspnet/Templates","RelatedBody":"Porting from MVC repo https://github.com/aspnet/Mvc/issues/2637\n"},{"Id":"6760775251","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:10","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/137","RelatedDescription":"Closed issue \"Need a SPA template\" (#137) at aspnet/Templates","RelatedBody":""},{"Id":"6760770959","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:54:08","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/365","RelatedDescription":"Closed issue \"Poor user and dev experience in Identity email confirmation\" (#365) at aspnet/Templates","RelatedBody":"There are two issues using the default template for identity when using email confirmation.\n\nFollowing the guide here: http://docs.asp.net/en/latest/security/authentication/accconfirm.html\n\nPoor user experience: When you click \"Register\" it sends the email off, but just redirects the user to the Home controller. Redirecting to something else to indicate they have to confirm their account would be a better example. Perhaps the default template should have such a view OOTB.\n\nPoor dev experience: When logging in with an external account (lets say Facebook) if the account doesn't exist you get thrown into AccountController.ExternalLoginConfirmation, great. This screen requires an email, so you complete the registration then you're logged in but never shoots off the email confirmation link here. Perhaps a commented out section in this action to deal with this would improve the dev experience here.\n"},{"Id":"6760770378","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:59","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/382","RelatedDescription":"Closed issue \"MVC Template Should Apply ResponseCache Attribute to Error Action\" (#382) at aspnet/Templates","RelatedBody":"HomeController.Error() should be updated:\n\n```\n    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]\n    public IActionResult Error()\n    {\n        return View();\n    }\n```\n\nThere is no good scenario where you would want errors to be cached, either on the client or via a proxy, or to have error information stored in such caches (especially if it might contain sensitive information in stack traces, etc.).\n"},{"Id":"6760769801","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:51","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/406","RelatedDescription":"Closed issue \"Add a flow for changing email in the Manage page\" (#406) at aspnet/Templates","RelatedBody":"Porting from ASP.NET Identity repo https://github.com/aspnet/Identity/issues/727\n"},{"Id":"6760769204","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:42","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/423","RelatedDescription":"Closed issue \"Don't create Project_Readme.html for ASP.NET 5 Empty\" (#423) at aspnet/Templates","RelatedBody":"I created an empty project for both ASP.NET 4 and ASP.NET 5. The ASP.NET 5 project had a Project_Readme.html and the ASP.NET 4 one did not. I'm not aware if that was on purpose or not, but we should be consistent with the empty projects. I think we should not add the Project_Readme.html for all Empty projects.\n"},{"Id":"6760768174","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:28","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/444","RelatedDescription":"Closed issue \"Support On-Premises option for Work & School Accounts\" (#444) at aspnet/Templates","RelatedBody":"Support this for Web APIs and Web Apps.\n"},{"Id":"6760767634","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:19","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/451","RelatedDescription":"Closed issue \"ValidationSummary.All should be replaced with ModelOnly\" (#451) at aspnet/Templates","RelatedBody":"All the views in the Accounts folder use\n`<div asp-validation-summary=\"ValidationSummary.All\" class=\"text-danger\"></div>`\n\nThey should just use \n`<div asp-validation-summary=\"ValidationSummary.ModelOnly\" class=\"text-danger\"></div>`\n\nSo you get each error twice. \n\n![image](https://cloud.githubusercontent.com/assets/3605364/13896326/ae916ee2-ed2b-11e5-8bf5-f9ad5246e82c.png)\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6856182602","Type":"PullRequestEvent","CreatedAt":"2017-11-15T02:15:11","Actor":"Andrew-MSFT","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Merged pull request \"Re adding\" (#1064) at aspnet/Tooling","RelatedBody":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end..."},{"Id":"6856061013","Type":"PullRequestEvent","CreatedAt":"2017-11-15T01:32:45","Actor":"cristy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Opened pull request \"Re adding\" (#1064) at aspnet/Tooling","RelatedBody":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end..."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7048395292","Type":"IssuesEvent","CreatedAt":"2018-01-02T17:35:05","Actor":"Eilon","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/283","RelatedDescription":"Opened issue \"Using the \"Home\" repo for issue management of other repos\" (#283) at aspnet/Announcements","RelatedBody":"Hi all,\r\n\r\nWe are experimenting to try and use the [Home repo's issue tracker](https://github.com/aspnet/Home/issues) to manage issues for multiple repos. To start with, we have moved the bugs from several other repos to the Home repo, and we will retire the issue trackers of those other repos.\r\n\r\nWe are doing this to try to improve the experience of logging issues for ASP.NET Core.\r\n\r\n* Labels in the form of `repo:RepoName` are used to associate the bug with a product/feature area\r\n* For issue trackers that moved to the Home repo, please log new issues in the Home repo. If a bug is logged in a moved issue tracker, it will be closed.\r\n* Over time, we plan to consolidate more issue trackers into the Home repo\r\n\r\nFor discussions on this topic, please go to https://github.com/aspnet/Home/issues/2736.\r\n\r\nThanks,\r\nEilon\r\n"},{"Id":"6909206856","Type":"IssuesEvent","CreatedAt":"2017-11-27T20:34:10","Actor":"pranavkm","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/282","RelatedDescription":"Opened issue \"aspnetcore-ci-*, aspnetcore-volatile-* feeds being deprecated\" (#282) at aspnet/Announcements","RelatedBody":"As part of some of our infrastructural changes, we're discontinuing the use of the following feeds and may remove them entirely in the future:\r\n* https://dotnet.myget.org/f/aspnetcore-ci-dev \r\n* https://dotnet.myget.org/f/aspnetcore-ci-release\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-dev\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-release\r\n\r\nIf you're currently using one of these feeds in your projects to pick up our daily builds, we recommend migrating to https://dotnet.myget.org/f/aspnetcore-dev.\r\n\r\nPlease use this discussion topic - https://github.com/aspnet/Home/issues/2292 - for feedback and questions. "}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"948916811034234882","CreatedAt":"2018-01-04T13:59:32+00:00","UserScreenname":"aspnet","Text":"At 10am ET, join our Jeff Fritz (@csharpfritz) for LIVE CODING and he'll answer your questions and .NET, ASPNet, an… https://t.co/SPEnBXEEbC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":3,"RawContent":null},{"Id":"948343098278477824","CreatedAt":"2018-01-02T23:59:48+00:00","UserScreenname":"aspnet","Text":"The ASPNET Community Standup is live at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":16,"FavoriteCount":5,"RawContent":null},{"Id":"944564608404205568","CreatedAt":"2017-12-23T13:45:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz - @csharpfritz and MVP @IrisClasson in about an hour for LIVE CODING and pair programming on… https://t.co/RuFa6Hh6S7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":5,"RawContent":null},{"Id":"943234846289289217","CreatedAt":"2017-12-19T21:41:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz (@csharpfritz) in a little more than 2 hours for LIVE CODING. He's working on an @aspnet Core p… https://t.co/wEDxxFaCxu","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"942039735207448576","CreatedAt":"2017-12-16T14:32:29+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz in 30 minutes for some LIVE CODING and answering your questions about .NET and Visual Studio.  https://t.co/OakzDOKxUB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"941295101271212032","CreatedAt":"2017-12-14T13:13:35+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz at 10am ET for a LIVE CODING session.  He'll answer your questions about .NET, Visual Studio, a… https://t.co/aG5z9e5Rgr","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":5,"RawContent":null},{"Id":"941015999809249280","CreatedAt":"2017-12-13T18:44:32+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz in about 15 minutes on Mixer or Twitch for a two-hour LIVE .NET CODING session where he will answ… https://t.co/OC1nGXILjO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938192857902354432","CreatedAt":"2017-12-05T23:46:22+00:00","UserScreenname":"aspnet","Text":"We're live for the #ASPNET Community Standup now at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938163679614214144","CreatedAt":"2017-12-05T21:50:26+00:00","UserScreenname":"aspnet","Text":"Join us for the #aspnet Community Standup today at 3:45 PM Pacific time - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":6,"RawContent":null},{"Id":"931580871378964481","CreatedAt":"2017-11-17T17:52:42+00:00","UserScreenname":"aspnet","Text":"Check out our new ConfigurationBuilders that make it easier than ever to use Azure Key Vault, Environment Variables… https://t.co/itxdVWOnG5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":36,"FavoriteCount":7,"RawContent":null},{"Id":"917884946324250624","CreatedAt":"2017-10-10T22:49:59+00:00","UserScreenname":"aspnet","Text":"The #aspnet Community Standup starts now - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":8,"RawContent":null},{"Id":"917877107904036865","CreatedAt":"2017-10-10T22:18:50+00:00","UserScreenname":"aspnet","Text":"Join us in a half hour (3:45 PM Pacific) for this week's #aspnet Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2018-01-05T05:30:12.0087789Z","RunDurationInMilliseconds":10425}