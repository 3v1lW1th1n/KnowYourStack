{"Data":{"Blog":{"FeedItems":[{"Title":"More Cross-Platform APIs with Xamarin.Essentials Latest Preview","PublishedOn":"2018-06-14T19:11:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced Xamarin.Essentials, a core set of cross-platform APIs to help developers build native apps, at Microsoft Build 2018. Xamarin.Essentials gives developers access to over thirty...","Href":"https://blog.xamarin.com/cross-platform-apis-xamarin-essentials-latest-preview/","RawContent":null},{"Title":"Use MongoDB With Your Xamarin Apps","PublishedOn":"2018-06-12T20:01:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most important decisions that you&#8217;ll make when designing an app is what type of database to use. Not too long ago, the choice was limited to relational databases like SQL server....","Href":"https://blog.xamarin.com/write-apps-using-mongodb-xamarin/","RawContent":null},{"Title":"Build 2018: Conference Vision Demo App","PublishedOn":"2018-06-07T20:43:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Build 2018 we shipped Xamarin.Forms 3.0. Did you miss the announcement? No worries, you can watch it here to catch up on many of the great new things that will help make you more productive...","Href":"https://blog.xamarin.com/build-2018-conference-vision-demo-app/","RawContent":null},{"Title":"Xamarin.Android Firebase Job Dispatcher: Background Scheduling for all Android Devices","PublishedOn":"2018-06-04T16:00:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Running tasks in the background is important for Android apps. It&#8217;s what helps keep an app responsive to the user and allows work to get done even when the user isn’t actively engaged with the...","Href":"https://blog.xamarin.com/xamarin-android-firebase-job-dispatcher-background-scheduling-android-devices/","RawContent":null},{"Title":"Xamarin and .NET Developer Events this June","PublishedOn":"2018-06-01T18:13:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since the recent Microsoft Build conference, Xamarin and .NET recap events have been springing up all over the globe! Find an event near you this month to get the latest news on the exciting releases,...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-this-june/","RawContent":null},{"Title":"Xamarin University Presents: Guest Lectures from Industry Luminaries!","PublishedOn":"2018-05-30T18:46:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Technology moves quickly; new software, platforms, and frameworks are constantly being developed, improved, and released. Exploring the landscape of developer tools and libraries that we can consume...","Href":"https://blog.xamarin.com/xamarin-university-presents-guest-lectures/","RawContent":null},{"Title":"Contributing to Xamarin.Android","PublishedOn":"2018-05-25T18:15:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin has been open source for over two years now, starting the day we made the exciting announcement about the future of Xamarin. Since then, we&#8217;ve moved the majority of our work out in the...","Href":"https://blog.xamarin.com/contributing-xamarin-android/","RawContent":null},{"Title":"Guest Post: Securing and Versioning Xamarin Apps with Mobile.BuildTools","PublishedOn":"2018-05-23T19:11:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Dan Siegel is a Microsoft MVP, maintainer of the Prism Library, author of numerous dev tools and OSS libraries, leader of the San Diego Xamarin Dev’s Meetup, and a Xamarin blogger. Dan works as a...","Href":"https://blog.xamarin.com/securing-versioning-xamarin-apps-with-mobilebuildtools/","RawContent":null},{"Title":"Xamarin.Essentials: Cross-Platform APIs for Mobile Apps","PublishedOn":"2018-05-16T18:36:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When developing iOS and Android apps with Xamarin, developers can access every native platform API using C#. These bindings not only expose the platform APIs in C#, but add powerful C# features, such...","Href":"https://blog.xamarin.com/xamarin-essentials-cross-platform-apis-mobile-apps/","RawContent":null},{"Title":"Integrating Xamarin.com into Microsoft Sites","PublishedOn":"2018-05-15T22:49:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the past year we&#8217;ve started to make it even easier to find Xamarin information on Microsoft sites, and going forward you will start seeing changes to xamarin.com as we continue to migrate...","Href":"https://blog.xamarin.com/integrating-xamarin-com-microsoft-sites/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7835245059","Type":"PullRequestEvent","CreatedAt":"2018-06-17T01:56:04","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1839","RelatedDescription":"Merged pull request \"Bump mono for a couple of Linux build fixes\" (#1839) at xamarin/xamarin-android","RelatedBody":"PR https://github.com/xamarin/xamarin-android/pull/1815 needs the commits to\r\nwork."},{"Id":"7835236411","Type":"PullRequestEvent","CreatedAt":"2018-06-17T01:45:04","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1827","RelatedDescription":"Merged pull request \"[Xamarin.Android.Buiild.Tasks] Allow uncompressed native libraries in apk\" (#1827) at xamarin/xamarin-android","RelatedBody":"Fixes #1822\r\n\r\nCurrently we only apply the `$(AndroidStoreUncompressedFileExtensions)` to\r\nthe resources added to the apk via `aapt2`. All the other resources added\r\nby `BuildApk` are added as `Deflate`. As a result this means an  \r\nXamarin.Android apk cannot run on `Android.Things` since it requires the \r\nnative libraries to be uncompressed.\r\n\r\nWe should we using the `$(AndroidStoreUncompressedFileExtensions)` property\r\nas part of the `BuildApk` process to ensure that files which need to \r\nbe left uncompressed are. "},{"Id":"7835236409","Type":"IssuesEvent","CreatedAt":"2018-06-17T01:45:04","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1822","RelatedDescription":"Closed issue \"Allow storing native libs uncompressed in the .apk\" (#1822) at xamarin/xamarin-android","RelatedBody":"Android Things [appears to require that native libraries be stored uncompressed within the `.apk`](https://gitter.im/xamarin/xamarin-android?at=5b22a616c277fb705dce70bb).\r\n\r\n![native libraries must be uncompressed](https://files.gitter.im/xamarin/xamarin-android/I4QI/image.png)\r\n\r\nWe should support that.\r\n"},{"Id":"7835234121","Type":"PullRequestEvent","CreatedAt":"2018-06-17T01:42:10","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1826","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Dont Import `Xamarin.Android.DefaultOutputPaths.targets` on mac\" (#1826) at xamarin/xamarin-android","RelatedBody":"Context https://github.com/xamarin/xamarin-android/issues/1824\r\n\r\nWe seem to be getting some odd behaviour since commit 13d216f which\r\nintroduced the `DefaultOutputPaths` targets. For example we see\r\nthe following types of paths on MacOS\r\n\r\n\tobj\\/Debug\\foo\r\n\r\nThe theory is that the new target is causing this weirdness. So\r\nlets not import that target on MacOS at all. This is ok because\r\nmost of the code in the target is not used. This should fix these\r\nweird path issues for 15.8. It will give us time to figure out how to\r\nget this new functionality working on MacOS for the next release."},{"Id":"7834433855","Type":"PullRequestEvent","CreatedAt":"2018-06-16T13:57:28","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1839","RelatedDescription":"Opened pull request \"Bump mono for a couple of Linux build fixes\" (#1839) at xamarin/xamarin-android","RelatedBody":"PR https://github.com/xamarin/xamarin-android/pull/1815 needs the commits to\r\nwork."},{"Id":"7832559818","Type":"PullRequestEvent","CreatedAt":"2018-06-15T18:59:18","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1838","RelatedDescription":"Opened pull request \"[test] experiment to see if NUnit2 format is causing hang on Windows\" (#1838) at xamarin/xamarin-android","RelatedBody":""},{"Id":"7832504547","Type":"PullRequestEvent","CreatedAt":"2018-06-15T18:46:31","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1837","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix for android:name=\"$\" in manifest\" (#1837) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/1698\r\n\r\nIn the project reproducing this issue, the Xamarin.Firebase.lid NuGet\r\nproduces an `AndroidManifest.xml` with the following line:\r\n\r\n    <permission android:name=\"${applicationId}.permission.C2D_MESSAGE\" android:protectionLevel=\"signature\" />\r\n\r\nUnfortunately our manifest merging code is throwing an exception and\r\nproducing a warning such as:\r\n\r\n    Xamarin.Android.Common.targets(1910,3): warning : Name cannot begin with the '$' character, hexadecimal value 0x24.\r\n\r\nWe also aren't getting the contents of this `AndroidManifest.xml`\r\nmerged, so this is definitely an issue!\r\n\r\nThe exception is coming from the following code:\r\n\r\n    var existing = (name != null) ?\r\n        doc.XPathSelectElement (string.Format (\"/manifest/{0}[@android:name='{1}']\", top.Name.LocalName, XmlConvert.VerifyNCName (name.Value)), nsResolver) :\r\n        doc.XPathSelectElement (string.Format (\"/manifest/{0}\", top.Name.LocalName));\r\n\r\nApparently `XmlConvert.VerifyNCName` throws an exception if the input\r\nvalue contains a `$`.\r\n\r\nIt appears it has been this way for quite some time, prior to becoming\r\nopen source:\r\n\r\nhttps://github.com/xamarin/xamarin-android/blame/bb8183c8c16667b18ba9197e78294b17a0af532c/src/Xamarin.Android.Build.Tasks/Utilities/ManifestDocument.cs#L444\r\n\r\nI suspect the original goal was to validate the XPath expression\r\nwouldn't throw an exception, but it seems to work fine to use the\r\nvalue as-is. Let's just not call `XmlConvert.VerifyNCName` at all.\r\n\r\nAfter the fix, I get additional lines in my\r\n`obj/Debug/android/AndroidManifest.xml`:\r\n\r\n    <permission android:name=\"com.companyname.DollarSignProb.permission.C2D_MESSAGE\" android:protectionLevel=\"signature\" />\r\n    <uses-permission android:name=\"com.companyname.DollarSignProb.permission.C2D_MESSAGE\" />\r\n\r\nSo it is now properly merging the `AndroidManifest.xml`.\r\n\r\nOther changes:\r\n- Updated `ManifestTest.MergeLibraryManifest` test so it also verifies\r\n  this fix\r\n- Added `XA4302` as part of the effort towards:\r\n  https://github.com/xamarin/xamarin-android/issues/1560"},{"Id":"7832208564","Type":"IssuesEvent","CreatedAt":"2018-06-15T17:39:33","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1816","RelatedDescription":"Closed issue \"No longer able to compile Mono.Android-Tests.csproj on macOS against d15-8\" (#1816) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. msbuild /t:SignAndroidPackage /p:Configuration=Release /p:AdbTarget=-s 709KPVH0047183 /p:AndroidNdkDirectory=$(AndroidNdk) /p:NdkBuildPath=$(AndroidNdk)/ndk-build xamarin-android/src/Mono.Android/Test/Mono.Android-Tests.csproj\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nBuild succeeds.\r\n\r\n### Actual Behavior\r\nBuild fails with:\r\n```\r\n  CSC : error CS2001: Source file '/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/LayoutBinding.cs' could not be found. [/Users/xamarinqa/myagent/_work/r1/a/monodroid/external/xamarin-android/src/Mono.Android/Test/Mono.Android-Tests.csproj]\r\n```\r\n### Version Information\r\nMono version: 5.12.0.271 (6f9bef3bdb8)  (2018-06-07 21:09:48 -04:00)\r\nXA version: 8.4.0.1 (HEAD/a6ec739ce) \r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttp://xqa.blob.core.windows.net/gist/log-a2b1d37218964b0384122ac3ba61d79d.txt\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->\n\n> VS bug [#633426](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/633426)"},{"Id":"7832179034","Type":"PullRequestEvent","CreatedAt":"2018-06-15T17:32:55","Actor":"directhex","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1836","RelatedDescription":"Opened pull request \"Bump to mono:2018-06\" (#1836) at xamarin/xamarin-android","RelatedBody":null}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7835091659","Type":"PullRequestEvent","CreatedAt":"2018-06-16T22:55:27","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3047","RelatedDescription":"Merged pull request \"[Tizen] Rename EvasObjectWrapper to NativeViewWrapper\" (#3047) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n`EvasObjectWrapper` is renamed to `NativeViewWrapper` for the sake of consistency. It also changed to inhert `ViewRenderer` from `VisualElementRenderer`.\r\n\r\n### Issues Resolved ###\r\n\r\nNone\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Platforms Affected ###\r\n\r\n- Tizen\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"},{"Id":"7835089230","Type":"IssuesEvent","CreatedAt":"2018-06-16T22:52:47","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2148","RelatedDescription":"Closed issue \"Xamarin.Forms.Platform.Android.FormsAppCompatActivity.SetMainPage - Null Reference Exception\" (#2148) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nThere appears to be a bug in Xamarin.Forms 2.5.0.280555 and up -- including 2.5.1.340284-pre2 and most likely (not yet confirmed)  3.0.0.296286-pre2 where SetMainPage() can encounter a Null Reference exception.\r\n\r\nThis bug has been previously mentioned here by someone else and includes the exact traceback I was able to produce consistently: https://bugzilla.xamarin.com/show_bug.cgi?id=36287#c14 . This comment appeared within the discussion of another bug so wasn't addressed directly.\r\n\r\n### Steps to Reproduce\r\n\r\nI am able to reproduce this bug easily, provided that certain steps are followed. The Android app must be completely removed from the device. Then, it must be installed. The app must use PermissionsPlugin, this will cause the app to pop up an initial permissions request prior to app.MainPage being initialized.  This will cause SetMainPage() to run, and the Null Reference Exception will be triggered.\r\n\r\nIf the app is already installed, or upgraded from an already existing version, the initial Android permissions request pop-up does not appear, everything works fine and the Null Reference exception does not occur. That is why this traceback has been so tricky to track down -- it only happens under the specific conditions described above.\r\n\r\n### Expected Behavior\r\n\r\nSetMainPage() should just work under all conditions and not trigger a Null Reference Exception.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Based on initial report, at least XF 2.5.0.280555 and newer.\r\n- Last known good version: Unknown\r\n- IDE: Visual Studio Mac (latest stable)\r\n- Nuget Packages: Plugin.Permissions (2.2.1), possibly other versions or anything that will cause the permissions pop-up to appear.\r\n\r\n### Traceback\r\n\r\nandroid.runtime.JavaProxyThrowable: at Xamarin.Forms.Platform.Android.FormsAppCompatActivity.InternalSetPage (Xamarin.Forms.Page page) [0x0006f] in <173f39d71f0d4d928f5bbea42e96ffa8>:0\r\nat Xamarin.Forms.Platform.Android.FormsAppCompatActivity.SetMainPage () [0x0000c] in <173f39d71f0d4d928f5bbea42e96ffa8>:0\r\nat Xamarin.Forms.Platform.Android.FormsAppCompatActivity.LoadApplication (Xamarin.Forms.Application application) [0x0025c] in <173f39d71f0d4d928f5bbea42e96ffa8>:0\r\nat ddod_xamarin.Droid.MainActivity.OnCreate (Android.OS.Bundle bundle) [0x00098] in <1ef34a1d5efe4254ae2bcbf6d5b0d8b4>:0\r\nat Android.App.Activity.n_OnCreate_Landroid_os_Bundle_ (System.IntPtr jnienv, System.IntPtr native__this, System.IntPtr native_savedInstanceState) [0x0000f] in <40c3dbb407c542888943108189b6e6d6>:0\r\nat (wrapper dynamic-method) System.Object.f4495476-e68d-4c26-a881-ccd056b172c5(intptr,intptr,intptr)\r\n  at md55fb97b9b0cbefcefea98df467d0407a7.MainActivity.n_onCreate (Native Method)\r\n  at md55fb97b9b0cbefcefea98df467d0407a7.MainActivity.onCreate (MainActivity.java:30)\r\n  at android.app.Activity.performCreate (Activity.java:6698)\r\n  at android.app.Instrumentation.callActivityOnCreate (Instrumentation.java:1140)\r\n  at android.app.ActivityThread.performLaunchActivity (ActivityThread.java:2643)\r\n  at android.app.ActivityThread.handleLaunchActivity (ActivityThread.java:2755)\r\n  at android.app.ActivityThread.-wrap12 (ActivityThread.java)\r\n  at android.app.ActivityThread$H.handleMessage (ActivityThread.java:1495)\r\n  at android.os.Handler.dispatchMessage (Handler.java:102)\r\n  at android.os.Looper.loop (Looper.java:154)\r\n  at android.app.ActivityThread.main (ActivityThread.java:6196)\r\n  at java.lang.reflect.Method.invoke (Native Method)\r\n  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run (ZygoteInit.java:888)\r\n  at com.android.internal.os.ZygoteInit.main (ZygoteInit.java:778)\r\n"},{"Id":"7834957743","Type":"PullRequestEvent","CreatedAt":"2018-06-16T20:52:09","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2997","RelatedDescription":"Closed pull request \"[UWP] Fixes core debugging when debugging UWP.\" (#2997) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nWhen you start UWP debugger on a local machine, symbols are not copied to the folder with the application running in `AppX` folder. It does not allow to make breakpoints in Xamarin.Forms.Core.\r\nTo fix this problem after the build all the symbols are copied to the `AppX` folder.\r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Behavioral Changes ###\r\n\r\nAdded post build script that copies all the *.pdb files to the `AppX` folder.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"7834306191","Type":"IssuesEvent","CreatedAt":"2018-06-16T12:03:45","Actor":"POFerro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3061","RelatedDescription":"Opened issue \"ListView Crashed with InvalidCast when GroupHeaderTemplate is defined\" (#3061) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nListView is throwing an InvalidCastException when a GroupHeaderTemplate is defined\r\n### Steps to Reproduce\r\n\r\n1. Having this xaml:\r\n`\r\n<ListView ItemsSource=\"{Binding Categorias}\" \r\n                  GroupDisplayBinding=\"{Binding Titulo}\"\r\n                  GroupShortNameBinding=\"{Binding Titulo}\"\r\n                  IsGroupingEnabled=\"true\">\r\n            <ListView.HeaderTemplate>\r\n                <DataTemplate>\r\n                    <Grid>\r\n                        <Grid.ColumnDefinitions>\r\n                            <ColumnDefinition Width=\"*\" />\r\n                            <ColumnDefinition Width=\"*\" />\r\n                        </Grid.ColumnDefinitions>\r\n\r\n                        <Label Grid.Column=\"0\"\r\n                               Text=\"Despesas\" \r\n                               HorizontalOptions=\"Center\" />\r\n                        <Label Grid.Column=\"1\"\r\n                               Text=\"Receitas\" \r\n                               HorizontalOptions=\"Center\" />\r\n                    </Grid>\r\n                </DataTemplate>\r\n            </ListView.HeaderTemplate>\r\n            <ListView.GroupHeaderTemplate>\r\n                <DataTemplate>\r\n                    <Grid>\r\n                        <Grid.ColumnDefinitions>\r\n                            <ColumnDefinition Width=\"Auto\" />\r\n                            <ColumnDefinition Width=\"*\" />\r\n                        </Grid.ColumnDefinitions>\r\n\r\n                        <Label Grid.Column=\"1\"\r\n                               Text=\"{Binding Titulo}\" />\r\n                    </Grid>\r\n                </DataTemplate>\r\n            </ListView.GroupHeaderTemplate>\r\n            <ListView.ItemTemplate>\r\n                <DataTemplate>\r\n                    <TextCell Text=\"{Binding Titulo}\" Detail=\"{Binding RegExpStr}\" />\r\n                </DataTemplate>\r\n            </ListView.ItemTemplate>\r\n        </ListView>\r\n`\r\n2.  With this Model:\r\n`\r\n    public class ViewModel\r\n    {\r\n        public ObservableCollection<Categoria> Categorias { get; set; }\r\n    }\r\n    public class Categoria\r\n    {\r\n        public string Titulo { get; set; }\r\n\r\n        public static implicit operator ReadOnlyObservableCollection<SubCategoria>(Categoria d)\r\n        {\r\n            return d.SubCategorias;\r\n        }\r\n        [DataMember()]\r\n        public ObservableCollection<SubCategoria> subCategorias = new ObservableCollection<SubCategoria>();\r\n\r\n        [IgnoreDataMember]\r\n        public ReadOnlyObservableCollection<SubCategoria> SubCategorias { get { return new ReadOnlyObservableCollection<SubCategoria>(this.subCategorias); } }\r\n\r\n        public Categoria()\r\n        {\r\n        }\r\n    }\r\n\r\n    public class SubCategoria\r\n    {\r\n        [IgnoreDataMember]\r\n        public Categoria Categoria { get; private set; }\r\n        public string Titulo { get; set; }\r\n        public string RegExpStr { get; set; }\r\n\r\n        public SubCategoria()\r\n        {\r\n        }\r\n    }\r\n`\r\n### Expected Behavior\r\nShould show grouped items in listView\r\n\r\n### Actual Behavior\r\nThrows an InvalidCastException\r\nSystem.InvalidCastException: Specified cast is not valid.\r\n  at at (wrapper castclass) System.Object.__castclass_with_cache(object,intptr,intptr)\r\n  at Xamarin.Forms.Internals.TemplatedItemsList`2[TView,TItem].InsertGrouped (System.Object item, System.Int32 index) [0x000a1] in <ce2b877421c54ec290ac8c22bb563f4b>:0\r\n  at Xamarin.Forms.Internals.TemplatedItemsList`2[TView,TItem].GroupedReset () [0x00083] in <ce2b877421c54ec290ac8c22bb563f4b>:0\r\n  at Xamarin.Forms.Internals.TemplatedItemsList`2[TView,TItem].OnCollectionChangedGrouped (System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x00459] in <ce2b877421c54ec290ac8c22bb563f4b>:0\r\n  at Xamarin.Forms.Internals.TemplatedItemsList`2[TView,TItem].OnProxyCollectionChanged \r\n...\r\n### Basic Information\r\n\r\n- Version with issue:\r\nLooking at current code in GitHub I see the function:\r\n`\t\tTemplatedItemsList<TView, TItem> InsertGrouped(object item, int index)\r\n\t\t{\r\n\t\t\tvar children = item as IEnumerable;\r\n\r\n\t\t\tvar groupProxy = new TemplatedItemsList<TView, TItem>(this, children, _itemsView, _itemTemplateProperty);\r\n...\r\n\t\t\tif (GroupHeaderTemplate != null)\r\n\t\t\t{\r\n\t\t\t\tgroupProxy.HeaderContent = (TItem)GroupHeaderTemplate.CreateContent(groupProxy.ItemsSource, _itemsView);\r\n...\r\n`\r\nShould this last cast exist? GroupHeaderTemplate.CreateContent doesn't seem to create an object of type <TItem> isn't it returning a view? Not of type View but some regular View?\r\n\r\nBest regards\r\nPOFerro"},{"Id":"7834297949","Type":"IssuesEvent","CreatedAt":"2018-06-16T11:56:10","Actor":"EmilAlipiev","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3052","RelatedDescription":"Closed issue \"Static resources inside TableView using XAML doesn't work\" (#3052) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create xamairn forms project \r\n2. use code below, it crashes that resource cant be found\r\n\r\n```\r\n <ContentPage.Resources>\r\n        <ResourceDictionary>\r\n          <x:String x:Key=\"caption\" >Hello there!</x:String>\r\n        </ResourceDictionary>\r\n      </ContentPage.Resources>\r\n\r\n    <TableView>                 \r\n        <TableRoot Title=\"x\">\r\n            <TableSection Title=\"y\">\r\n                <TextCell Text=\"{StaticResource caption}\" />\r\n            </TableSection>\r\n        </TableRoot>\r\n    </TableView>\r\n\r\n```\r\n\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE: VS2017 pro latest update\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n \r\n  - UWP:  17134 \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages: xamarin forms 3.0.0.561731\r\n- Affected Devices: UWP local\r\n\r\n it was reported long time a go but still not fixed.\r\n https://forums.xamarin.com/discussion/19526/static-resources-inside-tableview-using-xaml-doesnt-work\r\n"},{"Id":"7833711517","Type":"PullRequestEvent","CreatedAt":"2018-06-16T02:12:22","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3060","RelatedDescription":"Opened pull request \"[UWP] Remove use of TLI for Cells\" (#3060) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nReusing templated cells on UWP breaks the UWP listview in multiple ways. This change rolls back to just creating a new cell for each row.  I tested the memory implications of this and did not see any leaks caused by this changed.   At a later point we can further test and optimize the performance but ListView2 may trump that effort\r\n\r\n### Issues Resolved ###\r\n\r\n- fixes #2617\r\n- fixes #3053\r\n- fixes #2832\r\n\r\n### Platforms Affected ###\r\n- UWP\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7834268656","Type":"IssuesEvent","CreatedAt":"2018-06-16T11:27:06","Actor":"SpiegelSoft","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4265","RelatedDescription":"Closed issue \"F# iOS project: MTOUCH : error MT2002: Failed to resolve \"Microsoft.FSharp.Control.AsyncActivation`1\" reference from \"FSharp.Core, Version=4.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\"\" (#4265) at xamarin/xamarin-macios","RelatedBody":"<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Create a Xamarin iOS project using F#, with the latest NuGet packages\r\n2. Build it \r\n3. The error in the title is generated.\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Environment\r\nMicrosoft Visual Studio Professional 2017  (2)\r\nVersion 15.7.3\r\nVisualStudio.15.Release/15.7.3+27703.2026\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Professional\r\n\r\nApplication Insights Tools for Visual Studio Package   8.12.10405.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.40522.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.7.31476\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60419.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.40424.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.3000.2\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   15.0.40424.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.3000.2\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   2.8.3-beta6-62923-07. Commit Hash: 7aafab561e449da50712e16c9e81742b8e7a2969\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   15.7.18131.1\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nDotfuscator Community Edition   5.34.0.6830-9173b9a63\r\nPreEmptive Protection - Dotfuscator CE\r\n\r\nFabric.ApplicationInsights   1.0\r\nAllows user to instrument their Service Fabric projects for Application Insights.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.19-rc (a4ffc1b)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.3000.2\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.3000.2\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.1\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.3000.2\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10420.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.11027.3\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.7.18131.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   15.7.18131.1\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   15.7.18131.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.7.18131.1\r\nProfiling support for Python projects.\r\n\r\nR Tools for Visual Studio   1.3.40517.1016\r\nProvides project system, R Interactive window, plotting, and more for the R programming language.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61804.210\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   15.7.20419.2003\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.8.3-beta6-62923-07. Commit Hash: 7aafab561e449da50712e16c9e81742b8e7a2969\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.1 for F# 4.1   15.7.0.0.  Commit Hash: 2527e6829ecdc8281ee60d83be8cfd0fa720a648.\r\nMicrosoft Visual F# Tools 10.1 for F# 4.1\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27703.2026\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nWindows Machine Learning Generator Extension   1.0\r\nWindows Machine Learning Visual Studio Extension Detailed Info\r\n\r\nXamarin   4.10.10.1 (f1760154c)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.1 (f3257e429)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.3.2 (HEAD/dffc59120)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.12.0.4 (64fece5)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\n\n> VS bug [#634504](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/634504)"},{"Id":"7833682962","Type":"PullRequestEvent","CreatedAt":"2018-06-16T01:46:36","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4281","RelatedDescription":"Merged pull request \"[IdentityLookupUI] Add bindings for Xcode 10 Beta 1\" (#4281) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7833202856","Type":"PullRequestEvent","CreatedAt":"2018-06-15T21:47:18","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4279","RelatedDescription":"Merged pull request \"[Jenkins] Publish bundle.zip and msbuild.zip as GH statuses as well. (#4238)\" (#4279) at xamarin/xamarin-macios","RelatedBody":"This also requires a maccore bump.\n\nDiff: https://github.com/xamarin/maccore/compare/76ab6a58ff9061d35450f4bc75d075874a8489a8...347ba77a16159e911191587a49dd55c100117c84"},{"Id":"7833195777","Type":"IssuesEvent","CreatedAt":"2018-06-15T21:45:10","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4271","RelatedDescription":"Closed issue \"Make exception marshaling work with system mono\" (#4271) at xamarin/xamarin-macios","RelatedBody":"_Submitted by Rolf Bjarne Kvinge \\[MSFT\\] \\[MSFT\\] on 2017-10-09 17:11 UTC_\r\n\r\n[Spinoff from bug #[59979](https://bugzilla.xamarin.com/show_bug.cgi?id=59979), which ended up a confusing mess due to fixes from several teams included - this bug is about the problem in Xamarin.Mac]\r\n\r\nSlack:\r\n\r\n```\r\nAlan McGovern [12:53] 2017-10-05 11:52:49.733 MonoDevelop[46104:4956973] Xamarin.Mac: Could not load mono_set_pending_exception\r\nAlan McGovern [12:54] any idea why that's crashing my IDE?\r\nAlan McGovern [12:54] https://gist.github.com/alanmcgovern/b39f921c6cf14ab6f2e78abac2f74c94\r\n\r\nRolf Kvinge [12:56] let me look\r\n\r\nRolf Kvinge [12:57] https://github.com/xamarin/ios-sim-sharp/blob/7b7a174d398a3ccd2b82936619b3f74d8baa7e73/MonoTouch.Hosting/Bindings/Library64.cs#L39\r\nRolf Kvinge [12:57] it's the `[MarshalNativeExceptions]` attribute\r\n\r\nAlan McGovern [12:58] yeah - we want to marshal native exceptions\r\n\r\nRolf Kvinge [12:58] XM will catch the native exception, convert it to a managed exception, and call `mono_set_pending_exception`\r\n\r\nAlan McGovern [12:58] as we have for 5-6 years now 😛\r\n\r\nRolf Kvinge [12:58] but `mono_set_pending_exception` is a private symbol, so XM doesn't find it\r\nRolf Kvinge [12:58] and then aborts\r\n\r\nAlan McGovern [12:58] why is it private?\r\nAlan McGovern [12:58] that's an ABI breakage by the sounds of it\r\n\r\nRolf Kvinge [12:59] it's not public in the headers\r\n\r\nAlan McGovern [12:59] when did it become not-public?\r\n\r\nRolf Kvinge [12:59] which works as long as you link statically\r\nRolf Kvinge [12:59] but it breaks when using the system libmono.dylib\r\n\r\nAlan McGovern [12:59] this is the configuration we've been shipping for years now\r\n\r\nRolf Kvinge [13:00] it probably broke when I implemented better support for marshalling exceptions\r\n```\r\n\r\n\r\n<br />\r\n\r\nPR in progress which needs to be completed: <https://github.com/xamarin/xamarin-macios/pull/2853>\r\n\r\nWorkaround to call mono\\_raise\\_exception if mono\\_set\\_pending\\_exception isn't available:\r\n\r\nmaster: <https://github.com/xamarin/xamarin-macios/pull/2845> \r\nd15-5: <https://github.com/mono/mono/pull/4654>\r\n\r\n***\r\n\r\n_Xamarin Bugzilla comment 1 by Rolf Bjarne Kvinge [MSFT] [MSFT] on 2018-03-22 12:38 UTC_\r\n\r\nNew mono PR: <https://github.com/mono/mono/pull/7759>\r\n\r\n* * *\r\n\r\n_Reference: <https://bugzilla.xamarin.com/show_bug.cgi?id=60065>_"},{"Id":"7833195368","Type":"PullRequestEvent","CreatedAt":"2018-06-15T21:45:03","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4272","RelatedDescription":"Merged pull request \"[runtime] Use public mono API to set the pending exception. Fixes #4271.\" (#4272) at xamarin/xamarin-macios","RelatedBody":"This makes exception marshaling work with Xamarin.Mac apps that use the system\nmono (such as Visual Studio for Mac, and assuming at least a v5.12 system\nmono).\n\nhttps://github.com/xamarin/xamarin-macios/issues/4271"},{"Id":"7833166045","Type":"PullRequestEvent","CreatedAt":"2018-06-15T21:36:25","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4281","RelatedDescription":"Opened pull request \"[IdentityLookupUI] Add bindings for Xcode 10 Beta 1\" (#4281) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1007343670775963649","CreatedAt":"2018-06-14T19:27:01+00:00","UserScreenname":"xamarinhq","Text":"Get access to more cross-platform APIs with the latest Xamarin.Essentials Preview: https://t.co/WqtCV8OneC https://t.co/FgdScqkpPt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":107,"FavoriteCount":57,"RawContent":null},{"Id":"1007280505820254209","CreatedAt":"2018-06-14T15:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/zLa3RTUgaL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":17,"RawContent":null},{"Id":"1006915501405167616","CreatedAt":"2018-06-13T15:05:37+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/U9huu5DdJW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":60,"FavoriteCount":22,"RawContent":null},{"Id":"1006682387743461376","CreatedAt":"2018-06-12T23:39:19+00:00","UserScreenname":"xamarinhq","Text":"Create your first #Xamarin app using #MongoDB: https://t.co/Nu6lZzYwYX","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":60,"FavoriteCount":27,"RawContent":null},{"Id":"1006563778471788544","CreatedAt":"2018-06-12T15:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":56,"FavoriteCount":23,"RawContent":null},{"Id":"1006201893369106433","CreatedAt":"2018-06-11T15:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null},{"Id":"1005923084023582721","CreatedAt":"2018-06-10T21:22:07+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/OPYTFzsQk4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":67,"FavoriteCount":28,"RawContent":null},{"Id":"1005574764382117888","CreatedAt":"2018-06-09T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/kaQCoeUycf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":22,"RawContent":null},{"Id":"1005116748180402176","CreatedAt":"2018-06-08T15:58:01+00:00","UserScreenname":"xamarinhq","Text":"Get started debugging Mono from the source code in the third part of our #Xamarin Open Source Frameworks series:… https://t.co/vjjKyuTsDH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":10,"RawContent":null},{"Id":"1004839391477592064","CreatedAt":"2018-06-07T21:35:54+00:00","UserScreenname":"xamarinhq","Text":"Check out the code for the #MSBuild 2018 Conference Vision demo app: https://t.co/tpcBITRsnu https://t.co/kVwUJR5NoL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":157,"FavoriteCount":84,"RawContent":null},{"Id":"1004743034813276160","CreatedAt":"2018-06-07T15:13:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build #XamariniOS from the source code in the second part of our four-part series on debugging… https://t.co/88r7PENPNw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":20,"RawContent":null},{"Id":"1004393225787002881","CreatedAt":"2018-06-06T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/6IkmiiY1Jp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":82,"FavoriteCount":32,"RawContent":null},{"Id":"1004381931470049282","CreatedAt":"2018-06-06T15:18:07+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/6jygocRw2d","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":24,"RawContent":null},{"Id":"1004017778859347975","CreatedAt":"2018-06-05T15:11:06+00:00","UserScreenname":"xamarinhq","Text":"Adding geospatial calculations to your #Xamarin apps with #Azure #CosmosDB: https://t.co/acrN8gdJdS https://t.co/rS6ZWBVQDw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":20,"RawContent":null},{"Id":"1003716129758629888","CreatedAt":"2018-06-04T19:12:28+00:00","UserScreenname":"xamarinhq","Text":"Introducing the https://t.co/3QxhuBuvHc Firebase Job Dispatcher—background scheduling for all Android devices: https://t.co/vZlLAkI925","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":16,"RawContent":null}]}},"RunOn":"2018-06-17T05:30:59.7239489Z","RunDurationInMilliseconds":4018}