{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11348480311","Type":"IssuesEvent","CreatedAt":"2020-01-24T00:33:05","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7764","RelatedDescription":"Closed issue \"A/B test prefix matching on nuget.org\" (#7764) at NuGet/NuGetGallery","RelatedBody":"⚠️ Do not copy this issue! This used a special A/B test process. For correct instructions, follow this process in the OneNote: [Rebuild the Azure Search Index](https://microsoft.sharepoint.com/teams/NuGet/_layouts/OneNote.aspx?id=%2Fteams%2FNuGet%2FTeam%2FNugetServer%2FNugetServerTeamNote&wd=target%28Operations.one%7CC674B49C-4CB7-4793-8890-A1E46E33FEB9%2FRebuild%20the%20Azure%20Search%20Index%7CC705999F-85D9-4A93-8CFB-161C393C56FE%2F%29).\r\n\r\n1. Determine the live instance of the Azure Search jobs\r\n    - [ ] \"a\"\r\n    - [x] \"b\"\r\n    - [ ] \"c\"\r\n1. ~~Determine the new instance to be used~~\r\n    - [ ] \"a\"\r\n    - [x] \"b\"\r\n    - [ ] \"c\"\r\n1. Update the job and service configuration\r\n    - [ ] ~~NuGetDeployment PR:~~\r\n    - [ ] ~~Infrastructure build:~~\r\n    - [ ] ~~NuGet.Jobs Config build:~~\r\n    - [x] AzureSearchService build: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=3385062\r\n1. ~~Deploy Azure Search infrastructure to provision the resources and secrets~~\r\n1. ~~Deploy Db2AzureSearch to initialize the new indexes~~\r\n1. ~~Deploy alternative instances of the Azure Search jobs~~\r\n1. ~~Monitor the new Catalog2AzureSearch cursors~~\r\n1. ~~Deploy V3 monitoring to start monitoring the new indexes. If you are not rebuilding for an A/B test all this really will do is add an additional cursor to wait on.~~\r\n1. Deploy AzureSearchService\r\n    - ⚠️ The Azure Search Service must be deployed after all other jobs.\r\n    - Release: https://devdiv.visualstudio.com/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=552548\r\n    - DEV\r\n       - [x] USNC\r\n       - [x] USSC\r\n       - [x] EA\r\n       - [x] SEA\r\n    - INT\r\n       - [x] USNC\r\n       - [x] USSC\r\n    - PROD\r\n       - [ ] USNC\r\n       - [ ] USSC\r\n       - [ ] EA\r\n       - [ ] SEA\r\n1. ~~Change the default Instance name for job release pipelines~~\r\n1. Wait a week.\r\n1. ~~Clean up~~\r\n   - ~~Stop monitoring the old cursors~~\r\n   - ~~Stop monitoring the old indexes by deploying V3 monitoring~~\r\n   - ~~Stop old job instances~~\r\n   - ~~Update the [Secret Rotation excel](https://microsoft.sharepoint.com/teams/NuGet/Team/Engineering/NuGet_Secret_Rototation_Status.xlsx?web=1) to make sure new secrets are there and old secrets are gone~~"},{"Id":"11340304238","Type":"IssuesEvent","CreatedAt":"2020-01-23T05:55:45","Actor":"vikassangal","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7820","RelatedDescription":"Opened issue \"NuGet Package restore failed for project,Unable to find version\" (#7820) at NuGet/NuGetGallery","RelatedBody":"Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\t\tNuGet Package restore failed for project Tests\\WebTests: Unable to find version '12.2.7221' of package 'Progress.Sitefinity.Ecommerce'.\r\n  C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\: Package 'Progress.Sitefinity.Ecommerce.12.2.7221' is not found on source 'C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\'.\r\n  https://api.nuget.org/v3/index.json: Package 'Progress.Sitefinity.Ecommerce.12.2.7221' is not found on source 'https://api.nuget.org/v3/index.json'."},{"Id":"11338738042","Type":"PullRequestEvent","CreatedAt":"2020-01-22T23:26:17","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7819","RelatedDescription":"Merged pull request \"[ReleasePrep][2020.01.21]FI master into dev\" (#7819) at NuGet/NuGetGallery","RelatedBody":"Picking up hotfix for json encode.\r\n\r\nBlocks https://github.com/NuGet/NuGetGallery/pull/7818"},{"Id":"11337363735","Type":"PullRequestEvent","CreatedAt":"2020-01-22T20:09:42","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7819","RelatedDescription":"Opened pull request \"[ReleasePrep][2020.01.21]FI master into dev\" (#7819) at NuGet/NuGetGallery","RelatedBody":"Picking up hotfix for json encode.\r\n\r\nBlocks https://github.com/NuGet/NuGetGallery/pull/7818"},{"Id":"11329669888","Type":"PullRequestEvent","CreatedAt":"2020-01-22T01:40:55","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7818","RelatedDescription":"Opened pull request \"[ReleasePrep][2020.01.21]RI dev to master\" (#7818) at NuGet/NuGetGallery","RelatedBody":"Pulling in display package page performance improvements."},{"Id":"11329316167","Type":"PullRequestEvent","CreatedAt":"2020-01-22T00:24:54","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7814","RelatedDescription":"Merged pull request \"Reject packages with duplicate dependency groups\" (#7814) at NuGet/NuGetGallery","RelatedBody":"Addresses https://github.com/NuGet/NuGetGallery/issues/7714"},{"Id":"11329031684","Type":"IssuesEvent","CreatedAt":"2020-01-21T23:31:16","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7817","RelatedDescription":"Opened issue \"Display package page semver 2 redirect does not work as expected\" (#7817) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nThe display package page redirects if the version provided in the URI is not normalized. For example using version [`05.5.0-preview1.6319`](https://www.nuget.org/packages/NuGet.Packaging/05.5.0-preview.1.6319) will get redirected to [`5.5.0-preview1.6319`](https://www.nuget.org/packages/NuGet.Packaging/5.5.0-preview.1.6319). However, semver 2 version [`5.5.0-preview.1.6319+ba2a72ac9afd9e7260798a6ad14088297570b350`](https://www.nuget.org/packages/NuGet.Packaging/5.5.0-preview.1.6319+ba2a72ac9afd9e7260798a6ad14088297570b350) does not redirect as expected.\r\n\r\n### Expected behavior\r\nNavigating to a semver2 version should redirect to the normalized version.\r\n"},{"Id":"11327455118","Type":"IssuesEvent","CreatedAt":"2020-01-21T19:52:47","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7816","RelatedDescription":"Closed issue \"ID Prefix Reservation\" (#7816) at NuGet/NuGetGallery","RelatedBody":"I have twice now followed the instructions for reserving an ID prefix to a name that matches the prefix of all 14 of my packages. It is also a name that I hold a federal trademark on. The second time, I also sent an email to an address I had for NuGet saying that it was my second attempt and that I had heard nothing back from the first attempt.\r\n\r\nIn both cases, I never heard anything back and my ID prefix is still not reserved.\r\n\r\nIs this a process that for some reason is normal to take several months? Or is it possible that the request was silently rejected for some reason? What should be my expectations for sending such an email into the void?"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11349388594","Type":"IssuesEvent","CreatedAt":"2020-01-24T04:41:49","Actor":"davkean","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9095","RelatedDescription":"Opened issue \"Having a (transitive) PackageReference and a ProjectReference to the same assembly leads to an error\" (#9095) at NuGet/Home","RelatedBody":"(Moved from https://github.com/dotnet/project-system/issues/4663 and opened on behalf of @felixhirt)\r\n\r\nI have the following situation (everything with the new .csproj project system):\r\n\"Application\" has \r\n   ProjectReference to \"LibA\"\r\n   ProjectReference to \"LibB\"\r\nand \"LibA\" has\r\n   PackageReference to \"LibB\"\r\n\r\nThis causes a build error in VisualStudio (2019, RC4) because all the PackageReferences are not found. A manual \"dotnet restore\" shows that \"An item with the same key has already been added. Key: (LibB, X.X.X)\"\r\n\r\nThe error only happens if both versions are the same. If i increment the version of LibB e.g. in the ProjectReference, it works fine (and uses the newer version)\r\n\r\nSearching did not yield much for me, i only found [4421](https://github.com/dotnet/project-system/issues/4421) which seems to be similar, but doesnt have much follow up (and no build error, thats why i opened a new issue)\r\n\r\nIf need be, i can try to create a simple reproduction solution"},{"Id":"11349383870","Type":"IssuesEvent","CreatedAt":"2020-01-24T04:40:25","Actor":"davkean","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9094","RelatedDescription":"Opened issue \"Content files not added to project (but copied to it) \" (#9094) at NuGet/Home","RelatedBody":"(Moved from: https://github.com/dotnet/project-system/issues/5316)\r\n\r\n**Visual Studio Version**: 16.2.2\r\n\r\n**Summary**:\r\nCheck \r\n[OrmTest.csrpoj](https://github.com/dotnet/project-system/files/3511749/OrmTest.txt)\r\nproject file from this [issue](https://github.com/linq2db/linq2db/issues/1865). Installing package with content files doesn't work with it properly - files are copied to project folder, but not included into project itself.\r\n\r\nI've tried to edit project file by replacing almost everything except project guid with content of new Windows Forms project, but it didn't helped (I suspect it already broke something in solution files at this point).\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Open attached project\r\n\r\n2. Reinstall linq2db.PostgreSQL nuget package\r\n\r\n\r\n**Expected Behavior**:\r\nContent files appeared in project under `LinqToDB.Templates` folder\r\n\r\n**Actual Behavior**:\r\nContent files appeared in project folder, but not in project\r\n\r\n**User Impact**:\r\nConfusion and anxiety"},{"Id":"11348849886","Type":"IssuesEvent","CreatedAt":"2020-01-24T02:03:16","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8873","RelatedDescription":"Closed issue \"Investigate NuGet's parallelization at restore time\" (#8873) at NuGet/Home","RelatedBody":"We parallelize a lot at restore time in PackageReference. The number of projects, the target frameworks, the http calls when fetching packages etc. \r\nThat means we frequently overload the threadpool with tasks. \r\n\r\nWhile investigating https://github.com/NuGet/Home/issues/8528, we found frequent situations where NuGet caused threadpool starvation. \r\n\r\nWe should investigate if this paralelization needs tweaking and looking for any long running synchronous operations. "},{"Id":"11348849708","Type":"IssuesEvent","CreatedAt":"2020-01-24T02:03:14","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/8873","RelatedDescription":"Reopened issue \"Investigate NuGet's parallelization at restore time\" (#8873) at NuGet/Home","RelatedBody":"We parallelize a lot at restore time in PackageReference. The number of projects, the target frameworks, the http calls when fetching packages etc. \r\nThat means we frequently overload the threadpool with tasks. \r\n\r\nWhile investigating https://github.com/NuGet/Home/issues/8528, we found frequent situations where NuGet caused threadpool starvation. \r\n\r\nWe should investigate if this paralelization needs tweaking and looking for any long running synchronous operations. "},{"Id":"11348849053","Type":"IssuesEvent","CreatedAt":"2020-01-24T02:03:04","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8873","RelatedDescription":"Closed issue \"Investigate NuGet's parallelization at restore time\" (#8873) at NuGet/Home","RelatedBody":"We parallelize a lot at restore time in PackageReference. The number of projects, the target frameworks, the http calls when fetching packages etc. \r\nThat means we frequently overload the threadpool with tasks. \r\n\r\nWhile investigating https://github.com/NuGet/Home/issues/8528, we found frequent situations where NuGet caused threadpool starvation. \r\n\r\nWe should investigate if this paralelization needs tweaking and looking for any long running synchronous operations. "},{"Id":"11348550437","Type":"IssuesEvent","CreatedAt":"2020-01-24T00:49:45","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7749","RelatedDescription":"Closed issue \"Enaled locked mode for nuget solution in CI\" (#7749) at NuGet/Home","RelatedBody":"Once VSTS agents are moved to dev16 preview3 or greater then we should enable locked mode for package restores for NuGet solution."},{"Id":"11348310793","Type":"IssuesEvent","CreatedAt":"2020-01-23T23:57:42","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9059","RelatedDescription":"Closed issue \"Accessibility Fixes in PM UI - altText, etc...\" (#9059) at NuGet/Home","RelatedBody":"## Batch 1 - 3 fixes\r\n - [x] PM UI - Thumb control needs better accessibility name - don't just repeat control name.\r\n[1049222](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1049222) - A11y_VS ASP.NET and Web Development_ Manage Nugent's-Browse_ Screen Reader : Narrator/NVDA is mentioning the vertical bar as \"Thumb\".\r\n\r\nTest of fix with Accessibility Insights:\r\n![image](https://user-images.githubusercontent.com/8865080/72912736-ef21aa80-3cf0-11ea-81fe-0ad52e5cf144.png)\r\n\r\n- [x] PackageItemControl - Package Icon should have \"Package Icon\" altText\r\n[994454](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/994454) - A11y_NuGetClient-MinorUIChanges_Installed_ScreenReader : Alternative text is not provided for \"Package Icon\" image for screen reader users.\r\n\r\nTest of fix with Accessibility Insights:\r\n![image](https://user-images.githubusercontent.com/8865080/72912940-3c9e1780-3cf1-11ea-8a2d-be63a2d0c555.png)\r\n\r\n- [x] ProjectView - Installed textbox needs an accessibility name\r\n[994499](https://devdiv.visualstudio.com/DevDiv/_queries/edit/994499) - A11y_NuGetClient-MinorUIChanges_TestPackage.Deprecation.CriticalBugs.AlternatePackage_Installed_AI4D: Name property does not exists for \"Installed\" edit box\r\n\r\nTest of fix with Accessibility Insights:\r\n![image](https://user-images.githubusercontent.com/8865080/72913110-7d962c00-3cf1-11ea-8402-f7b2c1d39d6e.png)\r\n\r\n## Batch 2 - Fix deprecation section of PM UI\r\n- [ ] Put label on icon. Make reason have label.\r\n[994458](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/994458) - A11y_NuGetClient-MinorUIChanges_TestPackage.Deprecation.Other_Installed_ScreenReader : Narrator is announcing \" edit \" word unnecessarily after reading deprecated message.\r\n\r\nBefore fix:\r\n![image](https://user-images.githubusercontent.com/8865080/72936620-6ae51c80-3d1c-11ea-988d-4452685fa154.png)\r\n\r\nAfter fix:\r\n\r\n\r\n## Soon\r\n\r\nPackageMetadataControl - TextBoxes should not have an Automation Name, but should have an Automation LabeledBy property. This allows narrator to understand the label and the value to read.\r\n - 994459 - A11y_NuGetClient-MinorUIChanges_TestPackage.Deprecation.Other_Installed_ScreenReader : Narrator is annoucing \"Dependencies\" for \"No Dependencies\" text."},{"Id":"11348187658","Type":"IssuesEvent","CreatedAt":"2020-01-23T23:32:33","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8971","RelatedDescription":"Closed issue \"Insertion of 5.5.0-preview2.6355\" (#8971) at NuGet/Home","RelatedBody":"VS\r\n* [x] PR: [220494](https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/220494?_a=overview)\r\n\r\n.NET Core SDK 3.1.2xx\r\n* [x] CLI ([PR](https://github.com/dotnet/cli/pull/13164))\r\n* [x] SDK ([PR](https://github.com/dotnet/sdk/pull/4105))\r\n* [x] Toolset ([PR](https://github.com/dotnet/toolset/pull/3926))\r\n\r\n.NET Core 5 Dev\r\n* [x] SDK (https://github.com/dotnet/sdk/pull/4075)  - old one was not completed, so bot just updated the old PR :) https://github.com/dotnet/sdk/pull/4075/commits/8b18beb735df7b3a607040e9a16c3bac758c6c39\r\n* [x] Toolset ([PR](https://github.com/dotnet/toolset/pull/3927))\r\n\r\n* [x] Follow up version increment [PR 3177](https://github.com/NuGet/NuGet.Client/pull/3177)"},{"Id":"11347783111","Type":"IssuesEvent","CreatedAt":"2020-01-23T22:22:48","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9074","RelatedDescription":"Closed issue \"Cleanup redundant code in the VS extensibility services\" (#9074) at NuGet/Home","RelatedBody":"As part of the new extensibility work, I've discovered some dead/redundant code. \r\n\r\nThis issue is to track the cleanup. "},{"Id":"11347516952","Type":"IssuesEvent","CreatedAt":"2020-01-23T21:45:03","Actor":"aortiz-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8473","RelatedDescription":"Closed issue \"Warn that default symbols package format will change\" (#8473) at NuGet/Home","RelatedBody":"In preparation for eventually changing the default: #7815 "},{"Id":"11347167050","Type":"IssuesEvent","CreatedAt":"2020-01-23T20:57:41","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9067","RelatedDescription":"Closed issue \"Add unit tests for RestoreTaskExe\" (#9067) at NuGet/Home","RelatedBody":"# Details about Problem\r\n\r\nAs a follow-up to https://github.com/NuGet/NuGet.Client/pull/3109 I need to add unit tests for the `RestoreTaskEx` class.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx):\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\n\r\n2.\r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"11346737183","Type":"IssuesEvent","CreatedAt":"2020-01-23T20:01:59","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9093","RelatedDescription":"Closed issue \"9098\" (#9093) at NuGet/Home","RelatedBody":""},{"Id":"11346715053","Type":"IssuesEvent","CreatedAt":"2020-01-23T19:59:22","Actor":"zkat","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9093","RelatedDescription":"Opened issue \"9098\" (#9093) at NuGet/Home","RelatedBody":""},{"Id":"11346544656","Type":"IssuesEvent","CreatedAt":"2020-01-23T19:37:40","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9092","RelatedDescription":"Opened issue \"Insertion of 5.5.0-preview3.6392\" (#9092) at NuGet/Home","RelatedBody":"VS:\r\n \r\n\r\n- [ ]  https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/224323\r\n\r\n.NET Core 3.0\r\n \r\n- [ ] [dotnet/sdk/pull/4215](https://github.com/dotnet/sdk/pull/4215)\r\n\r\n- [ ] [dotnet/cli/pull/13208](https://github.com/dotnet/cli/pull/13208)\r\n\r\n- [ ] [dotnet/toolset/pull/4134](https://github.com/dotnet/toolset/pull/4134)"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-01-24T05:30:46.1963972Z","RunDurationInMilliseconds":2001}