{"Data":{"GitHub":{"Issues":[{"Id":"331043393","IsPullRequest":true,"CreatedAt":"2018-06-11T04:39:17","Actor":"BeanHsiang","Number":"344","RawContent":null,"Title":"enabled developer naming their column same as valid v…","State":"open","Body":"fiexed for #318，enabled developer naming their column same as valid variable name","Url":"https://github.com/dotnet/machinelearning/pull/344","RelatedDescription":"Open PR \"enabled developer naming their column same as valid v…\" (#344)"},{"Id":"330990596","IsPullRequest":false,"CreatedAt":"2018-06-10T18:19:42","Actor":"cosmincatalin","Number":"343","RawContent":null,"Title":"Predict hangs indefinetly","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Mac OS X 10.13\r\n- **.NET Version (eg., dotnet --info)**:  2.0.5\r\n\r\n### Issue\r\n\r\n- I have a `.csv` file with data that I use for individual predictions. I use a `FastTreeRegressor` model loaded from disk. I make individual predictions and not batch predictions because I need the absolute error histogram. At first, predicting works fine, but then, after what appears to be a random number of executions, the `Predict` method hangs without anything else happening.\r\n- I expect either `Predict` failing with some Exception, or better, fail for the same example or, even better, `Predict` to work for all my examples, which it should.\r\n\r\nBy _random_ I mean that I have a few million examples I have to go through, but predicting stops anywhere between after a few hundreds predictions or at best after a few thousands.\r\n\r\n### Source code / logs\r\n\r\nThe stripped down source code for `Program.cs`. Note that I have also tried with version `0.2`\r\n\r\n```\r\nusing System;\r\nusing System.IO;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.ML;\r\nusing PredictionModelling;\r\n\r\nnamespace PredictionMetrics\r\n{\r\n    class Program\r\n    {\r\n\r\n        static async Task Main(string[] args)\r\n        {\r\n            foreach (string culture in cultures)\r\n            {\r\n                var model = await PredictionModel.ReadAsync<Data, DataPrediction>(\"model.zip\");\r\n                StreamReader file = new StreamReader(\"test.csv\");\r\n\r\n                file.ReadLine(); // This is for the header\r\n\r\n                string line;\r\n\r\n                using (StreamWriter outputFile = new StreamWriter(\"test-predictions.csv\"))\r\n                {\r\n                    var i = 0;\r\n                    outputFile.WriteLine($\"actual-value,predicted-value\");\r\n                    while ((line = file.ReadLine()) != null)\r\n                    {\r\n                        var data = line.Split(new[] { ',' });\r\n                        var data = new Data()\r\n                        {\r\n                            Feature0 = float.Parse(data[0]),\r\n                            Feature1 = float.Parse(data[1])\r\n                        };\r\n                        var csvLine = $\"{data[2]},{model.Predict(data).Value}\";\r\n                        outputFile.WriteLine(csvLine);\r\n                        i++;\r\n                        if (i % 100 == 0)\r\n                        {\r\n                            outputFile.Flush();\r\n                        }\r\n                    }\r\n                }\r\n                file.Close();\r\n            }\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/343","RelatedDescription":"Open issue \"Predict hangs indefinetly\" (#343)"},{"Id":"330952887","IsPullRequest":false,"CreatedAt":"2018-06-10T09:10:07","Actor":"BeanHsiang","Number":"342","RawContent":null,"Title":"Could TrainTestSplit support Shuffle?","State":"open","Body":"the class \"TrainTestSplit\" only support \"Fraction\" in TrainTestSplit.Input current, \"Shuffle\" is other important attribute. \r\nCould ML.NET support \"Shuffle & Split\" next version?","Url":"https://github.com/dotnet/machinelearning/issues/342","RelatedDescription":"Open issue \"Could TrainTestSplit support Shuffle?\" (#342)"},{"Id":"330843823","IsPullRequest":false,"CreatedAt":"2018-06-09T02:01:28","Actor":"TomFinley","Number":"341","RawContent":null,"Title":"Should entry-points respect `HideEnumValueAttribute` information?","State":"open","Body":"The `HideEnumValueAttribute` is currently only respected by the command line help tool. Here is an example of it:\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/c023727b76970ab913ec1ce38276508835c17bcf/src/Microsoft.ML.Transforms/NAHandleTransform.cs#L45-L52\r\n\r\nYet in the entry-point manifest I see is polluted with these shorter forms. I feel like these *probably* ought to be suppressed here during manifest generation as well.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/20099c31a9ca2d9c50eff299b8ce6f7be5d72346/test/BaselineOutput/Common/EntryPoints/core_manifest.json#L15620-L15632\r\n\r\nAlso the entry-point based API is affected by the same issue, of course.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/20099c31a9ca2d9c50eff299b8ce6f7be5d72346/src/Microsoft.ML/CSharpApi.cs#L11162-L11169","Url":"https://github.com/dotnet/machinelearning/issues/341","RelatedDescription":"Open issue \"Should entry-points respect `HideEnumValueAttribute` information?\" (#341)"},{"Id":"330842719","IsPullRequest":false,"CreatedAt":"2018-06-09T01:43:58","Actor":"rlingineni","Number":"340","RawContent":null,"Title":"Will this work with PCL Projects? ","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: iOS/Android\r\n\r\n### Issue\r\n- **What did you do?**\r\nI was experimenting running this on a Xamarin Mobile app (Xam.Forms). I was able to install the nuget package into my project, which targets PCL. However, no luck in getting it to work.\r\n\r\n- **What happened?**\r\nEntry point 'Trainers.StochasticDualCoordinateAscentClassifier' not found\r\n\r\n- **What did you expect?**\r\nI expected the program to run.\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n\r\n```\r\nvar pipeline = new LearningPipeline();\r\nvar data = new List<TranscriptionData>() {\r\n    new TranscriptionData { Transcription=\"This is a Happy presnetation!!\" , clicked=1},\r\n    new TranscriptionData { Transcription=\"Very sad now\" , clicked=0},\r\n    new TranscriptionData { Transcription=\"This is sad also\" , clicked=0}\r\n };\r\n\r\n     var collection = CollectionDataSource.Create(data);\r\n     pipeline.Add(collection);\r\n     pipeline.Add(new ColumnConcatenator(\"Features\", \"Transcription\"));\r\n     pipeline.Add(new StochasticDualCoordinateAscentClassifier()); //ERROR: any classifier here fails with entry point\r\n     PredictionModel<TranscriptionData, TranscriptionPrediction> model = pipeline.Train<TranscriptionData,TranscriptionPrediction>();\r\n\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/340","RelatedDescription":"Open issue \"Will this work with PCL Projects? \" (#340)"},{"Id":"330811369","IsPullRequest":true,"CreatedAt":"2018-06-08T21:42:39","Actor":"Ivanidzo4ka","Number":"339","RawContent":null,"Title":"WIP fix namespace issue in CSharpGenerator","State":"open","Body":"address #202.\r\nRefactoring incoming... thousand lines of spaghetti code is not fun to work with.\r\nwill try to address  #305, but no guarantees ","Url":"https://github.com/dotnet/machinelearning/pull/339","RelatedDescription":"Open PR \"WIP fix namespace issue in CSharpGenerator\" (#339)"},{"Id":"330789524","IsPullRequest":true,"CreatedAt":"2018-06-08T20:15:54","Actor":"yaeldekel","Number":"338","RawContent":null,"Title":"Create CalibratedPredictor instead of SchemaBindableCalibratedPredictor","State":"open","Body":"Whenever the predictor implements IValueMapper, we create a calibrated predictor that implements IValueMapperDist. If the predictor is not an IValueMapper, we create SchemaBindableCalibratedPredictor.\r\nFixes #337 .","Url":"https://github.com/dotnet/machinelearning/pull/338","RelatedDescription":"Open PR \"Create CalibratedPredictor instead of SchemaBindableCalibratedPredictor\" (#338)"},{"Id":"330788591","IsPullRequest":false,"CreatedAt":"2018-06-08T20:12:31","Actor":"yaeldekel","Number":"337","RawContent":null,"Title":"OVA macro can't handle trainers that create SchemaBindableCalibratedPredictor","State":"open","Body":"The solution is to create the CalibratedPredictor (which implements IValueMapperDist, the interfaced used by OVA) whenever possible.","Url":"https://github.com/dotnet/machinelearning/issues/337","RelatedDescription":"Open issue \"OVA macro can't handle trainers that create SchemaBindableCalibratedPredictor\" (#337)"},{"Id":"330785950","IsPullRequest":false,"CreatedAt":"2018-06-08T20:02:42","Actor":"rlingineni","Number":"336","RawContent":null,"Title":"Load data into LearningPipeline without TextLoader","State":"open","Body":"**Question:**\r\n\r\nSo I'm actually capturing my data directly from an array of sensors, and these are currently in memory. I don't have millions of datapoints, just a few hundred. I do not want to write them to file. Is TextLoader is the only way as of now to ingest data to `LearningPipeline`? \r\n\r\nI wondering if I could point to an array of objects instead of a text file to load them up, is there any alternate way I could ingest data?","Url":"https://github.com/dotnet/machinelearning/issues/336","RelatedDescription":"Open issue \"Load data into LearningPipeline without TextLoader\" (#336)"},{"Id":"330733393","IsPullRequest":false,"CreatedAt":"2018-06-08T19:30:53","Actor":"Ivanidzo4ka","Number":"334","RawContent":null,"Title":"solution file contain link to  non existent project","State":"closed","Body":"Where is no src\\Microsoft.ML.Commands project in our codebase\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"src\", \"src\", \"{09EADF06-BE25-4228-AB53-95AE3E15B530}\"\r\n\tProjectSection(SolutionItems) = preProject\r\n\t\tsrc\\Microsoft.ML.Commands\\Microsoft.ML.Commands.csproj = src\\Microsoft.ML.Commands\\Microsoft.ML.Commands.csproj\r\n\tEndProjectSection\r\nEndProject\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/334","RelatedDescription":"Closed issue \"solution file contain link to  non existent project\" (#334)"},{"Id":"330736894","IsPullRequest":true,"CreatedAt":"2018-06-08T17:45:02","Actor":"Ivanidzo4ka","Number":"335","RawContent":null,"Title":"Remove unexisting project from solution","State":"closed","Body":"Address #334 ","Url":"https://github.com/dotnet/machinelearning/pull/335","RelatedDescription":"Closed or merged PR \"Remove unexisting project from solution\" (#335)"},{"Id":"330441759","IsPullRequest":false,"CreatedAt":"2018-06-08T15:42:24","Actor":"helloguo","Number":"328","RawContent":null,"Title":"v 0.2.0 does not support BinaryLogisticRegressor and LogisticRegressor","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro Windows 10**:\r\n- **.NET Version 2.1.300-rc1-008673**: \r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nsrc:\r\n```\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.Models;\r\nusing Microsoft.ML.Trainers;\r\nusing Microsoft.ML.Transforms;\r\nusing System;\r\nusing System.Diagnostics;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace mlnettest\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            test1();\r\n            test2();\r\n        }\r\n\r\n        static void test1()\r\n        {\r\n            var pipeline = new LearningPipeline();\r\n            pipeline.Add(new BinaryLogisticRegressor());\r\n        }\r\n\r\n        static void test2()\r\n        {\r\n            var pipeline = new LearningPipeline();\r\n            pipeline.Add(new LogisticRegressor());\r\n        }\r\n    }\r\n}\r\n```\r\ncsproj\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  \r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.ML\" Version=\"0.2.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n- **What happened?**\r\nerror msg when I run `dotnet run`:\r\n```\r\nProgram.cs(23,30): error CS0246: The type or namespace name 'BinaryLogisticRegressor' could not be found (are you missing a using directive or an assembly reference?) [C:\\Users\\guo\\Desktop\\mlnettest\\mlnettest.csproj]\r\nProgram.cs(29,30): error CS0246: The type or namespace name 'LogisticRegressor' could not be found (are you missing a using directive or an assembly reference?) [C:\\Users\\guo\\Desktop\\mlnettest\\mlnettest.csproj]\r\n```\r\n- **What did you expect?**\r\nIf I use v0.1.0 `<PackageReference Include=\"Microsoft.ML\" Version=\"0.1.0\" />`, the code can run without any issue. I was wondering why v0.2.0 does not support these two learners?\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/328","RelatedDescription":"Closed issue \"v 0.2.0 does not support BinaryLogisticRegressor and LogisticRegressor\" (#328)"},{"Id":"330630799","IsPullRequest":false,"CreatedAt":"2018-06-08T12:00:57","Actor":"prisar","Number":"333","RawContent":null,"Title":"System.DllNotFoundException: Unable to load DLL 'CpuMathNative'","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows Server 2016 Standard\r\n- **.NET Version (eg., dotnet --info)**: Core 2.0\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nWhen trying to load model from a file `var model = PredictionModel.ReadAsync<IrisData, IrisPrediction>(modelPath).Result;` gives DllNotFoundException while running in windows container.\r\n- **What happened?**\r\nInternal Server Error\r\n- **What did you expect?**\r\nModel should be loaded in model variable.\r\n### Source code / logs\r\n```\r\nSystem.DllNotFoundException: Unable to load DLL 'CpuMathNative': The specified module could not be found. (Exception from HRESULT: 0x8007007E)\r\n   at Microsoft.ML.Runtime.Internal.CpuMath.Thunk.DotU(Single* pa, Single* pb, Int32 c)\r\n   at Microsoft.ML.Runtime.Internal\r\n1000\r\n.CpuMath.SseUtils.DotProductDense(Single[] a, Single[] b, Int32 count)\r\n   at Microsoft.ML.Runtime.Learners.MulticlassLogisticRegressionPredictor.PredictCore(VBuffer`1& src, Single[]& dst)\r\n   at Microsoft.ML.Runtime.Learners.MulticlassLogisticRegressionPredictor.<GetMapper>b__30_0[TSrc,TDst](VBuffer`1& src, VBuffer`1& dst)\r\n   at Microsoft.ML.Runtime.Data.PredictedLabelScorerBase.EnsureCachedPosition[TScore](Int64& cachedPosition, TScore& score, IRow boundRow, ValueGetter`1 scoreGetter)\r\n   at Microsoft.ML.Runtime.Data.MultiClassClassifierScorer.<>c__DisplayClass14_0.<GetPredictedLabelGetter>b__0(UInt32& dst)\r\n   at Microsoft.ML.Runtime.Data.KeyToValueTransform.KeyToValueMap`2.<>c__DisplayClass7_0.<GetMappingGetter>b__0(TValue& dst)\r\n   at Microsoft.ML.Runtime.Data.DataViewUtils.Splitter.Consolidator.<>c__DisplayClass4_1.<ConsolidateCore>b__2()\r\n\r\n```Please paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/333","RelatedDescription":"Open issue \"System.DllNotFoundException: Unable to load DLL 'CpuMathNative'\" (#333)"},{"Id":"330596962","IsPullRequest":false,"CreatedAt":"2018-06-08T10:02:13","Actor":"prisar","Number":"332","RawContent":null,"Title":"TextLoader is different in 0.1.0 and 0.2.0","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: 2016\r\n- **.NET Version (eg., dotnet --info)**: 2.0\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nTrying to use `new TextLoader<IrisData>(dataPath, separator: \",\")` in 0.2.0\r\n- **What happened?**\r\nShows error\r\n- **What did you expect?**\r\nPlease give a documentation for new changes in 0.2.0\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/332","RelatedDescription":"Open issue \"TextLoader is different in 0.1.0 and 0.2.0\" (#332)"},{"Id":"330535975","IsPullRequest":false,"CreatedAt":"2018-06-08T06:34:04","Actor":"prisar","Number":"331","RawContent":null,"Title":"Async Main is not taken as entrypoint in c# 7.0","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows Server 2016 \r\n- **.NET Version (eg., dotnet --info)**: Core 2.0\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nTried to use static async Main\r\n- **What happened?**\r\nCouldn't build\r\n- **What did you expect?**\r\nBuild without error\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/331","RelatedDescription":"Open issue \"Async Main is not taken as entrypoint in c# 7.0\" (#331)"},{"Id":"330471837","IsPullRequest":true,"CreatedAt":"2018-06-07T23:56:00","Actor":"mitevpi","Number":"330","RawContent":null,"Title":"Added more details to the NumTrees argument in FastTree ","State":"closed","Body":"This PR fixes issue #223. Added more specificity to the NumTrees (number of trees) argument's help text within the FastTree class.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/330","RelatedDescription":"Closed or merged PR \"Added more details to the NumTrees argument in FastTree \" (#330)"},{"Id":"330448071","IsPullRequest":false,"CreatedAt":"2018-06-07T23:20:50","Actor":"helloguo","Number":"329","RawContent":null,"Title":"Unhandled Exception when using OrdinaryLeastSquaresRegressor","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro Windows 10**:\r\n- **.NET Version 2.1.300-rc1-008673**: \r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI replace `FastTreeRegressor` with `OrdinaryLeastSquaresRegressor` in sample Regression_TaxiFarePrediction https://github.com/dotnet/machinelearning-samples/blob/master/samples/getting-started/Regression_TaxiFarePrediction/Program.cs#L65\r\n- **What happened?**\r\nerror msg:\r\n```\r\n=============== Training model ===============\r\nAutomatically adding a MinMax normalization transform, use 'norm=Warn' or 'norm=No' to turn this behavior off.\r\n  Bad value at line 1 in column PassengerCount\r\n  Bad value at line 1 in column TripDistance\r\nProcessed 100001 rows with 2 bad values and 0 format errors\r\n  Bad value at line 1 in column PassengerCount\r\n  Bad value at line 1 in column TripDistance\r\n  Bad value at line 1 in column FareAmount\r\nProcessed 100001 rows with 3 bad values and 0 format errors\r\nTrainer solving for 19 parameters across 100000 examples\r\n\r\nUnhandled Exception: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.NotSupportedException: The MKL library (Microsoft.ML.MklImports.dll) or one of its dependencies is missing.\r\n   at Microsoft.ML.Runtime.Learners.OlsLinearRegressionTrainer.TrainCore(IChannel ch, Factory cursorFactory, Int32 featureCount)\r\n   at Microsoft.ML.Runtime.Learners.OlsLinearRegressionTrainer.Train(RoleMappedData examples)\r\n   --- End of inner exception stack trace ---\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)\r\n   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)\r\n   at Microsoft.ML.Runtime.Data.TrainUtils.TrainCore(IHostEnvironment env, IChannel ch, RoleMappedData data, ITrainer trainer, String name, RoleMappedData validData, ICalibratorTrainer calibrator, Int32 maxCalibrationExamples, Nullable`1 cacheData, IPredictor inpPredictor)\r\n   at Microsoft.ML.Runtime.EntryPoints.LearnerEntryPointsUtils.Train[TArg,TOut](IHost host, TArg input, Func`1 createTrainer, Func`1 getLabel, Func`1 getWeight, Func`1 getGroup, Func`1 getName, Func`1 getCustom, ICalibratorTrainerFactory calibrator, Int32 maxCalibrationExamples)\r\n   at Microsoft.ML.Runtime.Learners.OlsLinearRegressionTrainer.TrainRegression(IHostEnvironment env, Arguments input)\r\n\r\n```\r\n- **What did you expect?**\r\nI was wondering how to use `OrdinaryLeastSquaresRegressor`?\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/329","RelatedDescription":"Closed issue \"Unhandled Exception when using OrdinaryLeastSquaresRegressor\" (#329)"},{"Id":"330437371","IsPullRequest":true,"CreatedAt":"2018-06-07T21:11:13","Actor":"zeahmed","Number":"327","RawContent":null,"Title":"Enabled '_' in the field/column name in input type. ","State":"open","Body":"This PR fixes issue #318 \r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/327","RelatedDescription":"Open PR \"Enabled '_' in the field/column name in input type. \" (#327)"},{"Id":"330146549","IsPullRequest":false,"CreatedAt":"2018-06-07T07:19:29","Actor":"dvdbot","Number":"326","RawContent":null,"Title":"Is it possible to visualize a generated decision tree?","State":"open","Body":"Like the title says, is it possible to visualize a generated decision tree based on the model?\r\nLike I heard it possible in Azure ML\r\n\r\nCurrently working on a project and would love to visualize the decision tree it generates so I can look for differences and test certain things.","Url":"https://github.com/dotnet/machinelearning/issues/326","RelatedDescription":"Open issue \"Is it possible to visualize a generated decision tree?\" (#326)"},{"Id":"329979741","IsPullRequest":false,"CreatedAt":"2018-06-07T02:21:03","Actor":"epignosisx","Number":"317","RawContent":null,"Title":"Question: How to get accuracy in predicted label","State":"closed","Body":"Is it possible to get the accuracy/precision of a predicted label? Is there an attribute I can use the extract it? Basically some thing like:\r\n\r\n```cs\r\npublic class EmployeePrediction\r\n{\r\n    [ColumnName(\"PredictedLabel\")]\r\n    public bool Outcome;\r\n\r\n    [SomeAttribute]\r\n    public float Accuracy;\r\n}\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/317","RelatedDescription":"Closed issue \"Question: How to get accuracy in predicted label\" (#317)"},{"Id":"330091005","IsPullRequest":false,"CreatedAt":"2018-06-07T02:04:43","Actor":"zhengchun","Number":"325","RawContent":null,"Title":"Does ML.NET supports Chinese?","State":"open","Body":"For example, A Chinese `长春市长春药店`  that have many ways to extract text.\r\n\r\nBigram algorithm, its simple and fast.\r\n```\r\n长春\r\n春市\r\n市长\r\n长春\r\n春药\r\n药店\r\n```\r\n\r\nStandard algorithm.\r\n```\r\n长春市\r\n长春\r\n药店\r\n```\r\n\r\nI noticed the ML.NET was include a `NGramNgramExtractor` class that supported N-Gram algorithm, does it  support Chinese? The `Transforms.TextTransformLanguage` includes `English,French,German,Dutch,Italian,Spanish,Japanese`.\r\n\r\nIf not, how to implement custom text segmentation for other language? Hope in the future version can support custom extract text feature.\r\n\r\nThanks.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/325","RelatedDescription":"Open issue \"Does ML.NET supports Chinese?\" (#325)"},{"Id":"330077268","IsPullRequest":true,"CreatedAt":"2018-06-07T00:29:58","Actor":"zeahmed","Number":"324","RawContent":null,"Title":"Using named-tuple in OneToOneTransforms' constructor to make API more readable.","State":"open","Body":"This is a partial fix to #274 without breaking anything.\r\n\r\n- Using named-tuple in the constructor instead of unnamed-tuple.\r\n- Renamed the parameters of methods.","Url":"https://github.com/dotnet/machinelearning/pull/324","RelatedDescription":"Open PR \"Using named-tuple in OneToOneTransforms' constructor to make API more readable.\" (#324)"},{"Id":"330074648","IsPullRequest":false,"CreatedAt":"2018-06-07T00:13:05","Actor":"lqdev","Number":"323","RawContent":null,"Title":"Return Centroids for KMeansPlusPlusClusterer After Training","State":"open","Body":"### Issue\r\n\r\nOnce training is complete on a KMeansPlusPlusClusterer algorithm in the `LearningPipeline`, provide a method of accessing the centroids. \r\n","Url":"https://github.com/dotnet/machinelearning/issues/323","RelatedDescription":"Open issue \"Return Centroids for KMeansPlusPlusClusterer After Training\" (#323)"},{"Id":"330060335","IsPullRequest":false,"CreatedAt":"2018-06-06T22:53:47","Actor":"markusweimer","Number":"322","RawContent":null,"Title":"Release notes for 0.2 are not linked from the .sln, but those for 0.1 are","State":"open","Body":"When browsing the `docs` folder via Visual Studio, there are release notes for ML.NET 0.1 listed. However, the release notes for 0.2 are missing. They are, in fact, in the file system.\r\n\r\nWe should have a consistent scheme here: Either the files are always added to the solution file, or never.","Url":"https://github.com/dotnet/machinelearning/issues/322","RelatedDescription":"Open issue \"Release notes for 0.2 are not linked from the .sln, but those for 0.1 are\" (#322)"},{"Id":"330035085","IsPullRequest":false,"CreatedAt":"2018-06-06T21:13:43","Actor":"alexanderkyte","Number":"321","RawContent":null,"Title":"Add weight quantization","State":"open","Body":"Weight quantization enables low-power edge devices to perform machine learning by trading a couple of percentage points of prediction accuracy for a very dramatic reduction in computation times. \r\n\r\nMobile devices will motivate dramatic optimizations and code changes to enable cross platform SIMD across very different devices. An alternative is to create an implementation that is fast(simple) enough and correct enough that most users never need to care about numerical performance. \r\n\r\nThe approach was initially made popular by XNOR-NET for real time edge vision classification. \r\nhttps://arxiv.org/pdf/1603.05279.pdf\r\nBut this is a generalized approach and there have been deeper analyses of the best way to negotiate the bitwidth-vs-model-accuracy scale. The training side can compress until the accuracy drops too low as part of the automatic hyperparameter tuning. This means a slight increase in training time in order to achieve low-power, high-speed streaming inference on edge processors. ","Url":"https://github.com/dotnet/machinelearning/issues/321","RelatedDescription":"Open issue \"Add weight quantization\" (#321)"},{"Id":"330014412","IsPullRequest":true,"CreatedAt":"2018-06-06T20:09:51","Actor":"codemzs","Number":"320","RawContent":null,"Title":"Include all categorical split points in feature gain map and clean up regression tree predictor for categorical splits.","State":"open","Body":"fixes #319 ","Url":"https://github.com/dotnet/machinelearning/pull/320","RelatedDescription":"Open PR \"Include all categorical split points in feature gain map and clean up regression tree predictor for categorical splits.\" (#320)"},{"Id":"330014023","IsPullRequest":false,"CreatedAt":"2018-06-06T20:08:34","Actor":"codemzs","Number":"319","RawContent":null,"Title":"Include all categorical split points in feature gain map and clean up regression tree predictor for categorical splits.","State":"open","Body":"FastTree feature gain map needs to contain feature gain per categorical split point in the case of multiple categorical values chosen as split points on a node when categorical split optimization is turned on.","Url":"https://github.com/dotnet/machinelearning/issues/319","RelatedDescription":"Open issue \"Include all categorical split points in feature gain map and clean up regression tree predictor for categorical splits.\" (#319)"},{"Id":"329655997","IsPullRequest":true,"CreatedAt":"2018-06-06T19:49:37","Actor":"Ivanidzo4ka","Number":"316","RawContent":null,"Title":"Add Cluster evaluator","State":"closed","Body":"Address #312 ","Url":"https://github.com/dotnet/machinelearning/pull/316","RelatedDescription":"Closed or merged PR \"Add Cluster evaluator\" (#316)"},{"Id":"329999025","IsPullRequest":false,"CreatedAt":"2018-06-06T19:20:44","Actor":"helloguo","Number":"318","RawContent":null,"Title":"TextLoader().CreateFrom() Unhandled Exception for version 0.2.0","State":"open","Body":"### System information\r\n\r\n- **OS Windows 10**:\r\n- **.NET Version 2.1.300-rc1-008673**: \r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n\r\nI move my code from ML.NET version 0.1.0 to ML.NET version 0.2.0. I have a data structure `FlightData` looks like following. Then I use `pipeline.Add(new TextLoader(trainingDataSet).CreateFrom<FlightData>(useHeader: true, separator: ',', allowQuotedStrings:true));` to load the data. \r\n```\r\n    public class FlightData\r\n    {\r\n        [Column(ordinal: \"0\")]\r\n        public float QUARTER;\r\n        [Column(ordinal: \"1\")]\r\n        public float MONTH;\r\n        [Column(ordinal: \"2\")]\r\n        public float DAY_OF_MONTH;\r\n        [Column(ordinal: \"3\")]\r\n        ....\r\n    }\r\n```\r\n- **What happened?**\r\n\r\nError message: \r\n```\r\nUnhandled Exception: System.InvalidOperationException: DAY_OF_MONTH is not alphanumeric.\r\n   at Microsoft.ML.Data.TextLoader.CreateFrom[TInput](Boolean useHeader, Char separator, Boolean allowQuotedStrings, Boolean supportSparse, Boolean trimWhitespace)\r\n```\r\n\r\nAfter looking at the error msg and ML.NET source code https://github.com/dotnet/machinelearning/blob/master/src/Microsoft.ML/Data/TextLoader.cs#L87, I change `DAY_OF_MONTH` to `DAYOFMONTH`. Then the error disappears. But it's common to use `_` in the variable names. \r\n- **What did you expect?**\r\n\r\nI can use `_` in variable names, which are part of Input fed to TextLoader.\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/318","RelatedDescription":"Open issue \"TextLoader().CreateFrom() Unhandled Exception for version 0.2.0\" (#318)"},{"Id":"329648904","IsPullRequest":false,"CreatedAt":"2018-06-05T22:34:50","Actor":"sfilipi","Number":"315","RawContent":null,"Title":"ExecuteGraphCommand.GetOutputToPath should not throw if the outputs are null ","State":"open","Body":"### System information\r\n\r\n- **.NET Version (eg., dotnet --info)**: 0.3.0-preview-26604-1\r\n\r\n### Issue\r\n\r\nConstruct an entry-points graph invoking the CV macro, and specifying the Warnings output of the CV macro, as the overall graph output. \r\n\r\nNotice that if the run produced no warnings, (warnings idv is null) ExecuteGraphCommand.GetOutputToPath throws. I think it should just warn and proceed to saving the rest of the output. \r\n\r\n\r\n### Source code / logs\r\n\r\nGraph used:\r\n\r\n                {\r\n\t\"Inputs\": {\r\n\t\t\"TrainFile\": \"..\\\\Sent140_Train.tsv\"\r\n\t},\r\n\t\"Outputs\": {\r\n\t\t\"PredictorModel0\": \"PredictorModel0.zip\",\r\n\t\t\"Warnings0\": \"Warnings0.csv\",\r\n\t\t\"OverallMetrics0\": \"OverallMetrics0.csv\",\r\n\t\t\"PerInstanceMetrics0\": \"PerInstanceMetrics0.csv\",\r\n\t\t\"ConfusionMatrix0\": \"ConfusionMatrix0.csv\"\r\n\t},\r\n\t\"Nodes\": [\r\n\t\t{\r\n\t\t\t\"Name\": \"Data.CustomTextLoader\",\r\n\t\t\t\"Inputs\": {\r\n\t\t\t\t\"InputFile\": \"$TrainFile\",\r\n\t\t\t\t\"CustomSchema\": \" sep=tab header+ col=SentimentText:TX:3  col=Sentiment:R4:1 \"\r\n\t\t\t},\r\n\t\t\t\"Outputs\": {\r\n\t\t\t\t\"Data\": \"$TrainDataView\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"Name\": \"Models.CrossValidator\",\r\n\t\t\t\"Inputs\": {\r\n\t\t\t\t\"Kind\": \"SignatureBinaryClassifierTrainer\",\r\n\t\t\t\t\"NumFolds\": 2,\r\n\t\t\t\t\"Data\": \"$TrainDataView\",\r\n\t\t\t\t\"Nodes\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"Name\": \"Transforms.ColumnCopier\",\r\n\t\t\t\t\t\t\"Inputs\": {\r\n\t\t\t\t\t\t\t\"Column\": [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"Name\": \"Label\",\r\n\t\t\t\t\t\t\t\t\t\"Source\": \"Sentiment\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\"Data\": \"$data0\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"Outputs\": {\r\n\t\t\t\t\t\t\t\"OutputData\": \"$Copy_DataView_Output_1528237424459_579\",\r\n\t\t\t\t\t\t\t\"Model\": \"$Copy_TransformModel_Output_1528237424459_493\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"Name\": \"Transforms.TextFeaturizer\",\r\n\t\t\t\t\t\t\"Inputs\": {\r\n\t\t\t\t\t\t\t\"Column\": {\r\n\t\t\t\t\t\t\t\t\"Name\": \"FeaturesText\",\r\n\t\t\t\t\t\t\t\t\"Source\": [\r\n\t\t\t\t\t\t\t\t\t\"SentimentText\"\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"Data\": \"$Copy_DataView_Output_1528237424459_579\",\r\n\t\t\t\t\t\t\t\"WordFeatureExtractor\": {\r\n\t\t\t\t\t\t\t\t\"Name\": \"NGram\",\r\n\t\t\t\t\t\t\t\t\"Settings\": {\r\n\t\t\t\t\t\t\t\t\t\"NgramLength\": 2,\r\n\t\t\t\t\t\t\t\t\t\"SkipLength\": 0,\r\n\t\t\t\t\t\t\t\t\t\"AllLengths\": true,\r\n\t\t\t\t\t\t\t\t\t\"MaxNumTerms\": [\r\n\t\t\t\t\t\t\t\t\t\t10000000\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\"Weighting\": \"Tf\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"CharFeatureExtractor\": {\r\n\t\t\t\t\t\t\t\t\"Name\": \"NGram\",\r\n\t\t\t\t\t\t\t\t\"Settings\": {\r\n\t\t\t\t\t\t\t\t\t\"NgramLength\": 3,\r\n\t\t\t\t\t\t\t\t\t\"SkipLength\": 0,\r\n\t\t\t\t\t\t\t\t\t\"AllLengths\": true,\r\n\t\t\t\t\t\t\t\t\t\"MaxNumTerms\": [\r\n\t\t\t\t\t\t\t\t\t\t10000000\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\"Weighting\": \"Tf\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"Outputs\": {\r\n\t\t\t\t\t\t\t\"OutputData\": \"$Text_DataView_Output_1528237424462_956\",\r\n\t\t\t\t\t\t\t\"Model\": \"$Text_TransformModel_Output_1528237424462_164\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"Name\": \"Transforms.ColumnConcatenator\",\r\n\t\t\t\t\t\t\"Inputs\": {\r\n\t\t\t\t\t\t\t\"Column\": [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\"Name\": \"Features\",\r\n\t\t\t\t\t\t\t\t\t\"Source\": [\r\n\t\t\t\t\t\t\t\t\t\t\"FeaturesText\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\"Data\": \"$Text_DataView_Output_1528237424462_956\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"Outputs\": {\r\n\t\t\t\t\t\t\t\"OutputData\": \"$Concat_DataView_Output_1528237424464_228\",\r\n\t\t\t\t\t\t\t\"Model\": \"$Concat_TransformModel_Output_1528237424464_5\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"Name\": \"Trainers.AveragedPerceptronBinaryClassifier\",\r\n\t\t\t\t\t\t\"Inputs\": {\r\n\t\t\t\t\t\t\t\"TrainingData\": \"$Concat_DataView_Output_1528237424464_228\",\r\n\t\t\t\t\t\t\t\"LossFunction\": {\r\n\t\t\t\t\t\t\t\t\"Name\": \"HingeLoss\",\r\n\t\t\t\t\t\t\t\t\"Settings\": {\r\n\t\t\t\t\t\t\t\t\t\"Margin\": 1\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\"NumIterations\": 10,\r\n\t\t\t\t\t\t\t\"Calibrator\": {\r\n\t\t\t\t\t\t\t\t\"Name\": \"PlattCalibrator\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"Outputs\": {\r\n\t\t\t\t\t\t\t\"PredictorModel\": \"$ap_PredictorModel_Output_1528237424465_314\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"Name\": \"Transforms.ManyHeterogeneousModelCombiner\",\r\n\t\t\t\t\t\t\"Inputs\": {\r\n\t\t\t\t\t\t\t\"TransformModels\": [\r\n\t\t\t\t\t\t\t\t\"$Copy_TransformModel_Output_1528237424459_493\",\r\n\t\t\t\t\t\t\t\t\"$Text_TransformModel_Output_1528237424462_164\",\r\n\t\t\t\t\t\t\t\t\"$Concat_TransformModel_Output_1528237424464_5\"\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\"PredictorModel\": \"$ap_PredictorModel_Output_1528237424465_314\"\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"Outputs\": {\r\n\t\t\t\t\t\t\t\"PredictorModel\": \"$PredictorModel0\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"Inputs\": {\r\n\t\t\t\t\t\"Data\": \"$data0\"\r\n\t\t\t\t},\r\n\t\t\t\t\"Outputs\": {\r\n\t\t\t\t\t\"PredictorModel\": \"$PredictorModel0\"\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"Outputs\": {\r\n\t\t\t\t\"PredictorModel\": \"$PredictorModel0\",\r\n\t\t\t\t\"Warnings\": \"$Warnings0\",\r\n\t\t\t\t\"OverallMetrics\": \"$OverallMetrics0\",\r\n\t\t\t\t\"PerInstanceMetrics\": \"$PerInstanceMetrics0\",\r\n\t\t\t\t\"ConfusionMatrix\": \"$ConfusionMatrix0\"\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n}\r\n","Url":"https://github.com/dotnet/machinelearning/issues/315","RelatedDescription":"Open issue \"ExecuteGraphCommand.GetOutputToPath should not throw if the outputs are null \" (#315)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-06-11T05:30:37.9413006Z","RunDurationInMilliseconds":965}