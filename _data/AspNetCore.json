{"Data":{"Blog":{"FeedItems":[{"Title":"Setting HTTP header attributes to enable Azure authentication/authorization using HTTPRepl","PublishedOn":"2019-09-23T18:25:20+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Posted on behalf of Ahmed Metwally\n  The HTTP Read-Eval-Print Loop (REPL) is a lightweight, cross-platform command-line tool that&#8217;s supported everywhere .NET Core is supported. It’s used for...","Href":"https://devblogs.microsoft.com/aspnet/setting-http-header-attributes-to-enable-azure-authentication-authorization-using-httprepl/","RawContent":null},{"Title":"ASP.NET Core and Blazor updates in .NET Core 3.0","PublishedOn":"2019-09-23T15:59:58+00:00","CommentsCount":35,"FacebookCount":0,"Summary":"ASP.NET Core and Blazor updates in .NET Core 3.0\nToday we are thrilled to announce the release of .NET Core 3.0! .NET Core 3.0 is ready for production use, and is loaded with lots of great new...","Href":"https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0/","RawContent":null},{"Title":"ASP.NET Core and Blazor updates in .NET Core 3.0 Release Candidate 1","PublishedOn":"2019-09-16T18:45:36+00:00","CommentsCount":8,"FacebookCount":0,"Summary":".NET Core 3.0 Release Candidate 1 (RC1) is now available. This release contains only a handful of bug fixes and closely represents what we expect to release for .NET Core 3.0.\nPlease see the release...","Href":"https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/","RawContent":null},{"Title":"ASP.NET Core and Blazor updates in .NET Core 3.0 Preview 9","PublishedOn":"2019-09-04T19:00:38+00:00","CommentsCount":115,"FacebookCount":0,"Summary":".NET Core 3.0 Preview 9 is now available and it contains a number of improvements and updates to ASP.NET Core and Blazor.\nHere&#8217;s the list of what&#8217;s new in this preview:\nBlazor event...","Href":"https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/","RawContent":null},{"Title":"Redesigning Configuration Refresh for Azure App Configuration","PublishedOn":"2019-08-27T17:00:06+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Overview\nSince its inception, the .NET Core configuration provider for Azure App Configuration has provided the capability to monitor changes and sync them to the configuration within a running...","Href":"https://devblogs.microsoft.com/aspnet/redesigning-configuration-refresh-for-azure-app-configuration/","RawContent":null},{"Title":"ASP.NET Core and Blazor updates in .NET Core 3.0 Preview 8","PublishedOn":"2019-08-13T18:28:53+00:00","CommentsCount":27,"FacebookCount":0,"Summary":".NET Core 3.0 Preview 8 is now available and it includes a bunch of new updates to ASP.NET Core and Blazor.\nHere&#8217;s the list of what&#8217;s new in this preview:\nProject template updates\nCleaned...","Href":"https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-8/","RawContent":null},{"Title":"Azure SignalR Service now supports Event Grid!","PublishedOn":"2019-08-09T06:41:06+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Azure SignalR Service now supports Event Grid!\nSince we GA&#8217;ed Azure SignalR Service in last September, serverless has become a very popular use case in Azure SignalR Service and is used by many...","Href":"https://devblogs.microsoft.com/aspnet/azure-signalr-service-now-supports-event-grid/","RawContent":null},{"Title":"HttpRepl: A command-line tool for interacting with RESTful HTTP services","PublishedOn":"2019-07-31T16:41:43+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"The ASP.NET team has built a command-line tool called HttpRepl. It lets you browse and invoke HTTP services in a similar way to working with files and folders. You give it a starting point (a base...","Href":"https://devblogs.microsoft.com/aspnet/httprepl-a-command-line-tool-for-interacting-with-restful-http-services/","RawContent":null},{"Title":"ASP.NET Core and Blazor updates in .NET Core 3.0 Preview 7","PublishedOn":"2019-07-23T16:55:44+00:00","CommentsCount":35,"FacebookCount":0,"Summary":".NET Core 3.0 Preview 7 is now available and it includes a bunch of new updates to ASP.NET Core and Blazor.\nHere&#8217;s the list of what&#8217;s new in this preview:\nLatest Visual Studio preview...","Href":"https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-7/","RawContent":null},{"Title":"Configuring a Server-side Blazor app with Azure App Configuration","PublishedOn":"2019-07-01T17:01:11+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"With .NET Core 3.0 Preview 6, we added authentication &#38; authorization support to server-side Blazor apps. It only takes a matter of seconds to wire up an app to Azure Active Directory with support...","Href":"https://devblogs.microsoft.com/aspnet/configuring-a-server-side-blazor-app-with-azure-app-configuration/","RawContent":null}],"ResultType":"Feed"},"AspNetCore-Issues":{"Issues":[{"Id":"503775379","IsPullRequest":false,"CreatedAt":"2019-10-08T01:37:04","Actor":"benaadams","Number":"14809","RawContent":null,"Title":"Identity UI should use autocomplete attributes ","State":"open","Body":"### Is your feature request related to a problem? Please describe.\r\n\r\nIdentity UI should use autocomplete attributes on the input HTML elements to better work with password managers and in-browser password managers.\r\n\r\n### Describe the solution you'd like\r\nLogin\r\n```html\r\n  <input type=\"text\" autocomplete=\"username\">\r\n  <input type=\"password\" autocomplete=\"current-password\">\r\n```\r\n\r\nRegister\r\n```html\r\n  <input type=\"text\" autocomplete=\"username\">\r\n  <input type=\"password\" autocomplete=\"new-password\">\r\n  <input type=\"password\" autocomplete=\"new-password\">\r\n```\r\n\r\nChange password; while it doesn't require username, should include it as a non-displayed field with the correct username prefilled and autocomplete set to again aid password managers: \r\n```html\r\n  <input style=display:hidden\" type=\"text\" autocomplete=\"username\" value=\"@username\">\r\n  <input type=\"password\" autocomplete=\"current-password\">\r\n  <input type=\"password\" autocomplete=\"new-password\">\r\n  <input type=\"password\" autocomplete=\"new-password\">\r\n```\r\n\r\n### Additional context\r\n\r\n* [Create Amazing Password Forms](https://www.chromium.org/developers/design-documents/create-amazing-password-forms)\r\n* [Password Form Styles that Chromium Understands](https://www.chromium.org/developers/design-documents/form-styles-that-chromium-understands)\r\n\r\n/cc @blowdart ","Url":"https://github.com/aspnet/AspNetCore/issues/14809","RelatedDescription":"Open issue \"Identity UI should use autocomplete attributes \" (#14809)"},{"Id":"503771160","IsPullRequest":false,"CreatedAt":"2019-10-08T01:19:44","Actor":"philieu","Number":"14808","RawContent":null,"Title":"Kestrel Heartbeat.OnHeartbeat error","State":"open","Body":"### Describe the bug\r\nWe are seeing the following error from Kestrel heartbeat:\r\nHeartbeat.OnHeartbeat\r\nSystem.ArgumentNullException: Value cannot be null.\r\n   at System.Threading.Monitor.ReliableEnter(Object obj, Boolean& lockTaken)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions.Internal.TransportConnection.TickHeartbeat()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.ConnectionManager.Walk(Action`1 callback)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.Heartbeat.OnHeartbeat()\r\n\r\nWhen the above error happened, AWS decided that the EC2 instance is unhealthy and terminate it.\r\nI was not able to get more information in the docs to understand what that error means.\r\n\r\n### To Reproduce\r\nWe are using the following:\r\n1. ASP.NET Core SDK 2.2 102 (2.2.1 runtime)\r\n2. AWS Linux 2 AMI\r\n3. SQL Server backend (not sure that matter)\r\n\r\n### Expected behavior\r\nSince the error is low level Kestrel error, there can't find any documentation on it as well as the approach to fix it.\r\n\r\nThanks.\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14808","RelatedDescription":"Open issue \"Kestrel Heartbeat.OnHeartbeat error\" (#14808)"},{"Id":"503750666","IsPullRequest":false,"CreatedAt":"2019-10-07T23:56:14","Actor":"robinwilson16","Number":"14807","RawContent":null,"Title":"JsonIgnore Being Ignored in .NET Core 3.0 - Bug?","State":"open","Body":"In .NET Core it is possible to return an object as Json easily by returning as a JsonResult\r\n```\r\nreturn new JsonResult(Note);\r\n```\r\n\r\nThen to avoid related entities also being returned (in this case details of the user who wrote the note) adding `[JsonIgnore]` to the attributes of the entity stopped this related info from pulling through and leading to circular references.\r\n\r\nHowever when switching a project from .NET Core 2.2 to .NET Core 3.0 this no longer works and `[JsonIgnore]` attributes are ignored. This would seem to be a bug from what I can tell given I can switch back to 2.2 and it works as expected.\r\n\r\nThis is the field contained in the model:\r\n```\r\n[JsonIgnore]\r\n[Display(Name = \"Created By\")]\r\npublic ApplicationUser ApplicationUserCreatedBy { get; set; }\r\n```\r\n\r\nThis is the correct output when project is targeting .NET Core 2.2:\r\n```\r\n[{\"noteID\":257,\"customerID\":4204,\"noteText\":\"07.03.06  4pm\",\"isAlert\":false,\"createdDate\":\"2008-01-01T00:00:00\",\"createdBy\":\"e9483193-0ced-4b8c-9eb0-1faad74e9907\",\"updatedDate\":null,\"updatedBy\":null}]\r\n```\r\n\r\nThis is the output if the project is switched to 3.0 (shortened as is very long until is cut halfway through):\r\n```\r\n[{\"noteID\":257,\"customerID\":4204,\"noteText\":\"07.03.06  4pm\",\"isAlert\":false,\"createdDate\":\"2008-01-01T00:00:00\",\"createdBy\":\"e9483193-0ced-4b8c-9eb0-1faad74e9907\",\"applicationUserCreatedBy\":{\"forename\":\"Robin\",\"surname\":\"Wilson\",\"id\":\"...\r\n```\r\n\r\nAs you can see in .NET Core 3.0 the `[JsonIgnore]` attribute is having no effect.\r\nThis would appear to be a bug unless the functionality has changed but I can find nothing that relates to this changing.","Url":"https://github.com/aspnet/AspNetCore/issues/14807","RelatedDescription":"Open issue \"JsonIgnore Being Ignored in .NET Core 3.0 - Bug?\" (#14807)"},{"Id":"503745228","IsPullRequest":false,"CreatedAt":"2019-10-07T23:35:52","Actor":"avparuch","Number":"14806","RawContent":null,"Title":"HttpSysServer is triggering a TLS renegotiation for client cert even if disabled in http.sys","State":"open","Body":"### Describe the bug\r\nAccessing the ClientCertificate property is triggering a TLS renegotiation on the HttpSysServer even though http.sys is configured properly not to request for client cert.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core 2.2. Create a brand new solution in Visual Studio 2019. Use the HttpSysServer version of the .NET core project. https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/httpsys?view=aspnetcore-3.0\r\n\r\n2. Run this code if (HttpContext.Connection.ClientCertificate != null)\r\n3. Purely because the ClientCertificateProperty is accessed,  a TLS renegotiation is triggered and the user is prompted for a cert on the browser.\r\n4. This is despite http.sys kernel mode driver being configured correctly not to request for clientcertificate. (netsh http add sslcert hostnameport=a.microsoftonline.com:443 \r\ncerthash=EC9CA6E0E645AAB24F8AD890DF75A448824D2C37 appid='{4dc3e181-e14b-4a21-b022-59fc669b0914}' certstorename=MY \r\nclientcertnegotiation=disable).\r\n\r\n\r\n### Expected behavior\r\nOther listeners on top of http.sys such as IIS do not exhibit this behavior, they respect the  http.sys configuration. The expected behavior is to respect the http.sys configuration and not trigger renegotiation purely because the code is trying to check if the ClientCertificate is null or not.\r\n\r\n### Additional context\r\nThere is a closed issue already on this topic (the user did not provide a repro) : https://github.com/aspnet/HttpSysServer/issues/340\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14806","RelatedDescription":"Open issue \"HttpSysServer is triggering a TLS renegotiation for client cert even if disabled in http.sys\" (#14806)"},{"Id":"503737354","IsPullRequest":false,"CreatedAt":"2019-10-07T23:09:17","Actor":"rynowak","Number":"14805","RawContent":null,"Title":"Razor DocumentChanged_ReparsesRelatedFiles test is flaky","State":"open","Body":"See: https://dev.azure.com/dnceng/internal/_build/results?buildId=378987&view=ms.vss-test-web.build-test-results-tab&runId=11678352&resultId=100111&paneView=debug\r\n\r\n![image](https://user-images.githubusercontent.com/1430011/66355631-c978bd00-e91c-11e9-861c-fd59918cfa05.png)\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14805","RelatedDescription":"Open issue \"Razor DocumentChanged_ReparsesRelatedFiles test is flaky\" (#14805)"},{"Id":"503736250","IsPullRequest":false,"CreatedAt":"2019-10-07T23:05:47","Actor":"rynowak","Number":"14804","RawContent":null,"Title":"Razor VSCode ReportIssueCreator test is flaky","State":"open","Body":"From: https://dev.azure.com/dnceng/internal/_build/results?buildId=379348&view=logs&s=6884a131-87da-5381-61f3-d7acc3b91d76&j=7c8326b9-0a5f-532a-e6de-db8515c72d9a\r\n\r\n\r\n```txt\r\nFAIL tests/ReportIssueCreator.test.ts (18.281s)\r\n    ΓùÅ ReportIssueCreator ΓÇ║ create can operate when no content is available\r\n  \r\n      : Timeout - Async callback was not invoked within the 5000ms timeout specified by jest.setTimeout.Timeout - Async callback was not invoked within the 5000ms timeout specified by jest.setTimeout.Error:\r\n  \r\n        70 |     });\r\n        71 | \r\n      > 72 |     it('create can operate when no content is available', async () => {\r\n           |     ^\r\n        73 |         // Arrange\r\n        74 |         const api = createTestVSCodeApi();\r\n        75 |         const issueCreator = getReportIssueCreator(api);\r\n  \r\n        at new Spec (node_modules/jest-jasmine2/build/jasmine/Spec.js:116:22)\r\n        at Suite.Object.<anonymous>.describe (tests/ReportIssueCreator.test.ts:72:5)\r\n        at Object.<anonymous> (tests/ReportIssueCreator.test.ts:18:1)\r\n\r\n```","Url":"https://github.com/aspnet/AspNetCore/issues/14804","RelatedDescription":"Open issue \"Razor VSCode ReportIssueCreator test is flaky\" (#14804)"},{"Id":"503736177","IsPullRequest":true,"CreatedAt":"2019-10-07T23:05:34","Actor":"ryanbrandenburg","Number":"14803","RawContent":null,"Title":"Globbing test","State":"open","Body":"Fixes https://github.com/aspnet/AspNetCore/issues/14642.\r\n\r\nThe Globbing code splits the portions of a pattern up into chunks _stripping the `/`_, but `StaticWebAssetsFileProvider` will fail if the string being attempted doesn't start with `/` (due to creating a `PathString`). I've only seen this reproduce when we use IdentityUI because otherwise there's only the `PhysicalFileProvider`.\r\n\r\nThe actual code fix is [here](https://github.com/aspnet/AspNetCore/compare/release/3.1...rybrande/TagHelper?expand=1#diff-602ea31ac513cabca3196ef50e9bd176).\r\n\r\n@NTaylorMullen I'm wondering if this is the right place to fix this?","Url":"https://github.com/aspnet/AspNetCore/pull/14803","RelatedDescription":"Open PR \"Globbing test\" (#14803)"},{"Id":"503732906","IsPullRequest":false,"CreatedAt":"2019-10-07T22:55:04","Actor":"jhudsoncedaron","Number":"14802","RawContent":null,"Title":"\"ANCM Failed to Start\" after upgrade to ASP .NET 3.0 -- breaking change for debugger only","State":"open","Body":"I'm going to right out admit I don't know how Visual Studio's right click -> Start Debugging works for web projects.\r\n\r\nI've more or less followed the instructions for upgrading projects to 3.0, manually project files to do so. (I've got too much stuff in there that Visual Studio doesn't understand for me to trust the IDE to handle it.) I've gotten to the point where the projects light up and run with dotnet run and I can point my web browser at them.\r\n\r\nBut when it comes to Right Click -> Debug in Visual Studio, it doesn't work. The browser takes a long time to yield the ANCM Failed to Start message. Debugging didn't take very long. The project is listening on its default port in appsettings.json and whatever method has historically been used for Visual Studio to redirect the startup sequence isn't working more. I'm convinced it's supposed to be environment variables.\r\n\r\nHere's my current entry point:\r\n\r\n````\r\n            var builder = new ConfigurationBuilder()\r\n                    .SetBasePath(Directory.GetCurrentDirectory())\r\n                    .AddJsonFile(\"appsettings.json\", optional: false, reloadOnChange: true)\r\n                    .AddJsonFile(\"devsettings.json\", optional: true, reloadOnChange: true)\r\n                    .AddEnvironmentVariables();\r\n            var config = builder.Build();\r\n\r\n            var host = new WebHostBuilder()\r\n                .UseKestrel(options =>\r\n                {\r\n                    // Kestrel really does require one port per service.\r\n                    var port = config.GetValue<ushort>(\"Port\", 0);\r\n                    var httpsport = config.GetValue<ushort>(\"HttpsPort\", 0);\r\n                    var certificate = config.GetValue<string>(\"Certificate\", \"\");\r\n                    var certificatepw = config.GetValue<string>(\"CertificatePassword\", \"\");\r\n                    var bindaddr = config.GetValue<string>(\"BindAddress\", \"*\");\r\n                    System.Net.IPAddress bindto = (string.IsNullOrEmpty(bindaddr) || bindaddr == \"*\") ? null : System.Net.IPAddress.Parse(bindaddr);\r\n                    Action<Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions> https =\r\n                            listenOptions =>\r\n                            {\r\n                                if (!string.IsNullOrEmpty(certificate))\r\n                                    listenOptions.UseHttps(certificate, certificatepw);\r\n                            };\r\n                    bool disableIPv6 = config.GetValue<bool>(\"DisableIPv6\", false);\r\n                    if (!config.GetValue<bool>(\"DisableIPv4\", false))\r\n                    {\r\n                        if (port > 0)\r\n                            options.Listen(System.Net.IPAddress.Loopback, port);\r\n                        // DisableIPv4 doesn't reaally work because Kestrel will bind anyway to IPv4 if possible and given IPv6 any;\r\n                        // this switch can only be used to avoid blowing up if the host doesn't have an IPv4 stack.\r\n                        // Don't bind twice\r\n                        if (httpsport > 0 && certificate != null\r\n                            && (!(bindto is null) || disableIPv6)\r\n                            && (bindto is null || bindto.AddressFamily == System.Net.Sockets.AddressFamily.InterNetwork))\r\n                        {\r\n                            options.Listen(bindto ?? System.Net.IPAddress.Any, httpsport, https);\r\n                        }\r\n                    }\r\n                    if (!disableIPv6)\r\n                    {\r\n                        if (port > 0)\r\n                            options.Listen(System.Net.IPAddress.IPv6Loopback, port);\r\n                        if (httpsport > 0 && certificate != null\r\n                            && (bindto is null || bindto.AddressFamily == System.Net.Sockets.AddressFamily.InterNetworkV6))\r\n                        {\r\n                            options.Listen(bindto ?? System.Net.IPAddress.IPv6Any, httpsport, https);\r\n                        }\r\n                    }\r\n                    options.AllowSynchronousIO = true;\r\n                })\r\n                .UseContentRoot(Directory.GetCurrentDirectory())\r\n                .ConfigureLogging((logging) =>\r\n                {\r\n                    logging.ClearProviders();\r\n                    logging.AddConsole();\r\n#if DEBUG\r\n                    logging.AddDebug();\r\n#endif\r\n                })\r\n                .UseIISIntegration()\r\n                .ConfigureServices((services) =>\r\n                {\r\n                    services.AddSingleton<IStartup>((sp) => new Startup(config));\r\n                })\r\n                .UseSetting(WebHostDefaults.ApplicationKey, \"Cedaron.FormBuilder.WebAPI\")\r\n                //.UseApplicationInsights()\r\n                .UseConfiguration(config)\r\n                .Build();\r\n\r\n            host.Run();\r\n````\r\n\r\nThe only differences in this code between 2.1 startup and 3.0 startup are the `.ConfigureLogging` block (used to be in `Startup.cs`) and commenting out `.UseApplicationInsights()`.\r\n\r\nThere is no `launchsettings.json` anymore. We haven't been using that since NET Core 1.0.","Url":"https://github.com/aspnet/AspNetCore/issues/14802","RelatedDescription":"Open issue \"\"ANCM Failed to Start\" after upgrade to ASP .NET 3.0 -- breaking change for debugger only\" (#14802)"},{"Id":"503710527","IsPullRequest":false,"CreatedAt":"2019-10-07T21:52:03","Actor":"JunTaoLuo","Number":"14801","RawContent":null,"Title":"Investigate using C# compiler to generate reference assemblies in 5.0","State":"open","Body":"This corresponds to the ProduceReferenceAssembly attribute: https://docs.microsoft.com/en-us/visualstudio/msbuild/common-msbuild-project-properties?view=vs-2019. Let's investigate using this in 5.0.","Url":"https://github.com/aspnet/AspNetCore/issues/14801","RelatedDescription":"Open issue \"Investigate using C# compiler to generate reference assemblies in 5.0\" (#14801)"},{"Id":"503710251","IsPullRequest":false,"CreatedAt":"2019-10-07T21:51:24","Actor":"HughPH","Number":"14800","RawContent":null,"Title":"ElementReference causes \"Invalid JSON\" exception when returned to JavaScript","State":"open","Body":"### Describe the bug\r\nCalling C# from JavaScript, then JavaScript from C# to obtain ElementReferences, then returning those ElementReferences to C#, Blazor throws an exception:\r\n```\r\nblazor.webassembly.js:1 Uncaught (in promise) Error: System.Text.Json.JsonException: Invalid JSON\r\n  at Microsoft.JSInterop.Infrastructure.DotNetDispatcher.EndInvokeJS (/Microsoft.JSInterop.JSRuntime jsRuntime, System.String arguments) <0x20ed888 + 0x000fc> in <4e424253df194e1299a1044d93a79164>:0 \r\n  at Mono.WebAssembly.Interop.MonoWebAssemblyJSRuntime.EndInvokeJS (/System.String argsJson) <0x20e4a58 + 0x0000a> in <d0b620549c284928acbf6b89d371ca02>:0 \r\n    at Object.callMethod (blazor.webassembly.js:1)\r\n    at Object.endInvokeJSFromDotNet (blazor.webassembly.js:1)\r\n    at blazor.webassembly.js:1\r\n```\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n- .Net Core 3.0.0-100\r\n- dotnet new blazorwasm\r\n\r\nCreate a JavaScript method that creates an element:\r\n```javascript\r\nwindow.CreateElement = (text) => {\r\n  var element = document.createElement(\"span\");\r\n  element.innerText = text;\r\n  return element;\r\n}\r\n```\r\nCreate a [JSInvokable] C# method:\r\n```csharp\r\n[JSInvokable]\r\npublic static async Task<List<ElementReference>> GetElements(){\r\n  List<ElementReference> refs = new List<ElementReference>();\r\n  refs.Add(await JSInterop.InvokeAsync<ElementReference>(\"CreateElement\",\"first\"));\r\n  refs.Add(await JSInterop.InvokeAsync<ElementReference>(\"CreateElement\",\"second\"));\r\n  return refs;\r\n}\r\n```\r\nCreate another JavaScript function that calls the C# method:\r\n```javascript\r\nwindow.Test = async () => {\r\n  var refs = await DotNet.InvokeAsync(\"TestProject\",\"GetElements\");\r\n}\r\n```\r\nInvoke window.Test.\r\n\r\n### Expected behavior\r\nExpect no exception to be thrown, and for the elements created by the CreateElement method to be returned to the Test method.\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14800","RelatedDescription":"Open issue \"ElementReference causes \"Invalid JSON\" exception when returned to JavaScript\" (#14800)"},{"Id":"503570889","IsPullRequest":false,"CreatedAt":"2019-10-07T21:30:56","Actor":"aspnet-hello","Number":"14793","RawContent":null,"Title":"Scenarios are not running: SignalRBroadcast, SignalREcho, SignalREchoAll","State":"closed","Body":"Some scenarios have stopped running:\n\n| Scenario | Environment | Last Run |\n| -------- | ----------- | -------- |\n| SignalRBroadcast | Windows, Physical, http, KestrelSockets | 10/4/19 10:43:54 PM +00:00 |\n| SignalREcho | Windows, Physical, http, KestrelSockets | 10/4/19 10:47:08 PM +00:00 |\n| SignalREchoAll | Windows, Physical, http, KestrelSockets | 10/4/19 10:50:19 PM +00:00 |\n\n[Logs](https://aka.ms/aspnet/benchmarks/jenkins)\n","Url":"https://github.com/aspnet/AspNetCore/issues/14793","RelatedDescription":"Closed issue \"Scenarios are not running: SignalRBroadcast, SignalREcho, SignalREchoAll\" (#14793)"},{"Id":"503652762","IsPullRequest":false,"CreatedAt":"2019-10-07T19:45:58","Actor":"dasMulli","Number":"14799","RawContent":null,"Title":"3.0 SDK copies Properties/launchSettings.json to output directory","State":"open","Body":"When a project referencing the Razor SDK (directly or through web/* SDKs), and contains a Properties\\launchSettings.json file, it will be copied to the build output but not the publish output.\r\n\r\nThe SDK explicitly forbids copying assets in `$(AppDesignerFolder)` to the publish directory.\r\n\r\nIn the 3.0 wave, the behaviour of `dotnet build` was changed to be more like `dotnet publish`. The web SDKs should follow the same philosophy and not copy development assets needlessly to avoid users copying them to production (which could contain env vars with connection strings or similar).\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Use .NET Core SDK 3.0.100\r\n2. `dotnet new razor`\r\n3. `dotnet build -c Release`\r\n4. See that the output contains `bin\\Release\\netcoreapp3.0\\Properties\\launchSettings.json`\r\n\r\n### Expected behavior\r\nAssets in `Properties` folder not copied to the build output (Behaviour before 3.0.* SDKs).\r\n\r\n### Additional context\r\nThe Razor SDK contains\r\n\r\n```xml\r\n    <!-- Set CopyToPublishDirectory to Never for items under AppDesignerFolder (\"Properties\", by default) to avoid publishing launchSettings.json -->\r\n    <Content Update=\"$(AppDesignerFolder)\\**\" CopyToPublishDirectory=\"Never\" Condition=\"'$(AppDesignerFolder)' != ''\"/>\r\n```\r\n\r\nin `Sdk.Razor.StaticAssets.ProjectSystem.props` but I cannot find this file on GitHub..\r\n\r\nAdding `CopyToOutputDirectory=\"Never\"` would address this issue.","Url":"https://github.com/aspnet/AspNetCore/issues/14799","RelatedDescription":"Open issue \"3.0 SDK copies Properties/launchSettings.json to output directory\" (#14799)"},{"Id":"503617880","IsPullRequest":true,"CreatedAt":"2019-10-07T18:31:21","Actor":"Tratcher","Number":"14798","RawContent":null,"Title":"Update Facebook API to 4.0","State":"open","Body":"#4684 Every release we update our OAuth providers to make sure they're referencing the latest 3rd party API endpoints. Facebook is the only one that appears out of date this time. No behavior changes were observed when changing the version.","Url":"https://github.com/aspnet/AspNetCore/pull/14798","RelatedDescription":"Open PR \"Update Facebook API to 4.0\" (#14798)"},{"Id":"503615318","IsPullRequest":false,"CreatedAt":"2019-10-07T18:25:51","Actor":"CeciAc","Number":"14797","RawContent":null,"Title":"API and JSON code sample mismatch","State":"open","Body":"@cseguenot commented on [Sun Oct 06 2019](https://github.com/aspnet/AspNetCore.Docs.fr-fr/issues/234)\n\nHi\r\nThere is an problem with the JSON code sample : it's about wheather forecast, and not about todo items...\r\n\r\n---\r\n#### Détails du document\r\n\r\n⚠ *Ne pas modifier cette section. C’est obligatoire pour docs.microsoft.com ➟ Liaison des problèmes GitHub.*\r\n\r\n* ID: 583ae3e7-5915-f22b-e54c-6c100cf2a7da\r\n* Version Independent ID: 95f2549e-29f9-e31a-b4d0-432b971643ff\r\n* Content: [Tutoriel : Créer une API web avec ASP.NET Core](https://docs.microsoft.com/fr-fr/aspnet/core/tutorials/first-web-api?view=aspnetcore-3.0&tabs=visual-studio)\r\n* Content Source: [aspnetcore/tutorials/first-web-api.md](https://github.com/aspnet/AspNetCore.Docs.fr-fr/blob/live/aspnetcore/tutorials/first-web-api.md)\r\n* Product: **aspnet-core**\r\n* Technology: **aspnetcore-tutorials**\r\n* GitHub Login: @Rick-Anderson\r\n* Microsoft Alias: **riande**\n\n---\n\n@srvbpigh commented on [Sun Oct 06 2019](https://github.com/aspnet/AspNetCore.Docs.fr-fr/issues/234#issuecomment-538743488)\n\nHello, @cseguenot\n \nThank you for your feedback.\n \nWe are actively reviewing your comments and will get back to you soon.\n\n\nKind regards,\nMicrosoft DOCS International Team\n\n","Url":"https://github.com/aspnet/AspNetCore/issues/14797","RelatedDescription":"Open issue \"API and JSON code sample mismatch\" (#14797)"},{"Id":"503590410","IsPullRequest":false,"CreatedAt":"2019-10-07T17:33:37","Actor":"scalablecory","Number":"14796","RawContent":null,"Title":"InvalidOperationException: Cannot find compilation library location for package 'Microsoft.AspNetCore.Authentication.Google'","State":"open","Body":"_From @nefcanto on Sunday, October 6, 2019 1:16:11 PM_\r\n\r\n# Issue Title\r\n\r\nI upgraded VS2019 Community Edition, from 16.2.something to 16.3.2. The upgrade took a couple of minutes, then a restart, then building my web project, and then I saw this error:\r\n\r\nInvalidOperationException: Cannot find compilation library location for package 'Microsoft.AspNetCore.Authentication.Google'\r\n\r\n# General\r\n\r\nThis is the stack trace:\r\n\r\n```\r\nSystem.InvalidOperationException: Cannot find compilation library location for package 'Microsoft.AspNetCore.Authentication.Google'\r\n   at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths(ICompilationAssemblyResolver resolver, List`1 assemblies)\r\n   at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths()\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart.<>c.<GetReferencePaths>b__8_0(CompilationLibrary library)\r\n   at System.Linq.Enumerable.SelectManySingleSelectorIterator`2.MoveNext()\r\n   at Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeatureProvider.PopulateFeature(IEnumerable`1 parts, MetadataReferenceFeature feature)\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.PopulateFeature[TFeature](TFeature feature)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.GetCompilationReferences()\r\n   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.get_CompilationReferences()\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.LazyMetadataReferenceFeature.get_References()\r\n   at Microsoft.CodeAnalysis.Razor.CompilationTagHelperFeature.GetDescriptors()\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorTagHelperBinderPhase.ExecuteCore(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorEnginePhaseBase.Execute(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorEngine.Process(RazorCodeDocument document)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorProjectEngine.ProcessCore(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorProjectEngine.Process(RazorProjectItem projectItem)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(String relativePath)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.OnCacheMiss(String normalizedPath)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorPageFactoryProvider.CreateFactory(String relativePath)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.CreateCacheResult(HashSet`1 expirationTokens, String relativePath, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.OnCacheMiss(ViewLocationExpanderContext expanderContext, ViewLocationCacheKey cacheKey)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.LocatePageFromViewLocations(ActionContext actionContext, String pageName, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindView(ActionContext context, String viewName, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.FindView(ActionContext context, String viewName, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor.FindView(ActionContext actionContext, PartialViewResult viewResult)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor.ExecuteAsync(ActionContext context, PartialViewResult result)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n```\r\n\r\nBased on some other issues, I added this line of code:\r\n    `<MvcRazorExcludeRefAssembliesFromPublish>false</MvcRazorExcludeRefAssembliesFromPublish>`\r\n\r\nBut it made no difference.\r\n\r\nWhat should I do?\r\n\r\n**Note:** Please note that I've not used Google authentication at all. All of our authentication is written by our own team and we are not even familiar with this package.\r\n\r\n_Copied from original issue: dotnet/core#3557_","Url":"https://github.com/aspnet/AspNetCore/issues/14796","RelatedDescription":"Open issue \"InvalidOperationException: Cannot find compilation library location for package 'Microsoft.AspNetCore.Authentication.Google'\" (#14796)"},{"Id":"503581955","IsPullRequest":false,"CreatedAt":"2019-10-07T17:14:45","Actor":"scalablecory","Number":"14795","RawContent":null,"Title":"Caching headers being overridden by CookieAuthenticationHandler","State":"open","Body":"_From @leealexander on Monday, October 7, 2019 8:42:22 AM_\r\n\r\n# Issue Title\r\n\r\nCaching headers being overridden by CookieAuthenticationHandler\r\n\r\n# General\r\n\r\nThe CookieAuthenticationHandler in .netcore 2.2 overrides cache headers previously set by ResponseCacheAttribute.\r\n\r\nMoving the \"app.UseResponseCaching();\" in the config before or after the adding of the \" app.UseAuthentication();\" makes no difference as the CookieAuthenticationHandler  hooks into  Context.Response.OnStarting. \r\n\r\nBasically my scenario I have no-store and no-cache set and CookieAuthenticationHandler  blows away the no-store portion. In the case of a challenged authentication it allows the user to click back from a login screen. \r\n\r\nIs this correct behaviour? Shouldn't the ApplyHeaders code in the CookieAuthenticationHandler   honour the no-store header if it already exists?\r\n\r\nRegards\r\nLee\r\n\r\n\r\n_Copied from original issue: dotnet/core#3564_","Url":"https://github.com/aspnet/AspNetCore/issues/14795","RelatedDescription":"Open issue \"Caching headers being overridden by CookieAuthenticationHandler\" (#14795)"},{"Id":"503576929","IsPullRequest":false,"CreatedAt":"2019-10-07T17:03:32","Actor":"tomview","Number":"14794","RawContent":null,"Title":"Generator DevOps service extension in Blazor","State":"open","Body":"Currently [Azure DevOps extension development](https://docs.microsoft.com/en-us/azure/devops/extend/?toc=%2Fazure%2Fdevops%2Fextend%2Ftoc.json&bc=%2Fazure%2Fdevops%2Fextend%2Fbreadcrumb%2Ftoc.json&view=azure-devops) has been limited to nodejs-based extension.\r\n\r\nRequests ([Ref1](https://developercommunity.visualstudio.com/content/problem/704085/building-blazor-devops-extensions.html) & [Ref2](https://developercommunity.visualstudio.com/idea/425875/develop-azure-devops-extensions-using-blazor.html)) is currently being investigated to support the [DevOps extension written in Blazor.](https://github.com/MicrosoftDocs/vsts-docs/issues/5872)\r\n\r\n[\"The fastest path to a new VSTS extension\"](https://devblogs.microsoft.com/devops/fastest-path-new-team-services-extension/) exists for the nodejs-based extension using [Yeoman](https://github.com/mikaelkrief/generator-team-services-extension) \r\n\r\n**Request new feature 1:**\r\nIs there *a vision* to bring the .NET Conf 2019 promise of Blazor for .NET Web developer to the DevOps extension development.\r\n\r\n> apply our creativity to improve our DevOps experience and productivity by [**developing AND sharing DevOps extensions with greater efficiency using FULL .NET**](https://github.com/MicrosoftDocs/vsts-docs/issues/5872#issue-503465199)  instead of the recommended Javascript/NodeJs\r\n\r\n**Request new feature 2:**\r\nIf there is interest and valid business use case, could *a generator DevOps service extension for Blazor* be incorporated as a new feature request.\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14794","RelatedDescription":"Open issue \"Generator DevOps service extension in Blazor\" (#14794)"},{"Id":"503566569","IsPullRequest":false,"CreatedAt":"2019-10-07T16:42:26","Actor":"Postlagerkarte","Number":"14792","RawContent":null,"Title":"Blazor DataTransfer wrapper object ","State":"open","Body":"Blazor 3.0:\r\n\r\nI can use the `DragEventArgs` class as parameter to my methods however setting data on some properties has not effect.\r\n\r\ne.g. nearly everything releated to the `DataTransfer` object inside the `DragEventArgs `is not working.\r\n\r\nIs this supposed to work? \r\n\r\nIf support for the DragEventArgs is not yet implemented then why are those properties read/write in the first place? \r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14792","RelatedDescription":"Open issue \"Blazor DataTransfer wrapper object \" (#14792)"},{"Id":"503295020","IsPullRequest":false,"CreatedAt":"2019-10-07T16:18:46","Actor":"DanJBower","Number":"14784","RawContent":null,"Title":"Microsoft.JSInterop.JSException is thrown when trying to access a JavaScript method in Internet Explorer","State":"closed","Body":"### Describe the bug\r\n`Microsoft.JSInterop.JSException` is thrown when trying to access a JavaScript method in Internet Explorer. Unfortunately, my deployment environment is restricted to this browser.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core 3.0.0\r\n2. Run this code (In Internet Explorer):\r\n\r\nCreate a new Blazor App that runs on server side.\r\n\r\n[Daddoon's Blazor.Polyfill](https://github.com/Daddoon/Blazor.Polyfill) can be found here and is required to get clicks working in Internet Explorer. Just drop it in wwwroot so that it works with the example below.\r\n\r\n*_Host.cshtml*\r\n\r\n    @page \"/\"\r\n    @namespace JavascriptInteropExample.Pages\r\n    @addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers\r\n\r\n    <!DOCTYPE html>\r\n    <html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <title>JavascriptInteropExample</title>\r\n        <base href=\"~/\" />\r\n        <link rel=\"stylesheet\" href=\"css/bootstrap/bootstrap.min.css\" />\r\n        <link href=\"css/site.css\" rel=\"stylesheet\" />\r\n    </head>\r\n    <body>\r\n        <app>\r\n            @(await Html.RenderComponentAsync<App>(RenderMode.ServerPrerendered))\r\n        </app>\r\n\r\n        <script type=\"text/javascript\" src=\"blazor.polyfill.min.js\"></script>\r\n        <script src=\"_framework/blazor.server.js\"></script>\r\n        <script>\r\n            window.debugOut = (content, userDir = true, prefix = \"\") => {\r\n                if (userDir) {\r\n                    if (prefix) {\r\n                        console.log(prefix);\r\n                    }\r\n                    console.dir(content);\r\n                } else {\r\n                    console.log((prefix ? `${prefix}: ` : \"\") + JSON.stringify(content));\r\n                }\r\n                return true;\r\n            }\r\n        </script>\r\n    </body>\r\n    </html>\r\n\r\n*Index.razor*\r\n\r\n    @page \"/\"\r\n\r\n    <h1>Hello, world!</h1>\r\n\r\n    Welcome to your new app.\r\n\r\n    @inject IJSRuntime JsRuntime\r\n\r\n    <div class=\"card my-3\">\r\n        <h5 class=\"card-header\">Debug Output</h5>\r\n        <div class=\"card-body\">\r\n            <button @onclick=\"DebugOutString\">Output Debug String</button>\r\n        </div>\r\n    </div>\r\n\r\n    @code\r\n    {\r\n        private async void DebugOutString()\r\n        {\r\n            await JsRuntime.InvokeAsync<bool>(\"debugOut\", \"Test String\", false, \"Here's a string\");\r\n        }\r\n    }\r\n\r\n\r\n~~3. With these arguments '....'~~\r\n4. See error\r\n\r\n\tMicrosoft.JSInterop.JSException: 'Could not find 'debugOut' in 'window'.\r\n\tError: Could not find 'debugOut' in 'window'.\r\n\t   at Anonymous function (https://localhost:44385/_framework/blazor.server.js:8:28059)\r\n\t   at p (https://localhost:44385/_framework/blazor.server.js:8:28010)\r\n\t   at Anonymous function (https://localhost:44385/_framework/blazor.server.js:8:28731)\r\n\t   at B (https://localhost:44385/blazor.polyfill.min.js:1:81352)\r\n\t   at e.jsCallDispatcher.beginInvokeJSFromDotNet (https://localhost:44385/_framework/blazor.server.js:8:28701)\r\n\t   at Anonymous function (https://localhost:44385/_framework/blazor.server.js:1:19139)\r\n\t   at e.prototype.invokeClientMethod (https://localhost:44385/_framework/blazor.server.js:1:19117)\r\n\t   at e.prototype.processIncomingData (https://localhost:44385/_framework/blazor.server.js:1:17160)\r\n\t   at connection.onreceive (https://localhost:44385/_framework/blazor.server.js:1:10267)\r\n\t   at i.onmessage (https://localhost:44385/_framework/blazor.server.js:1:38025)'\r\n\r\n\r\n### Expected behavior\r\nA log in the console saying `Here's a string: \"Test String\"`\r\n\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14784","RelatedDescription":"Closed issue \"Microsoft.JSInterop.JSException is thrown when trying to access a JavaScript method in Internet Explorer\" (#14784)"},{"Id":"503335365","IsPullRequest":false,"CreatedAt":"2019-10-07T16:12:50","Actor":"Indrajith-Sync","Number":"14785","RawContent":null,"Title":"Blazor:- How to remove a particular class from the list of classnames defined","State":"closed","Body":"Removing the particular class from the list of class names in a div. \r\n\r\nFor eg:-\r\n\r\n`<div class=\"test1 test2\">`\r\n\r\nIn the above div class i need to remove the \"test2\" alone.\r\n\r\nAny suggestion for this?","Url":"https://github.com/aspnet/AspNetCore/issues/14785","RelatedDescription":"Closed issue \"Blazor:- How to remove a particular class from the list of classnames defined\" (#14785)"},{"Id":"503550341","IsPullRequest":false,"CreatedAt":"2019-10-07T16:09:20","Actor":"ajaybhargavb","Number":"14791","RawContent":null,"Title":"Validate partial class support in Blazor","State":"open","Body":"https://github.com/aspnet/AspNetCore/issues/5487","Url":"https://github.com/aspnet/AspNetCore/issues/14791","RelatedDescription":"Open issue \"Validate partial class support in Blazor\" (#14791)"},{"Id":"503273967","IsPullRequest":false,"CreatedAt":"2019-10-07T16:00:24","Actor":"SteveBush","Number":"14783","RawContent":null,"Title":"GenericHost throws PlatformNotSupportedException on Xamarin","State":"closed","Body":"### Describe the bug\r\nConsoleLifetime uses static Console class to add/remove a Cancel (ctrl-C) keypress.  The Console.CancelKeyPress event handler on Xamarin.Android and Xamarin.IOS throws a PlatformNotSupportedException. \r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior in Visual Studio 16.3.2:\r\n1. Using Microsoft.Extensions.Hosting, v3.0.0 and Xamarin.Android v28.0.0.3.\r\n2. Create a blank Xamarin Forms Mobile App\r\n\r\nin MainActivitity.cs, add\r\n           var host = new HostBuilder().Build();\r\n            host.StartAsync().GetAwaiter().GetResult();\r\nbefore Loading Application\r\n\r\nResult: Exception is thrown\r\nSystem.PlatformNotSupportedException\r\n  Message=Operation is not supported on this platform.\r\n\r\n\r\n### Expected behavior\r\nExpect no thrown exception.  Three potential options for fixing:\r\n1) Create a new AppLifetime class which does not include the hooking of CancelKeyPress.\r\n2) Implement CancelKeyPress in Android and IOS Xamarin.\r\n3) Allow ConsoleLifetime to be superclassed so I could override the StartAsync and StopAsync methods to remove the calls to CancelKeyPress.\r\n\r\nI was able to work around this issue by implementing my own MobileLifetime class that excludes the calls to CancelKeyPress.  I injected the MobileLifetime class in ConfigureServices to replace the ConsoleLifetime implementation of the IHostLifetime interface.\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14783","RelatedDescription":"Closed issue \"GenericHost throws PlatformNotSupportedException on Xamarin\" (#14783)"},{"Id":"503541037","IsPullRequest":true,"CreatedAt":"2019-10-07T15:52:39","Actor":"omajid","Number":"14790","RawContent":null,"Title":"WIP: Support global.json on arm64 as well","State":"open","Body":"I am trying to get ASP.NET Core to build on linux/arm64 machines (not cross compiled on x86_64).\r\n\r\nOn such machines, global.json makes arcade download the arm64 SDK, then the x64 and/or x86 runtimes. Now there are two copies of hostfxr in the local SDK:\r\n\r\n```\r\n$ find .dotnet/host/\r\n.dotnet/host/\r\n.dotnet/host/fxr\r\n.dotnet/host/fxr/5.0.0-alpha1.19415.3\r\n.dotnet/host/fxr/5.0.0-alpha1.19415.3/libhostfxr.so\r\n.dotnet/host/fxr/5.0.0-alpha1.19470.7\r\n.dotnet/host/fxr/5.0.0-alpha1.19470.7/libhostfxr.so\r\n```\r\n\r\nOne is an x64 binary, the other is the arm64 binary:\r\n\r\n```\r\n$ file .dotnet/host/fxr/5.0.0-alpha1.19415.3/libhostfxr.so\r\n.dotnet/host/fxr/5.0.0-alpha1.19415.3/libhostfxr.so: ELF 64-bit LSB shared object, ARM aarch64, version 1 (SYSV), dynamically linked, BuildID[sha1]=824b0c0f19a62296726be7bd12cef294ee3732af, stripped\r\n$ file .dotnet/host/fxr/5.0.0-alpha1.19470.7/libhostfxr.so\r\n.dotnet/host/fxr/5.0.0-alpha1.19470.7/libhostfxr.so: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, BuildID[sha1]=511b71993bb9762f46d69f377145d622208165a5, stripped\r\n```\r\n\r\nUnfortunately, the higher version is the x64 binary. That can't be loaded or used on arm64. The ASP.NET Core build quickly runs into an error:\r\n\r\n```\r\n/home/omajid/.nuget/packages/microsoft.net.compilers.toolset/3.4.0-beta1-19456-03/tasks/netcoreapp2.1/Microsoft.CSharp.Core.targets(59,5): error : Failed to load �#|, error: /home/omajid/AspNetCore/.dotnet/host/fxr/5.0.0-alpha1.19470.7/libhostfxr.so: cannot open shared object file: No such file or directory [/home/omajid/AspNetCore/eng/tools/RepoTasks/RepoTasks.csproj]                       \r\n```\r\n\r\nThis change removes architecture-specific download versions from global.json. This lets [arcade download the arch-appropriate version of .NET Core](https://github.com/dotnet/arcade/blob/master/src/Microsoft.DotNet.Arcade.Sdk/src/InstallDotNetCore.cs) which then lets the build continue past this error.","Url":"https://github.com/aspnet/AspNetCore/pull/14790","RelatedDescription":"Open PR \"WIP: Support global.json on arm64 as well\" (#14790)"},{"Id":"503410422","IsPullRequest":false,"CreatedAt":"2019-10-07T15:24:20","Actor":"kYann","Number":"14787","RawContent":null,"Title":"Asp .Net Core 3 : InvalidOperationException when calling ResolveReferencePaths on a referenceassembly","State":"closed","Body":"### Describe the bug\r\nOn Asp .Net Core 3 getting referencePaths for all reference assembly throw a InvalidOperationException, it used to work on Asp .Net Core 2.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Use Asp .Net Core 3\r\n2. Run this code at the end of Startup.Configure\r\n```c#\r\nvar context = DependencyContext.Load(typeof(Startup).Assembly);\r\n\r\nvar references = context.CompileLibraries.SelectMany(library => library.ResolveReferencePaths()).ToList();\r\n```\r\n\r\n4. See error : InvalidOperationException\r\n\r\n### Expected behavior\r\nI expect to have all the reference paths like I used to have in Asp .net Core 2\r\n\r\n### Additional context\r\nDepencyModel is used to load assembly to create Roslyn compilation. It is used by RazorLight and this library is often used for email generation.","Url":"https://github.com/aspnet/AspNetCore/issues/14787","RelatedDescription":"Closed issue \"Asp .Net Core 3 : InvalidOperationException when calling ResolveReferencePaths on a referenceassembly\" (#14787)"},{"Id":"503518521","IsPullRequest":false,"CreatedAt":"2019-10-07T15:15:09","Actor":"danjohnso","Number":"14789","RawContent":null,"Title":"No Way to Trace Startup Error","State":"open","Body":"### Is your feature request related to a problem? Please describe.\r\nI am trying to upgrade my project to 3.0 from 2.2.  After following the guide and getting everything to compile, I am hitting a runtime error with no information on how to fix:\r\n```\r\nSystem.InvalidOperationException: Failed to update route pattern with required values.\r\n   at void Microsoft.AspNetCore.Mvc.Routing.ActionEndpointFactory.AddEndpoints\r\n```\r\n\r\n### Describe the solution you'd like\r\nBased on the error message and searching the repo, I narrowed the issue down to this class: \r\nhttps://github.com/aspnet/AspNetCore/blob/release/3.0/src/Http/Routing/src/Patterns/DefaultRoutePatternTransformer.cs\r\nUnfortunately, there is not logging in here or in the lead up here:\r\nhttps://github.com/aspnet/AspNetCore/blob/release/3.0/src/Mvc/Mvc.Core/src/Routing/ActionEndpointFactory.cs\r\n\r\nWhat endpoint is the problem?  I have 100 controllers and 1000+ endpoints but no information on what endpoint it doesn't like.  Some trace logging would be helpful here so I don't have to spend hours commenting out endpoints until it starts working.\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14789","RelatedDescription":"Open issue \"No Way to Trace Startup Error\" (#14789)"},{"Id":"503431706","IsPullRequest":false,"CreatedAt":"2019-10-07T12:50:36","Actor":"robalexclark","Number":"14788","RawContent":null,"Title":"Please could someone provide a Blazor template that has a normal menu bar","State":"open","Body":"The Blazor template has a nav menu that is a side bar. Despite many multiple attempts I have not been able to get a normal top menu bar working satisfactorily (may be my unfamiliarity with Blazor). Can you provide an option to create a template with a top menu bar?","Url":"https://github.com/aspnet/AspNetCore/issues/14788","RelatedDescription":"Open issue \"Please could someone provide a Blazor template that has a normal menu bar\" (#14788)"},{"Id":"503346641","IsPullRequest":false,"CreatedAt":"2019-10-07T09:58:02","Actor":"dazinator","Number":"14786","RawContent":null,"Title":"AddControllers() does't allow configuration of Filters?","State":"closed","Body":"### Is your feature request related to a problem? Please describe.\r\nI created a new asp.net core \"Web Api\" project using .net core 3.0.0\r\nI want to use an Action Filter in front of my API's.\r\nIn `Startup.cs` when using MVC proper, this is possible to set filters on `MvcOptions` class.\r\nHowever when using `AddControllers()` (as is the case for pure web api's that don't serve any UI of there own) there is no `Filters` property on IMvcOptions.\r\n\r\nAm I to infer from this that Filters aren't intended for api's? I find them very useful for specific api use cases so this would be odd to me. Or is there a different way to configure them without adding the whole of MVC?\r\n\r\n### Describe the solution you'd like\r\n\r\n`.AddControllers().Filters.Add(new BlahFilter());`\r\n\r\nOr even better sticking to the Builder style:\r\n\r\n`.AddControllers().AddFilter(new BlahFilter()).AddFilter(new BarFilter());`\r\n\r\n### Additional context\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14786","RelatedDescription":"Closed issue \"AddControllers() does't allow configuration of Filters?\" (#14786)"},{"Id":"503258898","IsPullRequest":false,"CreatedAt":"2019-10-07T07:04:22","Actor":"khteh","Number":"14781","RawContent":null,"Title":"ASP.Net Core 3.0 SignalR WebSocket connection failure","State":"closed","Body":"### If you believe you have an issue that affects the security of the platform please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://technet.microsoft.com/en-us/mt764065.aspx) but ONLY if it is reported through email.\r\n\r\n### Describe the bug\r\nA clear and concise description of what the bug is.\r\nI follow the tutorial in https://docs.microsoft.com/en-us/aspnet/core/tutorials/signalr?view=aspnetcore-3.0&tabs=visual-studio-code and fails to establish WebSocket connections. My same application works very well when using ASP.Net Core 2.2.\r\nIn `Startup.cs`:\r\nConfigureServices:\r\n```\r\n            services.AddAuthentication(options =>\r\n            {\r\n                options.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                options.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;\r\n            }).AddJwtBearer(configureOptions =>\r\n            {\r\n                    OnMessageReceived = async (context) =>\r\n                    {\r\n                        if (context.Request.Path.StartsWithSegments(\"/chatHub\"))\r\n                        {\r\n                            string accessToken = context.Request.Query[\"access_token\"];\r\n                            if (string.IsNullOrEmpty(accessToken) && context.Request.Headers.ContainsKey(\"Authorization\"))\r\n                            {\r\n                                accessToken = context.Request.Headers[\"Authorization\"];\r\n                                accessToken = accessToken.Split(\" \")[1];\r\n                            }\r\n                            if (!string.IsNullOrEmpty(accessToken))\r\n                                context.Token = accessToken;\r\n                        }\r\n                    }\r\n             };\r\n         });\r\n```\r\nConfigure():\r\n```\r\napp.UseWebSockets();\r\n```\r\nIn chat.js:\r\n```\r\nvar connection = new signalR.HubConnectionBuilder().withUrl(pathBase+\"/chatHub\", {\r\n    skipNegotiation: true,\r\n    transport: signalR.HttpTransportType.WebSockets,\r\n    accessTokenFactory: () => token\r\n}).configureLogging(signalR.LogLevel.Trace).build();\r\n```\r\n\r\nWhen I set the `skipNegotiation` to `true`, this is what I get:\r\n![SignalRWithoutTransportNegotiationFailure](https://user-images.githubusercontent.com/3871483/66289476-63396d80-e90f-11e9-8111-173c095ee04a.png)\r\nand the `OnMessageReceived` event is **NEVER** triggered with the `/chatHub` path.\r\n\r\nWhen I set the `skipNegotiation` to `false`, this is what I get:\r\n![SignalRWithTransportNegotiationFailure](https://user-images.githubusercontent.com/3871483/66289494-73e9e380-e90f-11e9-8b02-e57eec85de1e.png)\r\nand the `OnMessageReceived` event **IS** triggered with the `/chatHub` path.\r\n\r\nWhen I leave out the `skipNegotiation` and `transport` options but only set the `accessTokenFactory`, this is what I get:\r\n![SignalRWithDefaultOptionsFailure](https://user-images.githubusercontent.com/3871483/66290130-00e16c80-e911-11e9-9eca-2b37bf7026a0.png)\r\nand the `OnMessageReceived` event **IS** triggered with the `/chatHub` path.\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '...' 3.0\r\n2. Run this code '....'\r\n3. With these arguments '....'\r\n4. See error\r\n\r\n### Expected behavior\r\nA clear and concise description of what you expected to happen.\r\nIs there anything change in 3.0 SignalR? The same application is running with 2.2.\r\n\r\n### Screenshots\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\nInclude the output of `dotnet --info`\r\n```\r\n$ dn --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  19.04\r\n OS Platform: Linux\r\n RID:         ubuntu.19.04-x64\r\n Base Path:   /usr/share/dotnet-3.0.100/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/usr/share/dotnet-3.0.100/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet-3.0.100/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet-3.0.100/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/aspnet/AspNetCore/issues/14781","RelatedDescription":"Closed issue \"ASP.Net Core 3.0 SignalR WebSocket connection failure\" (#14781)"},{"Id":"503266661","IsPullRequest":false,"CreatedAt":"2019-10-07T06:59:19","Actor":"aehs211","Number":"14782","RawContent":null,"Title":"Distinct users on groups on send to many groups","State":"open","Body":"### Distinct users on groups on send to many groups\r\n \r\nfor some reason a user exist in 2 groups ( g1, g2 ).\r\nwhen you try:\r\n`Clients.Groups([ \"g1\", \"g2\" ]).SendAsync( ... )`\r\n\r\nuser will get the same message twice.\r\n\r\n## The required solution\r\nadd option to let the developer to chose to distinct the users connection on groups or not.\r\n\r\n#### related issue:\r\n`https://github.com/aspnet/AspNetCore/issues/5966`\r\n\r\n","Url":"https://github.com/aspnet/AspNetCore/issues/14782","RelatedDescription":"Open issue \"Distinct users on groups on send to many groups\" (#14782)"},{"Id":"503217566","IsPullRequest":false,"CreatedAt":"2019-10-07T03:43:42","Actor":"khteh","Number":"14780","RawContent":null,"Title":"ASP.Net Core 3.0 Integration Test with WebApplicationFactory<Startup> does NOT use InMemoryDatabase!","State":"open","Body":"### If you believe you have an issue that affects the security of the platform please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://technet.microsoft.com/en-us/mt764065.aspx) but ONLY if it is reported through email.\r\n\r\n### Describe the bug\r\nA clear and concise description of what the bug is.\r\nI have the following application factory code in my integration test project:\r\n```\r\n    public class CustomWebApplicationFactory<TStartup> : WebApplicationFactory<Startup>\r\n    {\r\n        protected override void ConfigureWebHost(IWebHostBuilder builder)\r\n        {\r\n            builder.ConfigureServices(services =>\r\n            {\r\n                // Create a new service provider.\r\n                var serviceProvider = new ServiceCollection()\r\n                    .AddEntityFrameworkInMemoryDatabase().AddLogging()\r\n                    .BuildServiceProvider();\r\n\r\n                // Add a database context (AppDbContext) using an in-memory database for testing.\r\n                services.AddDbContextPool<AppDbContext>(options =>\r\n                {\r\n                    options.UseInMemoryDatabase(\"InMemoryAppDb\");\r\n                    options.UseInternalServiceProvider(serviceProvider);\r\n                });\r\n\r\n                services.AddDbContextPool<AppIdentityDbContext>(options =>\r\n                {\r\n                    options.UseInMemoryDatabase(\"InMemoryIdentityDb\");\r\n                    options.UseInternalServiceProvider(serviceProvider);\r\n                });\r\n                services.AddScoped<SignInManager<AppUser>>();\r\n                services.AddScoped<ILogger<UserRepository>>(provider => {\r\n                    ILoggerFactory loggerFactory = provider.GetRequiredService<ILoggerFactory>();\r\n                    return loggerFactory.CreateLogger<UserRepository>();\r\n                });\r\n                services.AddDistributedMemoryCache();\r\n                // Build the service provider.\r\n                var sp = services.BuildServiceProvider();\r\n\r\n                // Create a scope to obtain a reference to the database contexts\r\n                using (var scope = sp.CreateScope())\r\n                {\r\n                    var scopedServices = scope.ServiceProvider;\r\n                    var appDb = scopedServices.GetRequiredService<AppDbContext>();\r\n                    var identityDb = scopedServices.GetRequiredService<AppIdentityDbContext>();\r\n                    var logger = scopedServices.GetRequiredService<ILogger<CustomWebApplicationFactory<TStartup>>>();\r\n\r\n                    // Ensure the database is created.\r\n                    appDb.Database.EnsureCreated();\r\n                    identityDb.Database.EnsureCreated();\r\n\r\n                    try\r\n                    {\r\n                        // Seed the database with test data.\r\n                        SeedData.PopulateTestData(identityDb);\r\n                        SeedData.PopulateTestData(appDb);\r\n                    }\r\n                    catch (Exception ex)\r\n                    {\r\n                        logger.LogError(ex, \"An error occurred seeding the \" +\r\n                            \"database with test messages. Error: {ex.Message}\");\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n```\r\n`Startup` is defined in another project which hosts the controllers and registers the DbContext as usual. When I step through the integration test, `AddDbContext` in `Startup` is called first, then the application code above which adds the db context again. However, the test execution is using the real database instead of the in-memory database!\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '...' 3.0\r\n2. Run this code '....'\r\n3. With these arguments '....'\r\n4. See error\r\n\r\n### Expected behavior\r\nA clear and concise description of what you expected to happen.\r\nThe integration test is supposed to use in-memory database instead of the read database!\r\n\r\n### Screenshots\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\nInclude the output of `dotnet --info`\r\n```\r\n$ dn --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100\r\n Commit:    04339c3a26\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  19.04\r\n OS Platform: Linux\r\n RID:         ubuntu.19.04-x64\r\n Base Path:   /usr/share/dotnet-3.0.100/sdk/3.0.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0\r\n  Commit:  7d57652f33\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [/usr/share/dotnet-3.0.100/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0 [/usr/share/dotnet-3.0.100/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [/usr/share/dotnet-3.0.100/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/aspnet/AspNetCore/issues/14780","RelatedDescription":"Open issue \"ASP.Net Core 3.0 Integration Test with WebApplicationFactory<Startup> does NOT use InMemoryDatabase!\" (#14780)"}],"ResultType":"GitHubIssue"},"Identity-Issues":{"Issues":[{"Id":"385990535","IsPullRequest":true,"CreatedAt":"2018-12-19T00:12:57","Actor":"grahamehorner","Number":"2087","RawContent":null,"Title":"WIP: IUserTwoFactorTokenProvider token length POC","State":"closed","Body":"This is a WIP idea to support configuration of token length for UserTwoFactorTokenProviders","Url":"https://github.com/aspnet/Identity/pull/2087","RelatedDescription":"Closed or merged PR \"WIP: IUserTwoFactorTokenProvider token length POC\" (#2087)"},{"Id":"385943112","IsPullRequest":true,"CreatedAt":"2018-12-19T00:06:47","Actor":"grahamehorner","Number":"2086","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2086","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2086)"},{"Id":"385172059","IsPullRequest":false,"CreatedAt":"2018-12-06T18:36:01","Actor":"Rightio-Limited","Number":"2084","RawContent":null,"Title":"Random Authentication Sign Outs in ASP.NET Core 2.1","State":"closed","Body":"I'm receiving user complaints saying they are being directed to the login screen randomly when it has only been a minute or so since they clicked a button that would have sent a message to the server side.\r\n\r\nHere is a log of one of the errors.\r\n`[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 1473.4897ms (afa2e885)\r\n[INF] Request finished in 1474.816ms 200 application/json; charset=utf-8 (791a596a)\r\n[INF] Request starting HTTP/1.1 GET http://MyAppmanager.MyApp.co.uk/api/AgreementAPI/GetAgreements?searchTerm=1543309403289   (ca22a1cb)\r\n[INF] Entity Framework Core \"2.1.3-rtm-32065\" initialized '\"IdentityDbContext\"' using provider '\"Microsoft.EntityFrameworkCore.SqlServer\"' with options: \"None\" (9958f5bb)\r\n[INF] Executed DbCommand (\"1\"ms) [Parameters=[\"@__get_Item_0='?' (DbType = Int32)\"], CommandType='Text', CommandTimeout='30']\"\r\n\"\"SELECT TOP(1) [e].[UserId], [e].[AcquisitionTeamId], [e].[AreaNumber], [e].[AuthorisationPassword], [e].[AutoBooking], [e].[AutoUpdateSoftware], [e].[AvayaFullName], [e].[AvayaName], [e].[AvaysExt], [e].[CanSellAgreement], [e].[ChangePassword], [e].[CompanyId], [e].[DateEnded], [e].[DateStarted], [e].[DebugLogs], [e].[DefaultQuotes], [e].[DepartmentId], [e].[EmailAddress], [e].[Forename], [e].[HomeServeEmployee], [e].[Initials], [e].[IsPurchaseOrderReviewer], [e].[JobTitle], [e].[LogonName], [e].[MaxLogins], [e].[Message], [e].[Name], [e].[Notes], [e].[PartTime], [e].[Password], [e].[ReportDDI], [e].[RoleId], [e].[Shift], [e].[ShowEngineerAlert], [e].[Surname], [e].[TerminationId], [e].[TrackFastVersion], [e].[UnreadMessage], [e].[VisibleOnChronicle]\r\nFROM [Users] AS [e]\r\nWHERE [e].[UserId] = @__get_Item_0\" (0723d8ff)\r\n[INF] AuthenticationScheme: \"Identity.Application\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.External\" signed out. (d3f50c8d)\r\n[INF] AuthenticationScheme: \"Identity.TwoFactorUserId\" signed out. (d3f50c8d)\r\n**[INF] \"Identity.Application\" was not authenticated. Failure message: \"No principal.\" (48071232)**\r\n[INF] Route matched with \"{action = \\\"GetAgreements\\\", controller = \\\"AgreementAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" (a44c0341)\r\n[INF] Authorization failed. (b15dd539)\r\n[INF] Authorization failed for the request at filter '\"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter\"'. (8b6446cb)\r\n[INF] Executing ChallengeResult with authentication schemes ([]). (f3dca807)\r\n[INF] AuthenticationScheme: \"Identity.Application\" was challenged. (d45f1f38)\r\n[INF] Executed action \"MyAppManager.Controllers.API.AgreementAPIController.GetAgreements (MyAppManager)\" in 0.3846ms (afa2e885)\r\n[INF] Request finished in 9.3835ms 401  (791a596a)\r\n[INF] Request starting HTTP/1.1 POST http://MyAppmanager.MyApp.co.uk/API/CustomerAPI/WriteToLog/ application/x-www-form-urlencoded; charset=UTF-8 61 (ca22a1cb)\r\n[INF] Route matched with \"{action = \\\"WriteToLog\\\", controller = \\\"CustomerAPI\\\", page = \\\"\\\", area = \\\"\\\"}\". Executing action \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" (a44c0341)\r\n[INF] Executing action method \"MyAppManager.Controllers.API.CustomerAPIController.WriteToLog (MyAppManager)\" with arguments ([\"ERROR: WebAPI call is not authenticated\", \"error\"]) - Validation state: Valid (4e3479ed)\r\n[ERR] Client log: ERROR: WebAPI call is not authenticated (d4244074)\r\n`\r\n\r\n**Startup File**\r\n`public void ConfigureServices(IServiceCollection services)\r\n{\r\n\tservices.AddScoped<IRFDbRepository, RFDbRepository>();\r\n\tvar connection = _configuration.GetConnectionString(\"RFDbConnection\");\r\n\tservices.Configure<ConnectionStrings>(_configuration.GetSection(\"ConnectionStrings\"));\r\n\tservices.AddDbContext<RFDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddDbContext<IdentityDbContext>(options => options.UseSqlServer(connection));\r\n\tservices.AddAutoMapper();\r\n\tservices.AddIdentity<User, UserRole>().AddDefaultTokenProviders();\r\n\tservices.AddTransient<IUserStore<User>, UserStore>();\r\n\tservices.AddTransient<IRoleStore<UserRole>, RoleStore>();\r\n\tservices.ConfigureApplicationCookie(options =>\r\n\t{\r\n\t\toptions.LoginPath = \"/Identity/Account/Login\";\r\n\t\toptions.LogoutPath = \"/Identity/Account/Logout\";\r\n\t\toptions.ExpireTimeSpan = TimeSpan.FromMinutes(60);\r\n\t\toptions.SlidingExpiration = true;                \r\n\t});\r\n\tservices.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_1).AddRazorPagesOptions(options =>\r\n\t{\r\n\t\toptions.AllowAreas = true;\r\n\t\toptions.Conventions.AuthorizeAreaPage(\"Identity\", \"/Account/Logout\");\r\n\t});\r\n}`\r\n\r\n`public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory, IRFDbRepository rFDbRepository)\r\n{\r\n\tloggerFactory.AddFile(_configuration.GetValue<string>(\"Logging:LogFile\"));\r\n\tapp.UseStaticFiles();\r\n\tapp.UseAuthentication();\r\n\tapp.UseMvc(routes =>\r\n\t{\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"default\",\r\n\t\t\ttemplate: \"{controller=Home}/{action=Index}/{id?}\");\r\n\t\troutes.MapRoute(\r\n\t\t\tname: \"ActionApi\",\r\n\t\t\ttemplate: \"api/{controller}/{action}/{id?}\");\r\n\t});\r\n\trFDbRepository.TestConnection();\r\n}`\r\n\r\nAlso I've setup the app pool as below:\r\n![image](https://user-images.githubusercontent.com/43367982/49141893-8fe42800-f2ef-11e8-8ea3-c79e45ca65a3.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2084","RelatedDescription":"Closed issue \"Random Authentication Sign Outs in ASP.NET Core 2.1\" (#2084)"},{"Id":"387530281","IsPullRequest":true,"CreatedAt":"2018-12-04T23:53:47","Actor":"natemcmaster","Number":"2092","RawContent":null,"Title":"This repo will be archived, project moved to aspnet/AspNetCore","State":"closed","Body":"As a part of https://github.com/aspnet/AspNetCore/issues/3598, this repo will be made read-only soon. The source code and issues will move to https://github.com/aspnet/AspNetCore.","Url":"https://github.com/aspnet/Identity/pull/2092","RelatedDescription":"Closed or merged PR \"This repo will be archived, project moved to aspnet/AspNetCore\" (#2092)"},{"Id":"382432623","IsPullRequest":true,"CreatedAt":"2018-12-04T23:49:57","Actor":"HaoK","Number":"2075","RawContent":null,"Title":"Port retry handler test improvement to 2.1","State":"closed","Body":"Port of similar fix for 2.2 https://github.com/aspnet/Identity/pull/2052","Url":"https://github.com/aspnet/Identity/pull/2075","RelatedDescription":"Closed or merged PR \"Port retry handler test improvement to 2.1\" (#2075)"},{"Id":"387479804","IsPullRequest":false,"CreatedAt":"2018-12-04T21:12:03","Actor":"LosManos","Number":"2091","RawContent":null,"Title":"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.","State":"closed","Body":"### Describe the bug\r\nSetting password length through \r\n```\r\npublic void ConfigureServices(IServiceCollection services){\r\n  ...\r\n  services.Configure<IdentityOptions>(options =>\r\n  {\r\n    options.Password.RequiredLength = 1;\r\n  });\r\n  ...\r\n```\r\ndoes not change the non-scaffolded razor page as it always says \"The Password must be at least 6 and at max 100 characters long.\" if inputed password is < 6 characters.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Create a new ASP.NET Core Web 2.1 application\r\n2. Select \"Web application (Model-View Controller)\" \r\n3. Select \"Change authentication\"\r\n3.1. Select \"Individual User Account\"\r\n4. Select Ok to have the project scaffolded.\r\n5. Open file Startup.cs\r\n6. Add \r\n```\r\nservices.Configure<IdentityOptions>(options =>\r\n{\r\n  options.Password.RequiredLength = 1;\r\n});\r\n```\r\nto method `ConfigureServices`.\r\n7. Press F5 (or select your favourite start-debug method).\r\n8. In the web browser that pops up\r\n8.1. Select Register\r\n8.2. Type \"a@example.com\" as user name (or select your favourite fast-to-type email addresss).\r\n8.3. Type \"a\" as password (or any password shorter than 6 characters).\r\n8.4. Select Register\r\n\r\n### Expected behavior\r\nThe web page should have been updated with information about successful creation of user.\r\n\r\n### Actual behaviour\r\nThe web page says \"The Password must be at least 6 and at max 100 characters long.\"\r\n\r\n### Additional context\r\nI have a question at stack overflow https://stackoverflow.com/questions/53620708/how-do-i-set-password-options-in-aspnet-core-2-1 that explains the same issue if this is not clear enough.\r\n\r\nThis issue might be duplicate of #774.","Url":"https://github.com/aspnet/Identity/issues/2091","RelatedDescription":"Closed issue \"The non-scaffolded razor page \"Register\" does not recognise Password.RequiredLength.\" (#2091)"},{"Id":"386513703","IsPullRequest":false,"CreatedAt":"2018-12-02T00:47:54","Actor":"NinoFloris","Number":"2089","RawContent":null,"Title":"No way to Add a password after creating user, except through Reset","State":"closed","Body":"So we do have RemovePasswordAsync but where's AddPasswordAsync? \r\nWe currently hack around it by using a Reset token we generated before it, but we do really need it for upgrading OAuth/Connect accounts to full accounts.","Url":"https://github.com/aspnet/Identity/issues/2089","RelatedDescription":"Closed issue \"No way to Add a password after creating user, except through Reset\" (#2089)"},{"Id":"385940834","IsPullRequest":false,"CreatedAt":"2018-12-01T01:11:14","Actor":"grahamehorner","Number":"2085","RawContent":null,"Title":"Q: moving of source","State":"closed","Body":"Is the identity repo under the aspnet/aspnetcore like other repos have ? ","Url":"https://github.com/aspnet/Identity/issues/2085","RelatedDescription":"Closed issue \"Q: moving of source\" (#2085)"},{"Id":"386331000","IsPullRequest":true,"CreatedAt":"2018-11-30T20:17:17","Actor":"dougbu","Number":"2088","RawContent":null,"Title":"Remove `SetCompatibiltyVersion(...)` call in sample","State":"closed","Body":"- aspnet/Mvc#7156 2 of ?","Url":"https://github.com/aspnet/Identity/pull/2088","RelatedDescription":"Closed or merged PR \"Remove `SetCompatibiltyVersion(...)` call in sample\" (#2088)"},{"Id":"378822046","IsPullRequest":true,"CreatedAt":"2018-11-29T21:55:44","Actor":"grahamehorner","Number":"2060","RawContent":null,"Title":"Update Rfc6238AuthenticationService.cs","State":"closed","Body":"20bytes is 160bits","Url":"https://github.com/aspnet/Identity/pull/2060","RelatedDescription":"Closed or merged PR \"Update Rfc6238AuthenticationService.cs\" (#2060)"},{"Id":"380746507","IsPullRequest":false,"CreatedAt":"2018-11-29T20:17:46","Actor":"wijnsema","Number":"2067","RawContent":null,"Title":"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False","State":"closed","Body":"As requested by @brockallen in #850 it is now possible to bypass 2FA in case of an external login. \r\n\r\nI'm sure there are good reasons to bypass 2FA, however the current implementation is far to general: \r\n\r\n- All providers all treated equal (some providers might not even support 2FA at all)\r\n- All users all treated equal (users can have 2FA enabled or not)\r\n\r\nThis bypass of 2FA really needs more refinement.\r\n\r\n**What makes this really a problem is the fact that it is enabled in the UI templates!** \r\nAs a developer using the template and enabling 2FA you expect 2FA to work for both local and external login!\r\n\r\nFurthermore, the redirect to the 2FA page is missing, so changing to call to `bypassTwoFactor = false` results in a confusing error that the user already exists.\r\n\r\nIn my opinion the following fragment from ExternalLogin.cshtml.cs\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n      info.ProviderKey, isPersistent: false, bypassTwoFactor: true);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\n```\r\nshould be replaced with\r\n```C#\r\nvar result = await _signInManager.ExternalLoginSignInAsync(info.LoginProvider, \r\n   info.ProviderKey, isPersistent: false, bypassTwoFactor: false);\r\nif (result.Succeeded)\r\n{\r\n   _logger.LogInformation(\"{Name} logged in with {LoginProvider} provider.\", \r\n      info.Principal.Identity.Name, info.LoginProvider);\r\n   return LocalRedirect(returnUrl);\r\n}\r\nif (result.RequiresTwoFactor)\r\n{\r\n   return RedirectToPage(\"./LoginWith2fa\", new { ReturnUrl = returnUrl });\r\n}\r\n```\r\nIf you enabled bypassTwoFactor it will still work.\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2067","RelatedDescription":"Closed issue \"BypassTowFactor in SignInManager:ExternalLoginSignInAsync should default to False\" (#2067)"},{"Id":"378006056","IsPullRequest":false,"CreatedAt":"2018-11-29T20:04:09","Actor":"blowdart","Number":"2058","RawContent":null,"Title":"Survey: Your experience using Identity UI and customization","State":"closed","Body":"We're taking a survey about how your experiences using ASP.NET Core Identity, and specifically Identity UI as a package.\r\n\r\nPlease give us your feedback, and, if you're willing, you might get a phone call to talk about your experiences in detail.\r\n\r\nhttps://microsoft.qualtrics.com/jfe/form/SV_3mTmFYDZAQutZMF ","Url":"https://github.com/aspnet/Identity/issues/2058","RelatedDescription":"Closed issue \"Survey: Your experience using Identity UI and customization\" (#2058)"},{"Id":"384918165","IsPullRequest":false,"CreatedAt":"2018-11-29T04:38:32","Actor":"OphiCA","Number":"2082","RawContent":null,"Title":"No sign-out authentication handler is registered for the scheme 'Identity.External'","State":"closed","Body":"Hello,\r\n\r\nFor several months now I've been trying to solve an issue with Identity, where 30-min on the dot after signing in, I am greeted by an `Invalid Operation Exception`:\r\n\r\n> InvalidOperationException: No sign-out authentication handler is registered for the scheme 'Identity.External'. The registered sign-out schemes are: Identity.Application. Did you forget to call AddAuthentication().AddCookies(\"Identity.External\",...)?\r\n\r\nSince it was on my blog site, I didn't put too much effort into it, even though it was an annoyance. Now, I'm looking into possibly some real world client work where I'd like to use ASP.NET Core with Identity, but I can't be having this same issue.\r\n\r\nCould someone please tell me why this exception throws? I don't want to use external schemes, so why is it trying to sign out of one? When did it sign into one?\r\n\r\nHere's the relevant code from my app, hopefully someone can point me in the right direction because I sure as heck can't.\r\n\r\n**Startup.cs**\r\n\r\n\tpublic sealed class Startup {\r\n\t\tpublic void ConfigureServices(\r\n\t\t\tIServiceCollection services) {\r\n\t\t\t//...\r\n\t\t\tservices.AddApplicationIdentity();\r\n\t\t\t//...\r\n\t\t\tservices.ConfigureApplicationCookie(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Cookie.SameSite = SameSiteMode.Strict;\r\n\t\t\t\t\to.Cookie.SecurePolicy = CookieSecurePolicy.Always;\r\n\r\n\t\t\t\t\to.AccessDeniedPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.ExpireTimeSpan = TimeSpan.FromHours(4);\r\n\t\t\t\t\to.LoginPath = new PathString(\"/admin\");\r\n\t\t\t\t\to.LogoutPath = new PathString(\"/admin/sign-out\");\r\n\t\t\t\t});\r\n\t\t\tservices.Configure<IdentityOptions>(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Password.RequiredLength = 8;\r\n\r\n\t\t\t\t\to.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(5);\r\n\t\t\t\t\to.Lockout.MaxFailedAccessAttempts = 5;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tpublic void Configure(\r\n\t\t\tIApplicationBuilder app) {\r\n\t\t\t//...\r\n\t\t\tapp.UseAuthentication();\r\n\t\t\t//...\r\n\t\t}\r\n\t}\r\n\r\n**ServiceCollectionExtensions**\r\n\r\n\tpublic static class ServiceCollectionExtensions {\r\n\t\tpublic static IdentityBuilder AddApplicationIdentity(\r\n\t\t\tthis IServiceCollection services) {\r\n\t\t\tservices.AddAuthentication(\r\n\t\t\t\to => {\r\n\t\t\t\t\to.DefaultAuthenticateScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultChallengeScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t\to.DefaultSignInScheme = IdentityConstants.ApplicationScheme;\r\n\t\t\t\t}).AddCookie(IdentityConstants.ApplicationScheme,\r\n\t\t\t\to => {\r\n\t\t\t\t\to.Events = new CookieAuthenticationEvents {\r\n\t\t\t\t\t\tOnValidatePrincipal = SecurityStampValidator.ValidatePrincipalAsync\r\n\t\t\t\t\t};\r\n\t\t\t\t});\r\n\r\n\t\t\tservices.TryAddScoped<IdentityErrorDescriber>();\r\n\t\t\tservices.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n\t\t\tservices.TryAddScoped<IPasswordHasher<User>, PasswordHasher<User>>();\r\n\t\t\tservices.TryAddScoped<IPasswordValidator<User>, PasswordValidator<User>>();\r\n\t\t\tservices.TryAddScoped<IUserClaimsPrincipalFactory<User>, UserClaimsPrincipalFactory<User>>();\r\n\t\t\tservices.TryAddScoped<UserManager<User>>();\r\n\t\t\tservices.TryAddScoped<IUserStore<User>, ApplicationUserStore>();\r\n\t\t\tservices.TryAddScoped<IUserValidator<User>, UserValidator<User>>();\r\n\t\t\tservices.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<User>>();\r\n\t\t\tservices.TryAddScoped<SignInManager<User>>();\r\n\r\n\t\t\treturn new IdentityBuilder(typeof(User), services);\r\n\t\t}\r\n\t}\r\n\r\nI'm not going to include the `ApplicationUserStore` because I highly doubt it has anything to do with the exception. I'd appreciate any help because I am just struggling at this point. Thanks!","Url":"https://github.com/aspnet/Identity/issues/2082","RelatedDescription":"Closed issue \"No sign-out authentication handler is registered for the scheme 'Identity.External'\" (#2082)"},{"Id":"383003537","IsPullRequest":false,"CreatedAt":"2018-11-22T13:29:00","Actor":"LindaLawton","Number":"2079","RawContent":null,"Title":"Remember me isPersistent understanding","State":"closed","Body":"This is more of a question but its not enough of a question that i could post it up on stack overflow without risking it just getting closed as primary opinion based or to broad.   So i am going to put it here in hopes of getting an answer.\r\n\r\nThe issue is the understanding of how remember me is supposed to work.    My problem is that its not doing what we would expect it to do.   \r\n\r\nManagement expects when a user logs in and clicks remember me that they will then not be required to type their login and password again for a month.  Whether or not they will still have to type in the 2fa code is up for debate.\r\n\r\nWhat is actually happening is that i can close the browser reboot and come back for about an hour and 15 minutes and then i will be forced to type my password again.    This still happens even with a valid `.AspNetCore.Identity.Application` cookie set that is not due to expire for another month.\r\n\r\nAfter digging around in the code i found that Remember me is actually isPersistent and it is defined as.\r\n\r\n>Flag indicating whether the sign-in cookie should persist after the browser is closed.\r\n\r\nWhich brings you to:\r\n\r\nThere are two different types of Cookies:\r\n\r\n- session cookies, held in memory, and which expire once the browser exits\r\n- persistent cookies, which have a time-to-live, are persisted on disk, and are sent by the browser until their time-to-live has elapsed.\r\n\r\nAll this being said remember machine 2fa works as expected i am not prompted again for the 2fa and i have a cookie on my machine `Identity.TwoFactorRememberMe`.\r\n\r\nSo I guess my question is why are we not getting a `Identity.FactorRememberMe` or why isn't sign in respecting a long life time of the `AspNetCore.Identity.Application` cookie?\r\n\r\nHow is this supposed to work exactly?   I am following the code here even though we have normal MVC and not razor pages like you have in the example.  I am still just calling \r\n\r\n>var signInUserResult = await _signInManager.PasswordSignInAsync(userName, password, rememberMe, true);\r\n\r\nNote: I am using Asp .net Identity in Identity server 4 application.\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2079","RelatedDescription":"Closed issue \"Remember me isPersistent understanding\" (#2079)"},{"Id":"383297898","IsPullRequest":false,"CreatedAt":"2018-11-21T22:08:40","Actor":"mmillican","Number":"2080","RawContent":null,"Title":"Replace a Role Validator","State":"closed","Body":"I am trying to create a custom role validator to support pseudo-multi-tenancy (which I know is not _officially_ supported in Identity) and am running into some issues.\r\n\r\nI've verified that my validator does work and is being called. However, the default validator appears to be called also. \r\n\r\nHere's my Identity service registration\r\n```\r\nservices.AddIdentity<User, Role>(setup =>\r\n    {\r\n        // Redacted settings\r\n    })\r\n    .AddRoleValidator<CustomRoleValidator<Role>>()\r\n    .AddEntityFrameworkStores<ApplicationDbContext>()\r\n    .AddDefaultTokenProviders();\r\n```\r\n\r\nHow can I _remove_ the default RoleValidator?","Url":"https://github.com/aspnet/Identity/issues/2080","RelatedDescription":"Closed issue \"Replace a Role Validator\" (#2080)"},{"Id":"382890054","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"dotnet-maestro-bot","Number":"2078","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2078","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2078)"},{"Id":"382876972","IsPullRequest":true,"CreatedAt":"2018-11-20T23:38:12","Actor":"javiercn","Number":"2076","RawContent":null,"Title":"Update to IdentityServer 2.3.0","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2076","RelatedDescription":"Closed or merged PR \"Update to IdentityServer 2.3.0\" (#2076)"},{"Id":"382885320","IsPullRequest":true,"CreatedAt":"2018-11-20T23:19:15","Actor":"javiercn","Number":"2077","RawContent":null,"Title":"Update Identity Server dependencies to 2.3.0","State":"closed","Body":"This updates things on non-shipping product code, so it's ok to update (I asked).","Url":"https://github.com/aspnet/Identity/pull/2077","RelatedDescription":"Closed or merged PR \"Update Identity Server dependencies to 2.3.0\" (#2077)"},{"Id":"382068763","IsPullRequest":false,"CreatedAt":"2018-11-19T12:16:11","Actor":"wpqs","Number":"2074","RawContent":null,"Title":"Login doesn't show registered social logins after error","State":"closed","Body":"I'm using ASPNET Core 2.1 with Razor Pages UI Library and noticed that whilst registered social logins appear when I open the Login page, they disappear after an error like incorrect password.\r\n\r\nThere seems to be a bug in Identity\\Pages\\Account\\Login.cshtml.cs as \r\n````\r\n public IList<AuthenticationScheme> ExternalLogins { get; set; }\r\n\r\n````\r\nis only initialised in OnGetAsync(), but if an error happens OnPostAsync() then Page() is returned so OnGetAsyn() doesn't get called. Changing error handling in  OnPostAsync() so RedirectToPage() is returned seems to fix the problem.\r\n\r\nPlease confirm this is a bug and comment on my fix","Url":"https://github.com/aspnet/Identity/issues/2074","RelatedDescription":"Closed issue \"Login doesn't show registered social logins after error\" (#2074)"},{"Id":"381789469","IsPullRequest":true,"CreatedAt":"2018-11-17T00:27:58","Actor":"natemcmaster","Number":"2072","RawContent":null,"Title":"Upgrade projects to netcoreapp3.0","State":"closed","Body":"Changes:\r\n\r\n* Upgrade dependencies\r\n* Change TFM on Microsoft.AspNetCore.Identity to netcoreapp3.0\r\n* Remove .NET Framework tests\r\n\r\nPart of https://github.com/aspnet/AspNetCore/issues/3754","Url":"https://github.com/aspnet/Identity/pull/2072","RelatedDescription":"Closed or merged PR \"Upgrade projects to netcoreapp3.0\" (#2072)"},{"Id":"380931030","IsPullRequest":true,"CreatedAt":"2018-11-14T23:29:46","Actor":"pranavkm","Number":"2070","RawContent":null,"Title":"Use 3.0 configuration in RCLs","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2070","RelatedDescription":"Closed or merged PR \"Use 3.0 configuration in RCLs\" (#2070)"},{"Id":"378005714","IsPullRequest":false,"CreatedAt":"2018-11-14T21:00:55","Actor":"papyr","Number":"2057","RawContent":null,"Title":"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups","State":"closed","Body":"There is a disconnect with Active Directory, since we don't have support for User Groups in Identity, how can we implement or mirror this functionality inside ASP identity","Url":"https://github.com/aspnet/Identity/issues/2057","RelatedDescription":"Closed issue \"AD directory user-groups; can IdentityRole be subclassed to implement Role-Groups or User-Groups\" (#2057)"},{"Id":"380198930","IsPullRequest":false,"CreatedAt":"2018-11-14T17:33:59","Actor":"blankenbush","Number":"2065","RawContent":null,"Title":"Spelling error DeletePersonalData.cshtml.cs ","State":"closed","Body":"The word \"deleteing\" is wrong.  It should be \"deleting\" on line: 111; DeletePersonalData.cshtml.cs.\r\n\r\nAlso found in comment on line 183; SqlStoreTestBase.cs\r\n\r\n![capture](https://user-images.githubusercontent.com/187785/48412982-33401500-e714-11e8-903b-6e2fcc8e0a6a.PNG)\r\n","Url":"https://github.com/aspnet/Identity/issues/2065","RelatedDescription":"Closed issue \"Spelling error DeletePersonalData.cshtml.cs \" (#2065)"},{"Id":"380389829","IsPullRequest":true,"CreatedAt":"2018-11-14T17:33:01","Actor":"blankenbush","Number":"2066","RawContent":null,"Title":"Fix typo","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2066","RelatedDescription":"Closed or merged PR \"Fix typo\" (#2066)"},{"Id":"377364575","IsPullRequest":false,"CreatedAt":"2018-11-09T11:16:05","Actor":"yetanotherchris","Number":"2056","RawContent":null,"Title":"Should IdentityUser be in the EntityFramework namespace?","State":"closed","Body":"https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.identity.entityframeworkcore.identityuser?view=aspnetcore-1.1\r\n\r\nI'm looking through various implementations from the [readme](https://github.com/aspnet/Identity/blob/master/README.md) and I've noticed they all use `IdentityUser ` for their concrete type to pass to `UserManager`, or have had to craft a custom type to be able to have a contract between the database and the .NET AspNetIdentity implentation they've written (see the DynamoDB library).\r\n\r\nI've had to do this too for the [Marten implementation I've written](https://github.com/yetanotherchris/Marten.AspNetIdentity), and the reason is, a `TUser` that your `UserStore` takes, should really be an interface - it will always have an email, most likely an Id of some sort, firstname, lastname and then a bag of properties.\r\n\r\nThings become even more abstract when dealing with claims.\r\n\r\nIf everyone is using `IdentityUser` or their own custom `TUser` doesn't this defeat the purpose of AspnetIdentity - which is to be able to switch and change implementations easily? That isn't possible if your consumer is tightly coupled with a `TUser` implementation of the library.\r\n\r\n### Example `TUser` implementations\r\n\r\n- [MongoIdentityUser](https://github.com/tugberkugurlu/AspNetCore.Identity.MongoDB/blob/master/src/AspNetCore.Identity.MongoDB/MongoIdentityUser.cs)\r\n- [DynamoIdentityUser](https://github.com/miltador/AspNetCore.Identity.DynamoDB/blob/master/src/AspNetCore.Identity.DynamoDB/DynamoIdentityUser.cs)\r\n- [Redis uses `IdentityUser<string>`](https://github.com/aguacongas/Identity.Redis/blob/develop/src/Aguacongas.Identity.Redis/UserStore.cs)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Identity/issues/2056","RelatedDescription":"Closed issue \"Should IdentityUser be in the EntityFramework namespace?\" (#2056)"},{"Id":"376980171","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:29","Actor":"dotnet-maestro-bot","Number":"2055","RawContent":null,"Title":"[automated] Merge branch 'release/2.2' => 'master'","State":"closed","Body":"I detected changes in the release/2.2 branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.2 by the following committers:\n\n* @javiercn\r\n\r\n## Instructions for merging\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, please complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nYou can also do this on command line:\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\ngit checkout master\r\ngit merge --no-ff merge/release/2.2-to-master\r\ngit push origin master\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.2-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.2-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/Identity merge/release/2.2-to-master\r\n```\r\n\r\nPlease contact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.","Url":"https://github.com/aspnet/Identity/pull/2055","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.2' => 'master'\" (#2055)"},{"Id":"376978591","IsPullRequest":true,"CreatedAt":"2018-11-02T21:57:26","Actor":"javiercn","Number":"2054","RawContent":null,"Title":"Fixes integrity validation in Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/pull/2054","RelatedDescription":"Closed or merged PR \"Fixes integrity validation in Identity UI V3\" (#2054)"},{"Id":"376977750","IsPullRequest":false,"CreatedAt":"2018-11-02T21:48:32","Actor":"javiercn","Number":"2053","RawContent":null,"Title":"Fix integrity tags on Identity UI V3","State":"closed","Body":"","Url":"https://github.com/aspnet/Identity/issues/2053","RelatedDescription":"Closed issue \"Fix integrity tags on Identity UI V3\" (#2053)"},{"Id":"376973581","IsPullRequest":true,"CreatedAt":"2018-11-02T21:48:08","Actor":"javiercn","Number":"2052","RawContent":null,"Title":"Fixes integrity validation hashes for Identity UI V3","State":"closed","Body":"Fixes https://github.com/aspnet/Identity/issues/2053","Url":"https://github.com/aspnet/Identity/pull/2052","RelatedDescription":"Closed or merged PR \"Fixes integrity validation hashes for Identity UI V3\" (#2052)"},{"Id":"376607709","IsPullRequest":false,"CreatedAt":"2018-11-01T23:29:51","Actor":"ycrumeyrolle","Number":"2051","RawContent":null,"Title":"[Question] Passwords should not be of type String ?","State":"closed","Body":"My security team escalated to me that the `PasswordHasher` is vulnerable to heap inspection, as the password is of type `String`. \r\nIt should be instead a byte array / span of bytes cleared at the end of the process, as it is done by any cryptographic operation in corefx. CC @bartonjs.\r\nSame problem with any password related types (`IPasswordValidator`, and maybe also the `IUserPasswordStore`)","Url":"https://github.com/aspnet/Identity/issues/2051","RelatedDescription":"Closed issue \"[Question] Passwords should not be of type String ?\" (#2051)"}],"ResultType":"GitHubIssue"},"Tooling-Issues":{"Issues":[{"Id":"499940912","IsPullRequest":false,"CreatedAt":"2019-09-28T16:33:15","Actor":"genifycom","Number":"1094","RawContent":null,"Title":"Add Razor Page using Entity Framework (CRUD)","State":"open","Body":"<!-- Describe what isn't working as expected -->\r\nWhen I right click on Pages and Add Razor page. I select Razor Pages using Entity Framework (CRUD). I select my Model class and my Data Context class and press Add.\r\n\r\nI expect to give the Razor page a name. But a Dialog pops up and says\r\n\r\nAdd Razor Page(s)\r\n\r\nThe following file(s) already exist:\r\n\r\nIndex\r\nIndex.cshtml.cs\r\n\r\nDo you want to replace them?\r\n---------------------------\r\nYes   No   \r\n---------------------------\r\n\r\nI do not expect that adding a Razor page will replace Index. I expect to create a NEW razor page with a new name. Saying No here does not allow one to continue.\r\n\r\n### Steps to reproduce\r\nAs above\r\n\r\nWe ❤ code! Include a complete code listing or attach a simplified project\r\n\r\nCreate a new ASP.NET Core Web Application. Use ASP.NET Core 3.0 and \"Web Application\".\r\nCreate a model class (Customer with int ID and string Name).\r\nAdd Razor Page using EF and CRUD.\r\nSelect Model class and add context class.\r\nClick Add\r\n\r\n### Further technical details\r\n\r\nEF Core version: 3.0\r\nDatabase provider: (e.g. Microsoft.EntityFrameworkCore.SqlServer)\r\nTarget framework: (e.g. .NET Core 3.0)\r\nOperating system: Windows 10\r\nIDE: (e.g. Visual Studio 2019 16.3) Visual Studio 2019 16.3.1\r\n","Url":"https://github.com/aspnet/Tooling/issues/1094","RelatedDescription":"Open issue \"Add Razor Page using Entity Framework (CRUD)\" (#1094)"},{"Id":"480473543","IsPullRequest":false,"CreatedAt":"2019-08-14T04:21:20","Actor":"AlseinX","Number":"1093","RawContent":null,"Title":"`dotnet new -i` does not work any more in preview8","State":"open","Body":"`dotnet new -i Microsoft.AspNetCore.Blazor.Templates::3.0.0-preview8.19405.7`\r\n\r\nResults:\r\n\r\n```\r\n用法: new [选项]\r\n\r\n选项:\r\n  -h, --help          Displays help for this command.\r\n  -l, --list          Lists templates containing the specified name. If no name is specified, lists all templates.\r\n  -n, --name          The name for the output being created. If no name is specified, the name of the current directory is used.\r\n  -o, --output        Location to place the generated output.\r\n  -i, --install       Installs a source or a template pack.\r\n  -u, --uninstall     Uninstalls a source or a template pack.\r\n  --nuget-source      Specifies a NuGet source to use during install.\r\n  --type              Filters templates based on available types. Predefined values are \"project\", \"item\" or \"other\".\r\n  --dry-run           Displays a summary of what would happen if the given command line were run if it would result in a template creation.\r\n  --force             Forces content to be generated even if it would change existing files.\r\n  -lang, --language   Filters templates based on language and specifies the language of the template to create.\r\n  --update-check      Check the currently installed template packs for updates.\r\n  --update-apply      Check the currently installed template packs for update, and install the updates.\r\n\r\n\r\nTemplates                                         Short Name               Language          Tags\r\n----------------------------------------------------------------------------------------------------------------------------------\r\nConsole Application                               console                  [C#], F#, VB      Common/Console\r\nClass library                                     classlib                 [C#], F#, VB      Common/Library\r\nWPF Application                                   wpf                      [C#], VB          Common/WPF\r\nWPF Class library                                 wpflib                   [C#], VB          Common/WPF\r\nWPF Custom Control Library                        wpfcustomcontrollib      [C#], VB          Common/WPF\r\nWPF User Control Library                          wpfusercontrollib        [C#], VB          Common/WPF\r\nWindows Forms (WinForms) Application              winforms                 [C#], VB          Common/WinForms\r\nWindows Forms (WinForms) Class library            winformslib              [C#], VB          Common/WinForms\r\nWorker Service                                    worker                   [C#]              Common/Worker/Web\r\nUnit Test Project                                 mstest                   [C#], F#, VB      Test/MSTest\r\nNUnit 3 Test Project                              nunit                    [C#], F#, VB      Test/NUnit\r\nNUnit 3 Test Item                                 nunit-test               [C#], F#, VB      Test/NUnit\r\nxUnit Test Project                                xunit                    [C#], F#, VB      Test/xUnit\r\nRazor Component                                   razorcomponent           [C#]              Web/ASP.NET\r\nRazor Page                                        page                     [C#]              Web/ASP.NET\r\nMVC ViewImports                                   viewimports              [C#]              Web/ASP.NET\r\nMVC ViewStart                                     viewstart                [C#]              Web/ASP.NET\r\nBlazor Server App                                 blazorserver             [C#]              Web/Blazor\r\nASP.NET Core Empty                                web                      [C#], F#          Web/Empty\r\nASP.NET Core Web App (Model-View-Controller)      mvc                      [C#], F#          Web/MVC\r\nASP.NET Core Web App                              webapp                   [C#]              Web/MVC/Razor Pages\r\nASP.NET Core with Angular                         angular                  [C#]              Web/MVC/SPA\r\nASP.NET Core with React.js                        react                    [C#]              Web/MVC/SPA\r\nASP.NET Core with React.js and Redux              reactredux               [C#]              Web/MVC/SPA\r\nRazor Class Library                               razorclasslib            [C#]              Web/Razor/Library/Razor Class Library\r\nASP.NET Core Web API                              webapi                   [C#], F#          Web/WebAPI\r\nASP.NET Core gRPC Service                         grpc                     [C#]              Web/gRPC\r\ndotnet gitignore file                             gitignore                                  Config\r\nglobal.json file                                  globaljson                                 Config\r\nNuGet Config                                      nugetconfig                                Config\r\nDotnet local tool manifest file                   tool-manifest                              Config\r\nWeb Config                                        webconfig                                  Config\r\nSolution File                                     sln                                        Solution\r\nProtocol Buffer File                              proto                                      Web/gRPC\r\n\r\nExamples:\r\n    dotnet new mvc --auth Individual\r\n    dotnet new wpfcustomcontrollib\r\n    dotnet new --help\r\n\r\n```\r\n\r\nRunning `dotnet new -i aaa::bbb` results the same.","Url":"https://github.com/aspnet/Tooling/issues/1093","RelatedDescription":"Open issue \"`dotnet new -i` does not work any more in preview8\" (#1093)"},{"Id":"477192366","IsPullRequest":true,"CreatedAt":"2019-08-06T06:25:26","Actor":"SuperChenSSS","Number":"1092","RawContent":null,"Title":"Point \"Set up DNS name for the VM\" link to the right direction","State":"open","Body":"The \"Set up DNS name for the VM\" link is incorrect and can't see the content. Change it to the right direction.","Url":"https://github.com/aspnet/Tooling/pull/1092","RelatedDescription":"Open PR \"Point \"Set up DNS name for the VM\" link to the right direction\" (#1092)"},{"Id":"477188104","IsPullRequest":true,"CreatedAt":"2019-08-06T06:24:35","Actor":"SuperChenSSS","Number":"1091","RawContent":null,"Title":"Point \"Set up DNS name for the VM\" link to the right direction","State":"closed","Body":"The \"Set up DNS name for the VM\" link is incorrect and can't see the content. Change it to the right direction.","Url":"https://github.com/aspnet/Tooling/pull/1091","RelatedDescription":"Closed or merged PR \"Point \"Set up DNS name for the VM\" link to the right direction\" (#1091)"},{"Id":"476745373","IsPullRequest":false,"CreatedAt":"2019-08-05T09:15:18","Actor":"juniormayhe","Number":"1090","RawContent":null,"Title":"Cannot start a webapi on specific SSL port managed by IISExpress","State":"open","Body":"A brand new netcore webapi 2.2 is created. \r\n\r\nCurrent launch settings:\r\n```\r\n{\r\n  \"$schema\": \"http://json.schemastore.org/launchsettings.json\",\r\n  \"iisSettings\": {\r\n    \"windowsAuthentication\": false,\r\n    \"anonymousAuthentication\": true,\r\n    \"iisExpress\": {\r\n      \"applicationUrl\": \"http://localhost:62813\",\r\n      \"sslPort\": 44396\r\n    }\r\n  },\r\n```\r\n\r\nAfter setting the SSL port to anything such as 11000, application won't get started on IIS Express, but the same app runs correctly on port 11000 after being published to local IIS (https://localhost:11000).\r\n\r\nThe only way to start it on IIS Express is to keep 443 prefix (i.e. 44300, 44301, etc). \r\n\r\nIs this restriction by design as stated [here](https://developercommunity.visualstudio.com/content/problem/39430/changing-port-number-in-a-web-project-does-not-imm.html?childToView=43139#comment-43139)?\r\n\r\n\"You can change that value to whatever you want.\" definitely is not working as stated here: https://github.com/aspnet/Tooling/issues/286\r\n\r\n```\r\n- Visual Studio 2019 16.1.6\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview6-012264\r\n Commit:    be3f0c1a03\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  fdf81c6faf\r\n\r\n.NET Core SDKs installed:\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.701 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010219 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n```","Url":"https://github.com/aspnet/Tooling/issues/1090","RelatedDescription":"Open issue \"Cannot start a webapi on specific SSL port managed by IISExpress\" (#1090)"},{"Id":"465641918","IsPullRequest":false,"CreatedAt":"2019-07-09T08:26:34","Actor":"plachor","Number":"1089","RawContent":null,"Title":"LaunchSettings are not respected by Test Runner","State":"open","Body":"In latest Visual Studio 2019, Test Runner ignores `environmentVariables` configuration which would allow for instance configuration of `ASPNETCORE_ENVIRONMENT`.\r\n\r\nThis would be beneficial for integration tests that in local environment use different appsettings (non-production).\r\n\r\nFor instance I would like to define following launchSettings.json:\r\n```json\r\n{\r\n  \"profiles\": {\r\n    \"SomeFancyNamespace.ProjectName.Integration.Tests\": {\r\n      \"commandName\": \"Project\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThere was an related issue that was closed: https://github.com/aspnet/Tooling/issues/456 ","Url":"https://github.com/aspnet/Tooling/issues/1089","RelatedDescription":"Open issue \"LaunchSettings are not respected by Test Runner\" (#1089)"},{"Id":"447378907","IsPullRequest":true,"CreatedAt":"2019-05-22T23:02:06","Actor":"Rick-Anderson","Number":"1088","RawContent":null,"Title":"Update dotnet-core-3.0-preview1.md","State":"open","Body":"MS Style guide violations and other clean up. Less is more.","Url":"https://github.com/aspnet/Tooling/pull/1088","RelatedDescription":"Open PR \"Update dotnet-core-3.0-preview1.md\" (#1088)"},{"Id":"433911513","IsPullRequest":true,"CreatedAt":"2019-04-16T17:57:10","Actor":"Rick-Anderson","Number":"1087","RawContent":null,"Title":"Update known-issues-vs2017.md","State":"open","Body":"Use Visual Studio Installer to install the missing Visual Studio component \".NET Core 1.0 - 1.1 developer tools for Web\" from the **Individual components** tab.","Url":"https://github.com/aspnet/Tooling/pull/1087","RelatedDescription":"Open PR \"Update known-issues-vs2017.md\" (#1087)"},{"Id":"430834286","IsPullRequest":false,"CreatedAt":"2019-04-09T17:36:29","Actor":"Ashishks1987","Number":"1086","RawContent":null,"Title":"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers","State":"closed","Body":"I have referenced `system.collections.immutable.dll` from the nuget package and I also have the nuget package installed for `Microsoft.Net.Compilers`. Everything works fine in my local but when I push my code to bamboo, in the runtime I get `Could not load file or assembly 'System.Collections.Immutable, Version=1.2.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)`\r\n\r\nWhen I checked logs on bamboo when it generates the artifacts, I can see that initially it copied the correct dll here:\r\n\r\n`build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\System.Collections.Immutable.1.5.0\\lib\\netstandard1.0\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\"`.\r\n\r\nbut then at some point, it replaced this dll with this: `build    04-Apr-2019 03:20:33      Copying file from \"E:\\agt01\\ENS-EB580-JOB1\\Bin\\Packages\\Microsoft.Net.Compilers.1.0.0\\tools\\System.Collections.Immutable.dll\" to \"E:\\agt01\\ENS-EB580-JOB1\\Binaries\\Release\\\\temp\\Web\\_PublishedWebsites\\MyService\\bin\\System.Collections.Immutable.dll\".`\r\n\r\nHow can I make sure that bamboo does not replace this dll and just uses it from the nuget package installed?","Url":"https://github.com/aspnet/Tooling/issues/1086","RelatedDescription":"Closed issue \"System.Collections.Immutable dll being replace by Microsoft.Net.Compilers\" (#1086)"},{"Id":"422330835","IsPullRequest":false,"CreatedAt":"2019-03-18T17:00:12","Actor":"vikasNew","Number":"1085","RawContent":null,"Title":"web deploy on windows 10","State":"open","Body":"Hello,\r\n\r\ncan i publish my code by using web deploy to windows 10 machine.\r\n\r\ni have setup my testing windows 10 machine for deployment, which is in local area network.\r\n\r\nSo i want to publish my code to that remote machine by using web deploy. can i do that ?\r\n\r\ni have installed web deploy and also enabled web development remote service on windows 10 but i am not able to connect to remote machine using we deploy.\r\n\r\nThis returns me the following error every-time.\r\n\"ERROR_DESTINATION_NOT_REACHABLE\"\r\n\r\ninteresting thing is i also have windows 10 on my machine & i am able to use web deploy on my local machine but it's not working with remote windows 10 machine.\r\n\r\nis web deploy only meant for Windows servers not for other normal windows?\r\n\r\nThanks \r\n","Url":"https://github.com/aspnet/Tooling/issues/1085","RelatedDescription":"Open issue \"web deploy on windows 10\" (#1085)"},{"Id":"398036850","IsPullRequest":false,"CreatedAt":"2019-01-15T05:32:59","Actor":"chrgraefe","Number":"1084","RawContent":null,"Title":"Can't add area on ASP.NET Core MVC project","State":"closed","Body":"### Describe the bug\r\nA clear and concise description of what the bug is.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '3.0.100-preview-009812'\r\n2. New ASP.NET Core MVC project in VS2019 Preview\r\n3. Can't add area\r\n\r\n### Expected behavior\r\nA dialog to type area name\r\n","Url":"https://github.com/aspnet/Tooling/issues/1084","RelatedDescription":"Closed issue \"Can't add area on ASP.NET Core MVC project\" (#1084)"},{"Id":"391209971","IsPullRequest":false,"CreatedAt":"2018-12-14T18:00:59","Actor":"sai-manoj-kumar","Number":"1080","RawContent":null,"Title":"The template to create an ASP .NET VM is not working","State":"open","Body":"[The template given here](https://github.com/aspnet/Tooling/blob/AspNetVMs/docs/create-asp-net-vm-with-webdeploy.md#PowerShellScript) doesn't work. It gives the error SkuNotAvailable. Can someone please fix it?","Url":"https://github.com/aspnet/Tooling/issues/1080","RelatedDescription":"Open issue \"The template to create an ASP .NET VM is not working\" (#1080)"},{"Id":"385928083","IsPullRequest":false,"CreatedAt":"2018-12-07T20:30:45","Actor":"sinand","Number":"1079","RawContent":null,"Title":"auto build on browser request not working","State":"closed","Body":"I am using community edition 15.9.3 since  the previous update this feature is not working, everytime I have to build project.","Url":"https://github.com/aspnet/Tooling/issues/1079","RelatedDescription":"Closed issue \"auto build on browser request not working\" (#1079)"},{"Id":"383440110","IsPullRequest":false,"CreatedAt":"2018-11-26T19:03:29","Actor":"eriawan","Number":"1078","RawContent":null,"Title":"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019","State":"closed","Body":"Apologize if my feedback may sound controversial or may spark a debate.\r\n\r\nI need to be sure that the problem mentioned on this [page](https://github.com/aspnet/Tooling/blob/master/known-issues-vs2017.md#to-create-aspnet-core-10--11-projects-install-visual-studios-net-core-10---11-developer-tools-for-web-component) about .NET Core 1.0/1.1 tooling is installed when creating new ASP.NET Core 1.0/1.1 project should not happen or should not be supported in VS 2019.\r\n\r\nThese are my main concerns:\r\n\r\n1. VS 2019 is about to be released in around early 2019\r\n2. ASP.NET Core 1.0/1.1 is not going to be supported anymore, based on [this page](https://github.com/dotnet/core/blob/master/microsoft-support.md).\r\n3. Creating new ASP.NET Core 1.0/1.1 will always install the .NET Core 1.0/1.1 web tooling, and this is not necessary when previous reason has reached the unsupported period and it's quite near or might be the same time of VS 2019 release.\r\n4. Based on the problem mentioned above, VS 2017 has no \"built in\" tooling when creating new ASP.NET Core 1.0/1.1 project, but the external tooling may help. Therefore for those that still need to maintain ASP.NET Core 1.0/1.1 projects, we could use VS 2017 as long as the VS 2017 is still in support lifecycle or in mainstream support lifecycle.\r\n\r\nI welcome feedback 🙂 \r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1078","RelatedDescription":"Closed issue \"Feedback: ensure that .NET Core 1.0/1.1 tooling only supported in VS 2017 and won't be supported in VS 2019\" (#1078)"},{"Id":"349649932","IsPullRequest":true,"CreatedAt":"2018-08-10T20:38:21","Actor":"AndrewBrianHall","Number":"1077","RawContent":null,"Title":"Adding a .net core -> vs mapping table","State":"closed","Body":"","Url":"https://github.com/aspnet/Tooling/pull/1077","RelatedDescription":"Closed or merged PR \"Adding a .net core -> vs mapping table\" (#1077)"},{"Id":"333613195","IsPullRequest":false,"CreatedAt":"2018-06-27T12:59:29","Actor":"Liero","Number":"1076","RawContent":null,"Title":"Unable to publish when using Microsoft.NET.Sdk.Razor","State":"closed","Body":"After I upgraded my solution from asp.net core 2.0 to 2.1, I'm not able to publish my web app from Visual Studio, although it can build.\r\n\r\nDuring the upgrade I've changed SDK in one of my class libraries to **Microsoft.NET.Sdk.Razor**, but now I'm getting a lot of errors and if project references were not recognized in this library when publishing.\r\n\r\n```\r\nConnecting to C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\publish\\...\r\nMyProject.Web -> C:\\Projects\\tacs\\MyProject\\MyProject.Web\\bin\\Release\\netcoreapp2.1\\MyProject.Web.dll\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\15.0\\Bin\\Roslyn\\csc.exe /noconfig /unsafe- /checked- /nowarn:1701,1702,1701,1702,2008 /nostdlib+ /errorreport:prompt /warn:4 /define:TRACE;RELEASE;NETCOREAPP;NETCOREAPP2_1 /errorendlocation /preferreduilang:en-US /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.antiforgery\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Antiforgery.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authentication.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authentication.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.authorization.policy\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Authorization.Policy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.cryptography.internal\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Cryptography.Internal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.dataprotection\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.DataProtection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.diagnostics.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Diagnostics.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.hosting.server.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Hosting.Server.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.html.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Html.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.http.features\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Http.Features.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.jsonpatch\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.JsonPatch.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.apiexplorer\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ApiExplorer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.core\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.cors\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Cors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.dataannotations\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.formatters.json\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Formatters.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razor.extensions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.Razor.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.razorpages\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.RazorPages.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.taghelpers\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.TagHelpers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.mvc.viewfeatures\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Mvc.ViewFeatures.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.language\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Language.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.razor.runtime\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Razor.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.responsecaching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.ResponseCaching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.routing\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.Routing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.aspnetcore.webutilities\\2.1.0\\lib\\netstandard2.0\\Microsoft.AspNetCore.WebUtilities.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.csharp\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.common\\2.8.0\\lib\\netstandard1.3\\Microsoft.CodeAnalysis.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.razor\\2.1.0\\lib\\netstandard2.0\\Microsoft.CodeAnalysis.Razor.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.CSharp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.dotnet.platformabstractions\\2.1.0\\lib\\netstandard1.3\\Microsoft.DotNet.PlatformAbstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.relational\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.Relational.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.sqlserver\\2.1.0\\lib\\netstandard2.0\\Microsoft.EntityFrameworkCore.SqlServer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.caching.memory\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Caching.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration.binder\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.Binder.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.configuration\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.DependencyInjection.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencyinjection\\2.1.0\\lib\\netcoreapp2.0\\Microsoft.Extensions.DependencyInjection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.dependencymodel\\2.1.0\\lib\\netstandard1.6\\Microsoft.Extensions.DependencyModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.fileproviders.composite\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileProviders.Composite.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.filesystemglobbing\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.FileSystemGlobbing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.hosting.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Hosting.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.localization\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Localization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging.abstractions\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.Abstractions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.logging\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Logging.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.objectpool\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.ObjectPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.options\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Options.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.primitives\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.extensions.webencoders\\2.1.0\\lib\\netstandard2.0\\Microsoft.Extensions.WebEncoders.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.net.http.headers\\2.1.0\\lib\\netstandard2.0\\Microsoft.Net.Http.Headers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.VisualBasic.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\Microsoft.Win32.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.win32.registry\\4.5.0\\ref\\netstandard2.0\\Microsoft.Win32.Registry.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\mscorlib.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\netstandard.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json.bson\\1.0.1\\lib\\netstandard1.3\\Newtonsoft.Json.Bson.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\newtonsoft.json\\11.0.2\\lib\\netstandard2.0\\Newtonsoft.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\remotion.linq\\2.2.0\\lib\\netstandard1.0\\Remotion.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.AppContext.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Buffers.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Concurrent.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Immutable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.NonGeneric.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Collections.Specialized.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Annotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.DataAnnotations.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.EventBasedAsync.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ComponentModel.TypeConverter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Configuration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Console.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Core.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.Common.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Data.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.data.sqlclient\\4.5.0\\ref\\netcoreapp2.1\\System.Data.SqlClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Contracts.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Debug.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.DiagnosticSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.FileVersionInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Process.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.StackTrace.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TextWriterTraceListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tools.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.TraceSource.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Diagnostics.Tracing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Drawing.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Dynamic.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Calendars.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Globalization.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.interactive.async\\3.1.1\\lib\\netstandard1.3\\System.Interactive.Async.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.Brotli.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Compression.ZipFile.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.DriveInfo.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.FileSystem.Watcher.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.IsolatedStorage.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.MemoryMappedFiles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.Pipes.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.IO.UnmanagedMemoryStream.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Expressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Linq.Queryable.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Memory.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Http.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.HttpListener.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Mail.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NameResolution.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.NetworkInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Ping.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Requests.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.ServicePoint.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.Sockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebClient.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebHeaderCollection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.Client.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Net.WebSockets.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Numerics.Vectors.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ObjectModel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.DispatchProxy.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.ILGeneration.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Emit.Lightweight.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Metadata.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Reflection.TypeExtensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Reader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.ResourceManager.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Resources.Writer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.runtime.compilerservices.unsafe\\4.5.0\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.CompilerServices.VisualC.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Handles.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.RuntimeInformation.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.InteropServices.WindowsRuntime.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Loader.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Numerics.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Formatters.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Json.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Runtime.Serialization.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.accesscontrol\\4.5.0\\ref\\netstandard2.0\\System.Security.AccessControl.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Claims.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Algorithms.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Csp.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.Primitives.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Cryptography.X509Certificates.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.cryptography.xml\\4.5.0\\ref\\netstandard2.0\\System.Security.Cryptography.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.permissions\\4.5.0\\ref\\netstandard2.0\\System.Security.Permissions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.Principal.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.security.principal.windows\\4.5.0\\ref\\netstandard2.0\\System.Security.Principal.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Security.SecureString.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceModel.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ServiceProcess.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.Encoding.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\system.text.encodings.web\\4.5.0\\lib\\netstandard2.0\\System.Text.Encodings.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Text.RegularExpressions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Overlapped.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Dataflow.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Extensions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Tasks.Parallel.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Thread.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.ThreadPool.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Threading.Timer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Transactions.Local.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.ValueTuple.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Web.HttpUtility.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Windows.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Linq.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.ReaderWriter.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.Serialization.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XmlSerializer.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\System.Xml.XPath.XDocument.dll\" /reference:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.netcore.app\\2.1.0\\ref\\netcoreapp2.1\\WindowsBase.dll\" /debug- /debug:portable /filealign:512 /optimize+ /out:obj\\Release\\netcoreapp2.1\\MyProject.Mail.dll /ruleset:\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Team Tools\\Static Analysis Tools\\\\Rule Sets\\MinimumRecommendedRules.ruleset\" /target:library /warnaserror- /utf8output /deterministic+ /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.codeanalysis.analyzers\\1.1.0\\analyzers\\dotnet\\cs\\Microsoft.CodeAnalysis.CSharp.Analyzers.dll\" /analyzer:\"C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\microsoft.entityframeworkcore.analyzers\\2.1.0\\analyzers\\dotnet\\cs\\Microsoft.EntityFrameworkCore.Analyzers.dll\" EmailDefaults.cs EmailOptions.cs MailSender.cs NotificationService.cs RazorViewToStringRenderer.cs \"C:\\Users\\daniel.turan\\AppData\\Local\\Temp\\.NETCoreApp,Version=v2.1.AssemblyAttributes.cs\" obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs obj\\Release\\netcoreapp2.1\\\\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs obj\\Release\\netcoreapp2.1\\\\Tem\tporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.RazorAssemblyInfo.cs obj\\Release\\netcoreapp2.1\\MyProject.Mail.AssemblyInfo.cs /warnaserror+:NU1605\r\nNotificationService.cs(15,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\nNotificationService.cs(16,12): Error CS0234: The type or namespace name 'DataAccess' does not exist in the namespace 'MyProject' (are you missing an assembly reference?)\r\n...\r\n```\r\n\r\nAlso, see https://stackoverflow.com/questions/50926116/publish-failed-when-using-microsoft-net-sdk-razor-if-reference-was-not-recognize for more details","Url":"https://github.com/aspnet/Tooling/issues/1076","RelatedDescription":"Closed issue \"Unable to publish when using Microsoft.NET.Sdk.Razor\" (#1076)"},{"Id":"329605262","IsPullRequest":false,"CreatedAt":"2018-06-05T20:05:23","Actor":"AngelosP","Number":"1075","RawContent":null,"Title":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator","State":"open","Body":"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of https://www.nuget.org/packages/dotnet-aspnet-codegenerator/","Url":"https://github.com/aspnet/Tooling/issues/1075","RelatedDescription":"Open issue \"Microsoft.VisualStudio.Web.CodeGeneration.Tools has been deprecated in favor of dotnet-aspnet-codegenerator\" (#1075)"},{"Id":"328747170","IsPullRequest":false,"CreatedAt":"2018-06-02T14:10:13","Actor":"AceHack","Number":"1074","RawContent":null,"Title":"Docker in launchSettings.json","State":"open","Body":"Please give documentation on how to add volume mounts.  I need to add a custom volume mount into my image.","Url":"https://github.com/aspnet/Tooling/issues/1074","RelatedDescription":"Open issue \"Docker in launchSettings.json\" (#1074)"},{"Id":"328082529","IsPullRequest":true,"CreatedAt":"2018-06-01T17:41:04","Actor":"federicorinaldi","Number":"1073","RawContent":null,"Title":"Update dotnet-core-2.1.md","State":"closed","Body":"Visual Studio 2017 15.7 has been released now so this document is outdated","Url":"https://github.com/aspnet/Tooling/pull/1073","RelatedDescription":"Closed or merged PR \"Update dotnet-core-2.1.md\" (#1073)"},{"Id":"323850872","IsPullRequest":false,"CreatedAt":"2018-05-17T06:31:53","Actor":"Pichasepong","Number":"1072","RawContent":null,"Title":"can not upload file FTPS. ","State":"closed","Body":"I don't understand why can't upload result is false. At the highlights in yellow. Help me.\r\n![2018-05-17_9-21-13](https://user-images.githubusercontent.com/12063904/40155003-9812f0d8-59bb-11e8-82ae-8b8e7576b1a1.png)\r\n![2018-05-17_11-02-28](https://user-images.githubusercontent.com/12063904/40156168-efe61078-59c1-11e8-8c4c-7657ba2dd536.png)\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1072","RelatedDescription":"Closed issue \"can not upload file FTPS. \" (#1072)"},{"Id":"317494886","IsPullRequest":false,"CreatedAt":"2018-04-25T06:34:01","Actor":"TheAlphamerc","Number":"1071","RawContent":null,"Title":" Unable to start debugging","State":"open","Body":"The project is success fully build but unable to start debugger. See [here][2018-04-25_11-20-19.7244.Ide.log](https://github.com/aspnet/Tooling/files/1945717/2018-04-25_11-20-19.7244.Ide.log) for more details. \r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/aspnet/Tooling/issues/1071","RelatedDescription":"Open issue \" Unable to start debugging\" (#1071)"},{"Id":"316585462","IsPullRequest":false,"CreatedAt":"2018-04-24T05:17:55","Actor":"rberger247","Number":"1070","RawContent":null,"Title":"Visual studio freezes when I run add-migration ","State":"closed","Body":"I have enabled migrations and added migrations within my project previously. However now when I run add-migration visual studio freezes and I need to close visual studio via the task manger.","Url":"https://github.com/aspnet/Tooling/issues/1070","RelatedDescription":"Closed issue \"Visual studio freezes when I run add-migration \" (#1070)"},{"Id":"308764422","IsPullRequest":false,"CreatedAt":"2018-03-27T05:23:09","Actor":"dvdobrovolskiy","Number":"1069","RawContent":null,"Title":"EntityFramework migrations not available to be applied during publish","State":"closed","Body":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc","Url":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069)"},{"Id":"304770827","IsPullRequest":false,"CreatedAt":"2018-03-14T05:33:19","Actor":"TheConservativeCoder","Number":"1068","RawContent":null,"Title":"Switch between Razor Page View and Code Behind","State":"closed","Body":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n","Url":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068)"},{"Id":"304312342","IsPullRequest":false,"CreatedAt":"2018-03-13T05:33:42","Actor":"RehanSaeed","Number":"1067","RawContent":null,"Title":"Support dotnet watch in launchSettings.json","State":"closed","Body":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine.","Url":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Closed issue \"Support dotnet watch in launchSettings.json\" (#1067)"},{"Id":"300865938","IsPullRequest":false,"CreatedAt":"2018-02-28T06:01:18","Actor":"rjamesnw","Number":"1066","RawContent":null,"Title":"Nesting bug","State":"closed","Body":"The is a problem nesting embedded resources.  I was experimenting with nesting .cshtml files using the existing rules and did this:\r\n\r\nModal.cs (bootstrap modal web component)\r\n   -> Modal.cs.cshtml (it's view file)\r\n\r\n`Modal.cs.cshtml` is set to Embedded Resource, and clearly shows it, but is completed IGNORED by the build process (simply open the DLL in a text editor [such as Notepad++] and scroll to the bottom and look for text).  If I rename the file to \"Modal.cshtml\" instead it works perfectly fine!  :/  I don't think whether or not a file is embedded should have and role in excluding a file from being embedded so this seems like a bug to me.\r\n\r\nYes, I'm aware of upcoming nesting controls in v15.6, but I'm not able to install it yet, and regardless, this should work fine, so it should be looked into nonetheless.\r\n\r\nJust to add: I'm using wild-cards to include the file.  If I explicitly add it I get this:\r\n\r\n`Duplicate 'EmbeddedResource' items were included. ...`\r\n\r\nSo it's clearly found.  It's obviously something up with the build process not finding the nested file.","Url":"https://github.com/aspnet/Tooling/issues/1066","RelatedDescription":"Closed issue \"Nesting bug\" (#1066)"},{"Id":"290854647","IsPullRequest":false,"CreatedAt":"2018-01-24T01:14:53","Actor":"NeerajaRagesh","Number":"1065","RawContent":null,"Title":"Issue with Sales discount App - Odoo 9","State":"closed","Body":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n","Url":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065)"},{"Id":"273994049","IsPullRequest":true,"CreatedAt":"2018-01-07T03:48:49","Actor":"cartermp","Number":"1062","RawContent":null,"Title":"Update migrate-sql-server.md","State":"closed","Body":"Removed product links in favor of all docs links, changed wording slightly, and moved Get Started to be at the top.","Url":"https://github.com/aspnet/Tooling/pull/1062","RelatedDescription":"Closed or merged PR \"Update migrate-sql-server.md\" (#1062)"},{"Id":"274003770","IsPullRequest":true,"CreatedAt":"2017-11-15T02:15:11","Actor":"cristy","Number":"1064","RawContent":null,"Title":"Re adding","State":"closed","Body":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end...","Url":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Closed or merged PR \"Re adding\" (#1064)"},{"Id":"273996633","IsPullRequest":true,"CreatedAt":"2017-11-15T01:03:12","Actor":"cristy","Number":"1063","RawContent":null,"Title":"Webapp landing page","State":"closed","Body":"This is the markdown for the Web App landing page. Let me know if there's any other changes I should make.","Url":"https://github.com/aspnet/Tooling/pull/1063","RelatedDescription":"Closed or merged PR \"Webapp landing page\" (#1063)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"496088190","IsPullRequest":false,"CreatedAt":"2019-09-20T00:47:11","Actor":"rynowak","Number":"389","RawContent":null,"Title":"JsonResult has moved to the Microsoft.AspNetCore.Mvc.Core assembly","State":"open","Body":"## JsonResult has moved to the Microsoft.AspNetCore.Mvc.Core assembly\r\n\r\nJsonResult has moved to the `Microsoft.AspNetCore.Mvc.Core` assembly. This type used to be defined in `Microsoft.AspNetCore.Mvc.Formatters.Json`. While we have added `[TypeForward(...)]` that will address this issue for the majority of users, applications that use 3rd party libraries may encounter issues.\r\n\r\nLibraries that were compiled against the 2.2 version of `Microsoft.AspNetCore.Mvc.Formatters.Json` may need to recompile in order to address the problem for all user.\r\n\r\n### Version introduced\r\n\r\n3.0-preview 6\r\n\r\n### Old behavior\r\n\r\nApplication using a 2.2-based library could be built.\r\n\r\n### New behavior\r\n\r\nApplication fails compilation with an [error like](https://github.com/aspnet/AspNetCore/issues/7220):\r\n\r\n```\r\nThe type 'JsonResult' exists in both 'Microsoft.AspNetCore.Mvc.Core, Version=3.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60' and 'Microsoft.AspNetCore.Mvc.Formatters.Json, Version=2.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60'\r\n```\r\n\r\n### Reason for change\r\n\r\nThis is part of platform-level changes to the composition of ASP.NET Core as described here: https://github.com/aspnet/Announcements/issues/325\r\n\r\n### Recommended action\r\n\r\nContact the library author and ask them to recompile the library targeting ASP.NET Core 3.0.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n[JsonResult](https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.mvc.jsonresult?view=aspnetcore-2.2)\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/389","RelatedDescription":"Open issue \"JsonResult has moved to the Microsoft.AspNetCore.Mvc.Core assembly\" (#389)"},{"Id":"496084841","IsPullRequest":false,"CreatedAt":"2019-09-20T00:30:20","Actor":"rynowak","Number":"388","RawContent":null,"Title":"Binary breaking change in removal of Microsoft.AspNetCore.Mvc.Components.Prerendering","State":"open","Body":"## Removal of Microsoft.AspNetCore.Mvc.Components.Prerendering\r\n\r\nThe assembly `Microsoft.AspNetCore.Mvc.Components.Prerendering` was removed in 3.0-preview 9. This can cause applications compiled against earlier 3.0 previews to fail at runtime even if they are not using this assembly.\r\n\r\n### Version introduced\r\n\r\n3.0-preview 9\r\n\r\n### Old behavior\r\n\r\nApplications compiled against 3.0-preview 8 or earlier are able to load `Microsoft.AspNetCore.Mvc.Components.Prerendering`\r\n\r\n### New behavior\r\n\r\nApplication crashes during startup with an exception like:\r\n\r\n```\r\n\r\n\"Unhandled exception. System.IO.FileNotFoundException: Could not load file or assembly 'Microsoft.AspNetCore.Mvc.Components.Prerendering, Culture=neutral, PublicKeyToken=null'. The system cannot find the file specified. File name: 'Microsoft.AspNetCore.Mvc.Components.Prerendering, Culture=neutral, PublicKeyToken=null'    at System.Reflection.RuntimeAssembly.nLoad(AssemblyName fileName, String codeBase, RuntimeAssembly assemblyContext, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, AssemblyLoadContext assemblyLoadContext)    at System.Reflection.RuntimeAssembly.InternalLoadAssemblyName(AssemblyName assemblyRef, StackCrawlMark& stackMark, AssemblyLoadContext assemblyLoadContext)    at System.Reflection.Assembly.Load(String assemblyString)    at Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.<>c.<GetApplicationPartAssemblies>b__8_0(ApplicationPartAttribute name)    at System.Linq.Enumerable.SelectArrayIterator`2.ToArray()    at System.Linq.Buffer`1..ctor(IEnumerable`1 source)  \r\n```\r\n\r\n### Reason for change\r\n\r\nThis assembly was part of the Blazor programming model, and the design and layering of these components changed between preview 8 and preview 9.\r\n\r\n### Recommended action\r\n\r\nRebuild the application against 3.0 preview 9 or later.\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n\"Not detectable via API analysis\"\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n","Url":"https://github.com/aspnet/Announcements/issues/388","RelatedDescription":"Open issue \"Binary breaking change in removal of Microsoft.AspNetCore.Mvc.Components.Prerendering\" (#388)"},{"Id":"496008673","IsPullRequest":false,"CreatedAt":"2019-09-19T20:24:17","Actor":"pranavkm","Number":"387","RawContent":null,"Title":"Breaking API changes in Antiforgery, Cors, Diagnostics, Mvc, and Routing","State":"open","Body":"As part of the 3.0 release, the following types and methods have been removed from Antiforgery, CORS, Diagnostics, MVC and Routing. Since these are binary breaking changes, applications or libraries that reference these APIs must remove these references and recompile to be compatible with ASP.NET Core 3.0:\r\n\r\n## Types\r\n\r\n* `Microsoft.AspNetCore.DiagnosticsViewPage.Views.AttributeValue`\r\n* `Microsoft.AspNetCore.DiagnosticsViewPage.Views.BaseView`\r\n* `Microsoft.AspNetCore.DiagnosticsViewPage.Views.HelperResult`\r\n* `Microsoft.AspNetCore.Diagnostics.Views.WelcomePage`\r\n* `Microsoft.AspNetCore.Diagnostics.Views.AttributeValue`\r\n* `Microsoft.AspNetCore.Diagnostics.Views.BaseView`\r\n* `Microsoft.AspNetCore.Routing.IRouteValuesAddressMetadata`\r\n* `Microsoft.AspNetCore.Routing.RouteValuesAddressMetadata`\r\n* `Microsoft.AspNetCore.Mvc.Formatters.Xml.ProblemDetails21Wrapper`\r\n* `Microsoft.AspNetCore.Mvc.Formatters.Xml.ValidationProblemDetails21Wrapper`\r\n* `Microsoft.AspNetCore.Mvc.Razor.Compilation.ViewsFeatureProvider`\r\n* `Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.PageArgumentBinder`\r\n* `Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.DefaultPageArgumentBinder`\r\n\r\n## Properties and methods\r\n\r\n* `Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions.CookieName { get; set; }`\r\n* `Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions.CookiePath { get; set; }`\r\n* `Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions.CookieDomain { get; set; }`\r\n* `Microsoft.AspNetCore.Antiforgery.AntiforgeryOptions.RequireSsl { get; set; }`\r\n* `Microsoft.AspNetCore.Cors.CorsService.ctor(IOptions<CorsService> options)`\r\n* `Microsoft.AspNetCore.Routing.Tree.TreeRouteBuilder.ctor(ILoggerFactory, UrlEncoder, ObjectPool<UriBuildingContext>, IInlineConstraintResolver )`\r\n* `Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext.OutputFormatterCanWriteContext()`\r\n* `Microsoft.AspNetCore.Mvc.ApiExplorer.DefaultApiDescriptionProvider.ctor(IOptions<MvcOptions> optionsAccessor, IInlineConstraintResolver constraintResolver, IModelMetadataProvider modelMetadataProvider);`\r\n* `Microsoft.AspNetCore.Mvc.ApiExplorer.DefaultApiDescriptionProvider.ctor(IOptions<MvcOptions> optionsAccessor, IInlineConstraintResolver constraintResolver, IModelMetadataProvider modelMetadataProvider, IActionResultTypeMapper mapper)`\r\n* `Microsoft.AspNetCore.Mvc.Formatters.FormatFilter.ctor(IOptions<MvcOptions> options)`\r\n* `Microsoft.AspNetCore.Mvc.LocalRedirectResult.ExecuteResult(ActionContext context)`\r\n* `Microsoft.AspNetCore.Mvc.RedirectResult.ExecuteResult(ActionContext context)`\r\n* `Microsoft.AspNetCore.Mvc.RedirectToActionResult.ExecuteResult(ActionContext context)`\r\n* `Microsoft.AspNetCore.Mvc.RedirectToPageResult.ExecuteResult(ActionContext context)`\r\n* `Microsoft.AspNetCore.Mvc.RedirectToRouteResult.ExecuteResult(ActionContext context)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinder.ctor(IModelBinder elementBinder)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinder.ctor()`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder.ctor()`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder.ctor(IDictionary<ModelMetadata, IModelBinder> propertyBinders)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder.ctor(IModelBinder keyBinder, IModelBinder valueBinder)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DoubleModelBinder.ctor(NumberStyles supportedStyles)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatModelBinder.ctor(NumberStyles supportedStyles)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinder.ctor()`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinder.ctor()`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinder.ctor()`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinder.ctor(IModelBinder keyBinder, IModelBinder valueBinder)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinder.ctor(Type type)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.ctor(IEnumerable<object> typeAttributes)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.ctor(IEnumerable<object> propertyAttributes, IEnumerable<object> typeAttributes)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory.ctor(IModelMetadataProvider metadataProvider, IOptions<MvcOptions> options)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder.ctor(IModelMetadataProvider modelMetadataProvider, IModelBinderFactory modelBinderFactory, IObjectModelValidator validator)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder.BindModelAsync(ActionContext actionContext, IValueProvider valueProvider, ParameterDescriptor parameter)`\r\n* `Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder.BindModelAsync(ActionContext actionContext, IValueProvider valueProvider, ParameterDescriptor parameter, object value)`\r\n* `Microsoft.AspNetCore.Mvc.Routing.KnownRouteValueConstraint.ctor()`\r\n* `Microsoft.AspNetCore.Mvc.Formatters.XmlDataContractSerializerInputFormatter.ctor()`\r\n* `Microsoft.AspNetCore.Mvc.Formatters.XmlDataContractSerializerInputFormatter.ctor(bool suppressInputFormatterBuffering)`\r\n* `Microsoft.AspNetCore.Mvc.Formatters.XmlDataContractSerializerInputFormatter.ctor(MvcOptions options)`\r\n* `Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerInputFormatter.ctor()`\r\n* `Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerInputFormatter.ctor(bool suppressInputFormatterBuffering)`\r\n* `Microsoft.AspNetCore.Mvc.Formatters.XmlSerializerInputFormatter.ctor(MvcOptions options)`\r\n* `Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper.ctor(IHostingEnvironment hostingEnvironment, IMemoryCache cache, HtmlEncoder htmlEncoder, IUrlHelperFactory urlHelperFactory)`\r\n* `Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.ctor(IHostingEnvironment hostingEnvironment, IMemoryCache cache, HtmlEncoder htmlEncoder, JavaScriptEncoder javaScriptEncoder, IUrlHelperFactory urlHelperFactory)`\r\n* `Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.ctor(IHostingEnvironment hostingEnvironment, IMemoryCache cache, HtmlEncoder htmlEncoder, JavaScriptEncoder javaScriptEncoder, IUrlHelperFactory urlHelperFactory)`\r\n* `Microsoft.AspNetCore.Mvc.CookieTempDataProviderOptions.Path { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.CookieTempDataProviderOptions.Domain { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.CookieTempDataProviderOptions.CookieName { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAdapter.ctor(RazorPageBase page)`\r\n* `Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.SuppressUseValidationProblemDetailsForInvalidModelStateResponses { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.AllowInferringBindingSourceForCollectionTypesAsFromQuery { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.ApplicationModels.InferParameterBindingInfoConvention.AllowInferringBindingSourceForCollectionTypesAsFromQuery { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.MvcOptions.AllowCombiningAuthorizeFilters { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.MvcOptions.AllowBindingHeaderValuesToNonStringModelTypes { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.MvcOptions.AllowValidatingTopLevelNodes { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.MvcOptions.InputFormatterExceptionPolicy { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.MvcOptions.SuppressBindingUndefinedValueToEnumType { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.MvcOptions.AllowShortCircuitingValidationWhenNoValidatorsArePresent { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.MvcDataAnnotationsLocalizationOptions.AllowDataAnnotationsLocalizationForEnumDisplayAttributes { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.MvcXmlOptions.AllowRfc7807CompliantProblemDetailsFormat { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.RazorPages.RazorPagesOptions.AllowAreas { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.RazorPages.RazorPagesOptions.AllowMappingHeadRequestsToGetHandler { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.RazorPages.RazorPagesOptions.AllowDefaultHandlingForOptionsRequests { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.MvcViewOptions.SuppressTempDataAttributePrefix { get; set; }`\r\n* `Microsoft.AspNetCore.Mvc.MvcViewOptions.AllowRenderingMaxLengthAttribute { get; set; }`\r\n\r\nFor questions or further discussions about this, please use https://github.com/aspnet/AspNetCore/issues/14169\r\n\r\n[This announcement has been migrated to dotnet/docs#14708]","Url":"https://github.com/aspnet/Announcements/issues/387","RelatedDescription":"Open issue \"Breaking API changes in Antiforgery, Cors, Diagnostics, Mvc, and Routing\" (#387)"},{"Id":"492917223","IsPullRequest":false,"CreatedAt":"2019-09-12T16:45:15","Actor":"HaoK","Number":"386","RawContent":null,"Title":"Breaking change in AddAuthorization(o =>) overload lives in a different assembly","State":"open","Body":"## Breaking change in `AddAuthorization(o =>)` overload lives in a different assembly\r\n\r\nWe renamed the core `AddAuthorization` methods that used to live in `Microsoft.AspNetCore.Authorization` to be `AddAuthorizationCore`, the old `AddAuthorization` methods still exist, but are in the `Microsoft.AspNetCore.Authorization.Policy` package instead.  Apps that are using both should see no impact, but apps that were not using the policy package will need to switch to using `AddAuthorizationCore`\r\n\r\n### Version introduced\r\n\r\n3.0\r\n\r\n### Old behavior\r\n\r\n`AddAuthorization` methods existed in `Microsoft.AspNetCore.Authorization`\r\n\r\n### New behavior\r\n\r\n`AddAuthorization` methods exist in `Microsoft.AspNetCore.Authorization.Policy`, `AddAuthorizationCore` is the new name for the old methods\r\n\r\n### Reason for change\r\n\r\nWe wanted the better `AddAuthorization` name to add all of the common services needed for authorization, so we decided to take over the old name in 3.0..\r\n\r\n### Recommended action\r\n\r\nEither add a reference to `Microsoft.AspNetCore.Authorization.Policy` or use `AddAuthorizationCore` instead\r\n\r\n### Category\r\n\r\nASP.NET\r\n\r\n### Affected APIs\r\n\r\n[`AddAuthorization(Action<AuthorizationOptions>)`](https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.dependencyinjection.authorizationservicecollectionextensions.addauthorization?view=aspnetcore-2.2#Microsoft_Extensions_DependencyInjection_AuthorizationServiceCollectionExtensions_AddAuthorization_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Action_Microsoft_AspNetCore_Authorization_AuthorizationOptions__)\r\n\r\n<!-- Do not modify anything below this line -->\r\n\r\n---\r\n#### Issue metadata\r\n\r\n* Issue type: breaking-change\r\n* This announcement has been migrated to: dotnet/docs#14525.","Url":"https://github.com/aspnet/Announcements/issues/386","RelatedDescription":"Open issue \"Breaking change in AddAuthorization(o =>) overload lives in a different assembly\" (#386)"},{"Id":"491793001","IsPullRequest":false,"CreatedAt":"2019-09-10T17:02:22","Actor":"blowdart","Number":"385","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8269: Denial of Service Vulnerability in OData","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8269: Denial of Service Vulnerability in OData\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service attack in the Microsoft OData library used in ASP.NET could cause a denial of service against an OData web application. A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the OData application.\r\n\r\nThe update addresses the vulnerability by updating the version of OData ASP.NET Core uses.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/AspNetCore/issues/13860\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If your application does not use ASP.NET Core's OData implementation or your application does not use Azure Storage to store data protect keys you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses `Microsoft.Data.OData.dll` or `Microsoft.AspNetCore.DataProtection.AzureStorage.dll` with a vulnerable version listed below.\r\nAny ASP.NET Core based application that uses the `Microsoft.AspNetCore.All` shared framework with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.DataProtection.AzureStorage.dll | 2.1.1 <br /> 2.2.0 | 2.1.2 <br /> 2.2.1\r\nMicrosoft.Data.OData | < 5.8.4 | 5.8.4\r\nMicrosoft.AspNetCore.All | 2.1.0 - 2.1.12 <br /> 2.2.0 - 2.2.6 | 2.1.13 <br /> 2.2.7\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\nThe affected assemblies are also available separately as a NuGet package. Even if you are not using `Microsoft.AspNetCore.DataProtection.AzureStorage.dll` or `Microsoft.Data.OData` directly you may still be affected if either package is a transitive dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends on `Contoso.Internals`, your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `Microsoft.AspNetCore.DataProtection.AzureStorage.dll/2.1.1` is a reference to version 2.1.1 of `Microsoft.AspNetCore.DataProtection.AzureStorage.dll`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.DataProtection.AzureStorage.dll\" Version=\"2.1.1 />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.DataProtection.AzureStorage.dll` version 2.1.1\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.DataProtection.AzureStorage.dll` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.DataProtection.AzureStorage.dll\" Version=\"2.1.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.DataProtection.AzureStorage.dll` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.DataProtection.AzureStorage.dll\" Version=\"2.1.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Eric Scott](http://linked.com/in/ericwscott)\r\n\r\n### External Links\r\n\r\n[CVE-2019-1075](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1075)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/aspnet/Announcements/issues/385","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8269: Denial of Service Vulnerability in OData\" (#385)"},{"Id":"491792101","IsPullRequest":false,"CreatedAt":"2019-09-10T17:00:20","Actor":"blowdart","Number":"384","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1302: ASP.NET Core Elevation Of Privilege Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1302: ASP.NET Core Elevation Of Privilege Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an elevation of privilege vulnerability exists when a ASP.NET Core web application, created using vulnerable project templates, fails to properly sanitize web requests. An attacker who successfully exploited this vulnerability could perform content injection attacks and run script in the security context of the logged-on user.\r\n\r\nTo exploit the vulnerability, an attacker could send a specially crafted email, containing a malicious link, to a user. Alternatively, an attacker could use a chat client to social engineer a user into clicking the malicious link. However, in all cases to exploit this vulnerability a user must click a maliciously crafted link from an attacker.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles content encoding and updates the application templates to depend on the corrected code libraries.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/AspNetCore/issues/13859\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not ASP.NET SPA services your application is not vulnerable.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on ASP.NET Core 2.1.0-2.1.1, or ASP.NET Core 2.2.0 or any preview of ASP.NET Core 3.0.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses `Microsoft.AspNetCore.SpaServices` with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nMicrosoft.AspNetCore.SpaServices | 2.1.0-2.1.1 <br /> 2.2.0 | 2.1.2 <br /> 2.2.1\r\n\r\nASP.NET Core v3 will be updated with its RTM release.\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\nYou must now update your existing SPA services projects to use the newer version of the vulnerable packages.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `Microsoft.AspNetCore.SpaServices/2.1.0` is a reference to version 2.1.1 of `Microsoft.AspNetCore.SpaServices`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SpaServices\" Version=\"2.1.1 />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `Microsoft.AspNetCore.DataProtection.AzureStorage.dll` version 2.1.1\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `Microsoft.AspNetCore.SpaServices` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SpaServices\" Version=\"2.1.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `Microsoft.AspNetCore.SpaServices` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SpaServices\" Version=\"2.1.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nIan Routledge [(@ediblecode)](https://twitter.com/ediblecode)\r\n\r\n### External Links\r\n\r\n[CVE-2019-1302](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1302)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/aspnet/Announcements/issues/384","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1302: ASP.NET Core Elevation Of Privilege Vulnerability\" (#384)"},{"Id":"487208574","IsPullRequest":true,"CreatedAt":"2019-09-05T14:48:35","Actor":"rpetrusha","Number":"383","RawContent":null,"Title":"Added breaking change template","State":"closed","Body":"## Added breaking change template\r\n\r\n","Url":"https://github.com/aspnet/Announcements/pull/383","RelatedDescription":"Closed or merged PR \"Added breaking change template\" (#383)"},{"Id":"481260943","IsPullRequest":false,"CreatedAt":"2019-08-15T17:46:23","Actor":"blowdart","Number":"382","RawContent":null,"Title":"Statement on Kestrel HTTP/2 implementation and CERT VU#605641","State":"open","Body":"[CERT VU605641](https://kb.cert.org/vuls/id/605641/) details various errors in some HTTP/2 implementations . Whilst Kestrel is not listed we've seen a number of customer questions about the bugs.\r\n\r\nThe Kestrel team were made aware of the vulnerabilities and tested them against Kestrel and our best practice code. We are unaware of any instances of the vulnerabilities affecting Kestrel at this time, but, as always we will keep a close eye on further developments.","Url":"https://github.com/aspnet/Announcements/issues/382","RelatedDescription":"Open issue \"Statement on Kestrel HTTP/2 implementation and CERT VU#605641\" (#382)"},{"Id":"480919982","IsPullRequest":false,"CreatedAt":"2019-08-14T22:40:58","Actor":"NTaylorMullen","Number":"381","RawContent":null,"Title":"[Blazor] Removing automatic backing field support for @ref in 3.0.0-preview9","State":"open","Body":"### What's happening\r\nIn ASP.NET Core 3.0 Preview 8 release we added a productivity feature in Blazor to automatically generate backing fields for elements that utilized the `@ref` attribute. Unfortunately, we missed a critical design flaw which prevents this from working end-to-end.\r\n\r\nTrying to invoke build on a project with a `Counter` component that looked like the following would result in a build error:\r\n```Razor\r\n<Counter @ref=\"myCounter\" />\r\n\r\n@code {\r\n    // This will not compile because there will be no backing field for myCounter\r\n    private readonly int _incrementingBy = myCounter.IncrementAmount;\r\n}\r\n```\r\n\r\nGiven that we're so close to a 3.0 release, we are going to cut this feature from 3.0. We will think about viable solutions to this in future releases, if we can find one, we may consider it then.\r\n\r\n### The problem deep dive\r\nTo summarize the problem effectively, I need to describe how the Razor compilation process works. It's a two-phase process:\r\n\r\n1. Discovery: All the components and directive attributes are discovered. Razor does this by generating a skeleton of each component file and then introspecting on their structure, we call these files declarations. Basically, any content in your Razor file that isn't a directive or inside of a directive block `@code` is thrown out to avoid compilation errors during this phase.\r\n2. Compiling: The actual Razor file compilation where it uses the inputs resolved in phase 1. This phase utilizes all of discovered components to properly parse HTML elements that look like components and uses all of the discovered directive attributes to properly parse those elements corresponding attributes that look like directive attributes.\r\n\r\nThe process is broken into two phases to enable Components to be written in Razor yet also impact other Razor files in the project. This is why you can write a `Counter.razor` file and still recursively use it in the same `Counter.razor` file.\r\n\r\nThe core problem is that during the `discovery` phase the Razor compiler has no awareness of the available components or directive attributes (it hasn't discovered them yet). This means, the `@ref` attribute and other component's existence is not available in this phase. This introduces a problem because a user may have written code in their `@code` block that references the supposed backing field generated from `@ref`; however, during discovery we didn't know about `@ref` so no backing field was generated. This results in Razor skeleton file that can't be compiled or introspected on (C# errors). We considered working around this limitation by hard coding `@ref` to not require the first phase but quickly found that would not work either because if a user writes `<Counter @ref=\"myCounter\" />` We need to generate a proper type name for the auto-generated backing field (`private Counter myCounter;`) which isn't reliably available because during the discovery phase we haven't yet discovered anything (it's not till phase 2 that we know of `Counter`).\r\n\r\n### Workaround\r\nIn 3.0.0-preview8 in order to utilize the `@ref` attribute you must do:\r\n\r\n```razor\r\n<button @ref=\"myButton\" @ref:suppressField />\r\n@code {\r\n    ElementReference myButton;\r\n}\r\n```\r\n\r\nOnce 3.0.0-preview9 and up ships you will be able to use the older syntax such as:\r\n\r\n```razor\r\n<button @ref=\"myButton\" />\r\n@code {\r\n    ElementReference myButton;\r\n}\r\n```","Url":"https://github.com/aspnet/Announcements/issues/381","RelatedDescription":"Open issue \"[Blazor] Removing automatic backing field support for @ref in 3.0.0-preview9\" (#381)"},{"Id":"480691511","IsPullRequest":false,"CreatedAt":"2019-08-14T13:51:16","Actor":"javiercn","Number":"380","RawContent":null,"Title":"Breaking change Identity UI uses the new static web assets","State":"open","Body":"In ASP.NET Core 3.0 we've moved Identity UI to use the new static web assets feature introduced in 3.0. As part of this move there are a few API breaking changes to note.\r\n\r\nBootstrap4 is the default UI framework for Identity UI. (Bootstrap 3 has reached end of life and you should consider migrating to a supported version).\r\n\r\nSelecting the framework is done by using the `IdentityUIFrameworkVersion` property in your project file.\r\n\r\nThe `AddIdentityUI` overload that takes a `UIFramework` parameter has been removed. If you are using Bootstrap4, simply call `AddIdentityUI()`. If you are using Bootstrap3, additionally add the following line to your project file inside a `PropertyGroup`.\r\n\r\n`<IdentityUIFrameworkVersion>Bootstrap3</IdentityUIFrameworkVersion>`\r\n\r\n[This announcement has been migrated to: dotnet/docs#14959]","Url":"https://github.com/aspnet/Announcements/issues/380","RelatedDescription":"Open issue \"Breaking change Identity UI uses the new static web assets\" (#380)"},{"Id":"477050682","IsPullRequest":false,"CreatedAt":"2019-08-05T20:46:09","Actor":"danroth27","Number":"379","RawContent":null,"Title":"Obsoleting Microsoft.AspNetCore.SpaServices and Microsoft.AspNetCore.NodeServices","State":"open","Body":"ASP.NET Core supports integration with various single-page app (SPA) frameworks, including Angular, React, and React + Redux. Initially integration with these frameworks was accomplished with ASP.NET Core specific components that handled scenarios like server-side prerendering and integration with webpack. But as time went on, industry standards changed and the SPA frameworks each released their own standard command-line interfaces (e.g., Angular CLI, create-react-app).\r\n\r\nWhen ASP.NET Core 2.1 was released in May 2018, we responded to the change in standards by providing a newer and simpler way to integrate with the SPA frameworks' own toolchains. This new integration mechanism exists in the package `Microsoft.AspNetCore.SpaServices.Extensions` and remains the basis of our Angular and React project templates since ASP.NET Core 2.1.\r\n\r\nTo clarify that the older ASP.NET Core specific components are not relevant or recommended, we are now officially obsoleting the pre-2.1 integration mechanism and marking the supporting NPM packages as deprecated.\r\n\r\nThe contents of the following NuGet packages have all been unnecessary since ASP.NET Core 2.1, and so are now being marked as obsolete:\r\n\r\n- Microsoft.AspNetCore.SpaServices\r\n- Microsoft.AspNetCore.NodeServices\r\n\r\nFor the same reason, the following NPM modules are being marked as deprecated:\r\n\r\n- aspnet-angular\r\n- aspnet-prerendering\r\n- aspnet-webpack\r\n- aspnet-webpack-react\r\n- domain-task\r\n\r\nThese packages will later be removed in .NET 5. If you are using these packages, please update your apps to use the functionality in Microsoft.AspNetCore.SpaServices.Extensions instead along with the functionality provided by the SPA frameworks you are using. To enable features like server-side prerendering and hot module reload please refer to the documentation for the corresponding SPA frameworks. The functionality in Microsoft.AspNetCore.SpaServices.Extensions is *not* obsolete and will continue to be supported.\r\n\r\nDiscussion for this issue is at aspnet/aspnetcore#12890\r\n\r\n*This announcement has been migrated to dotnet/docs#14958*","Url":"https://github.com/aspnet/Announcements/issues/379","RelatedDescription":"Open issue \"Obsoleting Microsoft.AspNetCore.SpaServices and Microsoft.AspNetCore.NodeServices\" (#379)"},{"Id":"474679821","IsPullRequest":false,"CreatedAt":"2019-07-30T16:19:27","Actor":"anurse","Number":"378","RawContent":null,"Title":"ASP.NET Core master branches have switched to \"5.0\"","State":"open","Body":"**This announcement is for contributors to ASP.NET Core repositories. Users should not be affected. Preview builds of 3.0 continue to be available at https://dotnet.microsoft.com/download/dotnet-core/3.0 . There are no preview builds of 5.0 at this time**\r\n\r\nVarious ASP.NET Core repos have switched their master branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. We will evaluate incoming work and make individual decisions on whether to back-port the work to 3.1. The version number being used is `5.0.0-alpha1`. This does not indicate a specific name or timeline for the initial preview release, it’s just a pre-release tag that allows us the flexibility to change the version as necessary. The [.NET Core Roadmap](https://github.com/dotnet/core/blob/master/roadmap.md) is the authoritative source for committed release schedules. \r\n\r\nAt present, this change is only relevant if you contribute to ASP.NET Core repositories. Otherwise, we recommend that you wait for the official 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at: aspnet/AspNetCore#12732\r\n\r\n## Details\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore)\r\n* [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* [aspnet/Blazor](https://github.com/aspnet/Blazor)\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [aspnet/Extensions](https://github.com/aspnet/Extensions)\r\n\r\nIn addition, the [aspnet/EntityFramework6](https://github.com/aspnet/EntityFramework6) repository has changed version numbers to 6.4 to reflect a version after the 6.3 release in progress. Again, there is no specific timeline or committment for this release.\r\n\r\nVersion numbers may still change during the development cycle for 5.0. This change is being done to reflect the current plans. \r\n\r\nIn large part, we switched master to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 release progresses towards the final build, we're increasing scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nAt present, there is no SDK or developer experience for 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. Look for a follow-up announcement when this experience is available.\r\n\r\n## Which branch has what?\r\n\r\nHere's a brief table listing the branches and the releases they are targeting:\r\n\r\n| Repository | 3.0 | 5.0 |\r\n| - | - | - |\r\n| [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) | [`release/3.0`](https://github.com/aspnet/AspNetCore/tree/release/3.0) | [`master`](https://github.com/aspnet/AspNetCore/tree/master) |\r\n| [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling) |[`release/3.0`](https://github.com/aspnet/AspNetCore-Tooling/tree/release/3.0) | [`master`](https://github.com/aspnet/AspNetCore-Tooling/tree/master) |\r\n| [aspnet/Blazor](https://github.com/aspnet/Blazor) | [`release/3.0`](https://github.com/aspnet/Blazor/tree/release/3.0) | [`master`](https://github.com/aspnet/Blazor/tree/master) |\r\n| [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) |[`release/3.0`](https://github.com/aspnet/EntityFrameworkCore/tree/release/3.0) | [`master`](https://github.com/aspnet/EntityFrameworkCore/tree/master) |\r\n| [aspnet/Extensions](https://github.com/aspnet/Extensions) | [`release/3.0`](https://github.com/aspnet/Extensions/tree/release/3.0) | [`master`](https://github.com/aspnet/Extensions/tree/master) |\r\n\r\nChanges for the 3.1 LTS release (planned for [November 2019](https://github.com/dotnet/core/blob/master/roadmap.md)) will be picked from changes made in 5.0 (master). The team will evaluate changes against customer impact to make these decisions.\r\n\r\nFor Entity Framework 6 development:\r\n\r\n| Repository | 6.3 | 6.4 |\r\n| - | - | - |\r\n| [aspnet/EntityFramework6](https://github.com/aspnet/EntityFramework6) | [`release/6.3`](https://github.com/aspnet/EntityFramework6/tree/release/6.3) | [`master`](https://github.com/aspnet/EntityFramework6/tree/master) |\r\n","Url":"https://github.com/aspnet/Announcements/issues/378","RelatedDescription":"Open issue \"ASP.NET Core master branches have switched to \"5.0\"\" (#378)"},{"Id":"473651882","IsPullRequest":false,"CreatedAt":"2019-07-27T15:59:32","Actor":"davidfowl","Number":"377","RawContent":null,"Title":"Pubternal APIs have been removed","State":"open","Body":"In order to better maintain the public API surface of ASP.NET Core, we've moved a large majority of the types in the *.Internal namespace to be truly internal. Members in these namespaces were always in a gray area. They were never meant to be supported as public APIs and could break in minor releases (and often did). We've moved away from pubternal for a large majority of APIs (they are still a few edge cases) an as a result, code that used to depend on these APIs will be broken when moving to 3.0.\r\n\r\nSee these issues for more details: \r\n\r\n- https://github.com/aspnet/AspNetCore/issues/4932\r\n- https://github.com/aspnet/AspNetCore/issues/11312.\r\n\r\n[This announcement has been  migrated to: dotnet/docs#14708]","Url":"https://github.com/aspnet/Announcements/issues/377","RelatedDescription":"Open issue \"Pubternal APIs have been removed\" (#377)"},{"Id":"473558588","IsPullRequest":false,"CreatedAt":"2019-07-26T22:32:45","Actor":"Tratcher","Number":"376","RawContent":null,"Title":"HttpResponse body infrastructure changes","State":"open","Body":"TLDR: The infrastructure backing HttpResponse bodies has changed. If you're using HttpResponse directly you should not need to make any code changes. Read further if you were wrapping or replacing HttpResponse.Body or accessing HttpContext.Features.\r\n\r\nVersion: 3.0.0-preview8\r\n\r\nBackground:\r\nHttpContext, HttpRequest, HttpResponse are backed by an abstraction called [Features](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/request-features?view=aspnetcore-2.2). This allows functionality to be provided by different components in the pipeline without wrapping the entire HttpContext.\r\n\r\nIn 2.x there are three APIs associated with the response body: IHttpResponseFeature.Body, IHttpSendFileFeature.SendFileAsync, and IHttpBufferingFeature.DisableResponseBuffering, but the later two were rarely implemented or used.\r\n\r\nOver the course of 3.0 several new response body APIs were added:\r\nIHttpResponseBodyPipeFeature\r\nIHttpResponseStartFeature.StartAsync\r\nIHttpResponseCompleteFeature.CompleteAsync\r\n\r\nProblem: With so many APIs it became too hard for middleware to properly intercept the response body. It was also hard for calling code to rely on those features being present on all servers.\r\n\r\nFix: Consolidate the response body APIs onto a single new feature interface [IHttpResponseBodyFeature](https://github.com/aspnet/AspNetCore/blob/4aebd29abca80242f5ff9e89e07d4f1b28788a44/src/Http/Http.Features/src/IHttpResponseBodyFeature.cs). HttpResponse has been updated accordingly, and each server has been updated to provide at least a minimal implementation for all of these APIs. We'll iterate to provide more fully featured implementations in each server but that won't require any more API changes.\r\n\r\nNote if you replace HttpResponse.Body it will now replace the entire IHttpResponseBodyFeature with a wrapper around your given stream using StreamResponseBodyFeature to provide default implementations for all of the expected APIs. Setting back the original stream will undo this change.\r\nhttps://github.com/aspnet/AspNetCore/blob/4aebd29abca80242f5ff9e89e07d4f1b28788a44/src/Http/Http/src/Internal/DefaultHttpResponse.cs#L67-L89\r\n\r\nBreaking change https://github.com/aspnet/AspNetCore/pull/12328\r\n\r\nObsolete existing 2.x APIs\r\nIHttpResponseFeature.Body\r\nIHttpSendFileFeature\r\nIHttpBufferingFeature\r\n\r\nDeleted feature interfaces that were introduced earlier in 3.0.\r\nIHttpResponseBodyPipeFeature\r\nIHttpResponseStartFeature\r\nIHttpResponseCompleteFeature\r\n\r\nIn a future major release we plan to refactor the request body features as well https://github.com/aspnet/AspNetCore/issues/12620.\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/12635 for discussion.\r\n\r\nThis announcement has been migrated to: dotnet/docs#14832","Url":"https://github.com/aspnet/Announcements/issues/376","RelatedDescription":"Open issue \"HttpResponse body infrastructure changes\" (#376)"},{"Id":"473077311","IsPullRequest":false,"CreatedAt":"2019-07-25T21:25:57","Actor":"HaoK","Number":"375","RawContent":null,"Title":"Breaking change in IAuthorizationPolicyProvider","State":"open","Body":"As part of https://github.com/aspnet/AspNetCore/pull/9759 we added a new method to `IAuthorizationPolicyProvider.GetFallbackPolicyAsync` which is the policy that will be used by the authorization middleware when no policy is specified.\r\n\r\nThis announcement has been migrated to: dotnet/docs#14834","Url":"https://github.com/aspnet/Announcements/issues/375","RelatedDescription":"Open issue \"Breaking change in IAuthorizationPolicyProvider\" (#375)"},{"Id":"472946568","IsPullRequest":false,"CreatedAt":"2019-07-25T15:58:23","Actor":"HaoK","Number":"374","RawContent":null,"Title":"Breaking change in SignInManager constructor (new parameter)","State":"open","Body":"As part of adding support for new email/confirmation flows in Identity(https://github.com/aspnet/AspNetCore/issues/8356), we added a new `IUserConfirmation<TUser>` argument to the constructor of `SignInManager`\r\n\r\nThis announcement has been migrated to: dotnet/docs#14828\r\n","Url":"https://github.com/aspnet/Announcements/issues/374","RelatedDescription":"Open issue \"Breaking change in SignInManager constructor (new parameter)\" (#374)"},{"Id":"465890178","IsPullRequest":false,"CreatedAt":"2019-07-09T17:01:09","Actor":"blowdart","Number":"373","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1075: ASP.NET Core Spoofing Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1075: ASP.NET Core Spoofing Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a spoofing vulnerability that exists in ASP.NET Core that could lead to an open redirect. An attacker who successfully exploited the vulnerability could redirect a targeted user to a malicious website.\r\n\r\nTo exploit the vulnerability, an attacker could send a link that has a specially crafted URL and convince the user to click the link.\r\n\r\nThe update addresses the vulnerability by correcting how ASP.NET Core parses URLs.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/AspNetCore/issues/12007\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses any of following vulnerable packages:\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.AspNetCore.Server.HttpSys | 2.1.0, 2.1.1<br/>2.2.0 | 2.1.12<br/>2.2.6\r\nMicrosoft.AspNetCore.Server.IIS  | 2.2.0, 2.2.1, 2.2.2 | 2.2.6\r\nMicrosoft.AspNetCore.All | 2.1.0 - 2.1.11<br/>2.2.0 - 2.2.5 | 2.1.12<br/>2.2.6\r\nMicrosoft.AspNetCore.App | 2.1.0 - 2.1.11<br/>2.2.0 - 2.2.5 | 2.1.12<br/>2.2.6\r\n\r\n## Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed, you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n* For machines running .NET 2.1 you should download Runtime 2.1.12 or SDK 2.1.508 for Visual Studio 2017 or SDK 2.1.605 for Visual Studio 2019 (v16.0) or SDK 2.1.701 for Visual Studio 2019 (v16.1) from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.6 or SDK 2.2.108 for Visual Studio 2017 or SDK 2.2.205 for Visual Studio 2019 (v16.0) or SDK 2.2.301 for Visual Studio 2019 (v16.1) from https://dotnet.microsoft.com/download/dotnet-core/2.2\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgements\r\n\r\nReported through Datalust\r\n\r\n### External Links\r\n\r\n[CVE-2019-1075](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1075)\r\n\r\n### Revisions\r\n\r\nV1.0 (July 9, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-07-09_\r\n","Url":"https://github.com/aspnet/Announcements/issues/373","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1075: ASP.NET Core Spoofing Vulnerability\" (#373)"},{"Id":"461299946","IsPullRequest":false,"CreatedAt":"2019-06-27T03:55:30","Actor":"anurse","Number":"372","RawContent":null,"Title":"SignalR JavaScript client changing package name to @microsoft/signalr","State":"open","Body":"In `3.0.0-preview7`, the SignalR JavaScript client will change from being `@aspnet/signalr` to `@microsoft/signalr`. We are doing this to reflect the fact that SignalR is useful in more than just ASP.NET Core applications, thanks to the Azure SignalR Service.\r\n\r\nTo react to this change, you will need to change your references in `package.json` files, `require` statements, and ECMAScript `import` statements. No API will change as part of this rename.\r\n\r\nPlease use https://github.com/aspnet/AspNetCore/issues/11637 for discussions on this change.\r\n\r\n[This announcement has been migrated to: dotnet/docs#14906]","Url":"https://github.com/aspnet/Announcements/issues/372","RelatedDescription":"Open issue \"SignalR JavaScript client changing package name to @microsoft/signalr\" (#372)"},{"Id":"459551013","IsPullRequest":false,"CreatedAt":"2019-06-23T08:36:59","Actor":"davidfowl","Number":"371","RawContent":null,"Title":"ConnectionAdapters have been removed from Kestrel","State":"open","Body":"As part of the move to move pubternal APIs to public, we've removed the concept of an `IConnectionAdapter` from Kestrel. Connection adapters are being replaced with connection middleware (very similar to http middleware in the ASP.NET Core pipeline but for lower level connections). HTTPS and Connection logging have been moved from connection adapters to connection middleware so those extension methods should continue to work seamlessly (but the guts have been re-implemented). See https://github.com/aspnet/AspNetCore/pull/11412 for more details.\r\n\r\nDiscuss this issue on https://github.com/aspnet/AspNetCore/issues/11475.\r\n\r\n[This announcement has been migrated to: dotnet/docs#14905]","Url":"https://github.com/aspnet/Announcements/issues/371","RelatedDescription":"Open issue \"ConnectionAdapters have been removed from Kestrel\" (#371)"},{"Id":"459401188","IsPullRequest":false,"CreatedAt":"2019-06-21T23:07:26","Actor":"anurse","Number":"370","RawContent":null,"Title":"Microsoft.Extensions.Caching.SqlServer is now using the new Microsoft.Data.SqlClient package","State":"open","Body":"The `Microsoft.Extensions.Caching.SqlServer` package will use the new [`Microsoft.Data.SqlClient`](https://www.nuget.org/packages/Microsoft.Data.SqlClient) package starting in `3.0.0-preview7`.\r\n\r\nThis is being done to help align the database providers across the .NET Core stack. EntityFramework already migrated to this new package in `3.0.0-preview6`. If your application currently uses `System.Data.SqlClient`, we recommend converting to the new package. It is generally a drop-in replacement (with some namespace changes).\r\n\r\n**Please note the following _temporary_ limitation**: The current version of `Microsoft.Data.SqlClient` does not support 32-bit applications running on .NET Framework. When running in this configuration, you will get `BadImageFormatException`s thrown at runtime when trying to load the library. This limitation does not apply to 64-bit applications on .NET Framework or *either* bitness on .NET Core. The support matrix is below:\r\n\r\n| Architecture | **.NET Framework** | **.NET Core** |\r\n| - | - | - |\r\n| **x64 (64-bit)** | _Works_ | _Works_ |\r\n| **x86 (32-bit)** | **`BadImageFormatException`** | _Works_ |\r\n\r\nThis is a **temporary** limitation and will be fixed in time for the 3.0 RTM release.\r\n\r\nPlease use https://github.com/aspnet/Extensions/issues/1876 as the discussion issue for this announcement.\r\n\r\nThis announcement has been migrated to: https://github.com/dotnet/docs/issues/14847","Url":"https://github.com/aspnet/Announcements/issues/370","RelatedDescription":"Open issue \"Microsoft.Extensions.Caching.SqlServer is now using the new Microsoft.Data.SqlClient package\" (#370)"},{"Id":"458928711","IsPullRequest":false,"CreatedAt":"2019-06-20T23:14:22","Actor":"BrennanConroy","Number":"369","RawContent":null,"Title":"SignalR HubConnectionContext constructors changing","State":"open","Body":"Prior to 3.0 `HubConnectionContext` had two constructors:\r\n\r\n```csharp\r\npublic HubConnectionContext(ConnectionContext connectionContext, TimeSpan keepAliveInterval, ILoggerFactory loggerFactory);\r\npublic HubConnectionContext(ConnectionContext connectionContext, TimeSpan keepAliveInterval, ILoggerFactory loggerFactory, TimeSpan clientTimeoutInterval);\r\n```\r\n\r\nIn 3.0 these 2 constructors have been removed and replaced them with a new one:\r\n```csharp\r\npublic HubConnectionContext(ConnectionContext connectionContext, HubConnectionContextOptions contextOptions, ILoggerFactory loggerFactory)\r\n```\r\n\r\nThis new constructor makes use of a new options object, so we can expand the features of `HubConnectionContext` in the future without making more constructors and breaking changes.\r\n\r\nUse aspnet/AspNetCore#11431 to discuss this.\r\n\r\nThis announcement has been migrated to: https://github.com/dotnet/docs/issues/14845","Url":"https://github.com/aspnet/Announcements/issues/369","RelatedDescription":"Open issue \"SignalR HubConnectionContext constructors changing\" (#369)"},{"Id":"454800040","IsPullRequest":false,"CreatedAt":"2019-06-11T16:53:14","Actor":"anurse","Number":"368","RawContent":null,"Title":"SignalR HandshakeProtocol.SuccessHandshakeData removed and replaced with helper method","State":"open","Body":"The [`HandshakeProtocol.SuccessHandshakeData`](https://github.com/aspnet/AspNetCore/blob/c5b2bc0df2a0027832bf7d01dfb19ca39cd08ae6/src/SignalR/common/SignalR.Common/src/Protocol/HandshakeProtocol.cs#L27) field was removed and replaced with a helper method that generates a successful handshake response given a specific `IHubProtocol`. This change was made because additional fields were added to the handshake _response_ that are non-constant and change depending on the selected protocol.\r\n\r\nThis type is not designed for use from user code, it is public so it can be shared between the SignalR server and client. It may also be used by customer SignalR clients written in .NET. **Users** of SignalR should not be affected by this change.\r\n\r\nUse https://github.com/aspnet/AspNetCore/issues/11098 to discuss this.\r\n\r\n[This announcement has been migrated to: dotnet/docs#14943]","Url":"https://github.com/aspnet/Announcements/issues/368","RelatedDescription":"Open issue \"SignalR HandshakeProtocol.SuccessHandshakeData removed and replaced with helper method\" (#368)"},{"Id":"454782204","IsPullRequest":false,"CreatedAt":"2019-06-11T16:13:43","Actor":"anurse","Number":"367","RawContent":null,"Title":"DebugLogger class made internal in ASP.NET Core 3.0","State":"open","Body":"The [`DebugLogger`](https://github.com/aspnet/Extensions/blob/28f85d7af4f2aef88939ad44a4852b8ebdbddb51/src/Logging/Logging.Debug/src/DebugLogger.cs) class was never intended to be constructed by user code. It is only constructed by the `DebugLoggerProvider` class. In 3.0 we are cleaning this up by making `DebugLogger` internal, to match with other logger implementations (such as `ConsoleLogger`, etc.).\r\n\r\nPlease use https://github.com/aspnet/Extensions/issues/1823 for discussions.\r\n\r\n[This announcement has been migrated to: dotnet/docs#14941]","Url":"https://github.com/aspnet/Announcements/issues/367","RelatedDescription":"Open issue \"DebugLogger class made internal in ASP.NET Core 3.0\" (#367)"},{"Id":"453603343","IsPullRequest":false,"CreatedAt":"2019-06-07T16:46:11","Actor":"Tratcher","Number":"366","RawContent":null,"Title":"OAuthHandler ExchangeCodeAsync signature change","State":"open","Body":"As part of https://github.com/aspnet/AspNetCore/pull/10928, a breaking change was introduced in 3.0.0-preview7 where the signature of OAuthHandler.ExchangeCodeAsync was changed from:\r\n```\r\nprotected virtual System.Threading.Tasks.Task<Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse> ExchangeCodeAsync(string code, string redirectUri) { throw null; }\r\n```\r\nTo:\r\n```\r\nprotected virtual System.Threading.Tasks.Task<Microsoft.AspNetCore.Authentication.OAuth.OAuthTokenResponse> ExchangeCodeAsync(Microsoft.AspNetCore.Authentication.OAuth.OAuthCodeExchangeContext context) { throw null; }\r\n```\r\n\r\nThis change was made in order to flow additional parameters.\r\n\r\nOAuth handlers that override this API will need to be updated.\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/10991 for discussion.\r\n\r\n[This announcement has been migrated to: dotnet/docs#14942]","Url":"https://github.com/aspnet/Announcements/issues/366","RelatedDescription":"Open issue \"OAuthHandler ExchangeCodeAsync signature change\" (#366)"},{"Id":"451701589","IsPullRequest":false,"CreatedAt":"2019-06-03T21:39:20","Actor":"pranavkm","Number":"364","RawContent":null,"Title":"Breaking changes to Microsoft.JSInterop ","State":"open","Body":"In 3.0-preview6, we're migrating Microsoft.JSInterop to use the System.Text.Json based serializer. As part of this transition, there are several breaking changes to the JSInterop library:\r\n\r\n* The helper type `Microsoft.JSInterop.Json` is being removed. Users may use a JSON serializer of their choice. We recommend using the `System.Text.Json`-based serializer since Blazor already references it. Here's the code change required to migrate to use `System.Text.Json`:\r\n\r\n```C#\r\n// Before\r\nstring value = Json.Serialize(...);\r\nMyPoco poco = Json.Deserialize<MyPoco>(\"...\");\r\n\r\n// After\r\nusing System.Text.Json.Serialization;\r\n...\r\n\r\nstring value = JsonSerializer.ToString(...);\r\nMyPoco poco = JsonSerializer.Parse<MyPoco>(\"...\");\r\n```\r\n\r\n* `DotNetObjectRef` is replaced by a generic `DotNetObjectRef<T>` that is required for both sending and receiving a managed object reference when doing interop with the browser\r\n    \r\n```C#\r\n// Before\r\nIJSRuntime.InvokeAsync(\"SomeJSMethod\", new DotNetObjectRef(someObject));\r\n\r\n[JSInvokable]\r\npublic static Task SomeDotNetMethod(MyObject myObject)\r\n{\r\n    ...\r\n}\r\n\r\n// After\r\nIJSRuntime.InvokeAsync(\"SomeMethod\", DotNetObjectRef.Create(someObject));\r\n\r\n[JSInvokable]\r\npublic static Task SomeDotNetMethod(DotNetObjectRef<MyObject> myObject)\r\n{\r\n    ...\r\n}\r\n```\r\n\r\n* Microsoft.JSInterop will use System.Text.Json to marshal interop data. To customize serialization, you may use serialization primitives such as `JsonPropertyNameAttribute`, `JsonIgnoreAttribute ` etc.\r\n\r\n* `IJSRuntime.UntrackObjectRef(DotNetObjectRef);` has been removed. To stop tracking an object reference, dispose the `DotNetObjectRef<T>` instance either on the server or the client.\r\n\r\nPlease use https://github.com/aspnet/AspNetCore/issues/10810 for further discussions.","Url":"https://github.com/aspnet/Announcements/issues/364","RelatedDescription":"Open issue \"Breaking changes to Microsoft.JSInterop \" (#364)"},{"Id":"451308302","IsPullRequest":false,"CreatedAt":"2019-06-03T06:11:51","Actor":"davidfowl","Number":"363","RawContent":null,"Title":"Kestrel's transport abstractions have been removed and made public instead of pubternal","State":"open","Body":"As part of moving away from pubternal APIs in we're in the process of exposing the Kestrel transport layer as a public interface in 3.0. Read more details here https://github.com/aspnet/AspNetCore/issues/10308. As part of this change:\r\n\r\n- **Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions** has been removed (and all associated types)\r\n- `NoDelay` was remove from `ListenOptions` (and move to the transport options)\r\n- `SchedulingMode` was removed from `KestrelServerOptions`\r\n\r\n[This announcement has been migrated to: dotnet/docs#14881]","Url":"https://github.com/aspnet/Announcements/issues/363","RelatedDescription":"Open issue \"Kestrel's transport abstractions have been removed and made public instead of pubternal\" (#363)"},{"Id":"451301655","IsPullRequest":false,"CreatedAt":"2019-06-03T05:44:23","Actor":"BrennanConroy","Number":"362","RawContent":null,"Title":"UseSignalR and UseConnections are marked obsolete","State":"open","Body":"The methods `UseConnections` and `UseSignalR`, and the classes `ConnectionsRouteBuilder` and `HubRouteBuilder` are being marked obsolete in 3.0. And will be removed in the next major release after that.\r\n\r\nThe preferred method for using SignalR starting in 3.0 is to use Endpoint Routing. See example below.\r\n\r\nOld code:\r\n```csharp\r\napp.UseSignalR(routes =>\r\n{\r\n    routes.MapHub<SomeHub>(\"/path\");\r\n});\r\n```\r\n\r\nNew code:\r\n```csharp\r\napp.UseEndpoints(endpoints =>\r\n{\r\n    endpoints.MapHub<SomeHub>(\"/path\");\r\n});\r\n```\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/10754 for discussion.\r\n\r\n*This announcement has been migrated to https://github.com/dotnet/docs/issues/14928*","Url":"https://github.com/aspnet/Announcements/issues/362","RelatedDescription":"Open issue \"UseSignalR and UseConnections are marked obsolete\" (#362)"},{"Id":"451034262","IsPullRequest":false,"CreatedAt":"2019-06-01T02:24:00","Actor":"HaoK","Number":"361","RawContent":null,"Title":"SignInAsync will throw by default when given an unauthenticated identity ","State":"open","Body":"Historically, `SignInAsync` would accept any principals/identities, this included identities where `IsAuthenticated = false`. This was problematic because by default these principals would get rejected by `[Authorize]`/`RequireAuthenticatedUser()`.\r\n\r\nThere is a new flag on `AuthenticationOptions` called `RequireAuthenticatedSignIn` which is true by default as of 3.0-preview6, you can turn this off if you require the old behavior.\r\n\r\nFor more context see: https://github.com/aspnet/AspNetCore/issues/9255\r\n\r\n*This announcement has been migrated to https://github.com/dotnet/docs/issues/14929*","Url":"https://github.com/aspnet/Announcements/issues/361","RelatedDescription":"Open issue \"SignInAsync will throw by default when given an unauthenticated identity \" (#361)"},{"Id":"448250666","IsPullRequest":false,"CreatedAt":"2019-05-24T16:17:01","Actor":"Tratcher","Number":"360","RawContent":null,"Title":"Kestrel Request trailer headers moved to new collection","State":"open","Body":"In prior versions Kestrel would add HTTP/1.1 chunked trailer headers into the request headers collection when the request body was read to the end. This caused some concerns about ambiguity between headers and trailers so we decided to separate the trailers out to a new collection.\r\n\r\nHTTP/2 request trailers were unavailable in 2.2, but are now also available in this new collection in 3.0.0-preview6.\r\n\r\nNew [request extension methods](https://github.com/aspnet/AspNetCore/blob/3be11f6544485948ba17646ffa7b4242c2c5339a/src/Http/Http.Abstractions/src/Extensions/RequestTrailerExtensions.cs) have been added to access these trailers.\r\n\r\nHTTP/1.1 trailers are available once the entire request body has been read.\r\n\r\nHTTP/2 trailers are available as soon as they’re received from the client, but the client won’t send them until the entire request body has been at least buffered by the server.  You may need to read the request body to free up buffer space. Trailers will always be available if you read the request body to the end, as the trailers mark the end of the body.\r\n\r\nSee https://github.com/aspnet/AspNetCore/pull/10410 for the changes.\r\n\r\nSee https://github.com/aspnet/AspNetCore/issues/10519 for discussion.\r\n\r\n[This announcement has been migrated to: dotnet/docs#14960]","Url":"https://github.com/aspnet/Announcements/issues/360","RelatedDescription":"Open issue \"Kestrel Request trailer headers moved to new collection\" (#360)"},{"Id":"444025246","IsPullRequest":false,"CreatedAt":"2019-05-14T17:00:32","Actor":"blowdart","Number":"359","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0982: ASP.NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0982: ASP.NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in ASP.NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability exists when ASP.NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an ASP.NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to the ASP.NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how the ASP.NET Core web application handles web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/aspnet/AspNetCore/issues/10238\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny ASP.NET Core based application that uses any of following vulnerable packages:\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.AspNetCore.SignalR.Protocols.MessagePack | 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4<br/>1.1.0 | 1.0.11<br/>1.1.5\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are also available separately as a NuGet package. If you are not using `Microsoft.AspNetCore.SignalR.Protocols.MessagePack` directly you may still be affected if you are using SignalR and the package is a transitive dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SignalR.Protocols.MessagePack\" Version=\"1.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SignalR.Protocols.MessagePack\" Version=\"1.0.11\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.SignalR.Protocols.MessagePack\" Version=\"1.0.11\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0892](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0982)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_\r\n","Url":"https://github.com/aspnet/Announcements/issues/359","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0982: ASP.NET Core Denial of Service Vulnerability\" (#359)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1181313000302448640","CreatedAt":"2019-10-07T20:59:01+00:00","UserScreenname":"aspnet","Text":"We've got a great #ASPNET Community Standup planned for this week: \nRunning the .NET Website on… https://t.co/ge5vHt3nnj","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":17,"FavoriteCount":10,"RawContent":null},{"Id":"1179079540498239488","CreatedAt":"2019-10-01T17:04:03+00:00","UserScreenname":"aspnet","Text":"Starting soon... come join us at https://t.co/ZpgIufpi9U! https://t.co/NGrtBzefKA","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":2,"RawContent":null},{"Id":"1178814205337583619","CreatedAt":"2019-09-30T23:29:42+00:00","UserScreenname":"aspnet","Text":"Join us for this week's #ASPNET Community Standup: New .NET Videos with @oliagavrysh and @shanselman \n\nTuesday | 10… https://t.co/sPZduhoGl4","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":14,"RawContent":null},{"Id":"1174003673019498497","CreatedAt":"2019-09-17T16:54:22+00:00","UserScreenname":"aspnet","Text":"Starting soon! Come see the latest on @IdentityServer + @aspnet Core 3.0 from @leastprivilege, @BrockLAllen &amp;  + Ja… https://t.co/VElZjnbvAX","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":9,"RawContent":null},{"Id":"1173720918482280448","CreatedAt":"2019-09-16T22:10:48+00:00","UserScreenname":"aspnet","Text":"Get ready for this week's #ASPNET Community Standup this Tuesday at 10 AM Pacific / 17 UTC\n\n🚀IdentityServer with… https://t.co/9kfWB3s9ZW","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":25,"FavoriteCount":15,"RawContent":null},{"Id":"1173683381646684161","CreatedAt":"2019-09-16T19:41:38+00:00","UserScreenname":"aspnet","Text":"https://t.co/eFOzgs22K8 Core and Blazor updates in .NET Core 3.0 Release Candidate 1\n\nhttps://t.co/3hnNbiZCIF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":131,"FavoriteCount":82,"RawContent":null},{"Id":"1171554134459211776","CreatedAt":"2019-09-10T22:40:46+00:00","UserScreenname":"aspnet","Text":"Starting soon!\n\nCommunity Standup: \n\nJoin us for the #ASPNET Community Standup - 5th Anniversary Show featuring… https://t.co/3Lyz39ciha","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":8,"RawContent":null},{"Id":"1171165028155715584","CreatedAt":"2019-09-09T20:54:36+00:00","UserScreenname":"aspnet","Text":"Don't miss this week's #AspNet Community Standup: \n\n5th Anniversary Show featuring @shanselman @DamianEdwards\nand… https://t.co/6pZjG4JSLV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":29,"FavoriteCount":19,"RawContent":null},{"Id":"1169333933776998401","CreatedAt":"2019-09-04T19:38:29+00:00","UserScreenname":"aspnet","Text":"Announcing .NET Core 3.0 Preview 9\n\nhttps://t.co/LWhIbpfJ7g","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":153,"FavoriteCount":94,"RawContent":null},{"Id":"1169333861542694912","CreatedAt":"2019-09-04T19:38:12+00:00","UserScreenname":"aspnet","Text":"Announcing #ASP.NET Core and Blazor updates in .NET Core 3.0 Preview 9\n\nhttps://t.co/dsDn78TFKU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":54,"FavoriteCount":29,"RawContent":null},{"Id":"1168911192187965445","CreatedAt":"2019-09-03T15:38:40+00:00","UserScreenname":"aspnet","Text":"No #ASPNET Community Standup this week... but heads up that next week's show is our 5 Year Anniversary party show!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":6,"RawContent":null},{"Id":"1166480335577550848","CreatedAt":"2019-08-27T22:39:18+00:00","UserScreenname":"aspnet","Text":"Starting in a few minutes... join us!\n\nhttps://t.co/4Ioo9jNSN2 or https://t.co/8NwJfWTQW7 https://t.co/qRyWUA6z1O","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":6,"RawContent":null},{"Id":"1166114800864133120","CreatedAt":"2019-08-26T22:26:48+00:00","UserScreenname":"aspnet","Text":"Get ready for some HttpRepl fun on this week's #AspNet Community Standup with @tlmii!\n\nTuesday Aug 27 | 3:45 PM Pac… https://t.co/8yFVu61TOg","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":17,"FavoriteCount":7,"RawContent":null}]}},"RunOn":"2019-10-08T05:30:16.6997879Z","RunDurationInMilliseconds":3502}