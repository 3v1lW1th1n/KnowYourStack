{"Data":{"GitHub":{"Issues":[{"Id":"554488936","IsPullRequest":false,"CreatedAt":"2020-01-24T00:45:42","Actor":"paul1956","Number":"2760","RawContent":null,"Title":"Discussion/proposal: Add support to ProgressBar to display Text  AND Bars","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nIn Framework there any may questions about adding Text over the progress bar some can be found here https://www.bing.com/search?q=vb.net+progressbar+with+text&form=ANNNB1&refig=5a465b1ab56d4a68c2a248e29778a674&sp=2&qs=RI&pq=vb.net+progressbar+text&sk=PRES1SC1&sc=2-23&cvid=5a465b1ab56d4a68c2a248e29778a674 and they involve adding a few lines of code, while the solution works it is very hard to read and very repetitive to have every developer repeat the solution.\r\n\r\n**Describe the solution you'd like**\r\nA Text Option that displays either user provided text or localized \"x of Y\" automatically on top of the Continuous bar that is updated at a rate that allows it to be read (if possible).\r\n\r\n**Describe alternatives you've considered**\r\nEvery user doing it themselves using something like\r\n```VB\r\npb.Invalidate() ' Something frequently left out of online examples\r\nUsing g As Graphics = pb.ProgressBar.CreateGraphics()\r\n    'Switch to Anti-aliased drawing for better (smoother) graphic results\r\n    g.PixelOffsetMode = PixelOffsetMode.HighQuality\r\n    g.SmoothingMode = SmoothingMode.AntiAlias\r\n    g.DrawString(Text, _defaultFont, Brushes.Black, New PointF(pb.Width \\ 2 - (g.MeasureString(Text, _defaultFont).Width / 2.0F), pb.Height \\ 2 - (g.MeasureString(Text, _defaultFont).Height / 2.0F)))\r\nEnd Using\r\n```\r\n**Will this feature affect UI controls?**\r\n    Yes\r\n\r\nIf yes, please describe the following:\r\n- Will VS Designer need to support the feature?  Simplest solution is and additional Option for System.Windows.Forms.ProgressBarStyle (TextOverlay) and possibly any text properties if the developer can set the message. \r\n- What impact will it have on accessibility?If AccessibleDescription already works automatically it would not have an impact. If it requires developer to constantly change it on every increment then this might be where to get the text to display.\r\n- Will this feature need to be localized or be localizable? If the string is \"x of Y\" yes, if it is provided the user will need to deal with that. The text should be centered so Right to Left shouldn't matter.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2760","RelatedDescription":"Open issue \"Discussion/proposal: Add support to ProgressBar to display Text  AND Bars\" (#2760)"},{"Id":"552872533","IsPullRequest":true,"CreatedAt":"2020-01-23T22:42:26","Actor":"hughbe","Number":"2747","RawContent":null,"Title":"Remove Interop.WindowMessages","State":"closed","Body":"## Proposed Changes\r\n- Remove Interop.WindowMessages in favor of User32.WM\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2747)","Url":"https://github.com/dotnet/winforms/pull/2747","RelatedDescription":"Closed or merged PR \"Remove Interop.WindowMessages\" (#2747)"},{"Id":"554331820","IsPullRequest":false,"CreatedAt":"2020-01-23T18:35:37","Actor":"hughbe","Number":"2759","RawContent":null,"Title":"MessageDecoder.MsgToString is missing several values defined in `WM_`","State":"open","Body":"Should be a 1-1 mapping.","Url":"https://github.com/dotnet/winforms/issues/2759","RelatedDescription":"Open issue \"MessageDecoder.MsgToString is missing several values defined in `WM_`\" (#2759)"},{"Id":"554272283","IsPullRequest":true,"CreatedAt":"2020-01-23T16:38:04","Actor":"M-Lipin","Number":"2758","RawContent":null,"Title":"Fixing issue 2704: Cannot find the RichEdit control of the \"Text\" property in UIA structure of a PropertyGrid control","State":"open","Body":"Adding PropertyGrid DropDown control holder and its child edit control to the UIA hierarchy of the PropertyGrid.\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2704 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Adding accessible object for PropertyGrid's DropDownControlHolder;\r\n- Implementing accessible navigation to find DropDownControlHolder pane and its child edit control in UIA hierarchy in PropertyGrid.\r\n- Adding resource to announce DropDownControlHolder pane accessible name to inform users that the currently edited RichEdit control or another edit control is hosted in PropertyGrid's DropDown control holder.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers will be able to distinguish the dropped down control from another form controls if using Narrator or another screen reader.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/23213980/73003863-605b7d80-3e17-11ea-92af-f66d92fec2a1.png)\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n![image](https://user-images.githubusercontent.com/23213980/73004026-ae708100-3e17-11ea-845d-448e48585d7d.png)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing;\r\n- Unit tests (to be implemented);\r\n- UI tests.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   5.0.100-alpha1-015763\r\n Commit:    0d0c902b77\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-015763\\\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2758)","Url":"https://github.com/dotnet/winforms/pull/2758","RelatedDescription":"Open PR \"Fixing issue 2704: Cannot find the RichEdit control of the \"Text\" property in UIA structure of a PropertyGrid control\" (#2758)"},{"Id":"554142899","IsPullRequest":true,"CreatedAt":"2020-01-23T13:16:52","Actor":"dotnet-maestro[bot]","Number":"2757","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200122.3\r\n- **Date Produced**: 1/22/2020 10:48 PM\r\n- **Commit**: 0fb5c992a80a6fb52bfb1d2b726f75157c1ce210\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20072.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20072.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20072.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20072.3\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20072.3\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2757)","Url":"https://github.com/dotnet/winforms/pull/2757","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2757)"},{"Id":"554137991","IsPullRequest":true,"CreatedAt":"2020-01-23T12:51:28","Actor":"Logerfo","Number":"2756","RawContent":null,"Title":"Enabling nrt for several safe files","State":"open","Body":"Work for #1107.\r\nRefers to #2702.\r\n\r\n## Proposed changes\r\n- Removed `#nullable disable` from some (not sure if all) safe (which wouldn't imply in API changes) files. These files have no warnings and no public reference members. They are mostly enum or simple event args files.\r\n\r\n## Customer Impact\r\n\r\n- None\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None.\r\n\r\n## Test methodology\r\n\r\n- API diff must be empty\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2756)","Url":"https://github.com/dotnet/winforms/pull/2756","RelatedDescription":"Open PR \"Enabling nrt for several safe files\" (#2756)"},{"Id":"553920019","IsPullRequest":true,"CreatedAt":"2020-01-23T03:59:24","Actor":"MaherJendoubi","Number":"2755","RawContent":null,"Title":"Misc misspellings","State":"closed","Body":"just fixed some misspellings.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2755)","Url":"https://github.com/dotnet/winforms/pull/2755","RelatedDescription":"Closed or merged PR \"Misc misspellings\" (#2755)"},{"Id":"553612188","IsPullRequest":true,"CreatedAt":"2020-01-22T15:22:03","Actor":"hughbe","Number":"2754","RawContent":null,"Title":"Add more ScrollBar tests","State":"open","Body":"## Proposed Changes\r\n- Add more ScrollBar tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2754)","Url":"https://github.com/dotnet/winforms/pull/2754","RelatedDescription":"Open PR \"Add more ScrollBar tests\" (#2754)"},{"Id":"553593037","IsPullRequest":true,"CreatedAt":"2020-01-22T14:53:08","Actor":"gpetrou","Number":"2753","RawContent":null,"Title":"Add SendDlgItemMessageW and COLOR enum to Interop User32","State":"open","Body":"## Proposed changes\r\n\r\n- Add SendDlgItemMessageW and COLOR enum to Interop User32.\r\n- Remove SendDlgItemMessage from UnsafeNativeMethods.cs\r\n- Remove COLOR constants and replace their usage with the above enum values.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2753)","Url":"https://github.com/dotnet/winforms/pull/2753","RelatedDescription":"Open PR \"Add SendDlgItemMessageW and COLOR enum to Interop User32\" (#2753)"},{"Id":"553526593","IsPullRequest":true,"CreatedAt":"2020-01-22T13:17:12","Actor":"dotnet-maestro[bot]","Number":"2752","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200121.3\r\n- **Date Produced**: 1/21/2020 8:28 PM\r\n- **Commit**: e06e2807048b6bc7b3549b401a1833bed3bcd8c3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20071.3\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20071.3\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2752)","Url":"https://github.com/dotnet/winforms/pull/2752","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2752)"},{"Id":"552710815","IsPullRequest":false,"CreatedAt":"2020-01-22T04:53:48","Actor":"bairog","Number":"2746","RawContent":null,"Title":"WindowsForms support to .vcxproj","State":"closed","Body":"I'm trying to port my C++/CLI project from .NET Framework 4.8 to .Net Core 3.1.\r\nBut compiler (latest Visual Studio 2019 16.4.3) doesn't see `System::Windows::Forms` namespace.\r\nAdding the following line changes nothing:\r\n`<UseWindowsForms>true</UseWindowsForms>`\r\nI also couldn't find any reference or tutorial explaing how to add WindowsForms support to .vcxproj.","Url":"https://github.com/dotnet/winforms/issues/2746","RelatedDescription":"Closed issue \"WindowsForms support to .vcxproj\" (#2746)"},{"Id":"552645894","IsPullRequest":true,"CreatedAt":"2020-01-22T00:09:09","Actor":"RussKie","Number":"2745","RawContent":null,"Title":"Generate transport package manifest","State":"closed","Body":"\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n## Proposed changes\r\n\r\n(Re)generate the list of transport assemblies by inspecting Microsoft.Private.Winforms nuspec.\r\nThis will reduce manual efforts in keeping x-repo synchronisations (e.g. dotnet/windowsdesktop#365)\r\n\r\nResolves dotnet/windowsdesktop#412\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2745)","Url":"https://github.com/dotnet/winforms/pull/2745","RelatedDescription":"Closed or merged PR \"Generate transport package manifest\" (#2745)"},{"Id":"553196084","IsPullRequest":true,"CreatedAt":"2020-01-22T00:08:02","Actor":"MaherJendoubi","Number":"2751","RawContent":null,"Title":"Contributing: fixed some typos","State":"closed","Body":"just fixed some typos\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2751)","Url":"https://github.com/dotnet/winforms/pull/2751","RelatedDescription":"Closed or merged PR \"Contributing: fixed some typos\" (#2751)"},{"Id":"553061788","IsPullRequest":false,"CreatedAt":"2020-01-21T18:49:15","Actor":"weltkante","Number":"2750","RawContent":null,"Title":"Collection `Remove` methods are sometimes missing ownership checks.","State":"open","Body":"* .NET Core Version: master\r\n* Have you experienced this same bug with .NET Framework?: didn't check but probably has the same bugs\r\n\r\n**Problem description:**\r\nSome custom `IList` implementations don't check in their `Remove` implementations whether the removed object is actually part of the list. They just go ahead and start disconnecting the object passed as argument, even if it belongs to a different container. The object will probably end up in a partially disconnected state without its actual owner being notified.\r\n\r\nThis was discovered while trying to implement generic `IList<T>` on those collections, where `Remove` is required to report success. It is immediately noticeable if a method doesn't have a branch that returns false (#2644 and #2749)\r\n\r\n**Expected behavior:**\r\n`Remove` methods should check if the object to be removed is actually part of the collection before they start disconnecting the object.\r\n\r\n**Minimal repro:**\r\ndiscovered on following types via code review while implementing generic `Remove` for generic `IList<T>`:\r\n* [ListViewGroupCollection](https://source.dot.net/#System.Windows.Forms/System/Windows/Forms/ListViewGroupCollection.cs,295)\r\n* [TableLayoutStyleCollection](https://source.dot.net/#System.Windows.Forms/System/Windows/Forms/TableLayoutStyleCollection.cs,90)\r\n* [ToolStripItemCollection](https://source.dot.net/#System.Windows.Forms/System/Windows/Forms/ToolStripItemCollection.cs,441)\r\n\r\nThere might be more, will do a more thorough review later while working on the generic IList implementation, just want to document the bugs for now.","Url":"https://github.com/dotnet/winforms/issues/2750","RelatedDescription":"Open issue \"Collection `Remove` methods are sometimes missing ownership checks.\" (#2750)"},{"Id":"553053749","IsPullRequest":true,"CreatedAt":"2020-01-21T18:31:36","Actor":"weltkante","Number":"2749","RawContent":null,"Title":"WIP: implement generic IList interface","State":"open","Body":"Contributes to #2644\r\n\r\nThis is a WIP PR for exploring the impact #2644 may have and whether its worth taking the breaking change.\r\n\r\nThis PR contains adding `IList<T>` interface implementation to types currently implementing `IList`. I thought it'd be a good way to start the work. If you want me to split down further in either multiple commits or separate PRs I don't mind, I fully expect having to go through the full changes several times anyways. On that note, if you have nits don't bother reviewing/annotating all of them, just pick one representative for discussion.\r\n\r\nNotes:\r\n- As far as placement of new code goes I tried to orient myself on the corresponding `IList` methods (where available), this makes for weird placement since not all `IList<T>` methods are together, but considering I don't really want to reorder the existing methods (unless asked to) I figured it'd be the best solution to minimize diffs for now.\r\n- There are plenty of odd design decisions in the original collections subclassing hierarchy which makes updating them harder.\r\n- Some subclass hierarchies could profit from adding generics to their signatures. Of course this is a highly breaking change.\r\n- Some classes expose a backing collection (usually of type `ArrayList`) to their subclasses. Should we break subclasses by changing the type of the backing list to a generic collection? Nullability annotations would profit from such a change.\r\n- Existing `Remove` implementations don't tell the caller whether they removed something, but `IList<T>` requires this in its API. I've updated them where it looked sensible but some `Remove` implementations are virtual and changing return type to `bool` would require updating subclasses. I opted to not do this in this PR before discussing this point, instead for now I did  implement `IList<T>.Remove` as explicit interface with a weird workaround. That is just placeholder until it is clear what is desired.\r\n    - Should we require updating subclasses and change the return type?\r\n    - If not, how much do we want to assume about how the subclass behaves? (This decides how weird/complicated the explicit interface implementation has to be.)\r\n- There are bugs in some existing collection classes where they don't check in `Remove` implementations whether the item to be removed is actually part of the collection. They run logic which severs the item and partially disconnects it from its true owner, but without notifying that owner. I did not fix these bugs yet (some are marked with comments though), I'm going to create a separate issue for this problem (so it doesn't have to wait for this issue/PR, which probably will take a while to dicscuss and resolve all points).\r\n- xunit apparently doesn't support non-generic lists, so when you start implementing the generic list interface all kinds of collection-tests stop compiling because some analyzer wants you to use `Assert.Contains` or `Assert.DoesNotContain`. Minor inconvenience which is easily fixed.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2749)","Url":"https://github.com/dotnet/winforms/pull/2749","RelatedDescription":"Open PR \"WIP: implement generic IList interface\" (#2749)"},{"Id":"553001823","IsPullRequest":false,"CreatedAt":"2020-01-21T16:50:52","Actor":"poutine70","Number":"2748","RawContent":null,"Title":"PropertyGrid: Enum Property with DefaultValueAttribute for Vb.Net Classes are readonly","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n3.1.101\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\n\"Enum Type Read/Write Properties\" of a class defined in Vb.Net with a DefaultValueAttribute are render \"Readonly\" (ghosted/can't be modified) in a property grid. Without the DefaultValueAttribute, the property grid behaves normally. The property grid works correctly if the class if defined in C#.\r\n\r\n\r\n**Expected behavior:**\r\nProperty Grid should show the property as Read/Write regardless of the presence of DefaultValueAttribute or the language used to define the class owning the property.\r\n\r\n**Minimal repro:**\r\nSee attached VisualStudio 2019 Solution\r\n\r\n![image](https://user-images.githubusercontent.com/12993055/72824780-ddce9480-3c43-11ea-868a-9bfbfa4afd67.png)\r\n[TestCase.zip](https://github.com/dotnet/winforms/files/4092286/TestCase.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/2748","RelatedDescription":"Open issue \"PropertyGrid: Enum Property with DefaultValueAttribute for Vb.Net Classes are readonly\" (#2748)"},{"Id":"551998884","IsPullRequest":true,"CreatedAt":"2020-01-20T22:27:56","Actor":"hughbe","Number":"2744","RawContent":null,"Title":"Rename WindowMessage to WM","State":"closed","Body":"## Proposed Changes\r\n- Since this now only contains `WM_` messages\r\n\r\nNext step to combine `WM` and the `WindowMessage.cs` file\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2744)","Url":"https://github.com/dotnet/winforms/pull/2744","RelatedDescription":"Closed or merged PR \"Rename WindowMessage to WM\" (#2744)"},{"Id":"551208564","IsPullRequest":true,"CreatedAt":"2020-01-20T04:27:30","Actor":"RussKie","Number":"2731","RawContent":null,"Title":"Add Microsoft.CodeAnalysis.PublicApiAnalyzers","State":"closed","Body":"- Copy v3.0 public API surface reports as baseline\r\n- Capture the surface of public API\r\n- Mark new API as shipped\r\n\r\nRelates to #2705\r\nRelates to #2112\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- None, capturing the shipped public API surface only.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2731)","Url":"https://github.com/dotnet/winforms/pull/2731","RelatedDescription":"Closed or merged PR \"Add Microsoft.CodeAnalysis.PublicApiAnalyzers\" (#2731)"},{"Id":"551215375","IsPullRequest":true,"CreatedAt":"2020-01-20T04:12:55","Actor":"RussKie","Number":"2732","RawContent":null,"Title":"Add Microsoft.CodeAnalysis.PublicApiAnalyzers","State":"closed","Body":"Capture the surface of public API\r\n\r\nRelates to #2705\r\nRelates to #2092\r\n\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- None, capturing the shipped public API surface only.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2732)","Url":"https://github.com/dotnet/winforms/pull/2732","RelatedDescription":"Closed or merged PR \"Add Microsoft.CodeAnalysis.PublicApiAnalyzers\" (#2732)"},{"Id":"551959535","IsPullRequest":true,"CreatedAt":"2020-01-20T01:28:02","Actor":"hughbe","Number":"2740","RawContent":null,"Title":"Don't force handle creation in TrackBar.OnHandleCreated","State":"closed","Body":"## Proposed Changes\r\n- Don't force handle creation in TrackBar.OnHandleCreated\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2740)","Url":"https://github.com/dotnet/winforms/pull/2740","RelatedDescription":"Closed or merged PR \"Don't force handle creation in TrackBar.OnHandleCreated\" (#2740)"},{"Id":"551959920","IsPullRequest":true,"CreatedAt":"2020-01-20T01:27:20","Actor":"hughbe","Number":"2741","RawContent":null,"Title":"Don't force TabControl handle creation in OnHandleCreated","State":"closed","Body":"## Proposed Changes\r\n- Don't force TabControl handle creation in OnHandleCreated\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2741)","Url":"https://github.com/dotnet/winforms/pull/2741","RelatedDescription":"Closed or merged PR \"Don't force TabControl handle creation in OnHandleCreated\" (#2741)"},{"Id":"551951599","IsPullRequest":true,"CreatedAt":"2020-01-19T22:27:38","Actor":"gpetrou","Number":"2739","RawContent":null,"Title":"Remove unused ACM, CP, CONNECT, GCL, IMAGE, LOCK, MB, MSH and PSM constants","State":"closed","Body":"## Proposed changes\r\n\r\n- Remove unused ACM, CP, CONNECT, GCL, IMAGE, LOCK, MB, MSH and PSM constants.\r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2739)","Url":"https://github.com/dotnet/winforms/pull/2739","RelatedDescription":"Closed or merged PR \"Remove unused ACM, CP, CONNECT, GCL, IMAGE, LOCK, MB, MSH and PSM constants\" (#2739)"},{"Id":"551966700","IsPullRequest":true,"CreatedAt":"2020-01-19T22:26:25","Actor":"gpetrou","Number":"2743","RawContent":null,"Title":"Move GetDlgItem to Interop User32","State":"closed","Body":"## Proposed changes\r\n\r\n- Move GetDlgItem to Interop User32.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2743)","Url":"https://github.com/dotnet/winforms/pull/2743","RelatedDescription":"Closed or merged PR \"Move GetDlgItem to Interop User32\" (#2743)"},{"Id":"551774070","IsPullRequest":true,"CreatedAt":"2020-01-19T22:20:50","Actor":"hughbe","Number":"2736","RawContent":null,"Title":"Fix IFont and IPicture definitions","State":"closed","Body":"## Proposed Changes\r\n- Add missing `IFont` methods\r\n- Make `IFont` and `IPicture` tests `WinFormsFact` to run on STA thread\r\n- Make `HDC`/`HPALETTE`/`HBITMAP`/`HENHMETAFILE`/`HMETAFILE`/`HFONT` `int`s not `uint`s  due to sign extension bugs\r\n\r\n/cc @weltkante @JeremyKuhne \r\n\r\n\r\nFixes #2002, Fixes #2003, Fixes #2004, Fixes #2005, Fixes #2007\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2736)","Url":"https://github.com/dotnet/winforms/pull/2736","RelatedDescription":"Closed or merged PR \"Fix IFont and IPicture definitions\" (#2736)"},{"Id":"551962924","IsPullRequest":false,"CreatedAt":"2020-01-19T18:30:02","Actor":"hughbe","Number":"2742","RawContent":null,"Title":"Possible porting bug: ScrollBar.ScaleScrollBarForDpiChange is unused in .NET Core","State":"open","Body":"In .NET Framework, if `ScaleScrollBarForDpiChange` then the scroll bar's size does not change if DPI is rescaled.\r\n\r\nE.g. https://referencesource.microsoft.com/#System.Windows.Forms/winforms/Managed/System/WinForms/ScrollBar.cs,218\r\n\r\nWe're missing this check in .NET Core","Url":"https://github.com/dotnet/winforms/issues/2742","RelatedDescription":"Open issue \"Possible porting bug: ScrollBar.ScaleScrollBarForDpiChange is unused in .NET Core\" (#2742)"},{"Id":"551919059","IsPullRequest":true,"CreatedAt":"2020-01-19T13:16:55","Actor":"dotnet-maestro[bot]","Number":"2738","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200118.1\r\n- **Date Produced**: 1/18/2020 1:38 PM\r\n- **Commit**: ebc71292545adda514c1e6a5657cd9ab753240bc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20068.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20068.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20068.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20068.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20068.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2738)","Url":"https://github.com/dotnet/winforms/pull/2738","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2738)"},{"Id":"551776559","IsPullRequest":true,"CreatedAt":"2020-01-18T14:30:53","Actor":"hughbe","Number":"2737","RawContent":null,"Title":"Cleanup DPI_AWARENESS_CONTEXT duplication","State":"open","Body":"## Proposed Changes\r\n- Fix https://github.com/dotnet/winforms/issues/1344\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2737)","Url":"https://github.com/dotnet/winforms/pull/2737","RelatedDescription":"Open PR \"Cleanup DPI_AWARENESS_CONTEXT duplication\" (#2737)"},{"Id":"551766434","IsPullRequest":true,"CreatedAt":"2020-01-18T13:16:57","Actor":"dotnet-maestro[bot]","Number":"2735","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200117.2\r\n- **Date Produced**: 1/17/2020 11:26 PM\r\n- **Commit**: 514e47a844ea7fe193978725c15e67ec16bff572\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20067.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20067.2\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20067.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20067.2\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20067.2\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2735)","Url":"https://github.com/dotnet/winforms/pull/2735","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2735)"},{"Id":"551416543","IsPullRequest":false,"CreatedAt":"2020-01-17T13:30:24","Actor":"weltkante","Number":"2734","RawContent":null,"Title":"CurrentCulture in unit tests?","State":"open","Body":"While updating the PaddingConverter tests in PR #2679 I noticed that it contains tests which only succeed on english (or similar) environments which use comma as separator. Some languages use semicolon due to comma being used as decimal separator. This leads to false-positive failing tests on developer machines.\r\n\r\nFailing tests are [PaddingConverter_ConvertFrom_String_ReturnsExpected](https://github.com/dotnet/winforms/blob/fde3805ea206227ad01266c7d25ce0ed2df4996f/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/PaddingConverterTests.cs#L41) on e.g. [this input](https://github.com/dotnet/winforms/blob/fde3805ea206227ad01266c7d25ce0ed2df4996f/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/PaddingConverterTests.cs#L30) as well as [PaddingConverter_ConvertTo_String_ReturnsExpected](https://github.com/dotnet/winforms/blob/fde3805ea206227ad01266c7d25ce0ed2df4996f/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/PaddingConverterTests.cs#L80). (I'm only selectively running tests locally so I'd assume there could be more instances of this problem in other tests.)\r\n\r\nDo you think tests should be running under fixed CurrentCulture (maybe some sort of fixture)? Maybe check how corefx is solving this problem when they are testing their converters/parsers.","Url":"https://github.com/dotnet/winforms/issues/2734","RelatedDescription":"Open issue \"CurrentCulture in unit tests?\" (#2734)"},{"Id":"551402524","IsPullRequest":true,"CreatedAt":"2020-01-17T13:16:45","Actor":"dotnet-maestro[bot]","Number":"2733","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200116.1\r\n- **Date Produced**: 1/16/2020 1:39 PM\r\n- **Commit**: bca68c2df2c6230389f10def3880a61db266c6c1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 5.0.0-beta.20066.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20066.1\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.20066.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20066.1\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 5.0.0-beta.20066.1\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/2733)","Url":"https://github.com/dotnet/winforms/pull/2733","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2733)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-01-24T05:30:58.0853019Z","RunDurationInMilliseconds":585}