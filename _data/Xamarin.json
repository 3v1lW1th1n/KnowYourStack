{"Data":{"Blog":{"FeedItems":[{"Title":"What’s New for Xamarin Developers in Visual Studio 2019","PublishedOn":"2019-04-02T16:56:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Visual Studio 2019 is the next major version of Visual Studio which is now generally available (GA)! With this version, there is a lot to love. From real-time collaboration with colleagues using...","Href":"https://blog.xamarin.com/xamarin-visual-studio-2019/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in April","PublishedOn":"2019-04-01T19:05:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"User groups are getting together to learn about new, exciting releases and tooling to help jumpstart their next mobile development project. Network with your local community and you too could get all...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-april/","RawContent":null},{"Title":"GlideX For Fast Images on Android","PublishedOn":"2019-03-28T16:01:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Getting good image performance on Android has traditionally been a difficult task. Google has some documentation on the subject, which unfortunately mentions some complex topics: Cache and recycle...","Href":"https://blog.xamarin.com/glidex-fast-images-android/","RawContent":null},{"Title":"Introducing the Xamarin.iOS Interpreter","PublishedOn":"2019-03-26T16:41:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Historically iOS applications have had a number of limitations when running on a device, as Apple disallows the execution of dynamically generated code. Applications are compiled “Ahead of Time” (AOT)...","Href":"https://blog.xamarin.com/introducing-xamarin-ios-interpreter/","RawContent":null},{"Title":"Join the Xamarin Visual Challenge","PublishedOn":"2019-03-22T16:00:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past month, we have been running a low-key challenge to flex the new Xamarin.Forms 3.6 feature, Visual with Material Design. For more information about what Visual is and what you can do with...","Href":"https://blog.xamarin.com/join-the-xamarin-visual-challenge/","RawContent":null},{"Title":"Get Your Apps Ready for Apple’s New Watch Processor Architecture","PublishedOn":"2019-03-20T15:59:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last fall, Apple announced that new applications and updates would need to support the Apple Watch Series 4. &#8220;Starting March 2019, all new apps and app updates for iPhone, including universal...","Href":"https://blog.xamarin.com/apple-new-processor-architecture/","RawContent":null},{"Title":"Xamarin.Essentials Adds Detect Shake, Browser Customization, Color Helpers, and More!","PublishedOn":"2019-03-18T18:54:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Essentials are your ultimate open source library to access native features from a single cross-platform API. Since the first release, we have received awesome feedback on GitHub from...","Href":"https://blog.xamarin.com/xamarin-essentials-detect-shake-browser-customization/","RawContent":null},{"Title":"Introducing the New Xamarin Customer Showcase","PublishedOn":"2019-03-15T16:53:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Developers around the world use Xamarin every day to build beautiful native mobile apps with .NET. What better way to highlight the amazing work that these developers are doing than with a customer...","Href":"https://blog.xamarin.com/new-xamarin-customer-showcase/","RawContent":null},{"Title":"A Quick Update on Google Components for iOS and Android","PublishedOn":"2019-03-13T19:12:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the best parts about using Xamarin for mobile development is access to all of the platform APIs from C# bindings. Additionally, any native iOS or Android library can be consumed by a Xamarin...","Href":"https://blog.xamarin.com/update-google-components-ios-android/","RawContent":null},{"Title":"Enhanced Xamarin Development With MFractor","PublishedOn":"2019-03-12T15:58:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was guest authored and contributed by Matthew Robbins. Matthew is a Microsoft MVP and the founder of MFractor, incredible Xamarin tools for Visual Studio Mac. MFractor MFractor is a powerful...","Href":"https://blog.xamarin.com/enhanced-xamarin-development-with-mfractor/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9366003166","Type":"IssuesEvent","CreatedAt":"2019-04-02T22:51:22","Actor":"hadigityat","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2919","RelatedDescription":"Opened issue \"UNEXPECTED TOP-LEVEL EXCEPTION: com.android.dex.DexException: Too many classes in --main-dex-list, main dex capacity exceeded\" (#2919) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Change target framework level to 28 (Android 9.0)\r\n2. Build (Multidex enabled)\r\n3. \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nbuild runs without errors\r\n\r\n### Actual Behavior\r\n\r\n/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Common.targets(3,3): Error MSB6006: \"java\" exited with code 2. (MSB6006)\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\nVisual Studio Community 2019 for Mac\r\nVersion 8.0 (build 3001)\r\nInstallation UUID: e54e9990-6782-4238-a6cd-797dff2cf7f1\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.6.0.2 (d16-0 / 040682909)\r\n\r\n\tPackage version: 518010003\r\n\r\nMono Framework MDK\r\nRuntime:\r\n\tMono 5.18.1.3 (2018-08/fdb26b0a445) (64-bit)\r\n\tPackage version: 518010003\r\n\r\nNuGet\r\nVersion: 4.8.2.5835\r\n\r\n.NET Core\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.9\r\n\t2.1.8\r\n\t2.1.7\r\n\t2.1.2\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.505/Sdks\r\nSDK Versions:\r\n\t2.1.505\r\n\t2.1.504\r\n\t2.1.503\r\n\t2.1.302\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.18.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\nXamarin.Profiler\r\nVersion: 1.6.9\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\nUpdater\r\nVersion: 11\r\n\r\nApple Developer Tools\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\nXamarin.Mac\r\nVersion: 5.6.0.25 (Visual Studio Community)\r\nHash: 50f75273\r\nBranch: d16-0\r\nBuild date: 2019-03-05 11:50:33-0800\r\n\r\nXamarin.iOS\r\nVersion: 12.6.0.25 (Visual Studio Community)\r\nHash: 50f75273\r\nBranch: d16-0\r\nBuild date: 2019-03-05 11:50:33-0800\r\n\r\nXamarin.Android\r\nVersion: 9.2.0.5 (Visual Studio Community)\r\nAndroid SDK: /Users/Can/Downloads/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t6.0 (API level 23)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.2\r\nSDK Build Tools Version: 29.0.0 rc1\r\n\r\nBuild Information: \r\nMono: mono/mono/2018-08-rc@5ad371dab1b\r\nJava.Interop: xamarin/java.interop/d16-0@c987483\r\nLibZipSharp: grendello/LibZipSharp/master@44de300\r\nLibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\nMXE: xamarin/mxe/xamarin@b9cbb535\r\nProGuard: xamarin/proguard/master@905836d\r\nSQLite: xamarin/sqlite/3.26.0@325e91a\r\nXamarin.Android Tools: xamarin/xamarin-android-tools/d16-0@0a7edd6\r\n\r\nMicrosoft Mobile OpenJDK\r\nJava SDK: /Users/Can/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_8.0.25\r\n1.8.0-25\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\nAndroid Device Manager\r\nVersion: 1.2.0.14\r\nHash: 86df26f\r\nBranch: remotes/origin/d16-0\r\nBuild date: 2019-03-27 18:41:02 UTC\r\n\r\nXamarin Designer\r\nVersion: 4.17.4.414\r\nHash: 55b8d07ef\r\nBranch: remotes/origin/d16-0\r\nBuild date: 2019-03-22 21:44:12 UTC\r\n\r\nXamarin Inspector\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\nBuild Information\r\nRelease ID: 800003001\r\nGit revision: 16b11d379aeff65cd1e81d3616c267ad4251ad36\r\nBuild date: 2019-03-28 13:14:24+00\r\nBuild branch: master\r\nXamarin extensions: efad41c7f410d8e6d43361236e0e778cf6f9b4a5\r\n\r\nOperating System\r\nMac OS X 10.14.4\r\nDarwin 18.5.0 Darwin Kernel Version 18.5.0\r\n    Mon Mar 11 20:40:32 PDT 2019\r\n    root:xnu-4903.251.3~3/RELEASE_X86_64 x86_64\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n    UNEXPECTED TOP-LEVEL EXCEPTION:\r\n    com.android.dex.DexException: Too many classes in --main-dex-list, main dex capacity exceeded\r\n    \tat com.android.dx.command.dexer.Main.processAllFiles(Main.java:548)\r\n    \tat com.android.dx.command.dexer.Main.runMultiDex(Main.java:368)\r\n    \tat com.android.dx.command.dexer.Main.runDx(Main.java:289)\r\n    \tat com.android.dx.command.dexer.Main.main(Main.java:247)\r\n    \tat com.android.dx.command.Main.main(Main.java:94)\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"9365178081","Type":"PullRequestEvent","CreatedAt":"2019-04-02T20:21:33","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2918","RelatedDescription":"Opened pull request \"[System.Drawing.Primitives] Remove; use Mono's version instead\" (#2918) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/mono/mono/issues/11397\r\n\r\nStop building `System.Drawing.Primitives.dll` within the\r\nxamarin-android build, and instead use the\r\n`System.Drawing.Primitives.dll` which is built by mono and included in\r\nthe mono archive (333b98b)."},{"Id":"9365142442","Type":"PullRequestEvent","CreatedAt":"2019-04-02T20:16:04","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2915","RelatedDescription":"Merged pull request \"[Mono.Posix] Remove; use Mono's version instead\" (#2915) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2597\r\nContext: https://github.com/mono/mono/issues/11397\r\n\r\nStop building `Mono.Posix.dll` within the xamarin-android build, and\r\ninstead use the `Mono.Posix.dll` which is built by mono and included\r\nin the mono archive (333b98b3)."},{"Id":"9365142424","Type":"IssuesEvent","CreatedAt":"2019-04-02T20:16:04","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2597","RelatedDescription":"Closed issue \"Use Mono's `Mono.Posix.dll`\" (#2597) at xamarin/xamarin-android","RelatedBody":"Like Issue #2407 / PR #2417, but for `Mono.Posix.dll`.\r\n\r\nMono has the Android-specific fixes for `Mono.Posix.dll` as of: https://github.com/mono/mono/commit/fc662e3ffeb9c4d150a69507f1909fb5b906d651\r\n\r\nAs such, there is no need for `src/Mono.Posix` to exist.\r\n\r\nDelete `src/Mono.Posix`, and update `src/mono-runtimes` so that we use the `Mono.Posix.dll` that mono builds."},{"Id":"9364698586","Type":"PullRequestEvent","CreatedAt":"2019-04-02T19:06:03","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2913","RelatedDescription":"Merged pull request \"[docs] MSBuild best-practices for in-memory caching\" (#2913) at xamarin/xamarin-android","RelatedBody":"I wanted to document how to use `RegisterTaskObject`, since it has\r\nbeen quite helpful for us to improve incremental build performance.\r\n\r\nI also recently figured out the undocumented `%MSBUILDNOINPROCNODE%`,\r\nwhich I thought would be helpful for my future self to refer back to."},{"Id":"9364655932","Type":"PullRequestEvent","CreatedAt":"2019-04-02T18:59:29","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2917","RelatedDescription":"Opened pull request \"[netstandard] Remove; use Mono's version instead\" (#2917) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/mono/mono/issues/11397\r\n\r\nStop building `netstandard.dll` within the xamarin-android build, and\r\ninstead use the `netstandard.dll` which is built by mono and included\r\nin the mono archive (333b98b)."},{"Id":"9364190071","Type":"IssuesEvent","CreatedAt":"2019-04-02T17:48:27","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2884","RelatedDescription":"Closed issue \"PanGestureRecognizer Completed Event does not fire\" (#2884) at xamarin/xamarin-android","RelatedBody":"<?xml version=\"1.0\" encoding=\"utf-8\" ?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             xmlns:local=\"clr-namespace:PanGestureBug\"\r\n             x:Class=\"PanGestureBug.MainPage\">\r\n\r\n    <StackLayout>\r\n        <ListView x:Name=\"myList\" RowHeight=\"100\">\r\n            <ListView.ItemTemplate>\r\n                <DataTemplate>\r\n                    <ViewCell>\r\n                        <Label\r\n                            Text=\"{Binding}\">\r\n                            <Label.GestureRecognizers>\r\n                                <PanGestureRecognizer PanUpdated=\"PanGestureRecognizer_PanUpdated\"/>\r\n                            </Label.GestureRecognizers>\r\n                        </Label>\r\n                    </ViewCell>\r\n                </DataTemplate>\r\n            </ListView.ItemTemplate>\r\n        </ListView>\r\n    </StackLayout>\r\n\r\n</ContentPage>\r\n\r\n**Code Behind**\r\n\r\nusing System.Collections.Generic;\r\nusing System.ComponentModel;\r\nusing Xamarin.Forms;\r\n\r\nnamespace PanGestureBug\r\n{\r\n    [DesignTimeVisible(true)]\r\n    public partial class MainPage : ContentPage\r\n    {\r\n        List<string> items = new List<string>();\r\n        public MainPage()\r\n        {\r\n            InitializeComponent();\r\n            for (int i = 0; i < 3; i++)\r\n            {\r\n                items.Add(\"item \" + i.ToString());\r\n            }\r\n            myList.ItemsSource = items;\r\n        }\r\n        private void PanGestureRecognizer_PanUpdated(object sender, PanUpdatedEventArgs e)\r\n        {\r\n            System.Diagnostics.Debug.WriteLine(e.StatusType);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n### Expected Behavior\r\nWhen you pan on the items, the PanUpdated should get called with completed/cancelled. \r\n\r\n### Actual Behavior\r\nThe completed/cancelled is not called consistently.\r\n\r\n### Version Information\r\nMicrosoft Visual Studio Enterprise 2019 Preview\r\nVersion 16.0.0 Preview 4.4\r\nVisualStudio.16.Preview/16.0.0-pre.4.4+28721.148\r\nMicrosoft .NET Framework\r\nVersion 4.8.03752\r\n\r\nInstalled Version: Enterprise\r\n\r\nVisual C++ 2019   00435-60000-00000-AA984\r\nMicrosoft Visual C++ 2019\r\n\r\nApplication Insights Tools for Visual Studio Package   9.0.20307.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2019   16.0.12307.51536\r\nASP.NET and Web Tools 2019\r\n\r\nAzure App Service Tools v3.0.0   16.0.12307.51536\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   3.0.0-beta4-19170-01+1deafee3682da88bf07d1c18521a99f47446cee8\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.77 (master@24013d5)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   16.0.300 (573eda3)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   5.0.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nTest Adapter for Google Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTypeScript Tools   16.0.10306.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   3.0.0-beta4-19170-01+1deafee3682da88bf07d1c18521a99f47446cee8\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.4 for F# 4.6   16.0.0.0.  Commit Hash: 809f41207b74a1356208f11b8fa3a15233734050.\r\nMicrosoft Visual F# Tools 10.4 for F# 4.6\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   16.0.0.513 (d16-0@aebc6bdb5)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.17.4.413 (remotes/origin/d16-0@db42fb8b0)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   16.1.43 (fe3ade5)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9366743246","Type":"PullRequestEvent","CreatedAt":"2019-04-03T02:13:37","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5792","RelatedDescription":"Merged pull request \"Remove locally referenced folder\" (#5792) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nIDE  added a reference to local file location. This PR removes that \r\n"},{"Id":"9366474788","Type":"PullRequestEvent","CreatedAt":"2019-04-03T00:58:29","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5792","RelatedDescription":"Opened pull request \"Remove locally referenced folder\" (#5792) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nOops\r\n"},{"Id":"9366181856","Type":"IssuesEvent","CreatedAt":"2019-04-02T23:36:20","Actor":"AceCoderLaura","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5791","RelatedDescription":"Opened issue \"Failed to execute 'which mono64': ExitStatus = 1\" (#5791) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nI can't run my Xamarin.iOS application.\r\n\r\n### Steps to Reproduce\r\n1. Run the application from the IDE.\r\n\r\n### Expected Behavior\r\nApplication starts on the iPad Mini connected to the Mac Mini that I connected to.\r\n\r\n### Actual Behavior\r\nBuild hangs for a bit and then nothing happens.\r\nWorks fine on the Mac Mini in Visual Studio for Mac.\r\nSince this appears to be a communication problem I figure this warning is relevant:\r\n```\r\nXamarin.Messaging.targets(41, 3): [null] C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Professional\\MSBuild\\Xamarin\\iOS\\Xamarin.Messaging.targets(41,3): warning : Failed to execute 'which mono64': ExitStatus = 1\r\n```\r\n\r\n### Basic Information\r\n- Version with issue: 3.4.0.1009999\r\n- Last known good version: There's never been a good version\r\n- IDE: Rider, Visual Studio 2017\r\n- Platform Target Frameworks:\r\n  - iOS: 8.0.30703\r\n- Nuget Packages:\r\n  - Esri.ArcGISRuntime.Xamarin.Forms/100.2.1\r\n  - Esri.ArcGISRuntime.Xamarin.iOS/100.2.1\r\n  - Xamarin.Forms/3.4.0.1009999\r\n- Affected Devices:\r\n  - iPad Mini"},{"Id":"9366083061","Type":"IssuesEvent","CreatedAt":"2019-04-02T23:10:58","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5790","RelatedDescription":"Opened issue \"[Shell] Uri Navigation Spec when using GoToAsync\" (#5790) at xamarin/Xamarin.Forms","RelatedBody":"# Shell.Navigation.GotoAsync\r\n\r\n## Route structure\r\n`//route (required) / page (optional) ? QueryParams (optional)`\r\n\r\n- Route defines the path to a ShellContent element.These are the views that exist as part of the Shell visual hierarchy. \r\n- Pages don't exist in the visual hierarchy but can be pushed onto the stack from wherever you are. For example an Item Details page won't be defined in the Shell XAML file but you will want to push it onto the stack from different places.\r\n- QueryParams are any parameters you want passed into your destination page\r\n\r\n## Route Decomposition\r\n\r\nGiven the following URI\r\n`//store/category/edit?CategoryId=12`\r\n\r\nThe routing system will first try to locate what part of the URI represents the `ShellContent`. So if the structure of the shell page is defined as\r\n```\r\nstore\r\n--search\r\n--category\r\nabout\r\n```\r\n\r\nThe routing system will first try to locate a full path that matches `//store/category/edit`. Once that's not found it will remove the last segment and try to locate a route at `//store/category`.\r\n\r\nThis will cause the store page to be visible with the category tab selected. Now it has to locate the edit page you want to use. The routing system will perform the following route searches and once a route is found then whatever page is found there will be set as the content page.\r\n\r\n```\r\n//store/category/edit\r\n//store/edit\r\n//edit\r\n```\r\n\r\nOnce the page is found that is what the visible content will be set to. This will not create a page stack, the stack will only have one item on it.\r\n\r\nCurrently the pages will be registered in code\r\n```c#\r\nRegisterRoute(\"//store/category/edit\", typeof(EditCategory));\r\nRegisterRoute(\"//people/search/edit\", typeof(EditSearch));\r\n```\r\n\r\n# API\r\n\r\n## Shell\r\n\r\n### Properties\r\n\r\n| API | Description |\r\n| ------------- | ------------- |\r\n| Navigation | Adds a static property onto shell for accessing Navigation. |\r\n\r\n## Shell.Navigation\r\n\r\n### Properties\r\n\r\n| API | Description |\r\n| ------------- | ------------- |\r\n| GoToAsync |  Provide a uri that you want to navigate to |\r\n \r\n# Scenarios\r\nGiven the following setup\r\n```XAML\r\n<Shell>\r\n    <FlyoutItem Route=\"xamtube\">\r\n\t\t<Tab Route=\"home\" />\r\n\t\t<Tab Route=\"library\" />\r\n\t\t<Tab Route=\"store\" />\r\n\t</FlyoutItem>\r\n</Shell>\r\n```\r\n\r\n```cs\r\nRegisterRoute(\"LoginPage\", typeof(LoginPage));\r\nRegisterRoute(\"StoreItem\", typeof(StoreItem));\r\nRegisterRoute(\"//xamtube/library/edit\", typeof(EditLibraryContentPage));\r\nRegisterRoute(\"//xamtube/library/store\", typeof(EditStoreContentPage));\r\nRegisterRoute(\"edit\", typeof(EditSettings));\r\n```\r\n\r\n\r\n*Set root of shell to default content page for xamtube*\r\n```C#\r\nGotoAsync(\"//xamtube\")\r\n```\r\n\r\n*Set xam tube as root of shell and activate library tab*\r\n```C#\r\nGotoAsync(\"//xamtube/library\") \r\n```\r\n\r\n*User will only see Login Page and no Shell Navigation*\r\n```C#\r\nGotoAsync(\"//LoginPage\") \r\n```\r\n\r\n*Store tab will be selected on the xamtube page. The content will be set to the StoreItem Page.*\r\n```C#\r\nGotoAsync(\"//xamtube/store/StoreItem?ItemId=123\") \r\n```\r\n\r\n*This creates a navigation stack with the home tab and then the store tab. If the user hits the back button it will go to the home page*\r\n```C#\r\nGotoAsync(\"//xamtube/home\") \r\nGotoAsync(\"xamtube/store\") \r\n```\r\n\r\n*This will set `xamtube/library` as root of shell with `EditLibraryContentPage` as the content*\r\n\r\n```C#\r\nGotoAsync(\"//xamtube/library/edit\") \r\n```\r\n\r\n#### Existing INavigation mappings ####\r\n```C#\r\npublic interface INavigation\r\n{\r\n\t// Contains stack of Pages on shell contents\r\n\tIReadOnlyList<Page> NavigationStack { get; }\r\n\t\r\n\t//can be used to insert a page somewhere on stack. This is the same as pushing a PageContent\r\n\tvoid InsertPageBefore(Page page, Page before);\r\n\t\r\n\t// locate content in stack that matches this page and remove it from the stack\r\n\tvoid RemovePage(Page page);\r\n\t\r\n\t// Go back in stack\r\n\tTask<Page> PopAsync();\r\n\t\r\n\t// Go back in stack\r\n\tTask<Page> PopAsync(bool animated);\r\n\t\r\n\t// pop everything except base\r\n\tTask PopToRootAsync();\r\n\t\r\n\t// pop everything except base\r\n\tTask PopToRootAsync(bool animated);\r\n\r\n\t// push a PageContent onto Shell stack\r\n\tTask PushAsync(Page page);\r\n\r\n\t// push a PageContent onto Shell stack\r\n\tTask PushAsync(Page page, bool animated);\r\n\t\r\n\t// push a PageContent onto Shell stack without navigation structure (at some point we will let people make this prettier)\r\n\tTask PushModalAsync(Page page);\r\n\t\r\n\t// push a PageContent onto Shell stack without navigation structure (at some point we will let people make this prettier)\r\n\tTask PushModalAsync(Page page, bool animated);\r\n\t\r\n\t// Contains stack of any modal pages pushed\r\n\tIReadOnlyList<Page> ModalStack { get; }\r\n\t\r\n\t// Close current Modal page\r\n\tTask<Page> PopModalAsync();\r\n\t\r\n\t// Close current Modal page\r\n\tTask<Page> PopModalAsync(bool animated);\r\n\r\n}\r\n```\r\n\r\n\r\n# Difficulty : medium\r\n"},{"Id":"9365730129","Type":"IssuesEvent","CreatedAt":"2019-04-02T21:53:22","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5789","RelatedDescription":"Opened issue \"[Enhancement] Scheme/uri based asset mapping for accessing photos, files, etc...\" (#5789) at xamarin/Xamarin.Forms","RelatedBody":"## Summary\r\nProvide a syntax that can be provide different types of image sources to an *ImageSource*. This will allow users to load images from sources like sdcards, embeddedresources, PhotoKit, Android Gallery, etc.. in a cross platform way.\r\n\r\nThis is possibly belongs more inside Essentials but an agreed upon Uri structure could be shared by XF and Essentials allowing both to consume this type of data.\r\n\r\nThis will also be useful in conjunction with\r\nhttps://github.com/xamarin/Essentials/issues/177\r\nhttps://github.com/xamarin/Xamarin.Forms/pull/4915\r\n\r\n## API Changes\r\n\r\n```C#\r\n// this will be used to describe different assets that can be loaded from a device\r\npublic class Asset\r\n{\r\n     public string Name\r\n     public string Identifier\r\n}\r\n```\r\n\r\nAdd schemes that will indicate how a particular Asset source\r\n```C#\r\npublic enum AssetScheme\r\n{\r\n     photo,embedded,storage\r\n}\r\n```\r\n\r\n\r\n## Intended Use Case\r\nCurrently to use embedded resources users are required to write a markup extension. We could provide a scheme to access embedded resources\r\n\r\n```xaml\r\n<Image Source=\"embedded://AssemblyName/image.png\" />\r\n```\r\n\r\nWhen utilizing something from the android gallery or need a way to represent a PHAsset on iOS. \r\n```xaml\r\nImageSource source = \"photo://<Identifier>\";\r\n```\r\n\r\n### Additional implementations\r\nWays to query for assets. A user could use this scheme plus some query parameters to query for photos or files\r\n"},{"Id":"9364669975","Type":"IssuesEvent","CreatedAt":"2019-04-02T19:01:39","Actor":"pizzahead24","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5788","RelatedDescription":"Opened issue \"Cant render images in Android that have file names with a '-' in them.\" (#5788) at xamarin/Xamarin.Forms","RelatedBody":"\r\n### Description\r\nMy project is trying to display third party url images that we have no control over what they are named. The file name of a lot of them contain a hyphen in them. I have tried using both Xamarins Image component along with FFImageLoading and can confirm for some reason Xamarin Android cannot display these images with hyphens in them. Works fine in UWP and iOS. All images without the hyphen work.\r\n### Steps to Reproduce\r\n\r\n1. Get an image url with a hyphen in it.\r\n2. Try to show the image with FFImageLoader or Image component\r\n3. Notice it wont display.\r\n\r\n### Expected Behavior\r\nUrl images with a file name that has a hyphen in it should work in Android.\r\n### Actual Behavior\r\nUrl images with hyphen in the name do not work in Android\r\n\r\n"},{"Id":"9364603245","Type":"IssuesEvent","CreatedAt":"2019-04-02T18:51:24","Actor":"ianvink","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5787","RelatedDescription":"Opened issue \"VS2019 Crashes Android when AOT and LLVM enabled\" (#5787) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\nIn RELEASE mode for an Android app, if we set AOT and LLVM, then build the tool on our Build server (Mac VS2019) the app crashes with the crash log attached\r\n\r\nWhen we disable LLVM, it works fine\r\n\r\n \r\n### Steps to Reproduce\r\n\r\n1.  Enable AOT and LLVM \r\n2.  Build to releasr\r\n3.  Crash\r\n\r\n### Expected Behavior\r\nNot crash\r\n### Actual Behavior\r\nCrash\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE: VS2019\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android:   VS2019\r\n\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n![2019-04-02 11_49_17-Window](https://user-images.githubusercontent.com/112916/55428160-60635780-553d-11e9-9488-d15e8316320a.png)\r\n\r\n[log.txt](https://github.com/xamarin/Xamarin.Forms/files/3035510/log.txt)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9364773007","Type":"PullRequestEvent","CreatedAt":"2019-04-02T19:18:09","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5834","RelatedDescription":"Merged pull request \"[makefile] Update pkg version to 12.8/5.8\" (#5834) at xamarin/xamarin-macios","RelatedBody":"We'll have to release `d16-0` builds of Xamarin.iOS and Xamarin.Mac without Xcode 10.2 support.\r\nSo bump the version number to differentiate `d16-0` + `xcode10.2`."},{"Id":"9363993254","Type":"PullRequestEvent","CreatedAt":"2019-04-02T17:18:38","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5822","RelatedDescription":"Merged pull request \"Merge `xcode10.2` into `d16-0`\" (#5822) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1113137014768066560","CreatedAt":"2019-04-02T17:52:00+00:00","UserScreenname":"xamarinhq","Text":"News from the #VisualStudio 2019 Launch Event. See what’s new for #Xamarin Developers in #VS2019,… https://t.co/ylrA7eBnQ4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":96,"FavoriteCount":49,"RawContent":null},{"Id":"1112804184166944768","CreatedAt":"2019-04-01T19:49:27+00:00","UserScreenname":"xamarinhq","Text":"Learn about the new, exciting releases and tooling to help jumpstart your next mobile development project.\n\nJoin us… https://t.co/4AhXCdCrB0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":25,"FavoriteCount":13,"RawContent":null},{"Id":"1111358962681765893","CreatedAt":"2019-03-28T20:06:39+00:00","UserScreenname":"xamarinhq","Text":"Unlock the power of Glide with “GlideX”: a simple library to swap-in Glide’s image loading implementation in-place… https://t.co/bAk49l9er6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":47,"FavoriteCount":25,"RawContent":null},{"Id":"1111318034789158912","CreatedAt":"2019-03-28T17:24:01+00:00","UserScreenname":"xamarinhq","Text":"How are we doing? The #Xamarin March survey is now ready for your feedback: https://t.co/yfktVy49Pl \nIt's only avai… https://t.co/gX2uC9QShF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":37,"RawContent":null},{"Id":"1110599405390962693","CreatedAt":"2019-03-26T17:48:26+00:00","UserScreenname":"xamarinhq","Text":"Interpret some of the #CSharp in your application while compiling the rest ahead of time as usual.\n\nCool.... Introd… https://t.co/vkhDptAeTr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":93,"FavoriteCount":43,"RawContent":null},{"Id":"1109140611515498502","CreatedAt":"2019-03-22T17:11:43+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/GFuU36E9x5 - Let's walk through a basic building block of #Xamarin.Forms. In the latest episode of Xam… https://t.co/qczJXvqcNK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":67,"FavoriteCount":29,"RawContent":null},{"Id":"1108410911151345664","CreatedAt":"2019-03-20T16:52:09+00:00","UserScreenname":"xamarinhq","Text":"We're ready for testing &amp; app submission. The latest #Xamarin .iOS SDKs shipping with #VS2019 and #VS4Mac 8.0, are… https://t.co/KC1Gih3MFF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":57,"FavoriteCount":25,"RawContent":null},{"Id":"1107723971531862017","CreatedAt":"2019-03-18T19:22:29+00:00","UserScreenname":"xamarinhq","Text":"We have received some great pull requests to add some new features and that have gone into the newest release. Now… https://t.co/EqNQUDloOm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":119,"FavoriteCount":47,"RawContent":null},{"Id":"1106650380182659080","CreatedAt":"2019-03-15T20:16:25+00:00","UserScreenname":"xamarinhq","Text":"Introducing the New Xamarin Customer Showcase\n\nHighlighting the amazing work developers are doing for all sorts of… https://t.co/yQbcA4cYc6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":96,"FavoriteCount":42,"RawContent":null},{"Id":"1106576630884065280","CreatedAt":"2019-03-15T15:23:22+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @JamesMontemagno &amp; @JonathanPeppers show us how to optimize image loading for Androi… https://t.co/FkiznwhBep","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":73,"FavoriteCount":17,"RawContent":null},{"Id":"1105942645308678144","CreatedAt":"2019-03-13T21:24:08+00:00","UserScreenname":"xamarinhq","Text":"There have been some drastic changes across key libraries for Google Play Services &amp; Android Support. Let's get a q… https://t.co/heywxPz0Qs","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":40,"FavoriteCount":25,"RawContent":null},{"Id":"1105573743986917377","CreatedAt":"2019-03-12T20:58:15+00:00","UserScreenname":"xamarinhq","Text":"#MFractor is a powerful #VS4Mac extension to streamline Xamarin app dev so you can save significant time &amp; effort o… https://t.co/pEwcgwzd3t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":22,"RawContent":null},{"Id":"1105491570583851008","CreatedAt":"2019-03-12T15:31:44+00:00","UserScreenname":"xamarinhq","Text":".@codemillmatt &amp; @JamesMontemagno talk about a ton of newness out there for all mobile devs including a hot new… https://t.co/05m3VTmUBe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":24,"RawContent":null},{"Id":"1103762250509283332","CreatedAt":"2019-03-07T21:00:02+00:00","UserScreenname":"xamarinhq","Text":"Introducing Material Design; a suite of cross-platform components in the #Xamarin.Forms 3.6 Visual feature that boo… https://t.co/gin9lpb0eQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":150,"FavoriteCount":70,"RawContent":null},{"Id":"1103750171215699968","CreatedAt":"2019-03-07T20:12:02+00:00","UserScreenname":"xamarinhq","Text":"Level up your mobile development skills at #MSBuild, May 6-8, 2019 in Seattle. Registration is now open!… https://t.co/EZNWhIn3p6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":41,"FavoriteCount":9,"RawContent":null},{"Id":"1103709031066189825","CreatedAt":"2019-03-07T17:28:33+00:00","UserScreenname":"xamarinhq","Text":"Happening right now! Join the Mobile #dotNET Teams for our community stand-up covering great community contribution… https://t.co/9HUp86ZqBU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":30,"FavoriteCount":16,"RawContent":null},{"Id":"1103701857682231296","CreatedAt":"2019-03-07T17:00:03+00:00","UserScreenname":"xamarinhq","Text":"On this week's Essential API of the week we take a look at Accelerometer, which enables you monitor the device's ac… https://t.co/UxhHHar5zN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":57,"FavoriteCount":18,"RawContent":null},{"Id":"1103399934966067200","CreatedAt":"2019-03-06T21:00:19+00:00","UserScreenname":"xamarinhq","Text":"Announcing Xamarin.Forms 3.6:\n- we've made enhancements, cleaned up some bugs, AND, we've moved our Visual feature… https://t.co/fG4RqX25PH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":263,"FavoriteCount":130,"RawContent":null},{"Id":"1102666586194931713","CreatedAt":"2019-03-04T20:26:15+00:00","UserScreenname":"xamarinhq","Text":"Sweeky Satpathy (from the Mobile Customer Advisory Team) shares some best practices &amp; tips/tricks the team uses to… https://t.co/GSrw6zLTHZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":19,"RawContent":null}]}},"RunOn":"2019-04-03T05:30:53.1678369Z","RunDurationInMilliseconds":2383}