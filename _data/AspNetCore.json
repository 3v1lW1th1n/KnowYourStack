{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4","PublishedOn":"2018-01-05T20:30:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are releasing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 on NuGet. This release contains some minor bug fixes and a couple of new features specifically targeted at...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/05/announcing-preview-1-of-asp-net-mvc-5-2-4-web-api-5-2-4-and-web-pages-3-2-4/","RawContent":null},{"Title":"Take a Break with Azure Functions","PublishedOn":"2017-12-22T05:41:48+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"So, it&#8217;s the Holidays. The office is empty, the boss is away, and you&#8217;ve got a bit of free time on your hands. How about learning a new skill and having some fun? Azure Functions are a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/21/take-a-break-with-azure-functions/","RawContent":null},{"Title":"Testing ASP.NET Core MVC web apps in-memory","PublishedOn":"2017-12-07T17:00:35+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written and submitted by Javier Calvarro Nelson, a developer on the ASP.NET Core MVC team Testing is an important part of the development process of any app. In this blog post...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/07/testing-asp-net-core-mvc-web-apps-in-memory/","RawContent":null},{"Title":"Configuring HTTPS in ASP.NET Core across different platforms","PublishedOn":"2017-11-29T17:00:12+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As the web moves to be more secure by default, it&#8217;s more important than ever to make sure your websites have HTTPS enabled. And if you&#8217;re going to use HTTPS in production its a good idea...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/29/configuring-https-in-asp-net-core-across-different-platforms/","RawContent":null},{"Title":"Improve website performance by optimizing images","PublishedOn":"2017-11-28T18:02:29+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We all want our web applications to load as fast as possible to give the best possible experience to the users. One of the steps to achieve that is to make sure the images we use are as optimized as...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/28/improve-website-performance-by-optimizing-images/","RawContent":null},{"Title":"Orchard Core Beta 1 released","PublishedOn":"2017-11-21T19:32:10+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This is a guest post by Sebastien Ros on behalf of the Orchard community Two years ago, the Orchard community started developing Orchard on .NET Core. After 1,500 commits, 297,000 lines of code, 127...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/21/orchard-core-beta-annoucement/","RawContent":null},{"Title":"Announcing .NET 4.7.1 Tools for the Cloud","PublishedOn":"2017-11-17T17:41:35+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today we are releasing a set of providers for ASP.NET 4.7.1 that make it easier than ever to deploy your applications to cloud services and take advantage of cloud-scale features.  This release...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/17/announcing-net-4-7-1-tools-for-the-cloud/","RawContent":null},{"Title":"Improvements to Azure Functions in Visual Studio","PublishedOn":"2017-11-15T19:00:43+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"We&#8217;re excited to announce several improvements to the Azure Functions experience in Visual Studio as part of the latest update to the Azure Functions tools on top of Visual Studio 2017 v15.5....","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/15/improvements-to-azure-functions-in-visual-studio/","RawContent":null},{"Title":"Creating a Minimal ASP.NET Core Windows Container","PublishedOn":"2017-11-09T16:18:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post by Mike Rousos One of the benefits of containers is their small size, which allows them to be more quickly deployed and more efficiently packed onto a host than virtual machines...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/09/creating-a-minimal-asp-net-core-windows-container/","RawContent":null},{"Title":"Publishing a Web App to an Azure VM from Visual Studio","PublishedOn":"2017-11-01T22:35:42+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We know virtual machines (VMs) are one of the most popular places to run apps in Azure, but publishing to a VM from Visual Studio has been a tricky experience for some. So, we’re pleased to announce...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/01/publishing-a-web-app-to-an-azure-vm-from-visual-studio/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7066763121","Type":"IssuesEvent","CreatedAt":"2018-01-07T15:17:35","Actor":"dazinator","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2747","RelatedDescription":"Opened issue \"[Question] 1.1 -> 2.0 ITagHelperTypeResolver\" (#2747) at aspnet/Home","RelatedBody":"I am attempting to upgrade my asp.net core 1.1 mvc application to 2.0\r\n\r\nI was previously using: `ITagHelperTypeResolver`\r\n\r\nI was using the following custom `ITagHelperTypeResolver` but this no longer seems to compile after the upgrade to 2.0. I can no longer find types:\r\n- ITagHelperTypeResolver\r\n- ErrorSink\r\n\r\n\r\n```csharp\r\n public class AssemblyNameGlobbingTagHelperTypeResolver : ITagHelperTypeResolver\r\n    {\r\n       \r\n        private static readonly System.Reflection.TypeInfo ITagHelperTypeInfo = typeof(ITagHelper).GetTypeInfo();\r\n\r\n        protected TagHelperFeature Feature { get; }\r\n\r\n        public AssemblyNameGlobbingTagHelperTypeResolver(ApplicationPartManager manager)\r\n        {\r\n            if (manager == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(manager));\r\n            }\r\n\r\n            Feature = new TagHelperFeature();\r\n            manager.PopulateFeature(Feature);\r\n\r\n            // _manager = manager;\r\n\r\n        }\r\n\r\n        /// <inheritdoc />\r\n        public IEnumerable<Type> Resolve(\r\n            string name,\r\n            SourceLocation documentLocation,\r\n            ErrorSink errorSink)\r\n        {\r\n            if (errorSink == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(errorSink));\r\n            }\r\n\r\n            if (string.IsNullOrEmpty(name))\r\n            {\r\n                var errorLength = name == null ? 1 : Math.Max(name.Length, 1);\r\n                errorSink.OnError(\r\n                    documentLocation,\r\n                    \"Tag Helper Assembly Name Cannot Be Empty Or Null\",\r\n                    errorLength);\r\n\r\n                return Type.EmptyTypes;\r\n            }\r\n\r\n\r\n            IEnumerable<TypeInfo> libraryTypes;\r\n            try\r\n            {\r\n                libraryTypes = GetExportedTypes(name);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                errorSink.OnError(\r\n                    documentLocation,\r\n                    $\"Cannot Resolve Tag Helper Assembly: {name}, {ex.Message}\",\r\n                    name.Length);\r\n\r\n                return Type.EmptyTypes;\r\n            }\r\n\r\n            return libraryTypes;\r\n\r\n        }\r\n\r\n\r\n        /// <inheritdoc />\r\n        protected IEnumerable<System.Reflection.TypeInfo> GetExportedTypes(string assemblyNamePattern)\r\n        {\r\n            if (assemblyNamePattern == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(assemblyNamePattern));\r\n            }\r\n\r\n            var results = new List<System.Reflection.TypeInfo>();\r\n\r\n            for (var i = 0; i < Feature.TagHelpers.Count; i++)\r\n            {\r\n                var tagHelperAssemblyName = Feature.TagHelpers[i].Assembly.GetName();\r\n\r\n                if (assemblyNamePattern.Contains(\"*\")) // is it actually a pattern?\r\n                {\r\n                    if (tagHelperAssemblyName.Name.Like(assemblyNamePattern))\r\n                    {\r\n                        results.Add(Feature.TagHelpers[i]);\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                // not a pattern so treat as normal assembly name.\r\n                var assyName = new AssemblyName(assemblyNamePattern);\r\n                if (AssemblyNameComparer.OrdinalIgnoreCase.Equals(tagHelperAssemblyName, assyName))\r\n                {\r\n                    results.Add(Feature.TagHelpers[i]);\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            return results;\r\n        }\r\n\r\n        private class AssemblyNameComparer : IEqualityComparer<AssemblyName>\r\n        {\r\n            public static readonly IEqualityComparer<AssemblyName> OrdinalIgnoreCase = new AssemblyNameComparer();\r\n\r\n            private AssemblyNameComparer()\r\n            {\r\n            }\r\n\r\n            public bool Equals(AssemblyName x, AssemblyName y)\r\n            {\r\n                // Ignore case because that's what Assembly.Load does.\r\n                return string.Equals(x.Name, y.Name, StringComparison.OrdinalIgnoreCase) &&\r\n                       string.Equals(x.CultureName ?? string.Empty, y.CultureName ?? string.Empty, StringComparison.Ordinal);\r\n            }\r\n\r\n            public int GetHashCode(AssemblyName obj)\r\n            {\r\n                var hashCode = 0;\r\n                if (obj.Name != null)\r\n                {\r\n                    hashCode ^= obj.Name.GetHashCode();\r\n                }\r\n\r\n                hashCode ^= (obj.CultureName ?? string.Empty).GetHashCode();\r\n                return hashCode;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n```\r\n\r\nBasically this let me add custom `addTagHelper` directives based on a glob pattern to match assemblies.\r\n\r\n"},{"Id":"7066540594","Type":"IssuesEvent","CreatedAt":"2018-01-07T12:43:40","Actor":"symlynk","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2746","RelatedDescription":"Opened issue \"Add support for CancellationTokens in AuthorizationHandler\" (#2746) at aspnet/Home","RelatedBody":"The following methods are missing CancellationToken parameters in Microsoft.AspNetCore.Authorization.AuthorizationHandler:\r\n\r\n```\r\npublic virtual Task HandleAsync( AuthorizationHandlerContext context );\r\nprotected abstract Task HandleRequirementAsync( AuthorizationHandlerContext context, TRequirement requirement );\r\n```\r\nMicrosoft.AspNetCore.Authorization Version 2.0.1.0"},{"Id":"7063878571","Type":"IssuesEvent","CreatedAt":"2018-01-06T00:03:09","Actor":"kichalla","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Home/issues/2408","RelatedDescription":"Reopened issue \"Determine if the antiforgery cookie is considered essential\" (#2408) at aspnet/Home","RelatedBody":"_From @Tratcher on Wednesday, December 27, 2017 1:48:50 PM_\r\n\r\nRE: aspnet/Security#1561\r\n\r\nWhen this new policy is applied all non-essential cookies will be suppressed. We need to determine if anti-forgery is considered essential by default. I expect yes as it's a security feature.\r\n\r\n@blowdart\r\n\r\n_Copied from original issue: aspnet/Antiforgery#175_"},{"Id":"7063829377","Type":"IssuesEvent","CreatedAt":"2018-01-05T23:42:13","Actor":"kichalla","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2408","RelatedDescription":"Closed issue \"Determine if the antiforgery cookie is considered essential\" (#2408) at aspnet/Home","RelatedBody":"_From @Tratcher on Wednesday, December 27, 2017 1:48:50 PM_\r\n\r\nRE: aspnet/Security#1561\r\n\r\nWhen this new policy is applied all non-essential cookies will be suppressed. We need to determine if anti-forgery is considered essential by default. I expect yes as it's a security feature.\r\n\r\n@blowdart\r\n\r\n_Copied from original issue: aspnet/Antiforgery#175_"},{"Id":"7062404803","Type":"IssuesEvent","CreatedAt":"2018-01-05T17:04:53","Actor":"jkotas","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2745","RelatedDescription":"Opened issue \"Why Cors AddPolicy doesn't allow *.example.com ?\" (#2745) at aspnet/Home","RelatedBody":"_From @AhmedRagheb on January 5, 2018 13:58_\n\nHello,\r\n\r\nIs there a reason (security may be) that prevent Cors AddPolicy from adding all subdomains of my domain in Origins list. As I think it doesn't make sense to add all my subdomains to the Origins list.\r\n\r\nThanks.\n\n_Copied from original issue: dotnet/coreclr#15753_"},{"Id":"7062344190","Type":"IssuesEvent","CreatedAt":"2018-01-05T16:51:08","Actor":"johnrutherford","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2744","RelatedDescription":"Opened issue \"DataProtection version issue: The provided payload cannot be decrypted because it was not protected with this protection provider.\" (#2744) at aspnet/Home","RelatedBody":"I'm having an issue that appears to be similar to this one: \r\nhttps://github.com/aspnet/DataProtection/issues/187\r\n\r\nWe recently upgraded an ASP.NET Core 1.1 application (targeting the .NET Framework 4.6.1) to ASP.NET Core 2. \r\n\r\nWe have started getting this error message in our logs:\r\n\r\n```\r\nThe provided payload cannot be decrypted because it was not protected with this protection provider.\r\n```\r\n\r\nI've looked at the keys our application is using and they contain this, which I think may be the problem:\r\n\r\n``` xml\r\n<descriptor deserializerType=\"Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=1.1.2.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\">\r\n```\r\n"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7066548881","Type":"IssuesEvent","CreatedAt":"2018-01-07T12:50:03","Actor":"wangboshun","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1278","RelatedDescription":"Opened issue \"check [ConnectClientId] connection status \" (#1278) at aspnet/SignalR","RelatedBody":" Do you hava a function ,use check  [ConnectClientId]  connect  status ,is connect or disconnect?\r\nAnd have a funtion ,show all connect infomation ,for example connect status ,group,clientid........?"},{"Id":"7066153299","Type":"IssuesEvent","CreatedAt":"2018-01-07T06:55:20","Actor":"harveytriana","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1277","RelatedDescription":"Opened issue \"Where is this X observer.complete() ?\" (#1277) at aspnet/SignalR","RelatedBody":"Hello -\r\n\r\nRunning the example about Streaming, published in \"Announcing SignalR (alpha) for ASP.NET Core 2.0\", StockTicker sample (https://github.com/aspnet/SignalR-samples), I suppose there is a bug. When invoking close, an error is generated in the scripts. There is no observer.complete () in signalr-client-1.0.0-alpha2-final or ES5. I publish a image here: http://www.visionary-saas.com/docs/observer-complete-issue.png\r\n\r\nWhen I disable the line (*) the error disappears, but I suppose there must be a correction to the issue. Detail:     \r\n(*)\r\nsignalr-client-1.0.0-alpha2-final.js\r\n...\r\ncomplete() {\r\n        for (let observer of this.observers) {\r\n            //* observer.complete();\r\n        }\r\n    }\r\n…\r\n\r\nRegards\r\n"},{"Id":"7064389195","Type":"IssuesEvent","CreatedAt":"2018-01-06T06:34:25","Actor":"MhAllan","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1276","RelatedDescription":"Reopened issue \"Global Authorize Filter not working with hubs\" (#1276) at aspnet/SignalR","RelatedBody":"having [Authorize] attribute works on hubs, but if we try to do it globally it fails, so this will still invoke the hub:\r\n\r\nservices.AddMvc(options =>\r\n{\r\n    var policy = new AuthorizationPolicyBuilder()\r\n                      .RequireAuthenticatedUser()\r\n                     .Build();\r\n                options.Filters.Add(new AuthorizeFilter(policy));\r\n}\r\n  "},{"Id":"7064386631","Type":"IssuesEvent","CreatedAt":"2018-01-06T06:31:50","Actor":"MhAllan","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1276","RelatedDescription":"Closed issue \"Global Authorize Filter not working with hubs\" (#1276) at aspnet/SignalR","RelatedBody":"having [Authorize] attribute works on hubs, but if we try to do it globally it fails, so this will still invoke the hub:\r\n\r\nservices.AddMvc(options =>\r\n{\r\n    var policy = new AuthorizationPolicyBuilder()\r\n                      .RequireAuthenticatedUser()\r\n                     .Build();\r\n                options.Filters.Add(new AuthorizeFilter(policy));\r\n}\r\n  "},{"Id":"7064383055","Type":"IssuesEvent","CreatedAt":"2018-01-06T06:28:26","Actor":"MhAllan","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1276","RelatedDescription":"Opened issue \"Global Authorize Filter not working with hubs\" (#1276) at aspnet/SignalR","RelatedBody":"having [Authorize] attribute works on hubs, but if we try to do it globally it fails, so this will still invoke the hub:\r\n\r\n`services.AddMvc(options =>\r\n            {\r\n                var policy = new AuthorizationPolicyBuilder()\r\n                     .RequireAuthenticatedUser()\r\n                     .Build();\r\n\r\n                options.Filters.Add(new AuthorizeFilter(policy));\r\n       }`"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7067645618","Type":"IssuesEvent","CreatedAt":"2018-01-08T01:38:30","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6256","RelatedDescription":"Closed issue \"ApiControllerActionSelector equivalent in Asp .net MVC core\" (#6256) at aspnet/Mvc","RelatedBody":"_From @ankgupta067 on April 21, 2017 10:43_\n\nhi,\r\nwe are migrating from web api to asp .net mvc core , i had an action selector in web api , in which if anyware in url \"$\" symbol exist we used to invoke a specific method in controller.\r\nthis functionality we achieved in web api using ApiControllerActionSelector  below was the code to do same in web api - \r\n\r\n ```\r\npublic override HttpActionDescriptor SelectAction(HttpControllerContext controllerContext) {\r\n            string urlDecode = HttpUtility.UrlDecode(\r\n                controllerContext.Request.RequestUri.ToString());\r\n            if (urlDecode != null && urlDecode.Contains(\"$\")) {\r\n                if (controllerContext.Request.Method == HttpMethod.Post) {\r\n                    MethodInfo method = controllerContext.ControllerDescriptor.ControllerType\r\n                        .GetMethod(\r\n                            \"PostCustomOperation\");\r\n                    return\r\n                        new ReflectedHttpActionDescriptor(\r\n                            controllerContext.ControllerDescriptor, method);\r\n                }\r\n                if (controllerContext.Request.Method == HttpMethod.Get) {\r\n                    MethodInfo method = controllerContext.ControllerDescriptor.ControllerType\r\n                        .GetMethod(\r\n                            \"GetCustomOperation\");\r\n                    return\r\n                        new ReflectedHttpActionDescriptor(\r\n                            controllerContext.ControllerDescriptor, method);\r\n                }\r\n            }\r\n            HttpActionDescriptor result = base.SelectAction(controllerContext);\r\n            return result;\r\n        }\r\n```\r\nI am not able to find an equivalent way to do same in Asp .net mvc core , i tried implementing IRouter but in that we have to specify controller as well but that is not known to me.\r\nAny suggestion on how to achieve same or is i not possible to do in Asp.net MVC core?\r\n\n\n_Copied from original issue: aspnet/Routing#400_"},{"Id":"7067643978","Type":"IssuesEvent","CreatedAt":"2018-01-08T01:37:27","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6820","RelatedDescription":"Closed issue \"Crazy Idea: Use IHostedService to 'preload' TagHelpers\" (#6820) at aspnet/Mvc","RelatedBody":"We've seen feedback in the past that doing a background warmup of Roslyn by creating an empty compilation has a measurable impact on startup perf.\r\n\r\nCan we leverage `IHostedService` to use some heuristics about when we expect Roslyn/Razor to be required and trigger tag helper discovery early? Tag Helper Discovery creates a compilation so this should have the desired effect."},{"Id":"7067643873","Type":"IssuesEvent","CreatedAt":"2018-01-08T01:37:23","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/5746","RelatedDescription":"Closed issue \"Roslyn special warmup to improve F5 scenario performance\" (#5746) at aspnet/Mvc","RelatedBody":"_From @Yves57 on December 29, 2016 11:14_\n\nOn my (old) computer, the startup (with Visual Studio 2017 RC debugger) of a basic Web Application (created with the wizard) takes about 8800ms between the F5 click and the end of HTML page loading.\r\n\r\nJust for fun, I tested an stupid idea: because a long time of the start in single-threaded and because Roslyn warmup takes a long time, it could save time to compile and empty assembly in a separate thread, just to load Rosyln assemblies \"in background\".\r\n\r\nSo I modified the `Startup` class on a wizard-created Web Application like that:\r\n\r\n```\r\npublic void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)\r\n{\r\n    RoslynWarmup();\r\n\r\n    ......\r\n    app.UseMvc(..........);\r\n    ......\r\n}\r\n\r\nprivate void RoslynWarmup()\r\n{\r\n    Task.Run(() =>\r\n    {\r\n        var source = \"namespace Foo { public class Bar { } }\";\r\n        var sourceText = SourceText.From(source);\r\n        .....\r\n        // Roslyn assembly build\r\n    }\r\n}\r\n```\r\n\r\nThe result are the following:\r\nStep | Without warmup | With warmup\r\n---- | -------------- | -----------\r\nAction execution time | ~3400ms | ~2500ms\r\nRequest finishing time | ~3880ms | ~3080ms\r\nF5 to HTML loading time | ~8800ms | ~8200ms\r\n\r\nThe idea is a dirty hack, but I don't know if there is a better idea in your pipe (I hope there is there is one!).\r\n\r\n\n\n_Copied from original issue: aspnet/Razor#918_"},{"Id":"7067638318","Type":"PullRequestEvent","CreatedAt":"2018-01-08T01:33:41","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7202","RelatedDescription":"Closed pull request \"Plumb new Razor metadata through MVC\" (#7202) at aspnet/Mvc","RelatedBody":"This change hooks up the new default Razor metadata to MVC so we can\r\nstart consuming it. This is the first step towards processing checksums\r\nin MVC."},{"Id":"7067638112","Type":"PullRequestEvent","CreatedAt":"2018-01-08T01:33:33","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7204","RelatedDescription":"Closed pull request \"Add functional tests for Razor re-compilation\" (#7204) at aspnet/Mvc","RelatedBody":"This adds functional tests that show the desired behavior for Razor\r\nre-compilation.\r\n\r\nUsing the precompilation tool show result in views/pages that don't\r\nsupport updates.\r\n\r\nUsing the Rzc (msbuild) will result in views/pages that are only used\r\nif they pass a checksum test on startup.\r\n\r\nThe rzc support is about to land, but I thought it made sense to spec\r\nout the tests first."},{"Id":"7067637383","Type":"PullRequestEvent","CreatedAt":"2018-01-08T01:33:01","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7206","RelatedDescription":"Opened pull request \"Adds support for recompilation of views/pages\" (#7206) at aspnet/Mvc","RelatedBody":"See the individual commits for details"},{"Id":"7067540796","Type":"IssuesEvent","CreatedAt":"2018-01-08T00:21:28","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7195","RelatedDescription":"Closed issue \"ModelState error \"Request timed out.\" on OnActionExecutionAsync\" (#7195) at aspnet/Mvc","RelatedBody":"I'm using asp.net core mvc 2.0 on full .net and I'm experiencing an issue in an azure prod web app that I don't understand.\r\n\r\nI have a custom `IAsyncActionFilter` and in the `OnActionExecutionAsync` I inspect `context.ModelState` and sometimes there is an error saying \"Request timed out.\" (Key is empty string)\r\n\r\nIf I understand correctly OnActionExecutionAsync executes directly after the model binding, so how could there be a timeout? and how do I track the source?\r\n\r\n```\r\npublic async Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next)\r\n        {\r\n            if (!context.ModelState.IsValid)\r\n            {\r\n                //context.ModelState dictionary contains a \"Request timed out.\" entry.\r\n...\r\n            }\r\n...\r\n        }\r\n```\r\n\r\nThanks"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7059095918","Type":"PullRequestEvent","CreatedAt":"2018-01-04T23:23:01","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1554","RelatedDescription":"Merged pull request \"Merge release/2.0.0 (without changes)\" (#1554) at aspnet/Identity","RelatedBody":"Resolves #1522 \r\n\r\nChanges on this branch were already cherry-picked to dev\r\n  "},{"Id":"7059082029","Type":"PullRequestEvent","CreatedAt":"2018-01-04T23:18:22","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1554","RelatedDescription":null,"RelatedBody":"Resolves #1522 \r\n\r\nChanges on this branch were already cherry-picked to dev\r\n  "},{"Id":"7059070694","Type":"PullRequestEvent","CreatedAt":"2018-01-04T23:14:25","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1554","RelatedDescription":"Closed pull request \"Merge release/2.0.0 (without changes)\" (#1554) at aspnet/Identity","RelatedBody":"Resolves #1522 \r\n\r\nChanges on this branch were already cherry-picked to dev\r\n  "},{"Id":"7059065255","Type":"IssuesEvent","CreatedAt":"2018-01-04T23:12:33","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1522","RelatedDescription":"Closed issue \"Merge all changes from release/2.0.0 back to dev\" (#1522) at aspnet/Identity","RelatedBody":"I'm not sure https://github.com/aspnet/Identity/pull/1485 made it back into dev. I tried merge the branches and there were a bunch of conflicts. We should look into this closer."},{"Id":"7059030766","Type":"PullRequestEvent","CreatedAt":"2018-01-04T23:01:24","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1554","RelatedDescription":"Opened pull request \"Merge release/2.0.0 (without changes)\" (#1554) at aspnet/Identity","RelatedBody":"Resolves #1522 "}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7067540680","Type":"IssuesEvent","CreatedAt":"2018-01-08T00:21:23","Actor":"rynowak","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2245","RelatedDescription":"Opened issue \"ModelState error \"Request timed out.\" on OnActionExecutionAsync\" (#2245) at aspnet/KestrelHttpServer","RelatedBody":"_From @clement911 on January 5, 2018 2:30_\n\nI'm using asp.net core mvc 2.0 on full .net and I'm experiencing an issue in an azure prod web app that I don't understand.\r\n\r\nI have a custom `IAsyncActionFilter` and in the `OnActionExecutionAsync` I inspect `context.ModelState` and sometimes there is an error saying \"Request timed out.\" (Key is empty string)\r\n\r\nIf I understand correctly OnActionExecutionAsync executes directly after the model binding, so how could there be a timeout? and how do I track the source?\r\n\r\n```\r\npublic async Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next)\r\n        {\r\n            if (!context.ModelState.IsValid)\r\n            {\r\n                //context.ModelState dictionary contains a \"Request timed out.\" entry.\r\n...\r\n            }\r\n...\r\n        }\r\n```\r\n\r\nThanks\n\n_Copied from original issue: aspnet/Mvc#7195_"},{"Id":"7062496075","Type":"IssuesEvent","CreatedAt":"2018-01-05T17:26:20","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2182","RelatedDescription":"Closed issue \"Change ITlsApplicationProtocolFeature.ApplicationProtocol to Span<byte>\" (#2182) at aspnet/KestrelHttpServer","RelatedBody":"https://github.com/aspnet/KestrelHttpServer/blob/76de77746dd900058f7bd49f66debdd245cf9260/src/Kestrel.Core/Features/ITlsApplicationProtocolFeature.cs#L7-L10\r\n\r\nThis property should not be represented as a string because the ALPN spec intentionally defines it as an \"opaque byte string\" and not a textual string:\r\n\r\n> Protocols are named by IANA-registered, opaque, non-empty byte strings, as described further in Section 6 (\"IANA Considerations\") of this document.\r\n>\r\n> https://tools.ietf.org/html/rfc7301#section-3.1\r\n\r\nThe fact that the currently-registered values are all valid UTF-8 strings is not required by the spec so we shouldn't require it in our type.\r\n\r\nWe could use `byte[]`, which is relatively safe performance-wise since in fast paths this will almost always be set to an existing constant value. Or we could go with the new hotness and make it return `ReadOnlyMemory<byte>`. Probably the latter is best even if we always just end up backing it with a predefined constant array.\r\n\r\n/cc @benaadams @Tratcher @davidfowl "},{"Id":"7062169061","Type":"IssuesEvent","CreatedAt":"2018-01-05T16:13:02","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2244","RelatedDescription":"Opened issue \"Query Does Kestrel support OCSP Stapling\" (#2244) at aspnet/KestrelHttpServer","RelatedBody":"_From @rsrinivasanhome on January 5, 2018 13:28_\n\nDoes Kestrel Support OCSP Stapling ?  I am not able to find any links on google.\r\n\n\n_Copied from original issue: aspnet/AspNetCoreModule#283_"},{"Id":"7059903637","Type":"IssuesEvent","CreatedAt":"2018-01-05T05:13:55","Actor":"rynowak","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2241","RelatedDescription":"Closed issue \"ConnectionResetException with 2.0.0 kestrel running on netcoreapp2.1\" (#2241) at aspnet/KestrelHttpServer","RelatedBody":"We hit this in issue in JitBench running on the ASP.NET Core 2.0.0 libraries against latest bits of CoreFx. See https://github.com/aspnet/JitBench/issues/80\r\n\r\nThe easiest way to repro is:\r\nClone aspnet/JitBench\r\nrun appveyor.ps1 (that will fail)\r\ndotnet run or launch VS from the same console.\r\n\r\nJitBench will throw trying to do an HTTP request as part of it's measurements, but the more interesting part is that that site is unreachable using a browser.\r\n\r\n```\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.Internal.ConnectionResetException\r\n  HResult=0x80131620\r\n  Message=Error -4077 ECONNRESET connection reset by peer\r\n  Source=Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions\r\n  StackTrace:\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed()\r\n\r\nInner Exception 1:\r\nUvException: Error -4077 ECONNRESET connection reset by peer\r\n\r\n>\tMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.dll!Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed()\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.dll!Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.GetResult(ref Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadResult result)\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.dll!Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IReadableBufferAwaiter.GetResult()\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>.ProcessRequestsAsync()\tUnknown\r\n \tSystem.Private.CoreLib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state)\tUnknown\r\n \tSystem.Private.CoreLib.dll!System.Runtime.CompilerServices.AsyncTaskMethodBuilder<System.Threading.Tasks.VoidTaskResult>.AsyncStateMachineBox<Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.Frame<Microsoft.AspNetCore.Hosting.Internal.HostingApplication.Context>.<ProcessRequestsAsync>d__2>.MoveNext()\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.dll!Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe..cctor.AnonymousMethod__67_3(object o)\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.LoggingThreadPool.Schedule.AnonymousMethod__0()\tUnknown\r\n \tMicrosoft.AspNetCore.Server.Kestrel.Core.dll!Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.LoggingThreadPool.RunAction.AnonymousMethod__3_0(object o)\tUnknown\r\n \tSystem.Private.CoreLib.dll!System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state)\tUnknown\r\n \tSystem.Private.CoreLib.dll!System.Threading.ThreadPoolWorkQueue.Dispatch()\tUnknown\r\n\r\n```\r\n\r\ndotnet --info\r\n```\r\n.NET Command Line Tools (2.2.0-preview1-007855)\r\n\r\nProduct Information:\r\n Version:            2.2.0-preview1-007855\r\n Commit SHA-1 hash:  5be3d62b82\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   D:\\k\\JitBench\\.dotnet\\sdk\\2.2.0-preview1-007855\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview1-26102-01\r\n  Build    : 280fa5d18f7d5b233fbb81572801b9a3fb1ae12a\r\n```"},{"Id":"7059252030","Type":"IssuesEvent","CreatedAt":"2018-01-05T00:20:47","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2182","RelatedDescription":"Reopened issue \"Change ITlsApplicationProtocolFeature.ApplicationProtocol to Span<byte>\" (#2182) at aspnet/KestrelHttpServer","RelatedBody":"https://github.com/aspnet/KestrelHttpServer/blob/76de77746dd900058f7bd49f66debdd245cf9260/src/Kestrel.Core/Features/ITlsApplicationProtocolFeature.cs#L7-L10\r\n\r\nThis property should not be represented as a string because the ALPN spec intentionally defines it as an \"opaque byte string\" and not a textual string:\r\n\r\n> Protocols are named by IANA-registered, opaque, non-empty byte strings, as described further in Section 6 (\"IANA Considerations\") of this document.\r\n>\r\n> https://tools.ietf.org/html/rfc7301#section-3.1\r\n\r\nThe fact that the currently-registered values are all valid UTF-8 strings is not required by the spec so we shouldn't require it in our type.\r\n\r\nWe could use `byte[]`, which is relatively safe performance-wise since in fast paths this will almost always be set to an existing constant value. Or we could go with the new hotness and make it return `ReadOnlyMemory<byte>`. Probably the latter is best even if we always just end up backing it with a predefined constant array.\r\n\r\n/cc @benaadams @Tratcher @davidfowl "}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7067937694","Type":"PullRequestEvent","CreatedAt":"2018-01-08T04:26:38","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1914","RelatedDescription":"Opened pull request \"Rename some things\" (#1914) at aspnet/Razor","RelatedBody":""},{"Id":"7067899801","Type":"IssuesEvent","CreatedAt":"2018-01-08T04:03:01","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1875","RelatedDescription":"Closed issue \"Razor needs to had hashes of input files to compiled runtime code\" (#1875) at aspnet/Razor","RelatedBody":"We need the hashes of source file inputs so we can decide whether or not to recompile at runtime."},{"Id":"7067813790","Type":"PullRequestEvent","CreatedAt":"2018-01-08T03:16:47","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1905","RelatedDescription":"Merged pull request \"Add support for CopyBuildOutputToOutputDirectory and CopyOutputSymbolsToOutputDirectory\" (#1905) at aspnet/Razor","RelatedBody":"Fixes #1896"},{"Id":"7067813786","Type":"IssuesEvent","CreatedAt":"2018-01-08T03:16:47","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1896","RelatedDescription":"Closed issue \"Ensure copying settings work for Razor.Design\" (#1896) at aspnet/Razor","RelatedBody":"* `CopyBuildOutputToOutputDirectory` = false should skip copying precompiled binary to ouput directory\r\n* `CopyBuildOutputToPublishDirectory` = false should skip copying precompiled binary to publish directory\r\n* `CopyOutputSymbolsToOutputDirectory` = false or `SkipCopyingSymbolsToOutputDirectory` = true should skip copying pdbs to output directory\r\n* `CopyOutputSymbolsToPublishDirectory` = false should skip copying pdbs to publish directory"},{"Id":"7065917581","Type":"IssuesEvent","CreatedAt":"2018-01-07T02:50:13","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1913","RelatedDescription":"Opened issue \"Flaky test: WorkspaceChanged_ProjectRemovedEvent_RemovesProject \" (#1913) at aspnet/Razor","RelatedBody":"I saw this fail on appveyor, and it looks like virtually none of our code is on the stack. \r\n\r\nhttps://ci.appveyor.com/project/aspnetci/razor/build/1.0.3753"},{"Id":"7065911001","Type":"PullRequestEvent","CreatedAt":"2018-01-07T02:43:03","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1911","RelatedDescription":"Merged pull request \"Add an Identifier by default\" (#1911) at aspnet/Razor","RelatedBody":"Using the MVC view engine convention for identifiers seems to make the\r\nmost sense, and we already use that convention for RazorProject so I\r\nguess we're stuck with it."},{"Id":"7065710786","Type":"IssuesEvent","CreatedAt":"2018-01-06T23:42:23","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1912","RelatedDescription":"Opened issue \"RazorGenerate and RazorCompile don't work with multi-targeting\" (#1912) at aspnet/Razor","RelatedBody":"You can't call these targets at the command line using `dotnet msbuild /t:RazorGenerate` if the project does multi-targeting"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6760798601","Type":"IssuesEvent","CreatedAt":"2017-10-24T22:00:58","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/67","RelatedDescription":"Closed issue \"External Logins does not set the Email\" (#67) at aspnet/Templates","RelatedBody":"- Enable Facebook Login\n- Login using Facebook for the first time\n- Email field is blank. It should be set from what we got from Facebook\n"},{"Id":"6760789807","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:58:48","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/86","RelatedDescription":"Closed issue \"Identity: Consider less generic name for ManageController\" (#86) at aspnet/Templates","RelatedBody":"Manage is a very generic name and you would probably expect http://abcdefg/Manage to be about managing something from your applications business domain rather than user accounts.\n\nManageAccount would probably be a better name.\n"},{"Id":"6760785159","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:57:37","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/115","RelatedDescription":"Closed issue \"Need more templates\" (#115) at aspnet/Templates","RelatedBody":"MVC 6 project templates should include a test project template. And the main ASP.NET 5 Preview Templates / Web Application or ... / Empty templates should have a few more sub-options, enabling for example addition and removal of XML support, creation of a minimal MVC project, or adding in EF (without choosing Individual User Accounts authentication).\n\nHopefully this will allow the new project dialogue to enable the options shown below -- plus a few options specific to MVC 6.\n![disabled project features](https://cloud.githubusercontent.com/assets/6431421/8257821/2a76a606-1665-11e5-8e75-cdb21473f6a1.png)\n"},{"Id":"6760779940","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:56:18","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/104","RelatedDescription":"Closed issue \"OrgAuth: Account Controller should return void\" (#104) at aspnet/Templates","RelatedBody":"Since https://github.com/aspnet/Mvc/issues/2409 is fixed. We should change the AccountController for SSO/ MultiOrg to return void\n"},{"Id":"6760777806","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:46","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/120","RelatedDescription":"Closed issue \"Template feedback\" (#120) at aspnet/Templates","RelatedBody":"Porting from MVC repo https://github.com/aspnet/Mvc/issues/2637\n"},{"Id":"6760775251","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:10","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/137","RelatedDescription":"Closed issue \"Need a SPA template\" (#137) at aspnet/Templates","RelatedBody":""},{"Id":"6760770959","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:54:08","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/365","RelatedDescription":"Closed issue \"Poor user and dev experience in Identity email confirmation\" (#365) at aspnet/Templates","RelatedBody":"There are two issues using the default template for identity when using email confirmation.\n\nFollowing the guide here: http://docs.asp.net/en/latest/security/authentication/accconfirm.html\n\nPoor user experience: When you click \"Register\" it sends the email off, but just redirects the user to the Home controller. Redirecting to something else to indicate they have to confirm their account would be a better example. Perhaps the default template should have such a view OOTB.\n\nPoor dev experience: When logging in with an external account (lets say Facebook) if the account doesn't exist you get thrown into AccountController.ExternalLoginConfirmation, great. This screen requires an email, so you complete the registration then you're logged in but never shoots off the email confirmation link here. Perhaps a commented out section in this action to deal with this would improve the dev experience here.\n"},{"Id":"6760770378","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:59","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/382","RelatedDescription":"Closed issue \"MVC Template Should Apply ResponseCache Attribute to Error Action\" (#382) at aspnet/Templates","RelatedBody":"HomeController.Error() should be updated:\n\n```\n    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]\n    public IActionResult Error()\n    {\n        return View();\n    }\n```\n\nThere is no good scenario where you would want errors to be cached, either on the client or via a proxy, or to have error information stored in such caches (especially if it might contain sensitive information in stack traces, etc.).\n"},{"Id":"6760769801","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:51","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/406","RelatedDescription":"Closed issue \"Add a flow for changing email in the Manage page\" (#406) at aspnet/Templates","RelatedBody":"Porting from ASP.NET Identity repo https://github.com/aspnet/Identity/issues/727\n"},{"Id":"6760769204","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:42","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/423","RelatedDescription":"Closed issue \"Don't create Project_Readme.html for ASP.NET 5 Empty\" (#423) at aspnet/Templates","RelatedBody":"I created an empty project for both ASP.NET 4 and ASP.NET 5. The ASP.NET 5 project had a Project_Readme.html and the ASP.NET 4 one did not. I'm not aware if that was on purpose or not, but we should be consistent with the empty projects. I think we should not add the Project_Readme.html for all Empty projects.\n"},{"Id":"6760768174","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:28","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/444","RelatedDescription":"Closed issue \"Support On-Premises option for Work & School Accounts\" (#444) at aspnet/Templates","RelatedBody":"Support this for Web APIs and Web Apps.\n"},{"Id":"6760767634","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:19","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/451","RelatedDescription":"Closed issue \"ValidationSummary.All should be replaced with ModelOnly\" (#451) at aspnet/Templates","RelatedBody":"All the views in the Accounts folder use\n`<div asp-validation-summary=\"ValidationSummary.All\" class=\"text-danger\"></div>`\n\nThey should just use \n`<div asp-validation-summary=\"ValidationSummary.ModelOnly\" class=\"text-danger\"></div>`\n\nSo you get each error twice. \n\n![image](https://cloud.githubusercontent.com/assets/3605364/13896326/ae916ee2-ed2b-11e5-8bf5-f9ad5246e82c.png)\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7065973641","Type":"PullRequestEvent","CreatedAt":"2018-01-07T03:48:49","Actor":"cartermp","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1062","RelatedDescription":"Closed pull request \"Update migrate-sql-server.md\" (#1062) at aspnet/Tooling","RelatedBody":"Removed product links in favor of all docs links, changed wording slightly, and moved Get Started to be at the top."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7048395292","Type":"IssuesEvent","CreatedAt":"2018-01-02T17:35:05","Actor":"Eilon","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/283","RelatedDescription":"Opened issue \"Using the \"Home\" repo for issue management of other repos\" (#283) at aspnet/Announcements","RelatedBody":"Hi all,\r\n\r\nWe are experimenting to try and use the [Home repo's issue tracker](https://github.com/aspnet/Home/issues) to manage issues for multiple repos. To start with, we have moved the bugs from several other repos to the Home repo, and we will retire the issue trackers of those other repos.\r\n\r\nWe are doing this to try to improve the experience of logging issues for ASP.NET Core.\r\n\r\n* Labels in the form of `repo:RepoName` are used to associate the bug with a product/feature area\r\n* For issue trackers that moved to the Home repo, please log new issues in the Home repo. If a bug is logged in a moved issue tracker, it will be closed.\r\n* Over time, we plan to consolidate more issue trackers into the Home repo\r\n\r\nFor discussions on this topic, please go to https://github.com/aspnet/Home/issues/2736.\r\n\r\nThanks,\r\nEilon\r\n"},{"Id":"6909206856","Type":"IssuesEvent","CreatedAt":"2017-11-27T20:34:10","Actor":"pranavkm","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/282","RelatedDescription":"Opened issue \"aspnetcore-ci-*, aspnetcore-volatile-* feeds being deprecated\" (#282) at aspnet/Announcements","RelatedBody":"As part of some of our infrastructural changes, we're discontinuing the use of the following feeds and may remove them entirely in the future:\r\n* https://dotnet.myget.org/f/aspnetcore-ci-dev \r\n* https://dotnet.myget.org/f/aspnetcore-ci-release\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-dev\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-release\r\n\r\nIf you're currently using one of these feeds in your projects to pick up our daily builds, we recommend migrating to https://dotnet.myget.org/f/aspnetcore-dev.\r\n\r\nPlease use this discussion topic - https://github.com/aspnet/Home/issues/2292 - for feedback and questions. "}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"949414507759124480","CreatedAt":"2018-01-05T22:57:12+00:00","UserScreenname":"aspnet","Text":"Announcing Preview 1 of #ASPNET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 https://t.co/xVYhW7ospD","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":103,"FavoriteCount":62,"RawContent":null},{"Id":"948916811034234882","CreatedAt":"2018-01-04T13:59:32+00:00","UserScreenname":"aspnet","Text":"At 10am ET, join our Jeff Fritz (@csharpfritz) for LIVE CODING and he'll answer your questions and .NET, ASPNet, an… https://t.co/SPEnBXEEbC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":5,"RawContent":null},{"Id":"948343098278477824","CreatedAt":"2018-01-02T23:59:48+00:00","UserScreenname":"aspnet","Text":"The ASPNET Community Standup is live at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":5,"RawContent":null},{"Id":"944564608404205568","CreatedAt":"2017-12-23T13:45:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz - @csharpfritz and MVP @IrisClasson in about an hour for LIVE CODING and pair programming on… https://t.co/RuFa6Hh6S7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":16,"FavoriteCount":5,"RawContent":null},{"Id":"943234846289289217","CreatedAt":"2017-12-19T21:41:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz (@csharpfritz) in a little more than 2 hours for LIVE CODING. He's working on an @aspnet Core p… https://t.co/wEDxxFaCxu","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"942039735207448576","CreatedAt":"2017-12-16T14:32:29+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz in 30 minutes for some LIVE CODING and answering your questions about .NET and Visual Studio.  https://t.co/OakzDOKxUB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"941295101271212032","CreatedAt":"2017-12-14T13:13:35+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz at 10am ET for a LIVE CODING session.  He'll answer your questions about .NET, Visual Studio, a… https://t.co/aG5z9e5Rgr","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":5,"RawContent":null},{"Id":"941015999809249280","CreatedAt":"2017-12-13T18:44:32+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz in about 15 minutes on Mixer or Twitch for a two-hour LIVE .NET CODING session where he will answ… https://t.co/OC1nGXILjO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938192857902354432","CreatedAt":"2017-12-05T23:46:22+00:00","UserScreenname":"aspnet","Text":"We're live for the #ASPNET Community Standup now at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938163679614214144","CreatedAt":"2017-12-05T21:50:26+00:00","UserScreenname":"aspnet","Text":"Join us for the #aspnet Community Standup today at 3:45 PM Pacific time - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":6,"RawContent":null},{"Id":"931580871378964481","CreatedAt":"2017-11-17T17:52:42+00:00","UserScreenname":"aspnet","Text":"Check out our new ConfigurationBuilders that make it easier than ever to use Azure Key Vault, Environment Variables… https://t.co/itxdVWOnG5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":36,"FavoriteCount":7,"RawContent":null},{"Id":"917884946324250624","CreatedAt":"2017-10-10T22:49:59+00:00","UserScreenname":"aspnet","Text":"The #aspnet Community Standup starts now - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":8,"RawContent":null}]}},"RunOn":"2018-01-08T05:30:18.9606628Z","RunDurationInMilliseconds":7898}