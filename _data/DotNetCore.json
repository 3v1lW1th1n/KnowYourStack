{"Data":{"Blog":{"FeedItems":[{"Title":"Update on .NET Core 3.0 and .NET Framework 4.8","PublishedOn":"2018-10-04T16:29:57+00:00","CommentsCount":57,"FacebookCount":0,"Summary":"In May, we announced .NET Core 3.0, the next major version of .NET Core that adds support for building desktop applications using WinForms, WPF, and Entity Framework 6. We also announced some exciting...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/04/update-on-net-core-3-0-and-net-framework-4-8/","RawContent":null},{"Title":".NET Core October 2018 Update – NET Core 2.1.5 & SDK 2.1.403","PublishedOn":"2018-10-02T15:31:06+00:00","CommentsCount":9,"FacebookCount":0,"Summary":".NET Core October 2018 Update Today, we are releasing the .NET Core October 2018 Update. This update includes .NET Core 2.1.5 and .NET Core SDK 2.1.403 and contains important reliability fixes....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/02/net-core-october-2018-update/","RawContent":null},{"Title":".NET Framework September 2018 Preview of Quality Rollup","PublishedOn":"2018-09-25T19:36:58+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Late last week we released the September 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Updated code to prevent...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/25/net-framework-september-2018-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing Cumulative Updates for .NET Framework for Windows 10 October 2018 Update","PublishedOn":"2018-09-19T22:30:19+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"We deliver .NET Framework updates nearly every month, through Windows Update and other distribution channels. We are making changes to the way that we deliver those updates. We’ll soon start...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/19/announcing-cumulative-updates-for-net-framework-for-windows-10-october-2018-update/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3646","PublishedOn":"2018-09-18T02:38:06+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/17/announcing-net-framework-4-8-early-access-build-3646/","RawContent":null},{"Title":"Announcing .NET Core 2.2 Preview 2","PublishedOn":"2018-09-12T19:26:59+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.2 Preview 2. We have great improvements that we want to share and that we would love to get your feedback on, either in the comments or at dotnet/core #1938....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/announcing-net-core-2-2-preview-2/","RawContent":null},{"Title":"Announcing ‘Machine Learning .NET’ 0.5","PublishedOn":"2018-09-12T18:55:34+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Today, coinciding with the .NET Conf 2018, we&#8217;re announcing the release of ML.NET 0.5. It’s been a few months already since we released ML.NET 0.1 at //Build 2018, a cross-platform, open source...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/announcing-ml-net-0-5/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.2 Preview 2 and the preview of the Cosmos DB provider and spatial extensions for EF Core","PublishedOn":"2018-09-12T17:04:13+00:00","CommentsCount":16,"FacebookCount":0,"Summary":"Today we are making EF Core 2.2 Preview 2 available, together with a preview of our data provider for Cosmos DB and new spatial extensions for our SQL Server and in-memory providers. Obtaining the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/announcing-entity-framework-core-2-2-preview-2/","RawContent":null},{"Title":"A (Belated) Welcome to C# 7.3","PublishedOn":"2018-09-12T17:00:52+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"A (Belated) Welcome to C# 7.3 Better late than never! Some of you may have noticed that C# 7.3 already shipped, back in Visual Studio 2017 update 15.7. Some of you may even be using the features...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/12/a-belated-welcome-to-c-7-3/","RawContent":null},{"Title":".NET Framework September 2018 Security and Quality Rollup","PublishedOn":"2018-09-11T18:36:50+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Updated: September 21, 2018 SharePoint workflows may stop working after installing this update.  See SharePoint workflows stop working after you install .NET security updates for CVE-2018-8421 for...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8341294365","Type":"IssuesEvent","CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Opened issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112) at dotnet/foundation","RelatedBody":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n"},{"Id":"8203056810","Type":"IssuesEvent","CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/111","RelatedDescription":"Opened issue \"Sourcelink location is confusing\" (#111) at dotnet/home","RelatedBody":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section."},{"Id":"8173033759","Type":"PullRequestEvent","CreatedAt":"2018-08-27T16:21:56","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Merged pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8163761410","Type":"PullRequestEvent","CreatedAt":"2018-08-24T15:35:46","Actor":"jkonicki","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Opened pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8160074991","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:10:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/108","RelatedDescription":"Merged pull request \"Fix errors in projects.json\" (#108) at dotnet/home","RelatedBody":""},{"Id":"8160071932","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:09:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/109","RelatedDescription":"Merged pull request \"Add Steeltoe to the project listing\" (#109) at dotnet/home","RelatedBody":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks."},{"Id":"8159331036","Type":"PullRequestEvent","CreatedAt":"2018-08-23T20:13:18","Actor":"jkonicki","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/109","RelatedDescription":"Opened pull request \"Add Steeltoe to the project listing\" (#109) at dotnet/home","RelatedBody":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks."},{"Id":"8147233541","Type":"PullRequestEvent","CreatedAt":"2018-08-21T22:39:06","Actor":"anthonychu","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/108","RelatedDescription":"Opened pull request \"Fix errors in projects.json\" (#108) at dotnet/home","RelatedBody":""},{"Id":"8131503388","Type":"PullRequestEvent","CreatedAt":"2018-08-17T23:19:54","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/105","RelatedDescription":"Merged pull request \"Add DLR/IronPython2/IronPython3\" (#105) at dotnet/home","RelatedBody":"Add DLR/IronPython2/IronPython3 to project list."},{"Id":"8075734624","Type":"IssuesEvent","CreatedAt":"2018-08-07T07:06:40","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/home/issues/104","RelatedDescription":"Closed issue \"About still mentions CodePlex\" (#104) at dotnet/home","RelatedBody":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?"},{"Id":"7951838452","Type":"IssuesEvent","CreatedAt":"2018-07-11T18:28:16","Actor":"Eilon","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/107","RelatedDescription":"Opened issue \"Links to .NET Foundation web site use HTTP instead of HTTPS\" (#107) at dotnet/home","RelatedBody":"It appears that HTTPS works just fine: https://www.dotnetfoundation.org/\r\n\r\nBut the links at these places use HTTP:\r\n1. The link in the header of https://github.com/dotnet/home\r\n2. The link in the header of https://github.com/dotnet\r\n3. Some links in https://github.com/dotnet/home/blob/master/README.md (both to .NET Foundation, and a GitHub link to another project)\r\n\r\nThese links should all change to HTTPS."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8377166566","Type":"IssuesEvent","CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Opened issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87) at dotnet/announcements","RelatedBody":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```"},{"Id":"8362210504","Type":"IssuesEvent","CreatedAt":"2018-10-03T16:11:10","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Opened issue \".NET Core 2.0 has reached end of life\" (#86) at dotnet/announcements","RelatedBody":"On October 1, 2018 .NET Core 2.0 reached end of life. This means the version channel is no longer supported and updates will no longer be provided. We recommend moving to a supported release. See our [support policy](https://www.microsoft.com/net/platform/support-policy) for more details.\r\n\r\nWe understand there will be needs to access end of life versions so downloads and Docker images will remain available. \r\n\r\n* 2.0 downloads will still be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). You will see notifications on the site indicating the end of life status. \r\n* 2.0 links have been removed from the [microsoft/donet Docker page](https://hub.docker.com/r/microsoft/dotnet/) though images will remain on the system.\r\n\r\n"},{"Id":"8279098039","Type":"IssuesEvent","CreatedAt":"2018-09-18T01:10:24","Actor":"spshant","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Opened issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85) at dotnet/announcements","RelatedBody":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n"},{"Id":"8247970519","Type":"IssuesEvent","CreatedAt":"2018-09-11T17:00:56","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](***TDB***).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n"},{"Id":"8220412616","Type":"IssuesEvent","CreatedAt":"2018-09-05T20:56:26","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Opened issue \".NET Core Runtime ARM64 Status\" (#82) at dotnet/announcements","RelatedBody":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\n## Current Status\r\n\r\nARM64 is currently broken in .NET Core 3.0 builds. See:\r\n\r\n* [dotnet/coreclr #19805](https://github.com/dotnet/coreclr/issues/19805)\r\n* [dotnet/coreclr #19822](https://github.com/dotnet/coreclr/issues/19822)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following operating systems:\r\n\r\n* Ubuntu 16.04\r\n* Windows 10\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)"},{"Id":"8152375982","Type":"IssuesEvent","CreatedAt":"2018-08-22T18:23:02","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/80","RelatedDescription":"Closed issue \"Improving Performance of ARM32 Docker Images with .NET Core Package Cache\" (#80) at dotnet/announcements","RelatedBody":"# Improving Performance of ARM32 Docker Images with .NET Core Package Cache\r\n\r\n.NET Core SDK distributions include a compressed copy of NuGet packages for .NET Core, ASP.NET Core and EF Core. These packages are decompressed upon installation of the .NET Core SDK. The packages are not currently included in ARM32 distributions due to the time and space cost to decompress the packages. Instead, they will be added to [.NET Core ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/), where these costs can be paid as part of image creation.\r\n\r\nThese NuGet packages include content for two purposes:\r\n\r\n- Reference assemblies for .NET Core, for code compilation.\r\n- Pre-compiled assemblies (compiled with [crossgen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md)) for .NET Core, for use in self-contained applications.\r\n\r\nIn both cases, the presence of these packages avoid the need to access remote NuGet feeds for .NET Core assemblies as part of package restore.\r\n\r\nThis change only affects [.NET Core 2.1 SDK ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/). This change will be made in August 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #653](https://github.com/dotnet/dotnet-docker/issues/653)\r\n\r\n## .NET Core SDK NugetFallbackFolder\r\n\r\nThe .NET Core SDK includes a compressed copy of all NuGet package, in LZMA format. It exists at the following version-specific location:\r\n\r\n```\r\nroot@3778032bc43d:/# ls -l /usr/share/dotnet/sdk/2.1.302/*.lzma\r\n-rw-r--r-- 1 1004 sudo 35995936 Jul  2 22:51 /usr/share/dotnet/sdk/2.1.302/nuGetPackagesArchive.lzma\r\n```\r\n\r\nThis file is decompressed to the following location: `/usr/share/dotnet/sdk/NuGetFallbackFolder/`\r\n\r\nA package restore for a .NET Core assembly will restore the assembly from the NuGetFallbackFolder location and copy it to the user NuGet cache. At that point, regular NuGet behavior is used.\r\n\r\n## Impact of this change\r\n\r\nThere should be no functional difference in behavior after this change. .NET SDK commands should complete faster and require fewer package restore network requests.\r\n\r\nThe following examples demonstrates the benefit of this change. The improvement can be observed with package restore. Build times (assuming no restore) are not affected.\r\n\r\n### .NET Core 2.1 SDK image after this change\r\n\r\n> The change has already been made in the `microsoft/dotnet-nightly` repo, as you can see in the example below. In August, this same change will be made available in the `microsoft/dotnet` repo.\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet-nightly:2.1-sdk\r\nroot@416731f24915:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 6.68 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m32.496s\r\nuser    0m35.820s\r\nsys     0m4.280s\r\nroot@416731f24915:/# cd mvcapp/\r\nroot@416731f24915:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.8.138-preview+ge0cd4f1c1f for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 524.78 ms for /mvcapp/mvcapp.csproj.\r\n/usr/share/dotnet/sdk/2.1.401-preview-009081/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(143,5): message NETSDK1057: You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452 [/mvcapp/mvcapp.csproj]\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:09.15\r\n\r\nreal    2m13.377s\r\nuser    1m25.260s\r\nsys     0m9.420s\r\nroot@416731f24915:/mvcapp#\r\n```\r\n\r\n### .NET Core 2.1 SDK image before this change\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet:2.1-sdk\r\nroot@9d1d5e45df6a:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Private.DataContractSerialization 4.3.0.\r\n  Installing System.Security.Principal 4.3.0.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.App 2.1.1.\r\n  Installing runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.AspNetCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Antiforgery 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Session 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.KeyPerFile 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Embedded 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Physical 2.1.1.\r\n  Installing Microsoft.Extensions.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Cookies 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Core 2.1.1.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.Authentication.Google 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Facebook 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting.Abstractions 2.1.1.\r\n  Installing runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.HttpsPolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.MicrosoftAccount 2.1.1.\r\n  Installing Microsoft.Extensions.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.MiddlewareAnalysis 2.1.1.\r\n  Installing Microsoft.Extensions.FileSystemGlobbing 2.1.1.\r\n  Installing Microsoft.Extensions.DiagnosticAdapter 2.1.0.\r\n  Installing Microsoft.Extensions.Identity.Core 2.1.1.\r\n  Installing Microsoft.Extensions.Identity.Stores 2.1.1.\r\n  Installing Microsoft.Extensions.Options.ConfigurationExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Localization.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Abstractions 2.1.1.\r\n  Installing runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Options 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Composite 2.1.1.\r\n  Installing Microsoft.Extensions.Logging 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.TraceSource 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.UserSecrets 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Debug 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Console 2.1.1.\r\n  Installing Microsoft.Extensions.DependencyInjection 2.1.1.\r\n  Installing Microsoft.Extensions.ObjectPool 2.1.1.\r\n  Installing runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Binder 2.1.1.\r\n  Installing runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.FileExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Memory 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.CommandLine 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Abstractions 2.1.1.\r\n  Installing Microsoft.Net.Http.Headers 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.InMemory 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Ini 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.StaticFiles 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Relational 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Https 2.1.1.\r\n  Installing Microsoft.Extensions.Primitives 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel 2.1.1.\r\n  Installing Microsoft.Extensions.WebEncoders 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebUtilities 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR 1.0.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Tools 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Rewrite 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCompression 2.1.1.\r\n  Installing System.Globalization.Extensions 4.3.0.\r\n  Installing Microsoft.AspNetCore.Razor.Language 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.TagHelpers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Runtime 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.RazorPages 2.1.1.\r\n  Installing Microsoft.AspNetCore.Owin 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.ViewCompilation 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Json 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebSockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Cors 2.1.1.\r\n  Installing System.Diagnostics.DiagnosticSource 4.3.0.\r\n  Installing Microsoft.AspNetCore.Mvc.DataAnnotations 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ApiExplorer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.EventSource 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OAuth 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Json 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Protocols.Json 1.0.1.\r\n  Installing Microsoft.AspNetCore.NodeServices 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.JsonPatch 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization.Routing 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.IISIntegration 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.UI 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HttpOverrides 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Features 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cors 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.Internal 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.KeyDerivation 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HostFiltering 2.1.1.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing Microsoft.AspNetCore.CookiePolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1.\r\n  Installing Microsoft.AspNetCore.Html.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Twitter 2.1.1.\r\n  Installing Microsoft.AspNetCore.Connections.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization.Policy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.HttpSys 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.SqlServer 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.SqlServer 2.1.1.\r\n  Installing Microsoft.AspNet.WebApi.Client 5.2.6.\r\n  Installing Microsoft.AspNetCore.SignalR.Core 1.0.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ViewFeatures 2.1.1.\r\n  Installing Microsoft.CodeAnalysis.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.JwtBearer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OpenIdConnect 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.WsFederation 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore 2.1.1.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Core 2.1.1.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.5.0.\r\n  Installing System.ComponentModel.Annotations 4.5.0.\r\n  Installing System.Buffers 4.5.0.\r\n  Installing System.Memory 4.5.1.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.1.\r\n  Installing System.Text.Encodings.Web 4.5.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Net.WebSockets.WebSocketProtocol 4.5.1.\r\n  Installing Newtonsoft.Json 11.0.2.\r\n  Installing System.IO.Pipelines 4.5.0.\r\n  Installing System.Numerics.Vectors 4.5.0.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Threading.Tasks.Extensions 4.5.1.\r\n  Installing System.Security.Cryptography.Cng 4.5.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Xml 4.5.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing System.Reflection.Metadata 1.6.0.\r\n  Installing System.Data.SqlClient 4.5.1.\r\n  Installing Newtonsoft.Json.Bson 1.0.1.\r\n  Installing Newtonsoft.Json 10.0.1.\r\n  Installing System.Threading.Channels 4.5.0.\r\n  Installing System.Reflection.Emit 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.OpenIdConnect 5.2.0.\r\n  Installing System.IdentityModel.Tokens.Jwt 5.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.WsFederation 5.2.0.\r\n  Installing System.Collections.Immutable 1.5.0.\r\n  Installing Remotion.Linq 2.2.0.\r\n  Installing System.Interactive.Async 3.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing System.Security.Cryptography.Pkcs 4.5.0.\r\n  Installing System.Security.Permissions 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing NETStandard.Library 1.6.1.\r\n  Installing System.Text.Encoding.CodePages 4.5.0.\r\n  Installing System.Linq 4.3.0.\r\n  Installing runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing System.Diagnostics.Debug 4.3.0.\r\n  Installing System.Globalization 4.3.0.\r\n  Installing System.IO 4.3.0.\r\n  Installing System.Collections 4.3.0.\r\n  Installing System.Runtime.Serialization.Primitives 4.3.0.\r\n  Installing System.Runtime.Serialization.Formatters 4.3.0.\r\n  Installing System.Xml.XmlDocument 4.3.0.\r\n  Installing System.Threading 4.3.0.\r\n  Installing System.Resources.ResourceManager 4.3.0.\r\n  Installing System.Text.Encoding.Extensions 4.3.0.\r\n  Installing System.Xml.XDocument 4.3.0.\r\n  Installing System.Threading.Tasks 4.3.0.\r\n  Installing System.Linq.Expressions 4.3.0.\r\n  Installing System.Runtime.Numerics 4.3.0.\r\n  Installing System.Text.Encoding 4.3.0.\r\n  Installing System.Reflection.Extensions 4.3.0.\r\n  Installing System.Text.RegularExpressions 4.3.0.\r\n  Installing System.Runtime.Extensions 4.3.0.\r\n  Installing System.Reflection 4.3.0.\r\n  Installing System.ObjectModel 4.3.0.\r\n  Installing System.Dynamic.Runtime 4.3.0.\r\n  Installing System.Xml.ReaderWriter 4.3.0.\r\n  Installing Microsoft.CSharp 4.3.0.\r\n  Installing System.ComponentModel.TypeConverter 4.3.0.\r\n  Installing System.Runtime 4.3.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.3.0.\r\n  Installing System.Reflection.Primitives 4.3.0.\r\n  Installing System.AppContext 4.3.0.\r\n  Installing System.Console 4.3.0.\r\n  Installing System.Collections.Concurrent 4.3.0.\r\n  Installing System.Diagnostics.Tools 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.3.0.\r\n  Installing System.IO.FileSystem 4.3.0.\r\n  Installing System.IO.FileSystem.Primitives 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.3.0.\r\n  Installing System.Collections.Immutable 1.3.1.\r\n  Installing System.Runtime.InteropServices 4.3.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Diagnostics.StackTrace 4.3.0.\r\n  Installing System.Reflection.Metadata 1.4.2.\r\n  Installing System.Threading.Thread 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.Analyzers 1.1.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.3.0.\r\n  Installing System.ValueTuple 4.3.0.\r\n  Installing System.Diagnostics.FileVersionInfo 4.3.0.\r\n  Installing System.Threading.Tasks.Parallel 4.3.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.3.0.\r\n  Installing System.Xml.XPath.XDocument 4.3.0.\r\n  Installing System.Text.Encoding.CodePages 4.3.0.\r\n  Installing System.Runtime.InteropServices 4.1.0.\r\n  Installing Microsoft.IdentityModel.Protocols 5.2.0.\r\n  Installing Microsoft.IdentityModel.Tokens 5.2.0.\r\n  Installing Microsoft.IdentityModel.Xml 5.2.0.\r\n  Installing System.Diagnostics.Debug 4.0.11.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing Microsoft.IdentityModel.Tokens.Saml 5.2.0.\r\n  Installing System.Runtime.Extensions 4.1.0.\r\n  Installing System.Threading 4.0.11.\r\n  Installing System.Collections 4.0.11.\r\n  Installing System.Reflection 4.1.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.Linq.Queryable 4.0.1.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Runtime 4.1.0.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 2.1.0.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.0.\r\n  Installing runtime.win-x64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-x86.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-arm64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing Microsoft.NETCore.Platforms 1.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.3.0.\r\n  Installing System.Net.Sockets 4.3.0.\r\n  Installing System.Diagnostics.Tracing 4.3.0.\r\n  Installing System.IO.Compression.ZipFile 4.3.0.\r\n  Installing System.Globalization.Calendars 4.3.0.\r\n  Installing System.Threading.Timer 4.3.0.\r\n  Installing System.Security.Cryptography.Primitives 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing System.Runtime.Handles 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.3.0.\r\n  Installing System.Net.Http 4.3.0.\r\n  Installing Microsoft.NETCore.Targets 1.1.0.\r\n  Installing System.Net.Primitives 4.3.0.\r\n  Installing System.Reflection.Emit.Lightweight 4.3.0.\r\n  Installing System.Reflection.TypeExtensions 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.3.0.\r\n  Installing System.ComponentModel 4.3.0.\r\n  Installing System.ComponentModel.Primitives 4.3.0.\r\n  Installing System.Collections.NonGeneric 4.3.0.\r\n  Installing System.Collections.Specialized 4.3.0.\r\n  Installing runtime.native.System 4.3.0.\r\n  Installing runtime.native.System.IO.Compression 4.3.0.\r\n  Installing System.Buffers 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.native.System.Net.Http 4.3.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing System.Security.Cryptography.Cng 4.3.0.\r\n  Installing System.Security.Cryptography.Csp 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing System.Xml.XPath 4.3.0.\r\n  Installing Microsoft.IdentityModel.Logging 5.2.0.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Runtime.Serialization.Xml 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 1.0.1.\r\n  Installing Microsoft.NETCore.Targets 1.0.1.\r\n  Installing System.Security.Claims 4.3.0.\r\n  Installing System.Reflection.Primitives 4.0.1.\r\n  Installing System.IO 4.1.0.\r\n  Installing System.Globalization 4.0.11.\r\n  Installing System.Threading.Tasks 4.0.11.\r\n  Installing System.Resources.ResourceManager 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing System.IO.FileSystem.Primitives 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.IO.FileSystem 4.0.1.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Text.Encoding 4.0.11.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Runtime.Handles 4.0.1.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 44.04 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    1m8.386s\r\nuser    1m8.010s\r\nsys     0m18.190s\r\nroot@9d1d5e45df6a:/# cd mvcapp/\r\nroot@9d1d5e45df6a:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 557.76 ms for /mvcapp/mvcapp.csproj.\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:07.34\r\n\r\nreal    2m11.716s\r\nuser    1m22.990s\r\nsys     0m8.880s\r\nroot@9d1d5e45df6a:/mvcapp#\r\n```\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8377616466","Type":"PullRequestEvent","CreatedAt":"2018-10-06T03:28:32","Actor":"iskiselev","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20290","RelatedDescription":"Opened pull request \"Added ICorProfilerInfo10 interface with AddAssemblyPath method\" (#20290) at dotnet/coreclr","RelatedBody":"Implement #18137.\r\n\r\ncc: @noahfalk"},{"Id":"8377516060","Type":"PullRequestEvent","CreatedAt":"2018-10-06T02:07:50","Actor":"luqunl","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20231","RelatedDescription":"Merged pull request \"Add BSTR xplat PInvoke testcase\" (#20231) at dotnet/coreclr","RelatedBody":"Fix for https://github.com/dotnet/coreclr/issues/20182, this PR is about testcase for PInvoke BSTR\r\n\r\n\r\nPrevious these testcases are in https://github.com/dotnet/coreclr/pull/19766, since some teams are blocked by https://github.com/dotnet/coreclr/pull/19766, Thus I checked in product change first in  https://github.com/dotnet/coreclr/pull/19766 and use this PR for testcase"},{"Id":"8377512284","Type":"PullRequestEvent","CreatedAt":"2018-10-06T02:04:59","Actor":"GrabYourPitchforks","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20275","RelatedDescription":"Merged pull request \"Improve performance of span-based ToUpper and related APIs\" (#20275) at dotnet/coreclr","RelatedBody":"This PR improves the performance of the span-based `ToUpper` / `ToUpperInvariant` / `ToLower` / `ToLowerInvariant` methods. Perf results are provided in the table below.\r\n\r\n|                 Method |               Toolchain | StringLength |        Mean |      Error |     StdDev | Scaled | ScaledSD |\r\n|----------------------- |------------------------ |------------- |------------:|-----------:|-----------:|-------:|---------:|\r\n| **ToUpperInvariant_Ascii** | **3.0.0-preview1-27004-04** |            **0** |    **26.05 ns** |  **0.5008 ns** |  **0.4684 ns** |   **1.00** |     **0.00** |\r\n| ToUpperInvariant_Ascii |                   local |            0 |    27.16 ns |  0.3857 ns |  0.3608 ns |   1.04 |     0.02 |\r\n|                        |                         |              |             |            |            |        |          |\r\n| **ToUpperInvariant_Ascii** | **3.0.0-preview1-27004-04** |            **4** |    **36.21 ns** |  **0.5745 ns** |  **0.5092 ns** |   **1.00** |     **0.00** |\r\n| ToUpperInvariant_Ascii |                   local |            4 |    28.94 ns |  0.4919 ns |  0.4360 ns |   0.80 |     0.02 |\r\n|                        |                         |              |             |            |            |        |          |\r\n| **ToUpperInvariant_Ascii** | **3.0.0-preview1-27004-04** |            **5** |    **36.27 ns** |  **0.4766 ns** |  **0.3980 ns** |   **1.00** |     **0.00** |\r\n| ToUpperInvariant_Ascii |                   local |            5 |    29.20 ns |  0.4267 ns |  0.3783 ns |   0.81 |     0.01 |\r\n|                        |                         |              |             |            |            |        |          |\r\n| **ToUpperInvariant_Ascii** | **3.0.0-preview1-27004-04** |            **6** |    **36.40 ns** |  **0.3273 ns** |  **0.3061 ns** |   **1.00** |     **0.00** |\r\n| ToUpperInvariant_Ascii |                   local |            6 |    29.13 ns |  0.2871 ns |  0.2397 ns |   0.80 |     0.01 |\r\n|                        |                         |              |             |            |            |        |          |\r\n| **ToUpperInvariant_Ascii** | **3.0.0-preview1-27004-04** |            **8** |    **38.01 ns** |  **0.8254 ns** |  **1.3092 ns** |   **1.00** |     **0.00** |\r\n| ToUpperInvariant_Ascii |                   local |            8 |    30.76 ns |  0.7869 ns |  1.0504 ns |   0.81 |     0.04 |\r\n|                        |                         |              |             |            |            |        |          |\r\n| **ToUpperInvariant_Ascii** | **3.0.0-preview1-27004-04** |           **12** |    **42.06 ns** |  **0.9044 ns** |  **0.8882 ns** |   **1.00** |     **0.00** |\r\n| ToUpperInvariant_Ascii |                   local |           12 |    35.21 ns |  0.5008 ns |  0.4684 ns |   0.84 |     0.02 |\r\n|                        |                         |              |             |            |            |        |          |\r\n| **ToUpperInvariant_Ascii** | **3.0.0-preview1-27004-04** |          **100** |   **133.87 ns** |  **2.9730 ns** |  **6.1398 ns** |   **1.00** |     **0.00** |\r\n| ToUpperInvariant_Ascii |                   local |          100 |    75.62 ns |  1.3335 ns |  1.1821 ns |   0.57 |     0.03 |\r\n|                        |                         |              |             |            |            |        |          |\r\n| **ToUpperInvariant_Ascii** | **3.0.0-preview1-27004-04** |         **1000** | **1,255.32 ns** | **24.6229 ns** | **38.3349 ns** |   **1.00** |     **0.00** |\r\n| ToUpperInvariant_Ascii |                   local |         1000 |   488.50 ns |  5.0715 ns |  4.7439 ns |   0.39 |     0.01 |\r\n\r\nThe testbed generates a random all-ASCII string of the specified length (using a predictable RNG with a constant seed), then calls the span-based `ToUpperInvariant` to write the result into a scratch buffer. The random string has a mix of lowercase and uppercase characters. I also ran the test for `ToUpper(..., <tr-TR culture>)` and `ToUpperInvariant(<string containing non-ASCII chars>, ...)` and saw no noticeable difference from the existing in-box implementation, as expected. The logic continues to fall back to the native localization tables in those cases.\r\n\r\nVarious notes for this PR that will make reviewing easier:\r\n\r\n* `TConversion` leverages the JIT's generic specialization logic to output two different codegens: one for `ToUpper`, one for `ToLower`. This pattern allows us to get away with having only one copy of this logic in source.\r\n* The case of `IsAsciiCasingSameAsInvariant` having already been computed is inlined into the caller. This saves a method call and some other work in the common case.\r\n* This adds `ref T Unsafe.Add<T>(ref T, nint elementOffset)` (not exposed via the reference assemblies). Having this specific overload of `Add<T>` makes certain scenarios easier and prevents us from having to perform the `AddByteOffset` calculation manually.\r\n* The internal `Utf16Utility` type is meant for bitwise inspection of UTF-16 data. It's a partial port of the type from the `feature/utf8string` feature branch. I considered putting these APIs on an existing type, but no type really stood out as a good candidate. Future PRs will add more APIs to this type. (The `string.ToUpper` and `string.GetHashCode` PRs add methods to this.)\r\n\r\n**No APIs are introduced by this PR. I do not expect a corresponding corefx PR other than the standard auto-mirror.**\r\n\r\nThere is some slight refactoring introduced here. Other coming PRs (`string.ToUpper` / `string.GetHashCode`) ride on top of this refactoring. Much of the upcoming UTF-8 logic also rides on top of this refactoring."},{"Id":"8377482431","Type":"PullRequestEvent","CreatedAt":"2018-10-06T01:43:52","Actor":"swaroop-sridhar","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/19373","RelatedDescription":"Merged pull request \"Add a dllmap design document\" (#19373) at dotnet/coreclr","RelatedBody":"Introducing a Dllmap design document. \r\n#19112 "},{"Id":"8377474559","Type":"IssuesEvent","CreatedAt":"2018-10-06T01:38:07","Actor":"swaroop-sridhar","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/444","RelatedDescription":"Closed issue \"Versioning and loading libraries\" (#444) at dotnet/coreclr","RelatedBody":"As discussed in #441, we are currently brittle with regards to our usage of dlopen, which requires that we provide the name of a library that includes version information.  We need to figure out how we want to handle this, for the specific case discussed in #441, for DllImports in general, and for anywhere else we may rely on loading arbitrary libraries.\n"},{"Id":"8377473653","Type":"IssuesEvent","CreatedAt":"2018-10-06T01:37:26","Actor":"swaroop-sridhar","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/930","RelatedDescription":"Closed issue \"Handling p/invokes for different platforms and discussions about dllmap\" (#930) at dotnet/coreclr","RelatedBody":"Right now, coreclr has no good way to handle the differences between platforms when it comes to p/invoking native libraries.\n\nE.g. imagine I want to call an openssl function, on Unix the library is called `libssl.so/dylib` but on Windows it is `libeay32.dll` (there are countless other examples, e.g. `libz.so` vs `zlib1.dll`).\n\ncorefx \"solves\" this by conditionally compiling the p/invoke code for each platform with the correct library name. This seems like a major organizational overhead though and is brittle when new platforms are added.\n\nMono does two things to make this much easier:\n1. It automatically probes for variations of the string passed to `DllImport`, e.g. if I specify `DllImport(\"myFoo\")` it tries `myFoo.dll`, `myFoo.so`, `libmyFoo.so` and so on. In the happy case this is enough to find the library on all the platforms.\n2. [DllMap](http://www.mono-project.com/docs/advanced/pinvoke/dllmap/): this is for cases where the library name is just too different, or if only a certain function should be redirected, or only on some specific platforms.\n\nIn my opinion, coreclr should implement something along those lines. I know that using DllMap 1:1 is not really possible since there's no System.Configuration stack in .NET Core, but it should at least guide an alternate implementation.\n\nWhat do you think?\n\n**edit** I proposed adding DllMap attributes in https://github.com/dotnet/coreclr/issues/930#issuecomment-100675743 :\n\n``` csharp\n[assembly: DllMap(\"foo\", \"foo.dll\", OSName.Windows)]\n[assembly: DllMap(\"foo\", \"libfoo.dylib\", OSName.OSX)]\n[assembly: DllMap(Dll=\"foo\", Target=\"libfoo.so\", OS=OSName.Linux)]\n[assembly: DllMap(Dll=\"dl\", Name=\"dlclose\", Target=\"libc.so\", OS=\"FreeBSD\")]\n```\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8377411760","Type":"IssuesEvent","CreatedAt":"2018-10-06T00:53:47","Actor":"danielbarrios76","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10103","RelatedDescription":"Closed issue \"dotnet-sdk-2.1 fails to install Debian 9\" (#10103) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n$ sudo apt-get install dotnet-sdk-2.1\r\nReading package lists... Done\r\nBuilding dependency tree       \r\nReading state information... Done\r\nSome packages could not be installed. This may mean that you have\r\nrequested an impossible situation or if you are using the unstable\r\ndistribution that some required packages have not yet been created\r\nor been moved out of Incoming.\r\nThe following information may help to resolve the situation:\r\n\r\nThe following packages have unmet dependencies:\r\n dotnet-sdk-2.1 : Depends: dotnet-runtime-2.1 (>= 2.1.5) but it is not going to be installed\r\n                  Depends: aspnetcore-runtime-2.1 (>= 2.1.5) but it is not going to be installed\r\nE: Unable to correct problems, you have held broken packages.\r\n\r\nHow do I correct this problem?\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8377212356","Type":"IssuesEvent","CreatedAt":"2018-10-05T23:15:36","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10052","RelatedDescription":"Closed issue \"Building release/2.1.4xx branch using 2.1.402 SDK fails due to NU5123\" (#10052) at dotnet/cli","RelatedBody":"This showed up in source-build, fixed by [a patch](https://github.com/dotnet/source-build/blob/8e382759a35a44cb18973c8af695a9ebef5db354/patches/cli/0002-Ignore-NU5123-build-failure-with-SDK-2.1.402.patch) for `2.1.5`/`2.1.403` (context: https://github.com/dotnet/source-build/pull/791):\r\n\r\n## Steps to reproduce\r\n1. Clone and checkout `04e15494b` (in `release/2.1.4xx`).\r\n1. Modify `run-build.sh`:\r\n\r\n   ```diff\r\n   @@ -165,7 +165,7 @@ if [[ $archlower == 'arm'* ]]; then\r\n    fi\r\n   \r\n    if [ \"$STAGE0_SOURCE_DIR\" == \"\" ]; then\r\n   -    (set -x ; \"$REPOROOT/scripts/obtain/dotnet-install.sh\" --version \"2.1.300\" --install-dir \"$DOTNET_INSTALL_DIR\" --architecture \"$INSTALL_ARCHITECTURE\" $LINUX_PORTABLE_INSTALL_ARGS)\r\n   +    (set -x ; \"$REPOROOT/scripts/obtain/dotnet-install.sh\" --version \"2.1.402\" --install-dir \"$DOTNET_INSTALL_DIR\" --architecture \"$INSTALL_ARCHITECTURE\" $LINUX_PORTABLE_INSTALL_ARGS)\r\n    else\r\n        echo \"Copying bootstrap cli from $STAGE0_SOURCE_DIR\"\r\n        cp -r $STAGE0_SOURCE_DIR/* \"$DOTNET_INSTALL_DIR\"\r\n   ```\r\n1. Run `./build.sh '/p:CLITargets=\"Prepare;Compile;Package\"'` (other build commands may repro as well)\r\n\r\n## Expected  behavior\r\nThe build succeeds.\r\n\r\n## Actual behavior\r\nBuild fails while packing symbols with errors like:\r\n\r\n> /opt/code/src/cli/.dotnet_stage0/x64/sdk/2.1.402/Sdks/NuGet.Build.Tasks.Pack/build/NuGet.Build.Tasks.Pack.targets(199,5): **error NU5123: The file 'sdk/2.1.403/Microsoft/Microsoft.NET.Build.Extensions/tools/netcoreapp2.0/Microsoft.NET.Build.Extensions.Tasks.ni.{80ded9fa-7ed2-48f3-b255-e94eb1ee3ae0}.map' path, name, or both are too long.** Your package might not work without long file path support. Please shorten the file path or file name. [/opt/code/src/cli/build/package/Symbols.csproj] [/opt/code/src/cli/build.proj]\r\n\r\nAdding a `NoWarn` on `NU5123` lets the build pass.\r\n\r\n## Environment data\r\n```\r\n#> .dotnet_stage0/x64/dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.402\r\n Commit:    3599f217f4\r\n\r\nRuntime Environment:\r\n OS Name:     fedora\r\n OS Version:  28\r\n OS Platform: Linux\r\n RID:         fedora.28-x64\r\n Base Path:   /home/dagood/git/cli/.dotnet_stage0/x64/sdk/2.1.402/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.4\r\n  Commit:  85255dde3e\r\n\r\n.NET Core SDKs installed:\r\n  2.1.402 [/home/dagood/git/cli/.dotnet_stage0/x64/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [/home/dagood/git/cli/.dotnet_stage0/x64/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [/home/dagood/git/cli/.dotnet_stage0/x64/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [/home/dagood/git/cli/.dotnet_stage0/x64/shared/Microsoft.NETCore.App]\r\n```\r\n\r\n\r\n\r\n\r\n"},{"Id":"8377211406","Type":"PullRequestEvent","CreatedAt":"2018-10-05T23:15:15","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10092","RelatedDescription":"Merged pull request \"Adding NU5123 to the NOWARN list.\" (#10092) at dotnet/cli","RelatedBody":"Adding NU5123 to the NOWARN list. This was a new warning introduced by NuGet that we started hitting when upgrading to a newer SDK.\r\n\r\nThis is breaking source build.\r\n\r\nFixes https://github.com/dotnet/cli/issues/10052\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8374954993","Type":"IssuesEvent","CreatedAt":"2018-10-05T15:03:18","Actor":"GSPP","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/891","RelatedDescription":"Opened issue \"\"Could not load System.Net.Http, Version=4.2.0.0\" on .NET 4.7.1 together with \"System.Collections.Immutable\"\" (#891) at dotnet/standard","RelatedBody":"I will attach a repro solution that I have created as follows:\r\n\r\n1. New web application targeting 4.7.1 on WIndows 7 with .NET 4.7.1\r\n2. Add a class library\r\n3. Reference the library from the web app and call code in it\r\n4. Add a few packages to both projects\r\n5. Add the System.Net.Http package to both projects and use it (see Class1)\r\n\r\nWhen this application is started it immediately crashes:\r\n\r\n```\r\nCould not load file or assembly 'System.Net.Http, Version=4.2.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\n```\r\n\r\nFindings/bugs:\r\n1. System.Net.Http was not copied to the bin folder of the web app which is wrong.\r\n2. All projects are configured to reference version 4.1.1.2 from /packages. Yet the compiled class library DLL references 4.2.0.0. This appears wrong to me.\r\n\r\nIf you now uninstall the seemingly unrelated (and unused) package System.Collections.Immutable the project starts working!\r\n\r\nCurrently, on the latest Visual Studio and on .NET 4.7.1 it seems very easy to run into almost unfixable tooling bugs. It really is not very hard to trigger the conditions for these issues. I suspect many people are running into this and indeed, when you search the web or this issue tracker there are many reports of very strange issues around .NET 4.7.1 and System.Net.Http, System.Runtime and a few others.\r\n\r\nThese bugs are extremely hard to track down with no clear workaround. It took me two days now to investigate multiple such issues. Someone new to .NET couldn't fix these in 10 years.\r\n"},{"Id":"8373965824","Type":"PullRequestEvent","CreatedAt":"2018-10-05T12:15:58","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/890","RelatedDescription":"Merged pull request \"[Darc-Update] Update dependencies from build 20181004.6 of https://github.com/dotnet/arcade\" (#890) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18504.6\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18504.6.symbols.nupkg - 2.2.0-beta.18504.6\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18504.6.symbols.nupkg - 2.4.0-beta.18504.6\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18504.6\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18504.6\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18504.6\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18504.6\n- Microsoft.DotNet.Darc - 1.0.0-beta.18504.6\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18504.6\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18504.6\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18504.6\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18504.6"},{"Id":"8373894094","Type":"PullRequestEvent","CreatedAt":"2018-10-05T12:00:52","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/890","RelatedDescription":"Opened pull request \"[Darc-Update] Update dependencies from build 20181004.6 of https://github.com/dotnet/arcade\" (#890) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18504.6\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18504.6.symbols.nupkg - 2.2.0-beta.18504.6\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18504.6.symbols.nupkg - 2.4.0-beta.18504.6\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18504.6.symbols.nupkg - 1.0.0-beta.18504.6\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18504.6\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18504.6\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18504.6\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18504.6\n- Microsoft.DotNet.Darc - 1.0.0-beta.18504.6\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18504.6\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18504.6\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18504.6\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18504.6\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18504.6"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8377716948","Type":"IssuesEvent","CreatedAt":"2018-10-06T04:54:45","Actor":"Mirandatz","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/32656","RelatedDescription":"Opened issue \"Where's the source for List<T>?\" (#32656) at dotnet/corefx","RelatedBody":"Shouldn't it be [here](https://github.com/dotnet/corefx/tree/a10890f4ffe0fadf090c922578ba0e606ebdd16c/src/System.Collections/src/System/Collections/Generic)?"},{"Id":"8377453081","Type":"PullRequestEvent","CreatedAt":"2018-10-06T01:22:54","Actor":"xhoogland","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/32655","RelatedDescription":"Opened pull request \"[WIP] Clean up dead code in System.Memory\" (#32655) at dotnet/corefx","RelatedBody":"Removed dead code in S.Memory for issue #17905 to clean up the source."},{"Id":"8377389881","Type":"PullRequestEvent","CreatedAt":"2018-10-06T00:40:01","Actor":"rmkerr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/32653","RelatedDescription":"Merged pull request \"Fix flaky 100-Continue test on CurlHandler\" (#32653) at dotnet/corefx","RelatedBody":"One of the 100-Continue tests failed in the daily runs today. The test failure was similar to #27519, which was caused by lack of support for 100-Continue in WinHttpHandler.\r\n\r\nCurlHandler wasn't actually using 100-Continue in the test, as it is only enabled for content larger than 1024 bytes. That behavior caused the test to sporadically fail.\r\n\r\nThis change increases the size of the content used by the test, so that Expect: 100-Continue will actually be enabled.\r\n\r\nFixes: #32643"},{"Id":"8377389868","Type":"IssuesEvent","CreatedAt":"2018-10-06T00:40:01","Actor":"rmkerr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/32643","RelatedDescription":"Closed issue \"PostAsyncExpect100Continue_FailsAfterContentSendStarted_Throws fails on CurlHandler\" (#32643) at dotnet/corefx","RelatedBody":"This test failed on CurlHandler in one of the daily test runs today ([link](https://mc.dot.net/#/product/netcore/30/source/official~2Fcorefx~2Fmaster~2F/type/test~2Ffunctional~2Fcli~2F/build/20181005.06/workItem/System.Net.Http.Functional.Tests)).\r\n\r\nI'm pretty sure the test is just invalid on CurlHandler, as the expected behavior depends on an Expect: 100-Continue header being sent. LibCurl won't send one unless the [content length is > 1024](https://gms.tf/when-curl-sends-100-continue.html#curl-logic)."},{"Id":"8377380812","Type":"PullRequestEvent","CreatedAt":"2018-10-06T00:34:40","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/32565","RelatedDescription":"Merged pull request \"Add pointer overloads for Avx2.BroadcastScalarToVector256\" (#32565) at dotnet/corefx","RelatedBody":"Match CoreCLR change https://github.com/dotnet/coreclr/pull/20193\r\n\r\n@CarolEidt @tannergooding @eerhardt "},{"Id":"8377373404","Type":"PullRequestEvent","CreatedAt":"2018-10-06T00:30:18","Actor":"xhoogland","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/32654","RelatedDescription":"Opened pull request \"[WIP] Clean up dead code in System.IO*\" (#32654) at dotnet/corefx","RelatedBody":"Removed dead code in S.IO.C.Brotli, S.IO.FS.DriveInfo and S.IO.MemoryMappedFiles for\r\nissue #17905 to clean up the source."},{"Id":"8377278714","Type":"IssuesEvent","CreatedAt":"2018-10-05T23:43:00","Actor":"safern","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/32631","RelatedDescription":"Closed issue \"System.Drawing.Common - \"Graphics.ScaleTransform\" does not affect the Text size on the Mac\" (#32631) at dotnet/corefx","RelatedBody":"\"ScaleTransform\" will affect on all graphics except \"DrawString\".\r\nissue is reproduced only on Mac platform\r\n\r\n```\r\nvar outputFile = \"output\";\r\nfor(int i = 0; i < 5; i++) {\r\n    int scale = 1 + i;\r\n    using(var bitmap = new Bitmap(32 * scale, 32 * scale))\r\n    using(var font = new Font(\"Arial\", 8.25f, FontStyle.Regular, GraphicsUnit.Point))\r\n    using(var graphics = Graphics.FromImage(bitmap)) {\r\n        graphics.FillRectangle(Brushes.White, 0, 0, bitmap.Width, bitmap.Height);\r\n        graphics.PageUnit = GraphicsUnit.Document;\r\n        graphics.ScaleTransform(scale, scale);\r\n        graphics.DrawString(\"F\", font, Brushes.Black, new PointF());\r\n        bitmap.Save(outputFile + i + \".png\", ImageFormat.Png);\r\n        graphics.ResetTransform();\r\n    }\r\n}\r\n```"},{"Id":"8377211087","Type":"PullRequestEvent","CreatedAt":"2018-10-05T23:15:08","Actor":"safern","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/32621","RelatedDescription":"Merged pull request \"Add back InstanceDescriptor support to TypeConverters which had it on Desktop\" (#32621) at dotnet/corefx","RelatedBody":"Fixes #32602 \r\n\r\nThis is a direct port of the desktop code."},{"Id":"8377211074","Type":"IssuesEvent","CreatedAt":"2018-10-05T23:15:08","Actor":"safern","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/32602","RelatedDescription":"Closed issue \"WPF on .NET Core needs updated TypeConverters for Uri and Enum\" (#32602) at dotnet/corefx","RelatedBody":"Xaml parsing requires [TypeConverters to be implemented and work a certain way](https://docs.microsoft.com/en-us/dotnet/framework/wpf/advanced/typeconverters-and-xaml). \r\n\r\nWe have been working on getting some of our Xaml tests running against .NET Core 3, and also porting PresentationBuildTasks to work on .NET Core 3. In the process, we have encountered some problems with `UriTypeConverter` and `EnumConverter`. \r\n\r\nThere are two issues we have seen so far: \r\n- The .NET Core implementation is missing `ConvertTo` semantics for `TypeDescriptor`. This applies to both `UriTypeConverter` and `EnumConverter`\r\n- `System.Uri` is missing `[TypeConverterAttribute(UriTypeConverter)]`. \r\n\r\nI have a working fix for `UriTypeConverter` to add support for `TypeDescriptor`. \r\n\r\ncc @ericstj, @rladuca"},{"Id":"8377209962","Type":"PullRequestEvent","CreatedAt":"2018-10-05T23:14:42","Actor":"safern","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/32651","RelatedDescription":"Merged pull request \"Code cleanup in ProcessTests\" (#32651) at dotnet/corefx","RelatedBody":"PR feedback from https://github.com/dotnet/corefx/pull/32648."},{"Id":"8377207533","Type":"PullRequestEvent","CreatedAt":"2018-10-05T23:13:46","Actor":"wfurt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/32444","RelatedDescription":"Merged pull request \"get operational status and multicast support for osx\" (#32444) at dotnet/corefx","RelatedBody":"fixes #29723 "},{"Id":"8377207525","Type":"IssuesEvent","CreatedAt":"2018-10-05T23:13:46","Actor":"wfurt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/29723","RelatedDescription":"Closed issue \"NetworkChange.NetworkAvailabilityChanged doesn't report network is offline on osx.\" (#29723) at dotnet/corefx","RelatedBody":"Repro:\r\n\r\n```C#\r\nusing System;\r\nusing System.Net.NetworkInformation;\r\n\r\nnamespace networkchange\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n           SemaphoreSlim semaphore = new SemaphoreSlim(0);\r\n            Console.WriteLine(\"Listening for network change events...\");\r\n            //NetworkChange.NetworkAddressChanged += (_, e) =>\r\n            //{\r\n            //    Console.WriteLine(\"NetworkAddressChanged\");\r\n            //    semaphore.Release();\r\n            //};\r\n\r\n            NetworkChange.NetworkAvailabilityChanged += (_, e) => {\r\n                if (e.IsAvailable)\r\n                {\r\n                    Console.WriteLine(\"NetworkChange: Network is available.\");\r\n                }\r\n                else\r\n                {\r\n                    Console.WriteLine(\"NetworkChange: Network is not available.\");\r\n                }\r\n\r\n                semaphore.Release();\r\n            };\r\n\r\n            semaphore.Wait();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n1. dotnet run\r\n2. Disconnect mac os machine from network.\r\n3. Reconnect mac os machine to network.\r\n\r\n*Actual:*\r\n```\r\nListening for network change events...\r\nNetworkChange: Network is available.\r\nNetworkChange: Network is available.\r\n```\r\n\r\n*Expected:*\r\n```\r\nListening for network change events...\r\nNetworkChange: Network is not available.\r\nNetworkChange: Network is available.\r\n```"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8377465750","Type":"IssuesEvent","CreatedAt":"2018-10-06T01:31:33","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/30296","RelatedDescription":"Closed issue \"VB: \"Change signature\" refactoring dialog should show modifiers in VB syntax.\" (#30296) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n\r\nVisual Studio Community 2017 v15.8.5\r\n\r\n**Steps to Reproduce**:\r\n\r\nType the following code upon which we will invoke the `change signature` refactoring:\r\n\r\n```vb\r\nPublic Class CFoo\r\n  Public Sub Blah(ByVal ArgOne As String, ByRef ArgTwo As String)\r\n  End Sub\r\nEnd Class\r\n```\r\n\r\nPlace the caret on the `Blah` method name and select `change signature` from the actions menu:\r\n\r\n![vs_changesig_1](https://user-images.githubusercontent.com/20465797/46441792-41dbf980-c770-11e8-9338-03c4368eeab1.png)\r\n\r\nThe `change signature` refactoring dialog is displayed but uses the C# parameter modifier `ref` even though this is VB code and `ByRef` should be used instead:\r\n\r\n![vs_changesig_2](https://user-images.githubusercontent.com/20465797/46441942-c4fd4f80-c770-11e8-849c-6db6d7febf49.png)\r\n\r\n**Expected Behavior**:\r\n\r\nSince the only thing you can do in this dialog is reorder the parameters, I am not sure why the `Modifier` column is needed at all, but since it is currently there, it should show the modifiers using the current project's language syntax (i.e `ByRef` in VB projects and `ref` in C# projects)."},{"Id":"8377465257","Type":"PullRequestEvent","CreatedAt":"2018-10-06T01:31:12","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30332","RelatedDescription":"Merged pull request \"#30296 Change Signature Dialog update to include VB style.\" (#30332) at dotnet/roslyn","RelatedBody":"#30296 Update the code to include separate function for the different languages (C# and Visual Basic)."},{"Id":"8377458831","Type":"PullRequestEvent","CreatedAt":"2018-10-06T01:26:59","Actor":"heejaechang","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30333","RelatedDescription":"Merged pull request \"add ClientId to RemoteHost so that test window can discover our OOP f…\" (#30333) at dotnet/roslyn","RelatedBody":"…rom thier own OOP"},{"Id":"8377371033","Type":"IssuesEvent","CreatedAt":"2018-10-06T00:28:58","Actor":"jasonmalinowski","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/30349","RelatedDescription":"Opened issue \"Passing null into (CSharp|VisualBasic)CommandLineParser.Parse as a base directory gives invalid key paths\" (#30349) at dotnet/roslyn","RelatedBody":"If you pass in null as a base directory to our CommandLineParsers.Parse, they add that null into the KeyFileSearchPaths (which is invalid). It's unclear to me if that's a bug (and it shouldn't add them), or I shouldn't be calling with null in the first place."},{"Id":"8377317314","Type":"PullRequestEvent","CreatedAt":"2018-10-06T00:00:42","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30348","RelatedDescription":"Opened pull request \"Merge dev16.0.x to dev16.0.x-vs-deps\" (#30348) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from dev16.0.x into dev16.0.x-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0.x-to-dev16.0.x-vs-deps\ngit reset --hard upstream/dev16.0.x-vs-deps\ngit merge upstream/dev16.0.x\n# Fix merge conflicts\ngit commit\ngit push merges/dev16.0.x-to-dev16.0.x-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8377427075","Type":"IssuesEvent","CreatedAt":"2018-10-06T01:03:43","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6412","RelatedDescription":"Closed issue \"wasm: indexing into arrays with value type elements of width 2 bytes, e.g. char is incorrect\" (#6412) at dotnet/corert","RelatedBody":"In the WASM Program.cs add\r\n```\r\n        var str = \"123456\";\r\n        char[] chars = str.ToCharArray();\r\n        for (var i = 0; i < chars.Length; i++)\r\n        {\r\n            PrintLine(chars[i].ToString());\r\n        }\r\n```\r\nand it outputs:\r\n```\r\n1\r\n3\r\n5\r\n\r\n\r\n\r\n```\r\nIt appears to be losing every other character.  WASM=0 produces the same output as WASM=1."},{"Id":"8377427037","Type":"PullRequestEvent","CreatedAt":"2018-10-06T01:03:29","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6430","RelatedDescription":"Merged pull request \"wasm: fix element addressing for value type array indexing.  Fixes #6412\" (#6430) at dotnet/corert","RelatedBody":"Use GetElementSize for value and non value types when creating element adressess\r\n\r\nCreate test for char[] indexing."},{"Id":"8375538674","Type":"PullRequestEvent","CreatedAt":"2018-10-05T16:44:01","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6430","RelatedDescription":"Opened pull request \"wasm: fix element addressing for value type array indexing.  Fixes #6412\" (#6430) at dotnet/corert","RelatedBody":"Use GetElementSize for value and non value types when creating element adressess\r\n\r\nCreate test for char[] indexing."},{"Id":"8374402947","Type":"IssuesEvent","CreatedAt":"2018-10-05T13:35:57","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4558","RelatedDescription":"Closed issue \"CppCodeGen: AV in Enum.ToString()\" (#4558) at dotnet/corert","RelatedBody":"The runtime transpiled code in C++ for ToString looks like this:\r\n\r\n```c++\r\nnamespace System_Private_CoreLib { namespace System { class Object {\r\n    public:\r\n        static MethodTable * __getMethodTable();\r\n        intptr_t m_pEEType;\r\n\t\t\t\r\n    typedef ::System_Private_CoreLib::System::String*(*__slot__ToString)(::System_Private_CoreLib::System::Object*);\r\n\r\n    static __slot__ToString __getslot__ToString(void * pThis)\r\n    {\r\n        return (__slot__ToString)*((void **)(*((RawEEType **)pThis) + 1) + 0);\r\n    };\r\n...\r\n...\r\n}\r\n```\r\n\r\nGiven the following code:\r\n\r\n```c#\r\nusing System;\r\ninternal class Program\r\n{\r\n    enum State { On, Off }\r\n    private static void Main(string[] args)\r\n        => Console.WriteLine(State.On.ToString());\r\n}\r\n```\r\n\r\nwe get access violation when the getslot function tries to dereference `((RawEEType **)pThis)`, this part: `(*((RawEEType **)pThis) + 1)`.\r\n\r\nStacktrace:\r\n\r\n```powershell\r\nreproNativeCpp.exe!System_Private_CoreLib::System::Object::__getslot__ToString(void * pThis=0xcccccccc00000000) Line 7776\tC++\tSymbols loaded.\r\nreproNativeCpp.exe!repro::Program::Main(__Array_A_::System_Private_CoreLib::System::String_V_ * args=0x0000029ce23128c0) Line 11\tC++\tSymbols loaded.\r\nreproNativeCpp.exe!repro::_Module_::MainMethodWrapper(__Array_A_::System_Private_CoreLib::System::String_V_ * _a0=0x0000029ce23128c0)\tC++\tNon-user code. Symbols loaded.\r\nreproNativeCpp.exe!repro::_Module_::StartupCodeMain(int _a0=1, __int64 _a1=2872806503888)\tC++\tNon-user code. Symbols loaded.\r\nreproNativeCpp.exe!__managed__Main(int _a0=1, __int64 _a1=2872806503888) Line 16707570\tC++\tSymbols loaded.\r\nreproNativeCpp.exe!wmain(int argc=1, wchar_t * * argv=0x0000029ce09c75d0) Line 332\tC++\tSymbols loaded.\r\nreproNativeCpp.exe!invoke_main() Line 91\tC++\tNon-user code. Symbols loaded.\r\nreproNativeCpp.exe!__scrt_common_main_seh() Line 283\tC++\tNon-user code. Symbols loaded.\r\nreproNativeCpp.exe!__scrt_common_main() Line 326\tC++\tNon-user code. Symbols loaded.\r\nreproNativeCpp.exe!wmainCRTStartup() Line 17\tC++\tNon-user code. Symbols loaded.\r\nkernel32.dll!BaseThreadInitThunk()\tUnknown\tNon-user code. Symbols loaded.\r\nntdll.dll!RtlUserThreadStart()\tUnknown\tNon-user code. Symbols loaded.\r\n```"},{"Id":"8374376034","Type":"PullRequestEvent","CreatedAt":"2018-10-05T13:31:29","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6429","RelatedDescription":"Merged pull request \"Update RyuJIT\" (#6429) at dotnet/corert","RelatedBody":"Picks up the new tiering-related `MethodImpl` option added in dotnet/coreclr#20009.\r\n\r\nI went ahead and also implemented the `NoOptimization` `MethodImpl` option because it's related and we need to have it to ship anyway."},{"Id":"8373089800","Type":"PullRequestEvent","CreatedAt":"2018-10-05T09:14:50","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6429","RelatedDescription":"Opened pull request \"Update RyuJIT\" (#6429) at dotnet/corert","RelatedBody":"Picks up the new tiering-related `MethodImpl` option added in dotnet/coreclr#20009.\r\n\r\nI went ahead and also implemented the `NoOptimization` `MethodImpl` option because it's related and we need to have it to ship anyway."},{"Id":"8372715923","Type":"IssuesEvent","CreatedAt":"2018-10-05T08:02:42","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6425","RelatedDescription":"Closed issue \"Cannot build app package due to nutc_driver.exe out of memory error \" (#6425) at dotnet/corert","RelatedBody":"Creating an App Package for publication in the store results in the following errors:\r\n\r\n`Error: NUTC300F:Internal Compiler Error: Native compilation failed due to out of memory error <our>.App  `\r\n`Error  ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\1.7.3\\tools\\x64\\ilc\\Tools\\nutc_driver.exe @\"C:\\Users\\myself\\<path>\\<to>\\<our>.App\\obj\\x64\\Release\\ilc\\intermediate\\MDIL\\<our>.App.rsp\"' returned exit code 1 <our>.App`\r\n\r\nWe tried the <Use64BitCompiler>true</Use64BitCompiler> workaround described in issue #5604  but the x64 nutc_driver.exe is never used.\r\n\r\nOur app has a plugin architecture and deactivation either one of the 3 following plugins (dereferencing the project in the main app) allows us to build correctly:\r\n- 3D (references the HelixToolkit.UWP nuget package, which in turns requires Microsoft.NETCore.UniversalWindowsPlatform 6.1.5)\r\n- Office 365 (references the Microsoft.Graph nuget package)\r\n- Syncfusion (references 4 Syncfusion nuget packages)\r\n\r\nWe obviously need all three active to publish our app.\r\n\r\nThe ilcRepro output is available here: https://insideso.sharepoint.com/:u:/g/ETpJp_4u8HRHkYrF3cl-vNcBrMpVdNx2w_FrxgLl0nSFRQ?e=gA9BDu\r\n\r\nWe need to push a new version of our app to the store ASAP as it contains long-awaited features.\r\n"},{"Id":"8371283986","Type":"PullRequestEvent","CreatedAt":"2018-10-04T23:44:24","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6428","RelatedDescription":"Opened pull request \"Cross-module signatures, non-compilable methods and instance hashtable fixes\" (#6428) at dotnet/corert","RelatedBody":"This is a combination of cleaned-up versions of changes I previously made to fix various CoreCLR tests.\r\n\r\n1) Gracefully handle non-compilable methods without crashing the compiler;\r\n\r\n2) Improvements in handling of cross-module signatures;\r\n\r\n3) "}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8376970219","Type":"PullRequestEvent","CreatedAt":"2018-10-05T21:54:55","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2538","RelatedDescription":"Merged pull request \"Fix overrides filename\" (#2538) at dotnet/sdk","RelatedBody":"F# AtrributeInfo doesn't work correctly when compiled using visual studio, because the filename for the shim is incorrect.\r\n\r\nThis change fixes that.\r\n\r\nChange also needs to go to release/2.2.1"},{"Id":"8376964706","Type":"PullRequestEvent","CreatedAt":"2018-10-05T21:53:32","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2569","RelatedDescription":"Merged pull request \"Typos\" (#2569) at dotnet/sdk","RelatedBody":""},{"Id":"8376884253","Type":"PullRequestEvent","CreatedAt":"2018-10-05T21:31:42","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2572","RelatedDescription":"Opened pull request \"Merge release/2.2.1xx to master\" (#2572) at dotnet/sdk","RelatedBody":""},{"Id":"8376799793","Type":"PullRequestEvent","CreatedAt":"2018-10-05T21:10:40","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2571","RelatedDescription":"Opened pull request \"Merge release/2.1.4xx to release/2.1.5xx\" (#2571) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.4xx-to-release/2.1.5xx\ngit reset --hard upstream/release/2.1.5xx\ngit merge upstream/release/2.1.4xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.4xx-to-release/2.1.5xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1047894749867270145","CreatedAt":"2018-10-04T17:02:31+00:00","UserScreenname":"dotnet","Text":"Blogged -- Update on .NET Core 3.0 and .NET Framework 4.8 https://t.co/tBpJg3Eoc8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":307,"FavoriteCount":220,"RawContent":null},{"Id":"1047645317401735168","CreatedAt":"2018-10-04T00:31:22+00:00","UserScreenname":"dotnet","Text":".NET Core 2.0 has reached end of life https://t.co/FZTYietdMP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":146,"FavoriteCount":171,"RawContent":null},{"Id":"1047579283579756544","CreatedAt":"2018-10-03T20:08:58+00:00","UserScreenname":"dotnet","Text":"https://t.co/Pt9ZGHYH8C","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":39,"FavoriteCount":26,"RawContent":null},{"Id":"1047257170482536454","CreatedAt":"2018-10-02T22:49:01+00:00","UserScreenname":"dotnet","Text":"Hey developers! Let us help you on your journey to Azure. Check out these resources, e-books, and apply for assista… https://t.co/1QzIe9tWvn","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":72,"FavoriteCount":40,"RawContent":null},{"Id":"1045845137627086848","CreatedAt":"2018-09-29T01:18:06+00:00","UserScreenname":"dotnet","Text":"POSTED: .NET Foundation September Update\nhttps://t.co/oflTRykrTK","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":31,"FavoriteCount":13,"RawContent":null}]}},"RunOn":"2018-10-06T05:30:32.6067943Z","RunDurationInMilliseconds":8473}