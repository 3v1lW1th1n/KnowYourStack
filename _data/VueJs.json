{"Data":{"Vue-Issues":{"Issues":[{"Id":"407489084","IsPullRequest":true,"CreatedAt":"2019-02-07T00:52:07","Actor":"JakeConnors376W","Number":"9450","RawContent":null,"Title":"chore: make documentation clearer","State":"closed","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: make documentation clearer by removing redundant words.\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9450","RelatedDescription":"Closed or merged PR \"chore: make documentation clearer\" (#9450)"},{"Id":"407394588","IsPullRequest":false,"CreatedAt":"2019-02-06T20:57:37","Actor":"yyx990803","Number":"9448","RawContent":null,"Title":"Event blocking in multi-page Nw.js / Electron applications","State":"closed","Body":"https://github.com/vuejs/vue/issues/9446#issuecomment-461134977\r\n\r\nEvents in different pages in a multi-page shell app would have different timestamp starting points since they are relative to page load.","Url":"https://github.com/vuejs/vue/issues/9448","RelatedDescription":"Closed issue \"Event blocking in multi-page Nw.js / Electron applications\" (#9448)"},{"Id":"407400594","IsPullRequest":false,"CreatedAt":"2019-02-06T20:12:51","Actor":"tcastelly","Number":"9449","RawContent":null,"Title":"multiple v-slot with same name broken","State":"closed","Body":"### Version\r\n2.6.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/0e17wumz/](https://jsfiddle.net/0e17wumz/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWith new syntax it's not possible to use multiple `v-slot` with same name.\r\n\r\n### What is expected?\r\nDisplay the slots\r\n\r\n### What is actually happening?\r\nNothing is displayed\r\n\r\n---\r\n- With deprecated `slot` it works: https://jsfiddle.net/odvyztgw/\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9449","RelatedDescription":"Closed issue \"multiple v-slot with same name broken\" (#9449)"},{"Id":"407335997","IsPullRequest":false,"CreatedAt":"2019-02-06T20:04:43","Actor":"karljacques","Number":"9446","RawContent":null,"Title":"Firefox 52 ESR click handlers do not work","State":"closed","Body":"### Version\r\n2.6.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/pzumygcq//](https://jsfiddle.net/pzumygcq/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n * Download and install Firefox 52 ESR. Unsure if it is broken on other old versions of Firefox. \r\n* Click on show button (this is important, click handlers work if they are bound when `currentFlushTimestamp` is 0). \r\n * This will show a second button,  this button will increment the `count` variable every time it is clicked, except Firefox52 ESR\r\n\r\n### What is expected?\r\n`count` variable will increment\r\n\r\n### What is actually happening?\r\nClick handler is not firing. I've done some digging into the vue.js code and it seems due to this part of the code being incorrect, or at least the timestamp Firefox has for the event is incorrect:\r\n\r\n`handler = original._wrapper = function (e) {\r\n        if (e.timeStamp >= attachedTimestamp) {\r\n          return original.apply(this, arguments)\r\n        }\r\n      };`\r\n\r\nOn this version of Firefox,  e.timeStamp is less than attachedTimestamp\r\n\r\n---\r\nOur application is built on vue.js but we have a lot of users who use Firefox 52 ESR for it's compatibility with Silverlight and upgrading is not an option right now.\r\n\r\nSome further things I found when digging: \r\n`document.createEvent('Event').timeStamp` returns `1549471218936000` which means that vue will think that the event time is based on Date.now() rather than performance.now().\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9446","RelatedDescription":"Closed issue \"Firefox 52 ESR click handlers do not work\" (#9446)"},{"Id":"407327174","IsPullRequest":false,"CreatedAt":"2019-02-06T18:58:37","Actor":"DotNetGit","Number":"9444","RawContent":null,"Title":"Dynamic props not working with slots after 2.6x update.","State":"closed","Body":"### Version\r\n2.6.2\r\n\r\n### Reproduction link\r\nno link\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate component with slot, add dynamic prop \"itemName\" to slot like this:\r\n\r\n<slot :[itemName]=\"item\" name=\"item-content\" />\r\n\r\n### What is expected?\r\nDynamic prop is binded to the slot.\r\n\r\n### What is actually happening?\r\nDynamic prop is not binded to the slot.\r\n\r\n---\r\nI used the syntax below for a long time until the update 2.62:\r\n\r\n`<slot :[itemName]=\"item\" name=\"item-content\" />`\r\n\r\nAfter the update it is not working, I had to change it across all projects to the following:\r\n\r\n`<slot v-bind=\"{ [itemName]: item }\" name=\"item-content\" />`\r\n\r\nBut the docs from [here](https://github.com/vuejs/rfcs/blob/master/active-rfcs/0003-dynamic-directive-arguments.md#detailed-design) told that the first snippet has a valid syntax.\r\n\r\nWhat is wrong with dynamic props or slots or maybe with them both or just this syntax do not work anymore?\r\n\r\nRegards.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9444","RelatedDescription":"Closed issue \"Dynamic props not working with slots after 2.6x update.\" (#9444)"},{"Id":"407379754","IsPullRequest":false,"CreatedAt":"2019-02-06T18:52:02","Actor":"yekver","Number":"9447","RawContent":null,"Title":"Ability to access context from serverPrefetch","State":"open","Body":"### What problem does this feature solve?\r\nAfter vue 2.6 was released and serverPrefetch hook was introduces I lost a possibility to update `httpCode` during SSR if there was a data fetching failure.\r\n\r\n### What does the proposed API look like?\r\nProvide access to `context` from the `serverPrefetch` hook.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9447","RelatedDescription":"Open issue \"Ability to access context from serverPrefetch\" (#9447)"},{"Id":"407327314","IsPullRequest":false,"CreatedAt":"2019-02-06T18:30:40","Actor":"brillout","Number":"9445","RawContent":null,"Title":"Re-throwing error within Vue.config.errorHanlder results in error thrown twice","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/h92m7pad/2/](https://jsfiddle.net/h92m7pad/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n - Run the app\r\n - Look at the console\r\n\r\n### What is expected?\r\nThe error is thrown once\r\n\r\n### What is actually happening?\r\nIt is thrown twice\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9445","RelatedDescription":"Closed issue \"Re-throwing error within Vue.config.errorHanlder results in error thrown twice\" (#9445)"},{"Id":"407164057","IsPullRequest":false,"CreatedAt":"2019-02-06T17:29:35","Actor":"tcastelly","Number":"9438","RawContent":null,"Title":"cascade v-slot don't emit change of variables from scope","State":"closed","Body":"### Version\r\n2.6.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/cn09xg4k/](https://jsfiddle.net/cn09xg4k/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThere is a `card` component with `userName` and `lastName`. Each 200ms these variables are updated.\r\nBetween `user` and `card` components there is a wrapper, just to use a slot.\r\n\r\n\r\n### What is expected?\r\nVariables in `user` component should be refreshed\r\n\r\n### What is actually happening?\r\nThese two variables are displayed only once and never updated\r\n\r\n---\r\n- If I remove the wrapper it works: https://jsfiddle.net/wh1L5c2g/\r\n- If I use the previous syntax (slot/slot-scope) it works: https://jsfiddle.net/9f27h1ad/3/\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9438","RelatedDescription":"Closed issue \"cascade v-slot don't emit change of variables from scope\" (#9438)"},{"Id":"407309334","IsPullRequest":false,"CreatedAt":"2019-02-06T16:32:17","Actor":"IlyaKhD","Number":"9443","RawContent":null,"Title":"Junk props in $scopedSlots","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/5xx3jz48qn](https://codesandbox.io/s/5xx3jz48qn)\r\n\r\n### Steps to reproduce\r\n- follow the codesandbox link attached\r\n- open the App.vue\r\n- see lines 13, and 19\r\n- see console output\r\n\r\n### What is expected?\r\n$scopedSlots contains slot functions only (or empty if there are no slots at all)\r\n\r\n### What is actually happening?\r\n$scopedSlots has **_normalized** and **$stable** fields\r\n\r\n---\r\nIf these special props added to the $scopedSlots by intention - where can I find documentation on them?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9443","RelatedDescription":"Closed issue \"Junk props in $scopedSlots\" (#9443)"},{"Id":"407300744","IsPullRequest":false,"CreatedAt":"2019-02-06T15:56:19","Actor":"tanner0101","Number":"9442","RawContent":null,"Title":"bind object to select options in custom component","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/2u3p5ec0/19](https://jsfiddle.net/2u3p5ec0/19)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nChoose the same option in both select boxes.\r\n\r\n### What is expected?\r\nThe result in each paragraph below is the same.\r\n\r\n### What is actually happening?\r\nThe result for the custom box is [object Object] string instead of the actual object.\r\n\r\n---\r\nI would like to be able to re-create Vue.js's ability to bind objects to a select component in my custom component.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9442","RelatedDescription":"Closed issue \"bind object to select options in custom component\" (#9442)"},{"Id":"407261755","IsPullRequest":false,"CreatedAt":"2019-02-06T14:30:12","Actor":"DRoet","Number":"9441","RawContent":null,"Title":"Chrome autofill triggers keyup event on render/load","State":"open","Body":"### Version\r\n2.6.2\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/jdGjZx](https://codepen.io/anon/pen/jdGjZx)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1) open the codepen\r\n2) fill in username/password and force chrome to save them\r\n3) reload the page\r\n4) chrome will fill in the username/password\r\n5) console.log will show \"triggered\" twice\r\n\r\n### What is expected?\r\nThe autofill won't trigger the event listeners (worked in 2.5.22)\r\n\r\n### What is actually happening?\r\nchrome autofill triggers the event listeners on render/load\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9441","RelatedDescription":"Open issue \"Chrome autofill triggers keyup event on render/load\" (#9441)"},{"Id":"407259926","IsPullRequest":false,"CreatedAt":"2019-02-06T14:26:13","Actor":"KindWizzard","Number":"9440","RawContent":null,"Title":"Ability to cancel rendering","State":"open","Body":"### What problem does this feature solve?\r\nUnder high-load, some pages are rendered to slow. The connection is aborted by the remote side. It would be nice to be able to cancel pages rendering in this case.\r\n\r\n### What does the proposed API look like?\r\nconst rendererId = renderer.renderToString(...);\r\n\r\nrendererId.cancel();\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9440","RelatedDescription":"Open issue \"Ability to cancel rendering\" (#9440)"},{"Id":"407101514","IsPullRequest":false,"CreatedAt":"2019-02-06T13:47:56","Actor":"karudo","Number":"9435","RawContent":null,"Title":"New slot syntax does not work with components if no default slot","State":"closed","Body":"### Version\r\n2.6.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/karudo/8u0epjyo/69/](https://jsfiddle.net/karudo/8u0epjyo/69/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the fiddle\r\n\r\n### What is expected?\r\n`header` and `footer` tags content is presented\r\n\r\n### What is actually happening?\r\nonly `header` tag content is presented, `footer` tag is empty\r\n\r\n---\r\nLooks like new syntax works with `template`, but does not work with components.\r\nhowever, if the component `card` from example has default slot - everything works well, look the jsfiddle https://jsfiddle.net/karudo/8u0epjyo/70/\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9435","RelatedDescription":"Closed issue \"New slot syntax does not work with components if no default slot\" (#9435)"},{"Id":"407140161","IsPullRequest":false,"CreatedAt":"2019-02-06T13:38:23","Actor":"plehnen","Number":"9436","RawContent":null,"Title":"new v-slot syntax not working with lazy loaded components inside slot template","State":"closed","Body":"### Version\r\n2.6.2\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/ZwXRKJ](https://codepen.io/anon/pen/ZwXRKJ)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSince 2.6.x when using the new v-slot syntax the following will not work:\r\n\r\n```\r\n<template #header>\r\n  <my-component></my-component>\r\n</template>\r\n```\r\n\r\nWhen the component is imported \"lazy\" like this:\r\n\r\n```\r\ncomponents: {\r\n  MyComponent: () => import('./MyComponent'),\r\n},\r\n```\r\n\r\nThis worked with the old slot syntax. \r\n\r\nNow just nothing is shown. Only if the dom is refreshed (e.g. by some display toggle) the component is shown afterwards. But not on the first load.\r\nAnother workaround is not to use lazy imports and directly import the component.\r\n\r\n### What is expected?\r\nv-slots should work with lazy loaded components like it did with the old slot syntax.\r\n\r\n### What is actually happening?\r\nIt is not shown (until the dom is reloaded)\r\n\r\n---\r\nUnfortunately I could not reproduce this async issue with codepen.\r\n\r\nIt took me quite a while to figure out it is the lazy import which causes my page is not working correctly anymore after updating to 2.6.2. \r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9436","RelatedDescription":"Closed issue \"new v-slot syntax not working with lazy loaded components inside slot template\" (#9436)"},{"Id":"407182995","IsPullRequest":false,"CreatedAt":"2019-02-06T11:06:09","Actor":"madeshv5543","Number":"9439","RawContent":null,"Title":"Unknown custom element","State":"closed","Body":"I create component and import in the locally as well as global ,But it always says unknown custom element. Sometime it work after some time it is not.I don't know how to fix it.Please help me\r\n","Url":"https://github.com/vuejs/vue/issues/9439","RelatedDescription":"Closed issue \"Unknown custom element\" (#9439)"},{"Id":"407077587","IsPullRequest":false,"CreatedAt":"2019-02-06T10:04:12","Actor":"karudo","Number":"9434","RawContent":null,"Title":"Can't use destructed slot variables on component with v-slot directive","State":"closed","Body":"### Version\r\n2.6.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/karudo/8u0epjyo/35/](https://jsfiddle.net/karudo/8u0epjyo/35/)\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the fiddle\r\n\r\n### What is expected?\r\n\"foo bar\" in output window\r\nNo error should occur.\r\n\r\n\r\n### What is actually happening?\r\nempty output window\r\nerrors in console\r\n[Vue warn]: Property or method \"firstName\" is not defined on the instance but referenced during render\r\n[Vue warn]: Property or method \"lastName\" is not defined on the instance but referenced during render\r\n\r\n---\r\ncan't user vars on same component (not on childs)\r\n```\r\n<user v-slot=\"{firstName, lastName}\"\r\n          :first-name=\"firstName\"\r\n          :last-name=\"lastName\"\r\n    />\r\n```\r\nwith `slot-scope` parameter it was possible\r\n```\r\n<user slot-scope=\"{firstName, lastName}\"\r\n          :first-name=\"firstName\"\r\n          :last-name=\"lastName\"\r\n/>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9434","RelatedDescription":"Closed issue \"Can't use destructed slot variables on component with v-slot directive\" (#9434)"},{"Id":"407071679","IsPullRequest":false,"CreatedAt":"2019-02-06T09:53:10","Actor":"delta1186","Number":"9433","RawContent":null,"Title":"<tel: xxxxxxxxx>  causing v-bind error","State":"closed","Body":"### Version\r\n2.6.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/omfhgs24/](https://jsfiddle.net/omfhgs24/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSee the jsfiddle.  If the page has a tag of <tel:xxxxxxx> you will get a v-bind error.  <tel: is not even part of the Vue component and I am not sure why it is getting evaluated.\r\n\r\n### What is expected?\r\nThe page should load with the included <tel:xxx tags\r\n\r\n### What is actually happening?\r\nsee jsfiddle\r\n\r\n---\r\nHopefully this is something I am overlooking.  I searched the web and wasn't finding anything related.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9433","RelatedDescription":"Closed issue \"<tel: xxxxxxxxx>  causing v-bind error\" (#9433)"},{"Id":"407150775","IsPullRequest":false,"CreatedAt":"2019-02-06T09:45:09","Actor":"andreasvirkus","Number":"9437","RawContent":null,"Title":"2.6+ Custom button component kills a form's submit event","State":"closed","Body":"### Version\r\n2.6.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/738680jm5q](https://codesandbox.io/s/738680jm5q)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWhen you have a custom button component inside a native form element, it seems to (now) kill or suppress the native submit event of the form.\r\n\r\n### What is expected?\r\nClicking the button (or submitting the form in other manners, e.g. having focus on a text input and pressing enter) should trigger the form's native submit event.\r\n\r\n### What is actually happening?\r\nThere's a click event triggered on the button, but the form's submit event does not trigger.\r\n\r\n---\r\nIt works with versions prior to 2.6 (e.g. switch to 2.5.22 in the Codesandbox repl and the repl will start working as expected).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9437","RelatedDescription":"Closed issue \"2.6+ Custom button component kills a form's submit event\" (#9437)"},{"Id":"407037467","IsPullRequest":true,"CreatedAt":"2019-02-06T03:20:04","Actor":"mathe42","Number":"9431","RawContent":null,"Title":"fix(types) add exported version to type definiton","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [X] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [X] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\n```ts\r\nimport Vue from 'vue';\r\n\r\nconsole.log(Vue.version)\r\n```\r\ncurrently throws an Error with: `Property 'version' does not exist on type 'VueConstructor<Vue>'.`\r\n\r\nMy PR fixed that...","Url":"https://github.com/vuejs/vue/pull/9431","RelatedDescription":"Closed or merged PR \"fix(types) add exported version to type definiton\" (#9431)"},{"Id":"407043741","IsPullRequest":false,"CreatedAt":"2019-02-06T03:18:22","Actor":"719media","Number":"9432","RawContent":null,"Title":"async components in slots don't render on the first pass","State":"closed","Body":"### Version\r\n2.6.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/p530yln9z7](https://codesandbox.io/s/p530yln9z7)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen the repro, follow the instructions.\r\n\r\n### What is expected?\r\nComponent b should appear\r\n\r\n### What is actually happening?\r\nComponent b does not appear\r\n\r\n---\r\nUsing Vue 2.5.22 works, or not async loading the component works as well\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9432","RelatedDescription":"Closed issue \"async components in slots don't render on the first pass\" (#9432)"},{"Id":"406900140","IsPullRequest":true,"CreatedAt":"2019-02-05T17:46:09","Actor":"Justineo","Number":"9430","RawContent":null,"Title":"feat: add origin prop for <transition-group>, fix #8424","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\nAs described in #8424, `<transition-group>` now records the items' position relative to the viewport (via `getBoundingClientRect()`). While page scroll happens just before the items start to perform transition, it will look like that they are flashed out of the container and slowly move to their original position.\r\n\r\nThis PR added a new prop: `origin` for `<transition-group>`, which is a `string` value that indicates how we are gonna calculate the position of transition items. Available values are `viewport` (the current behavior) and `document`. When set to `document`, the position of the items are always calculated relative to the top left corner of the document element, which will retain their position in the document when page scroll occurs.\r\n\r\n**Other information:**\r\n\r\nHere is a show case of this PR: https://codepen.io/Justineo/project/editor/XxEKgb\r\n\r\nScroll to the bottom and click `-` to see the transition.","Url":"https://github.com/vuejs/vue/pull/9430","RelatedDescription":"Open PR \"feat: add origin prop for <transition-group>, fix #8424\" (#9430)"},{"Id":"406639723","IsPullRequest":true,"CreatedAt":"2019-02-05T16:34:17","Actor":"ktsn","Number":"9425","RawContent":null,"Title":"chore: fix typo in scheduler.js","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: fix typo\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9425","RelatedDescription":"Closed or merged PR \"chore: fix typo in scheduler.js\" (#9425)"},{"Id":"406636988","IsPullRequest":true,"CreatedAt":"2019-02-05T16:30:33","Actor":"vue-bot","Number":"9424","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/9424","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#9424)"},{"Id":"406630858","IsPullRequest":true,"CreatedAt":"2019-02-05T16:26:43","Actor":"vue-bot","Number":"9423","RawContent":null,"Title":"[automated] Patreon backers update (Feb 2019","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/9423","RelatedDescription":"Closed or merged PR \"[automated] Patreon backers update (Feb 2019\" (#9423)"},{"Id":"406796796","IsPullRequest":false,"CreatedAt":"2019-02-05T16:07:56","Actor":"engblh","Number":"9429","RawContent":null,"Title":"v-slot failed to render this.","State":"closed","Body":"### Version\r\n2.6.2\r\n\r\n### Reproduction link\r\n[https://codepen.io/engblh/pen/LqjqGg](https://codepen.io/engblh/pen/LqjqGg)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nHere is how slot is defined: \r\n\r\n            <slot name=\"dialog-title\">\r\n              Confirmation Title\r\n            </slot>\r\n\r\nhere is how its being used:\r\n\r\n      <template v-slot:dialog-title>\r\n        <span>\r\n          {{ this.dialogTitle }}\r\n        </span>\r\n      </template>\r\n\r\nthis.dialogTitle is local property on SFC. Its giving the error dialogTitle is not defined\r\n\r\n\r\n\r\n### What is expected?\r\nin previous version (2.5.17), same code was working\r\n\r\n### What is actually happening?\r\nthis.dialogTitle is local property on SFC. Its giving the error dialogTitle is not defined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9429","RelatedDescription":"Closed issue \"v-slot failed to render this.\" (#9429)"},{"Id":"406778533","IsPullRequest":false,"CreatedAt":"2019-02-05T13:18:56","Actor":"engblh","Number":"9428","RawContent":null,"Title":"v-slot broken","State":"closed","Body":"Here is how slot is defined: \r\n\r\n            <slot name=\"dialog-title\">\r\n              Confirmation Title\r\n            </slot>\r\n\r\nhere is how its being used:\r\n\r\n      <template v-slot:dialog-title>\r\n        <span>\r\n          {{ this.dialogTitle }}\r\n        </span>\r\n      </template>\r\n\r\nthis.dialogTitle is local property on SFC. Its giving the error dialogTitle is not defined\r\n\r\n\r\n\r\n<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/9428","RelatedDescription":"Closed issue \"v-slot broken\" (#9428)"},{"Id":"406765534","IsPullRequest":false,"CreatedAt":"2019-02-05T12:43:57","Actor":"riovir","Number":"9427","RawContent":null,"Title":"Integration: using HTMLTemplateElement inside CustomElements","State":"open","Body":"### What problem does this feature solve?\r\nConveniently using `Custom Elements` that require both prop bindings and `HTMLTemplateElement`s together with Vue templates.\r\n\r\nRelated fixed bug: https://github.com/vuejs/vue/issues/8041\r\n\r\nThe fix unfortunately doesn't allow the parent of the `HTMLTemplateElement` to retain its prop bindings with Vue.\r\n\r\nThe use case is similar to the `scoped slot` feature of Vue, but with `Custom Element`s. It's clear that without a special directive Vue will not assume the `<template>` is expected to be a `HTMLTemplateElement`.\r\n\r\n# Assumptions:\r\n* Using `v-pre` on the parent breaks prop bindings\r\n* Using `v-pre` on the child template still makes Vue skip rendering the `<template>` element\r\n* This behavior of `v-pre` is intended\r\n\r\n# JsFiddle:\r\nAttempts at the problem and desired solution. https://jsfiddle.net/qhkb6sof/2/\r\n\r\n### What does the proposed API look like?\r\nThe `v-native` directive, marking a tag to be rendered as the native DOM element of the same name.\r\n\r\nSince there is a [proposal](https://scotch.io/bar-talk/an-overview-of-the-most-exciting-proposals-for-the-web-platform-related-to-web-components#toc-template-instantiation-with-substituted-values) on the way to allow mustache-style expressions inside `HTMLTemplateElement`s `v-pre` might still be needed to avoid Vue interpreting the internals.\r\n\r\nOnly using the already present `v-pre` would be nice, but I'm unsure how much of the already established behavior it would break.\r\n\r\n```html\r\n<x-filtered-list :items.prop=\"['one', 'two', 'three']\" search=\"t\">\r\n  <!-- The template is intended to represent the \"native\" HTMLTemplateElement, which needs to be rendered -->\r\n  <template v-native v-pre>\r\n    <!-- The expression below expected to be ignored by Vue and rendered as is  -->\r\n    <li>{{text}}</li>\r\n  </template>\r\n</x-filtered-list>\r\n```\r\n\r\nThe resulting DOM should look like this in inspection:\r\n```HTML\r\n<x-filtered-list search=\"t\">\r\n  <template>\r\n    #document-fragment\r\n      <li>{{text}}</li>\r\n  </template>\r\n</x-filtered-list>\r\n```\r\n\r\nIdeally `<li>{{text}}</li>` ends up in the `#document-fragment`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9427","RelatedDescription":"Open issue \"Integration: using HTMLTemplateElement inside CustomElements\" (#9427)"},{"Id":"406754573","IsPullRequest":false,"CreatedAt":"2019-02-05T12:12:57","Actor":"LexSwed","Number":"9426","RawContent":null,"Title":"[2.6.2] New slot syntax doesn't allow nested templates","State":"closed","Body":"Regarding the new named slots synta.\r\nI have a component which dispatches async request and then uses received value in render. With named slots it was okay to have this kind of structure, so that I don't need to check every time whether the data is there. Is there a workaround for new slots?\r\n\r\nBefore:\r\n\r\n```html\r\n<my-component>\r\n    <template v-if=\"some !== null\"> // this allows to have many nested components that use async data which is null initially\r\n        <template slot=\"header\"> // and here I use slot from my-component\r\n            <span>{{ some.nested.values }}</span>\r\n        </template>\r\n        <template>\r\n            <span> {{ some.nested.anotherValue }} </span>\r\n        </template>\r\n    </template>\r\n</my-component>\r\n```\r\n\r\nNow:\r\n```html\r\n<my-component>\r\n    <template #header  v-if=\"some !== null\"> // check is in computed but still not good\r\n        <span>{{ some.nested.values }}</span>\r\n    </template>\r\n    <template  v-if=\"some !== null\">\r\n        <span> {{ some.nested.anotherValue }} </span>\r\n    </template>\r\n</my-component>\r\n```","Url":"https://github.com/vuejs/vue/issues/9426","RelatedDescription":"Closed issue \"[2.6.2] New slot syntax doesn't allow nested templates\" (#9426)"},{"Id":"406613091","IsPullRequest":false,"CreatedAt":"2019-02-05T03:39:50","Actor":"decademoon","Number":"9422","RawContent":null,"Title":"v-if with slot","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/decademoon/hasupd08/8/](http://jsfiddle.net/decademoon/hasupd08/8/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the fiddle.\r\n\r\n### What is expected?\r\nNo error should occur.\r\n\r\n### What is actually happening?\r\nAn error occurs:\r\n\r\n```\r\nProperty or method \"value\" is not defined on the instance but referenced during render.\r\n```\r\n---\r\nIs 2.6.x supposed to be fully compatible with 2.5.x? The generated render function is different, and it looks like `v-if` has different priority than `slot`.\r\n\r\nFor reference, [this fiddle](http://jsfiddle.net/decademoon/hasupd08/10/) shows it working in 2.5.16.\r\n\r\nMight be related to #9391.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9422","RelatedDescription":"Closed issue \"v-if with slot\" (#9422)"},{"Id":"406568917","IsPullRequest":false,"CreatedAt":"2019-02-05T03:39:50","Actor":"K900","Number":"9421","RawContent":null,"Title":"New (2.6 ) slot syntax results in slots not added to vm.$slots, breaking existing render functions","State":"closed","Body":"### Version\r\n2.6.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/3kpf9u54/4/](https://jsfiddle.net/3kpf9u54/4/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Observe the contents of the `<template>` displayed\r\n2. Change the code from `<template slot=\"content\">` to `<template #content>` or `<template v-slot:content>` and observe the contents stop being displayed\r\n3. Change the render function code from `this.$slots.content` to `this.$scopedSlots.content()` and observe the contents be displayed again\r\n\r\n### What is expected?\r\nContents are displayed all the time; old render functions don't break when used with new syntax\r\n\r\n### What is actually happening?\r\nNew syntax forces slots into being scoped, breaking existing render functions\r\n\r\n---\r\nI'm actually not sure if this is intentional or not, but it breaks Vuetify, and probably other things too. Assuming this _is_ intentional, it makes writing functional components more difficult, as you have to either:\r\n\r\n1. check both `this.$slots` (for Vue pre-2.6) and `this.$scopedSlots` (for Vue post-2.6)\r\n2. only check `this.$scopedSlots` and ask Vue pre-2.6 users to add `slot-scope` everywhere so all slots become scoped\r\n3. only check `this.$slots` and ask Vue post-2.6 users to use the legacy syntax\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9421","RelatedDescription":"Closed issue \"New (2.6 ) slot syntax results in slots not added to vm.$slots, breaking existing render functions\" (#9421)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"407467218","IsPullRequest":false,"CreatedAt":"2019-02-06T22:49:21","Actor":"ronald-d-rogers","Number":"2606","RawContent":null,"Title":"SSR memory leak in poll method","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/ronald_d_rogers/5mxdpkLj/2/](https://jsfiddle.net/ronald_d_rogers/5mxdpkLj/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nMake `router-view` appearance conditional based on some variable (or simply have it not appear):\r\n```html\r\n<div id=\"app\">\r\n  <div v-if=\"condition\">\r\n    <router-view />\r\n  </div>\r\n</div>\r\n```\r\n\r\nEnsure that the component that matches the route has a `beforeRouteEnter` guard, where a function is passed to the `next(...)` method (e.g. `next(vm => {}`):\r\n```es6\r\nexport default {\r\n  beforeRouteEnter(to, from, next) {\r\n    // Poll happens only if you pass in a function to next(...)\r\n    next(vm => {})\r\n  }\r\n}\r\n```\r\n\r\nVisit that route.\r\n```sh\r\ncurl http://localhost:8080/route\r\n```\r\n\r\nA poll will happen infinitely until `router-view` is created.\r\n\r\nIn a typical SSR application where an app is created per request, it will never be created. \r\nThe end result is a memory leak with an event loop filled with poll's every 16ms.\r\n\r\nIn the reproduction JS Fiddle, a leak occurs every time you press the `SSR Request` button.\r\nIf you set `dontLeak` to true, the leak stops.\r\n\r\nThe leak can be verified in the JS Fiddle by clicking on the `SSR Request` button a few times (say 20 times), opening Chrome Developer Tools, going to the Performance tab, and in the recording looking at the contents of \"Frame\".\r\n\r\nHere is an example repo as well:\r\nhttps://github.com/ronald-d-rogers/vue-router-ssr-memory-leak\r\n\r\n### What is expected?\r\nA new poll does not recurse infinitely for every SSR request.\r\n\r\n### What is actually happening?\r\nA new poll recurses infinitely for every SSR request.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2606","RelatedDescription":"Open issue \"SSR memory leak in poll method\" (#2606)"},{"Id":"406924907","IsPullRequest":false,"CreatedAt":"2019-02-05T21:14:03","Actor":"soyersoyer","Number":"2605","RawContent":null,"Title":"Typescript: `Location` interface typing for query should include null","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/guide/essentials/navigation.html](https://router.vuejs.org/guide/essentials/navigation.html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWhen programmatically navigating on vue router, pass through a dictionary with a param as null. E.g.\r\n\r\n```json\r\n{\r\n  \"foo\": null\r\n}\r\n```\r\n\r\n### What is expected?\r\nTypes are expected to work.\r\nThe url should be ?foo.\r\n\r\n### What is actually happening?\r\nIt works, but with an error:\r\n\r\nType '{ foo: null; }' is not assignable to type 'Dictionary<string | string[]>'.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2605","RelatedDescription":"Closed issue \"Typescript: `Location` interface typing for query should include null\" (#2605)"},{"Id":"406758040","IsPullRequest":false,"CreatedAt":"2019-02-05T12:26:27","Actor":"pikax","Number":"2604","RawContent":null,"Title":"Passing new params to the current route when props=true, doesn't update router-view","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/k50j5wn8or](https://codesandbox.io/s/k50j5wn8or)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- set mode to history\r\n- Add a route with `props: true` \r\n- Add props to that route component\r\n- App.vue beforeMount, add a `router.replace` or `router.push` with a the route `name` and `params` object.\r\n- If the route path is the same as the current route, it won't update the route\r\n\r\n### What is expected?\r\nUpdating the component props down based on params\r\n\r\n### What is actually happening?\r\nroute component defaults props\r\n\r\n---\r\nNot sure if this is the expected behaviour, even using ` <router-view :key=\"$route.fullPath\"></router-view>` doesn't do much because of the `params` don't affect the path.\r\n\r\nEncounter this when sending the app to `Error` page with custom props but when I refreshed was getting the expected values or times no props being passed.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2604","RelatedDescription":"Closed issue \"Passing new params to the current route when props=true, doesn't update router-view\" (#2604)"},{"Id":"405301212","IsPullRequest":false,"CreatedAt":"2019-01-31T15:34:59","Actor":"WisdomEye","Number":"2603","RawContent":null,"Title":"v-if mutating router-link to","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://gist.github.com/WisdomEye/d5b8169550ac06c3062490e51061a1e8](https://gist.github.com/WisdomEye/d5b8169550ac06c3062490e51061a1e8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust add an li using v-if, and then try change the value of variable, in the example bellow update start with value 0, I can add a button to increment or decrement it, and get error about mutating :for from router-link.\r\n\r\n\t<li v-if=\"update\" id=\"dashboard-menu-top-updates\">\r\n\t\t<router-link :to=\"{ name: 'Update' }\" :exact=\"$route.name === 'Update'\">Atualizações</router-link>\r\n\t</li>\r\n\r\n### What is expected?\r\nThe expected is render or remove the element without errors about mutating \":to\" from router-link\r\n\r\n### What is actually happening?\r\nThe li is correctly rendered as wished, but make a lot of erros on console about mutating \":to\" from router-link.\r\n\r\nError:\r\n\r\n[Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders. Instead, use a data or computed property based on the prop's value. Prop being mutated: \"to\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2603","RelatedDescription":"Closed issue \"v-if mutating router-link to\" (#2603)"},{"Id":"404807174","IsPullRequest":true,"CreatedAt":"2019-01-30T14:52:24","Actor":"kazupon","Number":"2602","RawContent":null,"Title":"update ja docs","State":"open","Body":"ping @ktsn \r\nCould you review it please? 🙏 ","Url":"https://github.com/vuejs/vue-router/pull/2602","RelatedDescription":"Open PR \"update ja docs\" (#2602)"},{"Id":"404175057","IsPullRequest":false,"CreatedAt":"2019-01-29T09:25:39","Actor":"avele","Number":"2601","RawContent":null,"Title":"Keep previous component until next mounted","State":"closed","Body":"### What problem does this feature solve?\r\nI want the ability to change the router-view component only when the next one is mounted. For instance, the next router-view component could be mounted separately with ```display: none```, and after the \"mounted\" event I would make the new component visible and destroy the previous component.\r\n\r\nCurrently I can only show a spinner or an overlay while the new component is loading, but I can't keep the previous component on the screen.\r\n\r\nMy usecase is similar to github repository tabs\r\n![github tabs](https://user-images.githubusercontent.com/34437766/51894559-8f384280-23c1-11e9-9637-3fc10ae17fa4.gif)\r\nI want to mimic the standard, non-SPA browser behavior.\r\n\r\n### What does the proposed API look like?\r\nA prop for ```<router-view>,``` perhaps \"preload\" or \"changeOnMounted\".\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2601","RelatedDescription":"Closed issue \"Keep previous component until next mounted\" (#2601)"},{"Id":"403528797","IsPullRequest":true,"CreatedAt":"2019-01-27T15:14:57","Actor":"Alex-Sokolov","Number":"2599","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"ref: https://github.com/vuejs/vue-router/commit/c3e587238a4e6d4e650e762b3442b286fcb9fe36#diff-e3e2a9bfd88566b05001b02a3f51d286","Url":"https://github.com/vuejs/vue-router/pull/2599","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#2599)"},{"Id":"403531058","IsPullRequest":false,"CreatedAt":"2019-01-27T11:32:03","Actor":"rominf","Number":"2600","RawContent":null,"Title":"beforeEnter next callback is not called","State":"closed","Body":"### Version\r\n2.5.22\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/2ykhv8jq/](https://jsfiddle.net/2ykhv8jq/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a route with `beforeEnter` handler which calls `next` with a callback function.\r\n\r\nIn jsfiddle.net click the button and check the console.\r\n\r\n### What is expected?\r\n\"Am i called\" and the `vm` should be present. \r\n\r\n### What is actually happening?\r\nLine with \"Am i called\" is not present.\r\n\r\n---\r\nCode borrowed from https://github.com/vuejs/vue-router/issues/737#issuecomment-446565958\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2600","RelatedDescription":"Closed issue \"beforeEnter next callback is not called\" (#2600)"},{"Id":"402747012","IsPullRequest":true,"CreatedAt":"2019-01-24T15:02:10","Actor":"jcoyne","Number":"2598","RawContent":null,"Title":"Update vue-router version to match package.json","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2598","RelatedDescription":"Closed or merged PR \"Update vue-router version to match package.json\" (#2598)"},{"Id":"402626070","IsPullRequest":false,"CreatedAt":"2019-01-24T09:56:40","Actor":"cybermerlin","Number":"2597","RawContent":null,"Title":"hey guys, I have trouble with dynamic imports in routes","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/issues/215#issuecomment-456791509](https://github.com/vuejs/vue-router/issues/215#issuecomment-456791509)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nhttps://github.com/vuejs/vue-router/issues/215#issuecomment-456791509\r\n\r\npls, watch on the screenshot\r\n\r\n### What is expected?\r\ngood work\r\n\r\n### What is actually happening?\r\nnot work\r\n\r\n---\r\nhttps://github.com/vuejs/vue-router/issues/215#issuecomment-456791509\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2597","RelatedDescription":"Closed issue \"hey guys, I have trouble with dynamic imports in routes\" (#2597)"},{"Id":"402529730","IsPullRequest":false,"CreatedAt":"2019-01-24T08:23:24","Actor":"mice33","Number":"2596","RawContent":null,"Title":"Vue-router not work properly when the onload event of window not triggered","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/mice33/router-demo](https://github.com/mice33/router-demo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1.run dev && visit website  \r\n2.click 'go to h2' link  \r\n3.click 'go back' link, can't go back now when the onload event of window not triggered\r\n\r\n### What is expected?\r\n3.click 'go back' link, can go back\r\n\r\n### What is actually happening?\r\n3.click 'go back' link, can't go back\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\nSame problem #2320 ","Url":"https://github.com/vuejs/vue-router/issues/2596","RelatedDescription":"Closed issue \"Vue-router not work properly when the onload event of window not triggered\" (#2596)"},{"Id":"402518493","IsPullRequest":false,"CreatedAt":"2019-01-24T07:49:51","Actor":"ovarte","Number":"2594","RawContent":null,"Title":"vue-router and axios 拦截器一起使用 出现的异步问题","State":"closed","Body":"### Version\r\n2.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jwdtae9u/3/](https://jsfiddle.net/jwdtae9u/3/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n详见JSFiddle。通过后端返回的数据，判断是登录状态或者管理员或者进入维护，或者强制进入公告，但是异步问题，请问怎么解决呢\r\n\r\n### What is expected?\r\n通过后端返回的数据，判断是登录状态或者管理员或者进入维护，或者强制进入公告，但是异步问题，axios 里的next()不生效。请问怎么解决呢\r\n\r\n### What is actually happening?\r\n通过后端返回的数据，判断是登录状态或者管理员或者进入维护，或者强制进入公告，但是异步问题，axios 里的next()不生效。\r\n\r\n---\r\n怎么解决 vue-router和 axios 拦截器 一起使用的问题呢 非常感谢\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2594","RelatedDescription":"Closed issue \"vue-router and axios 拦截器一起使用 出现的异步问题\" (#2594)"},{"Id":"402529161","IsPullRequest":false,"CreatedAt":"2019-01-24T03:41:50","Actor":"mice33","Number":"2595","RawContent":null,"Title":"Vue-router not work properly when the onload event of window not triggered","State":"closed","Body":"Demo: https://github.com/mice33/router-demo\r\n\r\nChrome 70\r\n\r\ncan't from 'h2' page go back 'Hello World' page when the onload event of window not triggered\r\n\r\nsteps:\r\n1. run dev && visit website\r\n2. click 'go to h2' link\r\n3. click 'go back' link, can't go back now when the onload event of window not triggered\r\n\r\nlink #2320 ","Url":"https://github.com/vuejs/vue-router/issues/2595","RelatedDescription":"Closed issue \"Vue-router not work properly when the onload event of window not triggered\" (#2595)"},{"Id":"401790731","IsPullRequest":false,"CreatedAt":"2019-01-22T14:29:48","Actor":"yegorLitvinov","Number":"2593","RawContent":null,"Title":"replaceState Error when path starts with // and scrollBehavior is set","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/yegorLitvinov/vue-router-bug](https://github.com/yegorLitvinov/vue-router-bug)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSet scrollBehavior property in router config. Put two forward slashes into beginning of the url (e.g. http://localhost:8081//about)\r\n\r\n### What is expected?\r\nNo errors in console\r\n\r\n### What is actually happening?\r\nIn firefox: SecurityError: The operation is insecure.\r\nIn Chrome: Uncaught DOMException: Failed to execute 'replaceState' on 'History': A history state object with URL 'http://about/' cannot be created in a document with origin 'http://localhost:8081' and URL 'http://localhost:8081//about'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2593","RelatedDescription":"Open issue \"replaceState Error when path starts with // and scrollBehavior is set\" (#2593)"},{"Id":"401651538","IsPullRequest":true,"CreatedAt":"2019-01-22T08:34:55","Actor":"zrh122","Number":"2592","RawContent":null,"Title":"fix(router-view): add condition to see whether the tree is inactive (fix #2552)","State":"open","Body":"close #2552\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2592","RelatedDescription":"Open PR \"fix(router-view): add condition to see whether the tree is inactive (fix #2552)\" (#2592)"},{"Id":"401560199","IsPullRequest":true,"CreatedAt":"2019-01-22T01:15:28","Actor":"Sayegh7","Number":"2591","RawContent":null,"Title":"Warn about root paths without a leading slash (fix #2550)","State":"open","Body":"close #2550\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nThis PR creates the following warning message when a root route exists without a leading slash:\r\n<img width=\"583\" alt=\"screen shot 2019-01-22 at 3 12 15 am\" src=\"https://user-images.githubusercontent.com/13800170/51506192-b2785600-1df3-11e9-8ef0-7607ac68aa2b.png\">\r\n\r\nThis facilitates the debugging process as the current behavior does not generate any warnings or errors.","Url":"https://github.com/vuejs/vue-router/pull/2591","RelatedDescription":"Open PR \"Warn about root paths without a leading slash (fix #2550)\" (#2591)"},{"Id":"401548570","IsPullRequest":true,"CreatedAt":"2019-01-22T00:02:47","Actor":"zigomir","Number":"2590","RawContent":null,"Title":"feat: add browser ESM build","State":"open","Body":"POC\r\n\r\nfixes https://github.com/vuejs/vue-router/issues/2589\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2590","RelatedDescription":"Open PR \"feat: add browser ESM build\" (#2590)"},{"Id":"401532763","IsPullRequest":false,"CreatedAt":"2019-01-21T22:37:34","Actor":"zigomir","Number":"2589","RawContent":null,"Title":"Browser ES module build","State":"open","Body":"### What problem does this feature solve?\r\nNow with https://github.com/vuejs/vue/pull/7110 in place and https://github.com/vuejs/vuex/pull/1401 we should probably expose `vue-router` ES module build (minified and non–minifed) so that develpers can use main three vue libraries with `<script type=\"module>` and without any build step.\r\n\r\nWould you merge a PR that solves that?\r\n\r\n\r\n### What does the proposed API look like?\r\nNo changes\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2589","RelatedDescription":"Open issue \"Browser ES module build\" (#2589)"},{"Id":"401382250","IsPullRequest":true,"CreatedAt":"2019-01-21T14:39:41","Actor":"pfeiferbit","Number":"2588","RawContent":null,"Title":"docs: add descriptions for parseQuery / stringifyQuery","State":"open","Body":"This clears up what the implementor of these functions has to expect.\r\n\r\n---\r\n\r\nStumbled across this while trying to use the [qs](https://www.npmjs.com/package/qs) package for `parseQuery` and `stringifyQuery` since I work with a PHP backend that relies on `foo[bar][baz]=qux` syntax with a strict RFC-3986 encoding.\r\n\r\nWording could probably be better since English ain't my primary language.\r\n\r\nGreetings","Url":"https://github.com/vuejs/vue-router/pull/2588","RelatedDescription":"Open PR \"docs: add descriptions for parseQuery / stringifyQuery\" (#2588)"},{"Id":"401250071","IsPullRequest":true,"CreatedAt":"2019-01-21T09:53:43","Actor":"bbbbx","Number":"2587","RawContent":null,"Title":"docs: make title more understandable","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\nThe title does not match the body description.\r\n","Url":"https://github.com/vuejs/vue-router/pull/2587","RelatedDescription":"Closed or merged PR \"docs: make title more understandable\" (#2587)"},{"Id":"401127483","IsPullRequest":true,"CreatedAt":"2019-01-20T18:53:21","Actor":"Aferz","Number":"2586","RawContent":null,"Title":"feat(transition): Using router push/replace instead of private history functions","State":"open","Body":"I've found myself overriding the main Router to be able to control the `.back` method to prevent the user clicks on my app button a leaves the application. Check this example:\r\n\r\n```javascript\r\nclass Router extends VueRouter {\r\n  constructor (...args) {\r\n    super(...args)\r\n\r\n    this.counter = 0\r\n  }\r\n\r\n  push (location, ...args) {\r\n    super.push(location, ...args)\r\n\r\n    this.counter++\r\n  }\r\n\r\n  go (n) {\r\n    if (this.counter + n < 0) {\r\n      super.replace({ name: 'home.feed' })\r\n    } else {\r\n      super.go(n)\r\n    }\r\n\r\n    this.counter += n\r\n  }\r\n}\r\n```\r\n\r\nThanks to this approach, product links can be shared without worring the back button that linked pages contain will destroy the application once pressed. (The same behaviour as Twitter PWA)\r\n\r\n---\r\n\r\nWhat I mean is the `beforeEach` guard is not respecting the overriden methods (push, replace, etc...), because it uses the `history` driver directly when it has to redirect to a route, instead of using the router instance.\r\n\r\nThis could be taken as a _Breaking Change_ for users like me that decided to wrap the router in their own classes, but I honestly think that this usage of the router is outside of the scope of the vue-router maintainers.\r\n\r\nWhat do you all think?","Url":"https://github.com/vuejs/vue-router/pull/2586","RelatedDescription":"Open PR \"feat(transition): Using router push/replace instead of private history functions\" (#2586)"},{"Id":"400645992","IsPullRequest":false,"CreatedAt":"2019-01-18T09:43:00","Actor":"zpcalan","Number":"2585","RawContent":null,"Title":"vue-router 调用push跳转路由后，界面的js动画不生效，要手动刷新下界面才会生效","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2585","RelatedDescription":"Closed issue \"vue-router 调用push跳转路由后，界面的js动画不生效，要手动刷新下界面才会生效\" (#2585)"},{"Id":"400532266","IsPullRequest":false,"CreatedAt":"2019-01-18T08:36:39","Actor":"igorveremsky","Number":"2584","RawContent":null,"Title":"router-view mounted lifehook?","State":"closed","Body":"### What problem does this feature solve?\r\nI use preloader at my spa and want to hide it only if page DOM ready, for not clone code to mounted lifehook of all my routes components will be good to have general mounted lifehook for `router-view` \r\n\r\n### What does the proposed API look like?\r\n```js\r\nRouter.viewMounted(() => {\r\n\t// do some on router view mounted\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2584","RelatedDescription":"Closed issue \"router-view mounted lifehook?\" (#2584)"},{"Id":"398942715","IsPullRequest":true,"CreatedAt":"2019-01-17T19:28:16","Actor":"tuxinghuan","Number":"2578","RawContent":null,"Title":"docs(zh):fix a mistake of style","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2578","RelatedDescription":"Closed or merged PR \"docs(zh):fix a mistake of style\" (#2578)"},{"Id":"400231452","IsPullRequest":true,"CreatedAt":"2019-01-17T11:58:02","Actor":"SetSplin","Number":"2583","RawContent":null,"Title":"fix(create-matcher): \"cannot assign to read only property path\"","State":"closed","Body":"In create-matcher.js in match function location was marked as constant. That course as error described here (https://github.com/vuejs/vue-router/issues/1381)\r\n","Url":"https://github.com/vuejs/vue-router/pull/2583","RelatedDescription":"Closed or merged PR \"fix(create-matcher): \"cannot assign to read only property path\"\" (#2583)"},{"Id":"400009896","IsPullRequest":false,"CreatedAt":"2019-01-16T21:39:40","Actor":"trainiac","Number":"2582","RawContent":null,"Title":"Ability to set and reference redirectParams","State":"open","Body":"### What problem does this feature solve?\r\nIn order to issue a 301 redirect vs a 302 redirect in vue router there is no easy way to do that in userland.  Currently you have to write a custom redirect function and throw an error with the information that you need.\r\n\r\n```\r\n{ \r\n  path: '/old-path': \r\n  redirect() => {\r\n    const error = new Error('Permanent Redirect')\r\n    error.redirect = {\r\n      code: 301,\r\n      url: '/new-path',\r\n    }\r\n    throw error\r\n  }\r\n}\r\n```\r\n\r\n### What does the proposed API look like?\r\nIn your redirects you can define\r\n```js\r\n{ \r\n  path: '/old-path': \r\n  redirect: '/new-path', \r\n  redirectParams: { \r\n    responseCode: 301 \r\n  } \r\n}\r\n```\r\n\r\nAnd in a `beforeEach` handler you could reference the meta info\r\n```\r\nrouter.beforeEach((to, from, next) => {\r\n   to.redirectedFrom === '/old-path'\r\n   to.redirectParams.responseCode === 301\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2582","RelatedDescription":"Open issue \"Ability to set and reference redirectParams\" (#2582)"},{"Id":"399751623","IsPullRequest":false,"CreatedAt":"2019-01-16T13:04:21","Actor":"JeromeDeLeon","Number":"2581","RawContent":null,"Title":"Unknown element of vue router (e.g. router-link, router-view)","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/JeromeDeLeon/vue-router-bug](https://github.com/JeromeDeLeon/vue-router-bug)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n* Create a project using vue-cli choosing manual preset.\r\n* Enable the following features:\r\n   -  Babel\r\n   -  Router\r\n   -  Vuex\r\n   -  Use config files\r\n* Run the application in development\r\n\r\n### What is expected?\r\nShow the template of Home.vue\r\n\r\n### What is actually happening?\r\nThe app was just showing the \"Home | About\" and nothing else. In console (dev tools), there's an error showing unknown elements for router-link and router-view.\r\n\r\n---\r\nI just did nothing but follow the documentation when creating a project but did a side note of manually selecting the features.\r\nI tried again to create another project, but same result. Again, I tried, same result but there's no error in the console (dev tools)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2581","RelatedDescription":"Closed issue \"Unknown element of vue router (e.g. router-link, router-view)\" (#2581)"},{"Id":"399397648","IsPullRequest":false,"CreatedAt":"2019-01-15T18:41:38","Actor":"salomvary","Number":"2580","RawContent":null,"Title":"beforeRouteUpdate is not called on the first navigation when routing to the same component","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/salomvary/qcfg8xm7/18/](https://jsfiddle.net/salomvary/qcfg8xm7/18/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Open the linked JSFiddle link\r\n- Open the developer console\r\n- Click on \"Go to /foo/one\"\r\n- Look at the console logs\r\n\r\n### What is expected?\r\n'foo:beforeRouteUpdate'  to be logged on the first navigation.\r\n\r\n### What is actually happening?\r\n'foo:beforeRouteUpdate'  is not logged on the first navigation.\r\n\r\n---\r\nWorkaround: watching `$route` seems to work as expected.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2580","RelatedDescription":"Closed issue \"beforeRouteUpdate is not called on the first navigation when routing to the same component\" (#2580)"},{"Id":"399242944","IsPullRequest":true,"CreatedAt":"2019-01-15T08:51:35","Actor":"CharlesOkwuagwu","Number":"2579","RawContent":null,"Title":"Change `url=\"/\"` to `url=\"index.html\"`","State":"open","Body":"When `publicPath` is set, for some reason `url=\"/\"` fails in the Rewrite.\r\n\r\n`url=\"index.html\"` works regardless of `publicPath` setting\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2579","RelatedDescription":"Open PR \"Change `url=\"/\"` to `url=\"index.html\"`\" (#2579)"},{"Id":"398212810","IsPullRequest":true,"CreatedAt":"2019-01-11T09:59:34","Actor":"tuxinghuan","Number":"2577","RawContent":null,"Title":"docs(zh): link to the correct website","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2577","RelatedDescription":"Closed or merged PR \"docs(zh): link to the correct website\" (#2577)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"407229198","IsPullRequest":false,"CreatedAt":"2019-02-06T13:13:41","Actor":"SumNeuron","Number":"1502","RawContent":null,"Title":"DOCUMENTATION REQUEST: how to publish vuex module on npm. how to publish sfc component library and vuex module on npm","State":"open","Body":"### What problem does this feature solve?\r\nVuex modules, in theory, are divorced of their vue components which access them. One could take the module, register it and (re)make components to utilize the vuex module as desired. However, in (perhaps poor) practice, vuex modules and vue components are often made concurrently; namely, the components serve as the api to the store and it is expected that inclusion of the vue components come _with_ the vuex module.\r\n\r\nHowever turning a vuex module and library of sfcs into reusable chunks does not seem to be straight forward.\r\n\r\nThe expected behavior would be using the vue-cli to create a new project with a vuex store.\r\nthe store would be moved to its own directory:\r\n\r\n```\r\nsrc/\r\n-- store/\r\n---- modules/\r\n------ moduleA/\r\n-------- actions.js\r\n-------- state.js\r\n-------- mutations.js\r\n-------- getters.js\r\n-------- store.js \r\n...\r\n```\r\n\r\nAll components under `src/components` (or nested directories) would be exposed so users could import each constitute component\r\nAll modules under `src/store/modules` would be exposed so users could just import the module if desired \r\n\r\n\r\n### What does the proposed API look like?\r\n```\r\n# install library\r\nnpm install vuex-vue-sfc-library\r\n\r\n# inside app.vue or some other component\r\n// import the vuex modules and components that access the modules \r\nimport {moduleA, nestedComponentB, conglomerateComponentA} from 'vuex-vue-sfc-library\r\n\r\nexport default {\r\n    components: {\r\n        nestedComponentB, conglomerateComponentA\r\n    },\r\n    created() {\r\n        this.$store.registerModule('moduleA', moduleA)\r\n    }\r\n\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1502","RelatedDescription":"Open issue \"DOCUMENTATION REQUEST: how to publish vuex module on npm. how to publish sfc component library and vuex module on npm\" (#1502)"},{"Id":"406055885","IsPullRequest":true,"CreatedAt":"2019-02-03T05:46:08","Actor":"tuxinghuan","Number":"1501","RawContent":null,"Title":"docs(zh):fix a small typo","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1501","RelatedDescription":"Open PR \"docs(zh):fix a small typo\" (#1501)"},{"Id":"405681673","IsPullRequest":false,"CreatedAt":"2019-02-01T12:29:01","Actor":"dcrystalj","Number":"1500","RawContent":null,"Title":"Confusing namespaced api","State":"open","Body":"### What problem does this feature solve?\r\nThe most confusing thing when using namespaced vuex is inconsistant api with state and getters.\r\n\r\nExample:\r\nto access state \r\n`this.$store.state.user.name`\r\n\r\nto access getter\r\n`this.$store.getters['user/fullName']`\r\n\r\nThis is so confusing for me and my coworkers. Is there reason to have this inconsistency?\r\n\r\n\r\n\r\nProblem occurs when you try to watch getters\r\nexample:\r\n```\r\nwatch: {\r\n  '$store.state.user.name': {\r\n    handler(name) {\r\n      console.log(name)\r\n    },\r\n  },\r\n  '$store.getters[user/fullName]': { // not working\r\n    handler(fullName) {\r\n      console.log(fullName)\r\n    },\r\n  },\r\n}\r\n```\r\nCurrent solution Is to use mapGetters() helper for getters only. Why? because of weird api.\r\nPlease note that we try to avoid mapGetters, mapState helpers... due to explicitly in large app\r\n\r\n### What does the proposed API look like?\r\nAdd api for getters same as is for state.\r\n\r\nExample:\r\n`$store.gettters.user.fullName`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1500","RelatedDescription":"Open issue \"Confusing namespaced api\" (#1500)"},{"Id":"405256578","IsPullRequest":true,"CreatedAt":"2019-01-31T13:55:17","Actor":"Alex-Sokolov","Number":"1499","RawContent":null,"Title":"docs: [RU] Translation update","State":"open","Body":"ref: https://github.com/vuejs/vuex/pull/1484","Url":"https://github.com/vuejs/vuex/pull/1499","RelatedDescription":"Open PR \"docs: [RU] Translation update\" (#1499)"},{"Id":"404720187","IsPullRequest":true,"CreatedAt":"2019-01-31T13:42:34","Actor":"kazupon","Number":"1497","RawContent":null,"Title":"update ja docs","State":"closed","Body":"/ping @ktsn  🙏 ","Url":"https://github.com/vuejs/vuex/pull/1497","RelatedDescription":"Closed or merged PR \"update ja docs\" (#1497)"},{"Id":"398365001","IsPullRequest":true,"CreatedAt":"2019-01-31T13:11:02","Actor":"fsblemos","Number":"1484","RawContent":null,"Title":"docs: complement preserveState information","State":"closed","Body":"It is not very clear the purpose of `preserveState` option in the docs. \r\n\r\n[This comment](https://github.com/vuejs/vuex/issues/1130#issuecomment-356612119) clarified the behavior, so I included in a dedicated `preserveState` subsection.","Url":"https://github.com/vuejs/vuex/pull/1484","RelatedDescription":"Closed or merged PR \"docs: complement preserveState information\" (#1484)"},{"Id":"397545948","IsPullRequest":true,"CreatedAt":"2019-01-31T11:18:22","Actor":"periscuelo","Number":"1481","RawContent":null,"Title":"docs: Update to version 3.1.0 [pt-br]","State":"closed","Body":"I made one update to be equal to english version explanation.\r\n@ktsn Can you review / merge it?\r\n\r\nThanks","Url":"https://github.com/vuejs/vuex/pull/1481","RelatedDescription":"Closed or merged PR \"docs: Update to version 3.1.0 [pt-br]\" (#1481)"},{"Id":"404724217","IsPullRequest":false,"CreatedAt":"2019-01-30T11:22:55","Actor":"Yxjhasadream","Number":"1498","RawContent":null,"Title":"How to assign a value to the state ，I tried it ,  but there seems to be something wrong","State":"closed","Body":"I want to assign a value to the state under the root instance, but it seems to have failed, and does anyone know where it's wrong to operate? \r\n(我想在根实例下给state赋值，但是好像失败了，有人知道是哪儿操作不对吗？ )\r\n\r\n![image](https://user-images.githubusercontent.com/35222088/51978122-37363480-24c4-11e9-8d15-18e3cfbe20d0.png)\r\n\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1498","RelatedDescription":"Closed issue \"How to assign a value to the state ，I tried it ,  but there seems to be something wrong\" (#1498)"},{"Id":"395016740","IsPullRequest":true,"CreatedAt":"2019-01-30T09:31:05","Actor":"angeliski","Number":"1476","RawContent":null,"Title":"docs: Removed english from translated guide [pt-br]","State":"closed","Body":"Hi!\r\nI noticed a english paragraph forgotten  in the guide translated,\r\nthe pr is just to fix.","Url":"https://github.com/vuejs/vuex/pull/1476","RelatedDescription":"Closed or merged PR \"docs: Removed english from translated guide [pt-br]\" (#1476)"},{"Id":"404307621","IsPullRequest":true,"CreatedAt":"2019-01-30T09:09:02","Actor":"Jinjiang","Number":"1495","RawContent":null,"Title":"docs(zh): new subscribeAction options","State":"closed","Body":"https://github.com/vuejs/vuex/compare/da22a6e...48263f8\r\n/ping @justineo","Url":"https://github.com/vuejs/vuex/pull/1495","RelatedDescription":"Closed or merged PR \"docs(zh): new subscribeAction options\" (#1495)"},{"Id":"404581823","IsPullRequest":true,"CreatedAt":"2019-01-30T03:09:09","Actor":"magicdawn","Number":"1496","RawContent":null,"Title":"support jsdelivr npm cdn like vue package does","State":"open","Body":"see difference here:\r\n\r\n- https://cdn.jsdelivr.net/npm/vue/package.json\r\n- https://cdn.jsdelivr.net/npm/vuex/package.json","Url":"https://github.com/vuejs/vuex/pull/1496","RelatedDescription":"Open PR \"support jsdelivr npm cdn like vue package does\" (#1496)"},{"Id":"403435496","IsPullRequest":false,"CreatedAt":"2019-01-26T12:03:22","Actor":"VanquisherMe","Number":"1494","RawContent":null,"Title":"解决 SSR 场景中 cookie 穿透 问题","State":"open","Body":"### What problem does this feature solve?\r\nSSR 场景中 cookie 穿透问题，在服务器入口，创建store的时候可以添加，自定函数，这样我就可以判断是服务端还是客户端来决定 异步请求的逻辑，并且在actions 第一个参数 context，添加上这个自定义函数的对象，就可以在store actions的时候拿到这个请求函数，如此可以完美解决 SSR 场景中 服务端无非带cookie 的问题\r\n\r\n### What does the proposed API look like?\r\n new Vuex.Store({\r\n    method:{\r\n        request(){\r\n           ...请求函数\r\n        }\r\n    }\r\n  });\r\n\r\nactions:{\r\n    getuser({ method }){  method.request(\"url\") }\r\n}\r\n\r\nthis.$store.method.request(\"url\")\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1494","RelatedDescription":"Open issue \"解决 SSR 场景中 cookie 穿透 问题\" (#1494)"},{"Id":"402616222","IsPullRequest":false,"CreatedAt":"2019-01-24T09:32:52","Actor":"super918180","Number":"1493","RawContent":null,"Title":"I can't export all state from namespace module, I can only export one by one.","State":"open","Body":"### What problem does this feature solve?\r\nuse mapState with namespace and no state params expprt all state in namespace\r\n\r\n### What does the proposed API look like?\r\nmapState('namespace')\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1493","RelatedDescription":"Open issue \"I can't export all state from namespace module, I can only export one by one.\" (#1493)"},{"Id":"402611473","IsPullRequest":false,"CreatedAt":"2019-01-24T09:20:54","Actor":"super918180","Number":"1492","RawContent":null,"Title":"I can't  export all state from namespace module, I can only export one by one.","State":"closed","Body":"\r\n![image](https://user-images.githubusercontent.com/20025505/51667964-18372e80-1ffc-11e9-92ee-298f979fd8c0.png)\r\nI can't  export all state from namespace module, I can only export one by one.","Url":"https://github.com/vuejs/vuex/issues/1492","RelatedDescription":"Closed issue \"I can't  export all state from namespace module, I can only export one by one.\" (#1492)"},{"Id":"402347190","IsPullRequest":false,"CreatedAt":"2019-01-23T17:22:06","Actor":"GbAlien","Number":"1491","RawContent":null,"Title":"Optional attribute declared as required on typescript declaration","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/types/index.d.ts](https://github.com/vuejs/vuex/blob/dev/types/index.d.ts)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTest a mutation without payload on typescript\r\n\r\n### What is expected?\r\nTypescript not complain about missing payload\r\n\r\n### What is actually happening?\r\nTypescript complains about missing payload\r\n\r\n---\r\nchange: \r\n\r\nexport type Mutation<S\\> = (state: S, payload: any) => any;\r\n\r\nto:\r\n\r\nexport type Mutation<S\\> = (state: S, payload?: any) => any;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1491","RelatedDescription":"Open issue \"Optional attribute declared as required on typescript declaration\" (#1491)"},{"Id":"400419899","IsPullRequest":true,"CreatedAt":"2019-01-18T08:42:24","Actor":"Alex-Sokolov","Number":"1488","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1488","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1488)"},{"Id":"400557628","IsPullRequest":false,"CreatedAt":"2019-01-18T03:28:36","Actor":"indirectlylit","Number":"1490","RawContent":null,"Title":"validators and type checks for mutations","State":"open","Body":"### What problem does this feature solve?\r\n\r\nIn vue, prop validation during development is a great way to catch bugs early. A similar feature would be useful for Vuex mutations.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    budget: 0,\r\n    people: {},\r\n  },\r\n  mutations: {\r\n    setBudget: {\r\n      mutation(state, value) {\r\n        state.budget = value;\r\n      },\r\n      type: Number,\r\n    },\r\n    addPerson: {\r\n      mutation(state, value) {\r\n        state.people[value.id] = value;\r\n      },\r\n      type: Object,\r\n      validator(value) {\r\n        return value.id && value.name && value.age;\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1490","RelatedDescription":"Open issue \"validators and type checks for mutations\" (#1490)"},{"Id":"400471802","IsPullRequest":false,"CreatedAt":"2019-01-17T21:31:33","Actor":"jmplahitko","Number":"1489","RawContent":null,"Title":"ActionSubscribersObject.after() hook will not be called if action results in a rejected promise","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://codepen.io/jmplahitko/pen/EGzMPG](https://codepen.io/jmplahitko/pen/EGzMPG)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWith console open:\r\nClick Resolved button: before hook consoles, action consoles, after hook consoles.\r\nClick Rejected button: before hook consoles, action consoles, after hook does not console.\r\n\r\n### What is expected?\r\nIf an action results in a rejected promise (for instance, in the case where an HTTP call results in an error), ActionSubscribersObject.after() hooks should still be called. \r\n\r\n### What is actually happening?\r\nIf an action results in a rejected promise, ActionSubscribersObject.after() hooks are not called. \r\n\r\n---\r\nThis was found when integrating with the new ActionSubscribersObject for turning spinners on and off. In the case of an HTTP call resulting in an error, spinners don't go away. Hope this helps.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1489","RelatedDescription":"Open issue \"ActionSubscribersObject.after() hook will not be called if action results in a rejected promise\" (#1489)"},{"Id":"400328191","IsPullRequest":true,"CreatedAt":"2019-01-17T15:25:51","Actor":"Sharpie360","Number":"1487","RawContent":null,"Title":"docs: added wording for rootState access in module mutations","State":"open","Body":"Added content for accessing Store rootState in module mutations by passing through action. included example code snippets that are well explained and brief. Using this pattern in my current project.","Url":"https://github.com/vuejs/vuex/pull/1487","RelatedDescription":"Open PR \"docs: added wording for rootState access in module mutations\" (#1487)"},{"Id":"399771919","IsPullRequest":false,"CreatedAt":"2019-01-16T11:46:35","Actor":"ascolshubhu","Number":"1486","RawContent":null,"Title":"Vuex: Weird question on weird behavior of vuex. I need at least one mutation and a commit to update or assign to my store objects","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nI'm trying to set token to my store.token I know this is not a best option without using mutation but I'm doing something like this:\r\n\r\n```\r\nmethods : {\r\n        molestor(){\r\n            const self = this;\r\n            this.$store.state.token = \"new token\";\r\n            this.$store.state.cleavage= \"yes\";\r\n            this.$store.commit('settoken', \"somethingrandom\");\r\n        },  \r\n}\r\n```\r\nThen on my store.js:\r\n\r\n```\r\nexport const store = new Vuex.Store({\r\n    state : {\r\n        token : '',\r\n\r\n    },\r\n    mutations : {\r\n        settoken(state,token){\r\n            console.log(token);\r\n        }\r\n    }\r\n});\r\n```\r\nRight now it works fine... it sets up. But when I remove the mutation from store.js or remove the commit on my molester() it wont assign the value to token. Why is this happening?","Url":"https://github.com/vuejs/vuex/issues/1486","RelatedDescription":"Closed issue \"Vuex: Weird question on weird behavior of vuex. I need at least one mutation and a commit to update or assign to my store objects\" (#1486)"},{"Id":"399312235","IsPullRequest":false,"CreatedAt":"2019-01-15T11:56:19","Actor":"mrkstwrt","Number":"1485","RawContent":null,"Title":"Unable to override types/vue.d.ts","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/types/vue.d.ts](https://github.com/vuejs/vuex/blob/dev/types/vue.d.ts)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n`types/vue.d.ts` contains the following\r\n\r\n```\r\ndeclare module \"vue/types/options\" {\r\n  interface ComponentOptions<V extends Vue> {\r\n    store?: Store<any>;\r\n  }\r\n}\r\n\r\ndeclare module \"vue/types/vue\" {\r\n  interface Vue {\r\n    $store: Store<any>;\r\n  }\r\n}\r\n```\r\n\r\n### What is expected?\r\nI feel like it should be possible to override this with `store?: Store<MyState>` and `$store: Store<MyState>` to allow `this.$store` etc. on the Vue instance to be fully typed.\r\n\r\n### What is actually happening?\r\nYou can't redeclare an interface property, so trying to do so will result in a TypeScript error.\r\n\r\n---\r\nIt feels like if you go to all the effort of fully typing out your whole vuex store it's rendered pretty much useless if your app makes heavy use of `this.$store.state.foo`. This is especially an issue for me because I use nuxt and do a lot with `$store` in the `asyncData` functions. I've searched around for a fix or a workaround but not come up with much. Is there something I am missing here?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1485","RelatedDescription":"Open issue \"Unable to override types/vue.d.ts\" (#1485)"},{"Id":"397755794","IsPullRequest":true,"CreatedAt":"2019-01-10T10:14:56","Actor":"lishihong","Number":"1483","RawContent":null,"Title":"Revert 1457 patch 1","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1483","RelatedDescription":"Closed or merged PR \"Revert 1457 patch 1\" (#1483)"},{"Id":"397745237","IsPullRequest":true,"CreatedAt":"2019-01-10T09:40:39","Actor":"lishihong","Number":"1482","RawContent":null,"Title":"Update index.js","State":"closed","Body":"test","Url":"https://github.com/vuejs/vuex/pull/1482","RelatedDescription":"Closed or merged PR \"Update index.js\" (#1482)"},{"Id":"396165778","IsPullRequest":false,"CreatedAt":"2019-01-07T10:20:13","Actor":"SebastianS90","Number":"1480","RawContent":null,"Title":"Store getters do not re-evaluate on dynamic module registration","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/ll6zjklq97](https://codesandbox.io/s/ll6zjklq97)\r\n\r\n### Steps to reproduce\r\n- Open the CodeSandbox\r\n- Click \"Register Module\"\r\n\r\n### What is expected?\r\nAll four values should switch to true\r\n\r\n### What is actually happening?\r\nOnly the values based on watchers from the component switch to true\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1480","RelatedDescription":"Closed issue \"Store getters do not re-evaluate on dynamic module registration\" (#1480)"},{"Id":"395304196","IsPullRequest":false,"CreatedAt":"2019-01-02T16:31:37","Actor":"brophdawg11","Number":"1479","RawContent":null,"Title":"registerModule causing unneccesary getter evaluations","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/kkrn0zojqr](https://codesandbox.io/s/kkrn0zojqr)\r\n\r\n### Steps to reproduce\r\n* Open the code sandbox\r\n* Open the console\r\n* Reload the sandbox and note the log of \"Running Getter\"\r\n* Click `Register Module`\r\n* Note that \"Running Getter\" is logged again, even though state.foo hasn't changed\r\n\r\n### What is expected?\r\nJust like normal reactivity, I wouldn't expect the `foo` getter to re-run unless one of it's dependencies (`state.foo`) was changed.\r\n\r\n### What is actually happening?\r\nCalling `registerModule` causes getters to re-execute regardless\r\n\r\n---\r\nThis is more noticeable and more problematic if the getters return non-primitives, since they can then trigger re-renders down the component tree\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1479","RelatedDescription":"Open issue \"registerModule causing unneccesary getter evaluations\" (#1479)"},{"Id":"395119125","IsPullRequest":true,"CreatedAt":"2019-01-01T23:03:14","Actor":"haversnail","Number":"1478","RawContent":null,"Title":"Fix: add `devtools` to StoreOptions interface","State":"open","Body":"Updates `StoreOptions` type to include the [`devtools`](https://vuex.vuejs.org/api/#devtools) option, resolving TypeScript error when option is included in store constructor.","Url":"https://github.com/vuejs/vuex/pull/1478","RelatedDescription":"Open PR \"Fix: add `devtools` to StoreOptions interface\" (#1478)"},{"Id":"395077834","IsPullRequest":true,"CreatedAt":"2019-01-01T12:17:21","Actor":"hkthai","Number":"1477","RawContent":null,"Title":"docs & examples: rewrite state object to functions everywhere","State":"open","Body":"## Overview\r\nRewrite state, object to function everywhere.\r\n\r\n## Details\r\nTo avoid shared state on the server side, we should change our state from object to functions everywhere.\r\n\r\n## Related Pages\r\n[stack overflow](https://stackoverflow.com/questions/49557177/vuex-state-returned-as-function-or-object-literal)\r\n\r\n\r\nIf it is wrong, please close this pr:bow:","Url":"https://github.com/vuejs/vuex/pull/1477","RelatedDescription":"Open PR \"docs & examples: rewrite state object to functions everywhere\" (#1477)"},{"Id":"394976929","IsPullRequest":false,"CreatedAt":"2018-12-31T14:48:24","Actor":"mbana","Number":"1475","RawContent":null,"Title":"[vuex] unknown getter: accessing nested property fails with mapGetters but works with this.$store","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/banaio/vue_js_samples/tree/master/vuex_accessing_nested_property_bug](https://github.com/banaio/vue_js_samples/tree/master/vuex_accessing_nested_property_bug)\r\n\r\n### Steps to reproduce\r\n```sh\r\ngit clone git@github.com:banaio/vue_js_samples.git\r\ncd vue_js_samples\r\ncd vuex_accessing_nested_property_bug\r\nyarn install\r\nyarn serve\r\nopen http://localhost:8080/\r\n```\r\n\r\n### What is expected?\r\nWe should see the message `{ \"level_3_field\": \"level_3_field_value\" }` twice, however it\r\nappears only once. Please see the screenshot.\r\n\r\n### What is actually happening?\r\nThe message `{ \"level_3_field\": \"level_3_field_value\" }` appears only once. As per this screenshot:\r\n\r\n![Image of broken](https://raw.githubusercontent.com/banaio/vue_js_samples/master/vuex_accessing_nested_property_bug/broken.png)\r\n\r\n---\r\n\r\nWhen `state`, see [https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/store.js](https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/store.js), is defined as:\r\n\r\n```js\r\n  state: {\r\n    level_1: {\r\n      level_2: {\r\n        level_3: {\r\n          level_3_field: 'level_3_field_value',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  getters: {\r\n    level_1: (state) => state.level_1,\r\n  },\r\n```\r\n\r\nAnd used as, see [https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/components/HelloWorld.vue](https://github.com/banaio/vue_js_samples/blob/master/vuex_accessing_nested_property_bug/src/components/HelloWorld.vue),\r\nthe `level_3_broken` does not work, but the `level_3_working` seems to work:\r\n\r\n```js\r\n  computed: {\r\n    ...mapGetters({\r\n      level_3_broken: 'level_1.level_2.level_3',\r\n    }),\r\n    level_3_working() {\r\n      return this.$store.getters['level_1']['level_2'].level_3;\r\n    },\r\n  },\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1475","RelatedDescription":"Closed issue \"[vuex] unknown getter: accessing nested property fails with mapGetters but works with this.$store\" (#1475)"},{"Id":"394070232","IsPullRequest":false,"CreatedAt":"2018-12-31T10:26:24","Actor":"devindwan","Number":"1474","RawContent":null,"Title":"Provide a way to re-compute a getter","State":"closed","Body":"### What problem does this feature solve?\r\nAs we all know `Vue` does not support `Map`(ES6) right now. However, this `Map` feature is useful and it can not be replaced by normal object totally. Maybe we can provide an approach  to manually re-compute a getter when the depended `Map object` has been changed. It's not quite elegant and break reactivity rule, but we can temporarily improve such reactivity support by this patch like function before Vue 3.0 is released.\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nconst state = {\r\n  map: new Map()\r\n}\r\n\r\n// Some getters depend on the map object. Not a necessary use case, just for example.\r\nconst getters = {\r\n  keys: state => {\r\n    return state.map.keys()\r\n  },\r\n  values: state => {\r\n    return state.map.values()\r\n  }\r\n}\r\n\r\nconst mutations = {\r\n  SOME_MUTATION (state, value) {\r\n    state.map = value\r\n    // Try to re-compute relevant getters\r\n    recompute(['keys', 'values'])\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1474","RelatedDescription":"Closed issue \"Provide a way to re-compute a getter\" (#1474)"},{"Id":"392025334","IsPullRequest":false,"CreatedAt":"2018-12-18T07:15:58","Actor":"hqzh","Number":"1473","RawContent":null,"Title":"辅助函数连接多个store","State":"open","Body":"### What problem does this feature solve?\r\n有时我的组件需要连多个store,比如公共的和我自己的\r\n\r\n### What does the proposed API look like?\r\n```\r\nimport { createNamespacedHelpers } from \"vuex\";\r\n\r\nconst {\r\n    mapState,\r\n    mapGetters,\r\n    mapActions,\r\n    mapMutations\r\n         } = createNamespacedHelpers([\"myStore\",\"commonStore\"]);\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1473","RelatedDescription":"Open issue \"辅助函数连接多个store\" (#1473)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-02-07T05:31:08.18766Z","RunDurationInMilliseconds":4025}