{"Data":{"GitHubIssues":{"Issues":[{"Id":"338132263","IsPullRequest":false,"CreatedAt":"2018-07-04T05:12:06","Actor":"StevenTCramer","Number":"1077","RawContent":null,"Title":"Render when state changes","State":"open","Body":"I have simple component that shows the `UserName`.  Another authentication js library displays an IFrame and in the `OnLogin` Method I update the `UserName`.  But because no event in the UI triggers this the component does not Re-Render.\r\n\r\nHow can I get this to re-render when the state changes?\r\n\r\nJust to confirm to myself the UserName was set I added the button which when clicking will trigger a re-render and properly show the UserName.\r\n```\r\n@inherits AppHeaderModel\r\n<header class=\"top-row px-4\">\r\n  <span class=\"ml-md-auto\">@UserName</span>\r\n  <button class=\"btn btn-primary\" onclick=\"@StateHasChanged\">Click me</button>\r\n</header>\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1077","RelatedDescription":"Open issue \"Render when state changes\" (#1077)"},{"Id":"338018998","IsPullRequest":false,"CreatedAt":"2018-07-03T19:00:34","Actor":"chamikasandamal","Number":"1076","RawContent":null,"Title":"Tree shaking","State":"open","Body":"Please have a look on how angular tree shaking works and how it work in angular ivy. that will help to reduce the framework size.","Url":"https://github.com/aspnet/Blazor/issues/1076","RelatedDescription":"Open issue \"Tree shaking\" (#1076)"},{"Id":"337980375","IsPullRequest":false,"CreatedAt":"2018-07-03T16:54:40","Actor":"AnkitSharma-007","Number":"1075","RawContent":null,"Title":"Sending data from Javascript function to blazor method","State":"open","Body":"While invoking a C# method from javascript using \"Blazor.invokeDotNetMethod\" , how can we pass a data ( preferably JSON) from Javascript method to a C# method.\r\n\r\nThis method signature do not have a place for any arguments.\r\n\r\n`Blazor.invokeDotNetMethod({  \r\n     type: {  \r\n         assembly: 'abc',  \r\n         name:   'abc.xyz' \r\n     },  \r\n     method: {  \r\n         name: 'foo'  \r\n     }  \r\n }) `\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1075","RelatedDescription":"Open issue \"Sending data from Javascript function to blazor method\" (#1075)"},{"Id":"337844308","IsPullRequest":false,"CreatedAt":"2018-07-03T10:45:11","Actor":"anirudhagupta","Number":"1074","RawContent":null,"Title":"Blazor support removed, if you do this in installer.","State":"open","Body":"I assume you have installed the blazor extension and asp.net workload in visual studio.\r\n\r\nnow go to  setup: \r\n\r\nuncheck the asp.net and check the asp.net extension again, Blazor is gone.","Url":"https://github.com/aspnet/Blazor/issues/1074","RelatedDescription":"Open issue \"Blazor support removed, if you do this in installer.\" (#1074)"},{"Id":"337806721","IsPullRequest":false,"CreatedAt":"2018-07-03T09:03:05","Actor":"SteveSandersonMS","Number":"1073","RawContent":null,"Title":"Enable control over event propagation and default actions","State":"open","Body":"There are lots of scenarios where this is needed. See descriptions in #715.\r\n\r\nSince we don't want to rely on synchronous APIs, the solution will probably be a variation on event registration syntax, e.g.,\r\n\r\n    <button onclick=@MyHandler onclick-stop-propagation=\"true\" />\r\n\r\nWe still need to design what terminology to use (e.g., \"propagation\" vs \"bubbling\") and what features to include (e.g., whether there is also control over \"preventDefault\").","Url":"https://github.com/aspnet/Blazor/issues/1073","RelatedDescription":"Open issue \"Enable control over event propagation and default actions\" (#1073)"},{"Id":"337599332","IsPullRequest":false,"CreatedAt":"2018-07-03T08:56:46","Actor":"uazo","Number":"1071","RawContent":null,"Title":"Incorrect values in disposeComponent (BrowserRenderer.ts)","State":"closed","Body":"Some strange value after last commit (I think #1052)\r\n\r\n![browserrenderer ts error](https://user-images.githubusercontent.com/29201891/42177132-e663a630-7e2b-11e8-9d85-11e435585c8c.png)\r\n\r\nRenderer.RenderInExistingBatch seems correct, but SharedMemoryRenderBatch.disposedComponentIdsEntry returns invalid values.","Url":"https://github.com/aspnet/Blazor/issues/1071","RelatedDescription":"Closed issue \"Incorrect values in disposeComponent (BrowserRenderer.ts)\" (#1071)"},{"Id":"337670511","IsPullRequest":true,"CreatedAt":"2018-07-03T08:56:03","Actor":"uazo","Number":"1072","RawContent":null,"Title":"Fix for #1071","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/pull/1072","RelatedDescription":"Closed or merged PR \"Fix for #1071\" (#1072)"},{"Id":"337456964","IsPullRequest":false,"CreatedAt":"2018-07-02T15:02:25","Actor":"doga6488","Number":"1067","RawContent":null,"Title":"How can I pass a value to a  razor page which is generated by another razor page","State":"closed","Body":"Hi I'm new with Blazor.I am using v.0.4.0.Here are 2 screenshots that may describe my question better.\r\n\r\n\r\n<img width=\"758\" alt=\"adsiz2\" src=\"https://user-images.githubusercontent.com/26219239/42157751-4745d444-7df7-11e8-8ad3-f10f5726a630.png\">\r\n\r\nAt the back of the page I create an object with the value of textboxes,comboxes etc. and append it to the list via addtolist() method which is triggered when a button is clicked.\r\n@functions{\r\n\r\n\r\n    public List<Myclass> mylist = new List<Myclass>();\r\n    \r\n    private String Name;\r\n    private String Coordinate;\r\n    /* ... other attributes .. */\r\n    public void {    \r\n            _myclass nloc = new Myclass(Name, Coordinate/* other attributes*/);\r\n     }\r\n\r\nAfter that I want to list  the list of that classes(mylist) from another razor page like that\r\n\r\n<img width=\"777\" alt=\"adsiz\" src=\"https://user-images.githubusercontent.com/26219239/42158128-455e5b3c-7df8-11e8-8792-af496d655934.png\">\r\n\r\nIs there a way or a funtion to do this or ,I know Razor pages may have parameters in blazor, is there such a thing like return value or something?\r\n","Url":"https://github.com/aspnet/Blazor/issues/1067","RelatedDescription":"Closed issue \"How can I pass a value to a  razor page which is generated by another razor page\" (#1067)"},{"Id":"337554328","IsPullRequest":true,"CreatedAt":"2018-07-02T14:59:13","Actor":"uazo","Number":"1070","RawContent":null,"Title":"[WIP] ModelState/DataAnnotation library","State":"open","Body":"I've written a form validation library that use the standard ComponentModel.DataAnnotation and I've added a test page in StandaloneApp.\r\n\r\nthe library it's very simple and allow sharing models with dataannotations between blazor and backend (ref #17).\r\n\r\nall the logic is in the ``ModelStateDictionary<T>`` class (so isn't in the form, as #970) and allow code like this\r\n\r\n````\r\n    var ModelState = new ModelStateDictionary<TestModel>(new TestModel())\r\n\r\n\r\n        <div class=\"col-md-8 col-sm-8\">\r\n            <input type=\"text\" bind=\"@ModelState[x => x.TextValue]\" class=\"form-control\" />\r\n            <span class=\"text-danger\">@ModelState.ValidationFor(x=> x.TextValue)</span>\r\n        </div>\r\n\r\n        <button onclick=\"@(() => this.UpdateModel())\">Update model</button>\r\n\r\n\r\n    protected virtual void UpdateModel()\r\n    {\r\n        this.ValidateModel();\r\n        if (this.ModelState.IsValid)\r\n        {\r\n            this.ModelState.Update();\r\n        }\r\n    }\r\n````\r\n\r\nSince `<input>` tag values are always strings, ModelStateDictionary does an automatic type conversion of all values using `TypeConverter` (since it's available in netstandard2.0): putting an invalid value (like a non convertible string into number) will show an error automatically.\r\nFor now it's support short, int, long, datetime, float, double and nullable\r\n\r\nModelStateDictionary can update the Model via `Update(T model)` function.\r\n\r\nThe library support custom validation (with virtual `OnCustomValidateModel` and `AddModelError`).\r\n\r\nIt's a starting point (no xml comments or test cases), but seems work.","Url":"https://github.com/aspnet/Blazor/pull/1070","RelatedDescription":"Open PR \"[WIP] ModelState/DataAnnotation library\" (#1070)"},{"Id":"337321427","IsPullRequest":false,"CreatedAt":"2018-07-02T14:36:27","Actor":"simonziegler","Number":"1064","RawContent":null,"Title":"Question: getting component with no parameters to render on update","State":"closed","Body":"Hi I have a custom component that can pull all its data from the state object, meaning that I call it like this:\r\n\r\n`<div> <MyComponent /> </div>`\r\n\r\nI have added `state.OnUserChange += StateHasChanged;` to the Component's `OnInit` function, however when `StateHasChanged()` is called, MyComponent does not render. Within MyComponent I display properties held within the `state` class that were updated prior to calling `StateHasChanged()`.\r\n\r\nI can force an update by passing an otherwise pointless parameter to MyComponent, but this is a bit clunky. Any ideas?\r\n\r\nMany thanks,     Simon","Url":"https://github.com/aspnet/Blazor/issues/1064","RelatedDescription":"Closed issue \"Question: getting component with no parameters to render on update\" (#1064)"},{"Id":"337487837","IsPullRequest":false,"CreatedAt":"2018-07-02T11:56:23","Actor":"floreseken","Number":"1069","RawContent":null,"Title":"Combine MVC razor pages with Blazor pages","State":"open","Body":"I guess lots of us are now developing MVC applications and at some point want to convert those to Blazor.\r\n\r\nI think I would be convenient if Blazor supports some sort of migration path by making it possible to combine Blazor and MVC pages. This will make it possible to gradually migrate your app, page by page.\r\n\r\nCurrently if there is no route registered with a Blazor component, Blazor will throw an exception, if the router would then try to just load the url I think we are almost there.. Would this be feasible?\r\n\r\nI've got some sort of workaround running with iframes in a razorpage loading the MVC page, but that just feels dirty..\r\n\r\nAll ideas welcome..","Url":"https://github.com/aspnet/Blazor/issues/1069","RelatedDescription":"Open issue \"Combine MVC razor pages with Blazor pages\" (#1069)"},{"Id":"337467558","IsPullRequest":false,"CreatedAt":"2018-07-02T10:49:08","Actor":"uazo","Number":"1068","RawContent":null,"Title":"Blazor Language Service extension: System.InvalidOperationException 'Sequence contains more than one element'","State":"open","Body":"Lastest  Blazor Language Service extension\r\nDotNet Version: 2.1.300-rtm-008823\r\nVisual Studio 2017 15.7.4\r\n\r\n\r\nwriting:\r\n\r\n```\r\n<input type=\"text\" bind=\"@this.ModelState.Bind(x=>\" />\r\n```\r\n\r\nthrow exception\r\n\r\n```\r\n   at System.Linq.Enumerable.Single[TSource](IEnumerable`1 source)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BindLoweringPass.GetAttributeContent(TagHelperPropertyIntermediateNode node)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BindLoweringPass.RewriteUsage(IntermediateNode parent, TagHelperPropertyIntermediateNode node)\r\n   at Microsoft.AspNetCore.Blazor.Razor.BindLoweringPass.ExecuteCore(RazorCodeDocument codeDocument, DocumentIntermediateNode documentNode)\r\n   at Microsoft.AspNetCore.Razor.Language.IntermediateNodePassBase.Execute(RazorCodeDocument codeDocument, DocumentIntermediateNode documentNode)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorOptimizationPhase.ExecuteCore(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorEnginePhaseBase.Execute(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorEngine.Process(RazorCodeDocument document)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorProjectEngine.ProcessCore(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorProjectEngine.ProcessDesignTime(RazorProjectItem projectItem)\r\n   at Microsoft.VisualStudio.Editor.Razor.BackgroundParser.BackgroundThread.WorkerLoop()\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(Object state)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.ThreadHelper.ThreadStart()\r\n```\r\n\r\nthe error is in BindLoweringPass.cs\r\n\r\n```\r\n        private static IntermediateToken GetAttributeContent(TagHelperPropertyIntermediateNode node)\r\n        {\r\n            if (node.Children[0] is HtmlContentIntermediateNode htmlContentNode)\r\n            {\r\n                // This case can be hit for a 'string' attribute. We want to turn it into\r\n                // an expression.\r\n                var content = \"\\\"\" + ((IntermediateToken)htmlContentNode.Children.Single()).Content + \"\\\"\";\r\n                return new IntermediateToken() { Kind = TokenKind.CSharp, Content = content };\r\n            }\r\n            else if (node.Children[0] is CSharpExpressionIntermediateNode cSharpNode)\r\n            {\r\n                // This case can be hit when the attribute has an explicit @ inside, which\r\n                // 'escapes' any special sugar we provide for codegen.\r\n                return ((IntermediateToken)cSharpNode.Children.Single());    * <--- HERE! *\r\n            }\r\n            else\r\n            {\r\n                // This is the common case for 'mixed' content\r\n                return ((IntermediateToken)node.Children.Single());\r\n            }\r\n        }\r\n```","Url":"https://github.com/aspnet/Blazor/issues/1068","RelatedDescription":"Open issue \"Blazor Language Service extension: System.InvalidOperationException 'Sequence contains more than one element'\" (#1068)"},{"Id":"336520932","IsPullRequest":true,"CreatedAt":"2018-07-02T09:21:42","Actor":"SteveSandersonMS","Number":"1052","RawContent":null,"Title":"Add RenderBatch reader abstraction","State":"closed","Body":"This is also part of the out-of-process execution work. It separates the knowledge of `RenderBatch` (etc) memory layout from the logic that actually uses the information in the `RenderBatch` (etc).\r\n\r\nWith this change, we'll be able to continue with shared-memory interop for the in-proc scenario, and plug in a different `RenderBatch` reader for out-of-process hosting. It means we can use any serialization format we want for the `RenderBatch` without having to simulate the same memory layout, which in turn will allow for a more compact and easily-implemented representation.\r\n\r\n**Implementation note**\r\n\r\nThe reason we have all these `xyzReader` APIs that act upon references to read properties (e.g., `frameReader.attributeName(frame)` instead of `frame.attributeName`) is so that we don't have to parse all the incoming data into a large graph of objects. We keep the incoming data in its original form (e.g., a single byte array) and walk through it without instantiating any child objects to represent different parts of it. This avoids the need for any up-front parsing (especially good for parts of the data structure we might turn out not to even look at) and dramatically lessens GC pressure.","Url":"https://github.com/aspnet/Blazor/pull/1052","RelatedDescription":"Closed or merged PR \"Add RenderBatch reader abstraction\" (#1052)"},{"Id":"337329567","IsPullRequest":false,"CreatedAt":"2018-07-02T08:51:25","Actor":"ghidello","Number":"1065","RawContent":null,"Title":"Removing any IDisposable component from a list triggers the disposal of the last item of the list","State":"closed","Body":"Hi, I have a component implementing the IDisposable interface that receives an ID parameter and logs it to the console during the disposal process. \r\nI tried to use it in a foreach loop where an instance of the component is added for every element of a list. Adding a single item and removing it works fine and the correct ID is shown in the console. \r\nWhen more than one item is present, removing one of them correctly hides it from the UI but the console will always report the ID of the last element in the list as the disposed one.\r\n\r\nI pushed a sample project [here](https://github.com/ghidello/IDisposableTest) but to reproduce the behaviour you can use this component:\r\n```csharp\r\n  // DisposableComponent.cshtml\r\n  @implements IDisposable\r\n  \r\n  <li>@Id</li>\r\n  \r\n  @functions\r\n  {\r\n    [Parameter]\r\n    int Id { get; set; }\r\n  \r\n    public void Dispose()\r\n    {\r\n      Console.WriteLine($\"Disposing item {Id}\");\r\n    }\r\n  }\r\n```\r\nAnd use it in a page:\r\n```csharp\r\n  @page \"/\"\r\n  <p>\r\n    <button class=\"btn btn-primary\" onclick=\"@Add\">Add</button>\r\n    <button class=\"btn btn-primary\" onclick=\"@Remove\">Remove first</button>\r\n  </p>\r\n  <ul>\r\n    @foreach (var item in Items)\r\n    {\r\n      <DisposableComponent Id=\"@item\" />\r\n    }\r\n  </ul>\r\n  \r\n  @functions\r\n  {\r\n      private int counter = 5;\r\n      public IList<int> Items = new List<int> {1, 2, 3, 4, 5};\r\n  \r\n      public void Add() => Items.Add(++counter);\r\n  \r\n      public void Remove()\r\n      {\r\n        if (Items.Count == 0) return;\r\n        Console.WriteLine($\"Removing item {Items[0]}\");\r\n        Items.RemoveAt(0);\r\n      }\r\n  }\r\n```\r\nPressing the remove button you'll see the first item disappear but the number 5 will be logged in the console by the dispose method.\r\n\r\nAm I doing something odd?\r\n\r\nAnyway, thank you so much for this amazing and refreshing technology!","Url":"https://github.com/aspnet/Blazor/issues/1065","RelatedDescription":"Closed issue \"Removing any IDisposable component from a list triggers the disposal of the last item of the list\" (#1065)"},{"Id":"337410151","IsPullRequest":false,"CreatedAt":"2018-07-02T08:50:17","Actor":"FIVIL","Number":"1066","RawContent":null,"Title":"Partial view","State":"closed","Body":"Hi, is it possible to use razor partial views in blazor??","Url":"https://github.com/aspnet/Blazor/issues/1066","RelatedDescription":"Closed issue \"Partial view\" (#1066)"},{"Id":"337284936","IsPullRequest":false,"CreatedAt":"2018-07-01T11:47:15","Actor":"montyclt","Number":"1063","RawContent":null,"Title":"Firing onchange before painting on input","State":"open","Body":"Hello everyone,\r\n\r\nI have an input that I need that the user only writes in upper case.\r\n\r\nI tried to do the following:\r\n\r\n```\r\n<input value=\"@Name\" onchange=\"@ChangeName\" />\r\n```\r\n\r\n```\r\nvoid ChangeName(UIChangeEventArgs e)\r\n{\r\n    var value = (string)e.Value;\r\n\r\n    Name = value.ToUpper();\r\n}\r\n```\r\n\r\nThe result:\r\n\r\nThe user writes in lowercase and when the user left focus, then the content transform to upper.\r\n\r\nI tried too a hardcode value of Name property and left ChangeName method in blank like this:\r\n\r\n```\r\n<input class=\"form-control\" value=\"@Name\"/>\r\n```\r\n\r\n```\r\nstring Name = \"Foo\";\r\n\r\nvoid ChangeName(UIChangeEventArgs e)\r\n{\r\n    // \r\n} \r\n```\r\n\r\nI expected the original value of input return to \"Foo\", but when I leave the focus, the changed value stayed in the input.\r\n\r\nIs possible make the value of input doesn't change if the value of `value` property doesn't change even if user type letters? (like `readonly` property)\r\n\r\nIs possible to fire the onchange method before painting the input value to get in the input the value directly transformed while writing instead on lose focus? (like ReactJS)","Url":"https://github.com/aspnet/Blazor/issues/1063","RelatedDescription":"Open issue \"Firing onchange before painting on input\" (#1063)"},{"Id":"337221691","IsPullRequest":false,"CreatedAt":"2018-07-01T08:05:35","Actor":"moataz1991","Number":"1062","RawContent":null,"Title":"Binding : From Child To Parent to Another Child","State":"closed","Body":"hello Blazor awesome creators and others :)\r\nsimply i want to call method or fire an event in my second child when my first child got an '_li_' clicked ! and assgin a value of a custom class property , lets say of type ClassA !\r\n\r\nParent View: \r\n\r\n> \"Navbar\" \"/Navbar\"\r\n> \"SideMenu classA_=\"@currentClass\" OnClassClicked=\"@ClassClicked\"\" \"/SideMenu\"\r\n> \"MainContent Class_=\"@currentClass\"\" \"/MainContent\"\r\n\r\nParent ::\r\n```\r\n[Parameter]\r\n    ClassA currentClassA { get; set; } = new ClassA();\r\npublic void ClassClicked(ClassA c) {\r\ncurrentClass = c;\r\n stateThingyChanged;\r\n<how to inform or to pass again _currentClassA_ to _MainContent_ , cuz obviously binding does not work >\r\n}\r\n```\r\nanother question , when Blazor will be available for production ? \r\nThx :)","Url":"https://github.com/aspnet/Blazor/issues/1062","RelatedDescription":"Closed issue \"Binding : From Child To Parent to Another Child\" (#1062)"},{"Id":"337131938","IsPullRequest":true,"CreatedAt":"2018-06-29T20:44:00","Actor":"rynowak","Number":"1061","RawContent":null,"Title":"Update versions to 2.1","State":"open","Body":"Updates ASP.NET package versions to 2.1\r\n\r\nTweaks TFMs\r\n- libraries = netstandard2.0\r\n- exes/apps/tools = netcoreapp2.1\r\n- unit tests = netcoreapp2.0\r\n- e2e tests = netcoreapp2.1 (dependency on apps)\r\n\r\nThe exception to this is the Browser.JS project which depends on our\r\ntool for its build. however this project just builds the js code so its\r\nTFM doesn't really matter.","Url":"https://github.com/aspnet/Blazor/pull/1061","RelatedDescription":"Open PR \"Update versions to 2.1\" (#1061)"},{"Id":"336991850","IsPullRequest":true,"CreatedAt":"2018-06-29T19:41:16","Actor":"zefubachs","Number":"1059","RawContent":null,"Title":"Changed TFM of Blazor.Server to netstandard2.0","State":"closed","Body":"As asked in #986","Url":"https://github.com/aspnet/Blazor/pull/1059","RelatedDescription":"Closed or merged PR \"Changed TFM of Blazor.Server to netstandard2.0\" (#1059)"},{"Id":"337104361","IsPullRequest":true,"CreatedAt":"2018-06-29T19:40:58","Actor":"rynowak","Number":"1060","RawContent":null,"Title":"Update build tools","State":"closed","Body":"","Url":"https://github.com/aspnet/Blazor/pull/1060","RelatedDescription":"Closed or merged PR \"Update build tools\" (#1060)"},{"Id":"336944064","IsPullRequest":false,"CreatedAt":"2018-06-29T14:33:04","Actor":"joshpearce","Number":"1057","RawContent":null,"Title":"CodeDOM or RazorEngine","State":"closed","Body":"Hi, I'd like to use Blazor to write an application for developer screening website, where problems must be solved by writing C# code. So the whole reason I'm attracted to Blazor is for the potential to compile and run the C# in the browser rather than server, for security.\r\n\r\nSeems I would need Blazor to be running on the Mono for WebAssembly describes as,\r\n\r\n> The second prototype compiles the Mono C runtime into web assembly, and then uses Mono’s IL interpreter to run managed code.\r\n\r\nIs that possible?\r\n\r\nAlternatively, is there a way to compile assemblies independently (on the server), and load them into a running Blazor application.\r\n\r\nFinally, if neither of the above options are available, is there any guidance on something like on-demand server-side Blazor app compilation for reloading in an iframe?\r\n\r\nThanks in advance!! Exciting project!!\r\n","Url":"https://github.com/aspnet/Blazor/issues/1057","RelatedDescription":"Closed issue \"CodeDOM or RazorEngine\" (#1057)"},{"Id":"336958945","IsPullRequest":false,"CreatedAt":"2018-06-29T13:36:54","Actor":"liuxh0","Number":"1058","RawContent":null,"Title":"Http header field always lowercased","State":"closed","Body":"I'm trying to add custom header using:\r\n```\r\nStringContent body = new StringContent(\"\");\r\nbody.Headers.Add(\"MyHeader\", \"value\");\r\n```\r\n\r\nBut the request headers are always lowercased, in this case I got `myheader: value`. Calling `TryAddWithoutValidation` does *not* help.\r\n\r\nI'm aware that RFC 2616 says header fields should be case-insensitive. But if I use .NET Core/Framework, like if I create an Windows 10 App using Visual Studio, I can send http request *without* lowercased headers.","Url":"https://github.com/aspnet/Blazor/issues/1058","RelatedDescription":"Closed issue \"Http header field always lowercased\" (#1058)"},{"Id":"336784319","IsPullRequest":false,"CreatedAt":"2018-06-29T06:17:31","Actor":"simonziegler","Number":"1053","RawContent":null,"Title":"bind-value change action not firing in a component","State":"closed","Body":"Hi,\r\n\r\nI have made my first attempt to bind to a component, and found that when the component's `Value` changed, the `ValueChanged` property was not firing and propagating that change to the parent. I used the work around shown below (see code heavily highlighted in yellow to the bottom right). Is this an issue that the Blazor development team need to know about? I do not need a resolution and am comfortable with the pattern of coding I show below.\r\n\r\nThanks, Simon\r\n\r\n![image](https://user-images.githubusercontent.com/11708435/42061245-67a56674-7b21-11e8-9d15-ac489b6294d4.png)\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1053","RelatedDescription":"Closed issue \"bind-value change action not firing in a component\" (#1053)"},{"Id":"336870633","IsPullRequest":false,"CreatedAt":"2018-06-29T05:46:41","Actor":"chenyj796","Number":"1056","RawContent":null,"Title":"CultureInfo didn't set appropriately","State":"open","Body":"In a Blazor cshtml, add \"@CultureInfo.CurrentCulture.DisplayName\", and then get \"Invariant Language (Invariant Country)\" while I expect \"中文(简体，中国)\". \r\nDateTime.Now is not correct also.","Url":"https://github.com/aspnet/Blazor/issues/1056","RelatedDescription":"Open issue \"CultureInfo didn't set appropriately\" (#1056)"},{"Id":"336868290","IsPullRequest":true,"CreatedAt":"2018-06-29T05:32:21","Actor":"rynowak","Number":"1055","RawContent":null,"Title":"Add sync context","State":"open","Body":"This seems like 90% done to me, but I wanted to get eyeballs on it in case you had any feedback.\r\n\r\nI know I at least want to add another test that verifies you can `await` and resume in the sync context. I also might need to add some more code to the synchronous code path to apply the sync context. ","Url":"https://github.com/aspnet/Blazor/pull/1055","RelatedDescription":"Open PR \"Add sync context\" (#1055)"},{"Id":"336851319","IsPullRequest":false,"CreatedAt":"2018-06-29T03:32:44","Actor":"samuelGrahame","Number":"1054","RawContent":null,"Title":"Easier way to have interaction with javascript","State":"open","Body":"I tried to convert, my library I am working on, I know there are higher priorities, (I might be doing it wrong) https://github.com/samuelGrahame/ClassicFormsBlazor - for instance, I wanted to create HTMLElements, (without using razor pages) - I registered javascript function's to create a htmlelement, then stored that htmlelement in a dictionary in javascript, returning the key (GUID) to csharp.\r\n\r\nthen with events, create the event, in csharp against a GUID - then send the inline event to call c# method.\r\n\r\nthis all work's, but if there was a easier way to create html / use javascript variable pointers.  i think would be a good feature, as thing's like xamarin.forms can be converted - just creating the html elements in the c# library.\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1054","RelatedDescription":"Open issue \"Easier way to have interaction with javascript\" (#1054)"},{"Id":"336457806","IsPullRequest":false,"CreatedAt":"2018-06-28T08:36:26","Actor":"FIVIL","Number":"1049","RawContent":null,"Title":"RTM","State":"closed","Body":"Hi, ive just seen this repo and ive got very excited about it, as im a huge fan of C# instead of JS so i was wondering when you guys are gonna release an RTM stable version of Blazor?, and also is there any documentation like the one for the ASP.net core in docs.microsoft.com or any where else??\r\n\r\ntnx","Url":"https://github.com/aspnet/Blazor/issues/1049","RelatedDescription":"Closed issue \"RTM\" (#1049)"},{"Id":"336495562","IsPullRequest":false,"CreatedAt":"2018-06-28T08:35:28","Actor":"TheCamel","Number":"1050","RawContent":null,"Title":"DataTable not removed between pages","State":"closed","Body":"Hi,\r\nFrom the sample,, I try to replace static table with dynamic one from https://datatables.net/examples/data_sources/server_side.html\r\n\r\nI call an init in javascript from button clic and it works well.....but when i change to other pages the header stay there.\r\n\r\n@page \"/logview\"\r\n@using Microsoft.AspNetCore.Blazor.Browser.Interop\r\n@inject HttpClient Http\r\n<button class=\"btn btn-primary\" onclick=\"@UpdateHeading\">\r\n    Update heading\r\n</button>\r\n@if (logData == null)\r\n{\r\n    <p><em>Loading...</em></p>\r\n}\r\nelse\r\n{\r\n    <table id=\"example\" class=\"hover\" style=\"max-width:1500px\"> \r\n        <thead>\r\n            <tr>\r\n                <th>Date</th>\r\n                <th>Type</th>\r\n                <th>Application</th>\r\n                <th>LogID</th>\r\n                <th>Host</th>\r\n                <th>Ceb</th>\r\n                <th>Method</th>\r\n                <th>Content</th>\r\n                <th>Exception</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            @foreach (var forecast in logData)\r\n            {\r\n                <tr>\r\n                    <td>@forecast.DateTime.ToShortDateString()</td>\r\n                    <td>@forecast.Type</td>\r\n                    <td>@forecast.ApplicationID</td>\r\n                    <td>@forecast.LogID</td>\r\n                    <td>@forecast.Host</td>\r\n                    <td>@forecast.CebID</td>\r\n                    <td>@forecast.Method</td>\r\n                    <td>@forecast.Content</td>\r\n                    <td>@forecast.Exception</td>\r\n                </tr>\r\n            }\r\n        </tbody>\r\n    </table>\r\n}\r\n\r\n@functions {\r\nIEnumerable<LogEntry> logData;\r\n\r\nprotected override async Task OnInitAsync()\r\n{\r\n    logData = await Http.GetJsonAsync<IEnumerable<LogEntry>>(\"http://localhost/Trace.Lib.Web.Api/All\");\r\n}\r\nvoid UpdateHeading(UIMouseEventArgs e)\r\n{\r\n    RegisteredFunction.Invoke<string>(\"LoadTable\");\r\n}\r\n}\r\n\r\nin index?html\r\n\r\nBlazor.registerFunction(\r\n            'LoadTable',\r\n            () => {\r\n                console.dir(\"test ok\");\r\n                $('#example').DataTable({\r\n                    \"scrollX\": true,\r\n                    \"scrollY\": 600,\r\n                    \"scrollCollapse\": true,\r\n                    \"paging\": false\r\n                });\r\n            });\r\n\r\n\r\n![blazor_table](https://user-images.githubusercontent.com/7381872/42017908-d3a4540a-7ab0-11e8-818d-7801d2d2fe5f.png)","Url":"https://github.com/aspnet/Blazor/issues/1050","RelatedDescription":"Closed issue \"DataTable not removed between pages\" (#1050)"},{"Id":"336511273","IsPullRequest":false,"CreatedAt":"2018-06-28T08:33:13","Actor":"moataz1991","Number":"1051","RawContent":null,"Title":"Error: no suitable method found to override","State":"closed","Body":"Hi :)\r\n\r\nafter setting up everything i started a new project and selected Blazor _only_ template \r\ni noticed something weird\r\n\r\n>     protected override async Task OnInitAsync()\r\n>     {\r\n>         forecasts = await Http.GetJsonAsync<WeatherForecast[]>(\"sample-data/weather.json\");\r\n>     }\r\n\r\nthis method is not found to be overridden !\r\nand the HttpCient does not contain definition for GetJsonAsync , am i missing an assembly reference ?\r\n\r\ni ran the project to see whats what , after the \"_Loading..._\" nothing appeared , total white page ","Url":"https://github.com/aspnet/Blazor/issues/1051","RelatedDescription":"Closed issue \"Error: no suitable method found to override\" (#1051)"},{"Id":"336328573","IsPullRequest":false,"CreatedAt":"2018-06-27T21:44:13","Actor":"IyyappanAmirthalingam","Number":"1048","RawContent":null,"Title":"Error <LangVersion>7.3</LangVersion>","State":"closed","Body":"Hi,\r\n\r\nWhen I try to create and run the Blazor app with the following steps it throws the follwing error \r\n\r\n**Steps 👍 \r\ndotnet new -i Microsoft.AspNetCore.Blazor.Templates\r\ndotnet new blazor -o BlazorApp1\r\ncd BlazorApp1\r\ndotnet run**\r\n\r\nError 👎 \r\n**CSC : error CS1617: Invalid option '7.3' for /langversion. Use '/langversion:?' to list supported values. [C:\\sample\\BlazorApp1\\BlazorApp1.csproj]**\r\n\r\n**The build failed. Please fix the build errors and run again.**\r\n\r\nThanks.","Url":"https://github.com/aspnet/Blazor/issues/1048","RelatedDescription":"Closed issue \"Error <LangVersion>7.3</LangVersion>\" (#1048)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-07-04T05:30:03.6029185Z","RunDurationInMilliseconds":1659}