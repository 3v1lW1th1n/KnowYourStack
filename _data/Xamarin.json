{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin.Android Now Double Stuffed with Oreo 8.1","PublishedOn":"2018-01-11T19:55:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Android Oreo 8.1 introduces new features, including Android Go, Neural Networks API, Autofill framework enhancements, SharedMemory API, and many more. We&#8217;re excited to announce Xamarin.Android...","Href":"https://blog.xamarin.com/xamarin-android-now-double-stuffed-with-oreo-8-1/","RawContent":null},{"Title":"Upcoming Webinar | Xamarin University Presents: Ship Better Apps with Visual Studio App Center","PublishedOn":"2018-01-11T14:55:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Join Mark Smith, Director of Xamarin University, on Thursday, January 25 at 9 am PT / 12 pm ET / 5 pm GMT to learn how to automate your app development pipeline with Visual Studio App Center. You’ll...","Href":"https://blog.xamarin.com/upcoming-webinar-xamarin-university-presents-ship-better-apps-visual-studio-app-center/","RawContent":null},{"Title":"Visual Studio 2017 Version 15.6 Preview Available Today!","PublishedOn":"2018-01-10T19:16:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last month, we released Visual Studio 2017 version 15.5, which came with awesome new features, including the iOS Remoted Simulator becoming available to all developers, live XAML previewing in Android...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-6-preview-available-today/","RawContent":null},{"Title":"Delivering Rich Media Experiences with the Xamarin.Forms Video Player","PublishedOn":"2018-01-09T18:42:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Adam Fisher. Adam is the founder of Octane Software, focused on the creation of consumer Internet products. You can find Adam on Twitter at @adamgfisher and on Github at...","Href":"https://blog.xamarin.com/delivering-rich-media-experiences-xamarin-forms-video-player/","RawContent":null},{"Title":"Colonial Life Drives Field Sales Productivity with .NET, Mobile, and DevOps","PublishedOn":"2018-01-05T19:59:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The .NET community is millions of developers strong, with people around the world turning ideas into apps across web, mobile, desktop, and the newest connected device platforms. Colonial Life’s...","Href":"https://blog.xamarin.com/colonial-life-drives-field-sales-productivity-net-mobile-devops/","RawContent":null},{"Title":"CoreML Programming with Xamarin.Mac and F#","PublishedOn":"2018-01-04T18:08:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Although Xamarin technologies are most commonly used to develop mobile applications, Xamarin.Mac makes it easy to use your preferred .NET language to develop desktop Mac apps. There are many C#...","Href":"https://blog.xamarin.com/coreml-programming-xamarin-mac-f/","RawContent":null},{"Title":"Xamarin Developer Events This January","PublishedOn":"2018-01-03T19:10:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s only the beginning of the year, but there are already many opportunities to get out and start building on your mobile app development education! Network with local user groups to learn...","Href":"https://blog.xamarin.com/xamarin-developer-events-january/","RawContent":null},{"Title":"The Top 12 Xamarin Blog Posts of 2017","PublishedOn":"2018-01-02T20:36:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2017 marked our first full year as part of the Microsoft family. Along the way, we saw new operating systems, new devices, and updates to the tools we use every day, and the many authors behind the...","Href":"https://blog.xamarin.com/top-12-xamarin-blog-posts-2017/","RawContent":null},{"Title":"Contest: Get Started with Xamarin","PublishedOn":"2017-12-15T20:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Xamarin, we pride ourselves on creating and providing great educational tools for developers. Between our extensive developer center, and the interactive classes at Xamarin University,...","Href":"https://blog.xamarin.com/contest-get-started-xamarin/","RawContent":null},{"Title":"Introducing the SmartHotel360 Reference Mobile Apps","PublishedOn":"2017-12-14T20:52:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you managed to catch any of Microsoft Connect(); 2017, you probably saw a beautiful suite of apps for a fictitious smart hospitality company called SmartHotel360 that showcases the future of...","Href":"https://blog.xamarin.com/introducing-smarthotel360-reference-mobile-apps/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7088618869","Type":"IssuesEvent","CreatedAt":"2018-01-11T22:12:26","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1186","RelatedDescription":"Opened issue \"MonoTests.System.Reflection.Emit.SaveTest.Save test fails in Release configuration with BCL linking on\" (#1186) at xamarin/xamarin-android","RelatedBody":"A test from the Mono BCL test suite ([MonoTests.System.Reflection.Emit.SaveTest.Save](https://github.com/mono/mono/blob/master/mcs/class/corlib/Test/System.Reflection.Emit/SaveTest.cs#L321)) fails when the tests are built in Release mode with linking set to SdkOnly.\r\nIt seems that the linker somehow changes the order of interfaces in emitted code since turning BCL linking off makes the test work again. The test also works fine in Debug configuration (with the linker off)\r\n\r\n### Steps to Reproduce\r\n\r\n1. Comment out [this line](https://github.com/xamarin/xamarin-android/blob/master/tests/BCL-Tests/Xamarin.Android.Bcl-Tests/nunit-excluded-tests.txt#L7)\r\n2. Run `make CONFIGURATION=Release run-apk-tests` from the top Xamarin.Android dir\r\n3. Wait patiently\r\n4. Find the failure in the NUnit tests result file (`TestResult-Xamarin.Android.Bcl_Tests.nunit-Release.xml` in the top Xamarin.Android directory)\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThe test should run fine with BCL linking on\r\n\r\n### Actual Behavior\r\nThe test fails when executed with BCL linking on\r\n\r\n### Version Information\r\nXamarin.Android/master (`c4e81655ac22b06806e732e9dd0bc729e8d2c1d7`)\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Test failure\r\n```\r\nMESSAGE:\r\n  Expected: <iface1>\r\n  But was:  <System.IComparable>\r\n\r\n  +++++++++++++++++++\r\n  STACK TRACE:\r\n  at MonoTests.System.Reflection.Emit.SaveTest.CheckAssembly (System.Reflection.Assembly a) [0x000a0] in <1e30aff9165c427db5bedc42c5906861>:0 \r\n  at MonoTests.System.Reflection.Emit.SaveTest.Save () [0x00b6d] in <1e30aff9165c427db5bedc42c5906861>:0 \r\n  at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke(System.Reflection.MonoMethod,object,object[],System.Exception&)\r\n  at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00032] in <0a3e31ed05774b07957e0b91c5cab789>:0\r\n```\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7088466379","Type":"PullRequestEvent","CreatedAt":"2018-01-11T21:38:20","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1075","RelatedDescription":"Merged pull request \"New unit test runner\" (#1075) at xamarin/xamarin-android","RelatedBody":"This is a rewrite of our (very old) NUnit test runner to support tests using\r\nother test suites. The reason for this is that Mono BCL tests are starting to\r\nuse xUnit tests and we want to be able to run all of them.\r\n\r\nAt the same time this code drops support for the \"GUI\" we previously had to run\r\ntests (not maintained, makes the actual runner code messy) and restructures the\r\nrunner infrastructure so that it's possible to add any number of runners in the\r\nfuture without rewriting any base code. We now use only Android instrumentations\r\nto execute the code.\r\n\r\nA few changes to the test running code were necessary since we now support more\r\nthan one instrumentation per apk, with different result outputs, options etc.\r\nSupport for granting Android permissions on apk install time was added as\r\nwell (might be necessary when running tests on devices with Oreo)"},{"Id":"7088120599","Type":"IssuesEvent","CreatedAt":"2018-01-11T20:17:55","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1133","RelatedDescription":"Closed issue \"Add min sdk version argument to desugar task\" (#1133) at xamarin/xamarin-android","RelatedBody":"See https://github.com/xamarin/xamarin-android/pull/991#pullrequestreview-85021465 for details."},{"Id":"7088119690","Type":"PullRequestEvent","CreatedAt":"2018-01-11T20:17:44","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1184","RelatedDescription":"Merged pull request \"[msbuild] Add --min-sdk-version argument to desugar tool \" (#1184) at xamarin/xamarin-android","RelatedBody":"as per https://github.com/xamarin/xamarin-android/issues/1133."},{"Id":"7086760466","Type":"PullRequestEvent","CreatedAt":"2018-01-11T15:46:31","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1185","RelatedDescription":"Opened pull request \"Issue1154 [WIP]\" (#1185) at xamarin/xamarin-android","RelatedBody":""},{"Id":"7084985287","Type":"PullRequestEvent","CreatedAt":"2018-01-11T09:22:52","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1184","RelatedDescription":"Opened pull request \"[msbuild] Add --min-sdk-version argument to desugar tool \" (#1184) at xamarin/xamarin-android","RelatedBody":"as per https://github.com/xamarin/xamarin-android/issues/1133."},{"Id":"7084493932","Type":"PullRequestEvent","CreatedAt":"2018-01-11T07:11:17","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1183","RelatedDescription":"Opened pull request \"[enumification][Mono.Android] fix ChoiceMode enum generation.\" (#1183) at xamarin/xamarin-android","RelatedBody":"After the last API XML generation sanitization, ChoiceMode was removed\r\nbecause they were generated from AbsListView fields which DOES NOT EXIST\r\nin API Level 10.\r\n\r\nAnd getChoiceMode() and setChoiceMode are removed because they expect\r\nthat nonexistent enum.\r\n\r\nFortunately they are in ListView in API Level 10, so they can be generated\r\nfrom there."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7089088598","Type":"PullRequestEvent","CreatedAt":"2018-01-12T00:31:22","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1561","RelatedDescription":"Opened pull request \"[Android] Don't assume casts to Activity from Context will be successful\" (#1561) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nNull check casts to Activity from Context in Platform\r\n\r\n### Bugs Fixed ###\r\n\r\nTheoretically fixes #1407 \r\n\r\n"},{"Id":"7088021718","Type":"PullRequestEvent","CreatedAt":"2018-01-11T19:56:04","Actor":"jsuarezruiz","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1560","RelatedDescription":"Opened pull request \"[WPF] Moved WPFLightToolkit Resources to WPF Platform project\" (#1560) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n Added WPFLightToolkit ResourceDictionary to WPF Platform project. This prevents the dev from having to add it to the resources of their Application.\r\n\r\nFrom:\r\n\r\n```\r\n<Application.Resources>\r\n        <ResourceDictionary>\r\n            <ResourceDictionary.MergedDictionaries>\r\n                <ResourceDictionary Source=\"/WPFLightToolkit;component/Assets/Default.xaml\" />\r\n            </ResourceDictionary.MergedDictionaries>\r\n            <!-- Default Global Color -->\r\n            <SolidColorBrush x:Key=\"WindowBackgroundColor\" Color=\"White\" />\r\n            <SolidColorBrush x:Key=\"AccentColor\" Color=\"#F5C210\" />\r\n\r\n            <!-- Default Command Bar Color -->\r\n            <SolidColorBrush x:Key=\"CommandBarBackgroundColor\" Color=\"#151C25\" />\r\n            <SolidColorBrush x:Key=\"CommandBarTextColor\" Color=\"White\" />\r\n\r\n            <!-- Default Title Bar Color -->\r\n            <SolidColorBrush x:Key=\"DefaultTitleBarBackgroundColor\" Color=\"#151C25\" />\r\n            <SolidColorBrush x:Key=\"DefaultTitleBarTextColor\" Color=\"White\" />\r\n\r\n            <!-- Default Tabbed Bar Color -->\r\n            <SolidColorBrush x:Key=\"DefaultTabbedBarBackgroundColor\" Color=\"#151C25\" />\r\n            <SolidColorBrush x:Key=\"DefaultTabbedBarTextColor\" Color=\"White\" />\r\n\r\n        </ResourceDictionary>\r\n</Application.Resources>\r\n```\r\n\r\nTo:\r\n\r\n```\r\n<Application.Resources>\r\n        <ResourceDictionary>\r\n\r\n        </ResourceDictionary>\r\n</Application.Resources>\r\n```\r\n\r\n### Bugs Fixed ###\r\n\r\n- None.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"7087781416","Type":"PullRequestEvent","CreatedAt":"2018-01-11T19:03:14","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1559","RelatedDescription":"Merged pull request \"[Xaml[C]] avoid processing RD content multiple times\" (#1559) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n[Xaml[C]] avoid processing RD content multiple times\r\n\r\nStop the RD visitor on the RD node, as the SetPropVisitor is taking over\r\n\r\n### Bugs Fixed ###\r\n\r\n- fixes #1554\r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense"},{"Id":"7087781411","Type":"IssuesEvent","CreatedAt":"2018-01-11T19:03:13","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1554","RelatedDescription":"Closed issue \"[Xaml[C]] nested ResourceDictionaries are parsed multiple times\" (#1554) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\n[Xaml] nested ResourceDictionaries are parsed multiple times\r\n\r\n### Steps to Reproduce\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\r\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\r\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\r\n             xmlns:local=\"clr-namespace:Xamarin.Forms.Xaml.UnitTests\"\r\n             x:Class=\"Xamarin.Forms.Xaml.UnitTests.Gh1554\">\r\n    <ContentPage.Resources>\r\n        <ResourceDictionary>\r\n            <ResourceDictionary>\r\n                <Label x:Key=\"label1\"/>\r\n                <Entry x:Key=\"entry1\"/>\r\n            </ResourceDictionary>\r\n        </ResourceDictionary>\r\n    </ContentPage.Resources>\r\n</ContentPage>\r\n```\r\n\r\n### Expected Behavior\r\n\r\nResourceDictionaries should only be parsed once\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue: `master`\r\n- Last known good version: this was introduced with the bunch of changes related to CSS (keyless RDs in RDs)\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7089511455","Type":"PullRequestEvent","CreatedAt":"2018-01-12T03:11:22","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3204","RelatedDescription":"Opened pull request \"[coreanimation] Add [Protocol] to CAAnimationDelegate\" (#3204) at xamarin/xamarin-macios","RelatedBody":"This now formal `CAAnimationDelegate` protocol had to be reverted [1]\nbecause we did not support `FormalSince` at the time - and this broke the\nstatic registrar when used with older SDK. Support was added in [2] but\ndid not include `CAAnimationDelegate` (but `CALayerDelegate` was fixed).\n\nBecause this was not a protocol the `Delegate` property expose it as a\n`CAAnimationDelegate`, the concrete/model type, and not an interface.\n\nThe workaround so `ICAAnimationDelegate` can be used, thru the\n`WeakDelegate`, requires to manually re-bind some API because the\ngenerator won't allow this anymore (it's bad to expose a [Model]\nwhen a [Protocol] exists).\n\nxtro data updated\n\n[1] https://github.com/xamarin/xamarin-macios/pull/698\n[2] https://github.com/xamarin/xamarin-macios/pull/2130"},{"Id":"7089344886","Type":"PullRequestEvent","CreatedAt":"2018-01-12T02:05:47","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3203","RelatedDescription":"Opened pull request \"[mtouch][mmp] Report invalid debug symbols files. Fixes #3200\" (#3203) at xamarin/xamarin-macios","RelatedBody":"Try to read the assembly with symbols and, if that fails, warn and\nfallback to loading them without symbols.\n\nThis fixes cases were it's not easy to update or delete (e.g. nuget)\nbad symbols files - so this cannot be an error without causing a lot\nof pain.\n\nHowever it needs to be reported, otherwise it wont be fixed (by the\npublisher) and it can limit the debugability of the application and\nthe usefulness of the stacktraces.\n\nFinally merge most of the resolver's code between mtouch and mmp so\nwe don't have to fix such issue twice anymore.\n\nnote: this needs to be slightly updated once we get a version of cecil\nthat can give us a more precise error message.\n\nAlso bring Rolf's tests from\nhttps://github.com/xamarin/xamarin-macios/pull/3079\n\nreference:\nhttps://github.com/xamarin/xamarin-macios/issues/3200"},{"Id":"7088607562","Type":"PullRequestEvent","CreatedAt":"2018-01-11T22:09:41","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3202","RelatedDescription":"Opened pull request \"[runtime] Add a few asserts to avoid reading memory.\" (#3202) at xamarin/xamarin-macios","RelatedBody":"We're looping over a char* array in multiple places, not checking whether we'd\nreach the end of the string.\n\nThese asserts make sure that we don't looping over invalid memory when we find\nsomething we don't understand.\n\nIf given random invalid memory, we'd eventually either crash or hit an assert\nfurther below, so these new asserts won't cause any change in behavior, but it\nimproves the diagnostic message.\n\nI ran into this with the test case from bug #[61086][1].\n\n[1]: https://bugzilla.xamarin.com/show_bug.cgi?id=61086"},{"Id":"7088000944","Type":"IssuesEvent","CreatedAt":"2018-01-11T19:51:25","Actor":"xamarinshukla","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3201","RelatedDescription":"Opened issue \"Cannot find registrar.m\" (#3201) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Existing Xamarin Forms project. Upgrade to latest Visual studio code. \r\nTo Be honest there is not much in the repro path. This started to happen right after I upgraded to latest Xcode and Latest Xamarin update from stable channel. \r\n2. Archive for publishing/Debugging/running \r\n3. \r\n\r\n### Expected Behavior\r\nBuild/run the app without any issues. \r\n### Actual Behavior\r\nError in building. Please file a report at Xamarin bugzilaa\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (ht\r\n[build.log](https://github.com/xamarin/xamarin-macios/files/1623929/build.log)\r\n\r\ntps://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"951544245466423296","CreatedAt":"2018-01-11T20:00:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with the exciting new features in Android Oreo 8.1 with updated support in #Xamarin.Android:… https://t.co/7RaFvwrg4V","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":11,"RawContent":null},{"Id":"951505598268563456","CreatedAt":"2018-01-11T17:26:27+00:00","UserScreenname":"xamarinhq","Text":"Ready to start building better apps, faster? Learn how to get started with #VSAppCenter in our upcoming @XamarinU w… https://t.co/zkJdTZ6JTX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":18,"RawContent":null},{"Id":"951487872753946625","CreatedAt":"2018-01-11T16:16:01+00:00","UserScreenname":"xamarinhq","Text":"Simplified app signing with secure files in #VSTS: https://t.co/O5XooxuL40 https://t.co/TGqFOONLio","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":18,"FavoriteCount":8,"RawContent":null},{"Id":"951172797337866240","CreatedAt":"2018-01-10T19:24:01+00:00","UserScreenname":"xamarinhq","Text":"The #VisualStudio 2017 version 15.6 Preview is now available! Get started today: https://t.co/KG2CJ20AHH https://t.co/e5VR78hTLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":47,"FavoriteCount":26,"RawContent":null},{"Id":"951133533246025738","CreatedAt":"2018-01-10T16:48:00+00:00","UserScreenname":"xamarinhq","Text":"Get the most out of Binding in #XamarinForms with this overview of the powerful features that you should be using: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":48,"FavoriteCount":22,"RawContent":null},{"Id":"950803363595243521","CreatedAt":"2018-01-09T18:56:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to deliver rich media experiences with the #XamarinForms Video Player: https://t.co/ndy3yvDDNk https://t.co/V8JfqCj42s","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":87,"FavoriteCount":39,"RawContent":null},{"Id":"950774673335341058","CreatedAt":"2018-01-09T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Add a little 3D to your #Xamarin iOS apps with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/G6BluXZvLM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":25,"FavoriteCount":11,"RawContent":null},{"Id":"950410272363163649","CreatedAt":"2018-01-08T16:54:01+00:00","UserScreenname":"xamarinhq","Text":"Add cross-platform charts to any app the easy way with #MicroCharts: https://t.co/VeqfS1vfIL https://t.co/k8IzINY3SW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":127,"FavoriteCount":61,"RawContent":null},{"Id":"950049897843105792","CreatedAt":"2018-01-07T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDfY3Ep https://t.co/6yNTVxdVbh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":18,"RawContent":null},{"Id":"949688768231104512","CreatedAt":"2018-01-06T17:07:01+00:00","UserScreenname":"xamarinhq","Text":"Add Augmented Reality to your #XamarinAndroid apps with #ARCore: https://t.co/TwpBAAMyUJ https://t.co/EvDnR69pjy","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":105,"FavoriteCount":48,"RawContent":null},{"Id":"949372052758302723","CreatedAt":"2018-01-05T20:08:30+00:00","UserScreenname":"xamarinhq","Text":"Learn how Colonial Life drives field sales productivity with #dotNET and #DevOps using #XamarinForms:… https://t.co/Y1wBTN0TJA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":14,"RawContent":null},{"Id":"949323858972233734","CreatedAt":"2018-01-05T16:57:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how ActivityTask makes async/await easier to use in your #Xamarin Android mobile apps: https://t.co/drhcfIy4ht","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":56,"FavoriteCount":21,"RawContent":null},{"Id":"948981959132368901","CreatedAt":"2018-01-04T18:18:24+00:00","UserScreenname":"xamarinhq","Text":"CoreML Programming with Xamarin.Mac and F#: https://t.co/vI7JuxjkWa https://t.co/VAkrZo84pP","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":39,"RawContent":null},{"Id":"948961974766972934","CreatedAt":"2018-01-04T16:59:00+00:00","UserScreenname":"xamarinhq","Text":"Add native Android Facebook Authentication to your app using #Azure App Service in this guide from @jamesmontemagno: https://t.co/DAcKpYLHe5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":16,"RawContent":null},{"Id":"948635192490590211","CreatedAt":"2018-01-03T19:20:29+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/sV84us2Np4 https://t.co/tduUDgg9oS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":6,"RawContent":null},{"Id":"948604119945760768","CreatedAt":"2018-01-03T17:17:01+00:00","UserScreenname":"xamarinhq","Text":"Take advantage of #ARKit, an augmented-reality mode on iOS 11 for 6S and up iPhones + 2017 iPads and iPad Pros:… https://t.co/tuqMBJJWpq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":18,"RawContent":null},{"Id":"948294578192437248","CreatedAt":"2018-01-02T20:47:00+00:00","UserScreenname":"xamarinhq","Text":"Did your favorite make the cut? Get the full list of the top #Xamarin blog posts of 2017, and see the top post of t… https://t.co/dVcXEnCo7o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":57,"FavoriteCount":27,"RawContent":null},{"Id":"947216981937319938","CreatedAt":"2017-12-30T21:25:01+00:00","UserScreenname":"xamarinhq","Text":"The countdown is winding down! Post No. 2 in the #12DaysofXamarin walks you through implementing push notifications… https://t.co/uiyyYhL6zW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":28,"RawContent":null},{"Id":"946830183532724235","CreatedAt":"2017-12-29T19:48:01+00:00","UserScreenname":"xamarinhq","Text":"Just getting started with #XamarinForms? Let PM @davidortinau show you how to beat the learning curve in post No. 3… https://t.co/0y63QrYo5f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":20,"RawContent":null}]}},"RunOn":"2018-01-12T05:30:39.3454172Z","RunDurationInMilliseconds":3945}