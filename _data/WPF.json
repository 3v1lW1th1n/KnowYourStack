{"Data":{"GitHub":{"Issues":[{"Id":"453732101","IsPullRequest":true,"CreatedAt":"2019-06-08T00:00:09","Actor":"SamBent","Number":"899","RawContent":null,"Title":"port 2 changes from .NET 4.8: crash in PropertyChangeEventManager and GDI handle leak","State":"open","Body":"Fixes #896, fixes #897.","Url":"https://github.com/dotnet/wpf/pull/899","RelatedDescription":"Open PR \"port 2 changes from .NET 4.8: crash in PropertyChangeEventManager and GDI handle leak\" (#899)"},{"Id":"453722409","IsPullRequest":false,"CreatedAt":"2019-06-07T23:01:07","Actor":"SamBent","Number":"898","RawContent":null,"Title":"WPF UserControl Hosted in Winform - NullReferenceException","State":"open","Body":"(Port of bugfix in .NET 4.8)\n\nThe issues is that when a WPF UserControl has a reference to the Form hosting (using ElementHost) and the UserControl tries to close the Form from a keystroke it will cause a NullReferenceException.\n","Url":"https://github.com/dotnet/wpf/issues/898","RelatedDescription":"Open issue \"WPF UserControl Hosted in Winform - NullReferenceException\" (#898)"},{"Id":"453722090","IsPullRequest":false,"CreatedAt":"2019-06-07T22:59:25","Actor":"SamBent","Number":"897","RawContent":null,"Title":"GDI handle leak when application is PerMonV2 aware","State":"open","Body":"(Port of bugfix in .NET 4.8)\n\nThe root cause for this is a handle leak in WindowStartupTopLeftPointHelper.IdentifyScreenTopLeft when the application is PerMonV2 aware.\n\nThe screen HDC used in this function is never released.  This causes a GC when the window being created paints as DoPaint's HDC creation will always push the handle count in HandleCollector.HandleType above the threshold value.  So a new window, in most scenarios under PerMonV2, will cause a GC.\n","Url":"https://github.com/dotnet/wpf/issues/897","RelatedDescription":"Open issue \"GDI handle leak when application is PerMonV2 aware\" (#897)"},{"Id":"453721206","IsPullRequest":false,"CreatedAt":"2019-06-07T22:54:38","Actor":"SamBent","Number":"896","RawContent":null,"Title":"WPF application crashes with System.InvalidOperationException: Collection was modified after the enumerator was instantiated. at System.Collections.Specialized.ListDictionary.NodeEnumerator.MoveNext()","State":"open","Body":"(Port of bugfix in .NET 4.8)\n\nThe exception occurs as follows:\n\n1. A property is changed\n2. The weak-event system starts delivery of the PropertyChanged event\n3. One of the handlers calls (indirectly) a method that\n4. Pushes a dispatcher frame, starting a nested message pump\n5. A cleanup task reaches the front of the dispatcher queue (before the frame stops pumping)\n6. PropertyChangedEventManager.Purge iterates over its dictionary.  When it reaches the ListenerList corresponding to the property from (1), it's marked \"in-use\" (from (2)), so the list is cloned and the clone is inserted into the dictionary.\n7. The next MoveNext() from (6) throws the exception.\n\n","Url":"https://github.com/dotnet/wpf/issues/896","RelatedDescription":"Open issue \"WPF application crashes with System.InvalidOperationException: Collection was modified after the enumerator was instantiated. at System.Collections.Specialized.ListDictionary.NodeEnumerator.MoveNext()\" (#896)"},{"Id":"453675477","IsPullRequest":false,"CreatedAt":"2019-06-07T20:11:08","Actor":"grubioe","Number":"895","RawContent":null,"Title":"Infinite layout loop in Ribbon","State":"open","Body":"Copied from VSO id: 911998\r\n\r\nFound from automated test case (Case190401)\r\n\r\nThere's a bug in Ribbon where the RibbonContextualTabGroupsPanel repeatedly invalidates the RibbonTabHeadersPanel, which in turn invalidates the original RCTGP, without changing any sizes.  This leads to a soft layout loop.   It only happens with certain sizes (which have only appeared on RS3+ machines, perhaps due to theme differences and/or mouse-move coalescing).\r\n\r\nThis breaks the test case, which waits for DispatcherPriority.ApplicationIdle.  The soft loop repeatedly posts higher-priority tasks, attempting to finish a layout pass, so the test case eventually times out.\r\n\r\nThis can happen to users, if they resize the ribbon in just the wrong way.  The symptom would be high CPU usage.  However the app is still responsive, and the user can resize the window to a less unfortunate size, and the CPU will return to 0. \r\n","Url":"https://github.com/dotnet/wpf/issues/895","RelatedDescription":"Open issue \"Infinite layout loop in Ribbon\" (#895)"},{"Id":"453624928","IsPullRequest":true,"CreatedAt":"2019-06-07T17:46:29","Actor":"vatsan-madhavan","Number":"894","RawContent":null,"Title":"Update to pool-provider sourced machines","State":"open","Body":"https://github.com/dotnet/wpf/pull/750\r\n\r\nFixes #834 \r\n\r\nDraft until Preview 6 is finalized. ","Url":"https://github.com/dotnet/wpf/pull/894","RelatedDescription":"Open PR \"Update to pool-provider sourced machines\" (#894)"},{"Id":"453504862","IsPullRequest":true,"CreatedAt":"2019-06-07T13:42:59","Actor":"dotnet-maestro[bot]","Number":"893","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190606.4\r\n- **Date Produced**: 6/6/2019 1:33 PM\r\n- **Commit**: 8bce9d3c8edec5caa03e272b9bed4fa143a0b6bf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview7.19306.4\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/893","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#893)"},{"Id":"453494911","IsPullRequest":true,"CreatedAt":"2019-06-07T13:19:37","Actor":"dotnet-maestro[bot]","Number":"892","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190606.1\r\n- **Date Produced**: 6/6/2019 1:02 PM\r\n- **Commit**: bec5f97141d8de75e373d9e58c662a614a5f3c63\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview7.19306.1\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/892","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#892)"},{"Id":"453494464","IsPullRequest":true,"CreatedAt":"2019-06-07T13:13:31","Actor":"dotnet-maestro[bot]","Number":"891","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190606.03\r\n- **Date Produced**: 6/7/2019 3:13 AM\r\n- **Commit**: 451922936e2ae806ec03275051806145d630cc80\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27806-03\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview7.19306.6 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview7.19306.6 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview7.19306.6 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview7.19306.6 (parent: Microsoft.NETCore.App)\r\n- **System.DirectoryServices** -> 4.6.0-preview7.19306.6 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview7.19306.6 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-preview7.19306.6 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.MetadataLoadContext** -> 4.6.0-preview7.19306.6 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-preview7.19306.6 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview7.19306.6 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview7.19306.6 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview7.19306.6 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview7.19306.6 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview7.19306.6 (parent: Microsoft.NETCore.App)\r\n- **System.IO.Packaging** -> 4.6.0-preview7.19306.6 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILDAsm** -> 3.0.0-preview7.19306.1 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview7.19306.1 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-preview7.19306.1 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview7.19306.1 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/891","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#891)"},{"Id":"453480417","IsPullRequest":true,"CreatedAt":"2019-06-07T12:07:13","Actor":"dotnet-maestro[bot]","Number":"890","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190606.12\r\n- **Date Produced**: 6/6/2019 9:47 PM\r\n- **Commit**: a1805103791e43031355e11c0d037bca803a9593\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19306.12\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19306.12\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19306.12\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/890","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#890)"},{"Id":"452736955","IsPullRequest":true,"CreatedAt":"2019-06-07T01:29:18","Actor":"grubioe","Number":"876","RawContent":null,"Title":"Update THIRD-PARTY-NOTICES.TXT","State":"closed","Body":"Added license notice for Zlib and Json.NET","Url":"https://github.com/dotnet/wpf/pull/876","RelatedDescription":"Closed or merged PR \"Update THIRD-PARTY-NOTICES.TXT\" (#876)"},{"Id":"452746382","IsPullRequest":false,"CreatedAt":"2019-06-06T22:56:32","Actor":"cbaysinger","Number":"878","RawContent":null,"Title":"An ActiveX control hosted in a WindowsFormsHost is redrawn incorrectly after resizing the host window.","State":"closed","Body":"* .NET Core Version: (e.g. 3.0 Preview15-27626-15)\r\n* Windows version: (1809(OS Build 17763.503)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No in 4.7.2\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\nActiveX control is redrawn shifted to the left and up such that its left and top edge are clipped when the control has focus and the window is resized. The control continues to shift left and up as the above steps are repeated. \r\n<img width=\"367\" alt=\"image\" src=\"https://user-images.githubusercontent.com/22218080/58994284-d46fe500-87a4-11e9-8bce-98c759c111a5.png\">\r\n\r\nI found this issue while attempting to port our code to Core3. \r\nWe have a highly customized ActiveX graphing control that we moved from MFC to WPF a couple of years ago. \r\nWe are now moving to Core 3 and noticed a problem with the control. When a user clicks on the graph it is redrawn shifted to the left and up such that its left and top edge are clipped.\r\nWe then tested several other ActiveX components and found similar behavior although resizing the host window was required to reproduce the shifted drawing.\r\nJust to rule out our ActiveX controls we built a sample button from GetHub\\VCSamples-master\\VC2008Samples\\MFC\\controls\\button and observed the same behavior although it throws a pair of unrelated exceptions when the window loses focus.\r\n\r\nExpected Behavior:\r\nBuilding the same application but using .Net 4.7.2 does not display the drawing defect although the exceptions are thrown by the sample button. The control simply changes size as the window changes size.\r\n\r\nMinimal Repro:\r\nUsing Visual Studio 2019 Preview Version 16.1.0 Preview 3.0 create a new WPF application using .NET Core 3.\r\nAdd to the MainWindow.xaml a Loaded event and a 3x3 grid containing a WindowsFormsHost in row 1 column 1. Set the background property of the WindowsFormsHost to yellow and the grid background to azure or any contrasting color.\r\nTo Dependencies add a registered ActiveX component wrapped by aximp.exe to the Assemblies and add NuGet Microsoft.NETCore.App.Host.win-x86 (3.0.0-preview5-27626-15).\r\nIn MainWindow.xaml.cs add the Window_Loaded event and within the function new the button and assign it to WindowsFormsHost.Child.\r\n\r\nAlternatively the two projects at https://1drv.ms/f/s!AB8PEB5wHC4Jeg contain the button control and the WPF application. \r\nAfter building the button control register it using regsvr32.\r\nThen create the import wrapper by running aximp.exe. \r\nIn my case C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.7.2 Tools>aximp.exe button.ocx /out: C:\\Download\\MS MFC Samples\\GetHub\\VCSamples-master\\VC2008Samples\\MFC\\controls\\button\\Debug\\AxInterop.button.dll\r\nNext build the WPF application and ensure the following dependencies: \r\nUnder Assemblies AxInterop.button  \r\nNuGet Microsoft.NETCore.App.Host.win-x86 (3.0.0-preview5-27626-15) \r\n\r\n1. Run the app\r\n2. click the button\r\n3. Resize the window by dragging lower right corner \r\n4. button is redrawn with boarder on all sides\r\n5. Minimize the window\r\n6. Restore the window. Button is now drawn in the upper left corner of the WindowsFormsHost\r\n7. Repeat steps 2-4, button is redrawn with small boarder at top-left, larger boarder bottom-right.\r\n8. Repeat steps 5-6, button is redrawn in upper left corner with large boarder at bottom-right.\r\n9. As these steps are repeated the button's upper left corner is increasingly clipped. \r\n\r\n \r\n","Url":"https://github.com/dotnet/wpf/issues/878","RelatedDescription":"Closed issue \"An ActiveX control hosted in a WindowsFormsHost is redrawn incorrectly after resizing the host window.\" (#878)"},{"Id":"453246570","IsPullRequest":false,"CreatedAt":"2019-06-06T22:05:46","Actor":"stevenbrix","Number":"889","RawContent":null,"Title":"queue is not allowed for authenticated usage build failures in 'official/$(reponame)/refs/heads/master' - '20190606.7'","State":"closed","Body":"@dotnet-mc-bot commented on [Thu Jun 06 2019](https://github.com/dotnet/core-eng/issues/6649)\n\nThere were a set of failures during this build. Here is a summary of these:\r\n* https://dnceng.visualstudio.com/internal/_build/results?buildId=215255\r\n  - **Agent:** DDVSOWINAGE321\r\n  - **Error log:** E:\\A\\_work\\0\\s\\.packages\\microsoft.dotnet.helix.sdk\\2.0.0-beta.19278.1\\tools\\Microsoft.DotNet.Helix.Sdk.MonoQueue.targets(0,0): error : ArgumentException: Queue is not allowed for authenticated usage [E:\\A\\_work\\0\\s\\eng\\helixpubli...\r\n\r\n@robertborr\r\n\n\n---\n\n@robertborr commented on [Thu Jun 06 2019](https://github.com/dotnet/core-eng/issues/6649#issuecomment-499669316)\n\n##[error].packages\\microsoft.dotnet.helix.sdk\\2.0.0-beta.19278.1\\tools\\Microsoft.DotNet.Helix.Sdk.MonoQueue.targets(51,5): error : ArgumentException: Queue is not allowed for authenticated usage\r\n   at Microsoft.DotNet.Helix.Client.HelixApi.HandleFailedRequest(RestApiException ex) in /_/src/Microsoft.DotNet.Helix/Client/CSharp/HelixApi.cs:line 29\r\n   at Microsoft.DotNet.Helix.Client.HelixApi.OnFailedRequest(RestApiException ex) in /_/src/Microsoft.DotNet.Helix/Client/CSharp/generated-code/HelixApi.cs:line 116\r\n   at Microsoft.DotNet.Helix.Client.Job.<NewInternalAsync>d__10.MoveNext() in /_/src/Microsoft.DotNet.Helix/Client/CSharp/generated-code/Job.cs:line 273\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.DotNet.Helix.Client.Job.<NewAsync>d__9.MoveNext() in /_/src/Microsoft.DotNet.Helix/Client/CSharp/generated-code/Job.cs:line 190\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.DotNet.Helix.Client.HelixApi.<RetryAsync>d__69`1.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at Microsoft.DotNet.Helix.Client.JobDefinition.<SendAsync>d__81.MoveNext() in /_/src/Microsoft.DotNet.Helix/JobSender/JobDefinition.cs:line 225\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at Microsoft.DotNet.Helix.Sdk.SendHelixJob.<ExecuteCore>d__65.MoveNext() in /_/src/Microsoft.DotNet.Helix/Sdk/SendHelixJob.cs:line 234\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.DotNet.Helix.Sdk.HelixTask.Execute() in /_/src/Microsoft.DotNet.Helix/Sdk/HelixTask.cs:line 45\r\nRestApiException: The response contained an invalid status code 400 Bad Request\r\n\r\nBody: {\"Message\":\"Queue is not allowed for authenticated usage\"}\r\n\r\n\n\n---\n\n@robertborr commented on [Thu Jun 06 2019](https://github.com/dotnet/core-eng/issues/6649#issuecomment-499669802)\n\nCc: @stevenbrix \n\n","Url":"https://github.com/dotnet/wpf/issues/889","RelatedDescription":"Closed issue \"queue is not allowed for authenticated usage build failures in 'official/$(reponame)/refs/heads/master' - '20190606.7'\" (#889)"},{"Id":"453245663","IsPullRequest":true,"CreatedAt":"2019-06-06T22:05:46","Actor":"stevenbrix","Number":"888","RawContent":null,"Title":"fix helix target queues","State":"closed","Body":"fixing helix queues. we can't have a queue that ends with \".Open\" for internal builds.\r\n\r\nFixes #889","Url":"https://github.com/dotnet/wpf/pull/888","RelatedDescription":"Closed or merged PR \"fix helix target queues\" (#888)"},{"Id":"453222605","IsPullRequest":false,"CreatedAt":"2019-06-06T20:25:17","Actor":"Thieum","Number":"887","RawContent":null,"Title":"WPF Toolkit and Futures","State":"open","Body":"WPF Toolkit and Futures (and a few other goodies) located at https://archive.codeplex.com/?p=wpf were the first parts of wpf to be open-sourced AFAIK.\r\n\r\nAre there plans to merge those back in this repository in any form?\r\n","Url":"https://github.com/dotnet/wpf/issues/887","RelatedDescription":"Open issue \"WPF Toolkit and Futures\" (#887)"},{"Id":"452773301","IsPullRequest":true,"CreatedAt":"2019-06-06T17:09:54","Actor":"rladuca","Number":"882","RawContent":null,"Title":"Remove null reference workaround for PresentationFramework-SystemXmlLinq","State":"closed","Body":"Remove workaround for https://github.com/dotnet/corefx/issues/32641.\r\n\r\nFixes #743 ","Url":"https://github.com/dotnet/wpf/pull/882","RelatedDescription":"Closed or merged PR \"Remove null reference workaround for PresentationFramework-SystemXmlLinq\" (#882)"},{"Id":"453020972","IsPullRequest":true,"CreatedAt":"2019-06-06T13:28:26","Actor":"dotnet-maestro[bot]","Number":"886","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190605.10\r\n- **Date Produced**: 6/5/2019 9:16 PM\r\n- **Commit**: 76e5819b43718069ef5710a08032b616de5d754c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview7.19305.10\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/886","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#886)"},{"Id":"453009522","IsPullRequest":true,"CreatedAt":"2019-06-06T12:53:58","Actor":"dotnet-maestro[bot]","Number":"885","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190605.1\r\n- **Date Produced**: 6/5/2019 1:04 PM\r\n- **Commit**: e65ecacdf2da06f11c847571b467f632393bd060\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-preview7.19305.1\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/885","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#885)"},{"Id":"453009082","IsPullRequest":true,"CreatedAt":"2019-06-06T12:52:59","Actor":"dotnet-maestro[bot]","Number":"884","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190605.02\r\n- **Date Produced**: 6/6/2019 4:20 AM\r\n- **Commit**: 2e54d1f6a6a9126126d6c9f8d730489892acf730\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27805-02\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview7.19305.9 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview7.19305.9 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview7.19305.9 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview7.19305.9 (parent: Microsoft.NETCore.App)\r\n- **System.DirectoryServices** -> 4.6.0-preview7.19305.9 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview7.19305.9 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-preview7.19305.9 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.MetadataLoadContext** -> 4.6.0-preview7.19305.9 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-preview7.19305.9 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview7.19305.9 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview7.19305.9 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview7.19305.9 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview7.19305.9 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview7.19305.9 (parent: Microsoft.NETCore.App)\r\n- **System.IO.Packaging** -> 4.6.0-preview7.19305.9 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILDAsm** -> 3.0.0-preview7.19305.2 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview7.19305.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-preview7.19305.2 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview7.19305.2 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/884","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#884)"},{"Id":"452993734","IsPullRequest":true,"CreatedAt":"2019-06-06T12:17:58","Actor":"dotnet-maestro[bot]","Number":"883","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190605.13\r\n- **Date Produced**: 6/6/2019 5:54 AM\r\n- **Commit**: d05c046913964e880be08b804e7249f297617c2f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19305.13\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19305.13\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/883","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#883)"},{"Id":"452754710","IsPullRequest":true,"CreatedAt":"2019-06-06T02:54:12","Actor":"ryalanms","Number":"879","RawContent":null,"Title":"Don't generate ref assemblies for WPF extension assemblies","State":"closed","Body":"Fixes #801. ","Url":"https://github.com/dotnet/wpf/pull/879","RelatedDescription":"Closed or merged PR \"Don't generate ref assemblies for WPF extension assemblies\" (#879)"},{"Id":"452743134","IsPullRequest":true,"CreatedAt":"2019-06-06T00:13:58","Actor":"rladuca","Number":"877","RawContent":null,"Title":"Suppress all GUI from IL(D)Asm calls.","State":"closed","Body":"Set Quiet on ILAsm and NoBar on ILDAsm.\r\n\r\nFixes #875 ","Url":"https://github.com/dotnet/wpf/pull/877","RelatedDescription":"Closed or merged PR \"Suppress all GUI from IL(D)Asm calls.\" (#877)"},{"Id":"452663190","IsPullRequest":false,"CreatedAt":"2019-06-06T00:13:58","Actor":"vatsan-madhavan","Number":"875","RawContent":null,"Title":"ILDASM shows popups during build","State":"closed","Body":"`ILDASM` shows popups during builds. \r\n\r\nDuring local/dev builds, the popup window is prone to accidental dismissal and consequent build failure. \r\n\r\nSuppress UI using `/quiet`","Url":"https://github.com/dotnet/wpf/issues/875","RelatedDescription":"Closed issue \"ILDASM shows popups during build\" (#875)"},{"Id":"452762872","IsPullRequest":true,"CreatedAt":"2019-06-05T23:34:28","Actor":"vatsan-madhavan","Number":"881","RawContent":null,"Title":"Ensure that implicit references for .NET Framework projects are appropriate when targeting net3x and net40","State":"open","Body":"Fixes #255\r\n\r\nTraditionally, Visual Studio has supplied these references for .NET Framework based WPF Projects: \r\n    \r\n - .NET 3.x:   PresentationCore, PresentationFramework, WindowsBase \r\n - .NET 4.x:   PresentationCore, PresentationFramework, WindowsBase, System.Xaml \r\n\r\n\r\n    `Microsoft.NET.WindowsDesktop.SDK` will supply the following references to .NET Framework based \r\n    WPF Projects: \r\n    \r\n    - .NET 3.x:\r\n       - PresentationCore, PresentationFramework, WindowsBase \r\n    \r\n    - .NET 4.0:   \r\n       - PresentationCore, PresentationFramework, WindowsBase, System.Xaml, \r\n       - UIAutomationClient, UIAutomationClientSideProviders, UIAutomationProvider, UIAutomationTypes\r\n                \r\n    - .NET 4.5+:  \r\n       - PresentationCore, PresentationFramework, WindowsBase, System.Xaml, \r\n        - UIAutomationClient, UIAutomationClientSideProviders, UIAutomationProvider, UIAutomationTypes\r\n         - System.Windows.Controls.Ribbon\r\n\r\nAlso adds `$(_MicrosoftNetSdkWindowsDesktop)` . This can be used later in `Microsoft.NET.Sdk` to test whether properties like `UseWpf` or `UseWindowsForms` are set without import `Microsoft.NET.Sdk.WindowsDesktop` and show a warning.","Url":"https://github.com/dotnet/wpf/pull/881","RelatedDescription":"Open PR \"Ensure that implicit references for .NET Framework projects are appropriate when targeting net3x and net40\" (#881)"},{"Id":"452754825","IsPullRequest":true,"CreatedAt":"2019-06-05T23:03:15","Actor":"rladuca","Number":"880","RawContent":null,"Title":"WIP - Enable APICompat in WPF Builds","State":"open","Body":"Fixes #724 \r\n\r\nSee: https://github.com/rladuca/ApiCompatNotes/blob/master/ApiCompat%20Notes.txt\r\n\r\nThis sets up and enables API Compat against .NET 4.8 reference assemblies and also ensures compat between hand-crafted ref assemblies and their lib counterparts.","Url":"https://github.com/dotnet/wpf/pull/880","RelatedDescription":"Open PR \"WIP - Enable APICompat in WPF Builds\" (#880)"},{"Id":"452491021","IsPullRequest":true,"CreatedAt":"2019-06-05T13:17:12","Actor":"dotnet-maestro[bot]","Number":"874","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190604.6\r\n- **Date Produced**: 6/4/2019 8:58 PM\r\n- **Commit**: 24fbf672601b7b9c088abed2e850bfe14a69875f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview7.19304.6\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/874","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#874)"},{"Id":"452479988","IsPullRequest":true,"CreatedAt":"2019-06-05T12:53:36","Actor":"dotnet-maestro[bot]","Number":"873","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190604.03\r\n- **Date Produced**: 6/5/2019 4:08 AM\r\n- **Commit**: a620d0dba57cd18e49fa686e28e18369be23d067\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27804-03\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.DirectoryServices** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.MetadataLoadContext** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **System.IO.Packaging** -> 4.6.0-preview7.19304.7 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILDAsm** -> 3.0.0-preview7.19304.2 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview7.19304.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-preview7.19304.2 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview7.19304.2 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/873","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#873)"},{"Id":"452465557","IsPullRequest":true,"CreatedAt":"2019-06-05T12:17:49","Actor":"dotnet-maestro[bot]","Number":"872","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190604.23\r\n- **Date Produced**: 6/5/2019 4:12 AM\r\n- **Commit**: c9ab9c47d6c66fb9ad89e331900e06bed7463904\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19304.23\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19304.23\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/872","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#872)"},{"Id":"452409220","IsPullRequest":false,"CreatedAt":"2019-06-05T09:46:35","Actor":"shaggygi","Number":"871","RawContent":null,"Title":"System.Printing Support","State":"open","Body":"This was created based on a discussion from https://github.com/dotnet/corefx/issues/37978\r\n\r\n> I was trying to port an API to .NET Core that uses System.Printing PrintServer and related.  I came across this [doc](https://docs.microsoft.com/en-us/dotnet/api/system.printing.printserver?view=netcore-3.0) and have the impression System.Printing is supported.\r\n\r\nI was informed ([from issue link above](https://github.com/dotnet/corefx/issues/37978#issuecomment-498908611)) this is part of WPF and can be use by creating a `dotnet new wpf`.  However, I would like to use as a Class Library even if it must use the Win Compatibility package and Windows only.\r\n\r\nWe have many APIs to create/print labels that call the System.Printing APIs.  It would be nice to continue the same approach using WPF with .NET Core v3 and beyond.\r\n\r\nThanks in advance for any help.  It will be appreciated.","Url":"https://github.com/dotnet/wpf/issues/871","RelatedDescription":"Open issue \"System.Printing Support\" (#871)"},{"Id":"452339189","IsPullRequest":false,"CreatedAt":"2019-06-05T06:46:29","Actor":"DinoChan","Number":"870","RawContent":null,"Title":"Make SaveFileDialog support NOTESTFILECREATE.","State":"open","Body":"Needs to stop SaveFileDialog from creating an empty file.\r\n\r\nThe problem for us is that we have configured the file system security so that a file can be created and filled with data, but once it has been closed, it may not be modified or deleted (by a regular user). When our application tries to use file name returned by the SaveFileDialog, that file already exists and we get the following error when we try to fill it with data: “You don’t have permission to modify files in this network location.”","Url":"https://github.com/dotnet/wpf/issues/870","RelatedDescription":"Open issue \"Make SaveFileDialog support NOTESTFILECREATE.\" (#870)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-06-08T05:30:51.0229295Z","RunDurationInMilliseconds":924}