{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing SignalR for ASP.NET Core 2.0","PublishedOn":"2017-09-14T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are glad to announce an alpha release of SignalR for ASP.NET Core 2.0. This is the first official release of a new SignalR that is compatible with ASP.NET Core. It consists of a server component, a .NET client targeting .NET Standard 2.0 and a JavaScript/TypeScript client. What’s New? SignalR for ASP.NET Core is... <a aria-label=\"read more about Announcing SignalR for ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/14/announcing-signalr-for-asp-net-core-2-0/","RawContent":null},{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog template, available in our GitHub repo, you can create your web application fast and effortlessly, and even learn to master the new... <a aria-label=\"read more about Welcome to the New Blog Template for ASP.NET Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a cost-effective way of abstracting away the machine, ensuring that the application runs in the same conditions, from development, to test, to production. Containers started in Linux, as... <a aria-label=\"read more about Getting Started with Windows Containers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T00:00:00","CommentsCount":20,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we are going to dig into more details of features in 2.0. This list is not exhaustive or in any particular order, but highlights... <a aria-label=\"read more about ASP.NET Core 2.0 Features\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T00:00:00","CommentsCount":44,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new Razor Pages user-interface design paradigm.  For a full list of updates, you can read the release notes and you can check the list... <a aria-label=\"read more about Announcing ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null},{"Title":"Development time IIS support for ASP.NET Core Applications","PublishedOn":"2017-07-14T00:00:00","CommentsCount":13,"FacebookCount":0,"Summary":"With a recent update to Visual Studio 2017, we have added support for debugging ASP.NET Core applications against IIS. This blog post will walk you through enabling this feature and setting up your project to use this feature. Getting Started To get started: You need to install Visual Studio 2017 (version 15.3) Preview (it will... <a aria-label=\"read more about Development time IIS support for ASP.NET Core Applications\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/","RawContent":null},{"Title":"WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication","PublishedOn":"2017-06-28T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the recent update to the WCF Service Reference tool in the VS Marketplace, support has been added for downloading metadata for a web service where the metadata exchange (MEX) endpoint has been secured with IIS authentication. The purpose of MEX endpoints is to allow clients to discover the service capabilities, including security aspects of... <a aria-label=\"read more about WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/","RawContent":null},{"Title":"Introducing ASP.NET Core 2.0 Preview 2","PublishedOn":"2017-06-28T00:00:00","CommentsCount":41,"FacebookCount":0,"Summary":"At Build 2017, we released an initial preview version of ASP.NET Core 2.0.  Over the last two months we have incorporated your feedback and added a number of new features.  We now have a Preview 2 version of the ASP.NET Core 2.0 framework and Visual Studio tools for you to try.  In this post, we... <a aria-label=\"read more about Introducing ASP.NET Core 2.0 Preview 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers","PublishedOn":"2017-05-10T00:00:00","CommentsCount":25,"FacebookCount":0,"Summary":"The ASP.NET team is pleased to share the first preview version of the ASP.NET Core 2.0 framework.  In this post, we’ll look at the new features and changes to the web framework that were announced at the Build 2017 keynote and sessions.  We will also look at some other updates that were published for ASP.NET... <a aria-label=\"read more about Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/","RawContent":null},{"Title":"Visual Studio 2017 Tools for Azure Functions","PublishedOn":"2017-05-10T00:00:00","CommentsCount":104,"FacebookCount":0,"Summary":"Visual Studio 2017 Tools for Azure Functions are now available as part of the Azure development workload starting in the Visual Studio 2017 15.3 release. These tools: Enable creating pre-compiled C# functions that bring better cold start performance than script based functions, and opens the entire eco-system of Visual Studio tools for class libraries including code... <a aria-label=\"read more about Visual Studio 2017 Tools for Azure Functions\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6626448821","Type":"IssuesEvent","CreatedAt":"2017-09-22T19:36:24","Actor":"sethen","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2213","RelatedDescription":"Closed issue \"IServiceProvider does not contain definition for CreateScope\" (#2213) at aspnet/Home","RelatedBody":"I had a 1.0 project that I was upgrading to 2.0.  I followed the migration guide found here: https://docs.microsoft.com/en-us/aspnet/core/migration/1x-to-2x/ -- the part of interest here is the bit about the `CreateScope` and the `Move database initialization code`.  Seems as though this doesn't work as intended.\r\n\r\nEven when creating a new project with `dotnet new webApi` and using `dotnet restore` and putting this code:\r\n\r\n```\r\nvar host = BuildWebHost(args);\r\n\r\nusing (var scope = host.Services.CreateScope())\r\n{\r\n    var services = scope.ServiceProvider;\r\n\r\n    try\r\n    {\r\n        // Requires using RazorPagesMovie.Models;\r\n        SeedData.Initialize(services);\r\n    }\r\n    catch (Exception ex)\r\n    {\r\n        var logger = services.GetRequiredService<ILogger<Program>>();\r\n        logger.LogError(ex, \"An error occurred seeding the DB.\");\r\n    }\r\n}\r\n\r\nhost.Run();\r\n```\r\n\r\nin the `Main` function and trying to run it I get this error:\r\n\r\n```\r\nProgram.cs(13,37): error CS1061: 'IServiceProvider' does not contain a definition for 'CreateScope' and no extension method 'CreateScope' accepting a first argument of type 'IServiceProvider' could be found (are you missing a using directive or an assembly reference?)\r\n```\r\n\r\nThis seems like a pretty obvious issue that could be resolved.  Seems strange that this code in the migration guide doesn't work in a 2.0 project built right out of the box?  The `CreateScope` is simply not on the interface in question via `host.Services`."},{"Id":"6626270803","Type":"IssuesEvent","CreatedAt":"2017-09-22T18:49:18","Actor":"sethen","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2213","RelatedDescription":"Opened issue \"IServiceProvider does not contain definition for CreateScope\" (#2213) at aspnet/Home","RelatedBody":"I had a 1.0 project that I was upgrading to 2.0.  I followed the migration guide found here: https://docs.microsoft.com/en-us/aspnet/core/migration/1x-to-2x/ -- the part of interest here is the bit about the `CreateScope` and the `Move database initialization code`.  Seems as though this doesn't work as intended.  Even when creating a new project with `dotnet new webApi` and putting the code in that guide in the `Main` function and trying to run it I get this error:\r\n\r\n```\r\nProgram.cs(13,37): error CS1061: 'IServiceProvider' does not contain a definition for 'CreateScope' and no extension method 'CreateScope' accepting a first argument of type 'IServiceProvider' could be found (are you missing a using directive or an assembly reference?)\r\n```\r\n\r\nThis seems like a pretty obvious issue that could be resolved.  Seems strange that this code in the migration guide doesn't work in a 2.0 project built right out of the box?  The `CreateScope` is simply not on the interface in question via `host.Services`."},{"Id":"6625670790","Type":"IssuesEvent","CreatedAt":"2017-09-22T16:17:34","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2212","RelatedDescription":"Closed issue \"RequireHttpsAttribute and post requests\" (#2212) at aspnet/Home","RelatedBody":"Hi,\r\n\r\nWhen adding the following code to redirect to ssl https urls\r\n`services.AddMvc(options => {\r\noptions.SslPort = 44389;\r\noptions.Filters.Add(new RequireHttpsAttribute());\r\n});`\r\n\r\nall my post requests return forbidden, get requests work fine thought. Am I missing something?"},{"Id":"6624880207","Type":"IssuesEvent","CreatedAt":"2017-09-22T13:32:56","Actor":"GHakopian","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2212","RelatedDescription":"Opened issue \"RequireHttpsAttribute and post requests\" (#2212) at aspnet/Home","RelatedBody":"Hi,\r\n\r\nWhen adding the following code to redirect to ssl https urls\r\nservices.AddMvc(options => {\r\n                options.SslPort = 44389;\r\n                options.Filters.Add(new RequireHttpsAttribute());\r\n            });\r\nall my post requests return forbidden, get requests work fine thought. Am I missing something?"},{"Id":"6623315056","Type":"IssuesEvent","CreatedAt":"2017-09-22T06:29:33","Actor":"rudeGit","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2211","RelatedDescription":"Opened issue \"Why does not HttpClientHandler throw an exception when adding only public portion client certificate?\" (#2211) at aspnet/Home","RelatedBody":"To attach a client certificate to the request one could write following code on the client side:\r\n\r\n        var cert = //TODO - load certificate\r\n        var requestHandler = new HttpClientHandler();\r\n        requestHandler.SslProtocols = SslProtocols.Tls12;\r\n        requestHandler.ClientCertificateOptions = ClientCertificateOption.Manual;\r\n        requestHandler.ClientCertificates.Add(cert);\r\n\r\n        HttpClient client = new HttpClient(requestHandler);\r\n\r\n        HttpResponseMessage response = client.GetAsync(\"https://www.example.com/api/values\").Result;\r\n        response.EnsureSuccessStatusCode();\r\n\r\nIn asp.net core 2.0 server side, one could write following code to extract the certificate (typically in a middleware component):\r\n\r\n        var cert = this.HttpContext.Connection.GetClientCertificateAsync().Result;\r\n\r\nThe above 'cert' variable will be non-null if client attached a certificate that has a private key in it (though private key portion is not transmitted to the server). However if the client attached only a public portion of the certificate to requestHandler.ClientCertificates.Add(cert) call, the server side will return null for the extracted certificate.\r\n\r\nI would expect the code on the client side to report an error because only a public portion of client certificate was attached. But it does not. Is there a way to force that error to make it obvious to the consumers of the library? Or am I missing something?"},{"Id":"6622674531","Type":"IssuesEvent","CreatedAt":"2017-09-22T01:35:03","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2210","RelatedDescription":"Closed issue \"Controller Json response hang, improper error handling.\" (#2210) at aspnet/Home","RelatedBody":"If a controller method returns a JsonResult and the object passed into the Json call self references, it causes a \"net::ERR_INCOMPLETE_CHUNKED_ENCODING\" error in chrome. (but not firefox).\r\n\r\nUsing the Microsoft.AspNet.Buffering \"UseResponseBuffering\" app configure method fixes the chunking issue by disabling chunked responses. Then the actual error, the recursive reference in the json object is revealed.\r\n\r\nThe error should be handled the same way for the chunked response."},{"Id":"6622572679","Type":"IssuesEvent","CreatedAt":"2017-09-22T00:48:49","Actor":"Shadetheartist","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2210","RelatedDescription":"Opened issue \"Controller Json response hang, improper error handling.\" (#2210) at aspnet/Home","RelatedBody":"If a controller method returns a JsonResult and the object passed into the Json call self references, it causes a \"net::ERR_INCOMPLETE_CHUNKED_ENCODING\" error in chrome. (but not firefox).\r\n\r\nUsing the Microsoft.AspNet.Buffering \"UseResponseBuffering\" app configure method fixes the chunking issue by disabling chunked responses. Then the actual error, the recursive reference in the json object is revealed.\r\n\r\nThe error should be handled the same way for the chunked response."},{"Id":"6620895783","Type":"IssuesEvent","CreatedAt":"2017-09-21T17:06:56","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/1319","RelatedDescription":"Closed issue \"Are perf counters available?\" (#1319) at aspnet/Home","RelatedBody":"Scenario: we performed load tests using VS 2015.\n\nOne cool thing with ASP.NET of old times, was that it registered perf counters on the server, which were included by default in load tests.\n\nSo you easily got key indicators such as request queue length, avg request wait time, avg request execution time, application restarts, etc.\n\nThis was mega-useful to diagnose all kinds of problems and have a better understanding of what happened on your server.\n\nOf course, now that `System.Web` is not even loaded, those counters are worthless. IIS does not seem to offer much help either.\n\nIs there any way to get a similar set of perf counters back for ASP.NET Core? Any script to register or something?\n\nIt is very valuable to be able to monitor the server health state.\n"},{"Id":"6620780493","Type":"IssuesEvent","CreatedAt":"2017-09-21T16:40:31","Actor":"natemcmaster","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2206","RelatedDescription":"Closed issue \"why web.config in the publish folder?\" (#2206) at aspnet/Home","RelatedBody":"- VS2017\r\n- asp.net core 2.0 project\r\n- publish to folder\r\nin bin\\xx\\netcoreapp2.0 no web.config, but bin\\xx\\PublishOutput has web.config, the content:\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <system.webServer>\r\n    <handlers>\r\n      <add name=\"aspNetCore\" path=\"*\" verb=\"*\" modules=\"AspNetCoreModule\" resourceType=\"Unspecified\" />\r\n    </handlers>\r\n    <aspNetCore processPath=\"dotnet\" arguments=\".\\xxx.dll\" stdoutLogEnabled=\"false\" stdoutLogFile=\".\\logs\\stdout\" />\r\n  </system.webServer>\r\n</configuration>\r\n<!--ProjectGuid: 9e4e704c-869f-41da-9668-d4ea1d44002d-->\r\n```\r\nI try remove web.config, all thing are work fine, is this a issue?"},{"Id":"6619423483","Type":"IssuesEvent","CreatedAt":"2017-09-21T12:11:59","Actor":"lorenz31","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2202","RelatedDescription":"Closed issue \"ASP.NET CORE Web API: Value are always null when doing HTTP Post requests.\" (#2202) at aspnet/Home","RelatedBody":"I'm experiencing a problem doing post requests via ASP.NET Core Web API. I'm a bit confused of the articles I read/found while Googling.\r\n\r\nSo here's my scenario:\r\n\r\nI'm trying to do a HTTP Post request to an api endpoint with a complex parameter\r\nExample:\r\n[HttpPost]\r\n[Route(\"add\")]\r\npublic async Task<IActionResult> PostStock([FromBody]Stock model)\r\n{\r\n       if (model != null)\r\n       {\r\n               var isStockAdded = await _inventorySvc.AddStockAsync(model);\r\n\r\n                if (isStockAdded)\r\n                    return Ok();\r\n                else\r\n                    return BadRequest();\r\n            }\r\n\r\n            return BadRequest();\r\n        }\r\n}\r\n\r\nMy problem is that every time I make a post request to this endpoint the model value(s) are always null even if there's the [FromBody] parameter attribute or not.\r\n\r\nIs this a bug in ASP.NET Core 2?"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6627282219","Type":"IssuesEvent","CreatedAt":"2017-09-23T00:32:33","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/932","RelatedDescription":"Opened issue \"Allow direct connect to the HubEndPoint without negotiation\" (#932) at aspnet/SignalR","RelatedBody":"We should be able to expose a model where everything is fully specified via configuration on both server and client that would avoid any negotiation and would just directly connect using the specified transport and protocol.\r\n\r\nThis includes:\r\n- Direct websocket connection without http negotiation for a connection id\r\n- Direct websocket connection + specific protocol which avoids hub protocol negotiation.\r\n\r\nRelated to #854  "},{"Id":"6627253276","Type":"PullRequestEvent","CreatedAt":"2017-09-23T00:13:22","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/931","RelatedDescription":"Merged pull request \"Adding JS tests that send and receive structural objects\" (#931) at aspnet/SignalR","RelatedBody":""},{"Id":"6626868090","Type":"PullRequestEvent","CreatedAt":"2017-09-22T21:30:20","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/931","RelatedDescription":"Opened pull request \"Adding JS tests that send and receive structural objects\" (#931) at aspnet/SignalR","RelatedBody":""},{"Id":"6626456862","Type":"PullRequestEvent","CreatedAt":"2017-09-22T19:38:41","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/930","RelatedDescription":"Opened pull request \"Exceptions thrown during writing should close the connection\" (#930) at aspnet/SignalR","RelatedBody":"We need to close the connection if there is an exception when writing to the transport on the server side. Currently if an exception happens it leaves the connection in an unsable state - after the exception no messages from the server will be sent to the client because the writing loop is terminated. Ignoring the message could cause hangs on the client side since we can fail while writing a completion message. In this case if the client is awaiting the invocation it will hang because the task will never be completed.\r\n\r\n\r\nFixes: #861 and #916"},{"Id":"6625263728","Type":"IssuesEvent","CreatedAt":"2017-09-22T14:49:39","Actor":"zigzag95","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/888","RelatedDescription":"Closed issue \"Jwt\" (#888) at aspnet/SignalR","RelatedBody":"Any sample for how to pass a Auth token while connecting. "},{"Id":"6624519572","Type":"IssuesEvent","CreatedAt":"2017-09-22T12:03:20","Actor":"NtFreX","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/929","RelatedDescription":"Closed issue \"When is the project going to target netstandard2.1\" (#929) at aspnet/SignalR","RelatedBody":"Why is the target at the moment still netstandard 2.0 when it will be released for netstandard2.1?\r\n\r\nI would like to take a look how I can implement an sql server backpane and the SqlDependecy class has only been added to netstandard2.1.\r\n\r\nBy the way: Is there any interesst in adding support for sql server as an backpane?"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6627292887","Type":"PullRequestEvent","CreatedAt":"2017-09-23T00:40:29","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6882","RelatedDescription":"Opened pull request \"Require attribute routing with [ApiController]\" (#6882) at aspnet/Mvc","RelatedBody":"Fixes #6870"},{"Id":"6626905129","Type":"IssuesEvent","CreatedAt":"2017-09-22T21:41:37","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/4920","RelatedDescription":"Closed issue \"Reevaluate try/catch in input formatters\" (#4920) at aspnet/Mvc","RelatedBody":"Right now we have a try/catch around input formatters to allow them to throw and have us treat it as a model state error. I think we're possibly swallowing more errors than we should here, and turning them into 400s instead of 500s.\n\nSee https://github.com/aspnet/Home/issues/1605#issuecomment-229158767\n\nThe root cause of this issue was a package mismatch, but it became a model state error instead.\n"},{"Id":"6626859736","Type":"PullRequestEvent","CreatedAt":"2017-09-22T21:27:49","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6881","RelatedDescription":"Opened pull request \"Undo a breaking change\" (#6881) at aspnet/Mvc","RelatedBody":"This change wasn't caught in my previous PR because the baselines hadn't been updated yet 😆 "},{"Id":"6626830734","Type":"IssuesEvent","CreatedAt":"2017-09-22T21:19:22","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6880","RelatedDescription":"Opened issue \"Remove [Obsolete] action result code\" (#6880) at aspnet/Mvc","RelatedBody":"We have obsolete overrides of `ActionResult.ExecuteResult(...)` that are unused by any of our other code and should be removed in a major release. \r\n\r\nThis isn't an API breaking change, but users might have called these methods, which will now no-op.\r\n```\r\nRedirectResult\r\nLocalRedirectResult\r\nRedirectToActionResult\r\nRedirectToPageResult\r\nRedirectToRouteResult\r\n```"},{"Id":"6626776933","Type":"PullRequestEvent","CreatedAt":"2017-09-22T21:04:08","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6879","RelatedDescription":"Merged pull request \"Update 2.0 baselines\" (#6879) at aspnet/Mvc","RelatedBody":""},{"Id":"6626759524","Type":"PullRequestEvent","CreatedAt":"2017-09-22T20:59:27","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6879","RelatedDescription":"Opened pull request \"Update 2.0 baselines\" (#6879) at aspnet/Mvc","RelatedBody":""},{"Id":"6626693976","Type":"IssuesEvent","CreatedAt":"2017-09-22T20:42:27","Actor":"ctorx","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6878","RelatedDescription":"Opened issue \"RemoteAttribute not creating correct URL when route contains an area and no explicit routes defined\" (#6878) at aspnet/Mvc","RelatedBody":"The RemoteAttribute.GetUrl() method is not returning the correct URL when an action lives inside of an area and no explicit route is defined in Startup.cs\r\n\r\nYou can see this if you only use attribute routing and decorate a view model property with the RemoteAttribute and specify values pointing to an Action within an Area.\r\n\r\nI attempted to debug using symbols that were available and was able to narrow the issue down to somewhere behind RouteCollection.GetVirtualPath() in Microsoft.AspNetCore.Routing.\r\n\r\nThe GetVirtualPath() method iterates all IRouters (in my case only a single Microsoft.AspNetCore.Mvc.Internal.AttributeRoute) and calls GetVirtualPath() using the provided VirtualPathContext, which in this case comes from a UrlHelper newed up in the RemoteAttribute.GetUrl().\r\n\r\nI've verified that the area name provided to the RemoteAttribute constructor is included in the Values property on VirtualPathContext.\r\n\r\nThe call to AttributeRoute.GetVirtualPath()  in this scenario is consistently returning null.\r\n\r\nI was unable to locate any public symbols for Microsoft.AspNetCore.Mvc.Internal.AttributeRoute so I could not debug further."},{"Id":"6626576511","Type":"IssuesEvent","CreatedAt":"2017-09-22T20:10:36","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6877","RelatedDescription":"Opened issue \"Improvements to Swagger generation\" (#6877) at aspnet/Mvc","RelatedBody":"This is a laundry list of gaps we have between the current swagger experience and the ideal experience. Basically what are all of the things you have to configure or provide manually.\r\n\r\n- [ ] Description/Title/Version - everything in `info` element\r\n- [ ] Host/Base-Path/Schemes\r\n- [ ] Tags - `tags` element\r\n- [ ] Security - `securityDefinintions` element\r\n- [ ] in operation - tags\r\n- [ ] In operation  - summary, operationid, description\r\n- [ ] in operation - consumes and produces are not realistic\r\n- [ ] in operation - security/scopes\r\n- [ ] in parameter - description\r\n- [ ] in parameter - look at collections and enums this does weird stuff"},{"Id":"6626185340","Type":"PullRequestEvent","CreatedAt":"2017-09-22T18:27:58","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6876","RelatedDescription":"Opened pull request \"Add MVC 2.0 baselines\" (#6876) at aspnet/Mvc","RelatedBody":""},{"Id":"6626115620","Type":"IssuesEvent","CreatedAt":"2017-09-22T18:10:35","Actor":"Tratcher","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6875","RelatedDescription":"Opened issue \"Zero Content-Length for static file on Ubuntu\" (#6875) at aspnet/Mvc","RelatedBody":"_From @rustamkulenov on September 22, 2017 8:29_\n\nI've developed SPA application (ASP core,MVC,Angular) on Windows but can not host it on Linux. When I reload webpage in browser by F5 Kestrel prints out error and webbrowser receives HTTP code 500. This happens every second reload.\r\n\r\n> fail: Microsoft.AspNetCore.Server.Kestrel[13]\r\n>       Connection id \"0HL81HU49MSPA\", Request id \"0HL81HU49MSPA:00000002\": An unhandled exception was thrown by the application.\r\n> System.InvalidOperationException: Response Content-Length mismatch: too few bytes written (0 of 42).\r\n \r\n**Environment:**\r\n\r\n`#dotnet --info`\r\n> .NET Command Line Tools (2.0.0)\r\n> \r\n> Product Information:\r\n>  Version:            2.0.0\r\n>  Commit SHA-1 hash:  cdcd1928c9\r\n> \r\n> Runtime Environment:\r\n>  OS Name:     ubuntu\r\n>  OS Version:  16.04\r\n>  OS Platform: Linux\r\n>  RID:         ubuntu.16.04-x64\r\n>  Base Path:   /usr/share/dotnet/sdk/2.0.0/\r\n> \r\n> Microsoft .NET Core Shared Framework Host\r\n> \r\n>   Version  : 2.0.0\r\n>   Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n**Steps to reproduce:**\r\n1) Create new MVC application:\r\n`#dotnet new mvc`\r\n2) Place file named 1.txt with any content into wwwroot\r\n3) Change Home/Index controller method to:\r\n\r\n> public IActionResult Index()\r\n>{\r\n>  return  File(\"~/1.txt\", \"text/plain\");\r\n>}\r\n\r\n4) `#dotnet run`\r\n\r\nNow, If you try to open localhost:5000 browser will show content of the 1.txt, if you press F5 it'll show error 500. Press F5 again and it'll display content of 1.txt again, etc...\r\n\r\nI tried to change Startup.cs to (as stated in #1289  ):\r\n\r\n> app.UseStaticFiles(new StaticFileOptions(){\r\n>   OnPrepareResponse=context=>{\r\n>     context.Context.Response.Headers.Remove(\"Content-Length\");\r\n>   }\r\n> });\r\n\r\n, but this does not help.\r\n\r\nIf I set breakpoint in Home/Index controller method it is hit every time (i.e. on every reload). But it returns content-length=0 on every even reload. On every odd reload it returns correct value.\n\n_Copied from original issue: aspnet/KestrelHttpServer#2082_"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6626183691","Type":"IssuesEvent","CreatedAt":"2017-09-22T18:27:34","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1401","RelatedDescription":"Closed issue \"AddIdentity should set DefaultScheme and DefaultChallengeScheme only\" (#1401) at aspnet/Identity","RelatedBody":"There's a bug because we added DefaultScheme but didn't update identity to set the default, instead it sets the individual schemes which ends up making setting the default less useful than it could be:\r\n\r\nWe should update AddIdentity to set the DefaultScheme + DefaultChallengeScheme instead"},{"Id":"6626170014","Type":"IssuesEvent","CreatedAt":"2017-09-22T18:24:19","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1395","RelatedDescription":"Closed issue \"Port ChangePhoneNumber fix to 2.0.1\" (#1395) at aspnet/Identity","RelatedBody":"Port https://github.com/aspnet/Identity/issues/1388\r\n\r\nChange: b7d5a461d4234f0522a01e5de3c14b7a05dc019a"},{"Id":"6626169289","Type":"IssuesEvent","CreatedAt":"2017-09-22T18:24:10","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1396","RelatedDescription":"Closed issue \"Port AddEntityFrameworkStores fix to 2.0.1\" (#1396) at aspnet/Identity","RelatedBody":"Port fix for https://github.com/aspnet/Identity/issues/1373\r\n\r\nb865d5878623077eeb715e600d75fa9c24dbb5a1"},{"Id":"6620469682","Type":"IssuesEvent","CreatedAt":"2017-09-21T15:38:34","Actor":"NinoFloris","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1440","RelatedDescription":"Opened issue \"Why isn't the normalized name used when adding roles to the claimsidentity?\" (#1440) at aspnet/Identity","RelatedBody":"https://github.com/aspnet/Identity/blob/eb3ff7fc32dbfff65a1ba6dfdca16487e0f6fc41/src/Microsoft.Extensions.Identity.Core/UserClaimsPrincipalFactory.cs#L143\r\n\r\nAs `ClaimsPrincipal.IsInRole()` calls down to `ClaimsIdentity.HasClaim()` which uses an Ordinal comparison on the value it seems logical to save the normalized name for the role. Or if it's important to be able to display the original name to return a version of ClaimsIdentity that has an overridden `HasClaim` method with an OrdinalIgnoreCase comparison, perhaps just for the default role type."},{"Id":"6616480418","Type":"IssuesEvent","CreatedAt":"2017-09-20T20:23:21","Actor":"NinoFloris","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1439","RelatedDescription":"Opened issue \"Why are all the Get...Store functions private or don't check Supports...Store\" (#1439) at aspnet/Identity","RelatedBody":"Flabbergasted by this, as to disable a piece of functionality on a manager now requires much more overrides compared to overriding just the one method and throwing unconditionally.\r\n\r\nI see more of these flaws in places where we'd like to take away or slightly remold functionality. Take for instance the idea of the feature interfaces for stores. The stores are great as we don't want to fully create the stores functionality ourselves and we like the idea of using interfaces to detect which features are supported. Problem with it though is the combination of those two are very hard on library users as we can't take away an interface once implemented. Which as they're all already implemented on all the supplied stores (base and inherits) is a problem... Now we have to choose, do we want reusability or a nice fit for our project's supported set.\r\n\r\nExample below to disable user claims as we ignore that entity in the dbcontext modelbuilder (we have our own solution for it):\r\n![screen shot 2017-09-20 at 22 15 05](https://user-images.githubusercontent.com/4218809/30665458-5a751448-9e51-11e7-88bc-1d7f3121b31f.png)\r\n"},{"Id":"6616176089","Type":"PullRequestEvent","CreatedAt":"2017-09-20T19:10:48","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1137","RelatedDescription":"Closed pull request \"Fixed see reference\" (#1137) at aspnet/Identity","RelatedBody":"<see name=\"SignInResult\"/> -> <see cref=\"SignInResult\"/>"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6627182759","Type":"PullRequestEvent","CreatedAt":"2017-09-22T23:35:13","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2077","RelatedDescription":"Merged pull request \"HTTP/2: close connection with PROTOCOL_ERROR when a stream depends on itself\" (#2077) at aspnet/KestrelHttpServer","RelatedBody":"http://httpwg.org/specs/rfc7540.html#rfc.section.5.3.1\r\n\r\n> A stream cannot depend on itself. An endpoint MUST treat this as a stream error (Section 5.4.2) of type PROTOCOL_ERROR."},{"Id":"6626115762","Type":"IssuesEvent","CreatedAt":"2017-09-22T18:10:37","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2082","RelatedDescription":"Closed issue \"Zero Content-Length for static file on Ubuntu\" (#2082) at aspnet/KestrelHttpServer","RelatedBody":"I've developed SPA application (ASP core,MVC,Angular) on Windows but can not host it on Linux. When I reload webpage in browser by F5 Kestrel prints out error and webbrowser receives HTTP code 500. This happens every second reload.\r\n\r\n> fail: Microsoft.AspNetCore.Server.Kestrel[13]\r\n>       Connection id \"0HL81HU49MSPA\", Request id \"0HL81HU49MSPA:00000002\": An unhandled exception was thrown by the application.\r\n> System.InvalidOperationException: Response Content-Length mismatch: too few bytes written (0 of 42).\r\n \r\n**Environment:**\r\n\r\n`#dotnet --info`\r\n> .NET Command Line Tools (2.0.0)\r\n> \r\n> Product Information:\r\n>  Version:            2.0.0\r\n>  Commit SHA-1 hash:  cdcd1928c9\r\n> \r\n> Runtime Environment:\r\n>  OS Name:     ubuntu\r\n>  OS Version:  16.04\r\n>  OS Platform: Linux\r\n>  RID:         ubuntu.16.04-x64\r\n>  Base Path:   /usr/share/dotnet/sdk/2.0.0/\r\n> \r\n> Microsoft .NET Core Shared Framework Host\r\n> \r\n>   Version  : 2.0.0\r\n>   Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n**Steps to reproduce:**\r\n1) Create new MVC application:\r\n`#dotnet new mvc`\r\n2) Place file named 1.txt with any content into wwwroot\r\n3) Change Home/Index controller method to:\r\n\r\n> public IActionResult Index()\r\n>{\r\n>  return  File(\"~/1.txt\", \"text/plain\");\r\n>}\r\n\r\n4) `#dotnet run`\r\n\r\nNow, If you try to open localhost:5000 browser will show content of the 1.txt, if you press F5 it'll show error 500. Press F5 again and it'll display content of 1.txt again, etc...\r\n\r\nI tried to change Startup.cs to (as stated in #1289  ):\r\n\r\n> app.UseStaticFiles(new StaticFileOptions(){\r\n>   OnPrepareResponse=context=>{\r\n>     context.Context.Response.Headers.Remove(\"Content-Length\");\r\n>   }\r\n> });\r\n\r\n, but this does not help.\r\n\r\nIf I set breakpoint in Home/Index controller method it is hit every time (i.e. on every reload). But it returns content-length=0 on every even reload. On every odd reload it returns correct value."},{"Id":"6623709929","Type":"IssuesEvent","CreatedAt":"2017-09-22T08:29:36","Actor":"rustamkulenov","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2082","RelatedDescription":"Opened issue \"Zero Content-Length for static file on Ubuntu\" (#2082) at aspnet/KestrelHttpServer","RelatedBody":"I've developed SPA application (ASP core,MVC,Angular) on Windows but can not host it on Linux. When I reload webpage in browser by F5 Kestrel prints out error and webbrowser receives HTTP code 500. This happens every second reload.\r\n\r\n> fail: Microsoft.AspNetCore.Server.Kestrel[13]\r\n>       Connection id \"0HL81HU49MSPA\", Request id \"0HL81HU49MSPA:00000002\": An unhandled exception was thrown by the application.\r\n> System.InvalidOperationException: Response Content-Length mismatch: too few bytes written (0 of 42).\r\n \r\n**Environment:**\r\n\r\n`#dotnet --info`\r\n> .NET Command Line Tools (2.0.0)\r\n> \r\n> Product Information:\r\n>  Version:            2.0.0\r\n>  Commit SHA-1 hash:  cdcd1928c9\r\n> \r\n> Runtime Environment:\r\n>  OS Name:     ubuntu\r\n>  OS Version:  16.04\r\n>  OS Platform: Linux\r\n>  RID:         ubuntu.16.04-x64\r\n>  Base Path:   /usr/share/dotnet/sdk/2.0.0/\r\n> \r\n> Microsoft .NET Core Shared Framework Host\r\n> \r\n>   Version  : 2.0.0\r\n>   Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n**Steps to reproduce:**\r\n1) Create new MVC application:\r\n`#dotnet new mvc`\r\n2) Place file named 1.txt with any content into wwwroot\r\n3) Change Home/Index controller method to:\r\n\r\n> public IActionResult Index()\r\n>{\r\n>  return  File(\"~/1.txt\", \"text/plain\");\r\n>}\r\n\r\n4) `#dotnet run`\r\n\r\nNow, If you try to open localhost:5000 browser will show content of the 1.txt, if you press F5 it'll show error 500. Press F5 again and it'll display content of 1.txt again, etc...\r\n\r\nI tried to change Startup.cs to (as stated in #1289  ):\r\n\r\n> app.UseStaticFiles(new StaticFileOptions(){\r\n>   OnPrepareResponse=context=>{\r\n>     context.Context.Response.Headers.Remove(\"Content-Length\");\r\n>   }\r\n> });\r\n\r\n, but this does not help.\r\n\r\nIf I set breakpoint in Home/Index controller method it is hit every time (i.e. on every reload). But it returns content-length=0 on every even reload. On every odd reload it returns correct value."},{"Id":"6622392524","Type":"IssuesEvent","CreatedAt":"2017-09-21T23:31:08","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2048","RelatedDescription":"Closed issue \"ConnectionResetException \" (#2048) at aspnet/KestrelHttpServer","RelatedBody":"**Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions.Internal.ConnectionResetException handled at System.Net.WebSockets.ManagedWebSocket+d__61.MoveNext** \r\n\r\nI'm constantly getting this exception ReceiveAsyncPrivate method. Basically all websocket connections eventually fail due to this exception after some minutes. I'm hosting on aspnetcore 2.0 on Azure WebApp. "},{"Id":"6622274344","Type":"IssuesEvent","CreatedAt":"2017-09-21T22:47:18","Actor":"muratg","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2058","RelatedDescription":"Closed issue \"Performance issue with .net core\" (#2058) at aspnet/KestrelHttpServer","RelatedBody":"_From @chintan3100 on September 5, 2017 8:39_\n\nI am downloading 400 MB file on local machine with 7 MB/Second (.net core 2.0) same code run with .net framework 4.6 download speed 100 MB/Second.\r\n\r\n  public IActionResult DownloadDocument(Guid documentUniqueId)\r\n        {\r\n            var bytes = System.IO.File.OpenRead(@\"D:\\home\\site\\wwwroot\\file\\Organizer01_2017-09-03 (14) (3).zip\");\r\n            return File(bytes, \"application/octet-stream\");\r\n\r\n}\r\n File size 400 MB .  API on local system. FIle on local system\r\n\n\n_Copied from original issue: aspnet/Home#2186_"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6627288579","Type":"PullRequestEvent","CreatedAt":"2017-09-23T00:37:12","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/pull/1695","RelatedDescription":"Closed pull request \"Added support for minimized boolean bound tag helper attributes\" (#1695) at aspnet/Razor","RelatedBody":"#431 \r\n\r\nAdded support for both `bool` and `Dictionary<*, bool>` types.\r\nHave not added support for `bool?`."},{"Id":"6626677420","Type":"IssuesEvent","CreatedAt":"2017-09-22T20:37:55","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1698","RelatedDescription":"Opened issue \"Add unit tests for DefaultRazorIndentationFactsService\" (#1698) at aspnet/Razor","RelatedBody":"https://github.com/aspnet/Razor/pull/1697 adds some unit tests but we need a lot more coverage."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6561160159","Type":"IssuesEvent","CreatedAt":"2017-09-07T12:16:43","Actor":"SteveSandersonMS","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/866","RelatedDescription":"Closed issue \"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)\" (#866) at aspnet/Templates","RelatedBody":"After updating angular to 4.3.6, an internal server error begins to throw \"NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor.\"\r\n\r\nSteps to reproduce:\r\n1. cmd to c:\\\r\n2. dotnet --version \r\n_2.0.0_\r\n3. mkdir dummy\r\n4. cd dummy\r\n5. dotnet new angular\r\n6. dotnet restore\r\n7. npm install\r\n8. dotnet run (prove it works)\r\n8a. ctrl+c to stop the server/build\r\n9. update all @angular from \"4.2.5\" to \"4.3.6\"\r\n10. npm update\r\n11. dotnet run\r\n...You should now crash... (see below)\r\n12. change 4.3.6 back to 4.2.5 and \r\nrepeat 10 and 11.\r\nYou should now work again.\r\n\r\nPlease let me know i there's anything else i can provide to help. Thank you!\r\n\r\n`NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]).\r\n Error: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]). at Error (native) at syntaxError (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:37092:34) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getDependenciesMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51159:35) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getTypeMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51027:26) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getInjectableMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51013:21) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getProviderMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51304:40) at C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51233:49 at Array.forEach (native) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getProvidersMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51193:19) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getNgModuleMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:50848:50)\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance+<InvokeExportAsync>d__7.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance+<InvokeExportAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.SpaServices.Prerendering.PrerenderTagHelper+<ProcessAsync>d__29.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner+<RunAsync>d__0.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nAspNetCore._Views_Home_Index_cshtml+<ExecuteAsync>d__12.MoveNext() in Index.cshtml\r\n+\r\n    ViewData[\"Title\"] = \"Home Page\";\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageCoreAsync>d__16.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__21.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()`\r\n"},{"Id":"6560156021","Type":"IssuesEvent","CreatedAt":"2017-09-07T08:13:18","Actor":"marcusien","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/867","RelatedDescription":"Opened issue \"Cannot force version of the template to install\" (#867) at aspnet/Templates","RelatedBody":"Hi,\r\n\r\nMaybe there's something not documented but I'd like to install a version of my own template in a specific version.\r\n\r\nWe are creating our own template for our project and we create prerelease packages for our template using semver. The problem is with \"dotnet new -i\" command, we cannot specify a specific version"},{"Id":"6532477866","Type":"IssuesEvent","CreatedAt":"2017-08-30T23:19:06","Actor":"andyg8180","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/866","RelatedDescription":"Opened issue \"Cannot update @angular to 4.3.0+ (trying to update to 4.3.6)\" (#866) at aspnet/Templates","RelatedBody":"After updating angular to 4.3.6, an internal server error begins to throw \"NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor.\"\r\n\r\nSteps to reproduce:\r\n1. cmd to c:\\\r\n2. dotnet --version \r\n_2.0.0_\r\n3. mkdir dummy\r\n4. cd dummy\r\n5. dotnet new angular\r\n6. dotnet restore\r\n7. npm install\r\n8. dotnet run (prove it works)\r\n8a. ctrl+c to stop the server/build\r\n9. update all @angular from \"4.2.5\" to \"4.3.6\"\r\n10. npm update\r\n11. dotnet run\r\n...You should now crash... (see below)\r\n12. change 4.3.6 back to 4.2.5 and \r\nrepeat 10 and 11.\r\nYou should now work again.\r\n\r\nPlease let me know i there's anything else i can provide to help. Thank you!\r\n\r\n`NodeInvocationException: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]).\r\n Error: Can't resolve all parameters for HttpXsrfCookieExtractor: (?, [object Object], [object Object]). at Error (native) at syntaxError (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:37092:34) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getDependenciesMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51159:35) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getTypeMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51027:26) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getInjectableMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51013:21) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getProviderMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51304:40) at C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51233:49 at Array.forEach (native) at CompileMetadataResolver.module.exports.CompileMetadataResolver._getProvidersMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:51193:19) at CompileMetadataResolver.module.exports.CompileMetadataResolver.getNgModuleMetadata (C:\\toolkit-test\\ClientApp\\dist\\vendor.js:50848:50)\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.HttpNodeInstance+<InvokeExportAsync>d__7.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.HostingModels.OutOfProcessNodeInstance+<InvokeExportAsync>d__13.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.NodeServices.NodeServicesImpl+<InvokeExportWithPossibleRetryAsync>d__10.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.SpaServices.Prerendering.PrerenderTagHelper+<ProcessAsync>d__29.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner+<RunAsync>d__0.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nAspNetCore._Views_Home_Index_cshtml+<ExecuteAsync>d__12.MoveNext() in Index.cshtml\r\n+\r\n    ViewData[\"Title\"] = \"Home Page\";\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageCoreAsync>d__16.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderPageAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nSystem.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\nMicrosoft.AspNetCore.Mvc.Razor.RazorView+<RenderAsync>d__14.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor+<ExecuteAsync>d__21.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.ViewResult+<ExecuteResultAsync>d__26.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeResultAsync>d__19.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResultFilterAsync>d__24.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.SpaServices.Webpack.ConditionalProxyMiddleware+<Invoke>d__6.MoveNext()\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nSystem.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nMicrosoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()`\r\n"},{"Id":"6503882095","Type":"IssuesEvent","CreatedAt":"2017-08-23T18:36:38","Actor":"pejta2207","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/865","RelatedDescription":"Opened issue \"Account/ConfirmEmail - NullReferenceException in Error.cshtml when providing incorrect token\" (#865) at aspnet/Templates","RelatedBody":"**Description**\r\nThe issue is related to Individual Accounts Authentication template. It seems that providing incorrect authentication code for ConfirmEmail action in AccountController (e.g. token which already expired) should result in displaying error page. However, Razor exception is thrown while generating the default error view:\r\n\r\n```\r\nNullReferenceException: Object reference not set to an instance of an object.\r\nAspNetCore._Views_Shared_Error_cshtml+<ExecuteAsync>d__0.MoveNext() in Error.cshtml, line 9\r\n```\r\n\r\n**Steps to reproduce**\r\n1. Create new project with Individual Accounts Authentication template.\r\n2. Run the application.\r\n3. Register any user via the registration form.\r\n4. Retrieve UserId of the registered user.\r\n5. Try to confirm email with incorrect code, e.g. http://localhost:PORT/Account/ConfirmEmail?UserId={UserId}&Code=INVALID_CODE\r\n\r\n**Further technical details**\r\nIt's probably caused by the last line in ConfirmEmail action in AccountController:\r\n```\r\nvar result = await _userManager.ConfirmEmailAsync(user, code);\r\nreturn View(result.Succeeded ? \"ConfirmEmail\" : \"Error\");\r\n```\r\n\r\nWhen invalid token is passed, Error view is not provided with `ErrorViewModel`. When `Model` is accessed in 9th line of Error.cshtml (`@if (Model.ShowRequestId)`), it throws NullReferenceException."},{"Id":"6501007996","Type":"IssuesEvent","CreatedAt":"2017-08-23T07:54:07","Actor":"Dave3of5","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Templates/issues/864","RelatedDescription":"Opened issue \"Authentication on SPA apps\" (#864) at aspnet/Templates","RelatedBody":"There seems to be no template for authentication on the SPA templates.\r\n\r\nI've been looking up various blog post and third party articles on how to add Jwt Authentication but they are scattered and most are for dotnet core 1.1. It would be nice if there was a template that showed the \"correct\" way to do this in dotnet core 2.0."}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6626869082","Type":"IssuesEvent","CreatedAt":"2017-09-22T21:30:36","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/431","RelatedDescription":"Closed issue \"Having multiple sites with the same IIS Express launch url causes VS to launch the wrong site\" (#431) at aspnet/Tooling","RelatedBody":"The Security repo has three sample sites with the same launch url. (It needs to be the same because that url is registered with a remote auth server).  This can cause VS / IIS Express to launch the wrong site.\n"},{"Id":"6598999142","Type":"IssuesEvent","CreatedAt":"2017-09-16T14:09:01","Actor":"ctopher31","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1059","RelatedDescription":"Closed issue \"Turn off file nesting in Visual Studio 2017\" (#1059) at aspnet/Tooling","RelatedBody":"To report new issues, use the [Report a Problem](https://developercommunity.visualstudio.com/) tool. The GitHub Issue Tracker for the aspnet/Tooling repo is now deprecated in favor of the Report a Problem tool.\r\n\r\nIf you encounter a problem with Visual Studio, we want to know about it so that we can diagnose and fix it. By using the Report a Problem tool, you can collect detailed information about the problem, and send it to Microsoft with just a few button clicks. See [here](https://docs.microsoft.com/en-us/visualstudio/ide/talk-to-us) for more details. \r\n"},{"Id":"6598993466","Type":"IssuesEvent","CreatedAt":"2017-09-16T14:04:41","Actor":"ctopher31","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1059","RelatedDescription":"Opened issue \"How do I make file nesting for js broken again. File nesting is really lame. I want my files structured the way I want them. If some lame ass wants nesting let it be an opt-in.\" (#1059) at aspnet/Tooling","RelatedBody":"To report new issues, use the [Report a Problem](https://developercommunity.visualstudio.com/) tool. The GitHub Issue Tracker for the aspnet/Tooling repo is now deprecated in favor of the Report a Problem tool.\r\n\r\nIf you encounter a problem with Visual Studio, we want to know about it so that we can diagnose and fix it. By using the Report a Problem tool, you can collect detailed information about the problem, and send it to Microsoft with just a few button clicks. See [here](https://docs.microsoft.com/en-us/visualstudio/ide/talk-to-us) for more details. \r\n"},{"Id":"6588109038","Type":"IssuesEvent","CreatedAt":"2017-09-14T00:50:29","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1058","RelatedDescription":"Closed issue \"Views in class libraries removed from embedded resources under certain circumstances\" (#1058) at aspnet/Tooling","RelatedBody":"I have a test repo which should hopefully demonstrate this problem, and I hope this is the correct repo for the issue.\r\n\r\nhttps://github.com/svallis/precompilation-classlib\r\n\r\nIf you clone and open this solution and perform the following, the issue should be clear. First, the expected results is what happens when adding views to `app`:\r\n\r\n- Go to `app1\\Views\\Home` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `app1` remains unchanged\r\n\r\nNow perform the same process on `lib1`:\r\n\r\n- Go to `lib1\\Views\\Shared` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `lib1` has the following added to it\r\n\r\n```\r\n<ItemGroup>\r\n    <EmbeddedResource Remove=\"Views\\Shared\\Test - Copy.cshtml\" />\r\n</ItemGroup>\r\n```\r\n\r\nAs you can imagine this is highly frustrating during development, and we're constantly running into it while developing features within a library. I don't know if it's an outright bug, or whether we could improve the existing rules in the `.csproj` for the library. Whatever changes are made to the library project file need to preserve existing functionality though, so that views are not included in the publish output and are embedded in the assembly. This allows everything to work both during development and after publishing with precompiled views."},{"Id":"6584205887","Type":"IssuesEvent","CreatedAt":"2017-09-13T09:20:26","Actor":"svallis","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1058","RelatedDescription":"Opened issue \"Views in class libraries removed from embedded resources under certain circumstances\" (#1058) at aspnet/Tooling","RelatedBody":"I have a test repo which should hopefully demonstrate this problem, and I hope this is the correct repo for the issue.\r\n\r\nhttps://github.com/svallis/precompilation-classlib\r\n\r\nIf you clone and open this solution and perform the following, the issue should be clear. First, the expected results is what happens when adding views to `app`:\r\n\r\n- Go to `app1\\Views\\Home` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `app1` remains unchanged\r\n\r\nNow perform the same process on `lib1`:\r\n\r\n- Go to `lib1\\Views\\Shared` and press SHIFT+F2 and create `Test.cshtml`\r\n- Copy and paste the new file to end up with `Test - Copy.cshtml`\r\n- Build the solution\r\n- The `.csproj` file for `lib1` has the following added to it\r\n\r\n```\r\n<ItemGroup>\r\n    <EmbeddedResource Remove=\"Views\\Shared\\Test - Copy.cshtml\" />\r\n</ItemGroup>\r\n```\r\n\r\nAs you can imagine this is highly frustrating during development, and we're constantly running into it while developing features within a library. I don't know if it's an outright bug, or whether we could improve the existing rules in the `.csproj` for the library. Whatever changes are made to the library project file need to preserve existing functionality though, so that views are not included in the publish output and are embedded in the assembly. This allows everything to work both during development and after publishing with precompiled views."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6585749309","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:57:15","Actor":"davidfowl","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Closed issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."},{"Id":"6585739204","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:55:30","Actor":"jsdmitry","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Opened issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."},{"Id":"6504000070","Type":"IssuesEvent","CreatedAt":"2017-08-23T19:03:38","Actor":"jbagga","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/269","RelatedDescription":"Opened issue \"ExpandoObjectAdapter does not assume case insensitivity\" (#269) at aspnet/Announcements","RelatedBody":"When applying a json patch to `ExpandoObject`s, case insensitive search will not be used to match the path segment to the object's dictionary keys. Instead, the path segment will be resolved using the `NamingStrategy` defined in the `IContractResolver`.\r\n\r\nAddresses https://github.com/aspnet/JsonPatch/issues/102\r\n\r\nSee https://github.com/aspnet/JsonPatch/issues/103 for discussion\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"906146139933638658","CreatedAt":"2017-09-08T13:24:09+00:00","UserScreenname":"aspnet","Text":"Getting Started with Windows Containers https://t.co/8twiZLlB5H","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":50,"FavoriteCount":26,"RawContent":null},{"Id":"897126323298209792","CreatedAt":"2017-08-14T16:02:37+00:00","UserScreenname":"aspnet","Text":"Announcing ASPNet Core 2.0 - https://t.co/5RTzwS9Ym2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":193,"FavoriteCount":158,"RawContent":null}]}},"RunOn":"2017-09-23T05:30:08.568427Z","RunDurationInMilliseconds":7335}