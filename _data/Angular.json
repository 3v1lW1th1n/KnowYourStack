{"Data":{"Angular-Issues":{"Issues":[{"Id":"592240681","IsPullRequest":true,"CreatedAt":"2020-04-01T22:27:01","Actor":"josephperrott","Number":"36384","RawContent":null,"Title":"update pullapprove config to better handle global approvals","State":"open","Body":"Beginning this this change, global approvals will now require the approver\r\nto include `Reviewed-for: global-approvers`, and a docs global approval\r\nrequires `Reviewed-for: global-docs-approvers`.\r\n\r\nHistorically, providing a review by any member of the global reviewer\r\ngroups would automatically be considered a global review.  This change\r\nenforces that global approval should be an intentional, explicit action.\r\n\r\nThe global-approvers and global-docs-approvers group will not be\r\nrequested as reviews by pullapprove.","Url":"https://github.com/angular/angular/pull/36384","RelatedDescription":"Open PR \"update pullapprove config to better handle global approvals\" (#36384)"},{"Id":"592209231","IsPullRequest":true,"CreatedAt":"2020-04-01T22:25:59","Actor":"jbogarthyde","Number":"36383","RawContent":null,"Title":"Update and edit web-worker page","State":"closed","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nPrevious attempt got munged when merged (https://github.com/angular/angular/pull/36026)\r\n\r\nIssue Number:  https://angular-team.atlassian.net/browse/DOCS-777\r\n\r\n\r\n## What is the new behavior?\r\nCorrects previously approved content of https://angular.io/guide/web-worker\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n ","Url":"https://github.com/angular/angular/pull/36383","RelatedDescription":"Closed or merged PR \"Update and edit web-worker page\" (#36383)"},{"Id":"591922607","IsPullRequest":true,"CreatedAt":"2020-04-01T20:32:44","Actor":"gkalpak","Number":"36370","RawContent":null,"Title":"fix(ngcc): allow ngcc configuration to match pre-release versions of packages","State":"closed","Body":"Ngcc supports providing a project-level configuration to affect how certain dependencies are processed and also has a built-in fallback configuration for some unmaintained packages. Each entry in these configurations could be scoped to specific versions of a package by providing a version range. If no version range is provided for a package, it defaults to `*` (with the intention of matching any version).\r\n\r\nPreviously, the installed version of a package was tested against the version range using the [semver][1] package's `satisfies()` function with the default options. By default, `satisfies()` does not match pre-releases (see [here][2] for more details on reasoning). While this makes sense when determining what version of a dependency to install (trying to avoid unexpected breaking changes), it is not desired in the case of ngcc.\r\n\r\nThis commit fixes it by explicitly specifying that pre-release versions should be matched normally.\r\n\r\n##\r\nThis is needed for angular/ngcc-validation#1029.\r\n\r\n[1]: https://www.npmjs.com/package/semver\r\n[2]: https://github.com/npm/node-semver#prerelease-tags\r\n","Url":"https://github.com/angular/angular/pull/36370","RelatedDescription":"Closed or merged PR \"fix(ngcc): allow ngcc configuration to match pre-release versions of packages\" (#36370)"},{"Id":"591399661","IsPullRequest":false,"CreatedAt":"2020-04-01T20:31:51","Actor":"aresn","Number":"36358","RawContent":null,"Title":"update @angular/platform-server dependency xhr2 to 0.2.0","State":"closed","Body":"@angular/platform-server is still depending on \"xhr2\": \"^0.1.4\". This version of xhr2 is using the depreciated \"new Buffer()\". Please update this dependency to \"0.2.0\". The only difference between these two versions is the use of \"Buffer.from()\" instead of \"new Buffer()\"\r\n ","Url":"https://github.com/angular/angular/issues/36358","RelatedDescription":"Closed issue \"update @angular/platform-server dependency xhr2 to 0.2.0\" (#36358)"},{"Id":"591848986","IsPullRequest":true,"CreatedAt":"2020-04-01T20:31:50","Actor":"alan-agius4","Number":"36366","RawContent":null,"Title":"fix(platform-server): update `xhr2` dependency","State":"closed","Body":"Previous versions of xhr2 used the depreciated \"new Buffer()\".\r\n\r\nCloses #36358\r\n","Url":"https://github.com/angular/angular/pull/36366","RelatedDescription":"Closed or merged PR \"fix(platform-server): update `xhr2` dependency\" (#36366)"},{"Id":"592130727","IsPullRequest":true,"CreatedAt":"2020-04-01T20:22:32","Actor":"atscott","Number":"36380","RawContent":null,"Title":"build: update package deps to angular 9.1","State":"closed","Body":"draft, trying to debug CI failures on https://github.com/angular/angular/pull/36329 to see if just updating to 9.1 causes memory issues.","Url":"https://github.com/angular/angular/pull/36380","RelatedDescription":"Closed or merged PR \"build: update package deps to angular 9.1\" (#36380)"},{"Id":"592153895","IsPullRequest":true,"CreatedAt":"2020-04-01T20:14:57","Actor":"kara","Number":"36382","RawContent":null,"Title":"docs: update ng-conf announcement to remove livestream link","State":"closed","Body":"Since the livestream for ng-conf is not public this year,\r\n(and is only available to ng-conf attendees), we are\r\nremoving the link from the angular.io homepage.\r\n\r\nInstead, we are now pointing to the ng-conf homepage for\r\nmore information.\r\n","Url":"https://github.com/angular/angular/pull/36382","RelatedDescription":"Closed or merged PR \"docs: update ng-conf announcement to remove livestream link\" (#36382)"},{"Id":"592150465","IsPullRequest":true,"CreatedAt":"2020-04-01T19:27:26","Actor":"crisbeto","Number":"36381","RawContent":null,"Title":"fix(core): user errors during creation masked by framework errors","State":"open","Body":"When we render a view for the first time, we only set the `firstCreatePass` flag on the `TView` after the template function has run. The problem is that if an error is thrown during the first template run, the flag will never be reset so we'll keep executing as if it's the first pass and we'll eventually hit a framework assertion somewhere which masks the user's error. These changes set the flag again after everything is done so that we don't re-run the creation logic again.\r\n\r\nFixes #31221.\r\n","Url":"https://github.com/angular/angular/pull/36381","RelatedDescription":"Open PR \"fix(core): user errors during creation masked by framework errors\" (#36381)"},{"Id":"592096192","IsPullRequest":true,"CreatedAt":"2020-04-01T17:52:19","Actor":"kapunahelewong","Number":"36379","RawContent":null,"Title":"docs: add doc about running docs locally","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\nAdds step-by-step instructions on running docs locally\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n\r\nThe location in the nav is not final. It will depend on the forthcoming Contributing section.","Url":"https://github.com/angular/angular/pull/36379","RelatedDescription":"Open PR \"docs: add doc about running docs locally\" (#36379)"},{"Id":"592084127","IsPullRequest":false,"CreatedAt":"2020-04-01T17:32:19","Actor":"scriby","Number":"36378","RawContent":null,"Title":"Null pointer exception in transition_animation_engine.ts","State":"open","Body":"# üêû bug report\r\n\r\n### Affected Package\r\n\r\nThe issue is caused by package @angular/animations\r\n\r\n### Is this a regression?\r\n\r\nI'm not sure. If so, it has been around a while.\r\n\r\n### Description\r\n\r\nI have a component that is able to trigger a null pointer exception on https://github.com/angular/angular/blob/08348fc2e8b48d58a30063b0b5b03d21158a315b/packages/animations/browser/src/render/transition_animation_engine.ts#L376. It seems that the element state is not in the map!\r\n\r\nThe end result is that an element gets orphaned in the DOM when it is supposed to be removed using an *ngIf.\r\n\r\nI hacked up the code to do a silent return if the element state is not present and the problem went away. However, I don't know if this is the proper fix.\r\n\r\n## üî¨ Minimal Reproduction\r\n\r\nInternal Google bug b/152896966 has repro steps (but note that it requires some kind of timing issue / race condition to repro)\r\n\r\n## üî• Exception or Error\r\n\r\n```\r\nTypeError: Cannot read property 'animateMessageStatus' of undefined\r\n\r\nangular2/rc/packages/animations/browser/src/render/transition_animation_engine.ts:376:28\r\n```\r\n\r\nSee b/152896966#comment2 for more\r\n\r\n\r\n## üåç  Your Environment\r\n\r\n**Angular Version:**\r\n\r\nWhatever version google3 is currently on.\r\n\r\n","Url":"https://github.com/angular/angular/issues/36378","RelatedDescription":"Open issue \"Null pointer exception in transition_animation_engine.ts\" (#36378)"},{"Id":"592083460","IsPullRequest":true,"CreatedAt":"2020-04-01T17:31:08","Actor":"josephperrott","Number":"36377","RawContent":null,"Title":"build: rebuild yarn lock from scratch","State":"open","Body":"Rebuild the yarn lock file from scratch to collapse instances where\r\none package is able to satisfy multiple dependencies.  Currently we\r\nhave some situations where we have multiple versions when one would\r\nwork.\r\n\r\nExample:\r\n```\r\n\"@babel/code-frame@^7.0.0\":\r\n  version \"7.0.0\"\r\n  resolved \"https://registry.yarnpkg.com/@babel/cod\r\n  integrity sha512-OfC2uemaknXr87bdLUkWog7nYuliM9Ij\r\n  dependencies:\r\n    \"@babel/highlight\" \"^7.0.0\"\r\n\r\n\"@babel/code-frame@^7.5.5\":\r\n  version \"7.5.5\"\r\n  resolved \"https://registry.yarnpkg.com/@babel/cod\r\n  integrity sha512-27d4lZoomVyo51VegxI20xZPuSHusqbQ\r\n  dependencies:\r\n    \"@babel/highlight\" \"^7.0.0\"\r\n\r\n\"@babel/code-frame@^7.8.3\":\r\n  version \"7.8.3\"\r\n  resolved \"https://registry.yarnpkg.com/@babel/cod\r\n  integrity sha512-a9gxpmdXtZEInkCSHUJDLHZVBgb1QS0j\r\n  dependencies:\r\n    \"@babel/highlight\" \"^7.8.3\"\r\n```\r\n\r\nbecomes\r\n\r\n```\r\n\"@babel/code-frame@^7.0.0\", \"@babel/code-frame@^7.5.5\", \"@babel/code-frame@^7.8.3\":\r\n  version \"7.8.3\"\r\n  resolved \"https://registry.yarnpkg.com/@babel/cod\r\n  integrity sha512-a9gxpmdXtZEInkCSHUJDLHZVBgb1QS0j\r\n  dependencies:\r\n    \"@babel/highlight\" \"^7.8.3\"\r\n```\r\n\r\nAdditional to this rebuild of the `yarn.lock` file, the generated golden for ng_package is updated as tslib has changed.\r\n\r\nPayload sizes for integration tests also changed as a result of these changes.","Url":"https://github.com/angular/angular/pull/36377","RelatedDescription":"Open PR \"build: rebuild yarn lock from scratch\" (#36377)"},{"Id":"592068524","IsPullRequest":true,"CreatedAt":"2020-04-01T17:05:46","Actor":"kapunahelewong","Number":"36376","RawContent":null,"Title":"docs: convert Http example to items theme","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [ ] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\nChanges hero theme to items theme in http example\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/36376","RelatedDescription":"Open PR \"docs: convert Http example to items theme\" (#36376)"},{"Id":"591815280","IsPullRequest":false,"CreatedAt":"2020-04-01T16:56:05","Actor":"almgwary","Number":"36364","RawContent":null,"Title":"Angular detect route change with skipLocationChange","State":"closed","Body":"# üêû bug report\r\n\r\n \r\n### Description\r\nRoute navigate not fire navigation event when navigate with **skipLocationChange**\r\nI wanna subscribe to ` router.navigate` changes with  `{ skipLocationChange: true }`\r\n\r\n\r\n\r\n## üî¨ Minimal Reproduction\r\n\r\n\r\nNavigation Code\r\n\r\n    this.router.navigate(['/view'], { skipLocationChange: true })\r\n\r\n\r\nSubscribe Code which not fired if **`{ skipLocationChange: true }`** is used\r\n  \r\n    router.events.pipe(\r\n      filter(event => event instanceof NavigationEnd)  \r\n    ).subscribe((event: NavigationEnd) => {\r\n      // Nothing Fired\r\n    });\r\n\r\n\r\n## üåç  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n  \"@angular/core\": \"^6.1.0\",\r\n  \"@angular/router\": \"^6.1.0\",\r\n\r\n\r\n</code></pre>\r\n\r\n\r\n\r\n**Stackoverflow Link :**\r\n[https://stackoverflow.com/questions/60968869/angular-detect-route-change-with-skiplocationchange](https://stackoverflow.com/questions/60968869/angular-detect-route-change-with-skiplocationchange)","Url":"https://github.com/angular/angular/issues/36364","RelatedDescription":"Closed issue \"Angular detect route change with skipLocationChange\" (#36364)"},{"Id":"592029791","IsPullRequest":false,"CreatedAt":"2020-04-01T16:03:59","Actor":"sdavids","Number":"36375","RawContent":null,"Title":"Mention pipes in Managing Data","State":"open","Body":"<!--üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ\r\n\r\nOh hi there! üòÑ\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\nüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ-->\r\n\r\n# üìö Docs or angular.io bug report\r\n\r\n### Description\r\n\r\nYou should mention/reference pipes `|` in the _Managing Data_ section.\r\n\r\n\r\n## üî¨ Minimal Reproduction\r\n\r\n### What's the affected URL?\r\n\r\nhttps://angular.io/start/start-data#display-the-cart-items#display-the-cart-items\r\n\r\n5. Update the template with a header ...\r\n\r\n```html\r\n<span>{{ item.price | currency }}</span>\r\n```\r\nUp to this point you have not introduced [pipes](https://angular.io/guide/pipes); you should mention it here.","Url":"https://github.com/angular/angular/issues/36375","RelatedDescription":"Open issue \"Mention pipes in Managing Data\" (#36375)"},{"Id":"592014956","IsPullRequest":true,"CreatedAt":"2020-04-01T15:42:52","Actor":"jbogarthyde","Number":"36374","RawContent":null,"Title":"Update form-validation topic for task-orientation and style","State":"open","Body":"## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [ ] Tests for the changes have been added (for bug fixes / features)\r\n- [x] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [x] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\nhttps://angular.io/guide/form-validation\r\n needs edit/reorg to conform to current standards for style, task-oriented approach.\r\n\r\nIssue Number: https://angular-team.atlassian.net/browse/DOCS-725\r\n\r\n## What is the new behavior?\r\nReworked for current doc standards\r\nSee Doc Plan: https://docs.google.com/document/d/1cgRdT-U23JAxiOKXV5C02OCPXnOkmvVXx_tNQ_ND0NE\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n","Url":"https://github.com/angular/angular/pull/36374","RelatedDescription":"Open PR \"Update form-validation topic for task-orientation and style\" (#36374)"},{"Id":"591979629","IsPullRequest":false,"CreatedAt":"2020-04-01T14:54:32","Actor":"sdavids","Number":"36373","RawContent":null,"Title":"Clarify + usage","State":"open","Body":"# üìö Docs or angular.io bug report\r\n\r\n### Description\r\n\r\nThe documentation is aimed at newcomers to Angular/JavaScript--so please clarify why `+` is used.\r\n\r\n## üî¨ Minimal Reproduction\r\n\r\n### What's the affected URL?\r\nhttps://angular.io/start/start-routing#using-route-information\r\n\r\n```javascript\r\nngOnInit() {\r\n  this.route.paramMap.subscribe(params => {\r\n    this.product = products[+params.get('productId')];\r\n  });\r\n}\r\n```\r\n\r\n`products[+params.get('productId')]`\r\n\r\nvs.\r\n\r\n`products[params.get('productId')]`","Url":"https://github.com/angular/angular/issues/36373","RelatedDescription":"Open issue \"Clarify + usage\" (#36373)"},{"Id":"591970846","IsPullRequest":true,"CreatedAt":"2020-04-01T14:42:54","Actor":"gkalpak","Number":"36372","RawContent":null,"Title":"fix(ngcc): correctly identify relative Windows-style import paths","State":"open","Body":"Previously, `isRelativePath()` assumed paths are *nix-style. This caused Windows-style paths (such as `C:\\foo\\some-package\\some-file.js`) to not be recognized as \"relative\" imports.\r\n\r\nThis commit fixes this by using the OS-agnostic `isRooted()` helper and also accounting for both styles of path delimiters: `/` and `\\`\r\n\r\n##\r\nThis is needed for angular/ngcc-validation#1029 (in case you want to run the tests locally on Windows).\r\n","Url":"https://github.com/angular/angular/pull/36372","RelatedDescription":"Open PR \"fix(ngcc): correctly identify relative Windows-style import paths\" (#36372)"},{"Id":"591927137","IsPullRequest":true,"CreatedAt":"2020-04-01T13:42:45","Actor":"ivanwonder","Number":"36371","RawContent":null,"Title":"fix(language-service): use the `HtmlAst` to get the span of HTML tag","State":"open","Body":"The HTML tag may include `-` (e.g. `app-root`), so use the `HtmlAst` to get the span.\r\n\r\n## PR Checklist\r\nPlease check if your PR fulfills the following requirements:\r\n\r\n- [x] The commit message follows our guidelines: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\r\n- [x] Tests for the changes have been added (for bug fixes / features)\r\n- [ ] Docs have been added / updated (for bug fixes / features)\r\n\r\n\r\n## PR Type\r\nWhat kind of change does this PR introduce?\r\n\r\n<!-- Please check the one that applies to this PR using \"x\". -->\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update (formatting, local variables)\r\n- [ ] Refactoring (no functional changes, no api changes)\r\n- [ ] Build related changes\r\n- [ ] CI related changes\r\n- [ ] Documentation content changes\r\n- [ ] angular.io application / infrastructure changes\r\n- [ ] Other... Please describe:\r\n\r\n\r\n## What is the current behavior?\r\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\r\n\r\nIssue Number: N/A\r\n\r\n\r\n## What is the new behavior?\r\n\r\n\r\n## Does this PR introduce a breaking change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n\r\n<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->\r\n\r\n\r\n## Other information\r\n","Url":"https://github.com/angular/angular/pull/36371","RelatedDescription":"Open PR \"fix(language-service): use the `HtmlAst` to get the span of HTML tag\" (#36371)"},{"Id":"591909530","IsPullRequest":true,"CreatedAt":"2020-04-01T13:18:35","Actor":"devversion","Number":"36369","RawContent":null,"Title":"fix(core): missing-injectable migration should not migrate `@NgModule` classes","State":"open","Body":"Based on the migration guide, provided classes which don't have\r\neither `@Injectable`, `@Directive`, `@Component` or `@Pipe` need\r\nto be migrated. This does not seem to be correct as provided classes\r\nwith an `@NgModule` also have a factory function that can be read by\r\nthe R3 injector. It's unclear in which cases the `@NgModule` decorator is\r\nused for provided classes, but this scenario has been reported.\r\n\r\nWe should either fix this in the migration, or make sure to report\r\nthis as unsupported in the Ivy compiler (when checking providers)\r\n\r\nFixes #35700.","Url":"https://github.com/angular/angular/pull/36369","RelatedDescription":"Open PR \"fix(core): missing-injectable migration should not migrate `@NgModule` classes\" (#36369)"},{"Id":"591888747","IsPullRequest":false,"CreatedAt":"2020-04-01T12:46:27","Actor":"laurentgoudet","Number":"36368","RawContent":null,"Title":"Angular Service Worker breaks HTML forms POST submit","State":"open","Body":"<!--üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ\r\n\r\nOh hi there! üòÑ\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\nüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ-->\r\n\r\n\r\n# üêû bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\nThe issue is caused by package @angular/service-worker\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\nNo\r\n\r\n### Description\r\n\r\nWe have an hybrid stack with old school PHP pages mixed with an Angular SPA, and the Angular app has a wildcard route redirecting all non-SPA navigations to the legacy PHP stack.\r\n\r\nCombined with using the `ngsw-bypass` query param, the Angular Service Worker works great in most situations. However, it does break HTML forms `POST` submit, as the Service Worker would then return the app shell (even though `req.method` was `post`), causing the SPA to send a new `GET` request with the `ngsw-bypass` query param, and breaking the form submission.\r\n\r\nTo be clear, the entire reason why this is an issue for us is that we have way too many unknown PHP `POST` endpoints to be able to exclude them all from the `navigationUrls` regexes (and they often live next to actual SPA routes); the issue does not exist if the `POST` endpoint is excluded from `navigationUrls`.\r\n\r\nPatching `ngsw-worker.js` at build time solves our issue, however, considering that POST requests aren't supported by the Cache API / can't really be cached by Service Workers, that upload progress events are broken as well, and that (in our case) HTML form POST submits are broken when form action targets match `navigationUrls`, I wonder it there's a point for the Angular Service Worker to handle `POST` requests in the first place.\r\n\r\ni.e., is there any downside for the Angular Service Worker to not handle any `POST` requests at all like we've done?\r\n\r\n```\r\nif (req.method === 'POST' || req.headers.has('ngsw-bypass') || /[?&]ngsw-bypass(?:[=&]|$)/i.test(requestUrlObj.search)) {\r\n  return;\r\n}\r\n```\r\n\r\nLooking through the various GitHub issues for related bugs, I feel that this would make real-life Service Worker deployments much easier.\r\n\r\nAlternatively, I would argue that the Angular Service Worker should not return the app shell for `req.mode === 'navigation'` requests if `req.method` is not `GET`, in order to stay on the safe side.\r\n\r\n## üî¨ Minimal Reproduction\r\n<!--\r\nPlease create and share minimal reproduction of the issue starting with this template: https://stackblitz.com/fork/angular-issue-repro2\r\n-->\r\nI've created a small repro at https://github.com/laurentgoudet/angular-service-worker-submit-post-bug: just `git checkout`, `yarn`, `node server.js`, and open `http://localhost:8080`: the form submit would be broken once the Service Worker has bootstrapped\r\n\r\n## üåç  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\nlaurent@Laurents-MacBook-Pro webapp [laurent-sw-fix] $ ./node_modules/.bin/ng version\r\n\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / ‚ñ≥ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n\r\n\r\nAngular CLI: 9.0.5\r\nNode: 12.4.0\r\nOS: darwin x64\r\n\r\nAngular: 9.0.5\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, platform-server, router\r\n... service-worker\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.3\r\n@angular-devkit/build-angular     0.900.3\r\n@angular-devkit/build-optimizer   0.900.3\r\n@angular-devkit/build-webpack     0.900.3\r\n@angular-devkit/core              9.0.3\r\n@angular-devkit/schematics        9.0.5\r\n@angular/cdk                      9.1.1\r\n@angular/material                 9.1.1\r\n@ngtools/webpack                  9.0.3\r\n@nguniversal/builders             9.0.1\r\n@nguniversal/common               9.0.2\r\n@nguniversal/express-engine       9.0.2\r\n@schematics/angular               9.0.5\r\n@schematics/update                0.900.5\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n\r\n</code></pre>","Url":"https://github.com/angular/angular/issues/36368","RelatedDescription":"Open issue \"Angular Service Worker breaks HTML forms POST submit\" (#36368)"},{"Id":"591873581","IsPullRequest":true,"CreatedAt":"2020-04-01T12:21:35","Actor":"devversion","Number":"36367","RawContent":null,"Title":"fix(core): avoid migration error when non-existent symbol is imported","State":"open","Body":"In rare cases a project with configured `rootDirs` that has imports to\r\nnon-existent identifiers could fail in the migration.\r\n\r\nThis happens because based on the application code, the migration could\r\nend up trying to resolve the `ts.Symbol` of such non-existent\r\nidentifiers. This isn't a problem usually, but due to a upstream bug\r\nin the TypeScript compiler, a runtime error is thrown.\r\n\r\nThis is because TypeScript is unable to compute a relative path from the\r\noriginating source file to the imported source file which _should_\r\nprovide the non-existent identifier. An issue for this has been reported\r\nupstream: https://github.com/microsoft/TypeScript/issues/37731. The\r\nissue only surfaces since our migrations don't provide an absolute base\r\npath that is used for resolving the root directories.\r\n\r\nTo fix this, we ensure that we never use relative paths when parsing\r\ntsconfig files. More details can be found in the TS issue.\r\n\r\nFixes #36346.","Url":"https://github.com/angular/angular/pull/36367","RelatedDescription":"Open PR \"fix(core): avoid migration error when non-existent symbol is imported\" (#36367)"},{"Id":"591845350","IsPullRequest":true,"CreatedAt":"2020-04-01T11:55:38","Actor":"gkalpak","Number":"36365","RawContent":null,"Title":"TEST - PR34625","State":"closed","Body":"Nothing to see here. Move on :grin:","Url":"https://github.com/angular/angular/pull/36365","RelatedDescription":"Closed or merged PR \"TEST - PR34625\" (#36365)"},{"Id":"591789525","IsPullRequest":false,"CreatedAt":"2020-04-01T10:01:15","Actor":"sreesilpa13","Number":"36363","RawContent":null,"Title":"HttpParams gets converted to space for + sign, Any fix to resolve this issue","State":"open","Body":" navigateToDashboard(ngForm: NgForm){\r\n    var hash = CryptoJS.SHA1(ngForm.value.password);\r\n    var txtPassBase64 = hash.toString(CryptoJS.enc.Base64);\r\n    var txtPassHexValue = hash.toString(CryptoJS.enc.Hex);\r\n    hash = CryptoJS.MD5(ngForm.value.password);\r\n    let txtMD5Base64  = hash.toString(CryptoJS.enc.Base64)\r\n\r\n    const body = new HttpParams()\r\n    .set('txtUserId', '10015625')\r\n    .set('txtMD5Base64', txtMD5Base64)//4QrcOUm6Wau+VuBX8g+IPg==\r\n    .set('language', 'E');\r\n\r\n    console.log(\"body\",body);\r\n      this.httpClient.post(this.postUrl,body,this.httpOptions).subscribe(() => {\r\n        console.log(\"Hi\");\r\n      })\r\n  }\r\n\r\nThe final txtMD5Base64 loooks like 4QrcOUm6Wau VuBX8g IPg==(plus symbols are replaced with \r\nspace). It should look like this while submitting a request => 4QrcOUm6Wau+VuBX8g+IPg== but looks like this in the HttpParams => 4QrcOUm6Wau VuBX8g IPg==. Its a complete nightmare for me to resolve the issue. Please suggest a solution for this\r\n","Url":"https://github.com/angular/angular/issues/36363","RelatedDescription":"Open issue \"HttpParams gets converted to space for + sign, Any fix to resolve this issue\" (#36363)"},{"Id":"591751866","IsPullRequest":true,"CreatedAt":"2020-04-01T09:03:45","Actor":"petebacondarwin","Number":"36362","RawContent":null,"Title":"refactor(compiler): create a new root `BindingScope` for each template","State":"open","Body":"Previously we had a singleton `ROOT_SCOPE` object, from\r\nwhich all `BindingScope`s derived. But this caused ngcc to\r\nproduce non-deterministic output when running multiple workers\r\nin parallel, since each process had its own `ROOT_SCOPE`.\r\n\r\nIn reality there is no need for `BindingScope` reference names\r\nto be unique across an entire application (or in the case of ngcc\r\nacross all the libraries). Instead we just need uniqueness within\r\na template.\r\n\r\nThis commit changes the compiler to create a new root `BindingScope`\r\neach time it compiles a component's template.\r\n\r\nResolves #35180","Url":"https://github.com/angular/angular/pull/36362","RelatedDescription":"Open PR \"refactor(compiler): create a new root `BindingScope` for each template\" (#36362)"},{"Id":"591684951","IsPullRequest":true,"CreatedAt":"2020-04-01T07:18:43","Actor":"devversion","Number":"36361","RawContent":null,"Title":"build: sort module resolution warnings in ts-circular-deps tool","State":"open","Body":"For better overview of modules that cannot be resolved in the\r\n`ts-circular-deps` tool, the warnings are now sorted.\r\n\r\nAdditionally, an empty line between fixed and new circular dependencies\r\nis now printed. That should slightly help with distinguishing.","Url":"https://github.com/angular/angular/pull/36361","RelatedDescription":"Open PR \"build: sort module resolution warnings in ts-circular-deps tool\" (#36361)"},{"Id":"591611651","IsPullRequest":false,"CreatedAt":"2020-04-01T04:24:09","Actor":"indraraj26","Number":"36360","RawContent":null,"Title":"bug(routing): forget to put components in declaration","State":"open","Body":"<!--üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ\r\n\r\nOh hi there! üòÑ\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\nüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ-->\r\n\r\n\r\n# üêû bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ‚úçÔ∏èedit: --> The issue is caused by package @angular/router\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ‚úçÔ∏è--> Yes, the previous version in which this bug was not present was: no idea\r\n\r\n\r\n### Description\r\nSuppose you forget to declare ChildComponent in declaration of parent.module.ts and will try to use *ngFor you will get this error : Can't bind to 'ngForOf' since it isn't a known property of 'p'. Basically i forget to declare ChildComponent in parent.module.ts. Still i am able to visit /parent/children and see content.\r\n\r\nExpected: It should throw an error that ChildComponent is not a part of any module declaration.\r\n\r\nIssue: Sometime it is really hard to debug for newbie what went wrong.\r\n\r\ncode : \r\n```\r\n<p *ngFor=\"let item of [1,2,3]\">\r\n  children works!\r\n</p>\r\n<!--you will able to see children works even \r\nit is not a part of any module -->\r\n<p>\r\n  children works!\r\n</p>\r\n```\r\n## üî¨ Minimal Reproduction\r\n<!--\r\nPlease create and share minimal reproduction of the issue starting with this template: https://stackblitz.com/fork/angular-issue-repro2\r\n-->\r\n<!-- ‚úçÔ∏è--> \r\nhttps://ng-run.com/edit/wiaLgud669oJ3gX4hMFP?open=app%2Fparent%2Fparent.component.html\r\n<!--\r\nIf StackBlitz is not suitable for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.\r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## üî• Exception or Error\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ‚úçÔ∏è-->\r\nCan't bind to 'ngForOf' since it isn't a known property of 'p'.\r\n</code></pre>\r\n\r\n\r\n## üåç  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ‚úçÔ∏è-->\r\n  9.0.2\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ‚úçÔ∏èIs this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ‚úçÔ∏èDo any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular/issues/36360","RelatedDescription":"Open issue \"bug(routing): forget to put components in declaration\" (#36360)"},{"Id":"591421265","IsPullRequest":false,"CreatedAt":"2020-03-31T20:56:06","Actor":"gkalpak","Number":"36359","RawContent":null,"Title":"Issue with DI and class inheritance in JIT mode on <=IE10","State":"open","Body":"_DISCLAIMER: I don't know/understand all the details, but I'll mention what I know in the hope that it makes sense to someone :grin:_\r\n\r\nIn browsers that do not support `Object.setPrototypeOf()` and also not support [__proto__][1] (i.e. <=IE10), static property inheritance is implemented by copying the properties from the parent class to the child class. This seems to throw off DI for inheriting classes without own dependencies in JIT mode.\r\n\r\nThis was encountered in #34929 (related JIRA issue: [FW-1945][2]).\r\n\r\nMore specifically:\r\n\r\nAssume we have the following classes:\r\n\r\n```ts\r\n@Injectable()\r\nclass SuperClass {\r\n  constructor(dep1: Dep1, dep2: Dep2) {\r\n    ...\r\n  }\r\n}\r\n\r\n@Injectable()\r\nclass SubClass extends SuperClass {\r\n  // No constructor or own deps.\r\n}\r\n```\r\n\r\n...and we use them to specify a provider like this:\r\n\r\n```ts\r\n{provide: SuperClass, useClass: SubClass}\r\n```\r\n\r\n- `compileInjectable()` checks whether a \"class\" (or a `Function` in ES5 transpiled code) has own […µprov][3] and […µfac][4] properties and does not define them if already defined.\r\n- Normally, `SubClass` would inherit (but not have own) such properties.\r\n- In <=IE10, inheritance is implemented by copying the properties from `SuperClass` to `SubClass`, so `compileInjectable()` thinks `SubClass` already has `…µprov` and `…µfac` and does not define them.\r\n- Later, `providerToFactory()` will use [injectableDefOrInjectorDefFactory()][5], which in turn will call [getInjectableDef()][6].\r\n- `getInjectableDef()` will try to read `SubClass.…µprov` or `SubClass.ngInjectableDef`, but [tries to detect static properties copied over from super class][7], i.e. [taking into account][8] the special way static property inheritance is polyfilled in <=IE10.\r\n- Since `ngInjectableDef()` will not return an `injectableDef` (since the existing defs are copied onto `SubClass` from `SuperClass`), the injector will try to retrieve a factory using [getFactoryDef()][9].\r\n- In turn, `getFactoryDef()` will try to [read `SubClass.…µfac`][10], which was previously copied over from `SuperClass`.\r\n- Since `SubClass.…µfac` is a direct copy of `SuperClass.…µfac`, it is a function that instantiates `SuperClass` (and not `SubClass`).\r\n\r\nSo, while the provider specified the `SubClass` class should be used to instantiate the service provided under the `SuperClass` token, we end up with an instance of `SuperClass`.\r\n\r\n##\r\nJira issue: [FW-2042][11]\r\n\r\n[1]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto\r\n[2]: https://angular-team.atlassian.net/browse/FW-1945\r\n[3]: https://github.com/angular/angular/blob/c2a904da09165609cf408ceee26611f3a8df5326/packages/core/src/di/jit/injectable.ts#L32-L42\r\n[4]: https://github.com/angular/angular/blob/c2a904da09165609cf408ceee26611f3a8df5326/packages/core/src/di/jit/injectable.ts#L56-L76\r\n[5]: https://github.com/angular/angular/blob/c2a904da09165609cf408ceee26611f3a8df5326/packages/core/src/di/r3_injector.ts#L499\r\n[6]: https://github.com/angular/angular/blob/c2a904da09165609cf408ceee26611f3a8df5326/packages/core/src/di/r3_injector.ts#L412\r\n[7]: https://github.com/angular/angular/blob/c2a904da09165609cf408ceee26611f3a8df5326/packages/core/src/di/interface/defs.ts#L193-L194\r\n[8]: https://github.com/angular/angular/blob/c2a904da09165609cf408ceee26611f3a8df5326/packages/core/src/di/interface/defs.ts#L201-L202\r\n[9]: https://github.com/angular/angular/blob/c2a904da09165609cf408ceee26611f3a8df5326/packages/core/src/di/r3_injector.ts#L413\r\n[10]: https://github.com/angular/angular/blob/c2a904da09165609cf408ceee26611f3a8df5326/packages/core/src/render3/definition.ts#L663-L671\r\n[11]: https://angular-team.atlassian.net/browse/FW-2042\r\n\n\n[FW-1945]: https://angular-team.atlassian.net/browse/FW-1945\n[FW-2042]: https://angular-team.atlassian.net/browse/FW-2042","Url":"https://github.com/angular/angular/issues/36359","RelatedDescription":"Open issue \"Issue with DI and class inheritance in JIT mode on <=IE10\" (#36359)"},{"Id":"591343764","IsPullRequest":false,"CreatedAt":"2020-03-31T19:04:18","Actor":"IanGrainger","Number":"36357","RawContent":null,"Title":"Docs are slow to load and sometimes don't load","State":"closed","Body":"I found a closed issue with this title. Just started using Angular and the docs pages are terrible. It takes many seconds to load, and occasionally I just see the side navbar and no content. This has happened on Windows 10 with latest Chrome and chrome on my Android phone.\r\n\r\nIt's an AWFUL advert for Angular.","Url":"https://github.com/angular/angular/issues/36357","RelatedDescription":"Closed issue \"Docs are slow to load and sometimes don't load\" (#36357)"},{"Id":"591326046","IsPullRequest":false,"CreatedAt":"2020-03-31T18:29:20","Actor":"bbarry","Number":"36356","RawContent":null,"Title":"Console error \"providers is not defined\" when built in production mode","State":"open","Body":"<!--üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ\r\n\r\nOh hi there! üòÑ\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\nüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ-->\r\n\r\n\r\n# üêû bug report\r\n\r\n### Affected Package\r\n<!-- Can you pin-point one or more @angular/* packages as the source of the bug? -->\r\n<!-- ‚úçÔ∏èedit: --> I suspect this is an issue in the angular compiler, not 100% sure though, could be the `NgModule` attribute in @angular/core?\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ‚úçÔ∏è--> I don't know, my internet is too slow to try and make a full reproduction against an older version.\r\n\r\n\r\n### Description\r\n\r\n<!-- ‚úçÔ∏è--> In my application I have a file `app.providers.ts` which has:\r\n\r\n```\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { ApiInterceptor } from './api-interceptor';\r\nimport { SpinnerService } from './ui-util/spinner.service';\r\n\r\nexport const providers = [\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ApiInterceptor,\r\n    multi: true,\r\n  },\r\n  SpinnerService,\r\n];\r\n```\r\n\r\nmy `app.module.ts` (lines removed):\r\n\r\n```\r\nimport { imports } from './app.imports';\r\nimport { providers } from './app.providers';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n   //...\r\n  ],\r\n  imports,\r\n  providers,\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n\r\n```\r\n\r\nUsing `ng serve` the site runs fine in development. Using `ng build --aot --prod --subresource-integrity` the error `providers is not defined` appears in my dev console when browsing the site.\r\n\r\nI am able to work around the issue by changing the `imports,` and `providers,` lines above to:\r\n\r\n```\r\n  imports: [...imports],\r\n  providers: [...providers],\r\n```\r\n\r\n## üî• Exception or Error\r\n<pre><code>\r\nReferenceError: providers is not defined\r\n    Vw app.module.ts:105\r\n    zUnb app.module.ts:105\r\n    Webpack 8\r\n</code></pre>\r\n\r\n(after modifying production config to enable source map)\r\n\r\n<pre><code>\r\nReferenceError: imports is not defined\r\n    w app.module.ts:101\r\n    zUnb app.module.ts:105\r\n    Webpack 8\r\n</code></pre>\r\n\r\nafter fixing only the providers line\r\n\r\n## üåç  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n     _                      _                 ____ _     ___\r\n    / \\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\r\n   / ‚ñ≥ \\ | '_ \\ / _` | | | | |/ _` | '__|   | |   | |    | |\r\n  / ___ \\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\r\n /_/   \\_\\_| |_|\\__, |\\__,_|_|\\__,_|_|       \\____|_____|___|\r\n                |___/\r\n    \r\n\r\nAngular CLI: 9.1.0\r\nNode: 12.16.1\r\nOS: win32 x64\r\n\r\nAngular: 9.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.901.0\r\n@angular-devkit/build-angular     0.901.0\r\n@angular-devkit/build-optimizer   0.901.0\r\n@angular-devkit/build-webpack     0.901.0\r\n@angular-devkit/core              9.1.0\r\n@angular-devkit/schematics        9.1.0\r\n@angular/cdk                      9.2.0\r\n@angular/material                 9.2.0\r\n@ngtools/webpack                  9.1.0\r\n@schematics/angular               9.1.0\r\n@schematics/update                0.901.0\r\nrxjs                              6.5.4\r\ntypescript                        3.8.3\r\nwebpack                           4.42.0\r\n</code></pre>\r\n\r\n","Url":"https://github.com/angular/angular/issues/36356","RelatedDescription":"Open issue \"Console error \"providers is not defined\" when built in production mode\" (#36356)"},{"Id":"591321890","IsPullRequest":false,"CreatedAt":"2020-03-31T18:23:01","Actor":"amy-1995","Number":"36355","RawContent":null,"Title":"Angular binding DOM property instead of web component property","State":"open","Body":"\r\n\r\n### Description\r\n Currently when we use web components in angular 8, with module schema set to CUSTOM_ELEMENTS_SCHEMA. Angular sets and update DOM properties, instead of web component properties when property name is similar to a attribute which has a corresponding DOM property. For example:\r\nIf the web component has exposed a property with name readonly, when we bind this property in our template like:\r\n\r\n`<my-custom-element [readonly]=\"readonly\"></my-custom-element>`\r\n\r\nInstead of updating and binding with readonly prop of the web component. Angular binds it with readOnly property of the dom. Also this readOnly property is then also available on the web component reference. But my web component readonly property is always undefined and is never set.\r\n\r\n\r\n\r\n## üî¨ Minimal Reproduction\r\nAs displayed in the below stackblitz, even on changing the readonly property of the web component the  input is never made readonly, and the web component setter is never called. Also you can observe that readonly property of web component is always undefined wheres as if you display readOnly property of DOM is getting updated\r\n\r\nhttps://stackblitz.com/edit/angular-rlntip","Url":"https://github.com/angular/angular/issues/36355","RelatedDescription":"Open issue \"Angular binding DOM property instead of web component property\" (#36355)"}],"ResultType":"GitHubIssue"},"AngularCli-Issues":{"Issues":[{"Id":"592323194","IsPullRequest":false,"CreatedAt":"2020-04-02T02:58:09","Actor":"jyothi530","Number":"17366","RawContent":null,"Title":"Differential loading bundle file names are not suffixed with ES2015 or ES5 causing only one file to output","State":"open","Body":"<!--üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ\r\n\r\nOh hi there! üòÑ\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\nüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ-->\r\n\r\n\r\n# üêû Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ‚úçÔ∏èedit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\nNo. Upgrade from Angular 8 to 9.\r\n\r\n\r\n### Description\r\nI am trying to utilize differential loading feature. I have set my app target to ES2015. ng build --prod shows in the console it is generating ES5 bundles. But in the final output I have only one file for each main, runtime, polyfills without suffix es2015, es5. Please see below screenshot.\r\n![image](https://user-images.githubusercontent.com/19412829/78205933-7450da80-746b-11ea-95e4-781a8d83d69a.png)\r\n\r\n<!-- ‚úçÔ∏è--> \r\n\r\n\r\n## üî¨ Minimal Reproduction\r\nIt is consistently happening on a app upgraded from Angular 8 to 9. On a app directly created for Angular 9 no issues.\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. \r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## üî• Exception or Error\r\nNothing\r\n\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ‚úçÔ∏è-->\r\n\r\n\r\n\r\n## üåç Your Environment\r\n![image](https://user-images.githubusercontent.com/19412829/78205974-93e80300-746b-11ea-89f2-14964479b591.png)\r\n<!-- run `ng version` and paste output below -->\r\n\r\n<!-- ‚úçÔ∏è-->\r\n\r\n\r\n**Anything else relevant?**\r\nNo\r\n<!-- ‚úçÔ∏èIs this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ‚úçÔ∏èDo any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/17366","RelatedDescription":"Open issue \"Differential loading bundle file names are not suffixed with ES2015 or ES5 causing only one file to output\" (#17366)"},{"Id":"592289580","IsPullRequest":false,"CreatedAt":"2020-04-02T01:01:01","Actor":"tqfgithub","Number":"17365","RawContent":null,"Title":"production build - 80% chunk modules optimization ModuleConcatenationPlugin takes too much time about 15 minutes","State":"open","Body":"### **Description**:\r\nwhen I build my projectÔºåthe  progress  will  always stoped at the  '80% chunk modules optimization ModuleConcatenationPlugin'.\r\n![image](https://user-images.githubusercontent.com/16682430/78199473-595b8600-74be-11ea-9e45-7ad3d590f28e.png)\r\n### command\r\n`npm run bt-shushan-test`\r\n### version\r\nnpm: 6.8.0\r\nAngular CLI: 8.1.1\r\nNode: 10.16.1\r\nAngular: 8.1.1\r\n### **package.json**\r\n`\r\n{\r\n  \"name\": \"tianzhu-spa\",\r\n  \"version\": \"0.2.7\",\r\n  \"license\": \"MIT\",\r\n  \"scripts\": {\r\n    \"ng\": \"ng\",\r\n    \"dev\": \"ng serve --configuration hmr\",\r\n    \"start\": \"ng serve --liveReload=true  --port 4100\",\r\n    \"start-aot\": \"node --max_old_space_size=4096 node_modules/@angular/cli/bin/ng serve --aot  --live-reload true\",\r\n    \"build\": \"ng build\",\r\n    \"test\": \"ng test\",\r\n    \"test-tianzhu\": \"ng test --env tianzhu-dev\",\r\n    \"lint\": \"ng lint\",\r\n    \"e2e\": \"ng e2e\",\r\n    \"mock\": \"json-server -c src/mock-api/json-server.json ./src/mock-api/db.json\",\r\n    \"bt-shushan-dev\": \" node --max_old_space_size=6144 node_modules/@angular/cli/bin/ng build --prod=true --serviceWorker=true --c shushan-dev\",\r\n    \"bt-tianzhu-dev\": \" node --max_old_space_size=6144 node_modules/@angular/cli/bin/ng build --prod=true --serviceWorker=true --c tianzhu-dev\",\r\n    \"bt-shushan-test\": \" node --max_old_space_size=6144 node_modules/@angular/cli/bin/ng build --prod  --build--optimizer --serviceWorker --c shushan-test\",\r\n    \"bt-tianzhu-test\": \" node --max_old_space_size=6144 node_modules/@angular/cli/bin/ng build --prod=true --serviceWorker=true --c tianzhu-test\",\r\n    \"bt-shushan-prod\": \" node --max_old_space_size=6144 node_modules/@angular/cli/bin/ng build --prod --build--optimizer --serviceWorker --c shushan-prod\",\r\n    \"bt-tianzhu-prod\": \" node --max_old_space_size=6144 node_modules/@angular/cli/bin/ng build --prod=true --serviceWorker=true --c tianzhu-prod\"\r\n  },\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@angular/animations\": \"^8.1.1\",\r\n    \"@angular/common\": \"^8.1.1\",\r\n    \"@angular/compiler\": \"^8.1.1\",\r\n    \"@angular/core\": \"^8.1.1\",\r\n    \"@angular/forms\": \"^8.1.1\",\r\n    \"@angular/http\": \"^7.2.11\",\r\n    \"@angular/platform-browser\": \"^8.1.1\",\r\n    \"@angular/platform-browser-dynamic\": \"^8.1.1\",\r\n    \"@angular/pwa\": \"^0.6.8\",\r\n    \"@angular/router\": \"^8.1.1\",\r\n    \"@angular/service-worker\": \"^8.1.1\",\r\n    \"@angularclass/hmr\": \"^2.1.3\",\r\n    \"@antv/g6\": \"^1.2.3\",\r\n    \"@antv/g6-plugins\": \"^1.0.2\",\r\n    \"angular2gridster\": \"^7.0.1\",\r\n    \"animate.css\": \"3.6.1\",\r\n    \"blob.js\": \"^1.0.1\",\r\n    \"bootstrap\": \"3.3.7\",\r\n    \"chart.js\": \"^2.6.0\",\r\n    \"classlist.js\": \"^1.1.20150312\",\r\n    \"core-js\": \"^2.6.10\",\r\n    \"countup.js-angular2\": \"^7.3.0\",\r\n    \"cryptico\": \"^1.0.2\",\r\n    \"crypto-js\": \"^3.1.9-1\",\r\n    \"echarts\": \"^4.1.0\",\r\n    \"file-saver\": \"^2.0.0-rc.4\",\r\n    \"font-awesome\": \"^4.7.0\",\r\n    \"formdata-polyfill\": \"^3.0.19\",\r\n    \"intl\": \"^1.2.5\",\r\n    \"jquery\": \"^3.1.0\",\r\n    \"jquery-slimscroll\": \"^1.3.8\",\r\n    \"jsencrypt\": \"^3.0.0-beta.1\",\r\n    \"jspdf\": \"^1.5.3\",\r\n    \"localforage\": \"^1.7.1\",\r\n    \"lodash\": \"^4.17.10\",\r\n    \"moment\": \"^2.22.2\",\r\n    \"ng-zorro-antd\": \"^8.5.2\",\r\n    \"ngx-ueditor\": \"^2.1.3\",\r\n    \"node-sass\": \"^4.9.3\",\r\n    \"popper.js\": \"^1.15.0\",\r\n    \"primeicons\": \"^1.0.0\",\r\n    \"primeng\": \"6.0.0-alpha.1\",\r\n    \"rxjs\": \"^6.4.0\",\r\n    \"rxjs-tslint\": \"^0.1.7\",\r\n    \"sockjs-client\": \"^1.3.0\",\r\n    \"typedarray\": \"0.0.6\",\r\n    \"web-animations-js\": \"^2.3.2\",\r\n    \"webstomp-client\": \"^1.2.6\",\r\n    \"yarn\": \"^1.12.1\",\r\n    \"zone.js\": \"^0.9.1\"\r\n  },\r\n  \"devDependencies\": {\r\n      \"@angular-builders/custom-webpack\": \"^8.4.1\",\r\n      \"@angular-devkit/build-angular\": \"^0.803.24\",\r\n      \"@angular/cli\": \"^8.1.1\",\r\n      \"@angular/compiler-cli\": \"^8.1.1\",\r\n      \"@babel/plugin-proposal-class-properties\": \"^7.8.3\",\r\n      \"@babel/plugin-proposal-numeric-separator\": \"^7.8.3\",\r\n      \"@babel/preset-env\": \"^7.9.0\",\r\n      \"@schematics/angular\": \"^8.1.1\",\r\n      \"@types/file-saver\": \"^1.3.1\",\r\n      \"@types/jasmine\": \"~2.8.8\",\r\n      \"@types/jasminewd2\": \"~2.0.3\",\r\n      \"@types/node\": \"~10.1.2\",\r\n      \"babel-core\": \"^6.26.3\",\r\n      \"babel-loader\": \"^8.1.0\",\r\n      \"babel-plugin-import\": \"^1.13.0\",\r\n      \"codelyzer\": \"^4.5.0\",\r\n      \"happypack\": \"^5.0.1\",\r\n      \"html2canvas\": \"^1.0.0-rc.3\",\r\n      \"jasmine-core\": \"~3.1.0\",\r\n      \"jasmine-spec-reporter\": \"~4.2.1\",\r\n      \"karma\": \"~2.0.2\",\r\n      \"karma-chrome-launcher\": \"~2.2.0\",\r\n      \"karma-cli\": \"~1.0.1\",\r\n      \"karma-coverage-istanbul-reporter\": \"^2.0.1\",\r\n      \"karma-jasmine\": \"~1.1.2\",\r\n      \"karma-jasmine-html-reporter\": \"^1.2.0\",\r\n      \"protractor\": \"~5.3.2\",\r\n      \"ts-node\": \"~6.0.5\",\r\n      \"tslint\": \"^5.10.0\",\r\n      \"typescript\": \"~3.4.5\",\r\n      \"uglifyjs-webpack-plugin\": \"^2.2.0\",\r\n      \"webpack-parallel-uglify-plugin\": \"^1.1.2\"\r\n  }\r\n}\r\n\r\n`\r\n### angular.json\r\n\r\n{\r\n  \"$schema\": \"./node_modules/@angular/cli/lib/config/schema.json\",\r\n  \"version\": 1,\r\n  \"newProjectRoot\": \"projects\",\r\n  \"projects\": {\r\n    \"tianzhu-spa\": {\r\n      \"root\": \"\",\r\n      \"sourceRoot\": \"src\",\r\n      \"projectType\": \"application\",\r\n      \"architect\": {\r\n        \"build\": {\r\n          \"builder\": \"@angular-builders/custom-webpack:browser\",\r\n          \"options\": {\r\n            \"customWebpackConfig\": {\r\n              \"path\": \"./extra-webpack.config.js\",\r\n              \"mergeStrategies\": {\r\n                \"externals\": \"replace\"\r\n              }\r\n            },\r\n            \"indexTransform\": \"./index-html.transform.js\",\r\n            \"outputPath\": \"dist\",\r\n            \"index\": \"src/index.html\",\r\n            \"main\": \"src/main.ts\",\r\n            \"tsConfig\": \"src/tsconfig.app.json\",\r\n            \"polyfills\": \"src/polyfills.ts\",\r\n            \"assets\": [\r\n              \"src/assets\",\r\n              \"src/favicon.ico\",\r\n              \"src/manifest.json\",\r\n              {\r\n                \"glob\": \"**/*\",\r\n                \"input\": \"./node_modules/@ant-design/icons-angular/src/inline-svg/\",\r\n                \"output\": \"/assets/\"\r\n              }\r\n            ],\r\n            \"styles\": [\r\n              \"node_modules/ng-zorro-antd/ng-zorro-antd.min.css\",\r\n              \"node_modules/bootstrap/dist/css/bootstrap.min.css\",\r\n              \"node_modules/primeng/resources/primeng.css\",\r\n              \"node_modules/font-awesome/css/font-awesome.min.css\",\r\n              \"node_modules/primeicons/primeicons.css\",\r\n              \"src/assets/styles/theme.scss\",\r\n              \"src/assets/styles/theme_v6.0.0.scss\",\r\n              \"src/assets/styles/styles.scss\",\r\n              \"src/assets/styles/styles.primeng.scss\",\r\n              \"src/assets/font/iconfont/iconfont.css\"\r\n            ],\r\n            \"scripts\": [\r\n              \"node_modules/jquery/dist/jquery.min.js\",\r\n              \"src/vendor/pace/pace.min.js\",\r\n              \"node_modules/bootstrap/dist/js/bootstrap.min.js\",\r\n              \"src/assets/font/iconfont/iconfont.js\",\r\n              \"src/assets/twaver/t.js\",\r\n              \"src/assets/twaver/twaver.js\",\r\n              \"src/assets/jtopo/jtopo.js\"\r\n            ],\r\n            \"serviceWorker\": true,\r\n            \"webWorkerTsConfig\": \"tsconfig.worker.json\"\r\n          },\r\n          \"configurations\": {\r\n            \"hmr\": {\r\n              \"fileReplacements\": [\r\n                {\r\n                  \"replace\": \"src/environments/environment.ts\",\r\n                  \"with\": \"src/environments/environment.hmr.ts\"\r\n                }\r\n              ]\r\n            },\r\n            \"shushan-dev\": {\r\n              \"optimization\": true,\r\n              \"outputHashing\": \"all\",\r\n              \"sourceMap\": false,\r\n              \"extractCss\": true,\r\n              \"namedChunks\": false,\r\n              \"aot\": true,\r\n              \"extractLicenses\": true,\r\n              \"vendorChunk\": false,\r\n              \"buildOptimizer\": true,\r\n              \"fileReplacements\": [\r\n                {\r\n                  \"replace\": \"src/environments/environment.ts\",\r\n                  \"with\": \"src/environments/environment.shushan.dev.ts\"\r\n                }\r\n              ]\r\n            },\r\n            \"tianzhu-dev\": {\r\n              \"optimization\": true,\r\n              \"outputHashing\": \"all\",\r\n              \"sourceMap\": false,\r\n              \"extractCss\": true,\r\n              \"namedChunks\": false,\r\n              \"aot\": true,\r\n              \"extractLicenses\": true,\r\n              \"vendorChunk\": false,\r\n              \"buildOptimizer\": true,\r\n              \"fileReplacements\": [\r\n                {\r\n                  \"replace\": \"src/environments/environment.ts\",\r\n                  \"with\": \"src/environments/environment.tianzhu.dev.ts\"\r\n                }\r\n              ]\r\n            },\r\n            \"shushan-prod\": {\r\n              \"optimization\": true,\r\n              \"outputHashing\": \"all\",\r\n              \"sourceMap\": false,\r\n              \"extractCss\": true,\r\n              \"namedChunks\": false,\r\n              \"aot\": true,\r\n              \"extractLicenses\": true,\r\n              \"vendorChunk\": false,\r\n              \"buildOptimizer\": true,\r\n              \"fileReplacements\": [\r\n                {\r\n                  \"replace\": \"src/environments/environment.ts\",\r\n                  \"with\": \"src/environments/environment.shushan.prod.ts\"\r\n                }\r\n              ]\r\n            },\r\n            \"tianzhu-prod\": {\r\n              \"optimization\": true,\r\n              \"outputHashing\": \"all\",\r\n              \"sourceMap\": false,\r\n              \"extractCss\": true,\r\n              \"namedChunks\": false,\r\n              \"aot\": true,\r\n              \"extractLicenses\": true,\r\n              \"vendorChunk\": false,\r\n              \"buildOptimizer\": true,\r\n              \"fileReplacements\": [\r\n                {\r\n                  \"replace\": \"src/environments/environment.ts\",\r\n                  \"with\": \"src/environments/environment.tianzhu.prod.ts\"\r\n                }\r\n              ]\r\n            },\r\n            \"shushan-test\": {\r\n              \"optimization\": true,\r\n              \"outputHashing\": \"all\",\r\n              \"sourceMap\": false,\r\n              \"extractCss\": true,\r\n              \"namedChunks\": false,\r\n              \"aot\": true,\r\n              \"extractLicenses\": true,\r\n              \"vendorChunk\": false,\r\n              \"buildOptimizer\": true,\r\n              \"fileReplacements\": [\r\n                {\r\n                  \"replace\": \"src/environments/environment.ts\",\r\n                  \"with\": \"src/environments/environment.shushan.test.ts\"\r\n                }\r\n              ]\r\n            },\r\n            \"tianzhu-test\": {\r\n              \"optimization\": true,\r\n              \"outputHashing\": \"all\",\r\n              \"sourceMap\": false,\r\n              \"extractCss\": true,\r\n              \"namedChunks\": false,\r\n              \"aot\": true,\r\n              \"extractLicenses\": true,\r\n              \"vendorChunk\": false,\r\n              \"buildOptimizer\": true,\r\n              \"fileReplacements\": [\r\n                {\r\n                  \"replace\": \"src/environments/environment.ts\",\r\n                  \"with\": \"src/environments/environment.tianzhu.test.ts\"\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        },\r\n        \"serve\": {\r\n          \"builder\": \"ngx-build-plus:dev-server\",\r\n          \"options\": {\r\n            \"browserTarget\": \"tianzhu-spa:build\"\r\n          },\r\n          \"configurations\": {\r\n            \"hmr\": {\r\n              \"hmr\": true,\r\n              \"browserTarget\": \"tianzhu-spa:build:hmr\"\r\n            },\r\n            \"shushan-dev\": {\r\n              \"browserTarget\": \"tianzhu-spa:build:shushan-dev\"\r\n            },\r\n            \"tianzhu-dev\": {\r\n              \"browserTarget\": \"tianzhu-spa:build:tianzhu-dev\"\r\n            },\r\n            \"shushan-prod\": {\r\n              \"browserTarget\": \"tianzhu-spa:build:shushan-prod\"\r\n            },\r\n            \"tianzhu-prod\": {\r\n              \"browserTarget\": \"tianzhu-spa:build:tianzhu-prod\"\r\n            },\r\n            \"shushan-test\": {\r\n              \"browserTarget\": \"tianzhu-spa:build:shushan-test\"\r\n            },\r\n            \"tianzhu-test\": {\r\n              \"browserTarget\": \"tianzhu-spa:build:tianzhu-test\"\r\n            }\r\n          }\r\n        },\r\n        \"extract-i18n\": {\r\n          \"builder\": \"@angular-devkit/build-angular:extract-i18n\",\r\n          \"options\": {\r\n            \"browserTarget\": \"tianzhu-spa:build\"\r\n          }\r\n        },\r\n        \"test\": {\r\n          \"builder\": \"ngx-build-plus:karma\",\r\n          \"options\": {\r\n            \"main\": \"src/test.ts\",\r\n            \"karmaConfig\": \"./karma.conf.js\",\r\n            \"polyfills\": \"src/polyfills.ts\",\r\n            \"tsConfig\": \"src/tsconfig.spec.json\",\r\n            \"scripts\": [\r\n              \"node_modules/jquery/dist/jquery.min.js\",\r\n              \"src/vendor/pace/pace.min.js\",\r\n              \"node_modules/bootstrap/dist/js/bootstrap.min.js\",\r\n              \"src/assets/font/iconfont/iconfont.js\",\r\n              \"src/assets/twaver/t.js\",\r\n              \"src/assets/twaver/twaver.js\"\r\n            ],\r\n            \"styles\": [\r\n              \"node_modules/ng-zorro-antd/ng-zorro-antd.min.css\",\r\n              \"node_modules/bootstrap/dist/css/bootstrap.min.css\",\r\n              \"node_modules/font-awesome/css/font-awesome.min.css\",\r\n              \"node_modules/primeng/resources/primeng.css\",\r\n              \"node_modules/primeicons/primeicons.css\",\r\n              \"src/assets/styles/theme.scss\",\r\n              \"src/assets/styles/theme_v6.0.0.scss\",\r\n              \"src/assets/styles/styles.scss\",\r\n              \"src/assets/styles/styles.primeng.scss\",\r\n              \"src/assets/font/iconfont/iconfont.css\"\r\n            ],\r\n            \"assets\": [\r\n              \"src/assets\",\r\n              \"src/favicon.ico\",\r\n              \"src/manifest.json\",\r\n              {\r\n                \"glob\": \"**/*\",\r\n                \"input\": \"./node_modules/@ant-design/icons-angular/src/inline-svg/\",\r\n                \"output\": \"/assets/\"\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"lint\": {\r\n          \"builder\": \"@angular-devkit/build-angular:tslint\",\r\n          \"options\": {\r\n            \"tsConfig\": [\r\n              \"src/tsconfig.app.json\",\r\n              \"src/tsconfig.spec.json\",\r\n              \"tsconfig.worker.json\",\r\n              \"tsconfig.worker.json\"\r\n            ],\r\n            \"exclude\": []\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"tianzhu-spa-e2e\": {\r\n      \"root\": \"\",\r\n      \"sourceRoot\": \"\",\r\n      \"projectType\": \"application\",\r\n      \"architect\": {\r\n        \"e2e\": {\r\n          \"builder\": \"@angular-devkit/build-angular:protractor\",\r\n          \"options\": {\r\n            \"protractorConfig\": \"./protractor.conf.js\",\r\n            \"devServerTarget\": \"tianzhu-spa:serve\"\r\n          }\r\n        },\r\n        \"lint\": {\r\n          \"builder\": \"@angular-devkit/build-angular:tslint\",\r\n          \"options\": {\r\n            \"tsConfig\": [\r\n              \"e2e/tsconfig.e2e.json\"\r\n            ],\r\n            \"exclude\": []\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"defaultProject\": \"tianzhu-spa\",\r\n  \"schematics\": {\r\n    \"@schematics/angular:component\": {\r\n      \"prefix\": \"app\",\r\n      \"styleext\": \"css\"\r\n    },\r\n    \"@schematics/angular:directive\": {\r\n      \"prefix\": \"tz\"\r\n    }\r\n  }\r\n}\r\n","Url":"https://github.com/angular/angular-cli/issues/17365","RelatedDescription":"Open issue \"production build - 80% chunk modules optimization ModuleConcatenationPlugin takes too much time about 15 minutes\" (#17365)"},{"Id":"592200651","IsPullRequest":true,"CreatedAt":"2020-04-01T20:59:38","Actor":"clydin","Number":"17364","RawContent":null,"Title":"fix(@angular-devkit/build-optimizer): use TypeScript 3.6","State":"open","Body":"When used within the build optimizer, TypeScript 3.8 will consider certain imports to be unreferenced and errantly remove them even though they are used within the module.  This results in runtime errors during application load.  TypeScript 3.7 cannot be used due to it causing a build time error when used within the build optimizer.  The build optimizer uses an independent version of TypeScript which allows it to use TypeScript 3.6 while applications continue to use TypeScript 3.7 or 3.8 to build the actual application.\r\n\r\nFixes: #17320","Url":"https://github.com/angular/angular-cli/pull/17364","RelatedDescription":"Open PR \"fix(@angular-devkit/build-optimizer): use TypeScript 3.6\" (#17364)"},{"Id":"592197047","IsPullRequest":false,"CreatedAt":"2020-04-01T20:52:27","Actor":"michaelfaith","Number":"17363","RawContent":null,"Title":"Angular 9 (Ivy) App build with local library (mono-repo) failing","State":"open","Body":"<!--üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ\r\n\r\nOh hi there! üòÑ\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\nüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ-->\r\n\r\n\r\n# üêû Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ‚úçÔ∏èedit: -->\r\n\r\n- [ ] new\r\n- [x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\nHaven't tested in older version, so i'm unsure, but considering that this is Ivy related, i would imagine it is regression.\r\n\r\n### Description\r\n\r\nI have an Angular 9 app that i'm starting to move some of the components into a dedicated library project, which uses secondary entry points (trying to mimic Angular Material's approach).  Everything builds fine if i build both library and app with the Ivy compiler, but if i build both with the --prod flag (which causes the library to be built without Ivy), the app build fails with the following error:\r\n```\r\nCompiling @fabric/components/breadcrumbs : es2015 as esm2015\r\n\r\nERROR in node_modules/@fabric/components/breadcrumbs/fab-breadcrumbs.module.d.ts:1:22 - error NG6002: Appears in the NgModule.imports of AppModule, but could not be resolved to an NgModule class.\r\n\r\nThis likely means that the library (@fabric/components/breadcrumbs) which declares FabBreadcrumbsModule has not been processed correctly by ngcc, or is not compatible with Angular Ivy. Check if a newer version of the library is available, and update if s\r\no. Also consider checking with the library's authors to see if the library is expected to be compatible with Ivy.\r\n\r\n1 export declare class FabBreadcrumbsModule {\r\n                       ~~~~~~~~~~~~~~~~~~~~\r\n```\r\nI tried updating to the latest version (9.0.2 -> 9.1.0), but it's still doing the same thing.  I tried recreating this with a brand new super simple mono-repo project, but in that simple case it works fine.  I compared the tsconfig and angular.json config files between my app and the simple working app, but they're fairly identical.  As a last resort, i added `\"postinstall\": \"ngcc\"` to my root package.json, wiped out my library's folder in my node_modules dir, and re-ran npm install.  This forced ngcc to run on everything including my library.  After that, the app build worked as it should.  So it would seem that the app build isn't recognizing that the library build was done with viewEngine and kicking off the ngcc itself? \r\n\r\n\r\n## üî• Exception or Error\r\n<pre><code>\r\nCompiling @fabric/components/breadcrumbs : es2015 as esm2015\r\n\r\nERROR in node_modules/@fabric/components/breadcrumbs/fab-breadcrumbs.module.d.ts:1:22 - error NG6002: Appears in the NgModule.imports of AppModule, but could not be resolved to an NgModule class.\r\n\r\nThis likely means that the library (@fabric/components/breadcrumbs) which declares FabBreadcrumbsModule has not been processed correctly by ngcc, or is not compatible with Angular Ivy. Check if a newer version of the library is available, and update if s\r\no. Also consider checking with the library's authors to see if the library is expected to be compatible with Ivy.\r\n\r\n1 export declare class FabBreadcrumbsModule {\r\n                       ~~~~~~~~~~~~~~~~~~~~\r\n</code></pre>\r\n\r\n\r\n## üåç Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\nAngular CLI: 9.1.0\r\nNode: 12.13.0\r\nOS: win32 x64\r\n\r\nAngular: 9.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.901.0\r\n@angular-devkit/build-angular      0.901.0\r\n@angular-devkit/build-ng-packagr   0.901.0\r\n@angular-devkit/build-optimizer    0.901.0\r\n@angular-devkit/build-webpack      0.901.0\r\n@angular-devkit/core               9.1.0\r\n@angular-devkit/schematics         9.1.0\r\n@angular/cdk                       9.2.0\r\n@angular/material                  9.2.0\r\n@ngtools/webpack                   9.1.0\r\n@schematics/angular                9.1.0\r\n@schematics/update                 0.901.0\r\nng-packagr                         9.1.0\r\nrxjs                               6.5.4\r\ntypescript                         3.8.3\r\nwebpack                            4.42.0\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ‚úçÔ∏èIs this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ‚úçÔ∏èDo any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/17363","RelatedDescription":"Open issue \"Angular 9 (Ivy) App build with local library (mono-repo) failing\" (#17363)"},{"Id":"592045555","IsPullRequest":false,"CreatedAt":"2020-04-01T19:04:44","Actor":"DaniloPineda","Number":"17362","RawContent":null,"Title":"proxy.config.json support parameters","State":"closed","Body":"Good morning.\r\nAfter configuring the proxy, I  was able to succesfully call the api.\r\nthe request loos like this:  http://mydomain/jsonresponse.json\r\nHowever there's another endpoint I'd like to call but it has a parameter like this:\r\nhttp://mydomain/{id}/jsonresponse.json\r\n\r\nMy configurations looks like this:\r\n{    \r\n    \"/current/*\": {\r\n      \"target\": \"https://newdomain.com/\",\r\n      \"secure\": false,\r\n      \"pathRewrite\": {       \r\n        \"^/current\": \"/jsonresponse.json\",\r\n        \"^/id\": \"/jsonresponse.json\"\r\n      },\r\n        \"changeOrigin\": true\r\n      }      \r\n  }\r\n\r\nthe call from the service:\r\n    var url = `/${id}/id`;\r\n    this.http.get<ModelResponse>(url);   \r\n\r\nAs I mentioned the first request works but the second one doesn't.\r\nI appreciate any help or guidance, since I haven't been able to find support for it.","Url":"https://github.com/angular/angular-cli/issues/17362","RelatedDescription":"Closed issue \"proxy.config.json support parameters\" (#17362)"},{"Id":"591804404","IsPullRequest":true,"CreatedAt":"2020-04-01T10:24:53","Actor":"alan-agius4","Number":"17361","RawContent":null,"Title":"feat(@schematics/angular): evergreen new applications","State":"open","Body":"Differential loading is now opt-in for new applications. To enable differential loading add the supported non evergreen browsers in the browserslist configuration.","Url":"https://github.com/angular/angular-cli/pull/17361","RelatedDescription":"Open PR \"feat(@schematics/angular): evergreen new applications\" (#17361)"},{"Id":"591771833","IsPullRequest":false,"CreatedAt":"2020-04-01T09:33:06","Actor":"luckynick","Number":"17360","RawContent":null,"Title":"@angular-devkit/build-angular internal Webpack warnings","State":"open","Body":"\r\n# üêû Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ‚úçÔ∏èedit: -->\r\n\r\n- [ ] new\r\n- [X] build\r\n- [x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\nThe problem also was in NG7. I hoped it would be gone in NG9, but it is still there.\r\n\r\n### Description\r\n\r\nThere are lots of warnings when running ng build or ng serve. Looks like built-in Webpack of @angular-devkit/build-angular tries to process files which it shouldn't touch at all (like those in 'CVS' folder, which are used only by our version control system). Warnings reappear after each code recompilation. Such big amount of warning makes it problematic to track relevant errors of an application, in a way that quality of the development process gets worse.\r\n\r\nSee example of warnings:\r\n[warnings.log](https://github.com/angular/angular-cli/files/4414154/warnings.log)\r\n\r\n\r\n## üî¨ Minimal Reproduction\r\n\r\nCould be useful:\r\n- I use require() in one of the @ Injectable()\r\n\r\nCommand: ng serve\r\n\r\nPackages:\r\n<pre><code>\r\n\"dependencies\": {\r\n    \"@angular-material-extensions/password-strength\": \"^6.0.0\",\r\n    \"@angular/animations\": \"^9.1.0\",\r\n    \"@angular/cdk\": \"^9.2.0\",\r\n    \"@angular/common\": \"^9.1.0\",\r\n    \"@angular/compiler\": \"^9.1.0\",\r\n    \"@angular/core\": \"^9.1.0\",\r\n    \"@angular/flex-layout\": \"^9.0.0-beta.29\",\r\n    \"@angular/forms\": \"^9.1.0\",\r\n    \"@angular/material\": \"^9.2.0\",\r\n    \"@angular/platform-browser\": \"^9.1.0\",\r\n    \"@angular/platform-browser-dynamic\": \"^9.1.0\",\r\n    \"@angular/platform-server\": \"^9.1.0\",\r\n    \"@angular/router\": \"^9.1.0\",\r\n    \"@kolkov/ngx-gallery\": \"^1.0.11\",\r\n    \"@material-extended/mde\": \"^3.0.0\",\r\n    \"@ngmodule/material-carousel\": \"^0.6.0\",\r\n    \"@nguniversal/express-engine\": \"^9.0.2\",\r\n    \"bootstrap\": \"^4.3.1\",\r\n    \"byots\": \"2.9.0-dev.20180411.1.10\",\r\n    \"cheerio\": \"^1.0.0-rc.3\",\r\n    \"click-outside-handling\": \"0.0.2\",\r\n    \"compression\": \"^1.7.4\",\r\n    \"core-js\": \"^2.6.5\",\r\n    \"domino\": \"^2.1.3\",\r\n    \"express\": \"^4.15.2\",\r\n    \"file-system\": \"^2.2.2\",\r\n    \"font-awesome\": \"^4.7.0\",\r\n    \"jquery\": \"^3.4.1\",\r\n    \"material-design-icons\": \"^3.0.1\",\r\n    \"ngx-toastr\": \"^12.0.0\",\r\n    \"primeicons\": \"^1.0.0-beta.10\",\r\n    \"regexp-replace-loader\": \"^1.0.1\",\r\n    \"routing-tools\": \"0.0.6\",\r\n    \"rxjs\": \"^6.5.2\",\r\n    \"rxjs-compat\": \"^6.5.2\",\r\n    \"tslib\": \"^1.10.0\",\r\n    \"zone.js\": \"~0.10.2\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"~0.901.0\",\r\n    \"@angular/cli\": \"^9.1.0\",\r\n    \"@angular/compiler-cli\": \"^9.1.0\",\r\n    \"@nguniversal/builders\": \"^9.0.2\",\r\n    \"@types/express\": \"^4.17.0\",\r\n    \"@types/jasmine\": \"2.8.8\",\r\n    \"@types/node\": \"^12.11.1\",\r\n    \"angular-ide\": \"^0.9.73\",\r\n    \"codelyzer\": \"^5.1.2\",\r\n    \"jasmine-core\": \"^3.4.0\",\r\n    \"jasmine-spec-reporter\": \"~4.2.1\",\r\n    \"karma\": \"^3.0.0\",\r\n    \"karma-chrome-launcher\": \"~2.2.0\",\r\n    \"karma-cli\": \"~1.0.1\",\r\n    \"karma-coverage-istanbul-reporter\": \"^2.0.5\",\r\n    \"karma-firefox-launcher\": \"^1.1.0\",\r\n    \"karma-ie-launcher\": \"^1.0.0\",\r\n    \"karma-jasmine\": \"^2.0.1\",\r\n    \"karma-jasmine-html-reporter\": \"^1.4.2\",\r\n    \"protractor\": \"~5.4.0\",\r\n    \"ts-loader\": \"^5.2.0\",\r\n    \"ts-node\": \"~7.0.0\",\r\n    \"tslint\": \"~5.11.0\",\r\n    \"typescript\": \"^3.8.3\",\r\n    \"webpack-cli\": \"^3.3.2\"\r\n  }\r\n</pre></code>\r\n\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. \r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## üî• Exception or Error\r\nFirst kind:\r\n<pre><code>\r\nWARNING in ./src/app/CVS/Entries 2:29\r\nModule parse failed: Unexpected token (2:29)\r\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\r\n| D/alter_css////\r\n> /app.component.html/1.11/Thu Jul 18 14:40:08 2019//\r\n| /app.component.scss/1.15/Tue Mar 31 11:52:45 2020//\r\n| /app.component.ts/1.17/Fri Mar 27 12:38:44 2020//\r\n</code></pre>\r\nSecond kind:\r\n<pre><code>\r\nWARNING in ./src/app/app.component.scss\r\nModule build failed (from ./node_modules/sass-loader/dist/cjs.js):\r\nSassError: Undefined variable.\r\n  ‚ï∑\r\n9 ‚îÇ $primary-color: mat-color($candy-app-primary) !default;\r\n  ‚îÇ                           ^^^^^^^^^^^^^^^^^^\r\n  ‚ïµ\r\n  C:\\Users\\Mykyta\\Workspaces\\Angular IDE\\WebShopClientSSR\\src\\app\\app.component.scss 9:27  root stylesheet\r\n</code></pre>\r\nThird kind:\r\n<pre><code>\r\nWARNING in ./src/app/app.server.module.ts\r\nModule build failed (from ./node_modules/@ngtools/webpack/src/index.js):\r\nError: C:\\Users\\Mykyta\\Workspaces\\Angular IDE\\WebShopClientSSR\\src\\app\\app.server.module.ts is missing from the TypeScript compilation. Please make sure it is in your tsconfig via the 'files' or 'include' property.\r\n    at AngularCompilerPlugin.getCompiledFile (C:\\Users\\Mykyta\\Workspaces\\Angular IDE\\WebShopClientSSR\\node_modules\\@ngtools\\webpack\\src\\angular_compiler_plugin.js:933:23)\r\n    at plugin.done.then (C:\\Users\\Mykyta\\Workspaces\\Angular IDE\\WebShopClientSSR\\node_modules\\@ngtools\\webpack\\src\\loader.js:41:31)\r\n    at process._tickCallback (internal/process/next_tick.js:68:7)\r\n</code></pre>\r\n\r\n\r\n## üåç Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ‚úçÔ∏è-->\r\n\r\nAngular CLI: 9.1.0\r\nNode: 10.16.2\r\nOS: win32 x64\r\n\r\nAngular: 9.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, platform-server\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.901.0\r\n@angular-devkit/build-angular     0.901.0\r\n@angular-devkit/build-optimizer   0.901.0\r\n@angular-devkit/build-webpack     0.901.0\r\n@angular-devkit/core              9.1.0\r\n@angular-devkit/schematics        9.1.0\r\n@angular/cdk                      9.2.0\r\n@angular/flex-layout              9.0.0-beta.29\r\n@angular/material                 9.2.0\r\n@ngtools/webpack                  9.1.0\r\n@nguniversal/builders             9.1.0\r\n@nguniversal/common               9.1.0\r\n@nguniversal/express-engine       9.1.0\r\n@schematics/angular               9.1.0\r\n@schematics/update                0.901.0\r\nrxjs                              6.5.4\r\ntypescript                        3.8.3\r\nwebpack                           4.42.0\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ‚úçÔ∏èIs this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ‚úçÔ∏èDo any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/17360","RelatedDescription":"Open issue \"@angular-devkit/build-angular internal Webpack warnings\" (#17360)"},{"Id":"591302900","IsPullRequest":false,"CreatedAt":"2020-04-01T09:31:40","Actor":"benbotto","Number":"17353","RawContent":null,"Title":"\"types\" not used as a synonym for \"typings\" in package.json","State":"closed","Body":"# üêû Bug report\r\n\r\n### Command (mark with an `x`)\r\n- [ ] new\r\n- [ x] build\r\n- [ ] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\nNo, at least not that I'm aware of.\r\n\r\n### Description\r\nI'm using a third-party module and that module's package.json file has a \"types\" attribute instead of \"typings.\"  When I do a production build, `ng build --prod`, I get a module resolution error: \"Field 'browser' doesn't contain a valid alias configuration.\"  If I manually change \"types\" to \"typings\" in the module's package.json, per the [Angular Package Format](https://docs.google.com/document/d/1CZC2rcpxffTDfRDs6p1cfbmKNLA6x5O-NtkJglDaBVs/preview#heading=h.k0mh3o8u5hx) then the error goes away.\r\n\r\nThe [TypeScript documentation](https://www.typescriptlang.org/docs/handbook/declaration-files/publishing.html) states that \"the 'typings' field is synonymous with 'types.'\"\r\n\r\n## üî¨ Minimal Reproduction\r\nI've created a StackBlitz that reproduces the issue.  I've added one third-party dependency, @stripe/stripe-js, and exposed that modules `loadStripe` method as a provider in `app.module.ts`.\r\n\r\n- Download the following project from StackBlitz: https://stackblitz.com/edit/angular-kezmsy?file=src%2Fapp%2Fapp.module.ts\r\n- Extract the zip file: `unzip angular-kezmsy.zip`\r\n- Install dependencies: `npm i`\r\n- Do a production build: `npm run build -- --prod`\r\n\r\n## üî• Exception or Error\r\n<pre><code>\r\nERROR in ./src/app/app.module.ngfactory.js\r\nModule not found: Error: Can't resolve '@stripe/stripe-js/types/index' in '/home/<redacted>/Downloads/angular-kezmsy/src/app'\r\n</code></pre>\r\n\r\n\r\n## üåç Your Environment\r\n<pre><code>\r\nAngular CLI: 7.0.7\r\nNode: 10.16.3\r\nOS: linux x64\r\nAngular: 8.2.14\r\n... common, compiler, core, forms, platform-browser\r\n... platform-browser-dynamic, router\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.10.7\r\n@angular-devkit/build-angular     0.10.7\r\n@angular-devkit/build-optimizer   0.10.7\r\n@angular-devkit/build-webpack     0.10.7\r\n@angular-devkit/core              7.0.7\r\n@angular-devkit/schematics        7.0.7\r\n@angular/cli                      7.0.7\r\n@angular/compiler-cli             7.0.4\r\n@angular/language-service         7.0.4\r\n@ngtools/webpack                  7.0.7\r\n@schematics/angular               7.0.7\r\n@schematics/update                0.10.7\r\nrxjs                              6.5.4\r\ntypescript                        3.1.6\r\nwebpack                           4.19.1\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\nThe error also goes away if I remove the `loadStripe` provider that I've added in `app.module.ts`, but that makes it difficult to test.\r\n\r\nThe error did not surface during development, i.e. while service the app via `ng serve`.\r\n\r\nThe error does not crop up during a non-prod build--`npm run build` works fine--so I suspect it has to do with aot.\r\n\r\nThe module that I'm using is @stripe/stripe-js.  Here's the package.json file: https://github.com/stripe/stripe-js/blob/v1.2.0/package.json#L8  Note that on line 8 \"types\" is used instead of \"typings.\"\r\n\r\nI asked a question about this on SO and it has some additional context: https://stackoverflow.com/questions/60940657/angular-8-and-stripe-js-v3s-loadstripe-module-not-found-error-cant-resolve\r\n\r\n<!-- ‚úçÔ∏èDo any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/17353","RelatedDescription":"Closed issue \"\"types\" not used as a synonym for \"typings\" in package.json\" (#17353)"},{"Id":"591552777","IsPullRequest":false,"CreatedAt":"2020-04-01T09:05:29","Actor":"thanhtuyenpkk","Number":"17354","RawContent":null,"Title":"92% chunk asset optimization terserpluginkilled","State":"closed","Body":"Hello every body,\r\nI use thi command to buil my application \r\n` node --max_old_space_size=8192 node_modules/@angular/cli/bin/ng build --prod`\r\nbut it not build success it return this message \r\n`92% chunk asset optimization terserpluginkilled`\r\nHow to fix it? \r\nAnd what is max_old_space_size?\r\nThanks you","Url":"https://github.com/angular/angular-cli/issues/17354","RelatedDescription":"Closed issue \"92% chunk asset optimization terserpluginkilled\" (#17354)"},{"Id":"591631894","IsPullRequest":false,"CreatedAt":"2020-04-01T09:05:11","Actor":"tqfgithub","Number":"17357","RawContent":null,"Title":"set the following environment variable","State":"closed","Body":"helloÔºåhow should i  set the following environment variable NG_BUILD_PROFILING=1\r\n","Url":"https://github.com/angular/angular-cli/issues/17357","RelatedDescription":"Closed issue \"set the following environment variable\" (#17357)"},{"Id":"590143715","IsPullRequest":true,"CreatedAt":"2020-04-01T09:02:23","Actor":"alan-agius4","Number":"17339","RawContent":null,"Title":"fix(@angular/cli): normalize yarnrc/npmrc options","State":"closed","Body":"Closes #17314 and closes #16615","Url":"https://github.com/angular/angular-cli/pull/17339","RelatedDescription":"Closed or merged PR \"fix(@angular/cli): normalize yarnrc/npmrc options\" (#17339)"},{"Id":"591750236","IsPullRequest":true,"CreatedAt":"2020-04-01T09:01:26","Actor":"alan-agius4","Number":"17359","RawContent":null,"Title":"fix(@angular/cli): downgrade pacote to 9.5.12","State":"open","Body":"Closes #17314 and closes #16615\r\n\r\nPatch version of https://github.com/angular/angular-cli/pull/17358","Url":"https://github.com/angular/angular-cli/pull/17359","RelatedDescription":"Open PR \"fix(@angular/cli): downgrade pacote to 9.5.12\" (#17359)"},{"Id":"591749113","IsPullRequest":true,"CreatedAt":"2020-04-01T08:59:54","Actor":"alan-agius4","Number":"17358","RawContent":null,"Title":"fix(@angular/cli): downgrade pacote to 9.5.12","State":"open","Body":"Closes #17314 and closes #16615","Url":"https://github.com/angular/angular-cli/pull/17358","RelatedDescription":"Open PR \"fix(@angular/cli): downgrade pacote to 9.5.12\" (#17358)"},{"Id":"591629597","IsPullRequest":true,"CreatedAt":"2020-04-01T05:14:57","Actor":"renovate[bot]","Number":"17356","RawContent":null,"Title":"build: update uuid to version 7.0.3","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [uuid](https://togithub.com/uuidjs/uuid) | dependencies | patch | [`7.0.2` -> `7.0.3`](https://renovatebot.com/diffs/npm/uuid/7.0.2/7.0.3) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>uuidjs/uuid</summary>\n\n### [`v7.0.3`](https://togithub.com/uuidjs/uuid/blob/master/CHANGELOG.md#&#8203;703-httpsgithubcomuuidjsuuidcomparev702v703-2020-03-31)\n\n[Compare Source](https://togithub.com/uuidjs/uuid/compare/v7.0.2...v7.0.3)\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/17356","RelatedDescription":"Open PR \"build: update uuid to version 7.0.3\" (#17356)"},{"Id":"591629461","IsPullRequest":true,"CreatedAt":"2020-04-01T05:14:40","Actor":"renovate[bot]","Number":"17355","RawContent":null,"Title":"build: update @types/babel__core to version 7.1.7","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@types/babel__core](https://togithub.com/DefinitelyTyped/DefinitelyTyped) | devDependencies | patch | [`7.1.6` -> `7.1.7`](https://renovatebot.com/diffs/npm/@types%2fbabel__core/7.1.6/7.1.7) |\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/17355","RelatedDescription":"Open PR \"build: update @types/babel__core to version 7.1.7\" (#17355)"},{"Id":"591157991","IsPullRequest":true,"CreatedAt":"2020-03-31T14:30:19","Actor":"alan-agius4","Number":"17352","RawContent":null,"Title":"feat(@schematics/angular): enable lazy loading on the server for new projects","State":"open","Body":"\r\n\r\nWith this change, lazy-loading on the server becomes enabled out of the box for new projects. This is because webpack will only split ES6 imports into separate chunks. However when using commonjs all lazy loaded paths will be concatenated into the main.js file.","Url":"https://github.com/angular/angular-cli/pull/17352","RelatedDescription":"Open PR \"feat(@schematics/angular): enable lazy loading on the server for new projects\" (#17352)"},{"Id":"591107938","IsPullRequest":false,"CreatedAt":"2020-03-31T14:01:15","Actor":"dtslvr","Number":"17350","RawContent":null,"Title":"No chunks for lazy-loaded modules generated","State":"closed","Body":"# üêû Bug report\r\n\r\n### Command\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ‚úçÔ∏èedit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\nNo.\r\n\r\n### Description\r\n\r\nAngular CLI does not create chunks for lazy-loaded modules defined in `app-router.module.ts`:\r\n\r\n<pre>\r\n<code>\r\nconst routes: Routes = [\r\n  {\r\n    path: 'home',\r\n    loadChildren: () =>\r\n      import('./app/page/home/home.module').then((m) => m.SmdHomeModule)\r\n  },\r\n  {\r\n    path: 'test',\r\n    loadChildren: () =>\r\n      import('./app/page/test/test.module').then((m) => m.SmdTestModule)\r\n  }\r\n];\r\n</code>\r\n</pre>\r\n\r\n## üî¨ Minimal Reproduction\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. \r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n1. Checkout the repository with the test app: https://github.com/dtslvr/angular-9-test-app\r\n2. Run `yarn` to install the dependencies\r\n3. Run `yarn start` to start the test app\r\n\r\n## üî• Exception or Error\r\n<pre>\r\n<code>\r\nchunk {main} main.js, main.js.map (main) 20.4 kB [initial] [rendered]\r\nchunk {polyfills} polyfills.js, polyfills.js.map (polyfills) 141 kB [initial] [rendered]\r\nchunk {runtime} runtime.js, runtime.js.map (runtime) 6.15 kB [entry] [rendered]\r\nchunk {vendor} vendor.js, vendor.js.map (vendor) 2.99 MB [initial] [rendered]\r\n</code>\r\n</pre>\r\n\r\nBut there are no chunks for `home` or `test`.\r\n\r\n## üåç Your Environment\r\n<pre>\r\n<code>\r\nAngular CLI: 9.1.0\r\nNode: 13.3.0\r\nOS: darwin x64\r\n\r\nAngular: 9.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... platform-browser, platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.901.0\r\n@angular-devkit/build-angular     0.901.0\r\n@angular-devkit/build-optimizer   0.901.0\r\n@angular-devkit/build-webpack     0.901.0\r\n@angular-devkit/core              9.1.0\r\n@angular-devkit/schematics        9.1.0\r\n@ngtools/webpack                  9.1.0\r\n@schematics/angular               9.1.0\r\n@schematics/update                0.901.0\r\nrxjs                              6.5.4\r\ntypescript                        3.8.3\r\nwebpack                           4.42.0\r\n</code>\r\n</pre>\r\n\r\n**Anything else relevant?**\r\nNo.\r\n","Url":"https://github.com/angular/angular-cli/issues/17350","RelatedDescription":"Closed issue \"No chunks for lazy-loaded modules generated\" (#17350)"},{"Id":"591112453","IsPullRequest":false,"CreatedAt":"2020-03-31T13:31:39","Actor":"naraklearn","Number":"17351","RawContent":null,"Title":"ng build --prod does not generate consistent hashes on different machines when run with same code base","State":"open","Body":"### Versions\r\nangular : 8.2 & 9.1\r\nangular-cli: 8.3 & 9.1\r\nOS: windows 7 & 10 64bit\r\n\r\n### Repro steps\r\nCreate a site with ng new\r\nAdd a lazy path with loadChildren\r\nng build --prod\r\nUse same source code in differnt machine\r\nng build --prod\r\ncompare these two dist with same source code(no change)\r\n\r\n### Observed behavior\r\nSame issue occurred in angular V8.2 & 9.1 versions(attached screenshot of differences in hashes for same source code). Currently production build is in angular 8.2\r\n1)\tWhen run in different drives in same machine with same source code, Every time production build happens the hashes in the chunks does not change as no change in the source code ‚Äì working as expected\r\n2)\twhen run in different computer machine with same source code, production build happens the hashes in the chunks changes when comparing between dist in windows 7 and dist in windows 9 though there is no changes in source code.\r\n\r\n### Desired behavior\r\nwhen run in different computer machine with same source code, Every --prod build should not change the hashes in the chunks  because no change made in existing code base.\r\n\r\n\r\nwhat is recommended way to achieve desired behavior? \r\n\r\nif customizing the angular-cli/webpack package is alternate approach, what is the recommended options?\r\nangular 8.2 dist comparison:\r\n![image](https://user-images.githubusercontent.com/62874238/78031638-7179bb00-7381-11ea-8693-269b8b6225c1.png)\r\nAngular 9.1 dist comparison:\r\n![image](https://user-images.githubusercontent.com/62874238/78031684-822a3100-7381-11ea-95f3-7fab35d60cad.png)\r\n","Url":"https://github.com/angular/angular-cli/issues/17351","RelatedDescription":"Open issue \"ng build --prod does not generate consistent hashes on different machines when run with same code base\" (#17351)"},{"Id":"590800796","IsPullRequest":true,"CreatedAt":"2020-03-31T05:14:04","Actor":"renovate[bot]","Number":"17349","RawContent":null,"Title":"build: update terser to version 4.6.10","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [terser](https://terser.org) ([source](https://togithub.com/terser/terser)) | dependencies | patch | [`4.6.7` -> `4.6.10`](https://renovatebot.com/diffs/npm/terser/4.6.7/4.6.10) |\n\n---\n\n### Release Notes\n\n<details>\n<summary>terser/terser</summary>\n\n### [`v4.6.10`](https://togithub.com/terser/terser/blob/master/CHANGELOG.md#v4610)\n\n[Compare Source](https://togithub.com/terser/terser/compare/v4.6.9...v4.6.10)\n\n-   Do not use reduce_vars when classes are present\n\n### [`v4.6.9`](https://togithub.com/terser/terser/blob/master/CHANGELOG.md#v469)\n\n[Compare Source](https://togithub.com/terser/terser/compare/v4.6.8...v4.6.9)\n\n-   Check if block scopes actually exist in blocks\n\n### [`v4.6.8`](https://togithub.com/terser/terser/blob/master/CHANGELOG.md#v468)\n\n[Compare Source](https://togithub.com/terser/terser/compare/v4.6.7...v4.6.8)\n\n-   Take into account \"executed bits\" of classes like static properties or computed keys, when checking if a class evaluation might throw or have side effects.\n\n</details>\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/17349","RelatedDescription":"Open PR \"build: update terser to version 4.6.10\" (#17349)"},{"Id":"590800627","IsPullRequest":true,"CreatedAt":"2020-03-31T05:13:45","Actor":"renovate[bot]","Number":"17348","RawContent":null,"Title":"build: update angular packages","State":"open","Body":"This PR contains the following updates:\n\n| Package | Type | Update | Change |\n|---|---|---|---|\n| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | [`83ac2e0` -> `beca679`](https://renovatebot.com/diffs/npm/angular%2fanimations-builds//) |\n| [@angular/cdk](https://togithub.com/angular/cdk-builds) | dependencies | digest | [`d8905b3` -> `ddb61a4`](https://renovatebot.com/diffs/npm/angular%2fcdk-builds//) |\n| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | [`1e65621` -> `15e2d43`](https://renovatebot.com/diffs/npm/angular%2fcommon-builds//) |\n| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | [`6bdc2b5` -> `4dce467`](https://renovatebot.com/diffs/npm/angular%2fcompiler-builds//) |\n| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | [`1336ad7` -> `368b24b`](https://renovatebot.com/diffs/npm/angular%2fcompiler-cli-builds//) |\n| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | [`ab7a963` -> `98447cb`](https://renovatebot.com/diffs/npm/angular%2fcore-builds//) |\n| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | [`796e460` -> `9ecddd7`](https://renovatebot.com/diffs/npm/angular%2fforms-builds//) |\n| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | [`e4c45a0` -> `c640e37`](https://renovatebot.com/diffs/npm/angular%2flanguage-service-builds//) |\n| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | [`00aca0c` -> `e890aff`](https://renovatebot.com/diffs/npm/angular%2flocalize-builds//) |\n| [@angular/material](https://togithub.com/angular/material2-builds) | dependencies | digest | [`261ff75` -> `ff400ae`](https://renovatebot.com/diffs/npm/angular%2fmaterial2-builds//) |\n| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | [`2f6d4dd` -> `0fe5a90`](https://renovatebot.com/diffs/npm/angular%2fplatform-browser-builds//) |\n| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | [`609599d` -> `42a929a`](https://renovatebot.com/diffs/npm/angular%2fplatform-browser-dynamic-builds//) |\n| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | [`f4b8346` -> `77dcad6`](https://renovatebot.com/diffs/npm/angular%2fplatform-server-builds//) |\n| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | [`3dea8bb` -> `4b9e484`](https://renovatebot.com/diffs/npm/angular%2frouter-builds//) |\n\n:abcd: If you wish to disable git hash updates, add `\":disableDigestUpdates\"` to the extends array in your config.\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: \"after 10pm every weekday,before 4am every weekday,every weekend\" in timezone America/Tijuana.\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:ghost: **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/config-help/issues) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).","Url":"https://github.com/angular/angular-cli/pull/17348","RelatedDescription":"Open PR \"build: update angular packages\" (#17348)"},{"Id":"590740527","IsPullRequest":false,"CreatedAt":"2020-03-31T02:36:46","Actor":"crysislinux","Number":"17347","RawContent":null,"Title":"property shorthand usage for animations cause errors in production build","State":"open","Body":"# üêû Bug report\r\n\r\n### Command (mark with an `x`)\r\n\r\n- [ ] new\r\n- [x] build\r\n\r\n\r\n### Is this a regression?\r\nYes\r\n\r\nOur code ran without problem with `--prod` build flag in angular 7.\r\n\r\nBut now it fails with the same flag in angular 9 with ivy enabled.\r\n\r\n\r\n### Description\r\n\r\nWe have some shared `animations` definitions like this:\r\n\r\n*animations.ts*\r\n```ts\r\nimport { trigger, transition, style, group, animate } from '@angular/animations';\r\n\r\nexport const animations = [\r\n  trigger('expandIn', [\r\n    transition(':enter', [\r\n      style({\r\n        overflow: 'hidden',\r\n        height: 0,\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n        marginTop: 0,\r\n        marginBottom: 0,\r\n        opacity: 0\r\n      }),\r\n      group([\r\n        animate('500ms cubic-bezier(0.23, 1, 0.32, 1)', style({\r\n          height: '*', paddingTop: '*', paddingBottom: '*', marginTop: '*', marginBottom: '*', transform: 'translateZ(0)'\r\n        })),\r\n        animate('250ms cubic-bezier(0.23, 1, 0.32, 1)', style({ opacity: 1 }))\r\n      ])\r\n    ]),\r\n  ]),\r\n];\r\n```\r\nthe animations are defined in a separate file `animations.ts`. And then it's referenced like this:\r\n\r\n```ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { animations } from './animations';\r\n\r\n@Component({\r\n  selector: 'app-notlazycomp',\r\n  templateUrl: './notlazycomp.component.html',\r\n  styleUrls: ['./notlazycomp.component.scss'],\r\n  animations,  // notice this property shorthand syntax\r\n})\r\nexport class NotLazycompComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n\r\n```\r\n\r\nThose codes look good to me and they works in `Angular 7`. Now with `Angular 9`, the production build will throw runtime error:\r\n\r\n![image](https://user-images.githubusercontent.com/5404597/77979305-e247b580-7336-11ea-87b4-6fb169d342b9.png)\r\n\r\nI have found 3 ways to workaround it:\r\n\r\n1. disable ivy with `\"enableIvy\": false,`\r\n2. set `\"optimization\": false,` in production configuration (`aot` and `buildOptimizer` can still be `true`) \r\n3. abandon  `property shorthand` for `animations` property, just change to `animations: animations` also fixes the problem.\r\n\r\nWe went with option 3 but it looks confusing why valid typescript code doesn't work and the linter even tell me to use `property shorthand`. It's fine to be a compilation error but unacceptable to be a runtime error only.\r\n\r\n## üî¨ Minimal Reproduction\r\n\r\n1. clone repo:  https://github.com/crysislinux/angular9-prod-build-runtime-error\r\n2. `npm run build` to create production build\r\n3. `http-server  dist/angular9-ext -p 4200`\r\n4.  visit http://localhost:4200/\r\n\r\nYou should see some error messages in the console.\r\n\r\n5. switch `optimization` from `true` to false in `angular.json` line `43`\r\n6. repeat step `2` to `4`\r\n\r\nNow it loads without problem.\r\n\r\n7. switch `optimization` from `false` to `true`\r\n8. repeat step `2` to `4`\r\n\r\nNow you should see the problem again\r\n\r\n9. edit `src/app/notlazy/notlazycomp/notlazycomp.component.ts`, change line 8 from `animations,` to `animations: animations,`\r\n10. repeat step `2` to `4`\r\n\r\nNow it loads without problem.\r\n\r\nTurn off ivy also fix the problem but I have a lazy load route in the repo so it may not work. By the way, this problem also breaks the lazy loading if there is the same `animations` property shorthand usage in the lazy loaded module.\r\n\r\n## üî• Exception or Error\r\n![image](https://user-images.githubusercontent.com/5404597/77979305-e247b580-7336-11ea-87b4-6fb169d342b9.png)\r\n\r\n\r\n## üåç Your Environment\r\n<pre><code>\r\nAngular CLI: 9.1.0\r\nNode: 10.16.0\r\nOS: darwin x64\r\n\r\nAngular: 9.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.901.0\r\n@angular-devkit/build-angular     0.901.0\r\n@angular-devkit/build-optimizer   0.901.0\r\n@angular-devkit/build-webpack     0.901.0\r\n@angular-devkit/core              9.1.0\r\n@angular-devkit/schematics        9.1.0\r\n@ngtools/webpack                  9.1.0\r\n@schematics/angular               9.1.0\r\n@schematics/update                0.901.0\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.42.0\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n\r\nN/A","Url":"https://github.com/angular/angular-cli/issues/17347","RelatedDescription":"Open issue \"property shorthand usage for animations cause errors in production build\" (#17347)"},{"Id":"590427873","IsPullRequest":true,"CreatedAt":"2020-03-30T23:15:03","Actor":"alan-agius4","Number":"17344","RawContent":null,"Title":"refactor(@ngtools/webpack): deprecate i18n options","State":"closed","Body":"","Url":"https://github.com/angular/angular-cli/pull/17344","RelatedDescription":"Closed or merged PR \"refactor(@ngtools/webpack): deprecate i18n options\" (#17344)"},{"Id":"590077476","IsPullRequest":true,"CreatedAt":"2020-03-30T23:13:07","Actor":"alan-agius4","Number":"17336","RawContent":null,"Title":"fix(@angular/cli):  allow configuration options in `ng deploy`","State":"closed","Body":"fix(@angular/cli):  allow configuration option in `ng deploy`\r\n\r\nPreviously we only allowed `--project` and `--help` as a valid options. With this change we also allow `--configuration`\r\n\r\nFixes #17332","Url":"https://github.com/angular/angular-cli/pull/17336","RelatedDescription":"Closed or merged PR \"fix(@angular/cli):  allow configuration options in `ng deploy`\" (#17336)"},{"Id":"590495632","IsPullRequest":false,"CreatedAt":"2020-03-30T18:34:24","Actor":"Lonli-Lokli","Number":"17345","RawContent":null,"Title":"Lint + ng serve","State":"closed","Body":"<!--üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ\r\n\r\n# üöÄ Feature request\r\n\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are relevant for this feature request? -->\r\n<!-- ‚úçÔ∏èedit: -->\r\n- [ ] new\r\n- [ ] build\r\n- [x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [x] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n### Description\r\nProvide an ability to runinting during ng serve via option or hook\r\n\r\n\r\n### Describe the solution you'd like\r\n\r\nIt might be option ng serve --lint\r\n\r\nAlso it's possible with pure Webpack build of angular, which Angular CLI use under the hood.\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/17345","RelatedDescription":"Closed issue \"Lint + ng serve\" (#17345)"},{"Id":"590138857","IsPullRequest":false,"CreatedAt":"2020-03-30T18:02:00","Actor":"ofirrifo","Number":"17338","RawContent":null,"Title":"Custom path in tsconfig for multiple project stop work as should after upgrade to Angular 9 ","State":"closed","Body":"# üêû bug report\r\n\r\n### Is this a regression?\r\nWith Angular 8 it work as should\r\nNow after I upgrade it not work\r\n\r\n### Description\r\nI'm using angular cli with multiple project.\r\nAfter I follow the Angular Update Guide I start to get `ts2307 cannot find module '@app....'`\r\n\r\nMy tsconfig.json (projects/portal/tsconfig.app.json)\r\n\r\n```\r\n{\r\n  \"extends\": \"../../tsconfig.json\",\r\n  \"compilerOptions\": {\r\n    \"baseUrl\": \"src\",\r\n    \"outDir\": \"../../out-tsc/app\",\r\n    \"types\": [],\r\n    \"paths\": {\r\n      \"@app/*\": [\r\n        \"app/*\"\r\n      ],\r\n      \"@env/*\": [\r\n        \"environments/*\"\r\n      ],\r\n      \"@sol/*\": [\r\n        \"../../shared-lib/src/lib/*\"\r\n      ]\r\n    }\r\n  },\r\n  \"files\": [\r\n    \"src/main.ts\",\r\n    \"src/polyfills.ts\"\r\n  ],\r\n  \"include\": [\r\n    \"projects/admin-portal/src/**/*.d.ts\"\r\n  ]\r\n}\r\n\r\n```\r\n\r\nIt used to work before the upgrade.\r\nPlease let me know how to handle it.\r\nThanks :)\r\n\r\n\r\n## üî• Exception or Error\r\n<pre><code>\r\nFor all the imports that I'm using with shortened path prefix '@app/...'\r\nIm geting this error:\r\nts2307 cannot find module '@app....'\r\n</code></pre>\r\n\r\n\r\n## üåç  Your Environment\r\n\r\n**Angular Version:**\r\n<pre><code>\r\n\r\nAngular CLI: 9.1.0\r\nNode: 12.3.1\r\nOS: darwin x64\r\n\r\nAngular: 9.1.0\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, platform-browser, platform-browser-dynamic\r\n... platform-server, router, service-worker\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.901.0\r\n@angular-devkit/build-angular     0.901.0\r\n@angular-devkit/build-optimizer   0.901.0\r\n@angular-devkit/build-webpack     0.901.0\r\n@angular-devkit/core              9.1.0\r\n@angular-devkit/schematics        9.1.0\r\n@angular-devkit/schematics-cli    0.803.25\r\n@angular/cdk                      9.2.0\r\n@angular/material                 9.2.0\r\n@ngtools/webpack                  9.1.0\r\n@nguniversal/express-engine       8.2.6\r\n@schematics/angular               9.1.0\r\n@schematics/schematics            0.803.25\r\n@schematics/update                0.901.0\r\nrxjs                              6.5.4\r\ntypescript                        3.8.3\r\nwebpack                           4.42.0\r\n\r\n\r\n</code></pre>\r\n\r\n","Url":"https://github.com/angular/angular-cli/issues/17338","RelatedDescription":"Closed issue \"Custom path in tsconfig for multiple project stop work as should after upgrade to Angular 9 \" (#17338)"},{"Id":"590289576","IsPullRequest":true,"CreatedAt":"2020-03-30T17:25:01","Actor":"soyuka","Number":"17341","RawContent":null,"Title":"Log stack trace on error","State":"closed","Body":"As it's done on lib/cli/index.js, very useful in case of errors as the message is almost never sufficient.","Url":"https://github.com/angular/angular-cli/pull/17341","RelatedDescription":"Closed or merged PR \"Log stack trace on error\" (#17341)"},{"Id":"590108250","IsPullRequest":true,"CreatedAt":"2020-03-30T17:23:53","Actor":"alan-agius4","Number":"17337","RawContent":null,"Title":"fix(@angular-devkit/build-angular): don't show commonjs usage for web‚Ä¶","State":"closed","Body":"‚Ä¶pack-dev-server utils","Url":"https://github.com/angular/angular-cli/pull/17337","RelatedDescription":"Closed or merged PR \"fix(@angular-devkit/build-angular): don't show commonjs usage for web‚Ä¶\" (#17337)"},{"Id":"590371284","IsPullRequest":false,"CreatedAt":"2020-03-30T15:13:56","Actor":"kristofdegrave","Number":"17343","RawContent":null,"Title":"Add 'Access-Control-Allow-Headers': '*' to headers of DevServer configuration","State":"open","Body":"<!--üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ\r\n\r\nOh hi there! üòÑ\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\nüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ-->\r\n\r\n\r\n# üêû Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ‚úçÔ∏èedit: -->\r\n\r\n- [ ] new\r\n- [ ] build\r\n- [x] serve\r\n- [ ] test\r\n- [ ] e2e\r\n- [ ] generate\r\n- [ ] add\r\n- [ ] update\r\n- [ ] lint\r\n- [ ] xi18n\r\n- [ ] run\r\n- [ ] config\r\n- [ ] help\r\n- [ ] version\r\n- [ ] doc\r\n\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ‚úçÔ∏è--> No\r\n\r\n### Description\r\n\r\n<!-- ‚úçÔ∏è--> \r\nI'm currently building a micro front-end solution. In this I am loading files from one dev server in an other dev server using XHR. This works, but when I am adding `applicationInisighs.js`, this wants to add the `request-id` header to the CORS calls. This results into a CORS Error.\r\n\r\n## üî¨ Minimal Reproduction\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. \r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n## üî• Exception or Error\r\n<pre><code>\r\n<!-- If the issue is accompanied by an exception or an error, please share it below: -->\r\n<!-- ‚úçÔ∏è-->Access to XMLHttpRequest at 'http://localhost:9010/assets/i18n/en.json' from origin 'http://localhost:9009' has been blocked by CORS policy: Request header field request-id is not allowed by Access-Control-Allow-Headers in preflight response.\r\n</code></pre>\r\n\r\n\r\n## üåç Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ‚úçÔ∏è-->\r\nPackage                            Version\r\n------------------------------------------------------------\r\n@angular-devkit/architect          0.901.0\r\n@angular-devkit/build-angular      0.901.0\r\n@angular-devkit/build-ng-packagr   0.901.0\r\n@angular-devkit/build-optimizer    0.901.0\r\n@angular-devkit/build-webpack      0.901.0\r\n@angular-devkit/core               9.1.0\r\n@angular-devkit/schematics         9.1.0\r\n@angular/cdk                       9.1.3\r\n@angular/material                  9.1.3\r\n@ngtools/webpack                   9.1.0\r\n@schematics/angular                9.1.0\r\n@schematics/update                 0.901.0\r\nng-packagr                         9.1.0\r\nrxjs                               6.5.4\r\ntypescript                         3.7.5\r\nwebpack                            4.42.0\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ‚úçÔ∏èIs this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n<!-- ‚úçÔ∏èDo any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n\r\nAdding `'Access-Control-Allow-Headers': '*'` to the following line would fix the problem. \r\n\r\nhttps://github.com/angular/angular-cli/blob/master/packages/angular_devkit/build_angular/src/dev-server/index.ts#L457\r\n","Url":"https://github.com/angular/angular-cli/issues/17343","RelatedDescription":"Open issue \"Add 'Access-Control-Allow-Headers': '*' to headers of DevServer configuration\" (#17343)"},{"Id":"590352869","IsPullRequest":false,"CreatedAt":"2020-03-30T14:49:10","Actor":"helderjsm","Number":"17342","RawContent":null,"Title":"Webpack AngularCompilerPlugin and Ivy not working with translations","State":"open","Body":"<!--üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ\r\n\r\nOh hi there! üòÑ\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\nüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ-->\r\n\r\n\r\n# üêû Bug report\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\n<!-- ‚úçÔ∏è--> No, this started with Ivy\r\n\r\n\r\n### Description\r\n\r\n<!-- ‚úçÔ∏è--> When switching to Ivy translations are lost when using webpack.\r\nAlso tried adding  import '@angular/localize/init'; to polyfills but no success.\r\nLooked through documentation but it looks like there's not much more that I can configure using the AngularCompilerPlugin.\r\n\r\nCommand used to run is:\r\n\"start\": \"cross-env AUTHENTICATION_ENABLED=true CLIENT_APP_SETTINGS_URL=/api/ClientAppSettingsLocal.json BASE_API_URL=http://localhost:59180 webpack-dev-server --inline --hot --progress --port 8080 --history-api-fallback\",\r\n\r\n\r\n## üî¨ Minimal Reproduction\r\n#### webpack.config.dev.js:\r\n<pre><code>\r\n   new AngularCompilerPlugin({\r\n      mainPath: helpers.root(\"client-src/main.ts\"),\r\n      locale: \"en\",\r\n      platform: PLATFORM.Browser,\r\n      sourceMap: true,\r\n      tsConfigPath: helpers.root('tsconfig.json'),\r\n      compilerOptions: {\r\n        enableIvy: true,\r\n        i18nInLocale: \"en-GB\",\r\n        enableI18nLegacyMessageIdFormat: true\r\n      },\r\n      exclude: [],\r\n      skipCodeGeneration: false,\r\n      i18nInFile: helpers.root(\"client-src/locale/messages.xlf\"),\r\n      i18nInFormat: \"xlf\",\r\n      enableIvy: true,\r\n      missingTranslation: \"error\"\r\n    }),\r\n</code></pre>\r\n#### tsconfig.json\r\n<pre><code>\r\n{\r\n  \"compileOnSave\": false,\r\n  \"compilerOptions\": {\r\n    \"downlevelIteration\": true,\r\n    \"target\": \"es2015\",\r\n    \"module\": \"esnext\",\r\n    \"moduleResolution\": \"node\",\r\n    \"sourceMap\": true,\r\n    \"emitDecoratorMetadata\": true,\r\n    \"experimentalDecorators\": true,\r\n    \"noImplicitAny\": true,\r\n    \"importHelpers\": true,\r\n    \"outDir\": \"./dist/out-tsc\",\r\n    \"declaration\": false,\r\n    \"typeRoots\": [\r\n      \"node_modules/@types\"\r\n    ],\r\n    \"lib\": [\r\n      \"es2018\",\r\n      \"dom\"\r\n    ],\r\n    \"baseUrl\": \"./\",\r\n    \"paths\": {\r\n      \"@appsrc/*\": [ \"client-src/*\" ],\r\n      \"@appservice/*\": [ \"client-src/app/services/*\" ],\r\n      \"@appmodule/*\": [ \"client-src/app/modules/*\" ],\r\n      \"@appentities/*\": [ \"client-src/app/entities/*\" ],\r\n      \"@appguards/*\": [ \"client-src/app/guards/*\" ]\r\n    }\r\n  },\r\n  \"angularCompilerOptions\": {\r\n    \"enableIvy\": true,\r\n    \"fullTemplateTypeCheck\":  true\r\n  },\r\n  \"exclude\": [\r\n    \"node_modules\",\r\n    \"**/*.spec.ts\"\r\n  ]\r\n}\r\n</code></pre>\r\n\r\n## üåç Your Environment\r\n<pre><code>\r\n    \"@angular/animations\": \"^9.1.0\",\r\n    \"@angular/cdk\": \"^9.2.0\",\r\n    \"@angular/common\": \"^9.1.0\",\r\n    \"@angular/compiler\": \"^9.1.0\",\r\n    \"@angular/core\": \"^9.1.0\",\r\n    \"@angular/flex-layout\": \"^9.0.0-beta.29\",\r\n    \"@angular/forms\": \"^9.1.0\",\r\n    \"@angular/material\": \"^9.2.0\",\r\n    \"@angular/material-moment-adapter\": \"^9.2.0\",\r\n    \"@angular/platform-browser\": \"^9.1.0\",\r\n    \"@angular/platform-browser-dynamic\": \"^9.1.0\",\r\n    \"@angular/router\": \"^9.1.0\",\r\n    \"@angular/localize\": \"9.1.0\",\r\n\r\n\"devDependencies\": {\r\n    \"@angular-devkit/build-angular\": \"~0.901.0\",\r\n    \"@angular/cli\": \"^9.1.0\",\r\n    \"@angular/compiler-cli\": \"^9.1.0\",\r\n    \"@angular/language-service\": \"^9.1.0\",\r\n</code></pre>\r\n","Url":"https://github.com/angular/angular-cli/issues/17342","RelatedDescription":"Open issue \"Webpack AngularCompilerPlugin and Ivy not working with translations\" (#17342)"},{"Id":"590269749","IsPullRequest":false,"CreatedAt":"2020-03-30T13:11:07","Actor":"francovp","Number":"17340","RawContent":null,"Title":"Upgrade to angular 9.1 with TSLint 6.1 error \"Cannot find migration 'tslint-version-6' in '@angular/cli'.\"","State":"closed","Body":"<!--üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ\r\n\r\nOh hi there! üòÑ\r\n\r\nTo expedite issue processing please search open and closed issues before submitting a new one.\r\nExisting issues often contain information about workarounds, resolution, or progress updates.\r\n\r\nüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ-->\r\n\r\n\r\n# üêû Bug report\r\n\r\n### Command (mark with an `x`)\r\n<!-- Can you pin-point the command or commands that are effected by this bug? -->\r\n<!-- ‚úçÔ∏èedit: -->\r\n\r\n- [x] update\r\n\r\n### Is this a regression?\r\n\r\n<!-- Did this behavior use to work in the previous version? -->\r\nYes, the previous version in which this bug was not present was: 9.0.7\r\n\r\n### Description\r\n\r\n<!-- ‚úçÔ∏è--> A clear and concise description of the problem...\r\n\r\n```\r\nng update @angular/cli --migrate-only tslint-version-6\r\nThe installed local Angular CLI version is older than the latest stable version.\r\nInstalling a temporary version to perform the update.\r\nInstalling packages for tooling via npm.\r\nInstalled packages for tooling via npm.\r\nUsing package manager: 'npm'\r\nCollecting installed dependencies...\r\nFound 67 dependencies.\r\nCannot find migration 'tslint-version-6' in '@angular/cli'.\r\n```\r\n\r\n## üî¨ Minimal Reproduction\r\n<!--\r\nSimple steps to reproduce this bug.\r\n\r\nPlease include: commands run (including args), packages added, related code changes.\r\n\r\nIf reproduction steps are not enough for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue. \r\nA good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. \r\nShare the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.\r\n\r\nIssues that don't have enough info and can't be reproduced will be closed.\r\n\r\nYou can read more about issue submission guidelines here: https://github.com/angular/angular-cli/blob/master/CONTRIBUTING.md#-submitting-an-issue\r\n-->\r\n\r\n`ng update @angular/cli --migrate-only tslint-version-6`\r\n\r\n## üî• Exception or Error\r\n<pre><code>\r\nCannot find migration 'tslint-version-6' in '@angular/cli'.\r\n\r\n</code></pre>\r\n\r\n\r\n## üåç Your Environment\r\n<pre><code>\r\n<!-- run `ng version` and paste output below -->\r\n<!-- ‚úçÔ∏è-->\r\nAngular CLI: 9.0.7\r\nNode: 12.16.1\r\nOS: win32 x64\r\n\r\nAngular: 9.0.7\r\n... animations, cli, common, compiler, compiler-cli, core, forms\r\n... language-service, localize, platform-browser\r\n... platform-browser-dynamic, router\r\nIvy Workspace: Yes\r\n\r\nPackage                           Version\r\n-----------------------------------------------------------\r\n@angular-devkit/architect         0.900.7\r\n@angular-devkit/build-angular     0.900.7\r\n@angular-devkit/build-optimizer   0.900.7\r\n@angular-devkit/build-webpack     0.900.7\r\n@angular-devkit/core              9.0.7\r\n@angular-devkit/schematics        9.0.7\r\n@angular/cdk                      9.0.1\r\n@angular/cdk-experimental         9.0.1\r\n@angular/fire                     5.4.2\r\n@angular/flex-layout              9.0.0-beta.29\r\n@angular/material                 9.0.1\r\n@ngtools/webpack                  9.0.7\r\n@schematics/angular               9.0.7\r\n@schematics/update                0.900.7\r\nrxjs                              6.5.4\r\ntypescript                        3.7.5\r\nwebpack                           4.41.2\r\n\r\n</code></pre>\r\n\r\n**Anything else relevant?**\r\n<!-- ‚úçÔ∏èIs this a browser specific issue? If so, please specify the browser and version. -->\r\n\r\n~Opened this because #17308 was closed and the problem was not fixed as [the blog still has the confusing problem](https://blog.angular.io/version-9-1-of-angular-now-available-typescript-3-8-faster-builds-and-more-eb292f989428) (at least in my end)~\r\n\r\n<!-- ‚úçÔ∏èDo any of these matter: operating system, IDE, package manager, HTTP server, ...? If so, please mention it below. -->\r\n","Url":"https://github.com/angular/angular-cli/issues/17340","RelatedDescription":"Closed issue \"Upgrade to angular 9.1 with TSLint 6.1 error \"Cannot find migration 'tslint-version-6' in '@angular/cli'.\"\" (#17340)"}],"ResultType":"GitHubIssue"},"material2-Issues":{"Issues":[{"Id":"592201994","IsPullRequest":true,"CreatedAt":"2020-04-01T21:02:17","Actor":"crisbeto","Number":"18969","RawContent":null,"Title":"fix(material-experimental/mdc-radio): no focus indication in high contrast mode","State":"open","Body":"Along the same lines as #13280, but for the MDC component. Adds an outline around the circle when focused in high contrast mode.","Url":"https://github.com/angular/components/pull/18969","RelatedDescription":"Open PR \"fix(material-experimental/mdc-radio): no focus indication in high contrast mode\" (#18969)"},{"Id":"592167502","IsPullRequest":true,"CreatedAt":"2020-04-01T19:57:31","Actor":"crisbeto","Number":"18968","RawContent":null,"Title":"fix(cdk-experimental/dialog): disableClose not working for template dialogs","State":"open","Body":"Fixes the `disableClose` option not working for template-based dialogs, because we have two separate places where the config was being synced up with the dialog ref and one of them wasn't updated. These changes move the creation logic to a single place.\r\n\r\nFixes #18964.","Url":"https://github.com/angular/components/pull/18968","RelatedDescription":"Open PR \"fix(cdk-experimental/dialog): disableClose not working for template dialogs\" (#18968)"},{"Id":"592092813","IsPullRequest":true,"CreatedAt":"2020-04-01T17:46:59","Actor":"crisbeto","Number":"18967","RawContent":null,"Title":"fix(google-maps): not rendering until mapTypeId is set","State":"open","Body":"In 2a6aae179a436886395cc8ecc631f7c7be4dff24 I added the ability to set the `mapTypeId` and after I was done with it and ran the unit tests, I added a default of `undefined` to the `DEFAULT_OPTIONS` so the tests didn't have to be updated. It looks like having the `undefined` in the defaults causes Google Maps not to render anything in the map until the map type changes. These changes remove the default value and update the tests instead.\r\n\r\nFixes #18965.","Url":"https://github.com/angular/components/pull/18967","RelatedDescription":"Open PR \"fix(google-maps): not rendering until mapTypeId is set\" (#18967)"},{"Id":"592087185","IsPullRequest":false,"CreatedAt":"2020-04-01T17:37:32","Actor":"mmalerba","Number":"18966","RawContent":null,"Title":"fr(datepicker): add support for 2 month side-by-side UI","State":"open","Body":"Material Design has officially added this to the spec: https://material.io/components/pickers/#desktop-pickers","Url":"https://github.com/angular/components/issues/18966","RelatedDescription":"Open issue \"fr(datepicker): add support for 2 month side-by-side UI\" (#18966)"},{"Id":"591811099","IsPullRequest":false,"CreatedAt":"2020-04-01T10:35:49","Actor":"eamon-otuathail","Number":"18965","RawContent":null,"Title":"bug([google-map]): [README.MD example only produces grey rectangle, no map]","State":"open","Body":"#### Reproduction\r\n\r\nThe README for Google Maps contains code that produces just a grey map:\r\nhttps://github.com/angular/components/blob/master/src/google-maps/README.md\r\n\r\nSteps to reproduce:\r\n Add the readme code to a brand new simple new demo project (ng new demo)  \r\n \r\n#### Expected Behavior\r\nThe map should be displayed correctly, without having to force a refresh. \r\n\r\n#### Actual Behavior\r\nA grey rectangle is displayed where the map should be. \r\nNo error messages are produced. \r\nNote the README example did work correctly for Google Maps in Angular Components 9.0. \r\n\r\nWith Google-Maps in Angular Components 9.2, to get a map correctly displayed, one now needs to add this extra line to the demo .html file:\r\n            [mapTypeId]=\"mapTypeId\"\r\nAnd add this line to the demo .ts file:\r\nmapTypeId: google.maps.MapTypeId;\r\nand also implement AfterViewInit to force a redraw:\r\nexport class GoogleMapDemo implements AfterViewInit {\r\n..\r\nngAfterViewInit(): void {\r\n// Vary the map properties somehow to force a redraw\r\n    this.mapTypeId = google.maps.MapTypeId.ROADMAP;\r\n  }\r\n}\r\n\r\n#### Environment\r\n\r\n- Angular: 9.1.0\r\n- CDK/Material: 9.2.0\r\n- Browser(s): Chrome 83.0.4093.3\r\n- Operating System: Windows \r\n","Url":"https://github.com/angular/components/issues/18965","RelatedDescription":"Open issue \"bug([google-map]): [README.MD example only produces grey rectangle, no map]\" (#18965)"},{"Id":"591767450","IsPullRequest":false,"CreatedAt":"2020-04-01T09:25:57","Actor":"PierreDuc","Number":"18964","RawContent":null,"Title":"bug(cdk-experimental:DIALOG): Config option disableClose does not work with openFromTemplate","State":"open","Body":"#### Reproduction\r\n\r\nWhile using the dialog to open a template by calling `openFromTemplate`, the `disableClose` is not respected. When you use a component by calling `openFromComponent`, the `disableClose` does work.\r\n\r\nMost likely cause:\r\n\r\nInside [`_attachDialogContentForComponent`](https://github.com/angular/components/blob/8a712884701e05c88dfc4358c3f3ffc44c42f6d3/src/cdk-experimental/dialog/dialog.ts#L235) there is a \r\n```\r\ndialogRef.disableClose = config.disableClose;\r\n```\r\n\r\nThis is missing in the [` _attachDialogContentForTemplate`](https://github.com/angular/components/blob/8a712884701e05c88dfc4358c3f3ffc44c42f6d3/src/cdk-experimental/dialog/dialog.ts#L252)\r\n\r\n#### Expected Behavior\r\n\r\nThat the dialog doesn't close on Escape key if `disableClose` is true\r\n\r\n#### Actual Behavior\r\n\r\nIt closes when it shouldn't :(\r\n\r\n#### Environment\r\n\r\n- Angular: 9.1.0\r\n- CDK-experimental: 9.2.0\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows\r\n","Url":"https://github.com/angular/components/issues/18964","RelatedDescription":"Open issue \"bug(cdk-experimental:DIALOG): Config option disableClose does not work with openFromTemplate\" (#18964)"},{"Id":"591589073","IsPullRequest":false,"CreatedAt":"2020-04-01T07:06:44","Actor":"Iivanmunoz","Number":"18963","RawContent":null,"Title":"compatibilidad angular material 9","State":"closed","Body":"he visto varias soluciones, sin embargo ami me a funcionado:\r\n1.- ng  update\r\n2.- ng serve\r\n3.- ng build\r\n4.-ng serve\r\nsolo que cuando ocupo angular material los componentes se desaparecen cuando les das click","Url":"https://github.com/angular/components/issues/18963","RelatedDescription":"Closed issue \"compatibilidad angular material 9\" (#18963)"},{"Id":"591499921","IsPullRequest":true,"CreatedAt":"2020-03-31T23:17:59","Actor":"ranma42","Number":"18962","RawContent":null,"Title":"Enable tree-shaking of more services","State":"open","Body":"This branch is an attempt to improve tree-shaking of several services.\r\n\r\nI started by removing the services that are `providedIn: 'root'` from the `providers` of any module, as that should not be needed and actually prevents them from being removed by tree-shaking.\r\n\r\nI am investigating whether the remaining services (such as `MatDialog` and `Overlay`) need to be provided explicitly or if they can also become tree-shakable.\r\n\r\nThis branch aims at fixing https://github.com/angular/components/issues/11581 and https://github.com/angular/components/issues/18944\r\n\r\n","Url":"https://github.com/angular/components/pull/18962","RelatedDescription":"Open PR \"Enable tree-shaking of more services\" (#18962)"},{"Id":"591443427","IsPullRequest":true,"CreatedAt":"2020-03-31T21:30:55","Actor":"gregmagolan","Number":"18961","RawContent":null,"Title":"refactor: use $execpath instead of deprecated $location","State":"open","Body":"See https://docs.bazel.build/versions/master/be/make-variables.html#predefined_label_variables: \"This is legacy pre-Starlark behavior and not recommended unless you really know what it does for a particular rule.\"","Url":"https://github.com/angular/components/pull/18961","RelatedDescription":"Open PR \"refactor: use $execpath instead of deprecated $location\" (#18961)"},{"Id":"591425756","IsPullRequest":true,"CreatedAt":"2020-03-31T21:03:39","Actor":"gregmagolan","Number":"18960","RawContent":null,"Title":"build: update to rules_nodejs 1.5.0","State":"open","Body":"Also patches @angular/bazel as a pre-req to landing https://github.com/angular/angular/pull/36333.\r\n","Url":"https://github.com/angular/components/pull/18960","RelatedDescription":"Open PR \"build: update to rules_nodejs 1.5.0\" (#18960)"},{"Id":"591303316","IsPullRequest":true,"CreatedAt":"2020-03-31T17:54:53","Actor":"crisbeto","Number":"18959","RawContent":null,"Title":"wip: date range picker test branch","State":"open","Body":"**Do not merge!**\r\n\r\nOpening this PR so we can run a presubmit on the changes in the `date-range` branch.","Url":"https://github.com/angular/components/pull/18959","RelatedDescription":"Open PR \"wip: date range picker test branch\" (#18959)"},{"Id":"591250417","IsPullRequest":true,"CreatedAt":"2020-03-31T17:24:38","Actor":"devversion","Number":"18957","RawContent":null,"Title":"build: resolve module names in circular deps test","State":"closed","Body":"Currently the circular dependencies test only resolves\r\nrelative imports. It does not resolve module names\r\nto packages/entry-points which are part of the Angular\r\nComponents repository.\r\n\r\nTo ensure that such repo-specific module names are resolved, we\r\nadd a custom module resolver. This helps us making the circular deps\r\ntest future-proof in case an entry-point uses module names.\r\n\r\nWithin an entry-point circular dependencies could be also created\r\nwith module name imports.\r\n\r\n@josephperrott Sorry. I would have commented on the original PR, but I didn't have a chance to have anther look as the PR still had `merge ready` applied and got merged quickly.","Url":"https://github.com/angular/components/pull/18957","RelatedDescription":"Closed or merged PR \"build: resolve module names in circular deps test\" (#18957)"},{"Id":"591271409","IsPullRequest":false,"CreatedAt":"2020-03-31T17:05:26","Actor":"mmalerba","Number":"18958","RawContent":null,"Title":"bug(datepicker): previous/next month buttons missing hover state","State":"open","Body":"Repro: See basic datepicker example at https://material.angular.io/components/datepicker/overview","Url":"https://github.com/angular/components/issues/18958","RelatedDescription":"Open issue \"bug(datepicker): previous/next month buttons missing hover state\" (#18958)"},{"Id":"589832959","IsPullRequest":true,"CreatedAt":"2020-03-31T16:02:00","Actor":"crisbeto","Number":"18943","RawContent":null,"Title":"refactor(datepicker): clean up date selection model","State":"closed","Body":"- Removes some methods from the date selection model that were put in place under the assumption that they'd be used, but we never ended up using them.\r\n- Moves the selection model out of `core` and into `datepicker`. I decided to do it, because it seems very tightly coupled to the datepicker and I don't see us needing it in other components in the future.","Url":"https://github.com/angular/components/pull/18943","RelatedDescription":"Closed or merged PR \"refactor(datepicker): clean up date selection model\" (#18943)"},{"Id":"589840998","IsPullRequest":true,"CreatedAt":"2020-03-31T16:01:47","Actor":"crisbeto","Number":"18945","RawContent":null,"Title":"fix(popover-edit): unable to close focus content using the keyboard","State":"closed","Body":"The popover edit shows some content either when a cell is hovered or when it's focused, but the problem is that keyboard users don't have a way of closing the focus content without moving focus completely out of the table, because tabbing again usually lands on a different cell. These changes allow for the focus content to be removed by pressing the Escape key.","Url":"https://github.com/angular/components/pull/18945","RelatedDescription":"Closed or merged PR \"fix(popover-edit): unable to close focus content using the keyboard\" (#18945)"},{"Id":"589864017","IsPullRequest":true,"CreatedAt":"2020-03-31T16:01:32","Actor":"crisbeto","Number":"18946","RawContent":null,"Title":"fix(material-experimental/mdc-radio): add strong focus indication","State":"closed","Body":"The MDC-based radio button was missing the strong focus indication that we have in the base radio button.","Url":"https://github.com/angular/components/pull/18946","RelatedDescription":"Closed or merged PR \"fix(material-experimental/mdc-radio): add strong focus indication\" (#18946)"},{"Id":"591136245","IsPullRequest":false,"CreatedAt":"2020-03-31T14:02:33","Actor":"karptonite","Number":"18956","RawContent":null,"Title":"fr(cdk/a11y/cdkFocusTrap): Option (or always) not to scroll to element when returning focus","State":"open","Body":"#### Feature Description\r\nWhen `cdkTrapFocus` returns focus to the previously focused element (with `cdkTrapFocusAutoCapture` set to `true`), the directive calls `.focus()` on the previous element. On focus, the browser will, by default, scroll to the focused element. this is not always desirable. I'm not actually certain it is ever desirable, but I don't know all of the use cases for focus trap.\r\n\r\n#### Use Case\r\nConsider an interactive modal or popover that can be opened by a hover event on desktop. It is possible that the previously focused element was off screen. Then, when the modal is closed, the window will be scrolled back to the previously focused element when `focus()` is called on it.\r\n\r\nHere is a simple alternative to calling `focus()` that would return focus without scrolling:\r\n```typescript\r\npublic focusWithoutScrolling(element: HTMLElement) {\r\n    const x = window.scrollX;\r\n    const y = window.scrollY;\r\n    element.focus({ preventScroll: true });\r\n    //this is necessary because not all browsers yet respect preventScroll\r\n    this.window.scrollTo(x, y);\r\n}\r\n```\r\n","Url":"https://github.com/angular/components/issues/18956","RelatedDescription":"Open issue \"fr(cdk/a11y/cdkFocusTrap): Option (or always) not to scroll to element when returning focus\" (#18956)"},{"Id":"590950912","IsPullRequest":false,"CreatedAt":"2020-03-31T09:38:07","Actor":"fabioaarito","Number":"18955","RawContent":null,"Title":"bug(MAT-TABLE): Error inside mat-table crashes the error handler mat dialog component","State":"open","Body":"#### Reproduction\r\n\r\nUse StackBlitz to reproduce your issue: https://stackblitz.com/edit/mat-table-and-error-handler\r\n\r\nSteps to reproduce:\r\n1. Open the StackBlitz sample and you will see a mat-dialog without content and in the console, you will also be able to see only the dialog constructor was called.\r\n2. In the app.component.ts you can see what is causing the error. In the \"tableConfiguration\" property, we have a duplicated column definition.\r\n3. You can fix that removing the duplicated column definition and you could see the error handler dialog properly displaying another error and the complete lifecycle of the error handler dialog component is printed to the console.\r\n \r\n \r\n#### Expected Behavior\r\n\r\nWhat behavior were you expecting to see?\r\nI was expecting to have my error handler dialog component to be shown correctly even if the error occurs inside a mat-table.\r\n\r\n#### Actual Behavior\r\n\r\nWhat behavior did you actually see?\r\nIf I have an error inside a mat-table, the error handler dialog component will crash.\r\n\r\n#### Environment\r\n\r\n- Angular: ^8.0.0\r\n- CDK/Material: ^8.0.0/^8.0.0\r\n- Browser(s): Chrome. Firefox, Safari, ...\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows, MacOS, ...\r\n","Url":"https://github.com/angular/components/issues/18955","RelatedDescription":"Open issue \"bug(MAT-TABLE): Error inside mat-table crashes the error handler mat dialog component\" (#18955)"},{"Id":"590669247","IsPullRequest":false,"CreatedAt":"2020-03-30T23:31:15","Actor":"micamp","Number":"18954","RawContent":null,"Title":"Disabled buttons contrast ratio is not WCAG 2.1 compliant","State":"open","Body":"#### Bug, feature request, or proposal:\r\nDisabled buttons color should contrast with the background with at least a 3:1 ratio to meet new WCAG 2.1 requirements.\r\n\r\n#### What is the expected behavior?\r\nDisabled buttons color should contrast with the background with at least a 3:1 ratio to meet new WCAG 2.1 requirements.\r\n\r\n#### What is the current behavior?\r\nDisabled buttons color contrast compared to the background is less than the required 3:1 ratio.\r\n\r\n#### What are the steps to reproduce?\r\nProviding a StackBlitz reproduction is the *best* way to share your issue. <br/>\r\nStackBlitz starter: https://goo.gl/wwnhMV<br/>\r\n\r\nhttps://material.angular.io/components/button/examples\r\nUse a color contrast tool to measure the contrast of a disabled button text color and the background.\r\n\r\n#### What is the use-case or motivation for changing an existing behavior?\r\nThe WCAG 2.1 standard will go into effect June 30, 2020.\r\n\r\n#### Which versions of Angular, Material, OS, TypeScript, browsers are affected?\r\nLatest, all browsers.\r\n\r\n#### Is there anything else we should know?\r\nThank you","Url":"https://github.com/angular/components/issues/18954","RelatedDescription":"Open issue \"Disabled buttons contrast ratio is not WCAG 2.1 compliant\" (#18954)"},{"Id":"590513452","IsPullRequest":false,"CreatedAt":"2020-03-30T23:01:45","Actor":"sauravgaursmith","Number":"18952","RawContent":null,"Title":"Input Placeholder keeps rotating.","State":"closed","Body":"Guys I need your help. I'm facing an issue only on Firefox. This is related to Angular 4 (This version is not supported now). Have look on attached gif. I'm not getting this issue on every system. This seems to be a system specific issue. This is due to transform property of CSS keeps changing. Not able to find root cause why transform property keeps changing.\r\n![firefoxbug](https://user-images.githubusercontent.com/25001992/77949147-1c3b9c00-72e4-11ea-99d6-7b5d06ef5eac.gif)\r\n\r\nFirefox Details:\r\n![firefox-version](https://user-images.githubusercontent.com/25001992/77949817-33c75480-72e5-11ea-88b2-f69c7a21c820.png)\r\n\r\n#### Environment\r\n- Angular: 4.4.6\r\n- CDK/Material: 4.4.6\r\n- Browser(s): Firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Ubuntu\r\n","Url":"https://github.com/angular/components/issues/18952","RelatedDescription":"Closed issue \"Input Placeholder keeps rotating.\" (#18952)"},{"Id":"590546161","IsPullRequest":true,"CreatedAt":"2020-03-30T19:46:41","Actor":"crisbeto","Number":"18953","RawContent":null,"Title":"fix(table): better handling of invalid data","State":"open","Body":"The table data source is set up to expect an array and will throw a cryptic error down the line if the value is anything different. While typings should be enough to enforce this, if the value comes from somewhere in the view it may not get caught. Since the effort for handling it on our end is minimal, these changes add some logic that fall back to an empty array if the value is invalid.\r\n\r\nFixes #18859.","Url":"https://github.com/angular/components/pull/18953","RelatedDescription":"Open PR \"fix(table): better handling of invalid data\" (#18953)"},{"Id":"590504264","IsPullRequest":false,"CreatedAt":"2020-03-30T19:02:50","Actor":"t-flux","Number":"18951","RawContent":null,"Title":"help(@angular/google-maps): Map is not shown, only grey container","State":"closed","Body":"Hi Guys, \r\n\r\nI couldnt mange to display the map (only shows an grey container). No Error message in the compiler or in the console. The first time I tried it in an existing project and the second time in an new project. \r\n\r\n\r\nHere is what I did:\r\n\r\n1.) npm install\r\n`npm install @angular/google-maps\r\n`\r\n\r\n2.) Added script to index.html\r\n`  <script src=\"https://maps.googleapis.com/maps/api/js?key=MY_API_KEY\">\r\n`\r\n\r\n3.) Added GoogleMapsModule to app.module.ts\r\n\r\n```\r\nimport {GoogleMapsModule} from '@angular/google-maps';\r\n\r\n@NgModule({\r\n...\r\n  imports: [\r\n    ..\r\n    GoogleMapsModule\r\n  ],\r\n  ...\r\n})\r\nexport class AppModule { }\r\n```\r\n\r\n4.) Added directive to component\r\n\r\n`<google-map></google-map>\r\n`\r\n\r\nMy Dependencies\r\n```\r\n\"dependencies\": {\r\n    \"@angular/animations\": \"~9.1.0\",\r\n    \"@angular/common\": \"~9.1.0\",\r\n    \"@angular/compiler\": \"~9.1.0\",\r\n    \"@angular/core\": \"~9.1.0\",\r\n    \"@angular/forms\": \"~9.1.0\",\r\n    \"@angular/google-maps\": \"^9.2.0\",\r\n    \"@angular/platform-browser\": \"~9.1.0\",\r\n    \"@angular/platform-browser-dynamic\": \"~9.1.0\",\r\n    \"@angular/router\": \"~9.1.0\",\r\n    \"rxjs\": \"~6.5.4\",\r\n    \"tslib\": \"^1.10.0\",\r\n    \"zone.js\": \"~0.10.2\"\r\n  }\r\n```","Url":"https://github.com/angular/components/issues/18951","RelatedDescription":"Closed issue \"help(@angular/google-maps): Map is not shown, only grey container\" (#18951)"},{"Id":"589743343","IsPullRequest":false,"CreatedAt":"2020-03-30T18:32:42","Actor":"EdricChan03","Number":"18942","RawContent":null,"Title":"Suggestion: Replace `MatDialogRef#getState` with a getter","State":"closed","Body":"#### Bug, feature request, or proposal:\r\n\r\nThe `getState` method of the `MatDialogRef` class should be replaced with a getter:\r\n\r\nhttps://github.com/angular/components/blob/29e74eb9431ba01d951ee33df554f465609b59fa/src/material/dialog/dialog-ref.ts#L213-L216\r\n\r\n#### What is the expected behavior?\r\n\r\n`getState` should be replaced with a getter:\r\n\r\n```typescript\r\nget state(): MatDialogState;\r\n```\r\n\r\n#### What is the current behavior?\r\n\r\nIt isn't a getter:\r\n\r\n```typescript\r\ngetState(): MatDialogState;\r\n```\r\n\r\n#### What are the steps to reproduce?\r\n\r\nNIL\r\n\r\n#### What is the use-case or motivation for changing an existing behavior?\r\n\r\nIt would save a few letters from typing the `get` prefix when retrieving the current state of the dialog.\r\n\r\n#### Which versions of Angular, Material, OS, TypeScript, browsers are affected?\r\n\r\n- Angular v9.x.x\r\n- Angular Material v9.x.x (and older)\r\n\r\n#### Is there anything else we should know?\r\n\r\nWas there any reason as to why a method with a `get` prefix used instead of a getter?","Url":"https://github.com/angular/components/issues/18942","RelatedDescription":"Closed issue \"Suggestion: Replace `MatDialogRef#getState` with a getter\" (#18942)"},{"Id":"590455788","IsPullRequest":false,"CreatedAt":"2020-03-30T17:16:07","Actor":"qiufengyu","Number":"18950","RawContent":null,"Title":"bug(mat-slide-toggle): Use confirm dialog with slide toggle, if cancel the dialog, should not change the state","State":"open","Body":"#### Reproduction\r\n\r\nUse StackBlitz to reproduce your issue: https://stackblitz.com/edit/angular-dchf74\r\nSteps to reproduce:\r\n1. Click the slide toggle and select cancel the confirm dialog\r\n2. The state of the toggle still gets changed\r\n\r\nAfter some research, `(ngModelChange)=\"onHide()\"` will have the old value before toggling. Resetting value in the function body does NOT work. The implementation of slide-toggle is not something like `slideToggleValue = !slideToggleValue`?\r\n\r\nevent.stopPropogation() does NOT work also. \r\n\r\nWondering if there could be a workaround. Many thanks.\r\n \r\n \r\n#### Expected Behavior\r\n\r\nIf click cancel, the state of the toggle should remain the old value.\r\n\r\n\r\n#### Actual Behavior\r\n\r\nIf click cancel, the state of the toggle still gets changed\r\n\r\n\r\n#### Environment\r\n\r\n- Angular:\r\n- CDK/Material:^9.0.0\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/18950","RelatedDescription":"Open issue \"bug(mat-slide-toggle): Use confirm dialog with slide toggle, if cancel the dialog, should not change the state\" (#18950)"},{"Id":"590311874","IsPullRequest":false,"CreatedAt":"2020-03-30T15:23:17","Actor":"laneschmidt","Number":"18949","RawContent":null,"Title":"bug([mat-autocomplete]): jasmine test: There is no directive with \"exportAs\" set to \"matAutocomplete\"","State":"closed","Body":"#### Reproduction\r\n\r\nSteps to reproduce:\r\n1. add `mat-autocomplete` component to a template\r\n \r\n \r\n#### Expected Behavior\r\nFor Mat Autocomplete to survive the tests.\r\n\r\n\r\n#### Actual Behavior\r\nThe component works but fails tests.\r\n\r\nMat Autocomplete failed some otherwise working tests:\r\n```\r\n<mat-autocomplete [ERROR ->]#autoAuthSignatory=\"matAutocomplete\">\r\nError: Template parse errors:\r\nThere is no directive with \"exportAs\" set to \"matAutocomplete\" (\"\r\n[formControl]=\"attentionControl\">\r\n<mat-autocomplete [ERROR ->]#autoAttention=\"matAutocomplete\">\r\n<mat-option *ngFor=\"let contact of attentionFilteredContacts \"): ng:///DynamicTestModule/AddOrganizationContactComponent.html@95:22\r\nThere is no directive with \"exportAs\" set to \"matAutocomplete\" (\"\r\n[formControl]=\"authSignatoryControl\"\r\n >\r\n```\r\n\r\nCode causing the issue:\r\n```\r\n<!-- Attention -->\r\n  <mat-form-field class=\"ig-form-control\" appearance=\"outline\" floatLabel=\"auto\">\r\n    <mat-label>Attention</mat-label>\r\n    <input\r\n      matInput\r\n      [matAutocomplete]=\"autoAttention\"\r\n      [formControl]=\"attentionControl\"\r\n    >\r\n    <mat-autocomplete #autoAttention=\"matAutocomplete\">\r\n      <mat-option *ngFor=\"let contact of attentionFilteredContacts | async\" [value]=\"contact.name\">\r\n        <span>{{contact.name}}</span> |\r\n        <small>{{contact.position}}</small>\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n    <mat-icon matSuffix>search</mat-icon>\r\n  </mat-form-field>\r\n\r\n  <hr>\r\n\r\n  <!-- Authorized Signatory -->\r\n  <mat-form-field class=\"ig-form-control\" appearance=\"outline\" floatLabel=\"auto\">\r\n    <mat-label>Authorized Signatory</mat-label>\r\n    <input\r\n      matInput\r\n      [matAutocomplete]=\"autoAuthSignatory\"\r\n      [formControl]=\"authSignatoryControl\"\r\n    >\r\n    <mat-autocomplete #autoAuthSignatory=\"matAutocomplete\">\r\n      <mat-option *ngFor=\"let contact of authSignatoryFilteredContacts | async\" [value]=\"contact.name\">\r\n        <span>{{contact.name}}</span> |\r\n        <small>{{contact.position}}</small>\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n    <mat-icon matSuffix>search</mat-icon>\r\n  </mat-form-field>\r\n```\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 9.0.4\r\n- CDK/Material: 9.2.0\r\n- Browser(s): Chrome\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS Mojave 10.14.5\r\n","Url":"https://github.com/angular/components/issues/18949","RelatedDescription":"Closed issue \"bug([mat-autocomplete]): jasmine test: There is no directive with \"exportAs\" set to \"matAutocomplete\"\" (#18949)"},{"Id":"590215322","IsPullRequest":false,"CreatedAt":"2020-03-30T11:30:10","Actor":"fncamm","Number":"18948","RawContent":null,"Title":"bug(MatSelectionList): Last selected mat-list-option is shown when clicking on mat-list-item outside of the view","State":"open","Body":"#### Reproduction\r\n\r\nUse StackBlitz to reproduce your issue: https://stackblitz.com/fork/angular-f96lhr-swa9hp\r\n\r\nSteps to reproduce:\r\n1. Select and/or deselect a list option\r\n2. Scroll down so the option isn't visible anymore\r\n3. Click a list item\r\n \r\n \r\n#### Expected Behavior\r\n\r\nNothing should really happen, all items should stay in place and scroll shouldn't move\r\n\r\n\r\n#### Actual Behavior\r\n\r\nContent is scrolled upwards so that the last selected list option is visible\r\nNote: if the list option is already visible - nothing happens and this is correct behavior\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 9\r\n- CDK/Material: 9\r\n- Browser(s):Chrome, Firefox\r\n- Operating System (e.g. Windows, macOS, Ubuntu): Windows, macOs, Linux (at least Void Linux)\r\n","Url":"https://github.com/angular/components/issues/18948","RelatedDescription":"Open issue \"bug(MatSelectionList): Last selected mat-list-option is shown when clicking on mat-list-item outside of the view\" (#18948)"},{"Id":"590190245","IsPullRequest":false,"CreatedAt":"2020-03-30T10:49:11","Actor":"kurakin-oleksandr","Number":"18947","RawContent":null,"Title":"bug(drag-drop): previousIndex is not correct if list contains invisible items","State":"open","Body":"#### Reproduction\r\n\r\nhttps://stackblitz.com/edit/angular-rs1rtm\r\n\r\nmove \"Go home\" item into \"Done\" list\r\n\r\nSteps to reproduce:\r\n1. Define two drag-drop lists\r\n2. Add both visible and invisible (display: none) items into lists\r\n3. Drag'n'Drop some items from one list into another\r\n4. Sometimes wrong (invisible) item is moved (depending on an item position) (on cdkDropListDropped `event.previousIndex` of a selected item is not an actual index in the list of items but index of only visible items in this list)\r\n \r\n \r\n#### Expected Behavior\r\n\r\nCorrect (visible) item which was selected should be moved into list (on cdkDropListDropped `event.previousIndex` must be an index of an item in a list regardless of visibility)\r\n\r\n\r\n#### Actual Behavior\r\n\r\nOn cdkDropListDropped `event.previousIndex` of a selected item is not an actual index in the list of items but index of only visible items in this list\r\n\r\n\r\n#### Environment\r\n\r\n- Angular: 9.1.0\r\n- CDK/Material: 9.1.0-9.2.0\r\n- Browser(s): Chrome 80.0.3987.149 (but I think it reproducible in all browsers) \r\n- Operating System: macOS (but I think it reproducible in all OS) \r\n","Url":"https://github.com/angular/components/issues/18947","RelatedDescription":"Open issue \"bug(drag-drop): previousIndex is not correct if list contains invisible items\" (#18947)"},{"Id":"589839468","IsPullRequest":false,"CreatedAt":"2020-03-29T17:17:56","Actor":"ranma42","Number":"18944","RawContent":null,"Title":"Some services are not tree-shaken when unused","State":"open","Body":"#### Reproduction\r\n\r\nThe issue cannot be shown using StackBlitz, but the repository https://github.com/ranma42/treeshake-material can be used to reproduce it.\r\n\r\nThe steps to reproduce the issue are illustrated in the commit messages of the repository. Namely:\r\n1. Create a new application with `ng new treeshake-material` with default settings (no routing, CSS style); it builds a 137 KB main.js.\r\n2. Install `@angular/material` with default settings (indigo-pink theme, no typography styles, yes to browser animations); the main.js now is 207 KB.\r\n3. Import several material modules in `AppModule` (without using any component or service); the main.js now is 271 KB.\r\n\r\nIt looks like some code is not being removed by the tree-shaking even if it is not being used.\r\n \r\n#### Expected Behavior\r\n\r\nThe size of the build output does not grow unless components or services are actually used.\r\n\r\n#### Actual Behavior\r\n\r\nThe size of the build output grows 2x just by installing and importing Angular Material modules, even if they are not being used.\r\n\r\n#### Environment\r\n\r\n- Angular: 9.1.0\r\n- CDK/Material: 9.2.0\r\n- Browser(s): -\r\n- Operating System (e.g. Windows, macOS, Ubuntu): macOS\r\n","Url":"https://github.com/angular/components/issues/18944","RelatedDescription":"Open issue \"Some services are not tree-shaken when unused\" (#18944)"},{"Id":"589644284","IsPullRequest":false,"CreatedAt":"2020-03-28T19:36:17","Actor":"alireza-saberi","Number":"18941","RawContent":null,"Title":"Can't make multi-line matTooltip, always getting single-line","State":"open","Body":"#### Bug, feature request, or proposal:\r\nBug: Multiple line tool-tip\r\n\r\n#### What is the expected behavior?\r\nUsing `[matTooltip]=\"myMultiLineStringGenerator()\"` combined with `[matTooltipClass]=\"'my-tooltip'\"` gives me multi-line tooltips\r\n\r\n#### What is the current behavior?\r\nI get one liner tooltip, and I have no control when lines ends and moves to the next line\r\n\r\n#### What are the steps to reproduce?\r\nhtml\r\n```\r\n<p  [matTooltipClass]=\"'my-tooltip'\"\r\n       [matTooltip]=\"getTooltopScript(nearestStations)\">\r\n                Hello World!\r\n</p>\r\n```\r\n\r\ntypescript\r\n```\r\ngetTooltopScript(ns: any[]]){\r\n          let part1 =  ns[0]['stationName'] ;\r\n          let part2 = ns[0]['regionName'];\r\n          return `${part1}.\\r\\n\\\r\n           ${part2}.`;\r\n}\r\n```\r\n\r\nCSS\r\n```\r\n.mat-tooltip {\r\n    white-space: pre-line;\r\n}\r\n\r\n::ng-deep .mat-tooltip {\r\n    white-space: pre-line;\r\n}\r\n```\r\n\r\n\r\n#### Which versions of Angular, Material, OS, TypeScript, browsers are affected?\r\nAngular 9,     \"@angular/material\": \"^8.1.4\",    \"typescript\": \"~3.7.5\", Chrome Version 80.0.3987.149 (Official Build) (64-bit)\r\n","Url":"https://github.com/angular/components/issues/18941","RelatedDescription":"Open issue \"Can't make multi-line matTooltip, always getting single-line\" (#18941)"},{"Id":"589632424","IsPullRequest":false,"CreatedAt":"2020-03-28T18:28:39","Actor":"pascalstockert","Number":"18940","RawContent":null,"Title":"NgMaterial with Ivy -> Error NG6002","State":"open","Body":"#### Bug, feature request, or proposal:\r\nBug\r\n\r\n#### What is the expected behavior?\r\nng add @angular/material -> selecting a color-theme and enabling browser-animations -> adding the MatExpansionModule to app.module.ts-imports -> using respective tags in a component -> Expansionpanel gets displayed correctly\r\n\r\n#### What is the current behavior?\r\nng add @angular/material -> selecting a color-theme and enabling browser-animations -> adding the MatExpansionModule to app.module.ts-imports -> using respective tags in a component ->\r\n\r\n> ERROR in ../../../node_modules/@angular/material/expansion/expansion-module.d.ts:8:22 - error NG6002: Appears in the NgModule.imports of AppModule, but could not be resolved to an NgModule class. This likely means that the library (@angular/material/expansion) which declares MatExpansionModule has not been processed correctly by ngcc, or is not compatible with Angular Ivy. Check if a newer version of the library is available, and update if so. Also cons\r\nider checking with the library's authors to see if the library is expected to be compatible with Ivy.\r\n\r\n#### What are the steps to reproduce?\r\nAdd any MaterialModule to the app.module.ts-imports and try using the respective tags. So far all of the Modules throw this error.\r\n\r\n\r\n#### What is the use-case or motivation for changing an existing behavior?\r\n\r\n\r\n#### Which versions of Angular, Material, OS, TypeScript, browsers are affected?\r\n|Package|Version|\r\n---|---\r\n@angular-devkit/architect|0.900.7\r\n@angular-devkit/build-angular|0.900.7\r\n@angular-devkit/build-optimizer|0.900.7\r\n@angular-devkit/build-webpack|0.900.7\r\n@angular-devkit/core|9.0.7\r\n@angular-devkit/schematics|9.0.7\r\n@angular/cdk|9.2.0\r\n@angular/fire|6.0.0-rc.1\r\n@angular/material|9.2.0\r\n@ngtools/webpack|9.0.7\r\n@schematics/angular|9.0.7\r\n@schematics/update |0.900.7\r\nrxjs|6.5.4\r\ntypescript|3.7.5\r\nwebpack|4.41.2\r\n\r\n#### Is there anything else we should know?\r\nI don't know if I'm the one doing something wrong, but it used to work just like this before. I frankly don't quite know what I did to make stuff go bad :c\r\n**Excerpt from app.module.ts:**\r\n```\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    OverviewComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatExpansionModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\n```","Url":"https://github.com/angular/components/issues/18940","RelatedDescription":"Open issue \"NgMaterial with Ivy -> Error NG6002\" (#18940)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-04-02T05:30:05.4008913Z","RunDurationInMilliseconds":2844}