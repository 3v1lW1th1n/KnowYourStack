{"Data":{"Sdk":{"Events":[{"Id":"7533506389","Type":"PullRequestEvent","CreatedAt":"2018-04-16T02:53:20","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/486","RelatedDescription":"Merged pull request \"Merge master into office2016\" (#486) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"7533438605","Type":"PullRequestEvent","CreatedAt":"2018-04-16T02:26:04","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/486","RelatedDescription":"Opened pull request \"Merge master into office2016\" (#486) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"7532978416","Type":"PullRequestEvent","CreatedAt":"2018-04-15T22:19:37","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/483","RelatedDescription":"Merged pull request \"Add names to DataMembers to simplify restriction serialization\" (#483) at OfficeDev/Open-XML-SDK","RelatedBody":"This reduces each of the restrictions files size by around 70% by\r\nsetting names for the fields of only a few characters."},{"Id":"7530684914","Type":"IssuesEvent","CreatedAt":"2018-04-14T19:24:49","Actor":"ThomasBarnekow","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/485","RelatedDescription":"Opened issue \"OpenXmlSimpleType children do not implement equality\" (#485) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nClasses like `StringValue` and `HexBinaryValue` do not implement equality and you must use their `Value` properties to compare them. This is not handy and lead to unexpected results.\r\n\r\n**Information**\r\n\r\n- .NET Target: Any\r\n- DocumentFormat.OpenXml Version: 2.8.1\r\n\r\n**Repro**\r\n\r\n```csharp\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing DocumentFormat.OpenXml;\r\nusing Xunit;\r\n\r\nnamespace DocumantFormat.OpenXml.Tests\r\n{\r\n    public class OpenXmlSimpleValueTests\r\n    {\r\n        private const string HexBinary = \"12345678\";\r\n        private const string Value = \"Hello World\";\r\n\r\n        [Fact]\r\n        public void HexBinaryValue_ValuesAreEqual_HexBinaryValuesAreNotEqual()\r\n        {\r\n            var hexBinaryValue1 = new HexBinaryValue(HexBinary);\r\n            var hexBinaryValue2 = new HexBinaryValue(HexBinary);\r\n\r\n            Assert.Equal(hexBinaryValue1.Value, hexBinaryValue2.Value);\r\n\r\n            // Those two HexBinaryValue instances should be deemed equal.\r\n            Assert.NotEqual(hexBinaryValue1, hexBinaryValue2);\r\n        }\r\n\r\n        [Fact]\r\n        public void HexBinaryValue_ValueIsContainedInList_ListDoesNotContainHexBinaryValue()\r\n        {\r\n            var hexBinaryValues = new List<HexBinaryValue>\r\n            {\r\n                new HexBinaryValue(HexBinary),\r\n                new HexBinaryValue(\"ABCDEF00\")\r\n            };\r\n\r\n            var hexBinaryValue = new HexBinaryValue(HexBinary);\r\n\r\n            Assert.Contains(hexBinaryValue.Value, hexBinaryValues.Select(hbv => hbv.Value));\r\n\r\n            // The HexBinaryValue should be deemed contained in the list.\r\n            // The fact that this wasn't the case was a gotcha.\r\n            Assert.DoesNotContain(hexBinaryValue, hexBinaryValues);\r\n        }\r\n\r\n        [Fact]\r\n        public void StringValue_ValuesAreEqual_StringValuesAreNotEqual()\r\n        {\r\n            var stringValue1 = new StringValue(Value);\r\n            var stringValue2 = new StringValue(Value);\r\n\r\n            Assert.Equal(stringValue1.Value, stringValue2.Value);\r\n\r\n            // The two StringValue instances should be deemed equal.\r\n            Assert.NotEqual(stringValue1, stringValue2);\r\n        }\r\n    }\r\n}\r\n``` \r\n\r\n**Observed**\r\n\r\nTwo distinct instances of `HexBinaryValue` or `StringValue`, for example, will not be deemed equal even if their values are equal.\r\n\r\n**Expected**\r\n\r\nGiven two distinct instances of `HexBinaryValue`, when the `Value` properties of those instances are equal, then those `HexBinaryValue` instances should be deemed equal as well.\r\n\r\nThe same should apply to other child classes of `OpenXmlSimpleType` such as `StringValue`."},{"Id":"7530271856","Type":"IssuesEvent","CreatedAt":"2018-04-14T15:09:11","Actor":"ThomasBarnekow","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/484","RelatedDescription":"Opened issue \"No support for commentsIds part in master or Office2016 branches\" (#484) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nThere is currently no support for the `commentsIds.xml` part and related `w16cid:commentsIds` and `w16cid:commentId` elements.\r\n\r\n**Information**\r\n\r\nStatus as of April 14, 2018:\r\n\r\n- master at abbca550c814ead5935862786727ad8ae1328cd1\r\n- feature/office2016 at bf8833877c17b95d6d31f1746b2b0b3de76f0cae\r\n\r\n**Repro**\r\n\r\nOffice 2016 creates a `commentsIds.xml` part next to the `comments.xml` and `commentsExtended.xml` parts. Simplified example (with unnecessary namespace declarations removed):\r\n\r\n```xml\r\n<w16cid:commentsIds xmlns:w16cid=\"http://schemas.microsoft.com/office/word/2016/wordml/cid\">\r\n  <w16cid:commentId w16cid:paraId=\"6C038D6C\" w16cid:durableId=\"1E791E73\"/>\r\n  <w16cid:commentId w16cid:paraId=\"2E0CD699\" w16cid:durableId=\"1E7B8259\"/>\r\n  <w16cid:commentId w16cid:paraId=\"5CE268F4\" w16cid:durableId=\"1E7B8840\"/>\r\n</w16cid:commentsIds>\r\n``` \r\n\r\n**Observed**\r\n\r\nThere is currently no (direct) way of creating the above part with the Open XML SDK.\r\n\r\n**Expected**\r\n\r\nAs part of its Office 2016 support, the Open XML SDK provides a way to create that part and also offers strongly typed classes for the `w16cid:commentsIds` and `w16cid:commentId` elements."},{"Id":"7530228001","Type":"PullRequestEvent","CreatedAt":"2018-04-14T14:42:39","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/483","RelatedDescription":"Opened pull request \"Add names to datamembers to simplify restriction serialization\" (#483) at OfficeDev/Open-XML-SDK","RelatedBody":"This reduces each of the restrictions files size by around 70% by\r\nsetting names for the fields of only a few characters."},{"Id":"7530209593","Type":"PullRequestEvent","CreatedAt":"2018-04-14T14:31:20","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/482","RelatedDescription":"Merged pull request \"Use marshalling to load constraint data\" (#482) at OfficeDev/Open-XML-SDK","RelatedBody":"Instead of reading byte by byte, we can just load the entire structure\r\nat a single time since all the objects are structs and have simple data\r\ntypes. This provides a good performance help and allows for easier\r\nupdates to the data structures without needing to manually rework the\r\nserialization and deserialization methods"},{"Id":"7524112260","Type":"PullRequestEvent","CreatedAt":"2018-04-13T05:22:14","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/481","RelatedDescription":"Merged pull request \"A few perf improvements\" (#481) at OfficeDev/Open-XML-SDK","RelatedBody":"- A `.Where` in the SemanticConstraintRegistry is in a hot path for validation and adds a number of allocations during validation\r\n- A few restrictions were using Regex values. These are removed where easy, and otherwise precompiled if possible\r\n- ValidationTraverser contained a lambda that was unnecessary and is on a hot path so it was allocating a large percentage of the validation memory"},{"Id":"7523852264","Type":"PullRequestEvent","CreatedAt":"2018-04-13T03:34:50","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/482","RelatedDescription":"Opened pull request \"Use marshalling to load constraint data\" (#482) at OfficeDev/Open-XML-SDK","RelatedBody":"Instead of reading byte by byte, we can just load the entire structure\r\nat a single time since all the objects are structs and have simple data\r\ntypes. This provides a good performance help and allows for easier\r\nupdates to the data structures without needing to manually rework the\r\nserialization and deserialization methods"},{"Id":"7523832549","Type":"PullRequestEvent","CreatedAt":"2018-04-13T03:27:06","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/481","RelatedDescription":"Opened pull request \"A few perf improvements\" (#481) at OfficeDev/Open-XML-SDK","RelatedBody":"- A `.Where` in the SemanticConstraintRegistry is in a hot path for validation and adds a number of allocations during validation\r\n- A few restrictions were using Regex values. These are removed where easy, and otherwise precompiled if possible\r\n- ValidationTraverser contained a lambda that was unnecessary and is on a hot path so it was allocating a large percentage of the validation memory"},{"Id":"7518726587","Type":"IssuesEvent","CreatedAt":"2018-04-12T09:18:35","Actor":"proff","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/480","RelatedDescription":"Opened issue \"static method AttributeTranslator.DicOfTranslators is not thread safe\" (#480) at OfficeDev/Open-XML-SDK","RelatedBody":"![default](https://user-images.githubusercontent.com/991922/38667774-f6e171e8-3e4a-11e8-929a-48dfa5398f2d.png)\r\nWhen loading excel files from different threads this method can be executed at same time. On screenshot we got race condition when inserting tblLook in non thread safe class Dictionary"}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[{"Id":"7523781661","Type":"PullRequestEvent","CreatedAt":"2018-04-13T03:07:27","Actor":"ocdi","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/219","RelatedDescription":"Opened pull request \"Add additional styling controls\" (#219) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"I had a need to control cell colouring, rotation for manually crafting some Excel files. I've been using this code in production since at least 2017, just thought I would share my commits if anyone else would like to use them."},{"Id":"7497493664","Type":"PullRequestEvent","CreatedAt":"2018-04-08T20:15:11","Actor":"TiagoBonin","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/218","RelatedDescription":"Opened pull request \"Allow HtmlToWmlConverterCore to recognize the \"text-align\" css property\" (#218) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"I working on a project where I have to convert an html file into a word document and insert it into a bigger word document.\r\n\r\nDuring the process I noticed that the code was not recognizing when the css property \"text-align\" was set, and because o that the text was never changing it's align.\r\n\r\nMy change consist in fixing it so the code will be able to recognize the \"text-align\" attribute.\r\n\r\nWhat I basicaly did is:\r\nCapturing every css atribute that is set in the HTML, and adding to the standard library of css properties with a foreach loop.\r\n\r\nI'm creating this pull request to try to improve the code, if I did it wrong please let me know\r\nThere are some auto corrections made by the visual studio, don't mind it."},{"Id":"7472826606","Type":"IssuesEvent","CreatedAt":"2018-04-03T13:48:13","Actor":"adamjez","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/217","RelatedDescription":"Closed issue \"ore\" (#217) at OfficeDev/Open-Xml-PowerTools","RelatedBody":""},{"Id":"7472825449","Type":"IssuesEvent","CreatedAt":"2018-04-03T13:47:58","Actor":"adamjez","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/217","RelatedDescription":"Opened issue \"ore\" (#217) at OfficeDev/Open-Xml-PowerTools","RelatedBody":""},{"Id":"7460221411","Type":"IssuesEvent","CreatedAt":"2018-03-30T18:41:29","Actor":"MatthewMcD","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/143","RelatedDescription":"Closed issue \"Unable to run any PowerShell Cmdlets\" (#143) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"I am really struggling here.\r\nI cloned both Open-XML-SDK and Open-XML-PowerTools.\r\nI compiled the Open-XML-SDK\r\nI tried \r\n`Import-Module .\\Open-XML-PowerTools.psm1` and I get:\r\n> Add-Type : Cannot bind parameter 'Path' to the target. Exception setting \"Path\": \"Cannot find path 'C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-Sdk\\DocumentFormat.OpenXml\\bin\\debug\\System.IO.Packaging.dll' because it does not exist.\"\r\n> At C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-PowerTools\\AddTypes.ps1:69 char:16. -Type -Path \"$PSScriptRoot\\..\\Open-Xml-Sdk\\DocumentFormat.OpenXml\\bin ...\r\n> CategoryInfo          : WriteError: (:) [Add-Type], ParameterBindingException\r\n> FullyQualifiedErrorId : ParameterBindingFailed,Microsoft.PowerShell.Commands.AddTypeCommand\r\n> \r\n> Add-Type : (0) : Metadata file 'C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-PowerTools\\..\\Open-Xml-Sdk\\DocumentFormat.OpenXml\\bin\\debug\\System.IO.Packaging.dll' could not be found\r\n> At C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-PowerTools\\AddTypes.ps1:70 char:1\r\n> Add-Type -ReferencedAssemblies $assemblies -Path $sources -OutputAsse ...\r\n>  CategoryInfo          : InvalidData: (Microsoft.Power...peCompilerError:AddTypeCompilerError) [Add-Type], Exception FullyQualifiedErrorId : SOURCE_CODE_ERROR,Microsoft.PowerShell.Commands.AddTypeCommand\r\n> Add-Type : Cannot add type. Compilation errors occurred.\r\n> At C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-PowerTools\\AddTypes.ps1:70 char:1\r\n> Add-Type -ReferencedAssemblies $assemblies -Path $sources -OutputAsse ...\r\n>  CategoryInfo          : InvalidData: (:) [Add-Type], InvalidOperationException\r\n> FullyQualifiedErrorId : COMPILER_ERRORS,Microsoft.PowerShell.Commands.AddTypeCommand\r\n\r\nI fixed the paths by adding \"\\net46\\ to the debug dll locations in AddTypes.ps1 Now the Import-Module works without error. When I try any cmdlet like the example:\r\n`New-Docx Out-2.docx -Comment`\r\nI get:\r\n\r\n> New-Object : Cannot find type [System.Collections.Generic.List[OpenXmlPowerTools.Source]]: verify that the assembly containing this type is loaded.\r\n> At C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-PowerTools\\Cmdlets\\New-Docx.ps1:303 char:16   $srcList = New-Object 'System.Collections.Generic.List[OpenXmlPowerT ...\r\n> CategoryInfo          : InvalidType: (:) [New-Object], PSArgumentException\r\n> FullyQualifiedErrorId : TypeNotFound,Microsoft.PowerShell.Commands.NewObjectCommand\r\n> \r\n> New-Object : Cannot find type [OpenXmlPowerTools.WmlDocument]: verify that the assembly containing this type is loaded. At C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-PowerTools\\Cmdlets\\New-Docx.ps1:404 char:13\r\n> $wml = (New-Object OpenXmlPowerTools.WmlDocument(\"DummyName.docx\" ...\r\n> CategoryInfo          : InvalidType: (:) [New-Object], PSArgumentException\r\n> FullyQualifiedErrorId : TypeNotFound,Microsoft.PowerShell.Commands.NewObjectCommand\r\n> \r\n> New-Object : Cannot find type [OpenXmlPowerTools.Source]: verify that the assembly containing this type is loaded. At C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-PowerTools\\Cmdlets\\New-Docx.ps1:411 char:17\r\n> $src = (New-Object OpenXmlPowerTools.Source($wml))\r\n> CategoryInfo          : InvalidType: (:) [New-Object], PSArgumentException\r\n> FullyQualifiedErrorId : TypeNotFound,Microsoft.PowerShell.Commands.NewObjectCommand\r\n> \r\n> You cannot call a method on a null-valued expression.\r\n> At C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-PowerTools\\Cmdlets\\New-Docx.ps1:413 char:5\r\n> $srcList.Add($src)\r\n> \r\n> CategoryInfo          : InvalidOperation: (:) [], RuntimeException\r\n> FullyQualifiedErrorId : InvokeMethodOnNull\r\n> \r\n> Unable to find type [OpenXmlPowerTools.DocumentBuilder]. At C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-PowerTools\\Cmdlets\\New-Docx.ps1:351 char:26\r\n> $mergedWmlDocument = [OpenXmlPowerTools.DocumentBuilder]::BuildDo ...\r\n> CategoryInfo          : InvalidOperation: (OpenXmlPowerTools.DocumentBuilder:TypeName) [], RuntimeException FullyQualifiedErrorId : TypeNotFound\r\n> \r\n> You cannot call a method on a null-valued expression.\r\n> At C:\\Users\\ruby\\Documents\\WindowsPowerShell\\Modules\\Open-Xml-PowerTools\\Cmdlets\\New-Docx.ps1:385 char:13\r\n> $mergedWmlDocument.SaveAs($outputFi.FullName)\r\n> CategoryInfo          : InvalidOperation: (:) [], RuntimeException\r\n> FullyQualifiedErrorId : InvokeMethodOnNull\r\n> \r\n\r\nDoes the PowerShell work for anyone? I just want to use the project. I have spent several hours on and off trying to get this to work. Any help will be greatly appreciated.\r\n\r\nEven better...can I get an \"Install-Module\" option so I don't have to build it all myself?"}],"ResultType":"GitHubEvent"}},"RunOn":"2018-04-16T05:30:30.5238143Z","RunDurationInMilliseconds":1816}