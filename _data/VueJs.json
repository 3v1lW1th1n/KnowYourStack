{"Data":{"Vue":{"Events":[{"Id":"6893594680","Type":"PullRequestEvent","CreatedAt":"2017-11-23T05:15:35","Actor":"Hanks10100","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/pull/7115","RelatedDescription":"Opened pull request \"style(weex): update weex utils\" (#7115) at vuejs/vue","RelatedBody":"**What kind of change does this PR introduce?**\r\n\r\n- [x] Code style update\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n- [x] No\r\n\r\n**Other information:**\r\n\r\n+ Add flow type annotations.\r\n+ Add the `registerComponentHook` and the `updateComponentData` API.\r\n"},{"Id":"6893408806","Type":"IssuesEvent","CreatedAt":"2017-11-23T03:31:37","Actor":"lemontizz","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/7114","RelatedDescription":"Opened issue \"vue路由切换：从A页面切到B页面时，怎么把A页面的js都卸载掉，不要再执行A页面未执行完的js代码呢？\" (#7114) at vuejs/vue","RelatedBody":"### What problem does this feature solve?\r\nvue路由切换：从A页面切到B页面时，怎么把A页面的js都卸载掉，不要再执行A页面未执行完的js代码呢？\r\n\r\n### What does the proposed API look like?\r\n在router配置的地方,添加一个字段判断是否需要卸载\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6893332273","Type":"PullRequestEvent","CreatedAt":"2017-11-23T02:53:23","Actor":"rbrtmrtn","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/pull/7113","RelatedDescription":"Opened pull request \"chore: fix comment typo\" (#7113) at vuejs/vue","RelatedBody":"Random find :)\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n"}],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"6892224235","Type":"IssuesEvent","CreatedAt":"2017-11-22T20:05:53","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1901","RelatedDescription":"Closed issue \"Pass props via router-link\" (#1901) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nIt is possible to pass props via the defined routes. Unfortunately, I can't get the complete object passed to the `to` attribute from the route props function.\r\n\r\nroutes:\r\n```js\r\nroutes: {\r\n    {\r\n        path: '/device/:id',\r\n        component: load('device/DeviceView'),\r\n        props: (route) => { console.log(route) // does not contain route.props }\r\n    }\r\n}\r\n```\r\n\r\ntemplate\r\n```html\r\n<router-link :to=\"{path: `device/${device.UniqueID}`, props: {device: device}}\">show device</router-link>\r\n```\r\n\r\n### What does the proposed API look like?\r\nSame as above. I would like to pass the props via `router-link`:\r\n```html\r\n<router-link :to=\"{path: `device/${device.UniqueID}`, props: {device: device}}\">show device</router-link>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6891326484","Type":"IssuesEvent","CreatedAt":"2017-11-22T16:41:54","Actor":"MartinMuzatko","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1901","RelatedDescription":"Opened issue \"Pass props via router-link\" (#1901) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nIt is possible to pass props via the defined routes. Unfortunately, I can't get the complete object passed to the `to` attribute from the route props function.\r\n\r\nroutes:\r\n```js\r\nroutes: {\r\n        {\r\n            path: '/device/:id',\r\n            component: load('device/DeviceView'),\r\n            props: (route) => { console.log(route) // does not contain route.props }\r\n        }\r\n}\r\n```\r\n\r\ntemplate\r\n```html\r\n<router-link :to=\"{path: `device/${device.UniqueID}`, props: {device: device}}\">show device</router-link>\r\n```\r\n\r\n### What does the proposed API look like?\r\n```html\r\n<router-link :to=\"{path: `device/${device.UniqueID}`, props: {device: device}}\">show device</router-link>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6891050614","Type":"IssuesEvent","CreatedAt":"2017-11-22T15:52:49","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1900","RelatedDescription":"Closed issue \"beforeEach() hook not called 2nd time when next() redirects to origin\" (#1900) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/fjelsted/pen/WXJvKa](https://codepen.io/fjelsted/pen/WXJvKa)\r\n\r\n### Steps to reproduce\r\nPress the shown links in the following order: A -> B -> B\r\n\r\n### What is expected?\r\nThe letter C to be green\r\n\r\n### What is actually happening?\r\nThe letter C turns red\r\n\r\n---\r\nIn the beforeEach() hook I am determining whether to show the navbar based on the route path's meta properties. The visibility-boolean is kept in a Vuex store.\r\n\r\nIf the user attempts to access \"/settings\" (with visible navbar) while unauthorized, they will be redirected to \"/sign-in\" (hidden navbar). Pressing the browsers back button will result in staying on \"/sign-in\" but with a visible navbar.\r\n\r\nStill very much a noob at Vue, at Javascript, at life in general... is this a dumb way of doing it? Anyways, this is not the place. Just in case I had missed something glaringly obvious. :)\r\n\r\nI'm pretty sure the bug happens because the origin and destination paths match, therefore no beforeEach() hook is called a second time.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6890496454","Type":"IssuesEvent","CreatedAt":"2017-11-22T14:13:11","Actor":"fjelsted","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1900","RelatedDescription":"Opened issue \"beforeEach() hook not called 2nd time when next() redirects to origin\" (#1900) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/fjelsted/pen/WXJvKa](https://codepen.io/fjelsted/pen/WXJvKa)\r\n\r\n### Steps to reproduce\r\nPress the shown links in the following order: A -> B -> B\r\n\r\n### What is expected?\r\nThe letter C to be green\r\n\r\n### What is actually happening?\r\nThe letter C turns red\r\n\r\n---\r\nIn the beforeEach() hook I am determining whether to show the navbar based on the route path's meta properties. The visibility-boolean is kept in a Vuex store.\r\n\r\nIf the user attempts to access \"/settings\" (with visible navbar) while unauthorized, they will be redirected to \"/sign-in\" (hidden navbar). Pressing the browsers back button will result in staying on \"/sign-in\" but with a visible navbar.\r\n\r\nStill very much a noob at Vue, at Javascript, at life in general... is this a dumb way of doing it? Anyways, this is not the place. Just in case I had missed something glaringly obvious. :)\r\n\r\nI'm pretty sure the bug happens because the origin and destination paths match, therefore no beforeEach() hook is called a second time.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6888921458","Type":"IssuesEvent","CreatedAt":"2017-11-22T08:30:33","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1899","RelatedDescription":"Closed issue \"[feature request] Could i use 'append' in $router\" (#1899) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\n`/order/123`\r\n`this.$router.append('cancel')`\r\n`/order/123/cancel`\r\n\r\n### What does the proposed API look like?\r\nappend current path\r\n\r\n#911\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6888842913","Type":"IssuesEvent","CreatedAt":"2017-11-22T08:09:36","Actor":"yoyo837","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1899","RelatedDescription":"Opened issue \"Could i use 'append' in $router\" (#1899) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\n`/order/123`\r\n`this.$router.append('cancel')`\r\n`/order/123/cancel`\r\n\r\n### What does the proposed API look like?\r\nappend current path\r\n\r\n#911\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"6889330382","Type":"IssuesEvent","CreatedAt":"2017-11-22T10:00:27","Actor":"ktsn","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/1063","RelatedDescription":"Closed issue \"Support Set object in Vuex\" (#1063) at vuejs/vuex","RelatedBody":"### What problem does this feature solve?\r\nSet object are very useful in situations where uniqueness is required. In my opinion it is cleaner to use Set instead object literals with values set to `true`\r\n\r\n```javascript\r\n\r\nvar state = {\r\n  items: new Set()\r\n}\r\nvar mutations = {\r\n  newItem(state, item) {\r\n    // state.items = { ...state.items, item: true }  // -- works but it is kinda hack\r\n    // state.items = new Set([...state.items, item]) // -- this works correctly but is messy\r\n    \r\n    state.items.add(item) // -- it seems to not observe changes through add method.\r\n  }\r\n}\r\n```\r\nLink to sandbox with this example  https://codesandbox.io/s/03w04xjq4p\r\n\r\n\r\n### What does the proposed API look like?\r\nNo extra API is needed. Observe changes through native Set methods `add` and `delete`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6889202581","Type":"IssuesEvent","CreatedAt":"2017-11-22T09:34:54","Actor":"ppasieka","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1063","RelatedDescription":"Opened issue \"Support Set object in Vuex\" (#1063) at vuejs/vuex","RelatedBody":"### What problem does this feature solve?\r\nSet object are very useful in situations where uniqueness is required. In my opinion it is cleaner to use Set instead object literals with values set to `true`\r\n\r\n```javascript\r\n\r\nvar state = {\r\n  items: new Set()\r\n}\r\nvar mutations = {\r\n  newItem(state, item) {\r\n    // state.items = { ...state.items, item: true }  // -- works but it is kinda hack\r\n    // state.items = new Set([...state.items, item]) // -- this works correctly but is messy\r\n    \r\n    state.items.add(item) // -- it seems to not observe changes through add method.\r\n  }\r\n}\r\n```\r\nLink to sandbox with this example  https://codesandbox.io/s/03w04xjq4p\r\n\r\n\r\n### What does the proposed API look like?\r\nNo extra API is needed. Observe changes through native Set methods `add` and `delete`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"}},"RunOn":"2017-11-23T05:30:33.6027179Z","RunDurationInMilliseconds":2142}