{"Data":{"Sdk":{"Events":[{"Id":"7147905111","Type":"PullRequestEvent","CreatedAt":"2018-01-25T03:24:13","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/388","RelatedDescription":"Opened pull request \"Remove package state in DocumentValidator\" (#388) at OfficeDev/Open-XML-SDK","RelatedBody":"The DocumentValidator was maintaining a reference to the previously validated document. This removes the state kept within the DocumentValidator and adds a test to ensure we are not holding on to any document reference.\r\n\r\nFixes #52 "},{"Id":"7147058036","Type":"IssuesEvent","CreatedAt":"2018-01-24T22:51:31","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/380","RelatedDescription":"Closed issue \"ToFlatOpcString fails with generated document\" (#380) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\n`ToFlatOpcString` throws \"Root element is missing.\" I'm trying to put this format into a VSTO add-in. When I enumerate `wordprocessingDocument.Package.GetParts()`, I get the relationship part back as an empty string (`ContentType = \"application/vnd.openxmlformats-package.relationships+xml\"`). Shouldn't `AddMainDocumentPart` take care of this under the covers?\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Core 2.0, .NET Framework 4.7\r\n- DocumentFormat.OpenXml Version: 2.8.1\r\n\r\n**Repro**\r\n\r\n```csharp\r\nusing System;\r\nusing System.IO;\r\nusing DocumentFormat.OpenXml;\r\nusing DocumentFormat.OpenXml.Packaging;\r\nusing DocumentFormat.OpenXml.Wordprocessing;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            using (MemoryStream stream = new MemoryStream())\r\n            using (WordprocessingDocument wordprocessingDocument = WordprocessingDocument.Create(stream, WordprocessingDocumentType.Document))\r\n            {\r\n                MainDocumentPart mainDocumentPart = wordprocessingDocument.AddMainDocumentPart();\r\n                Body body = new Body(new Paragraph(new Run(new RunProperties(new Bold()),\r\n                    new Text(\"Hello world this should be bold\"))));\r\n                mainDocumentPart.Document = new Document(body);\r\n\r\n                wordprocessingDocument.Save();\r\n\r\n                Console.WriteLine(wordprocessingDocument.ToFlatOpcDocument());\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n``` \r\n\r\n**Observed**\r\n\r\nException:\r\n\r\n```\r\nSystem.Xml.XmlException: Root element is missing.\r\n   at System.Xml.XmlTextReaderImpl.Throw(Exception e)\r\n   at System.Xml.XmlTextReaderImpl.ParseDocumentContent()\r\n   at System.Xml.XmlTextReaderImpl.Read()\r\n   at System.Xml.XmlReader.MoveToContent()\r\n   at System.Xml.Linq.XElement.Load(XmlReader reader, LoadOptions options)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.GetContentsAsXml(PackagePart part)\r\n   at System.Linq.Enumerable.SelectEnumerableIterator`2.MoveNext()\r\n   at System.Xml.Linq.XContainer.AddContentSkipNotify(Object content)\r\n   at System.Xml.Linq.XContainer.AddContentSkipNotify(Object content)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.ToFlatOpcDocument(XProcessingInstruction instruction)\r\n   at ConsoleApp1.Program.Main(String[] args)\r\n```\r\n\r\n**Expected**\r\n\r\nThat `ToFlatOpcString` doesn't throw and I get the resulting XML string.\r\n"},{"Id":"7146728987","Type":"PullRequestEvent","CreatedAt":"2018-01-24T21:38:06","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/383","RelatedDescription":"Merged pull request \"Add tests for flatopc without flush\" (#383) at OfficeDev/Open-XML-SDK","RelatedBody":"@daniel-white I added these from your previous PR. Seems they should go into this FlatOpcTests.cs."},{"Id":"7142105576","Type":"IssuesEvent","CreatedAt":"2018-01-24T04:38:45","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/387","RelatedDescription":"Opened issue \"Changes for 3.x version\" (#387) at OfficeDev/Open-XML-SDK","RelatedBody":"I've noticed some things we can do when we decide to make a 3.x version which will allow us to have breaking changes. I'll keep this list up-to-date with ideas as we come across them:\r\n\r\n- [ ] `OpenXmlSimpleType.TextValue` should be made `private protected`\r\n- [ ] Types derived from `OpenXmlSimpleType` should not have implicit casting operators if they allocate objects\r\n- [ ] Make `EnumStringAttribute` internal\r\n- [ ] Consider making a `DocumentFormat.OpenXml.Validation` library that adds the validation logic. This currently adds a few megabytes to the openxml library"},{"Id":"7141451254","Type":"PullRequestEvent","CreatedAt":"2018-01-24T00:42:35","Actor":"tomjebo","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/386","RelatedDescription":"Merged pull request \"Simplify simple type implementations to reuse more code\" (#386) at OfficeDev/Open-XML-SDK","RelatedBody":"The current implementations have a lot of code duplication that can be simplified and moved into the base class. This fix only focuses on the simple value types which have a shared base class, `OpenXmlSimpleValue<T>`"}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[{"Id":"7114740250","Type":"PullRequestEvent","CreatedAt":"2018-01-18T02:27:51","Actor":"lpperras","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/200","RelatedDescription":"Opened pull request \"Safe HTML to wml\" (#200) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Check for properties that could be null when HTML is parsed."},{"Id":"7103446568","Type":"PullRequestEvent","CreatedAt":"2018-01-16T05:07:12","Actor":"lpperras","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/199","RelatedDescription":"Opened pull request \"No settings fix\" (#199) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Fixed issue with converting a docx to HTML that has no settings file."},{"Id":"7103393888","Type":"PullRequestEvent","CreatedAt":"2018-01-16T04:43:30","Actor":"lpperras","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/70","RelatedDescription":"Closed pull request \"Ability to process Flat to OPC and OPC to Flat in memory.\" (#70) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Added a couple of overloads to make it possible to transfer a flat opc structure to a docx package and vice versa without writing to disk.\n"},{"Id":"7102446154","Type":"IssuesEvent","CreatedAt":"2018-01-15T22:17:57","Actor":"AlirezaAhmadiRad","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/198","RelatedDescription":"Opened issue \"Exception during conversion of html table to docx\" (#198) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Hello\r\nI have [this html file](https://1drv.ms/f/s!Alj_FDyopEuRgtp3ZozLwqQGXxZNWQ). \r\nThis is code for converting it to docx:\r\n\r\n`                                XElement X = XElement.Parse(HT.HTML); \r\n                                HtmlToWmlConverterSettings S = HtmlToWmlConverter.GetDefaultSettings(); \r\n                                WmlDocument D = HtmlToWmlConverter.ConvertHtmlToWml(\"\", \"\", \"\", X, S); \r\n                                sources.Add(new Source(D, true));\r\n`\r\n\r\nThen I receive exception of \"Object reference not set to an instance of an object.\" at this address:\r\n\r\n   at OpenXmlPowerTools.HtmlToWml.HtmlToWmlConverterCore.GetTableGrid(XElement element, HtmlToWmlConverterSettings settings)     \r\n   at OpenXmlPowerTools.HtmlToWml.HtmlToWmlConverterCore.Transform(XNode node, HtmlToWmlConverterSettings settings, WordprocessingDocument wDoc, NextExpected nextExpected, Boolean preserveWhiteSpace)     \r\n   at OpenXmlPowerTools.HtmlToWml.HtmlToWmlConverterCore.<>c__DisplayClass20_0.<Transform>b__6(XNode n)     \r\n   at System.Linq.Enumerable.WhereSelectEnumerableIterator`2.MoveNext()     \r\n   at System.Xml.Linq.XContainer.AddContentSkipNotify(Object content)     \r\n   at System.Xml.Linq.XContainer.AddContentSkipNotify(Object content)     \r\n   at OpenXmlPowerTools.HtmlToWml.HtmlToWmlConverterCore.UpdateMainDocumentPart(WordprocessingDocument wDoc, XElement html, HtmlToWmlConverterSettings settings)     \r\n   at OpenXmlPowerTools.HtmlToWml.HtmlToWmlConverterCore.ConvertHtmlToWml(String defaultCss, String authorCss, String userCss, XElement xhtml, HtmlToWmlConverterSettings settings, WmlDocument emptyDocument, String annotatedHtmlDumpFileName)     \r\n   at OpenXmlPowerTools.HtmlToWmlConverter.ConvertHtmlToWml(String defaultCss, String authorCss, String userCss, XElement xhtml, HtmlToWmlConverterSettings settings)     at WebOS.Engine.V100.WebOSIO.GenerateWordReport(List`1 Tables, Guid FileID, String FileName, ReportType FileType, Guid OwnerProgramID, RemoteLogin ID) \r\n\r\nI'm using nuget version 4.5.3.2\r\nCould you please help?\r\n\r\n"},{"Id":"7090822866","Type":"PullRequestEvent","CreatedAt":"2018-01-12T10:28:26","Actor":"bonek","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/197","RelatedDescription":"Opened pull request \"Master\" (#197) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Fixed TextReplacer on empty string in parameter"},{"Id":"7082063968","Type":"PullRequestEvent","CreatedAt":"2018-01-10T18:45:18","Actor":"DiE-MaRMeLaDe","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/153","RelatedDescription":"Closed pull request \"Added .Net Core support without validation\" (#153) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Added .net core package without XSD validation."},{"Id":"7077940167","Type":"IssuesEvent","CreatedAt":"2018-01-10T00:34:50","Actor":"sandhyarkr","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/196","RelatedDescription":"Opened issue \"Support for converting textboxes in .docx  to html\" (#196) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Hi,\r\nI am using OpenXmlPowerTools 4.5.3.2 for my project to convert .docx files to html . I have found that the  textboxes within the .docx files are not being converted into html. Is this feature likely to be supported? \r\nI am doing this project as part of my organization requirement and most of the .docx files have textboxes and embedded data within the same which needs to be seen in the converted html .\r\nI am using Visual Studio 2012 with Update 5 applied and have retrieved the OpenXMLPowertools library through NuGet. \r\n\r\nAlso are any enhancements likely on making the html responsive?"}],"ResultType":"GitHubEvent"}},"RunOn":"2018-01-25T05:30:32.0249323Z","RunDurationInMilliseconds":1897}