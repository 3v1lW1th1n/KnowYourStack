{"Data":{"Vue-Issues":{"Issues":[{"Id":"465557208","IsPullRequest":false,"CreatedAt":"2019-07-09T04:01:53","Actor":"tengmaoqing","Number":"10248","RawContent":null,"Title":"Vue does not work properly when setting the SVG style property in a lower version of the android browser","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/XLyPJe](https://codepen.io/anon/pen/XLyPJe)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nenvironment:\r\n- qqBrowser 4.4\r\n- android 4.2.2\r\n- userAgent Mozilla/5.0 (Linux; U; Android 4.2.2; zh-cn; Coolpad 8297 Build/JDQ39) AppleWebKit/533.1 (KHTML, like Gecko)Version/4.0 MQQBrowser/4.4 Mobile Safari/533.1\r\n\r\n### What is expected?\r\nrender normally\r\n\r\n### What is actually happening?\r\nalert\r\nTypeError Cannot set property 'undefined' of null\r\n\r\n---\r\nif i remove `style=\"stroke: #FFDA05;\"` on SVG, it will be ok\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10248","RelatedDescription":"Open issue \"Vue does not work properly when setting the SVG style property in a lower version of the android browser\" (#10248)"},{"Id":"465543337","IsPullRequest":true,"CreatedAt":"2019-07-09T03:39:21","Actor":"fengyy51","Number":"10247","RawContent":null,"Title":"Test","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10247","RelatedDescription":"Closed or merged PR \"Test\" (#10247)"},{"Id":"464982996","IsPullRequest":true,"CreatedAt":"2019-07-08T13:30:34","Actor":"vue-bot","Number":"10242","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/10242","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#10242)"},{"Id":"464461870","IsPullRequest":true,"CreatedAt":"2019-07-08T13:29:52","Actor":"vue-bot","Number":"10233","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/10233","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#10233)"},{"Id":"464461839","IsPullRequest":true,"CreatedAt":"2019-07-08T13:28:26","Actor":"vue-bot","Number":"10232","RawContent":null,"Title":"[automated] Patreon backers update (Jul 2019","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/10232","RelatedDescription":"Closed or merged PR \"[automated] Patreon backers update (Jul 2019\" (#10232)"},{"Id":"465187523","IsPullRequest":false,"CreatedAt":"2019-07-08T10:56:57","Actor":"CarterLi","Number":"10246","RawContent":null,"Title":"inconsistence about data initialization and error checks","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\nN/A\r\n\r\n### Steps to reproduce\r\nN/A\r\n\r\n### What is actually happening?\r\nWe use [Object.keys](https://github.com/vuejs/vue/blob/3b8925bc7973bb71b33374281db10a945ca9854e/src/core/instance/state.js#L126) to enumerate data properties but use [operator `in`](https://github.com/vuejs/vue/blob/3b8925bc7973bb71b33374281db10a945ca9854e/src/core/instance/state.js#L202) to check their existence. Since operator `in` also checks for properties on objects' prototype chain, it results in inconsistence when handling special situations especially when the data object is created using [new class](https://github.com/CarterLi/vue-component-base/blob/master/index.ts#L154).\r\n\r\n### What is expected?\r\nTo be consistent with `initData`, use `hasOwn(vm.$data, key)` [here](https://github.com/vuejs/vue/blob/3b8925bc7973bb71b33374281db10a945ca9854e/src/core/instance/state.js#L201)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10246","RelatedDescription":"Closed issue \"inconsistence about data initialization and error checks\" (#10246)"},{"Id":"465135909","IsPullRequest":true,"CreatedAt":"2019-07-08T08:56:37","Actor":"RobbinBaauw","Number":"10245","RawContent":null,"Title":"feat(keep-alive): includes/excludes keep-alive based on key and name (fix #8028)","State":"open","Body":"The keep-alive component will now also use the key of the component when checking the includes or excludes properties.\r\n\r\nOn this way you can cache specific instances of a component instead of caching all instances of that component.\r\n\r\nfix #8028\r\n\r\n**What kind of change does this PR introduce?**\r\n\r\n- [ ] Bugfix\r\n- [X] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?**\r\n\r\n- [ ] Yes\r\n- [X] No\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [X] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [X] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [X] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [X] New/updated tests are included","Url":"https://github.com/vuejs/vue/pull/10245","RelatedDescription":"Open PR \"feat(keep-alive): includes/excludes keep-alive based on key and name (fix #8028)\" (#10245)"},{"Id":"465110936","IsPullRequest":false,"CreatedAt":"2019-07-08T08:01:30","Actor":"rishivarma12345","Number":"10244","RawContent":null,"Title":"how to reduce 5 secs Lagging for viewing and updating document.","State":"closed","Body":"view a document and update the document when i view the  updated document then it takes 5 secs lag to update that document mainly to view the document.","Url":"https://github.com/vuejs/vue/issues/10244","RelatedDescription":"Closed issue \"how to reduce 5 secs Lagging for viewing and updating document.\" (#10244)"},{"Id":"465031534","IsPullRequest":false,"CreatedAt":"2019-07-08T06:58:45","Actor":"FutureElement","Number":"10243","RawContent":null,"Title":"Dynamic Arguments not support to use uppercase","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/hataketed/m0t2ng8b/4/](https://jsfiddle.net/hataketed/m0t2ng8b/4/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\njust run and see the console errors\r\n\r\n### What is expected?\r\nclick alert\r\n\r\n### What is actually happening?\r\nvue.js:634 [Vue warn]: Property or method \"eventname\" is not defined on the instance but referenced during render. Make sure that this property is reactive, either in the data option, or for class-based components, by initializing the property. See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.\r\n\r\n(found in <Root>)\r\nwarn @ vue.js:634\r\nvue.js:634 [Vue warn]: Invalid value for dynamic directive argument (expected string or null): undefined\r\n\r\n(found in <Anonymous>)\r\nwarn @ vue.js:634\r\nvue.js:634 [Vue warn]: Property or method \"attributename\" is not defined on the instance but referenced during render. Make sure that this property is reactive, either in the data option, or for class-based components, by initializing the property. See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.\r\n\r\n(found in <Root>)\r\nwarn @ vue.js:634\r\nvue.js:634 [Vue warn]: Invalid value for dynamic directive argument (expected string or null): undefined\r\n\r\n(found in <Anonymous>)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10243","RelatedDescription":"Closed issue \"Dynamic Arguments not support to use uppercase\" (#10243)"},{"Id":"464920173","IsPullRequest":false,"CreatedAt":"2019-07-07T06:30:17","Actor":"WanFengZ","Number":"10241","RawContent":null,"Title":"关于生命周期和dom渲染的问题","State":"closed","Body":"在vue的生命周期中，mounted 里 使用 $nextTick() 仍然会有获取到dom却无法获取dom数据的情况（v-for 渲染出的dom,我无法取得dom集合的length来遍历），当我使用 watch() 监听 v-for遍历的变量，然后在函数中使用  $nextTick() 却可以获得数据，没有任何问题。为什么。。。","Url":"https://github.com/vuejs/vue/issues/10241","RelatedDescription":"Closed issue \"关于生命周期和dom渲染的问题\" (#10241)"},{"Id":"464919688","IsPullRequest":false,"CreatedAt":"2019-07-07T06:22:22","Actor":"WanFengZ","Number":"10240","RawContent":null,"Title":"in mounted()  use $nextTick() can get dom but can't get the data in dom(e: length)","State":"closed","Body":"In the life cycle of vue, using $nextTick () in mounted will still get DOM but not DOM data (i can't get DOM from V-for rendering, I can't get length of DOM collection to traverse). When I use watch () to listen for variables traversed by v-for, then use $nextTick () in function to get data. No problem. Can we improve this problem?\r\n","Url":"https://github.com/vuejs/vue/issues/10240","RelatedDescription":"Closed issue \"in mounted()  use $nextTick() can get dom but can't get the data in dom(e: length)\" (#10240)"},{"Id":"464902195","IsPullRequest":false,"CreatedAt":"2019-07-07T01:48:33","Actor":"neutron92","Number":"10239","RawContent":null,"Title":"how the vuejs compiler works","State":"closed","Body":"### What problem does this feature \r\nHello i want to know how the vuejs compiler works\r\n\r\nStep by step\r\nThanks\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10239","RelatedDescription":"Closed issue \"how the vuejs compiler works\" (#10239)"},{"Id":"464899437","IsPullRequest":false,"CreatedAt":"2019-07-06T23:44:39","Actor":"neutron92","Number":"10238","RawContent":null,"Title":"how the vuejs compiler works","State":"closed","Body":"Hello i want to know how the vuejs compiler works\r\n\r\n\r\nStep by step \r\nThanks","Url":"https://github.com/vuejs/vue/issues/10238","RelatedDescription":"Closed issue \"how the vuejs compiler works\" (#10238)"},{"Id":"464824169","IsPullRequest":false,"CreatedAt":"2019-07-06T09:46:48","Actor":"zhuangyan-stone","Number":"10237","RawContent":null,"Title":"iPhone 手机上调用vue方法，使用 大数字 入参无法正确渲染 ","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/d2school/pen/EBeREg](https://codepen.io/d2school/pen/EBeREg)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. 服务端写如下代码 （或见链接）\r\n```HTML\r\n<!DOCTYPE html>\r\n<html lang=\"zh\">\r\n<head>\r\n<script type=\"text/javascript\" src=\"https://cdn.bootcss.com/vue/2.6.10/vue.js\"></script>\r\n</head>\r\n<body>\r\n  <div id = \"app\">\r\n    {{test(1390000167)}}\r\n  </div>\r\n  <script type=\"text/javascript\">\r\n  var vm = new Vue({\r\n    el: '#app',\r\n    data: {},\r\n    methods: {    test: function (t) { return t; }  },\r\n  });\r\n </script>\r\n</body>\r\n</html>\r\n```\r\n2. 用除iPhone之外的手机，或桌面PC常用浏览器访问，输出 正确的 1390000167\r\n3. 在 iPhone 6, 7, XR 手机自带浏览器上，输出 {{test(1390000167)}}\r\n4. 将HTML中vue 相关代码改成： {{test( \"1390000167\")}}。 问题依旧。即：哪怕参数改为字符串，但只要字符串可以解析来一个大整数，问题依旧。\r\n5.  将HTML中vue 相关代码改成： {{test(\"A1390000167\")}}。 问题消失。即：如果字符串不是一个合法的数字，问题不存在。\r\n6. 剥离 vue 调用，直接在 iPhone中定义 test(d) 函数，再原生调用。一切正常。（因此认为应是vue的问题可能性较大）\r\n\r\n### What is expected?\r\n1390000167\r\n\r\n### What is actually happening?\r\n{{test(1390000167)}}\r\n\r\n---\r\n环境：\r\nvue ver: 2.5.12 ~ 2.6.10\r\niphone : 6, 7, xr\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10237","RelatedDescription":"Closed issue \"iPhone 手机上调用vue方法，使用 大数字 入参无法正确渲染 \" (#10237)"},{"Id":"464639458","IsPullRequest":false,"CreatedAt":"2019-07-05T13:23:35","Actor":"filmendless","Number":"10236","RawContent":null,"Title":"start","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/10236","RelatedDescription":"Closed issue \"start\" (#10236)"},{"Id":"464593524","IsPullRequest":false,"CreatedAt":"2019-07-05T11:18:38","Actor":"githubkl","Number":"10235","RawContent":null,"Title":"v-if下的自定义指令执行不稳定","State":"closed","Body":"    <div v-if=\"foo\" v-has-access=\"...\">\r\n        ...\r\n    </div>\r\n    \r\n上面的代码中，foo初始值为false，当变更为true时，v-has-access指令很不稳定，多次刷新页面，大概一半机率指令执行了，一半机率未执行。什么原因？","Url":"https://github.com/vuejs/vue/issues/10235","RelatedDescription":"Closed issue \"v-if下的自定义指令执行不稳定\" (#10235)"},{"Id":"464523311","IsPullRequest":false,"CreatedAt":"2019-07-05T08:28:48","Actor":"ganbowengo","Number":"10234","RawContent":null,"Title":"When the data A in data is object type, the getter method of A repeatedly collects unnecessary dependencies, and the subs in watcher saves unnecessary Deps.","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/GbBbwJ](https://codepen.io/anon/pen/GbBbwJ)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\njump link  https://codepen.io/anon/pen/GbBbwJ, Open the console to view _watcher in the Vue instance\r\n\r\n### What is expected?\r\n\r\nRemove Dep's unnecessary collection of Watchers\r\n\r\n### What is actually happening?\r\n...\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10234","RelatedDescription":"Closed issue \"When the data A in data is object type, the getter method of A repeatedly collects unnecessary dependencies, and the subs in watcher saves unnecessary Deps.\" (#10234)"},{"Id":"464439301","IsPullRequest":false,"CreatedAt":"2019-07-05T02:56:06","Actor":"WhatIsSpark","Number":"10231","RawContent":null,"Title":"如何将两个vue实例，聚合成一个vue实例","State":"closed","Body":"### What problem does this feature solve?\r\n微前端聚合\r\n\r\n### What does the proposed API look like?\r\nVue.compose\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10231","RelatedDescription":"Closed issue \"如何将两个vue实例，聚合成一个vue实例\" (#10231)"},{"Id":"464179195","IsPullRequest":false,"CreatedAt":"2019-07-04T10:12:46","Actor":"wolandec","Number":"10230","RawContent":null,"Title":"Add a track functionality to Vue","State":"closed","Body":"### What problem does this feature solve?\r\nTime to time one need to track setting of component data. Basically we use watch, but watch call a handle function only if data is changed. But it could be usefull to track all sets of data even if old and new values are the same. For example it would be a log messages. It may be the same but I need to add it in a list or something all the time, so I need to know each time when message is set.\r\n\r\n### What does the proposed API look like?\r\n```\r\ntrack:{\r\n handler: function(){},\r\n deep: true,\r\n immediate: true\r\n}\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10230","RelatedDescription":"Closed issue \"Add a track functionality to Vue\" (#10230)"},{"Id":"464023505","IsPullRequest":false,"CreatedAt":"2019-07-04T08:04:54","Actor":"NoobxzZhang","Number":"10228","RawContent":null,"Title":"not necessary warning in computed setter?","State":"closed","Body":"### Version\r\n2.6.6\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-rz1is](https://codesandbox.io/s/vue-template-rz1is)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. set a computed property `foo` with setter;\r\n2. setter use some property, like `this.flagFoo`, the property(`flagFoo`) is not defined on the data;\r\n3. trigger the `foo` setter ;\r\n\r\n### What is expected?\r\nnothing happen\r\n\r\n### What is actually happening?\r\nconsole send a [Vue warn]:\r\nProperty or method \"flagFoo\" is not defined on the instance but referenced during render.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10228","RelatedDescription":"Closed issue \"not necessary warning in computed setter?\" (#10228)"},{"Id":"464078589","IsPullRequest":true,"CreatedAt":"2019-07-04T06:04:44","Actor":"zrh122","Number":"10229","RawContent":null,"Title":"fix(slot): add a function to return the slot fallback content","State":"open","Body":"fixes #10224.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10229","RelatedDescription":"Open PR \"fix(slot): add a function to return the slot fallback content\" (#10229)"},{"Id":"463965171","IsPullRequest":false,"CreatedAt":"2019-07-03T21:43:56","Actor":"katerlouis","Number":"10227","RawContent":null,"Title":"Components transition `enter` function not called when using Vue version 2.6.10","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/katerlouis/vue-2610-bug](https://github.com/katerlouis/vue-2610-bug)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nserve or build the app\r\nand press the toggle button\r\n\r\n### What is expected?\r\nHelloWorld component should call `enter` function\r\n\r\n### What is actually happening?\r\nHelloWorld component doesn't call `enter` function\r\n\r\n---\r\n`enter` of the transition directly inside `App.vue` (the logo img) gets called though, which is odd.\r\nWith vue v2.5.17 it works as expected (haven't used any other vue version since)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10227","RelatedDescription":"Closed issue \"Components transition `enter` function not called when using Vue version 2.6.10\" (#10227)"},{"Id":"463853716","IsPullRequest":false,"CreatedAt":"2019-07-03T16:52:54","Actor":"m-ahmadi","Number":"10226","RawContent":null,"Title":"npm run serve command failed in a freshly made project created with @vue/cli. (Cannot find module '\\node_modules\\eslint\\lib\\api.js/package.json')","State":"closed","Body":"Here's what happened:\r\nInstalled vue cli tool.\r\ncreated a project using it.\r\ntried to start the project with `npm run serve` according to docs.\r\ncompile process failed, right out of the bat!\r\n\r\n![vi](https://user-images.githubusercontent.com/16363767/60611349-5e7a9000-9ddb-11e9-9ff7-56858244715a.png)\r\n\r\n### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/m-ahmadi/vue-issue](https://github.com/m-ahmadi/vue-issue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nnpm install @vue/cli -g &&\r\n vue create test_app &&\r\ndefault (babel, eslint) &&\r\ncd test_app &&\r\nnpm run serve\r\n\r\n\r\n### What is expected?\r\nThat the app will be served on a local URL.\r\n\r\n### What is actually happening?\r\nCompile process fails with 1 error: (Cannot find module '\\node_modules\\eslint\\lib\\api.js/package.json')\r\n\r\n---\r\nOS: Windows 7 Ultimate Service Pack 1\r\n\r\nnode -v: v8.11.3\r\nnpm -v:    6.9.0\r\nvue -V:     3.9.0\r\n---------------------------------------------------------------------------------------------------------\r\n\r\nnpm run serve\r\n\r\n> testvue2@0.1.0 serve E:\\xampp\\htdocs\\testvue2\r\n> vue-cli-service serve\r\n\r\n INFO  Starting development server...\r\n 98% after emitting CopyPlugin\r\n\r\n ERROR  Failed to compile with 1 errors                                                                 20:56:38\r\n\r\n\r\nModule build failed (from ./node_modules/eslint-loader/index.js):\r\nError: Cannot find module 'E:\\xampp\\htdocs\\testvue2\\node_modules\\eslint\\lib\\api.js/package.json'\r\n    at Function.Module._resolveFilename (module.js:547:15)\r\n    at Function.Module._load (module.js:474:25)\r\n    at Module.require (module.js:596:17)\r\n    at require (internal/module.js:11:18)\r\n    at Object.module.exports (E:\\xampp\\htdocs\\testvue2\\node_modules\\eslint-loader\\index.js:170:23)\r\n\r\nYou may use special comments to disable some warnings.\r\nUse // eslint-disable-next-line to ignore the next line.\r\nUse /* eslint-disable */ to ignore all warnings in a file.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10226","RelatedDescription":"Closed issue \"npm run serve command failed in a freshly made project created with @vue/cli. (Cannot find module '\\node_modules\\eslint\\lib\\api.js/package.json')\" (#10226)"},{"Id":"463646824","IsPullRequest":false,"CreatedAt":"2019-07-03T09:33:00","Actor":"tbasi19","Number":"10225","RawContent":null,"Title":"[Vue warn]: Property or method \"last\" & \"first is not defined","State":"closed","Body":"Hi,\r\n\r\nI'm trying to create a website where I have a first and lastname form, and I want it to then display whatever the user types in the textboxes onto the webpage, where it says 'First name:' and 'Last name:' But it keeps saying 'first' and 'last' is not defined eventhough I have defined what it is and where it needs to be used. \r\n\r\nI'm not so experienced in vue js and I'm very confused with my code, I'm afraid of changing variables because I tried before and I kept getting more errors that I couldn't figure out. Could anyone please help me out? \r\n\r\nAlso I'm new to GitHub, where do I attach the code files I'm working on? \r\n\r\nThanks\r\n","Url":"https://github.com/vuejs/vue/issues/10225","RelatedDescription":"Closed issue \"[Vue warn]: Property or method \"last\" & \"first is not defined\" (#10225)"},{"Id":"463639539","IsPullRequest":false,"CreatedAt":"2019-07-03T09:18:19","Actor":"Rolanddoda","Number":"10224","RawContent":null,"Title":"Default slot content should not be evaluated when the parent is providing it","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/kk445knpx3](https://codesandbox.io/s/kk445knpx3)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIn the `Child.vue` we have a slot with a default slot content. In the `Parent.vue` we override the default content of the child. \r\n\r\n### What is expected?\r\nIMO the content of the slot in child component should not be evaluated since the content provided from the parent will be used.\r\n\r\n### What is actually happening?\r\nThe content of the parent it renders which is what I expect.\r\n\r\nThe default content of the `Child.vue` it's evaluated even if it not renders. That's why you see in the console: `Cannot read property 'length' of null`\r\n\r\n---\r\nMaybe that's not a bug and instead it's the intentional behavior, but it doesn't make sense to me, to evaluate something that will not render.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10224","RelatedDescription":"Open issue \"Default slot content should not be evaluated when the parent is providing it\" (#10224)"},{"Id":"463626655","IsPullRequest":false,"CreatedAt":"2019-07-03T08:52:06","Actor":"rochzp","Number":"10223","RawContent":null,"Title":"表格组件同时设置表头和固定时，固定列出现错位","State":"closed","Body":"","Url":"https://github.com/vuejs/vue/issues/10223","RelatedDescription":"Closed issue \"表格组件同时设置表头和固定时，固定列出现错位\" (#10223)"},{"Id":"463560411","IsPullRequest":false,"CreatedAt":"2019-07-03T06:55:03","Actor":"y-nk","Number":"10222","RawContent":null,"Title":"ability to choose when execute \"immediate\" watcher","State":"closed","Body":"### What problem does this feature solve?\r\na pretty common usecase for watchers is to react to value and update/mutate dom outside of the scope of the template. when doing so, we want watchers to be executed at the birth of the component\r\n\r\n### What does the proposed API look like?\r\n`immediate`  values should be : `true/false/\"mounted\"`\r\n\r\nthe consequence of setting `immediate: mounted` is that watcher immediate execution will be delegated to the mounted hook event `this.$once(\"hook:mounted\", () => ...)`\r\n\r\n### Notes\r\nI understand that it could be done with a common method called once in `mounted` and once in the watcher, but it feels not right to write a (public) method for treating something reactive.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10222","RelatedDescription":"Closed issue \"ability to choose when execute \"immediate\" watcher\" (#10222)"},{"Id":"463287361","IsPullRequest":false,"CreatedAt":"2019-07-02T15:14:05","Actor":"ansike","Number":"10221","RawContent":null,"Title":"阿萨说","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/10221","RelatedDescription":"Closed issue \"阿萨说\" (#10221)"},{"Id":"463215331","IsPullRequest":false,"CreatedAt":"2019-07-02T13:06:39","Actor":"gerasimvol","Number":"10220","RawContent":null,"Title":"Transition js hooks beforeLeave and leave are not working with v-show","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/embed/vue-template-zuj3y](https://codesandbox.io/embed/vue-template-zuj3y)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. click `Toggle visibility` button\r\n2. `console.log` in `leaveAnimation method` didn't fired\r\n\r\n### What is expected?\r\n`console.log` in `leaveAnimation` method fired\r\n\r\n### What is actually happening?\r\n`console.log` in `leaveAnimation` method didn't fired\r\n\r\n---\r\nworks perfectly fine with v-if\r\nbut `v-if` is more performant operation while toggling visibility (modals, menus etc)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10220","RelatedDescription":"Closed issue \"Transition js hooks beforeLeave and leave are not working with v-show\" (#10220)"},{"Id":"463058904","IsPullRequest":false,"CreatedAt":"2019-07-02T07:13:08","Actor":"mhxy13867806343","Number":"10219","RawContent":null,"Title":"filters和三目结合出现的问题","State":"closed","Body":"### What problem does this feature solve?\r\n实现如下的功能      \r\n，展示 的效果是\r\n界面上展示 的效果就展示  上架 ，并且加上（如果带样式了），就把相关样式加上 \r\n\r\n### What does the proposed API look like?\r\n    <span :class=\"row.rewardTf>-1?'':'nots'\">{{(row.rewardTf || '未找到相关的奖励状态') | announcementRewardTf }}</span>\r\n出现的问题是announcementRewardTf提示它没有定义，但我已经在filters:{}中定义过了，\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10219","RelatedDescription":"Closed issue \"filters和三目结合出现的问题\" (#10219)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"465472063","IsPullRequest":false,"CreatedAt":"2019-07-08T21:40:46","Actor":"iFgR","Number":"2843","RawContent":null,"Title":"How to extract only components RouterView and RouterLink?","State":"open","Body":"### What problem does this feature solve?\r\nLoad only the *router-view* and *router-link* will give me the ability to use external VueRouter instance.\r\n\r\nI'm working with web-components and I have an AppShell with VueRouter and I'm using a web-component inside them with another VueRouter.\r\nEverything inside the web-component are working fine but my AppShell can't load the router components.\r\n\r\n### What does the proposed API look like?\r\nI think something like **const { RouterView, RouterLink } = VueRouter** can help\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2843","RelatedDescription":"Open issue \"How to extract only components RouterView and RouterLink?\" (#2843)"},{"Id":"465416375","IsPullRequest":false,"CreatedAt":"2019-07-08T19:13:27","Actor":"koszar93","Number":"2842","RawContent":null,"Title":"Best way to create vue-router - Online Shop","State":"closed","Body":"i have a little problem with prepare vue-router to my Online Shop. I have two level product category tree view with parent and child item.\r\nMy category view, is built dynamic of data get from the database:\r\n\r\n>     PARENT\r\n>     – CHILD 1\r\n>     – CHILD 2\r\n>     PARENT 2\r\n>     – CHILD 1\r\n>     – CHILD 2\r\n>     PARENT 3\r\n>     - CHILD 1\r\n>     PARENT 4\r\n>     - CHILD 1\r\n>     - CHILD 2\r\n> \r\n\r\netc.\r\nI don’t know how to prepare dynamic router. Now, i do something like that:\r\n\r\n```\r\n    {\r\n            name: 'Produkty',\r\n            display: true,\r\n            meta: { requiresAuth: false, menuType: 'topNav' },\r\n            path: '/product/:categoryId?/:subCategoryId?',\r\n            component: () => import(/* webpackChunkName: \"home\" */ './views/home/product')\r\n          },\r\n          {\r\n            name: 'productDetail',\r\n            display: false,\r\n            meta: { requiresAuth: false },\r\n            path: '/product/:categoryId/:subCategoryId/:productId',\r\n            component: () => import(/* webpackChunkName: \"home\" */ './views/home/product/Details')\r\n          }\r\n```\r\n\r\nI don't know is this a good way? Maybe anyone have better idea for this?\r\nI also want to implement dynamic breadcrumbs base on router path.\r\n\r\nAnd other question:\r\nHow to redirect from: http://localhost/produkt/1234/523/123(productId) to http://localhost/product_name.html for example ? Or.. id from url chage to http://localhost/parent_1/child_1/product_1 ??","Url":"https://github.com/vuejs/vue-router/issues/2842","RelatedDescription":"Closed issue \"Best way to create vue-router - Online Shop\" (#2842)"},{"Id":"464976350","IsPullRequest":true,"CreatedAt":"2019-07-07T17:50:43","Actor":"debs-obrien","Number":"2841","RawContent":null,"Title":"docs: update active class explanation","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2841","RelatedDescription":"Open PR \"docs: update active class explanation\" (#2841)"},{"Id":"464165688","IsPullRequest":false,"CreatedAt":"2019-07-04T09:33:08","Actor":"ykushev","Number":"2840","RawContent":null,"Title":"Add afterRouteEnter guard","State":"open","Body":"### What problem does this feature solve?\r\nI want execute one function in component after each routing (enter route, reused in the new route)\r\n\r\n### What does the proposed API look like?\r\nvariant 1:\r\n```\r\nbeforeRouteUpdate (to, from, next) {\r\n        console.log('page category beforeRouteUpdate');\r\n        next(() => {\r\n            // this don't calling\r\n            console.log('page category beforeRouteUpdate next');\r\n            this.$store.dispatch('catalog/exec');\r\n        });\r\n    },\r\n```\r\n\r\nvariant 2: add hook named \"afterRouteUpdate\" that will calling after we enter in route and after each time we navigating in this route (foo/2 -> foo/3)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2840","RelatedDescription":"Open issue \"Add afterRouteEnter guard\" (#2840)"},{"Id":"463845211","IsPullRequest":false,"CreatedAt":"2019-07-03T16:57:38","Actor":"juanescarraga","Number":"2839","RawContent":null,"Title":"Color active state on link does not return to color","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/embed/vue-template-lgn63](https://codesandbox.io/embed/vue-template-lgn63)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen the project in the browser.\r\nThe link with the name Say Hello appears in the browser.\r\nThe default color is green of the Say Hello link is green, when hovering or clicking on the link the color changes from green to gray.\r\nThe gray color remains in the Say Hello link, the expected behavior is that once you click and refresh the page the color returns to the original which is green.\r\nIn tests carried out in development environments, low resolutions are being presented with smart phone views.\r\n\r\n### What is expected?\r\nFix the original color state bug, if the mouse cursor is positioned or the link is touched change color and return to its original state.\r\n\r\n### What is actually happening?\r\nThe color of the link in desktop resolutions works correctly when you hover over the link or click. In low resolutions and smart phones when touching the link changes the active state color and does not return to the original color of the normal state.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2839","RelatedDescription":"Closed issue \"Color active state on link does not return to color\" (#2839)"},{"Id":"462388128","IsPullRequest":true,"CreatedAt":"2019-07-02T20:09:24","Actor":"Alexeykhr","Number":"2838","RawContent":null,"Title":"Handle Promise rejection in guards (fix #2833)","State":"closed","Body":"#2833","Url":"https://github.com/vuejs/vue-router/pull/2838","RelatedDescription":"Closed or merged PR \"Handle Promise rejection in guards (fix #2833)\" (#2838)"},{"Id":"461054597","IsPullRequest":false,"CreatedAt":"2019-06-30T09:44:07","Actor":"kahirokunn","Number":"2827","RawContent":null,"Title":"maybe getMatchedComponents type is missed","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/types/router.d.ts#L31](https://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/types/router.d.ts#L31)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nMaybe this `getMatchedComponents` type is incorrect.\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/types/router.d.ts#L31\r\n\r\n\r\n### What is expected?\r\nI expected correct `getMatchedComponents` type\r\n\r\n### What is actually happening?\r\nI try to read vue-router code.\r\nBut code is too long.\r\nSo I don't have a much confidence.\r\nI'm sorry if the point is wrong.\r\n\r\nI read this source code.\r\n\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/src/util/resolve-components.js#L13\r\n\r\nthere has this sentence.\r\n\r\n> we want to halt the navigation until the incoming component has been resolved.\r\n\r\nAnd I read some code.\r\nI guess `getMatchedComponents` function never return asyncComponent.\r\n\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/src/index.js#L173\r\n\r\nSo I think this `getMatchedComponents` type is incorrect.\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/types/router.d.ts#L31\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2827","RelatedDescription":"Closed issue \"maybe getMatchedComponents type is missed\" (#2827)"},{"Id":"461058663","IsPullRequest":true,"CreatedAt":"2019-06-30T09:43:54","Actor":"kahirokunn","Number":"2828","RawContent":null,"Title":"maybe getMatchedComponents type is missed #2827","State":"closed","Body":"This pull request for solved this issue.\r\nhttps://github.com/vuejs/vue-router/issues/2827","Url":"https://github.com/vuejs/vue-router/pull/2828","RelatedDescription":"Closed or merged PR \"maybe getMatchedComponents type is missed #2827\" (#2828)"},{"Id":"461944569","IsPullRequest":false,"CreatedAt":"2019-06-28T09:32:51","Actor":"liho00","Number":"2837","RawContent":null,"Title":"External JavaScript working when changing route","State":"closed","Body":"### What problem does this feature solve?\r\nI am currently facing an issue with the external javascipt stopping when changing routes.\r\n\r\nFor example, when I start from / (root page), then click /shop, then click back / (root page), the external javascript stop working (Eg. plugin.js stop).\r\n\r\nI tried to use a plugin called vue-plugin-load-script. In order to dynamically load external javascript in main.js but the result is still the same, external javascript stops working when changing routes.\r\n\r\nthis feature should allow the javascript works when changing routes. \r\n\r\n### What does the proposed API look like?\r\nThe external javascript is place in index.html\r\n\r\nindex.html\r\n```\r\n\r\n<html>\r\n\r\n<body>\r\n\r\n...\r\n\r\n</body>\r\n\r\n<script src=\"<%= BASE_URL %>js/plugins.js\"></script>\r\n\r\n</html>\r\n```\r\n\r\nroute.js\r\n```\r\n\r\n{\r\n\r\npath: '/',\r\n\r\nname: 'home',\r\n\r\ncomponent: Home\r\n\r\n},\r\n\r\n{\r\n\r\npath: '/shop',\r\n\r\nname: 'shop',\r\n\r\ncomponent: Shop\r\n\r\n},\r\n```\r\n\r\nApp.vue\r\n```\r\n\r\n<template>\r\n\r\n<div id=\"app\">\r\n\r\n<router-view />\r\n\r\n</div>\r\n\r\n</template>\r\n```\r\n\r\nExternal javascript is provided globally, so each page can be used. I wish to request a feature that the same external javascript works in different paths.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2837","RelatedDescription":"Closed issue \"External JavaScript working when changing route\" (#2837)"},{"Id":"461942087","IsPullRequest":false,"CreatedAt":"2019-06-28T09:23:21","Actor":"liho00","Number":"2836","RawContent":null,"Title":"External JavaScript stop working when changing route","State":"closed","Body":"I am currently facing an issue with the external javascipt stopping when changing routes.\r\n\r\nFor example, when I start from / (root page), then click /shop, then click back / (root page), the external javascript stop working (Eg. plugin.js stop).\r\n\r\nI tried to use a plugin called vue-plugin-load-script. In order to dynamically load external javascript in main.js but the result is still the same, external javascript stops working when changing routes.\r\n\r\nThe external javascript is place in index.html\r\n\r\nindex.html\r\n```\r\n\r\n<html>\r\n\r\n<body>\r\n\r\n...\r\n\r\n</body>\r\n\r\n<script src=\"<%= BASE_URL %>js/plugins.js\"></script>\r\n\r\n</html>\r\n```\r\n\r\nroute.js\r\n```\r\n\r\n{\r\n\r\npath: '/',\r\n\r\nname: 'home',\r\n\r\ncomponent: Home\r\n\r\n},\r\n\r\n{\r\n\r\npath: '/shop',\r\n\r\nname: 'shop',\r\n\r\ncomponent: Shop\r\n\r\n},\r\n```\r\n\r\nApp.vue\r\n```\r\n\r\n<template>\r\n\r\n<div id=\"app\">\r\n\r\n<router-view />\r\n\r\n</div>\r\n\r\n</template>\r\n```\r\n\r\nExternal javascript is provided globally, so each page can be used. I wish to request a feature that the same external javascript works with different paths.\r\n","Url":"https://github.com/vuejs/vue-router/issues/2836","RelatedDescription":"Closed issue \"External JavaScript stop working when changing route\" (#2836)"},{"Id":"461913917","IsPullRequest":false,"CreatedAt":"2019-06-28T08:20:25","Actor":"liubin595338764","Number":"2835","RawContent":null,"Title":"base是否能当成params参数来配置？","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://www](https://www)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n现在`base`只能写死为一个固定的字符串`string`\r\n\r\n### What is expected?\r\n希望在history模式的时候可以把`base`当成`params`来处理，\r\n\r\n对于多公司访问通一个应用的时候，这样的链接比较好看，\r\n\r\n比如：\r\n```js\r\nexport default new Router({\r\n    mode: 'history',\r\n    base: '/:company',\r\n    routes: routes\r\n})\r\n```\r\n\r\n### What is actually happening?\r\n现在`base`只能写死为一个固定的字符串`string`\r\n\r\n---\r\n希望能尽快支持哦\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2835","RelatedDescription":"Closed issue \"base是否能当成params参数来配置？\" (#2835)"},{"Id":"461897204","IsPullRequest":false,"CreatedAt":"2019-06-28T07:41:09","Actor":"Mighty683","Number":"2834","RawContent":null,"Title":"Add beforeUpdate to route config","State":"closed","Body":"### What problem does this feature solve?\r\nSince for now we can't handle lazy loading components without losing access to navigation hooks build in components we should give equal API on router config level.\r\nFor now we can only add `beforeEnter` route guard. It would be usefull if we had `beforeUpdate` guard too.\r\n\r\nProblem with lazy loading components described here: \r\nhttps://github.com/vuejs/vue-router/issues/2830\r\n\r\n### What does the proposed API look like?\r\n```js\r\nconst router = new VueRouter({\r\n  routes: [\r\n    {\r\n      path: '/foo',\r\n      component: Foo,\r\n      beforeUpdate: (to, from, next) => {\r\n        // ...\r\n      }\r\n    }\r\n  ]\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2834","RelatedDescription":"Closed issue \"Add beforeUpdate to route config\" (#2834)"},{"Id":"461529830","IsPullRequest":false,"CreatedAt":"2019-06-27T13:28:28","Actor":"posva","Number":"2833","RawContent":null,"Title":"Handle Promise rejection in guards","State":"open","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/orzwg537/](https://jsfiddle.net/orzwg537/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the fiddle and look in console\r\n\r\n### What is expected?\r\na message saying error caught\r\n\r\n### What is actually happening?\r\nThere is an Unhandled Promise rejection instead\r\n\r\n---\r\nCurrently, errors thrown in guards are caught by router.onError but Promises rejections (or error thrown in an `async` function) are not caught. This should be handled in all the other guards as well\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2833","RelatedDescription":"Open issue \"Handle Promise rejection in guards\" (#2833)"},{"Id":"461488156","IsPullRequest":false,"CreatedAt":"2019-06-27T12:06:14","Actor":"stavid","Number":"2832","RawContent":null,"Title":" use history mode,history.length is wrong","State":"closed","Body":"### Version\r\n2.7.0\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/issues/2831](https://github.com/vuejs/vue-router/issues/2831)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nexport default new Router({\r\nmode: 'history',\r\nroutes: [\r\n\r\n\t{\r\n\t\tpath: '/A',\r\n\t\tname: 'A',\r\n                   component: resolve => require(['../components/files/\r\n\r\nA.vue'], resolve),\r\nmeta: {\r\ntitle: 'A'\r\n}\r\n},\r\nopen A page ,print history.length in beforeEach method , the message is：\r\n\r\nbeforeEach:history.size:32to:/A,from:/\r\nbeforeEach:history.size:33to:/A,from:/\r\n\r\nI hope beforeEach work ,but not twice.How can i do?\r\n\r\n### What is expected?\r\nhistory.length add 1\r\n\r\n### What is actually happening?\r\nhistory.length add 2\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2832","RelatedDescription":"Closed issue \" use history mode,history.length is wrong\" (#2832)"},{"Id":"461486225","IsPullRequest":false,"CreatedAt":"2019-06-27T11:56:25","Actor":"stavid","Number":"2831","RawContent":null,"Title":"use history mode,history.length is wrong","State":"closed","Body":"export default new Router({\r\n\tmode: 'history',\r\n\troutes: [\r\n\r\n\t\t{\r\n\t\t\tpath: '/A',\r\n\t\t\tname: 'A',\r\n                       component: resolve => require(['../components/files/\r\nA.vue'], resolve),\r\n\t\t\tmeta: {\r\n\t\t\t\ttitle: 'A'\r\n\t\t\t}\r\n\t\t},\r\n-------------------------------\r\nopen A page ,print history.length  in beforeEach method , the message is：\r\n---------------------------------\r\nbeforeEach:history.size:32to:/A,from:/\r\nbeforeEach:history.size:33to:/A,from:/\r\n\r\nI hope beforeEach work ,but not twice.How can i do?\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2831","RelatedDescription":"Closed issue \"use history mode,history.length is wrong\" (#2831)"},{"Id":"460770103","IsPullRequest":false,"CreatedAt":"2019-06-27T11:50:51","Actor":"maroon1","Number":"2825","RawContent":null,"Title":"errorHandler can't catch the error thrown in navigation guards","State":"closed","Body":"### What problem does this feature solve?\r\n目前 Navigation Guards 中的异常直接被 vue-router 内部处理掉，无法被 errorHandler 处理，导致需要在 Navigation Guards 单独处理，或者转换为 Promise 异常再通过 unhandledrejection 事件处理\r\n\r\n### What does the proposed API look like?\r\n希望可以提供与 Vue 统一的异常传播行为\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2825","RelatedDescription":"Closed issue \"errorHandler can't catch the error thrown in navigation guards\" (#2825)"},{"Id":"461397478","IsPullRequest":false,"CreatedAt":"2019-06-27T11:48:13","Actor":"Mighty683","Number":"2830","RawContent":null,"Title":"Enable component async loading","State":"closed","Body":"### What problem does this feature solve?\r\nFor now there is no full support for `vue` `async components` described here:\r\n\r\nhttps://vuejs.org/v2/guide/components-dynamic-async.html#Handling-Loading-State\r\n\r\nSolution presented in: \r\nhttps://github.com/vuejs/vue-router/pull/2140\r\nhttps://github.com/chrisvfritz/vue-enterprise-boilerplate/blob/master/src/router/routes.js\r\nis solving problem only partially because of such construction `beforeRouteEnter` etc guards are not launched due to fact that component is resolved inside another component after route update\r\n\r\nThis problem is also mentioned here:\r\nhttps://forum.vuejs.org/t/vue-router-async-component-loading-error-components-never-shown/40618/2\r\n\r\n### What does the proposed API look like?\r\nUpdate doc with information that this syntax is not working with `vue-router`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2830","RelatedDescription":"Closed issue \"Enable component async loading\" (#2830)"},{"Id":"461074294","IsPullRequest":false,"CreatedAt":"2019-06-26T17:13:08","Actor":"Etheryte","Number":"2829","RawContent":null,"Title":"Make route name map part of public API","State":"closed","Body":"### What problem does this feature solve?\r\nWorking with large-scale applications, a fairly common problem when using vue-router is trying to avoid inline string constants for link definitions and programmatic navigation. For example:\r\n\r\n```html\r\n<router-link to=\"/documents\">Documents</router-link>\r\n```\r\nand\r\n```ts\r\nthis.$router.push(\"/documents\");\r\n```\r\n\r\nInline constants like these are subject to rot over time, human error when refactoring multiple documents and other similar errors. As an application grows in size, these issues become more prominent.\r\n\r\n### What does the proposed API look like?\r\nAs a solution, our shop often uses a mapping from route name to a route definition. Sample implementation:\r\n\r\n```ts\r\ninterface IRouteMap {\r\n  [key: string]: ReturnType<Router['resolve']> & { name: string };\r\n}\r\n\r\nfunction mapRoutes(routeMap: IRouteMap, routes: RouteConfig[] = []) {\r\n  return routes.reduce((map, route) => {\r\n    const name = route.name;\r\n    if (name) {\r\n      map[name] = Object.assign({\r\n        name,\r\n      }, router.resolve(name));\r\n    }\r\n    if (route.children) {\r\n      mapRoutes(map, route.children);\r\n    }\r\n    return map;\r\n  }, routeMap);\r\n}\r\n\r\nexport const routeMap = mapRoutes({}, routes);\r\n```\r\n\r\nLinks and navigation can then simply use the resulting mapping:\r\n\r\n```html\r\n<router-link v-bind:to=\"routeMap.documents.location\">Documents</router-link>\r\n```\r\nand\r\n```ts\r\nthis.$router.push(routeMap.documents.location);\r\n```\r\nor\r\n```ts\r\nrouter.beforeEach((to, from, next) => {\r\n  if (to.name !== routeMap.login.name && !store.state.user) ...\r\n});\r\n```\r\n\r\nThis means that changing a route's path requires a single change in the route definition itself and no further refactoring is necessary. Route names are internal and aren't subject to change over time as route paths often can be.\r\n\r\nAdding a similar mapping (or exposing existing internals) to vue-router's public API would provide a standardized solution to the given problem and allow all vue-router consumers to reap the benefits.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2829","RelatedDescription":"Closed issue \"Make route name map part of public API\" (#2829)"},{"Id":"461052290","IsPullRequest":false,"CreatedAt":"2019-06-26T15:51:32","Actor":"kahirokunn","Number":"2826","RawContent":null,"Title":"maybe getMatchedComponents type is missed","State":"closed","Body":"I try to read vue-router code.\r\nBut code is too long.\r\nSo I don't have a much confidence.\r\nI'm sorry if the point is wrong.\r\n\r\nI read this source code.\r\n\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/src/util/resolve-components.js#L13\r\n\r\nthere has this sentence.\r\n\r\n> we want to halt the navigation until the incoming component has been resolved.\r\n\r\nAnd I read some code.\r\nI guess `getMatchedComponents` function never return asyncComponent.\r\n\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/src/index.js#L173\r\n\r\nSo I think this `getMatchedComponents` type is incorrect.\r\nhttps://github.com/vuejs/vue-router/blob/732c8258258608c2e29268cbda2a4ed957d884d4/types/router.d.ts#L31\r\n","Url":"https://github.com/vuejs/vue-router/issues/2826","RelatedDescription":"Closed issue \"maybe getMatchedComponents type is missed\" (#2826)"},{"Id":"460284206","IsPullRequest":false,"CreatedAt":"2019-06-25T11:52:42","Actor":"ahochel","Number":"2824","RawContent":null,"Title":"Vue-router points to wrong component when using browser navigation and two routes have same path","State":"closed","Body":"### Version\r\n3.0.6\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-6fm9z](https://codesandbox.io/s/vue-template-6fm9z)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. You start at the homepage.\r\n2. Click \"B\" link. It shows that B component is mounted and slug is \"test-b\".\r\n2. Click \"A\" link. It shows that A component is mounted and slug is \"test-a\".\r\n3. Click back button in an iframe. It shows that A component is mounted and slug is \"test-b\".\r\n\r\n### What is expected?\r\nOn last step, it should mount component \"B\", because when you have been on that route before it pointed to route \"b\".\r\n\r\n### What is actually happening?\r\nURL changes correctly, slug (which is route param) also changes correctly, but the wrong component is mounted.\r\n\r\n---\r\nThis happens when you have two (or more) routes with different names and different components, but with the same path and when you navigate through \"go back\" / \"go forward\" buttons in your browser.\r\n\r\n```\r\n{ name: \"a\", path: \"/:slug.html\", component: A },\r\n{ name: \"b\", path: \"/:slug.html\", component: B }\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2824","RelatedDescription":"Closed issue \"Vue-router points to wrong component when using browser navigation and two routes have same path\" (#2824)"},{"Id":"460182336","IsPullRequest":false,"CreatedAt":"2019-06-25T11:49:44","Actor":"0415wangyibo","Number":"2823","RawContent":null,"Title":"Can't route to the path \"/element53\" , and so on","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://github.com/0415wangyibo/webLearning/tree/master/vueweb](https://github.com/0415wangyibo/webLearning/tree/master/vueweb)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nnpm install\r\nnpm run dev\r\nOpen a browser and enter the URL \"http://localhost:8080/#/element53\"\r\n\r\n### What is expected?\r\nIt can route to the component which named \"element53\"\r\n\r\n### What is actually happening?\r\n\"vue-router\" can't route to the path \"/element53\", and it routes to the default path.\r\n\r\n---\r\nIt can't route to the path \"/element53\",\"/element54\",\"/element55\",and so on. But it can route to the path \"/element52\",\"element51\",\"element50\",and so on.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2823","RelatedDescription":"Closed issue \"Can't route to the path \"/element53\" , and so on\" (#2823)"},{"Id":"460177005","IsPullRequest":false,"CreatedAt":"2019-06-25T02:28:09","Actor":"0415wangyibo","Number":"2822","RawContent":null,"Title":"Can't route to the component which named element53","State":"closed","Body":"\"vue-router\" can't route to the path \"/element53\" and \"/element54\", and so on, but the others are routed well, when I am learning the element-ui,there is my project: https://github.com/0415wangyibo/webLearning/tree/master/vueweb\r\n","Url":"https://github.com/vuejs/vue-router/issues/2822","RelatedDescription":"Closed issue \"Can't route to the component which named element53\" (#2822)"},{"Id":"458903046","IsPullRequest":false,"CreatedAt":"2019-06-24T20:59:35","Actor":"juanescarraga","Number":"2819","RawContent":null,"Title":"Color active state on link does not return to original color","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/embed/vue-template-lgn63](https://codesandbox.io/embed/vue-template-lgn63)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open the project in the browser.\r\n2. The link with the name Say Hello appears in the browser.\r\n3. The default color is green of the Say Hello link is green, when hovering or clicking on the link the color changes from green to gray.\r\n4. The gray color remains in the Say Hello link, the expected behavior is that once you click and refresh the page the color returns to the original which is green.\r\n5. In tests carried out in development environments, low resolutions are being presented with smart phone views.\r\n\r\n### What is expected?\r\nFix the original color state bug, if the mouse cursor is positioned or the link is touched change color and return to its original state.\r\n\r\n### What is actually happening?\r\nThe color of the link in desktop resolutions works correctly when you hover over the link or click. In low resolutions and smart phones when touching the link changes the active state color and does not return to the original color of the normal state.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2819","RelatedDescription":"Closed issue \"Color active state on link does not return to original color\" (#2819)"},{"Id":"460082755","IsPullRequest":false,"CreatedAt":"2019-06-24T20:40:24","Actor":"kfedorov91","Number":"2821","RawContent":null,"Title":"calling next(false); unexpectedly clears forward history","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/7l33b](https://codesandbox.io/s/7l33b)\r\n\r\n### Steps to reproduce\r\n- Click through the router-links on the page to get some history (a prompt will pop up on every navigation, click \"OK\")\r\n- Go back a few times (using either the browser back button or the HTML \"go back\" button)\r\n- After you are somewhere in the middle of your history/navigation stack, go forward or back (again using either the browser or HTML buttons) but this time when the prompt pops up asking you if you want to proceed, click \"Cancel\"\r\n- All of your forward history is gone\r\n\r\n### What is expected?\r\nI don't expect all of the forward history to disappear just because a component cancelled navigation, i.e. next(false);\r\n\r\n### What is actually happening?\r\nAll of the forward history is disappearing after a component cancels navigation, i.e. next(false);\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2821","RelatedDescription":"Closed issue \"calling next(false); unexpectedly clears forward history\" (#2821)"},{"Id":"459579755","IsPullRequest":false,"CreatedAt":"2019-06-23T15:05:26","Actor":"matej-svejda","Number":"2820","RawContent":null,"Title":"Autofilled params for named route cause warning with keep-alive","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/fp3et456/5/](https://jsfiddle.net/fp3et456/5/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nGoing to \"withProps1\" and then back to \"withoutProps\"\r\n\r\n### What is expected?\r\nThat no warning should appear.\r\n\r\n### What is actually happening?\r\nCauses a vue warning to appear for missing params, even though the params for all routes on the current route are set.\r\n\r\n---\r\nIm using auto filled params in named routes that the current route also has. An example would be that all project-related routes have the project id in them, but i dont want to set it every time when construct a route while being in a project-related route. Vue router does this automatically. I didnt find the functionallity documented, but you can see it being implemented in the function match(...) in create-matcher.js.\r\nThis works well in all cases, it only causes warning when Im navigating away from a route that has such a \"shared param\" to a route that doesnt have it. It seems like while leaving the route, something triggers a re-render of the links and the path is reconstructed. However, in this case the parameter can't be autofilled anymore because it isn't present in the current route.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2820","RelatedDescription":"Closed issue \"Autofilled params for named route cause warning with keep-alive\" (#2820)"},{"Id":"458533741","IsPullRequest":false,"CreatedAt":"2019-06-20T09:20:36","Actor":"Bigdragon13th","Number":"2818","RawContent":null,"Title":"Allow props for every attribute in to on router-link (like name, params, query)","State":"open","Body":"### What problem does this feature solve?\r\nIn my projects, I always link to the routes using route name (and also set it as a standard of my team). e.g.\r\n\r\n```vue\r\n<router-link :to=\"{ name: 'productList' }\">Product List</router-link>\r\n<router-link :to=\"{ name: 'productItem', params: { id: 1 }}\">Product Detail</router-link>\r\n```\r\n\r\nI found this pattern is unnecessary too long and not convenient to use compare to a much shorter syntax of using route link\r\n\r\n```vue\r\n<router-link to=\"/products-list\">Product List</router-link>\r\n<router-link to=\"/products/1\">Product Detail</router-link>\r\n```\r\n\r\nAnyway, I still want to use named route everywhere (for the sake of maintainability & scalability) and feel like link to named route can be improved.\r\n\r\n### What does the proposed API look like?\r\nI want the `:to` to be able to link to named route as-is (so when we created a route object somewhere else, we can bind it easily). But maybe you can make another prop for named route, such as:\r\n```vue\r\n<router-link toName=\"productList\">Product List</router-link>\r\n<router-link toName=\"productItem\" :params\"{ id: 1 }\">Product Detail</router-link>\r\n```\r\n\r\nOr (I don't know if it possible) custom modifiers?:\r\n```vue\r\n<router-link to.name=\"productList\">Product List</router-link>\r\n<router-link to.name=\"productItem\" :params\"{ id: 1 }\">Product Detail</router-link>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2818","RelatedDescription":"Open issue \"Allow props for every attribute in to on router-link (like name, params, query)\" (#2818)"},{"Id":"458311922","IsPullRequest":false,"CreatedAt":"2019-06-20T03:05:52","Actor":"sym134","Number":"2817","RawContent":null,"Title":"vue-cli3  路由重定向可以使用，但是别名无效","State":"closed","Body":"vue-cli3  路由重定向可以使用，但是别名alias无效","Url":"https://github.com/vuejs/vue-router/issues/2817","RelatedDescription":"Closed issue \"vue-cli3  路由重定向可以使用，但是别名无效\" (#2817)"},{"Id":"457661522","IsPullRequest":false,"CreatedAt":"2019-06-18T19:42:05","Actor":"lastlink","Number":"2816","RawContent":null,"Title":"prevent automatic hash add or allow hashes in history mode","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nI'm trying to use vuerouter in a chrome extension. I want to use hashes to add some changes to a pages content. However, just importing vue router adds #/ by default, I only want it added when it's being used. When I use history mode I can use `#/` no matter what I do. Is there a way to disable vue-router automatic hash add or use hashes in the route matching?","Url":"https://github.com/vuejs/vue-router/issues/2816","RelatedDescription":"Closed issue \"prevent automatic hash add or allow hashes in history mode\" (#2816)"},{"Id":"456869615","IsPullRequest":false,"CreatedAt":"2019-06-17T11:29:59","Actor":"kamituel","Number":"2815","RawContent":null,"Title":"Allow for custom element anchors","State":"closed","Body":"### What problem does this feature solve?\r\n`<router-link>` will set a `href` attribute on its child only if this child has an `<a>` tag name (see [`findAnchor()`](https://github.com/vuejs/vue-router/blob/dev/src/components/link.js#L124)). However, this won't work in case an anchor is wrapped in a custom element.\r\n\r\n### What does the proposed API look like?\r\nMaybe something like this?\r\n\r\n```\r\n<router-link to=\"...\" anchorTag=\"custom-anchor\">\r\n   <custom-anchor>Click Me!</custom-anchor>\r\n</router-link>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2815","RelatedDescription":"Closed issue \"Allow for custom element anchors\" (#2815)"},{"Id":"456840197","IsPullRequest":false,"CreatedAt":"2019-06-17T09:44:36","Actor":"eyalhakim","Number":"2814","RawContent":null,"Title":"next(false) in beforeEach pushes state when using the browser forward button","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-routing-example-mjmxd](https://codesandbox.io/s/vue-routing-example-mjmxd)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick on \"goodbye\"\r\nClick back in browser\r\nClick forward in browser\r\n\r\nlast url is pushed into history\r\n\r\n### What is expected?\r\nIn ensureUrl, we need to pass false instead of true to make sure current (out-of-sync) url is replaced and not pushed to history\r\n\r\n### What is actually happening?\r\nThe next function passes true to the ensureUrl function thus making it push the out-of-sync url to history\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2814","RelatedDescription":"Open issue \"next(false) in beforeEach pushes state when using the browser forward button\" (#2814)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"465576393","IsPullRequest":false,"CreatedAt":"2019-07-09T05:28:32","Actor":"tinyCucumber","Number":"1577","RawContent":null,"Title":"where will we pass the second param cb for wrappedActionHandler?","State":"closed","Body":"in the function registerAction, we will wrap the true handler and push into entry.And the wrapped handler receive two params - payload and cb. But what we can see in function dispatch is that the second param cb will never be passed in.Can someone answer my doubts?\r\n\r\n**wrappedActionHandler**\r\n\r\n```javascript\r\nfunction registerAction (store, type, handler, local) {\r\n  const entry = store._actions[type] || (store._actions[type] = [])\r\n  entry.push(function wrappedActionHandler (payload, cb) {\r\n    let res = handler.call(store, {\r\n      dispatch: local.dispatch,\r\n      commit: local.commit,\r\n      getters: local.getters,\r\n      state: local.state,\r\n      rootGetters: store.getters,\r\n      rootState: store.state\r\n    }, payload, cb)\r\n    if (!isPromise(res)) {\r\n      res = Promise.resolve(res)\r\n    }\r\n    if (store._devtoolHook) {\r\n      return res.catch(err => {\r\n        store._devtoolHook.emit('vuex:error', err)\r\n        throw err\r\n      })\r\n    } else {\r\n      return res\r\n    }\r\n  })\r\n}\r\n```\r\n\r\n**dispatch**\r\n```javascript\r\n    const {\r\n      type,\r\n      payload\r\n    } = unifyObjectStyle(_type, _payload)\r\n\r\n    const action = { type, payload }\r\n    const entry = this._actions[type]\r\n    if (!entry) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.error(`[vuex] unknown action type: ${type}`)\r\n      }\r\n      return\r\n    }\r\n\r\n    try {\r\n      this._actionSubscribers\r\n        .filter(sub => sub.before)\r\n        .forEach(sub => sub.before(action, this.state))\r\n    } catch (e) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.warn(`[vuex] error in before action subscribers: `)\r\n        console.error(e)\r\n      }\r\n    }\r\n\r\n    const result = entry.length > 1\r\n      ? Promise.all(entry.map(handler => handler(payload)))\r\n      : entry[0](payload)\r\n\r\n    return result.then(res => {\r\n      try {\r\n        this._actionSubscribers\r\n          .filter(sub => sub.after)\r\n          .forEach(sub => sub.after(action, this.state))\r\n      } catch (e) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          console.warn(`[vuex] error in after action subscribers: `)\r\n          console.error(e)\r\n        }\r\n      }\r\n      return res\r\n    })\r\n```\r\n","Url":"https://github.com/vuejs/vuex/issues/1577","RelatedDescription":"Closed issue \"where will we pass the second param cb for wrappedActionHandler?\" (#1577)"},{"Id":"465294713","IsPullRequest":true,"CreatedAt":"2019-07-08T15:53:27","Actor":"hejialianghe","Number":"1576","RawContent":null,"Title":"vuex-cart","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1576","RelatedDescription":"Closed or merged PR \"vuex-cart\" (#1576)"},{"Id":"465291851","IsPullRequest":true,"CreatedAt":"2019-07-08T14:32:06","Actor":"hejialianghe","Number":"1575","RawContent":null,"Title":"Create vuex-cart","State":"closed","Body":"1","Url":"https://github.com/vuejs/vuex/pull/1575","RelatedDescription":"Closed or merged PR \"Create vuex-cart\" (#1575)"},{"Id":"465227767","IsPullRequest":true,"CreatedAt":"2019-07-08T12:56:43","Actor":"boomler","Number":"1574","RawContent":null,"Title":"Refactor: extract a method for duplicate environment judgement","State":"closed","Body":"There are 17 times of environment judgement in `store.js`.  Extract it to  `util.js`","Url":"https://github.com/vuejs/vuex/pull/1574","RelatedDescription":"Closed or merged PR \"Refactor: extract a method for duplicate environment judgement\" (#1574)"},{"Id":"463514720","IsPullRequest":true,"CreatedAt":"2019-07-03T02:34:27","Actor":"hugoazevedosoares","Number":"1573","RawContent":null,"Title":"fix(#1571): remove undefined payload from store.dispatch","State":"open","Body":"Fixed the issue #1571\r\n\r\nRunned all tests and they were ok, except for tsc/types that didn't work on my computer, by that was before the change was made. Also, the change has no reason to break this kind of test.\r\n\r\nThe solution was proposed by @gitlab-winnie .","Url":"https://github.com/vuejs/vuex/pull/1573","RelatedDescription":"Open PR \"fix(#1571): remove undefined payload from store.dispatch\" (#1573)"},{"Id":"461385089","IsPullRequest":false,"CreatedAt":"2019-06-27T08:18:24","Actor":"StijnVandermeulen1","Number":"1572","RawContent":null,"Title":"subscribeAction: before and after calls do not wait if we have a promise or await statement inside them.","State":"open","Body":"### What problem does this feature solve?\r\nIf you subscribe to an action an return a promise or use an await statement, the code does not wait for the request to be complete. This is a problem when you implement a component as a plugin. Communication between components can be handled by the subscribeAction. But retrieving data and pushing it into the state using the afore mentioned methods will not result in any data since the service does not wait for it to be completed.\r\n\r\nThis feature would be very usefull for components as plugins that can be fully compartmentalized and plugged into different applications. Configuration retrieval can then be defined in the subscribeAction allowing different implementations over multiple applications.\r\n\r\n### What does the proposed API look like?\r\nExample for before action:\r\n\r\nCurrent code in src/store.js line 132:\r\n\r\n   try {\r\n\r\n      this._actionSubscribers\r\n        .filter(sub => sub.before)\r\n        .forEach(sub => sub.before(action, this.state))\r\n    }\r\n\r\nShould be:\r\n\r\n  try {\r\n\r\n          async function asyncForEach(array, callback) {\r\n             for (let index = 0; index < array.length; index  ) {\r\n                await callback(array[index], index, array);\r\n           }\r\n         }\r\n\r\n         await asyncForEach(this._actionSubscribers\r\n           .filter(function (sub) { return sub.before; }), async function (sub) {\r\n                return await sub.before(action, this$1.state); \r\n           });\r\n        }\r\n\r\ndispatch function should be async as wel.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1572","RelatedDescription":"Open issue \"subscribeAction: before and after calls do not wait if we have a promise or await statement inside them.\" (#1572)"},{"Id":"460917840","IsPullRequest":false,"CreatedAt":"2019-06-26T11:34:51","Actor":"markrian","Number":"1571","RawContent":null,"Title":"Actions mapped to namespaced modules pass unexpected explicit `undefined` payload to `store.dispatch`","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/markrian/pen/vqeGZZ?editors=0010](https://codepen.io/markrian/pen/vqeGZZ?editors=0010)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open https://codepen.io/markrian/pen/vqeGZZ?editors=0010\r\n1. Open the browser's console\r\n1. Observe the differing logged arguments passed to `store.dispatch` depending on whether it's a root-mapped action or a namespace-mapped action (`[ \"foo\" ]` and `[ \"childModule/foo\", undefined ]` respectively - note the extra `undefined` argument in the second case; the different action name is of course expected)\r\n\r\nNote that this only really applies in a testing scenario, where the test spies on `store.dispatch` to ensure the component dispatches the expected actions.\r\n\r\n### What is expected?\r\n`store.dispatch` receives exactly the same arguments regardless of whether the actions are namespace-mapped or not.\r\n\r\n### What is actually happening?\r\n`store.dispatch` receives a payload argument of `undefined` for namespace-mapped actions.\r\n\r\n---\r\nI encountered this when refactoring a store into a namespaced module, and found that my expectations needed to change: that `store.dispatch` received an extra `undefined` argument.\r\n\r\nI'm not sure if this should be considered a bug in Vuex, or in my testing approach of spying on `store.dispatch` :man_shrugging: \r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1571","RelatedDescription":"Open issue \"Actions mapped to namespaced modules pass unexpected explicit `undefined` payload to `store.dispatch`\" (#1571)"},{"Id":"456973589","IsPullRequest":false,"CreatedAt":"2019-06-17T14:39:06","Actor":"mojodev","Number":"1570","RawContent":null,"Title":"Creating a new module via registerModule firing unrelated module watchers","State":"closed","Body":" i have loaded a module dynamically using registerModule on a page. one of my parent component is watching other module state variable. so while registering module watcher on other module state is firing. same thing happening for unRegisterModule. \r\ni found same issue which is closed only difference is that i am getting this issue in new version of Vuex3.1.1\r\n\r\nAny help will be appreciated :)\r\n","Url":"https://github.com/vuejs/vuex/issues/1570","RelatedDescription":"Closed issue \"Creating a new module via registerModule firing unrelated module watchers\" (#1570)"},{"Id":"456838883","IsPullRequest":false,"CreatedAt":"2019-06-17T09:41:41","Actor":"lemongranule","Number":"1569","RawContent":null,"Title":"This file maybe has a mistake. ","State":"closed","Body":"examples/server.js\r\nOne more \"de\" in the first line","Url":"https://github.com/vuejs/vuex/issues/1569","RelatedDescription":"Closed issue \"This file maybe has a mistake. \" (#1569)"},{"Id":"456589519","IsPullRequest":false,"CreatedAt":"2019-06-17T08:54:29","Actor":"orblazer","Number":"1568","RawContent":null,"Title":"Use interface for Store type definition","State":"closed","Body":"### What problem does this feature solve?\r\nThis could allow extends Store like in Nuxt.JS.\r\nWithout that we don't have clean way for use `this.app` of `this.$router` in vuex actions and mutations.\r\n\r\nWith that we can extends like :\r\n```ts\r\ndeclare module 'vuex/types/index' {\r\n  interface Store<S> {\r\n    app: Vue;\r\n    $route: Route;\r\n  }\r\n}\r\n```\r\n\r\n### What does the proposed API look like?\r\nhttps://github.com/vuejs/vuex/blob/91f3e69ed9e290cf91f8885c6d5ae2c97fa7ab81/types/index.d.ts#L10 Change type of that from `class` to `interface`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1568","RelatedDescription":"Closed issue \"Use interface for Store type definition\" (#1568)"},{"Id":"454069279","IsPullRequest":false,"CreatedAt":"2019-06-10T09:04:41","Actor":"guanweiwang","Number":"1567","RawContent":null,"Title":"使用registerModule注册嵌套，出现错误","State":"closed","Body":"```js\r\nimport Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nconst store = new Vuex.Store({\r\n  state: {},\r\n  mutations: {},\r\n  actions: {}\r\n})\r\nstore.registerModule(['nested', 'myModule'], {\r\n  // ...\r\n})\r\nexport default store\r\n```\r\n在浏览器上会给出警告\r\n```\r\nvuex.esm.js?2f62:199 Uncaught TypeError: Cannot read property 'addChild' of undefined\r\n    at ModuleCollection.register (vuex.esm.js?2f62:199)\r\n    at Store.registerModule (vuex.esm.js?2f62:464)\r\n    at Store.t.registerModule.t.registerModule (<anonymous>:1:1182)\r\n    at eval (store.js?c0d6:11)\r\n    at Module../src/store.js (app.js:2393)\r\n    at __webpack_require__ (app.js:767)\r\n    at fn (app.js:130)\r\n    at eval (main.js:13)\r\n    at Module../src/main.js (app.js:2369)\r\n    at __webpack_require__ (app.js:767)\r\n```","Url":"https://github.com/vuejs/vuex/issues/1567","RelatedDescription":"Closed issue \"使用registerModule注册嵌套，出现错误\" (#1567)"},{"Id":"453666442","IsPullRequest":false,"CreatedAt":"2019-06-07T19:43:58","Actor":"winniehell","Number":"1566","RawContent":null,"Title":"registerModule does not warn if existing state is overwritten","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n\r\n[https://jsfiddle.net/winniehell/enjkob2w/](https://jsfiddle.net/winniehell/enjkob2w/)\r\n\r\n### Steps to reproduce\r\n- create store module with some state\r\n- dynamically register module with same name but different state\r\n\r\n### What is expected?\r\na warning or error is shown\r\n\r\n### What is actually happening?\r\nstate is silently overwritten\r\n\r\n---\r\nThis issue is similar to https://github.com/vuejs/vuex/issues/1363.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1566","RelatedDescription":"Open issue \"registerModule does not warn if existing state is overwritten\" (#1566)"},{"Id":"453610451","IsPullRequest":true,"CreatedAt":"2019-06-07T17:05:35","Actor":"Douten","Number":"1565","RawContent":null,"Title":"minor typo","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1565","RelatedDescription":"Open PR \"minor typo\" (#1565)"},{"Id":"451134309","IsPullRequest":true,"CreatedAt":"2019-06-01T23:19:18","Actor":"YongzeYao","Number":"1564","RawContent":null,"Title":"修改病句","State":"open","Body":"加入一个“的”。","Url":"https://github.com/vuejs/vuex/pull/1564","RelatedDescription":"Open PR \"修改病句\" (#1564)"},{"Id":"451113147","IsPullRequest":true,"CreatedAt":"2019-06-01T18:38:55","Actor":"WIStudent","Number":"1563","RawContent":null,"Title":"Typescript: Use generics for payload/result in commit/dispatch","State":"open","Body":"I am using Typescript to write my store, like this for example:\r\n```typescript\r\ninterface State {\r\n    counter: number;\r\n}\r\n\r\ninterface AddToCounterPayload {\r\n    amount: number;\r\n}\r\n\r\ninterface SubstractFromCounterPayload {\r\n    amount: number;\r\n}\r\n\r\ntype SubstractFromCounterResult = number\r\n\r\nconst store = new Store<State>({\r\n    mutations: {\r\n        addToCounter: (state, payload: AddToCounterPayload): void => {\r\n            state.counter += payload.amount;\r\n        }\r\n    },\r\n    actions: {\r\n        substractFromCounter: async (context, payload: SubstractFromCounterPayload): Promise<SubstractFromCounterResult> => {\r\n            const addToCounterPayload: AddToCounterPayload =  {amount: -1 * payload.amount};\r\n            context.commit('addToCounter', addToCounterPayload)\r\n            return context.state.counter;\r\n        }\r\n    },\r\n    state: {\r\n        counter: 0\r\n    }\r\n})\r\n```\r\n\r\nTriggering a mutation like this will currently not check if the payload has the correct type\r\n```typescript\r\n// correct payload type\r\nstore.commit('addToCounter', {amount: 1});\r\n// incorrect payload type\r\nstore.commit('addToCounter', {amount: '1'});\r\n// Current solution to ensure correct type\r\nconst payload: AddToCounterPayload = {\r\n  amount: 1\r\n}\r\nstore.commit('addToCounter', payload);\r\n```\r\nBut there are cases where I would prefer to build the payload inline, that's why I would like to propose using generics to set the payload type:\r\n```typescript\r\nstore.commit<AddToCounterPayload>('addToCounter', {amount: 1});\r\n```\r\n\r\nTriggering actions would work similary but additionaly the type of the returned value can be set using the second generic parameter\r\n```typescript\r\nconst result = store.dispatch<SubstractFromCounterPayload, SubstractFromCounterResult>('substractFromCounter', {amount: 1}); \r\n// type of result will be Promise<SubstractFromCounterResult>\r\n```\r\nBy setting the default values of the generics to `any` the behavior of `commit` and `dispatch` won't change if called without generics.","Url":"https://github.com/vuejs/vuex/pull/1563","RelatedDescription":"Open PR \"Typescript: Use generics for payload/result in commit/dispatch\" (#1563)"},{"Id":"451011749","IsPullRequest":false,"CreatedAt":"2019-05-31T23:13:08","Actor":"winniehell","Number":"1562","RawContent":null,"Title":"Deprecate testAction helper in favor of vuex-mock-store","State":"open","Body":"### What problem does this feature solve?\r\nThe officially documented way to [test actions](https://vuex.vuejs.org/guide/testing.html#testing-actions)\r\n\r\n- has a complex interface (5 positional, required arguments)\r\n- is always asynchronous—even if the action under test is not\r\n- requires copying a helper function from the documentation into a project's code base\r\n- involves manually patching that helper because of some shortcomings (see for example https://github.com/vuejs/vuex/issues/939)\r\n- offers no way to automatically update the copied helper once it changes in the documentation\r\n\r\n### What does the proposed API look like?\r\nRecommend to use https://github.com/posva/vuex-mock-store instead.\r\n\r\n```javascript\r\n// actions.js\r\n\r\nimport shop from '../api/shop'\r\n\r\nexport const getAllProducts = ({ commit }) => {\r\n  commit('REQUEST_PRODUCTS')\r\n  return shop.getProducts().then(products => {\r\n    commit('RECEIVE_PRODUCTS', products)\r\n  })\r\n}\r\n```\r\n\r\n```javascript\r\n// actions.spec.js\r\n\r\nimport { Store } from 'vuex-mock-store'\r\n\r\nconst store = new Store()\r\n\r\nafterEach(() => store.reset())\r\n\r\ndescribe('actions', () => {\r\n  it('getAllProducts', done => {\r\n    actions.getAllProducts(store)\r\n      .then(() => {\r\n        expect(store.commit).toHaveBeenCalledTimes(2)\r\n        expect(store.commit).toHaveBeenCalledWith('REQUEST_PRODUCTS')\r\n        expect(store.commit).toHaveBeenCalledWith('RECEIVE_PRODUCTS',  /* mocked response */)\r\n      })\r\n      .then(done)\r\n      .catch(done.fail)\r\n})\r\n```\r\n\r\nsee also https://github.com/vuejs/vue-test-utils/issues/1060\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1562","RelatedDescription":"Open issue \"Deprecate testAction helper in favor of vuex-mock-store\" (#1562)"},{"Id":"450569242","IsPullRequest":false,"CreatedAt":"2019-05-31T01:03:40","Actor":"mspiderv","Number":"1561","RawContent":null,"Title":"Retrieve module context from store instance","State":"open","Body":"### What problem does this feature solve?\r\nThis feature adds the ability to retrieve the store module context directly from root store instance.\r\n\r\n### What does the proposed API look like?\r\nLet's suppose, that `store` variable is my Vuex (root) store instance.\r\n\r\nI solve this problem with the following code:\r\n\r\n```\r\nlet subModuleContext = store._modulesNamespaceMap['subModuleName/'].context\r\n```\r\n\r\nIt would be nice to write\r\n\r\n```\r\nlet subModuleContext = store.getContext('subModuleName')\r\n```\r\n\r\nThen, I can write `subModuleContext.dispatch('someAction')` instead of `store.dispatch('subModuleName/someAction')`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1561","RelatedDescription":"Open issue \"Retrieve module context from store instance\" (#1561)"},{"Id":"448157757","IsPullRequest":false,"CreatedAt":"2019-05-30T07:01:45","Actor":"xianshenglu","Number":"1556","RawContent":null,"Title":"Disable Direct State Mutation Outside of Mutation Handlers, at Least in Strict Mode","State":"closed","Body":"### What problem does this feature solve?\r\nAs [doc](https://vuex.vuejs.org/guide/strict.html) said, \r\n\r\n> In strict mode, whenever Vuex state is mutated outside of mutation handlers, an error will be thrown. \r\n\r\nHowever, **state will still be mutated** though an error would be thrown. \r\n\r\nIn my opinion, this behavior is weird and misleading. Normally,  operation would fail if an error showed. But in this case, it didn't. \r\n\r\nAlso, if a developer doesn't see this error and only see the result which is actually worked, he might do this behavior all the time until one day he find the error.\r\n\r\n So, my propose is\r\n\r\n>  Why Not Disable Direct State Mutation Outside of Mutation Handlers, at Least in Strict Mode?\r\n\r\nThere should be a way to absolutely disable direct state mutation outside of mutation handlers. \r\n\r\n### What does the proposed API look like?\r\n```js\r\nconst store = new Vuex.Store({\r\n  // ...\r\n  strict: true\r\n})\r\n```\r\nDirect state mutation outside of mutation handlers would be disabled when `strict` is true.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1556","RelatedDescription":"Closed issue \"Disable Direct State Mutation Outside of Mutation Handlers, at Least in Strict Mode\" (#1556)"},{"Id":"450157740","IsPullRequest":false,"CreatedAt":"2019-05-30T06:56:44","Actor":"savoygu","Number":"1560","RawContent":null,"Title":"the parent state's key is covered by the same key of the child module","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/msz5nv6e/](https://jsfiddle.net/msz5nv6e/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nJust look at the content displayed on the page.\r\n\r\n### What is expected?\r\nNot covered\r\n\r\n### What is actually happening?\r\nCovered\r\n\r\n---\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    a: 'From root state'\r\n  },\r\n  modules: {\r\n    a: {  \r\n      namespaced: true,\r\n      state: {\r\n        a: 'From a state'\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\nIn the source installModule method，the module a will cover the root a state：\r\n\r\n```javascript\r\nif (!isRoot && !hot) {\r\n    const parentState = getNestedState(rootState, path.slice(0, -1))\r\n    const moduleName = path[path.length - 1]\r\n    store._withCommit(() => {\r\n      Vue.set(parentState, moduleName, module.state) // caused the bug \r\n    })\r\n }\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1560","RelatedDescription":"Closed issue \"the parent state's key is covered by the same key of the child module\" (#1560)"},{"Id":"450155081","IsPullRequest":false,"CreatedAt":"2019-05-30T06:38:52","Actor":"savoygu","Number":"1559","RawContent":null,"Title":"[BUG] the parent state's key is covered by the same key of the child module","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n[https://jsfiddle.net/msz5nv6e/](https://jsfiddle.net/msz5nv6e/)\r\n\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    a: 'From root state'\r\n  },\r\n  modules: {\r\n    a: {  \r\n      namespaced: true,\r\n      state: {\r\n        a: 'From a state'\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\nIn the source installModule method，the module a will cover the root a state：\r\n\r\n```javascript\r\nif (!isRoot && !hot) {\r\n    const parentState = getNestedState(rootState, path.slice(0, -1))\r\n    const moduleName = path[path.length - 1]\r\n    store._withCommit(() => {\r\n      Vue.set(parentState, moduleName, module.state) // caused the bug \r\n    })\r\n  }\r\n```","Url":"https://github.com/vuejs/vuex/issues/1559","RelatedDescription":"Closed issue \"[BUG] the parent state's key is covered by the same key of the child module\" (#1559)"},{"Id":"449676032","IsPullRequest":false,"CreatedAt":"2019-05-29T08:46:50","Actor":"de-don","Number":"1558","RawContent":null,"Title":"Add handler \"subscribeAction.onError\"","State":"open","Body":"### What problem does this feature solve?\r\nThe \"subscribeAction.after\" is not run if an action throws an error.\r\n\r\n### What does the proposed API look like?\r\nI propose to add one more property for catching errors in actions:\r\n```\r\nconst waitPlugin = (store) => {\r\n  store.subscribeAction({\r\n    before: (action) => {\r\n      console.log(action.type);\r\n    },\r\n    after: (action) => {\r\n      console.log(action.type);\r\n    },\r\n    onError: (action, error) => {\r\n      console.log(action.type);\r\n    }\r\n  });\r\n};\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1558","RelatedDescription":"Open issue \"Add handler \"subscribeAction.onError\"\" (#1558)"},{"Id":"448881052","IsPullRequest":false,"CreatedAt":"2019-05-28T06:31:34","Actor":"chulman444","Number":"1557","RawContent":null,"Title":"[Firefox] Zero value in an object is displayed as undefined in terminal but works as expected logically and displays properly","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/2tb9frcj/1/](https://jsfiddle.net/2tb9frcj/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the reproduction, open the developer console panel, click on the \"click\", Look at the result and please click on the `Object > val`.\r\n\r\n### What is expected?\r\n0 is printed out when clicking on the output of:\r\n\r\n```\r\nconsole.log(\"Printed as undefined\", store.state.tests[0])\r\n```\r\n\r\n### What is actually happening?\r\nPrinted as undefined but behaves like zero\r\n\r\n---\r\nI know that `mutations` are not asynchronous, so the `setTimeout` or `$nextTick` won't fix it; try clicking the button multiple times to add more entries but the old values still 'display' as undefined but behaves like zero.\r\n\r\nBehaves like zero, so I'm fine with it. Printing out the value directly prints zero, so I'm fine with it. But this was HUGELY misleading in my case when it printed out `undefined`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1557","RelatedDescription":"Closed issue \"[Firefox] Zero value in an object is displayed as undefined in terminal but works as expected logically and displays properly\" (#1557)"},{"Id":"445811290","IsPullRequest":true,"CreatedAt":"2019-05-22T02:28:11","Actor":"liyangworld","Number":"1554","RawContent":null,"Title":"add warnings when the different namespaced modules has the same names…","State":"closed","Body":"Add warnings when the different namespaced modules has the same namespace.\r\nThere is a situation that different namespaced modules could have the same namespace, so when in the method of installModule, generate store._modulesNamespaceMap, the follow module will override the before module.\r\nFor example:\r\n```\r\nnew Store({\r\n  modules: {\r\n    m1: {\r\n      namespaced: true,\r\n      state: {\r\n        a: \"a1\"\r\n      }\r\n    },\r\n    m2: {\r\n      modules: {\r\n        m1: {\r\n          namespaced: true,\r\n          state: {\r\n            a: \"a2\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\nthe module m1 has the namespace 'm1',\r\nthe module m2/m1 has the same namespace 'm1'\r\nso in the store._modulesNamespaceMap the module m2/m1 will override the module m1","Url":"https://github.com/vuejs/vuex/pull/1554","RelatedDescription":"Closed or merged PR \"add warnings when the different namespaced modules has the same names…\" (#1554)"},{"Id":"441134733","IsPullRequest":false,"CreatedAt":"2019-05-21T11:00:22","Actor":"GoodLuckIce","Number":"1549","RawContent":null,"Title":"preserveState: true 时 嵌套 3层以上 module 会出现 state undefined 问题 ,导致 actions 多所有方法无法调用","State":"closed","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[http://没有](http://没有)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n当registerModule 动态注册.   preserveState: true 时 嵌套 3层以上 module 会出现 state undefined 问题 ,导致 actions 多所有方法无法调用\r\n\r\n### What is expected?\r\n期望 第一次动态注册 保留新注册的state ,之后的注册 采用 preserveState: true 方案\r\n\r\n### What is actually happening?\r\n state undefined 导致 actions 多所有方法无法调用\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1549","RelatedDescription":"Closed issue \"preserveState: true 时 嵌套 3层以上 module 会出现 state undefined 问题 ,导致 actions 多所有方法无法调用\" (#1549)"},{"Id":"445160547","IsPullRequest":false,"CreatedAt":"2019-05-21T10:59:33","Actor":"Xambey","Number":"1553","RawContent":null,"Title":"MapGetters not working for modules with namespaced=true in vuex ","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://gitlab.com/Xambey/large](https://gitlab.com/Xambey/large)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1) Run the application.\r\n2) Open console in web browser (or vue extensions)\r\n3) Catch the error in the log (ChildA.vue: 14 )\r\n\r\n\"Property or method \"score\" is not defined on the instance but referenced during render. Make sure that this property is reactive, either in the data option, or for class-based components, by initializing the property\"\r\n\r\nfound in\r\n\r\n---> <ChildA> at src/components/ChildA.vue\r\n       <Parent> at src/components/Parent.vue\r\n         <App> at src/App.vue\r\n           <Root>\r\n\r\n\r\n### What is expected?\r\nThe getter 'score'  is created in my component. (this.$store.getters['scoreBoard/score'] -> this.score)\r\n\r\n\r\n\r\n### What is actually happening?\r\nGetter no mapped, vue google chrome extension show what state existed https://i.imgur.com/QKB7Wqm.png\r\n\r\n---\r\n```\r\ncomputed: {\r\n    ...mapGetters([\r\n      'scoreBoard/score' // Not found when /scoreBoard/score is existed. \r\n    ])\r\n  }\r\n```\r\nif you do this, then everything works (or namespaced = false): \r\n```\r\ncomputed: {\r\n    ...mapGetters({\r\n      score: 'scoreBoard/score'\r\n    })\r\n  }\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1553","RelatedDescription":"Closed issue \"MapGetters not working for modules with namespaced=true in vuex \" (#1553)"},{"Id":"446184900","IsPullRequest":true,"CreatedAt":"2019-05-21T10:49:47","Actor":"57u","Number":"1555","RawContent":null,"Title":"Typo correction in docs","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1555","RelatedDescription":"Closed or merged PR \"Typo correction in docs\" (#1555)"},{"Id":"444327664","IsPullRequest":true,"CreatedAt":"2019-05-15T09:21:08","Actor":"wolfgangwalther","Number":"1552","RawContent":null,"Title":"fix memory leak #1507","State":"open","Body":"The fix in PR #1508 was not complete, the anonymous function for the getter `() => store._vm[key]` was preserving the previous context and therefore `oldVm` as well.","Url":"https://github.com/vuejs/vuex/pull/1552","RelatedDescription":"Open PR \"fix memory leak #1507\" (#1552)"},{"Id":"444213353","IsPullRequest":true,"CreatedAt":"2019-05-15T03:00:41","Actor":"dajiaoyisheng","Number":"1551","RawContent":null,"Title":"对象展开运算符","State":"open","Body":"It is a Stage 4 proposal for ECMAScript.","Url":"https://github.com/vuejs/vuex/pull/1551","RelatedDescription":"Open PR \"对象展开运算符\" (#1551)"},{"Id":"441795075","IsPullRequest":true,"CreatedAt":"2019-05-08T15:28:02","Actor":"sairoutine","Number":"1550","RawContent":null,"Title":"chore(typo): fix typo in comments","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1550","RelatedDescription":"Open PR \"chore(typo): fix typo in comments\" (#1550)"},{"Id":"441132371","IsPullRequest":false,"CreatedAt":"2019-05-07T09:28:52","Actor":"GoodLuckIce","Number":"1548","RawContent":null,"Title":"preserveState: true 时嵌套 3层以上 module 会出现 state undefined 问题 ,导致 actions 多所有方法无法调用","State":"closed","Body":"preserveState: true 时 嵌套 3层以上 module 会出现 state undefined 问题 ,导致 actions 多所有方法无法调用","Url":"https://github.com/vuejs/vuex/issues/1548","RelatedDescription":"Closed issue \"preserveState: true 时嵌套 3层以上 module 会出现 state undefined 问题 ,导致 actions 多所有方法无法调用\" (#1548)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-07-09T05:30:49.4948135Z","RunDurationInMilliseconds":2012}