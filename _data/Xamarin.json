{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin.Forms Stable Comes to .NET Standard 2.0","PublishedOn":"2017-09-28T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are thrilled to share our latest stable release of Xamarin.Forms, version 2.4.0. This is our fastest, most stable release ever and we think you’re going to love it! Xamarin.Forms 2.4.0 Highlights You’ll recognize many of these highlights as shared in our public roadmap, in addition to more than 150 bug fixes. .NET Standard [&#8230;]","Href":"https://blog.xamarin.com/xamarin-forms-stable-comes-to-net-standard-2-0/","RawContent":null},{"Title":"Webinar Recording | Exploring UrhoSharp 3D with Xamarin Workbooks Webinar","PublishedOn":"2017-09-27T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Folllow along with Charles Petzold as he builds a 3D app from the ground up with UrhoSharp and Xamarin Workbooks in this webinar recording. UrhoSharp is a powerful, high performance 3D graphics engine suitable for games, animation, and data visualization. Used together, UrhoSharp and Xamarin Workbooks give developers a streamlined way to get started with [&#8230;]","Href":"https://blog.xamarin.com/webinar-recording-exploring-urhosharp-3d-with-xamarin-workbooks-webinar/","RawContent":null},{"Title":"3 Reasons to Try Xamarin Previews in Visual Studio 2017","PublishedOn":"2017-09-26T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Previews are a great way to try the latest-and-greatest in mobile development, from the new Xamarin Live Player that allows you to instantly visualize your XAML-based user interface as you type, to support for new SDKs like Android Oreo or iOS 11. Then arises the great dilemma: how do I try all the awesome stuff [&#8230;]","Href":"https://blog.xamarin.com/3-reasons-to-try-visual-studio-2017-version-15-4-previews/","RawContent":null},{"Title":"ActivityTask: A Helper for Async/Await on Android","PublishedOn":"2017-09-25T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Google I/O, several members of the Xamarin team attended the Architecture Component talk on Android lifecycle (which I recommend you watch). While the solutions presented there are interesting and, in some cases, map to patterns we already have in .NET, it resonated with those of us present because of how those Android lifecycle details [&#8230;]","Href":"https://blog.xamarin.com/activitytask-helper-asyncawait-android/","RawContent":null},{"Title":"Podcast: Android Oreo, iOS 11, and Xamarin.Forms Tips & Tricks","PublishedOn":"2017-09-22T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I cover Xamarin support for Android Oreo and iOS 11, share tips for beating the learning curve with Xamarin.Forms, talk upcoming releases in the pipeline, and more! Be sure to download today&#8217;s episode from your favorite podcasting app. Subscribe or Download Today Keeping up with [&#8230;]","Href":"https://blog.xamarin.com/podcast-android-oreo-ios-11-xamarin-forms-tips-tricks/","RawContent":null},{"Title":"Protecting Your Xamarin Apps with Dotfuscator","PublishedOn":"2017-09-20T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a special guest post from Joe Sewell, a developer on the Dotfuscator team at PreEmptive Solutions. Let&#8217;s be honest, releasing a library, desktop app, or mobile app can be a bit scary. Once your software is freely available to the world, you lose a certain degree of control over how it will be [&#8230;]","Href":"https://blog.xamarin.com/protecting-xamarin-apps-dotfuscator/","RawContent":null},{"Title":"Augment Reality with Xamarin and iOS 11","PublishedOn":"2017-09-19T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the showcase features of iOS 11 is ARKit, an augmented-reality mode available on devices powered by A9 and newer chips (basically, 6S and better iPhones, 2017 iPads, and iPad Pros). With ARKit, users hold up the device and view a composite of the video feed and computer-generated imagery (either 2D SpriteKit or 3D [&#8230;]","Href":"https://blog.xamarin.com/augment-reality-xamarin-ios-11/","RawContent":null},{"Title":"Learn How The Lean Cook Uses Mobile to Drive Revenue and Promote Healthy Living","PublishedOn":"2017-09-18T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Lean Cook, a popular UK diet and fitness blog started as a hobby by a husband and wife team, is a prime example of how to design apps for the user. Instead of simply replicating web content on a smaller screen, the team crafted an interactive shopping and cooking experience. They’ve grown a loyal following, and their latest project (available [&#8230;]","Href":"https://blog.xamarin.com/learn-lean-cook-uses-mobile-drive-revenue-promote-healthy-living/","RawContent":null},{"Title":"Xamarin.Forms: Tips for Beating the Learning Curve","PublishedOn":"2017-09-15T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As a first time user learning any new technology or pattern, there’s always a curve, and over the years I&#8217;ve stood at the threshold of a product and gazed up that curve to determine how painfully steep it appeared and how long it would take until I was productive. Now, as the Program Manager for Xamarin.Forms, [&#8230;]","Href":"https://blog.xamarin.com/xamarin-forms-tips-beating-learning-curve/","RawContent":null},{"Title":"Xamarin All-Stars at .NET Conf 2017!","PublishedOn":"2017-09-14T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Join Xamarin Product Managers and Engineers at .NET Conf 2017, a free virtual event for any developer. This year&#8217;s speaker line-up consists of all-star Xamarin speakers, including Miguel de Icaza, James Montemagno, and Mikayla Hutchinson, who will present on Xamarin tooling and the latest on what’s happening with Xamarin and related technologies. What&#8217;s .NET Conf? [&#8230;]","Href":"https://blog.xamarin.com/xamarin-stars-net-conf-2017/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6651770525","Type":"PullRequestEvent","CreatedAt":"2017-09-28T21:22:22","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/905","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tests] Fix Lint Error in the latest Android tools\" (#905) at xamarin/xamarin-android","RelatedBody":"Lint is now reporting\r\n\r\n\t`obj/Debug/android/src/md5f80e635856c5c6d2b732d9b14f8f2b1f/MainActivity.java(27,13): error XA0103:  Overriding method should call super.onCreate [MissingSuperCall]`\r\n\r\nbecause we don't call `super.onCreate` in our JCW genearted code.\r\nThis is by design so we need to ignore this particular error.\r\n\r\nThat said we now have 4 issues we ignore, so rather than keep duplicating\r\ncode it has been refectored to use a `string[]`."},{"Id":"6651740718","Type":"PullRequestEvent","CreatedAt":"2017-09-28T21:14:45","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/907","RelatedDescription":"Merged pull request \"[tests] fixes for emulator creation on Windows\" (#907) at xamarin/xamarin-android","RelatedBody":"- `JAVA_HOME` needs to be set for `avdmanager.bat`\r\n- Installing apks on the emulator was failing with\r\n`INSTALL_FAILED_INSUFFICIENT_STORAGE` on Windows\r\n- A newer revision of the emulator fixes this, now using\r\n`x86-21_r05.zip`"},{"Id":"6651727385","Type":"PullRequestEvent","CreatedAt":"2017-09-28T21:11:21","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/906","RelatedDescription":"Merged pull request \"[create-vsix] Update the icon for the .vsix file\" (#906) at xamarin/xamarin-android","RelatedBody":"The previous icon was the Visual Studio default icon for a `.vsix`\r\nproject. Replace it with a more Android-specific icon."},{"Id":"6651537478","Type":"PullRequestEvent","CreatedAt":"2017-09-28T20:27:07","Actor":"cobey","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/908","RelatedDescription":"Merged pull request \"Bump to Java.Interop/d15-4/30adcc4b\" (#908) at xamarin/xamarin-android","RelatedBody":"Context: https://bugzilla.xamarin.com/show_bug.cgi?id=59109\r\nFixes: https://bugzilla.xamarin.com/show_bug.cgi?id=59822"},{"Id":"6651458992","Type":"PullRequestEvent","CreatedAt":"2017-09-28T20:08:47","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/908","RelatedDescription":"Opened pull request \"Bump to Java.Interop/d15-4/30adcc4b\" (#908) at xamarin/xamarin-android","RelatedBody":"Context: https://bugzilla.xamarin.com/show_bug.cgi?id=59109\r\nFixes: https://bugzilla.xamarin.com/show_bug.cgi?id=59822"},{"Id":"6651105579","Type":"PullRequestEvent","CreatedAt":"2017-09-28T18:47:11","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/907","RelatedDescription":"Opened pull request \"[tests] fixes for emulator creation on Windows\" (#907) at xamarin/xamarin-android","RelatedBody":"- `JAVA_HOME` needs to be set for `avdmanager.bat`\r\n- Installing apks on the emulator was failing with\r\n`INSTALL_FAILED_INSUFFICIENT_STORAGE` on Windows\r\n- A newer revision of the emulator fixes this, now using\r\n`x86-21_r05.zip`"},{"Id":"6650157816","Type":"PullRequestEvent","CreatedAt":"2017-09-28T15:25:28","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/897","RelatedDescription":"Merged pull request \"[tests] JarContentBuilder should locate java\" (#897) at xamarin/xamarin-android","RelatedBody":"- `JavacFullPath` was  hardcoded to `javac`\r\n- `JarFullPath` was hardcoded to `jar`\r\n- Now uses `AndroidSdkInfo` to locate java\r\n- Tests using this should now pass on Windows"},{"Id":"6650076942","Type":"PullRequestEvent","CreatedAt":"2017-09-28T15:11:09","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/906","RelatedDescription":"Opened pull request \"[create-vsix] Update the icon for the .vsix file\" (#906) at xamarin/xamarin-android","RelatedBody":"The previous icon was the Visual Studio default icon for a `.vsix`\r\nproject. Replace it with a more Android-specific icon."},{"Id":"6649486030","Type":"PullRequestEvent","CreatedAt":"2017-09-28T13:24:46","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/905","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tests] Fix Lint Error in the latest Android tools\" (#905) at xamarin/xamarin-android","RelatedBody":"Lint is now reporting\r\n\r\n\t`obj/Debug/android/src/md5f80e635856c5c6d2b732d9b14f8f2b1f/MainActivity.java(27,13): error XA0103:  Overriding method should call super.onCreate [MissingSuperCall]`\r\n\r\nbecause we don't call `super.onCreate` in our JCW genearted code.\r\nThis is by design so we need to ignore this particular error.\r\n\r\nThat said we now have 4 issues we ignore, so rather than keep duplicating\r\ncode it has been refectored to use a `string[]`."},{"Id":"6649347969","Type":"PullRequestEvent","CreatedAt":"2017-09-28T12:56:36","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/899","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tests] Fix Tests using the same folders.\" (#899) at xamarin/xamarin-android","RelatedBody":"Many of the tests were using the same folders. This will cause\r\nproblems when we parallelize the tests as the tests will\r\nconflict with each other. One test might delete an entire\r\ndirectory causing the other to fail.\r\n\r\nMany of the tests also take parameters, we usually use\r\n\r\n\t`TestContext.CurrentContext.Test.Name`\r\n\r\nwhen we want to use the Test method as the name. However\r\nwith parameterized tests this can sometimes include invalid\r\ncharacters for paths/filenames. So a new property has been\r\nintroduced in the `BaseTest` class `TestName` which cleans up\r\nand removes problematic characters.\r\n\r\nWe also switch over to `ParallelScope.Children` so that we can\r\nrun all tests in parallel when we upgrade NUnit to 3.7."},{"Id":"6649319234","Type":"PullRequestEvent","CreatedAt":"2017-09-28T12:50:23","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/898","RelatedDescription":"Closed pull request \"[Xamarin.Android.Build.Tests] Give every test its own fixture.\" (#898) at xamarin/xamarin-android","RelatedBody":"In an effort to speed up the tests by allows more\r\nparallelization we are giving each test its own fixture.\r\nThis should allow more tests to run at once."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6651785444","Type":"PullRequestEvent","CreatedAt":"2017-09-28T21:26:13","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1171","RelatedDescription":"Opened pull request \"Add sln for VS2017 , remove not used Page Gallery\" (#1171) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAdd VS2017 sln.\r\nRemove old WP and WinRT PageGallery\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6650773245","Type":"PullRequestEvent","CreatedAt":"2017-09-28T17:33:14","Actor":"MarkoBL","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1170","RelatedDescription":"Opened pull request \"[macOS] ScrollView Resize Fix\" (#1170) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis PR fixes the bug that a ScrollView automatically scrolls to the top when its size changes.\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6649871229","Type":"PullRequestEvent","CreatedAt":"2017-09-28T14:35:31","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1006","RelatedDescription":"Merged pull request \"[All] Use IReflectableType when accessing the Registrar\" (#1006) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nEverywhere `Registrar.Registered.GetHandler` is called, try to use the `IReflectableType` to get type information instead of `GetType`.\r\n\r\nThis allows dynamic objects that implement their own types to be used by the Registrar.\r\n\r\nThere is already some precedent for support of dynamic objects: `BindingExpression.ApplyCore` does this same kind of check. This patch extends that support to the Registrar.\r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Behavioral Changes ###\r\n\r\nUsers will be able to register dynamic objects in the Registrar where before they could not.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (2 new tests)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6649577416","Type":"PullRequestEvent","CreatedAt":"2017-09-28T13:42:17","Actor":"MarkoBL","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1169","RelatedDescription":"Opened pull request \"[macOS] Make Platform.RendererProperty public\" (#1169) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nHere's the reason for this: I want to write my own ListView, making ListViewDataSource was rejected (https://github.com/xamarin/Xamarin.Forms/pull/1098), therefore I had to copy this code into my project. But I can't compile this piece of code, as RenderProperty is internal:\r\n\r\n```\r\nvar target = viewCell.View;\r\ntarget.ClearValue(Platform.RendererProperty);\r\nforeach (var descendant in target.Descendants())\r\n\tdescendant.ClearValue(Platform.RendererProperty);\r\n```\r\n\r\nRenderProperty is static readonly, therefore people should not be able to break anything. Especially, as Platform.CreateRenderer, Platform.GetRenderer and Platform.SetRenderer are public. I could probably use Platform.SetRenderer(target, null), but I don't know if this is produces the same result as ClearValue.\r\n\r\n### API Changes ###\r\n\r\nChanged:\r\n - internal Platform.RenderProperty => public Platform.RenderProperty\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6649488897","Type":"PullRequestEvent","CreatedAt":"2017-09-28T13:25:20","Actor":"MarkoBL","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1168","RelatedDescription":"Opened pull request \"[MacOS] Navigation Transition Style\" (#1168) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThis PR adds the option to set the transition style on a NavigationPage for pushing and popping pages. (old request was https://github.com/xamarin/Xamarin.Forms/pull/1043). Now with docs. I also added the docs for the TabOrder Extension on macOS that I wrote. I didn't want to create a separate PR for this, but I can do it, if required.\r\n\r\n### API Changes ###\r\n\r\nOn<Xamarin.Forms.PlatformConfiguration.macOS> ().SetNavigationTransitionStyle (NavigationTransitionStyle.Crossfade, NavigationTransitionStyle.SlideUp);\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6649334484","Type":"PullRequestEvent","CreatedAt":"2017-09-28T12:53:42","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1167","RelatedDescription":"Opened pull request \"[XamlC] XamlResourceIdAttribute\" (#1167) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAttribute partial classes generated from XamlG with a XamlResourceIdAttribute identifying the resource ID.\r\n\r\nWith that attribute, we can simplify the process of identifying the right resource for the right type in the XamlLoader and no longer have to guess or run expensive regex on the xaml.\r\n\r\nThis is the side effect of another branch I'm working on, but is nice on it's own, so it deserves it's PR.\r\n\r\n### Bugs Fixed ###\r\n\r\n/\r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense"},{"Id":"6649152669","Type":"PullRequestEvent","CreatedAt":"2017-09-28T12:12:10","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1166","RelatedDescription":"Opened pull request \"[XamlC] Compiled UriTypeConverter\" (#1166) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\ncompiled version of the UriTypeConverter\r\n\r\n### Bugs Fixed ###\r\n\r\n/\r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6652593465","Type":"PullRequestEvent","CreatedAt":"2017-09-29T02:36:06","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2813","RelatedDescription":"Merged pull request \"[Intents] Update to Xcode 9.1 Beta 1\" (#2813) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6652278760","Type":"PullRequestEvent","CreatedAt":"2017-09-29T00:13:46","Actor":"timrisi","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2817","RelatedDescription":"Opened pull request \"[HealthKit] Bind Xcode 9 APIs\" (#2817) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6652042190","Type":"PullRequestEvent","CreatedAt":"2017-09-28T22:40:26","Actor":"timrisi","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2589","RelatedDescription":"Closed pull request \"[MetalPerformanceShaders] Bindings beta 1-6\" (#2589) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"6651954021","Type":"PullRequestEvent","CreatedAt":"2017-09-28T22:12:17","Actor":"timrisi","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2816","RelatedDescription":"Opened pull request \"[MetalPerformanceShaders] Activate bindings for Xamarin.Mac and add n…\" (#2816) at xamarin/xamarin-macios","RelatedBody":"…ew APIs\r\n\r\nRebased to the xcode9.1 branch, replacing https://github.com/xamarin/xamarin-macios/pull/2589"},{"Id":"6651872644","Type":"PullRequestEvent","CreatedAt":"2017-09-28T21:49:18","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/2815","RelatedDescription":"Opened pull request \"Fix a number of introspection test failures on 10.13\" (#2815) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"913493122902056960","CreatedAt":"2017-09-28T19:58:27+00:00","UserScreenname":"xamarinhq","Text":"#XamarinForms Stable comes to #dotNET Standard 2.0! Details: https://t.co/uLZzFJNACa https://t.co/UuJSdo8LRi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":47,"RawContent":null},{"Id":"913433871622041600","CreatedAt":"2017-09-28T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to provision a new iOS device and app in five minutes using #VS4Mac and the open source project fastlane: https://t.co/wNcfcCJn1v","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":15,"RawContent":null},{"Id":"913112376391733248","CreatedAt":"2017-09-27T18:45:29+00:00","UserScreenname":"xamarinhq","Text":"Add 3D to your app with our webinar recording from Charles Petzold on using UrhoSharp 3D with #Xamarin Workbooks: https://t.co/AG37mw39QS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":25,"FavoriteCount":18,"RawContent":null},{"Id":"913071735381118977","CreatedAt":"2017-09-27T16:04:00+00:00","UserScreenname":"xamarinhq","Text":"Update #VisualStudio and #VS4Mac for full support to develop #iOS11 apps with #Xamarin: https://t.co/dRGFj7RaZO","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":28,"FavoriteCount":40,"RawContent":null},{"Id":"912752497046978560","CreatedAt":"2017-09-26T18:55:28+00:00","UserScreenname":"xamarinhq","Text":"Try out the latest new features for #Xamarin in #VS2017 without affecting your production environment: https://t.co/6QFngIYygP","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":16,"RawContent":null},{"Id":"912704314086428674","CreatedAt":"2017-09-26T15:44:00+00:00","UserScreenname":"xamarinhq","Text":"Add local notifications to your Xamarin.Mac applications: https://t.co/fmHnM8m18Z","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":19,"FavoriteCount":9,"RawContent":null},{"Id":"912414874571038732","CreatedAt":"2017-09-25T20:33:52+00:00","UserScreenname":"xamarinhq","Text":"Learn how ActivityTask makes async/await easier to use in your #Xamarin Android mobile apps: https://t.co/drhcfIy4ht","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":27,"RawContent":null},{"Id":"912343187083100165","CreatedAt":"2017-09-25T15:49:00+00:00","UserScreenname":"xamarinhq","Text":"Make your #XamarinForms apps accessible with Xamarin.Forms 2.3.4 + an example from the #XamarinEvolve 2016 app: https://t.co/auqnwBvyE2","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":40,"FavoriteCount":18,"RawContent":null},{"Id":"912103614059094017","CreatedAt":"2017-09-24T23:57:02+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the #Xamarin.Firebase.Messaging package to add FCM-based push notification features in your app:… https://t.co/IlUWyDYRGV","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":102,"FavoriteCount":41,"RawContent":null},{"Id":"911804140266778625","CreatedAt":"2017-09-24T04:07:02+00:00","UserScreenname":"xamarinhq","Text":"Deep Dive into #SkiaSharp for #XamarinForms with #Xamarin's Charles Petzold: https://t.co/mlySNkqQ63 https://t.co/WNuYhD19n9","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":71,"FavoriteCount":35,"RawContent":null},{"Id":"911313517848006657","CreatedAt":"2017-09-22T19:37:28+00:00","UserScreenname":"xamarinhq","Text":"This week on the @XamarinPodcast learn about #Xamarin support for #AndroidOreo and #iOS11, #XamarinForms, plus more: https://t.co/CDAYHoRh5t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":22,"RawContent":null},{"Id":"910894395024699392","CreatedAt":"2017-09-21T15:52:02+00:00","UserScreenname":"xamarinhq","Text":"Our @XamarinU webinar with Charles Petzold on UrhoSharp 3D with #Xamarin Workbooks is about to start—join us:… https://t.co/CjCM7pVcd3","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":17,"FavoriteCount":8,"RawContent":null},{"Id":"910587508056051713","CreatedAt":"2017-09-20T19:32:34+00:00","UserScreenname":"xamarinhq","Text":"See how the #Dotfuscator from @PreEmptive can protect your #Xamarin apps and libraries from reverse engineering: https://t.co/hyhUzG4o9r","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":81,"FavoriteCount":27,"RawContent":null},{"Id":"910536790372683777","CreatedAt":"2017-09-20T16:11:02+00:00","UserScreenname":"xamarinhq","Text":"Last chance—don't forget to sign up for Charles Petzold's webinar tomorrow on UrhoSharp 3D with Xamarin Workbooks:… https://t.co/KilnMMfPtU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":10,"FavoriteCount":9,"RawContent":null},{"Id":"910535530965737486","CreatedAt":"2017-09-20T16:06:02+00:00","UserScreenname":"xamarinhq","Text":"Our friends at #VSMobileCenter have made it even easier to add mobile DevOps to your development process with great… https://t.co/YalQb8Jt8k","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":27,"FavoriteCount":16,"RawContent":null},{"Id":"910216295668383747","CreatedAt":"2017-09-19T18:57:30+00:00","UserScreenname":"xamarinhq","Text":"Xamarin's @lobrien  shows you how to  add augmented reality to your #Xamarin apps with #ARKit in #iOS11: https://t.co/FPBpyiRPEK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":82,"FavoriteCount":44,"RawContent":null},{"Id":"910192040188751872","CreatedAt":"2017-09-19T17:21:07+00:00","UserScreenname":"xamarinhq","Text":"Get your #Xamarin apps ready for #iOS11, #tvOS11, and #watchOS4 with updated #VisualStudio tools, docs, and samples: https://t.co/7eYTFe0O73","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":39,"FavoriteCount":26,"RawContent":null},{"Id":"910173151891468295","CreatedAt":"2017-09-19T16:06:04+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin Partners are helping companies accelerate their mobile projects every day. Find a #XamarinPartner near you… https://t.co/IfYCiVzmVz","Source":"<a href=\"http://sproutsocial.com\" rel=\"nofollow\">Sprout Social</a>","RetweetCount":14,"FavoriteCount":10,"RawContent":null}]}},"RunOn":"2017-09-29T05:30:34.295061Z","RunDurationInMilliseconds":3975}