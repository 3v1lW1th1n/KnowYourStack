{"Data":{"Vue":{"Events":[{"Id":"6767580567","Type":"PullRequestEvent","CreatedAt":"2017-10-26T04:22:58","Actor":"cxtom","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/pull/6925","RelatedDescription":"Opened pull request \"fix(patch): fix child node create failed when hydration failed\" (#6925) at vuejs/vue","RelatedBody":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nWhen component B is a child node of  component A and they both have hydrated failed, A will firstly be replaced with a new dom node during patching. When create the new B dom node, A is not inserted correctly"},{"Id":"6767383914","Type":"IssuesEvent","CreatedAt":"2017-10-26T02:58:51","Actor":"ktsn","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue/issues/6924","RelatedDescription":"Closed issue \"Typescript may be can not infer the props type\" (#6924) at vuejs/vue","RelatedBody":"### Version\r\nvue 2.5.2\r\ntypescript 2.5.3\r\n### Reproduction link\r\n[https://jsfiddle.net/chrisvfritz/50wL7mdz/typescript](https://jsfiddle.net/chrisvfritz/50wL7mdz/typescript)\r\n\r\n### Steps to reproduce\r\nTypescript may be can not infer the props type. eg:\r\n```javascript\r\n//App.vue\r\n<template>\r\n    <div>\r\n        <vheader :test=\"test\" :type=\"type\"></vheader>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport header from './header.vue';\r\nexport default {\r\n    components: {\r\n        vheader: header\r\n    },\r\n    computed: {\r\n    },\r\n    methods: {\r\n        test(left: number, right: number): number {\r\n            return left   right;\r\n        }\r\n    }\r\n}\r\n</script>\r\n//header.vue\r\n<script lang=\"ts\">\r\nimport Vue from 'vue'\r\nexport default {\r\n    props: {\r\n        test: Function\r\n    },\r\n    data() {\r\n        this.test('aa','aa');\r\n        return {}\r\n    }\r\n}\r\n</script>\r\n```\r\nthis.test('aa', 'aa') can invoke correct. \r\nNow Vue can not get the parent's(props) function type? \r\n\r\n### What is expected?\r\ntypes error.\r\n\r\n### What is actually happening?\r\ncan run success.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6767344880","Type":"IssuesEvent","CreatedAt":"2017-10-26T02:43:28","Actor":"xingyesh","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/6924","RelatedDescription":"Opened issue \"Typescript may be can not infer the props type\" (#6924) at vuejs/vue","RelatedBody":"### Version\r\n2.5.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/chrisvfritz/50wL7mdz/typescript](https://jsfiddle.net/chrisvfritz/50wL7mdz/typescript)\r\n\r\n### Steps to reproduce\r\nTypescript may be can not infer the props type. eg:\r\n```javascript\r\n//App.vue\r\n<template>\r\n    <div>\r\n        <vheader :test=\"test\" :type=\"type\"></vheader>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport header from './header.vue';\r\nexport default {\r\n    components: {\r\n        vheader: header\r\n    },\r\n    computed: {\r\n    },\r\n    methods: {\r\n        test(left: number, right: number): number {\r\n            return left   right;\r\n        }\r\n    }\r\n}\r\n</script>\r\n//header.vue\r\n<script lang=\"ts\">\r\nimport Vue from 'vue'\r\nexport default {\r\n    props: {\r\n        test: Function\r\n    },\r\n    data() {\r\n        this.test('aa','aa');\r\n        return {}\r\n    }\r\n}\r\n</script>\r\n```\r\nthis.test('aa', 'aa') can invoke correct. \r\nNow Vue can not get the parent's(props) function type? \r\n\r\n### What is expected?\r\ntypes error.\r\n\r\n### What is actually happening?\r\ncan run success.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6767329386","Type":"IssuesEvent","CreatedAt":"2017-10-26T02:37:23","Actor":"vue-issue-bot","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue/issues/6923","RelatedDescription":"Closed issue \"Typescript cannot infer the props type.\" (#6923) at vuejs/vue","RelatedBody":"Typescript may be can not infer the props type. eg:\r\n```javascript\r\n//App.vue\r\n<template>\r\n    <div>\r\n        <vheader :test=\"test\" :type=\"type\"></vheader>\r\n    </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport header from './header.vue';\r\nexport default {\r\n    components: {\r\n        vheader: header\r\n    },\r\n    computed: {\r\n    },\r\n    methods: {\r\n        test(left: number, right: number): number {\r\n            return left + right;\r\n        }\r\n    }\r\n}\r\n</script>\r\n//header.vue\r\n<script lang=\"ts\">\r\nimport Vue from 'vue'\r\nexport default {\r\n    props: {\r\n        test: Function\r\n    },\r\n    data() {\r\n        this.test('aa','aa');\r\n        return {}\r\n    }\r\n}\r\n</script>\r\n```\r\nthis.test('aa', 'aa') can invoke correct. \r\nNow Vue can not get the parent's(props) function type? "}],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"6764189253","Type":"IssuesEvent","CreatedAt":"2017-10-25T14:06:16","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1847","RelatedDescription":"Closed issue \"在ts中路由定义时无法使用import()定义异步子组件\" (#1847) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/zh-cn/advanced/lazy-loading.html#](https://router.vuejs.org/zh-cn/advanced/lazy-loading.html#)\r\n\r\n### Steps to reproduce\r\n无法使用import()定义异步子组件\r\n\r\n### What is expected?\r\n无法使用import()定义异步子组件\r\n\r\n### What is actually happening?\r\n无法使用import()定义异步子组件\r\n\r\n---\r\n无法使用import()定义异步子组件\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6764145221","Type":"IssuesEvent","CreatedAt":"2017-10-25T13:58:52","Actor":"yangdan8","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1847","RelatedDescription":"Opened issue \"在ts中路由定义时无法使用import()定义异步子组件\" (#1847) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/zh-cn/advanced/lazy-loading.html#](https://router.vuejs.org/zh-cn/advanced/lazy-loading.html#)\r\n\r\n### Steps to reproduce\r\n无法使用import()定义异步子组件\r\n\r\n### What is expected?\r\n无法使用import()定义异步子组件\r\n\r\n### What is actually happening?\r\n无法使用import()定义异步子组件\r\n\r\n---\r\n无法使用import()定义异步子组件\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6764092420","Type":"IssuesEvent","CreatedAt":"2017-10-25T13:49:50","Actor":"vue-issue-bot","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1846","RelatedDescription":"Closed issue \"ts中无法使用import()定义异步组件\" (#1846) at vuejs/vue-router","RelatedBody":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n"},{"Id":"6764092347","Type":"IssuesEvent","CreatedAt":"2017-10-25T13:49:49","Actor":"yangdan8","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1846","RelatedDescription":"Opened issue \"ts中无法使用import()定义异步组件\" (#1846) at vuejs/vue-router","RelatedBody":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"6767171592","Type":"PullRequestEvent","CreatedAt":"2017-10-26T01:34:41","Actor":"ktsn","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vuex/pull/1015","RelatedDescription":"Merged pull request \"Grammar fixes in core-concepts.md\" (#1015) at vuejs/vuex","RelatedBody":"Changing 'this chapters' to 'these chapters'  and 'in Vuex' to 'of Vuex'."},{"Id":"6767170841","Type":"PullRequestEvent","CreatedAt":"2017-10-26T01:34:23","Actor":"ktsn","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vuex/pull/1014","RelatedDescription":"Merged pull request \"Fixed missing word in getters.md\" (#1014) at vuejs/vuex","RelatedBody":"« Il ne sera évalué _que_ quand… » and maybe better « Il ne sera évalué _que lorsque_… »"},{"Id":"6767170193","Type":"PullRequestEvent","CreatedAt":"2017-10-26T01:34:08","Actor":"ktsn","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vuex/pull/1007","RelatedDescription":"Merged pull request \"Update actions.md\" (#1007) at vuejs/vuex","RelatedBody":"Async/await has already been landed"},{"Id":"6767169326","Type":"PullRequestEvent","CreatedAt":"2017-10-26T01:33:44","Actor":"ktsn","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vuex/pull/1012","RelatedDescription":"Merged pull request \"[Doc EN]: Official Vue way to speak about a version and greater version\" (#1012) at vuejs/vuex","RelatedBody":"Hi @posva, little changes from FR version and English same thing."},{"Id":"6765887060","Type":"IssuesEvent","CreatedAt":"2017-10-25T19:29:20","Actor":"cdbkr","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1017","RelatedDescription":"Opened issue \"Inconsistencies between map* helpers\" (#1017) at vuejs/vuex","RelatedBody":"### What problem does this feature solve?\r\n```\r\nmapState\r\n...\r\nreturn typeof val === 'function'\r\n        ? val.call(this, state, getters)\r\n        : state[val]\r\n\r\n//\r\n...mapState({\r\n      a: state => state.a,\r\n      b: state => state.b\r\n    })\r\n```\r\n\r\n\r\n```\r\nmapActions\r\n...\r\nreturn typeof val === 'function'\r\n        ? val.apply(this, [dispatch].concat(args))  // no actions\r\n        : dispatch.apply(this.$store, [val].concat(args))\r\n```\r\n\r\n```\r\nmapMutations\r\n...\r\nreturn typeof val === 'function'\r\n        ? val.apply(this, [commit].concat(args))\r\n        : commit.apply(this.$store, [val].concat(args))\r\n\r\n```\r\n### What does the proposed API look like?\r\nThe idea is to bring consistencies when using the exposed helpers (mapState, mapActions, mapMutations etc...)\r\nIs the current approach done on purpose? It would be great to have access to the actions, mutations, when using the helpers. This might be helpful when registering and accessing dynamic modules\r\n\r\ne.g.\r\n```\r\nmapActions\r\n...\r\nlet actions = this.$store.actions\r\n...\r\nreturn typeof val === 'function'\r\n        ? val.apply(this, [dispatch].concat(args, actions))\r\n        : dispatch.apply(this.$store, [val].concat(args, actions))\r\n//\r\n...mapActions({\r\n      a: actions => actions['nested/module/action'],\r\n      b: actions => state['nested/module/action']\r\n    })\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"}},"RunOn":"2017-10-26T05:30:33.6082955Z","RunDurationInMilliseconds":2080}