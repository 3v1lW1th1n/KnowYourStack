{"Data":{"Blog":{"FeedItems":[{"Title":"Azure Storage for Serverless .NET Apps in Minutes","PublishedOn":"2018-01-25T19:38:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Azure Storage is a quick and effortless way to store data for applications that has high availability, is secure, scales and is redundant. This blog post walks through a simple application that...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/25/azure-storage-for-serverless-net-apps-in-minutes/","RawContent":null},{"Title":"64 bit ASP.NET Core on Azure App Service","PublishedOn":"2018-01-10T00:15:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When creating an Azure App Service .NET Core is already pre-installed. However, only the 32 bit .NET runtime is installed. In this post we will look at a  few ways that you can get a 64 bit runtime on...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/09/64-bit-asp-net-core-on-azure-app-service/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4","PublishedOn":"2018-01-05T20:30:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we are releasing Preview 1 of ASP.NET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 on NuGet. This release contains some minor bug fixes and a couple of new features specifically targeted at...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/01/05/announcing-preview-1-of-asp-net-mvc-5-2-4-web-api-5-2-4-and-web-pages-3-2-4/","RawContent":null},{"Title":"Take a Break with Azure Functions","PublishedOn":"2017-12-22T05:41:48+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"So, it&#8217;s the Holidays. The office is empty, the boss is away, and you&#8217;ve got a bit of free time on your hands. How about learning a new skill and having some fun? Azure Functions are a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/21/take-a-break-with-azure-functions/","RawContent":null},{"Title":"Testing ASP.NET Core MVC web apps in-memory","PublishedOn":"2017-12-07T17:00:35+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"This post was written and submitted by Javier Calvarro Nelson, a developer on the ASP.NET Core MVC team Testing is an important part of the development process of any app. In this blog post...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/07/testing-asp-net-core-mvc-web-apps-in-memory/","RawContent":null},{"Title":"Configuring HTTPS in ASP.NET Core across different platforms","PublishedOn":"2017-11-29T17:00:12+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As the web moves to be more secure by default, it&#8217;s more important than ever to make sure your websites have HTTPS enabled. And if you&#8217;re going to use HTTPS in production its a good idea...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/29/configuring-https-in-asp-net-core-across-different-platforms/","RawContent":null},{"Title":"Improve website performance by optimizing images","PublishedOn":"2017-11-28T18:02:29+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We all want our web applications to load as fast as possible to give the best possible experience to the users. One of the steps to achieve that is to make sure the images we use are as optimized as...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/28/improve-website-performance-by-optimizing-images/","RawContent":null},{"Title":"Orchard Core Beta 1 released","PublishedOn":"2017-11-21T19:32:10+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This is a guest post by Sebastien Ros on behalf of the Orchard community Two years ago, the Orchard community started developing Orchard on .NET Core. After 1,500 commits, 297,000 lines of code, 127...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/21/orchard-core-beta-annoucement/","RawContent":null},{"Title":"Announcing .NET 4.7.1 Tools for the Cloud","PublishedOn":"2017-11-17T17:41:35+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today we are releasing a set of providers for ASP.NET 4.7.1 that make it easier than ever to deploy your applications to cloud services and take advantage of cloud-scale features.  This release...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/17/announcing-net-4-7-1-tools-for-the-cloud/","RawContent":null},{"Title":"Improvements to Azure Functions in Visual Studio","PublishedOn":"2017-11-15T19:00:43+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We&#8217;re excited to announce several improvements to the Azure Functions experience in Visual Studio as part of the latest update to the Azure Functions tools on top of Visual Studio 2017 v15.5....","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/15/improvements-to-azure-functions-in-visual-studio/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7186164340","Type":"IssuesEvent","CreatedAt":"2018-02-01T22:06:51","Actor":"marian-margeta","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2843","RelatedDescription":"Opened issue \"DataProtection DPAPI - optional enthropy\" (#2843) at aspnet/Home","RelatedBody":"Why it isn't possible to change optional entropy when using DPAPI data protection? \r\n```csharp\r\n...\r\nservices.AddDataProtection().ProtectKeysWithDpapi();\r\n...\r\n```\r\nI dug into the code and it turns out it is constantly set to 'DPAPI-Protected Secret' in class [DpapiSecretSerializerHelper](https://github.com/aspnet/DataProtection/blob/b706a75e03f93d2f9175a7fc3339baa87ad653f0/src/Microsoft.AspNetCore.DataProtection/Cng/DpapiSecretSerializerHelper.cs#L24). I think it would be nice to make it accessible from ASP's DataProtection API. It may be used as another password given at startup, along with NTLM. "},{"Id":"7184822403","Type":"IssuesEvent","CreatedAt":"2018-02-01T17:26:48","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2842","RelatedDescription":"Closed issue \"Loading list from appsettings.xml fails\" (#2842) at aspnet/Home","RelatedBody":"I haven an appsettings.xml file with the following structure:\r\n\r\n```\r\n<config>\r\n    <aaa>value1</aaa>\r\n    <aaa>value2</aaa>\r\n</config>\r\n```\r\n\r\nI wish to load this using the XML configuration loading pattern documented at https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?tabs=basicconfiguration\r\n\r\nExpected behavior: a list is loaded, accessible as `aaa:0` and `aaa:1`\r\n\r\nActual behavior: System.FormatException occurred, Message=A duplicate key 'aaa' was found."},{"Id":"7183732884","Type":"IssuesEvent","CreatedAt":"2018-02-01T14:22:38","Actor":"davidfowl","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2692","RelatedDescription":"Closed issue \"Middleware exception message is ambiguous\" (#2692) at aspnet/Home","RelatedBody":"_From @agegould on Friday, August 25, 2017 4:41:16 AM_\r\n\r\nWhen the framework attempts to locate the 'Invoke' or 'InvokeAsync' method on a middleware class, an exception is thrown if it cannot locate a suitable method, however, the exception message is ambiguous as it does not provide any details of the name of the middleware class that it was attempting to invoke when the exception was thrown. \r\n\r\nAn example of the exception message is provided below:- \r\nNo details of the class name are included, which makes it very difficult to locate the issue.\r\n\r\nAn error occurred while starting the application.\r\nInvalidOperationException: No public 'Invoke' or 'InvokeAsync' method found.\r\nMicrosoft.AspNetCore.Builder.UseMiddlewareExtensions+<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate next)\r\nInvalidOperationException: No public 'Invoke' or 'InvokeAsync' method found.\r\nMicrosoft.AspNetCore.Builder.UseMiddlewareExtensions+<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate next)\r\nMicrosoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build()\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n\r\nShow raw exception details \r\nSystem.InvalidOperationException: No public 'Invoke' or 'InvokeAsync' method found.\r\n\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate next)\r\n\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build()\r\n\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n\r\n\r\n_Copied from original issue: aspnet/HttpAbstractions#927_"},{"Id":"7182519886","Type":"IssuesEvent","CreatedAt":"2018-02-01T10:04:16","Actor":"sandersaares","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2842","RelatedDescription":"Opened issue \"Loading list from appsettings.xml fails\" (#2842) at aspnet/Home","RelatedBody":"I haven an appsettings.xml file with the following structure:\r\n\r\n```\r\n<config>\r\n    <aaa>value1</aaa>\r\n    <aaa>value2</aaa>\r\n</config>\r\n```\r\n\r\nI wish to load this using the XML configuration loading pattern documented at https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?tabs=basicconfiguration\r\n\r\nExpected behavior: a list is loaded, accessible as `aaa:0` and `aaa:1`\r\n\r\nActual behavior: System.FormatException occurred, Message=A duplicate key 'aaa' was found."},{"Id":"7181564988","Type":"IssuesEvent","CreatedAt":"2018-02-01T05:52:03","Actor":"sandersaares","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2839","RelatedDescription":"Closed issue \"ASP.NET Core 2 app created using VS 2017 \"Empty\" template fails to run on .NET Core runtime 2.0.5\" (#2839) at aspnet/Home","RelatedBody":"1. Create a new ASP.NET Core 2 Web Application project in Visual Studio 2017 using the \"Empty\" template.\r\n1. Execute `dotnet publish`\r\n1. In a Windows Server 2016 container with the .NET Core runtime (version `microsoft/dotnet:2.0-runtime-nanoserver-sac2016`) execute `dotnet WebApplication2.dll`\r\n\r\nExpected result: the created empty web app starts.\r\n\r\nActual result: \r\n\r\n```\r\nError:\r\n  An assembly specified in the application dependencies manifest (WebApplication2.deps.json) was not found:\r\n    package: 'Microsoft.ApplicationInsights.AspNetCore', version: '2.1.1'\r\n    path: 'lib/netstandard1.6/Microsoft.ApplicationInsights.AspNetCore.dll'\r\n  This assembly was expected to be in the local runtime store as the application was published using the following target manifest files:\r\n    aspnetcore-store-2.0.0-linux-x64.xml;aspnetcore-store-2.0.0-osx-x64.xml;aspnetcore-store-2.0.0-win7-x64.xml;aspnetcore-store-2.0.0-win7-x86.xml\r\n```\r\n\r\nThe same command (`dotnet WebApplication2.dll`) works on my development PC.\r\n\r\nDevelopment environment versions:\r\n\r\n```\r\n.NET Command Line Tools (2.1.4)\r\n\r\nProduct Information:\r\n Version:            2.1.4\r\n Commit SHA-1 hash:  5e8add2190\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.4\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.5\r\n  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54\r\n```\r\n\r\nRuntime environment versions:\r\n\r\n```\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.5\r\n  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54\r\n```"},{"Id":"7180592546","Type":"IssuesEvent","CreatedAt":"2018-02-01T00:02:42","Actor":"mikaelm12","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2629","RelatedDescription":"Closed issue \"Implement response caching middleware\" (#2629) at aspnet/Home","RelatedBody":"_From @Tratcher on Tuesday, June 9, 2015 9:53:36 AM_\r\n\r\nMVC and other application level components will set standard HTTP cache headers (Cache-Control, Vary, etc.) for clients and proxies.\n\nMiddleware will read the response headers and cache in a local memory cache when appropriate. Then it can short circuit incoming requests and serve them from the cache.\n\nWe may also need a feature interface for interacting with server level caches (e.g. to limit double caching).\n\r\n\r\n_Copied from original issue: aspnet/ResponseCaching#1_"},{"Id":"7180434956","Type":"IssuesEvent","CreatedAt":"2018-01-31T23:16:52","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2761","RelatedDescription":"Closed issue \"SetCookieHeaderValue.Parse does not accept non-RFC 1123 date values on expires.\" (#2761) at aspnet/Home","RelatedBody":"## What happens\r\n\r\nWhen I'm trying to parse a cookie like this one: `1P_JAR=2018-01-10-13; expires=Fri, 09-Feb-2018 13:17:26 GMT; path=/; domain=.google.it`, I get a `System.FormatException: The header contains invalid values at index 0`.\r\n\r\nIf I remove the expires key, or I manually change the value to `Fri, 09 Feb 2018 13:17:26 GMT`, the parse works as expected.\r\n\r\n## What should happen\r\n\r\nThe [RFC 2616 Section 3.3.1](https://tools.ietf.org/html/rfc2616#section-3.3.1) specify that:\r\n\r\n> HTTP/1.1 clients and servers that parse the date value MUST accept all three formats (for compatibility with HTTP/1.0), though they MUST only generate the RFC 1123 format for representing HTTP-date values in header fields. See section 19.3 for further information.\r\n\r\nI expect that the Parse\\TryParse methods allow all three formats (RFC1123, RFC850 and ANSI C) but only generate an RFC1123 compliant string when `SetCookieHeaderValue.ToString()`."}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7186560634","Type":"PullRequestEvent","CreatedAt":"2018-02-01T23:50:39","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1399","RelatedDescription":"Opened pull request \"[WIP] display startup logs when functional test server fails to start\" (#1399) at aspnet/SignalR","RelatedBody":"currently just seeing if this works, but if it does, we should merge it to get more info on flaky tests."},{"Id":"7186436291","Type":"PullRequestEvent","CreatedAt":"2018-02-01T23:13:41","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1397","RelatedDescription":"Merged pull request \"Fix flaky test\" (#1397) at aspnet/SignalR","RelatedBody":"Registering `Closed` callback after connection started would be a race between the timeout and the register"},{"Id":"7186418628","Type":"PullRequestEvent","CreatedAt":"2018-02-01T23:08:53","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1395","RelatedDescription":"Merged pull request \"fix #1199 by suppressing ODE in received callback\" (#1395) at aspnet/SignalR","RelatedBody":"As part of this, I made the list of callbacks in TestConnection public so I could forcibly invoke one. Seems safe as this is purely test code.\r\n\r\nFixes #1199 "},{"Id":"7186418622","Type":"IssuesEvent","CreatedAt":"2018-02-01T23:08:53","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1199","RelatedDescription":"Closed issue \"Object Disposed Exception on OnReceived callback\" (#1199) at aspnet/SignalR","RelatedBody":"```\r\nfail: Microsoft.AspNetCore.Sockets.Client.HttpConnection[19]\r\n      12/11/2017 10:30:05: Connection Id (null): An exception was thrown from the 'OnReceived' callback\r\nSystem.ObjectDisposedException: Cannot access a disposed object.\r\n   at System.Threading.TimerQueueTimer.Change(UInt32 dueTime, UInt32 period)\r\n   at System.Threading.Timer.Change(TimeSpan dueTime, TimeSpan period)\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.ResetTimeoutTimer() in C:\\Github\\SignalR\\src\\Microsoft.AspNetCore.SignalR.Client.Core\\HubConnection.cs:line 104\r\n   at Microsoft.AspNetCore.SignalR.Client.HubConnection.<OnDataReceivedAsync>d__40.MoveNext() in C:\\Github\\SignalR\\src\\Microsoft.AspNetCore.SignalR.Client.Core\\HubConnection.cs:line 332\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.Sockets.Client.HttpConnection.<>c__DisplayClass45_0.<<ReceiveAsync>b__0>d.MoveNext() in C:\\Github\\SignalR\\src\\Microsoft.AspNetCore.Sockets.Client.Http\\HttpConnection.cs:line 377\r\n```\r\n\r\n@anurse "},{"Id":"7186386217","Type":"PullRequestEvent","CreatedAt":"2018-02-01T23:00:14","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1398","RelatedDescription":"Opened pull request \"fix version in version.props\" (#1398) at aspnet/SignalR","RelatedBody":"Looks like this didn't get updated when all the versions were updated to preview2. As a result, our `dev` builds are being pushed to MyGet as `1.0.0-preview1-...`\r\n\r\nNot sure how that got missed, but we should try to make sure we avoid it in the future, I'll ping some people and check on that. Also, we may need to clean the MyGet feed a bit."},{"Id":"7186368974","Type":"PullRequestEvent","CreatedAt":"2018-02-01T22:55:53","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1397","RelatedDescription":"Opened pull request \"Fix flaky test\" (#1397) at aspnet/SignalR","RelatedBody":"Registering `Closed` callback after connection started would be a race between the timeout and the register"},{"Id":"7186234617","Type":"IssuesEvent","CreatedAt":"2018-02-01T22:23:04","Actor":"jceddy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1396","RelatedDescription":"Closed issue \"Detect connection state changes?\" (#1396) at aspnet/SignalR","RelatedBody":"In the previous SignalR client, I could subscribe to connection state changes using:\r\n\r\n$.connection.hub.stateChanged\r\n\r\nIs there something similar in the new (preview2) client? Or do I have to do some kind of polling to get that information?"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7187209248","Type":"IssuesEvent","CreatedAt":"2018-02-02T03:37:26","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/5013","RelatedDescription":"Closed issue \"Output formatters should not use TypedHeaders to parse Accept-Charset\" (#5013) at aspnet/Mvc","RelatedBody":"Data from TechEmpower (Json)\n![image](https://cloud.githubusercontent.com/assets/1430011/16783465/efff68c6-4838-11e6-855b-f905ec58cc4f.png)\n\nThis is about 2% of CPU time. We don't need the typed headers object, which is large. We should just parse the `Accept-Charset` ourselves\n"},{"Id":"7187206957","Type":"PullRequestEvent","CreatedAt":"2018-02-02T03:36:35","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7322","RelatedDescription":"Closed pull request \"TextOutputFormatter reads AcceptCharset header not using TypedHeaders\" (#7322) at aspnet/Mvc","RelatedBody":"This PR addresses: https://github.com/aspnet/Mvc/pull/7322.\r\nThis approach avoid instantiation of the RequestHeaders type.\r\n\r\n@rynowak, please let me know whether this is the type of fix you were looking for."},{"Id":"7186546369","Type":"IssuesEvent","CreatedAt":"2018-02-01T23:46:23","Actor":"danroth27","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7324","RelatedDescription":"Opened issue \"Analyzer that checks for correct usage of model binding related attributes\" (#7324) at aspnet/Mvc","RelatedBody":"Recommend `BindAttribute` over `ModelBinderAttribute`. See https://github.com/aspnet/Mvc/issues/6944."},{"Id":"7186481053","Type":"PullRequestEvent","CreatedAt":"2018-02-01T23:26:41","Actor":"natemcmaster","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7174","RelatedDescription":"Closed pull request \"pack .pdb files into regular .nupkg\" (#7174) at aspnet/Mvc","RelatedBody":"https://github.com/aspnet/Universe/issues/131 is `Source Index and pack .pdb files into regular .nupkg`. The first part was resolved in September by https://github.com/aspnet/Universe/issues/553 `Enable source link for all 'src' projects that produce DLLs`. This pull request adds the .pdb files by using the `AllowedOutputExtensionsInPackageBuildOutputFolder` property that became available with the dotnet sdk 2.0.2 in November."}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7185412116","Type":"IssuesEvent","CreatedAt":"2018-02-01T19:27:19","Actor":"robfarmergt","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1612","RelatedDescription":"Opened issue \"Cookie expiration always set to Session\" (#1612) at aspnet/Identity","RelatedBody":""},{"Id":"7185393566","Type":"IssuesEvent","CreatedAt":"2018-02-01T19:23:33","Actor":"robfarmergt","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1597","RelatedDescription":"Closed issue \"SignInManager.IsSignedIn(User) returns false after signing in\" (#1597) at aspnet/Identity","RelatedBody":"I'm having an issue where after creating a user and signing in the `SignInManager.IsSignedIn(User)` method returns false.\r\n\r\nI'm using the new 2.0.0 preview of the SPA Angular CLI template and I've added all the identity config based on what I've read in the docs and using some of the other Visual Studio templates as a guide. \r\n\r\nBelow is my `Startup` class.\r\n\r\n```\r\npublic class Startup\r\n{\r\n    public Startup(IConfiguration configuration, IHostingEnvironment hostingEnvironment)\r\n    {\r\n        Configuration = configuration;\r\n        HostingEnvironment = hostingEnvironment;\r\n\r\n        //configration\r\n        MyAppConfig.ConnectionString = Configuration.GetConnectionString(\"DefaultConnection\");\r\n        MyAppConfig.Secure = Configuration.GetValue<bool>(\"App:Secure\", true);\r\n    }\r\n\r\n    public IConfiguration Configuration { get; }\r\n    private IHostingEnvironment HostingEnvironment { get; set; }\r\n    public IContainer ApplicationContainer { get; private set; }\r\n\r\n    private const string EmailConfirmationTokenProviderName = \"ConfirmEmail\";\r\n\r\n    // This method gets called by the runtime. Use this method to add services to the container.\r\n    public IServiceProvider ConfigureServices(IServiceCollection services)\r\n    {\r\n        services.AddMvc();\r\n\r\n        // In production, the Angular files will be served from this directory\r\n        services.AddSpaStaticFiles(configuration =>\r\n        {\r\n            configuration.RootPath = \"ClientApp/dist\";\r\n        });\r\n\r\n\r\n        IDataProtectionBuilder dataProtectionBuilder = services.AddDataProtection()\r\n            .SetApplicationName(\"MyApp\");\r\n\r\n        //data protection\r\n        if (HostingEnvironment.IsDevelopment())\r\n        {\r\n            //for development, do default (intentionally left blank for now)\r\n        }\r\n        else\r\n        {\r\n            //for deployments, protect certificate and persist to azure storage\r\n            //this will allow swapping of web app slots \r\n            dataProtectionBuilder\r\n                .ProtectKeysWithCertificate(\"\")\r\n                .PersistKeysToAzureBlobStorage(new Uri(\"\"));\r\n        }\r\n\r\n\r\n        //ssl\r\n        if (!HostingEnvironment.IsDevelopment())\r\n        {\r\n            services.Configure<MvcOptions>(options =>\r\n            {\r\n                options.Filters.Add(new RequireHttpsAttribute());\r\n            });\r\n        }\r\n\r\n        var policy = new AuthorizationPolicyBuilder()\r\n                    .RequireAuthenticatedUser()\r\n                    .Build();\r\n\r\n        //anti-forgery, add to all controllers\r\n        services.AddMvc(options => {\r\n            options.Filters.Add(new ValidateAntiForgeryTokenAttribute());\r\n            options.Filters.Add(new AuthorizeFilter(policy));\r\n        });\r\n\r\n        services.AddAntiforgery(options => options.HeaderName = \"X-XSRF-TOKEN\");\r\n\r\n        services.AddDbContext<AppDbContext>(options =>\r\n            options.UseSqlServer(MyAppConfig.ConnectionString));\r\n\r\n        //identity\r\n        services.AddIdentity<ApplicationUser, IdentityRole>()\r\n            .AddEntityFrameworkStores<AppDbContext>()\r\n            .AddDefaultTokenProviders()\r\n            .AddTokenProvider<ConfirmEmailDataProtectorTokenProvider<ApplicationUser>>(EmailConfirmationTokenProviderName); ;\r\n\r\n        services.Configure<IdentityOptions>(options =>\r\n        {\r\n            // Password settings\r\n            options.Password.RequireDigit = true;\r\n            options.Password.RequiredLength = 8;\r\n            options.Password.RequireNonAlphanumeric = true;\r\n            options.Password.RequireUppercase = true;\r\n            options.Password.RequireLowercase = false;\r\n            options.Password.RequiredUniqueChars = 4;\r\n\r\n            // Lockout settings\r\n            options.Lockout.DefaultLockoutTimeSpan = TimeSpan.FromMinutes(30);\r\n            options.Lockout.MaxFailedAccessAttempts = 5;\r\n            options.Lockout.AllowedForNewUsers = true;\r\n\r\n            // User settings\r\n            options.User.RequireUniqueEmail = true;\r\n\r\n            // SignIn settings\r\n            options.SignIn.RequireConfirmedEmail = true;\r\n            options.SignIn.RequireConfirmedPhoneNumber = false;\r\n\r\n            options.Tokens.EmailConfirmationTokenProvider = EmailConfirmationTokenProviderName;\r\n        });\r\n\r\n        services.ConfigureApplicationCookie(options =>\r\n        {\r\n            // Cookie settings\r\n            options.Cookie.HttpOnly = true;\r\n            options.Cookie.Expiration = TimeSpan.FromHours(1);\r\n            options.SlidingExpiration = true;\r\n        });\r\n\r\n        services.Configure<ConfirmEmailDataProtectionTokenProviderOptions>(options =>\r\n        {\r\n            options.TokenLifespan = TimeSpan.FromDays(180);\r\n        });\r\n\r\n\r\n        //autofac\r\n        var builder = new ContainerBuilder();\r\n\r\n        builder.Populate(services);\r\n        builder.RegisterType<AccountService>().As<IAccountService>();\r\n        builder.RegisterType<EmailService>().As<IEmailService>();\r\n\r\n        this.ApplicationContainer = builder.Build();\r\n\r\n        // Create the IServiceProvider based on the container.\r\n        return new AutofacServiceProvider(this.ApplicationContainer);\r\n\r\n    }\r\n\r\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\n    public void Configure(IApplicationBuilder app, IHostingEnvironment env, IAntiforgery antiforgery)\r\n    {\r\n        if (env.IsDevelopment())\r\n        {\r\n            app.UseDeveloperExceptionPage();\r\n        }\r\n        else\r\n        {\r\n            app.UseExceptionHandler(\"/Home/Error\");\r\n        }\r\n\r\n        app.UseStaticFiles();\r\n        app.UseSpaStaticFiles();\r\n\r\n        app.UseMvc(routes =>\r\n        {\r\n            routes.MapRoute(\r\n                name: \"default\",\r\n                template: \"{controller}/{action=Index}/{id?}\");\r\n        });\r\n            \r\n        //send anti-forgery cookie with initial SPA page\r\n        //must be before UseSpa() call\r\n        app.Use(next => context =>\r\n        {\r\n            if (\r\n                string.Equals(context.Request.Path.Value, \"/\", StringComparison.OrdinalIgnoreCase) ||\r\n                string.Equals(context.Request.Path.Value, \"/index.html\", StringComparison.OrdinalIgnoreCase))\r\n            {\r\n                // We can send the request token as a JavaScript-readable cookie, and Angular will use it by default.\r\n                var tokens = antiforgery.GetAndStoreTokens(context);\r\n                context.Response.Cookies.Append(\"XSRF-TOKEN\", tokens.RequestToken,\r\n                    new CookieOptions() { HttpOnly = false });\r\n            }\r\n\r\n            return next(context);\r\n        });\r\n\r\n        app.UseSpa(spa =>\r\n        {\r\n            // To learn more about options for serving an Angular SPA from ASP.NET Core,\r\n            // see https://go.microsoft.com/fwlink/?linkid=864501\r\n\r\n            spa.Options.SourcePath = \"ClientApp\";\r\n\r\n            if (env.IsDevelopment())\r\n            {\r\n                spa.UseAngularCliServer(npmScript: \"start\");\r\n                //spa.UseProxyToSpaDevelopmentServer(\"http://localhost:4200\");\r\n            }\r\n        });\r\n\r\n        //auth & identity\r\n        app.UseAuthentication();\r\n    }\r\n\r\n}\r\n```\r\nHere are the steps I follow to test if the user gets signed in:\r\n\r\n1. Create the user\r\n2. Validate email (then let the request finish)\r\n3. Call SignInManager.PasswordSignInAsync() in a new HTTP request which returns Success\r\n4. Let the request return\r\n5. Verify the `.AspNetCore.Identity.Application` cookie is present\r\n6. Initiate another HTTP request that calls SignInManager.IsSignedIn(User) and it returns false.\r\n\r\nI'm not sure what the issue might be as I've read through the documentation at https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity?tabs=visual-studio%2Caspnetcore2x"},{"Id":"7180181569","Type":"IssuesEvent","CreatedAt":"2018-01-31T22:15:48","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1611","RelatedDescription":"Opened issue \"2fa: Forget this browser button is broken\" (#1611) at aspnet/Identity","RelatedBody":"@javiercn this was probably introduced with your extensibility changes due to the base model not having OnPost defined so clicking the button doesn't run the server side handler to clear the remember me cookie.\r\n\r\nhttps://github.com/aspnet/Identity/blob/dev/src/UI/Areas/Identity/Pages/Account/Manage/TwoFactorAuthentication.cshtml.cs#L27\r\n\r\nI thought it was a bug in the new totp/security stamp code i was working on...but it turned out the button was a placebo...click on it all you want, it never clears your remember browser since it doesn't hit the method :)\r\n\r\nThis probably is in the preview 1 templates as well."},{"Id":"7180108236","Type":"PullRequestEvent","CreatedAt":"2018-01-31T22:00:04","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1610","RelatedDescription":"Merged pull request \"Remove Razor.Design reference\" (#1610) at aspnet/Identity","RelatedBody":""},{"Id":"7179525096","Type":"PullRequestEvent","CreatedAt":"2018-01-31T19:58:51","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1610","RelatedDescription":"Opened pull request \"Remove Razor.Design reference\" (#1610) at aspnet/Identity","RelatedBody":""},{"Id":"7179523779","Type":"PullRequestEvent","CreatedAt":"2018-01-31T19:58:36","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1609","RelatedDescription":"Merged pull request \"Remove Razor.Design reference\" (#1609) at aspnet/Identity","RelatedBody":""},{"Id":"7179520107","Type":"PullRequestEvent","CreatedAt":"2018-01-31T19:57:52","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1609","RelatedDescription":"Opened pull request \"Remove Razor.Design reference\" (#1609) at aspnet/Identity","RelatedBody":""},{"Id":"7179515665","Type":"PullRequestEvent","CreatedAt":"2018-01-31T19:57:03","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1608","RelatedDescription":"Closed pull request \"Remove Razor.Design reference\" (#1608) at aspnet/Identity","RelatedBody":""},{"Id":"7178912454","Type":"PullRequestEvent","CreatedAt":"2018-01-31T17:55:06","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1608","RelatedDescription":"Opened pull request \"Remove Razor.Design reference\" (#1608) at aspnet/Identity","RelatedBody":""},{"Id":"7176815401","Type":"IssuesEvent","CreatedAt":"2018-01-31T11:20:20","Actor":"brechtb86","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1607","RelatedDescription":"Closed issue \"No DbContext named 'xxx' was found\" (#1607) at aspnet/Identity","RelatedBody":"I have multiple contexts and one of them works, but the other three cannot be found. \r\n\r\nI'm using `PM> Add-Migration InitialCreateLdapIdentity -context LdapIdentityDbContext<LdapUser, LdapUserRole> -verbose`\r\n\r\nThis is what it outputs:\r\n\r\n```\r\nFinding DbContext classes...\r\nFinding IDesignTimeDbContextFactory implementations...\r\nFinding application service provider...\r\nFinding BuildWebHost method...\r\nUsing environment 'Development'.\r\nUsing application service provider from BuildWebHost method on 'Program'.\r\nMicrosoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[0]\r\nUser profile is available. Using 'C:\\Users\\brech\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.\r\nFound DbContext 'ApplicationIdentityDbContext<ApplicationUser, ApplicationUserRole>'.\r\nFound DbContext 'LdapIdentityDbContext<LdapUser, LdapUserRole>'.\r\nFound DbContext 'BlogIdentityDbContext<BlogUser, BlogUserRole>'.\r\nFound DbContext 'CountriesDbContext'.\r\nFinding DbContext classes in the project...\r\nMicrosoft.EntityFrameworkCore.Design.OperationException: No DbContext named 'LdapIdentityDbContext<LdapUser, LdapUserRole>' was found.\r\n```\r\n\r\nThe funny thing is when I run `Add-Migration InitialCreateCountries -context CountriesDbContext` then this works.\r\n\r\nI also tried without the generic parameters `Add-Migration InitialCreateLdapIdentity -context LdapIdentityDbContext` but to no avail.\r\n\r\nMy `Startup.cs` contains this:\r\n\r\n\r\n```\r\nservices\r\n            .AddDbContext<ApplicationIdentityDbContext<ApplicationUser, ApplicationUserRole>>(\r\n                    options =>\r\n                    {\r\n                        options.UseSqlServer(Configuration.GetConnectionString(\"Identity\"));\r\n                    })\r\n            .AddDbContext<LdapIdentityDbContext<LdapUser, LdapUserRole>>(\r\n                    options =>\r\n                    {\r\n                        options.UseSqlServer(Configuration.GetConnectionString(\"LdapIdentity\"));\r\n                    })\r\n            .AddDbContext<BlogIdentityDbContext<BlogUser, BlogUserRole>>(\r\n                    options =>\r\n                    {\r\n                        options.UseSqlServer(Configuration.GetConnectionString(\"BlogIdentity\"));\r\n                    })\r\n            .AddDbContext<CountriesDbContext>(\r\n                    options =>\r\n                    {\r\n                        options.UseSqlServer(Configuration.GetConnectionString(\"Countries\"));\r\n                    });\r\n    \r\nservices\r\n            .AddApplicationIdentity<ApplicationUser, ApplicationUserRole>()\r\n            .AddEntityFrameworkStores<ApplicationIdentityDbContext<ApplicationUser, ApplicationUserRole>>()\r\n            .AddClaimsPrincipalFactory<UserClaimsPrincipalFactory<ApplicationUser>>()\r\n            .AddRoleStore<ApplicationRoleStore<ApplicationUser, ApplicationUserRole>>()\r\n            .AddUserStore<ApplicationUserStore<ApplicationUser, ApplicationUserRole>>()\r\n            .AddSignInManager<ApplicationSignInManager<ApplicationUser, ApplicationUserRole>>()\r\n            .AddUserManager<ApplicationUserManager<ApplicationUser, ApplicationUserRole>>()\r\n            .AddDefaultTokenProviders();\r\n\r\nservices\r\n            .AddLdapIdentity<LdapUser, LdapUserRole>()\r\n            .AddEntityFrameworkStores<LdapIdentityDbContext<LdapUser, LdapUserRole>>()\r\n            .AddClaimsPrincipalFactory<UserClaimsPrincipalFactory<LdapUser>>()\r\n            .AddUserStore<LdapUserStore<LdapUser, LdapUserRole>>()\r\n            .AddSignInManager<LdapSignInManager<LdapUser, LdapUserRole>>()\r\n            .AddUserManager<LdapUserManager<LdapUser, LdapUserRole>>()\r\n            .AddDefaultTokenProviders();\r\n\r\nservices\r\n            .AddBlogIdentity<BlogUser, BlogUserRole>()\r\n            .AddEntityFrameworkStores<BlogIdentityDbContext<BlogUser, BlogUserRole>>()\r\n            .AddClaimsPrincipalFactory<UserClaimsPrincipalFactory<BlogUser>>()\r\n            .AddUserStore<BlogUserStore<BlogUser, BlogUserRole>>()\r\n            .AddUserManager<BlogUserManager<BlogUser, BlogUserRole>>()\r\n            .AddDefaultTokenProviders();\r\n```\r\nI'm all out of ideas, especially because in the verbose log it says explicitly that it found the contexts.\r\n\r\nAnyone has any ideas?\r\n\r\n*edit*\r\n\r\nThe methods `AddApplicationIdentity<…>`, `AddLdapIdentity<…>` and `AddBlogIdentity<…>` are extension methods on `ServiceCollection` and I have peeked at the asp.net core implementation [https://github.com/aspnet/Identity/blob/dev/src/Identity/IdentityServiceCollectionExtensions.cs](https://github.com/aspnet/Identity/blob/dev/src/Identity/IdentityServiceCollectionExtensions.cs)\r\n\r\nSo my implementation looks like this:\r\n\r\n```\r\npublic static IdentityBuilder AddApplicationIdentity<TUser, TUserRole>(\r\n            this IServiceCollection services, Action<IdentityOptions> setupAction = null)\r\n            where TUser : ApplicationUser, new()\r\n            where TUserRole : ApplicationUserRole\r\n        {\r\n            services.TryAddScoped<IUserValidator<TUser>, UserValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordValidator<TUser>, PasswordValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordHasher<TUser>, PasswordHasher<TUser>>();\r\n            services.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n            services.TryAddScoped<IRoleValidator<TUserRole>, RoleValidator<TUserRole>>();\r\n            services.TryAddScoped<IdentityErrorDescriber>();\r\n            services.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<TUser>>();\r\n            services.TryAddScoped<IUserClaimsPrincipalFactory<TUser>, UserClaimsPrincipalFactory<TUser, TUserRole>>();\r\n            services.TryAddScoped<ApplicationUserStore<TUser, TUserRole>, ApplicationUserStore<TUser, TUserRole>>();\r\n            services.TryAddScoped<ApplicationIdentityDbContext<Identity.Models.ApplicationUser, ApplicationUserRole>, ApplicationIdentityDbContext<Identity.Models.ApplicationUser, ApplicationUserRole>>();\r\n            services.TryAddScoped<ApplicationUserManager<TUser, TUserRole>, ApplicationUserManager<TUser, TUserRole>>();\r\n            services.TryAddScoped<ApplicationSignInManager<TUser, TUserRole>, ApplicationSignInManager<TUser, TUserRole>>();\r\n            services.TryAddScoped<RoleManager<TUserRole>, AspNetRoleManager<TUserRole>>();\r\n\r\n            if (setupAction != null)\r\n            {\r\n                services.Configure(setupAction);\r\n            }\r\n\r\n            return new IdentityBuilder(typeof(TUser), typeof(TUserRole), services);\r\n        }\r\n\r\npublic static IdentityBuilder AddLdapIdentity<TUser, TUserRole>(\r\n            this IServiceCollection services, Action<IdentityOptions> setupAction = null)\r\n            where TUser : LdapUser, new()\r\n            where TUserRole : LdapUserRole\r\n        {\r\n            services.TryAddScoped<IUserValidator<TUser>, UserValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordValidator<TUser>, PasswordValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordHasher<TUser>, PasswordHasher<TUser>>();\r\n            services.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n            services.TryAddScoped<IRoleValidator<TUserRole>, RoleValidator<TUserRole>>();\r\n            services.TryAddScoped<IdentityErrorDescriber>();\r\n            services.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<TUser>>();\r\n            services.TryAddScoped<IUserClaimsPrincipalFactory<TUser>, UserClaimsPrincipalFactory<TUser, TUserRole>>();\r\n            services.TryAddScoped<LdapUserStore<TUser, TUserRole>, LdapUserStore<TUser, TUserRole>>();\r\n            services.TryAddScoped<LdapIdentityDbContext<TUser, TUserRole>, LdapIdentityDbContext<TUser, TUserRole>>();\r\n            services.TryAddScoped<LdapUserManager<TUser, TUserRole>, LdapUserManager<TUser, TUserRole>>();\r\n            services.TryAddScoped<LdapSignInManager<TUser, TUserRole>, LdapSignInManager<TUser, TUserRole>>();\r\n            services.TryAddScoped<RoleManager<TUserRole>, AspNetRoleManager<TUserRole>>();\r\n\r\n            if (setupAction != null)\r\n            {\r\n                services.Configure(setupAction);\r\n            }\r\n\r\n            return new IdentityBuilder(typeof(TUser), typeof(TUserRole), services);\r\n        }\r\n\r\npublic static IdentityBuilder AddBlogIdentity<TUser, TUserRole>(\r\n            this IServiceCollection services, Action<IdentityOptions> setupAction = null)\r\n            where TUser : BlogUser, new()\r\n            where TUserRole : BlogUserRole\r\n        {\r\n            services.TryAddScoped<IUserValidator<TUser>, UserValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordValidator<TUser>, PasswordValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordHasher<TUser>, PasswordHasher<TUser>>();\r\n            services.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n            services.TryAddScoped<IRoleValidator<TUserRole>, RoleValidator<TUserRole>>();\r\n            services.TryAddScoped<IdentityErrorDescriber>();\r\n            services.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<TUser>>();\r\n            services.TryAddScoped<IUserClaimsPrincipalFactory<TUser>, UserClaimsPrincipalFactory<TUser, TUserRole>>();\r\n            services.TryAddScoped<BlogUserStore<TUser, TUserRole>, BlogUserStore<TUser, TUserRole>>();\r\n            services.TryAddScoped<BlogIdentityDbContext<BlogUser, BlogUserRole>, BlogIdentityDbContext<BlogUser, BlogUserRole>>();\r\n            services.TryAddScoped<BlogUserManager<TUser, TUserRole>, BlogUserManager<TUser, TUserRole>>();\r\n            services.TryAddScoped<RoleManager<TUserRole>, AspNetRoleManager<TUserRole>>();\r\n\r\n            if (setupAction != null)\r\n            {\r\n                services.Configure(setupAction);\r\n            }\r\n\r\n            return new IdentityBuilder(typeof(TUser), typeof(TUserRole), services);\r\n        }\r\n    }\r\n```\r\n\r\nThe implementation of `LdapIdentityDbContext` is this:\r\n\r\n```\r\npublic class LdapIdentityDbContext<TUser, TRole> : IdentityDbContext<TUser, TUserRole, Guid>\r\n        where TUser : LdapUser\r\n        where TRole : LdapUserRole\r\n    {\r\n        public LdapIdentityDbContext(DbContextOptions<LdapIdentityDbContext<TUser, TRole>> options)\r\n            : base(options)\r\n        {\r\n        }\r\n    }\r\n```\r\nI also made a post on StackOverflow:\r\n\r\n[https://stackoverflow.com/questions/48527307/ef-core-no-dbcontext-named-xxx-was-found](https://stackoverflow.com/questions/48527307/ef-core-no-dbcontext-named-xxx-was-found)\r\n"},{"Id":"7176390077","Type":"IssuesEvent","CreatedAt":"2018-01-31T09:53:08","Actor":"brechtb86","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1607","RelatedDescription":"Opened issue \"No DbContext named 'xxx' was found\" (#1607) at aspnet/Identity","RelatedBody":"I have multiple contexts and one of them works, but the other three cannot be found. \r\n\r\nI'm using `PM> Add-Migration InitialCreateLdapIdentity -context LdapIdentityDbContext<LdapUser, LdapUserRole> -verbose`\r\n\r\nThis is what it outputs:\r\n\r\n```\r\nFinding DbContext classes...\r\nFinding IDesignTimeDbContextFactory implementations...\r\nFinding application service provider...\r\nFinding BuildWebHost method...\r\nUsing environment 'Development'.\r\nUsing application service provider from BuildWebHost method on 'Program'.\r\nMicrosoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[0]\r\nUser profile is available. Using 'C:\\Users\\brech\\AppData\\Local\\ASP.NET\\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.\r\nFound DbContext 'ApplicationIdentityDbContext<ApplicationUser, ApplicationUserRole>'.\r\nFound DbContext 'LdapIdentityDbContext<LdapUser, LdapUserRole>'.\r\nFound DbContext 'BlogIdentityDbContext<BlogUser, BlogUserRole>'.\r\nFound DbContext 'CountriesDbContext'.\r\nFinding DbContext classes in the project...\r\nMicrosoft.EntityFrameworkCore.Design.OperationException: No DbContext named 'LdapIdentityDbContext<LdapUser, LdapUserRole>' was found.\r\n```\r\n\r\nThe funny thing is when I run `Add-Migration InitialCreateCountries -context CountriesDbContext` then this works.\r\n\r\nI also tried without the generic parameters `Add-Migration InitialCreateLdapIdentity -context LdapIdentityDbContext` but to no avail.\r\n\r\nMy `Startup.cs` contains this:\r\n\r\n\r\n```\r\nservices\r\n            .AddDbContext<ApplicationIdentityDbContext<ApplicationUser, ApplicationUserRole>>(\r\n                    options =>\r\n                    {\r\n                        options.UseSqlServer(Configuration.GetConnectionString(\"Identity\"));\r\n                    })\r\n            .AddDbContext<LdapIdentityDbContext<LdapUser, LdapUserRole>>(\r\n                    options =>\r\n                    {\r\n                        options.UseSqlServer(Configuration.GetConnectionString(\"LdapIdentity\"));\r\n                    })\r\n            .AddDbContext<BlogIdentityDbContext<BlogUser, BlogUserRole>>(\r\n                    options =>\r\n                    {\r\n                        options.UseSqlServer(Configuration.GetConnectionString(\"BlogIdentity\"));\r\n                    })\r\n            .AddDbContext<CountriesDbContext>(\r\n                    options =>\r\n                    {\r\n                        options.UseSqlServer(Configuration.GetConnectionString(\"Countries\"));\r\n                    });\r\n    \r\nservices\r\n            .AddApplicationIdentity<ApplicationUser, ApplicationUserRole>()\r\n            .AddEntityFrameworkStores<ApplicationIdentityDbContext<ApplicationUser, ApplicationUserRole>>()\r\n            .AddClaimsPrincipalFactory<UserClaimsPrincipalFactory<ApplicationUser>>()\r\n            .AddRoleStore<ApplicationRoleStore<ApplicationUser, ApplicationUserRole>>()\r\n            .AddUserStore<ApplicationUserStore<ApplicationUser, ApplicationUserRole>>()\r\n            .AddSignInManager<ApplicationSignInManager<ApplicationUser, ApplicationUserRole>>()\r\n            .AddUserManager<ApplicationUserManager<ApplicationUser, ApplicationUserRole>>()\r\n            .AddDefaultTokenProviders();\r\n\r\nservices\r\n            .AddLdapIdentity<LdapUser, LdapUserRole>()\r\n            .AddEntityFrameworkStores<LdapIdentityDbContext<LdapUser, LdapUserRole>>()\r\n            .AddClaimsPrincipalFactory<UserClaimsPrincipalFactory<LdapUser>>()\r\n            .AddUserStore<LdapUser>()\r\n            .AddSignInManager<LdapSignInManager<LdapUser, LdapUserRole>>()\r\n            .AddUserManager<LdapUserManager<LdapUser, LdapUserRole>>()\r\n            .AddDefaultTokenProviders();\r\n\r\nservices\r\n            .AddBlogIdentity<BlogUser, BlogUserRole>()\r\n            .AddEntityFrameworkStores<BlogIdentityDbContext<BlogUser, BlogUserRole>>()\r\n            .AddClaimsPrincipalFactory<UserClaimsPrincipalFactory<BlogUser>>()\r\n            .AddUserStore<BlogUser>()\r\n            .AddUserManager<BlogUserManager<BlogUser, BlogUserRole>>()\r\n            .AddDefaultTokenProviders();\r\n```\r\nI'm all out of ideas, especially because in the verbose log it says explicitly that it found the contexts.\r\n\r\nAnyone has any ideas?\r\n\r\n*edit*\r\n\r\nThe methods `AddApplicationIdentity<…>`, `AddLdapIdentity<…>` and `AddBlogIdentity<…>` are extension methods on `ServiceCollection` and I have peeked at the asp.net core implementation [https://github.com/aspnet/Identity/blob/dev/src/Identity/IdentityServiceCollectionExtensions.cs](https://github.com/aspnet/Identity/blob/dev/src/Identity/IdentityServiceCollectionExtensions.cs)\r\n\r\nSo my implementation looks like this:\r\n\r\n```\r\npublic static IdentityBuilder AddApplicationIdentity<TUser, TUserRole>(\r\n            this IServiceCollection services, Action<IdentityOptions> setupAction = null)\r\n            where TUser : ApplicationUser, new()\r\n            where TUserRole : ApplicationUserRole\r\n        {\r\n            services.TryAddScoped<IUserValidator<TUser>, UserValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordValidator<TUser>, PasswordValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordHasher<TUser>, PasswordHasher<TUser>>();\r\n            services.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n            services.TryAddScoped<IRoleValidator<TUserRole>, RoleValidator<TUserRole>>();\r\n            services.TryAddScoped<IdentityErrorDescriber>();\r\n            services.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<TUser>>();\r\n            services.TryAddScoped<IUserClaimsPrincipalFactory<TUser>, UserClaimsPrincipalFactory<TUser, TUserRole>>();\r\n            services.TryAddScoped<ApplicationUserStore<TUser, TUserRole>, ApplicationUserStore<TUser, TUserRole>>();\r\n            services.TryAddScoped<ApplicationIdentityDbContext<Identity.Models.ApplicationUser, ApplicationUserRole>, ApplicationIdentityDbContext<Identity.Models.ApplicationUser, ApplicationUserRole>>();\r\n            services.TryAddScoped<ApplicationUserManager<TUser, TUserRole>, ApplicationUserManager<TUser, TUserRole>>();\r\n            services.TryAddScoped<ApplicationSignInManager<TUser, TUserRole>, ApplicationSignInManager<TUser, TUserRole>>();\r\n            services.TryAddScoped<RoleManager<TUserRole>, AspNetRoleManager<TUserRole>>();\r\n\r\n            if (setupAction != null)\r\n            {\r\n                services.Configure(setupAction);\r\n            }\r\n\r\n            return new IdentityBuilder(typeof(TUser), typeof(TUserRole), services);\r\n        }\r\n\r\npublic static IdentityBuilder AddLdapIdentity<TUser, TUserRole>(\r\n            this IServiceCollection services, Action<IdentityOptions> setupAction = null)\r\n            where TUser : LdapUser, new()\r\n            where TUserRole : LdapUserRole\r\n        {\r\n            services.TryAddScoped<IUserValidator<TUser>, UserValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordValidator<TUser>, PasswordValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordHasher<TUser>, PasswordHasher<TUser>>();\r\n            services.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n            services.TryAddScoped<IRoleValidator<TUserRole>, RoleValidator<TUserRole>>();\r\n            services.TryAddScoped<IdentityErrorDescriber>();\r\n            services.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<TUser>>();\r\n            services.TryAddScoped<IUserClaimsPrincipalFactory<TUser>, UserClaimsPrincipalFactory<TUser, TUserRole>>();\r\n            services.TryAddScoped<LdapUserStore<TUser, TUserRole>, LdapUserStore<TUser, TUserRole>>();\r\n            services.TryAddScoped<LdapIdentityDbContext<TUser, TUserRole>, LdapIdentityDbContext<TUser, TUserRole>>();\r\n            services.TryAddScoped<LdapUserManager<TUser, TUserRole>, LdapUserManager<TUser, TUserRole>>();\r\n            services.TryAddScoped<LdapSignInManager<TUser, TUserRole>, LdapSignInManager<TUser, TUserRole>>();\r\n            services.TryAddScoped<RoleManager<TUserRole>, AspNetRoleManager<TUserRole>>();\r\n\r\n            if (setupAction != null)\r\n            {\r\n                services.Configure(setupAction);\r\n            }\r\n\r\n            return new IdentityBuilder(typeof(TUser), typeof(TUserRole), services);\r\n        }\r\n\r\npublic static IdentityBuilder AddBlogIdentity<TUser, TUserRole>(\r\n            this IServiceCollection services, Action<IdentityOptions> setupAction = null)\r\n            where TUser : BlogUser, new()\r\n            where TUserRole : BlogUserRole\r\n        {\r\n            services.TryAddScoped<IUserValidator<TUser>, UserValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordValidator<TUser>, PasswordValidator<TUser>>();\r\n            services.TryAddScoped<IPasswordHasher<TUser>, PasswordHasher<TUser>>();\r\n            services.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n            services.TryAddScoped<IRoleValidator<TUserRole>, RoleValidator<TUserRole>>();\r\n            services.TryAddScoped<IdentityErrorDescriber>();\r\n            services.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<TUser>>();\r\n            services.TryAddScoped<IUserClaimsPrincipalFactory<TUser>, UserClaimsPrincipalFactory<TUser, TUserRole>>();\r\n            services.TryAddScoped<BlogUserStore<TUser, TUserRole>, BlogUserStore<TUser, TUserRole>>();\r\n            services.TryAddScoped<BlogIdentityDbContext<BlogUser, BlogUserRole>, BlogIdentityDbContext<BlogUser, BlogUserRole>>();\r\n            services.TryAddScoped<BlogUserManager<TUser, TUserRole>, BlogUserManager<TUser, TUserRole>>();\r\n            services.TryAddScoped<RoleManager<TUserRole>, AspNetRoleManager<TUserRole>>();\r\n\r\n            if (setupAction != null)\r\n            {\r\n                services.Configure(setupAction);\r\n            }\r\n\r\n            return new IdentityBuilder(typeof(TUser), typeof(TUserRole), services);\r\n        }\r\n    }\r\n```\r\n\r\nThe implementation of `LdapIdentityDbContext` is this:\r\n\r\n```\r\npublic class LdapIdentityDbContext<TUser, TRole> : IdentityDbContext<TUser, TUserRole, Guid>\r\n        where TUser : LdapUser\r\n        where TRole : LdapUserRole\r\n    {\r\n        public LdapIdentityDbContext(DbContextOptions<LdapIdentityDbContext<TUser, TRole>> options)\r\n            : base(options)\r\n        {\r\n        }\r\n    }\r\n```\r\nI also made a post on StackOverflow:\r\n\r\n[https://stackoverflow.com/questions/48527307/ef-core-no-dbcontext-named-xxx-was-found](https://stackoverflow.com/questions/48527307/ef-core-no-dbcontext-named-xxx-was-found)\r\n"},{"Id":"7173588244","Type":"PullRequestEvent","CreatedAt":"2018-01-30T20:27:34","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1606","RelatedDescription":"Merged pull request \"Make Razor.Sdk a build time dependency\" (#1606) at aspnet/Identity","RelatedBody":""},{"Id":"7173053992","Type":"PullRequestEvent","CreatedAt":"2018-01-30T18:40:40","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1606","RelatedDescription":"Opened pull request \"Make Razor.Sdk a build time dependency\" (#1606) at aspnet/Identity","RelatedBody":""},{"Id":"7173017840","Type":"PullRequestEvent","CreatedAt":"2018-01-30T18:33:24","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1605","RelatedDescription":"Closed pull request \"Make Razor.Design a build time dependency\" (#1605) at aspnet/Identity","RelatedBody":""},{"Id":"7173000004","Type":"PullRequestEvent","CreatedAt":"2018-01-30T18:29:50","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1605","RelatedDescription":"Opened pull request \"Make Razor.Design a build time dependency\" (#1605) at aspnet/Identity","RelatedBody":""}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7187427954","Type":"IssuesEvent","CreatedAt":"2018-02-02T05:12:32","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2144","RelatedDescription":"Closed issue \"Fail to start Kestrel server when using a service. but it runs manually\" (#2144) at aspnet/KestrelHttpServer","RelatedBody":"Hi.\r\nCore 2.0\r\nMVC Latest.\r\n\r\nWhen I run in my ubuntu the following server:\r\n```\r\n    [Unit]\r\n    Description=Feeder App\r\n\r\n    [Service]\r\n    WorkingDirectory=/var/www/feeder\r\n    ExecStart=/usr/bin/dotnet /var/www/feeder/FeedService.MVC.dll\r\n    SyslogIdentifier=feeder\r\n    User=avi\r\n    Environment=ASPNETCORE_ENVIRONMENT=Production\r\n\r\n    [Install]\r\n    WantedBy=multi-user.target\r\n```\r\nI get an error: \r\n\r\n```\r\nkestrel-feeder.service - Feeder App\r\n   Loaded: loaded (/etc/systemd/system/kestrel-feeder.service; enabled; vendor preset: enabled)\r\n   Active: failed (Result: core-dump) since Wed 2017-11-01 11:28:09 IST; 88ms ago\r\n  Process: 22649 ExecStart=/usr/bin/dotnet /var/www/feeder/FeedService.MVC.dll (code=dumped, signal=ABRT)\r\n Main PID: 22649 (code=dumped, signal=ABRT)\r\n      CPU: 2.337s\r\n\r\nNov 01 11:28:08 spread feeder[22649]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nNov 01 11:28:08 spread feeder[22649]:    at Microsoft.AspNetCore.Hosting.WebHostExtensions.<RunAsync>d__4.MoveNext()\r\nNov 01 11:28:08 spread feeder[22649]: --- End of stack trace from previous location where exception was thrown ---\r\nNov 01 11:28:08 spread feeder[22649]:    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\nNov 01 11:28:08 spread feeder[22649]:    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\nNov 01 11:28:08 spread feeder[22649]:    at Microsoft.AspNetCore.Hosting.WebHostExtensions.Run(IWebHost host)\r\nNov 01 11:28:08 spread feeder[22649]:    at FeedService.MVC.Program.Main(String[] args) in C:\\Users\\avif\\Desktop\\FeedConnector\\FeedService.MVC\\Program.cs:line 30\r\nNov 01 11:28:09 spread systemd[1]: kestrel-feeder.service: Main process exited, code=dumped, status=6/ABRT\r\nNov 01 11:28:09 spread systemd[1]: kestrel-feeder.service: Unit entered failed state.\r\nNov 01 11:28:09 spread systemd[1]: kestrel-feeder.service: Failed with result 'core-dump'.\r\n```\r\n\r\nBut if I run the command manually, the server is starting fine:\r\n```  sudo /usr/bin/dotnet /var/www/feeder/FeedService.MVC.dll```\r\n\r\nWhat can be wrong? the syslog does not have more information.\r\n\r\n\r\n```\r\n\r\nThanks\r\n"},{"Id":"7187427540","Type":"IssuesEvent","CreatedAt":"2018-02-02T05:12:20","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1984","RelatedDescription":"Closed issue \"How will rate limit take into account something like TLS?\" (#1984) at aspnet/KestrelHttpServer","RelatedBody":"If there is a rate limit of say 1k per 5 seconds, TLS could require 16k before it can pass down the frame to Kestrel. Therefore Kestrel may assume that the client is not sending any data for 16 seconds and kill it but the client maybe sending at the correct rate. On a mobile connection this could be an issue. \r\n\r\nMy question is really, is it possible (or does it already) count data at the socket or does it count data that gets through the \"pipe\" to kestrel?"},{"Id":"7187425160","Type":"IssuesEvent","CreatedAt":"2018-02-02T05:11:16","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1660","RelatedDescription":"Closed issue \"Website is not updated till server restart\" (#1660) at aspnet/KestrelHttpServer","RelatedBody":"I have configured reverse proxy to kestrel with nginx. When I redeploy the new DLLs using a script the site is not getting updated. I can see only the old site. When I try to kill dotnet process also it doesn't work. Even I tried restarting nginx, still no luck. I have to restart the server to see the changes. Why is it happening? \r\n\r\nI want kestrel to detect changes when I update the files and automatically restart itself (or do something to publish the new site). "},{"Id":"7187424374","Type":"IssuesEvent","CreatedAt":"2018-02-02T05:10:54","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2005","RelatedDescription":"Closed issue \"How to set ClientCertificateMode in core 2.0?\" (#2005) at aspnet/KestrelHttpServer","RelatedBody":"What is the equivalent to this in 2.0? \r\n```csharp\r\nwhb.UseKestrel(options =>\r\n                {\r\n                    var httpsOptions = new HttpsConnectionFilterOptions();\r\n                    httpsOptions.ServerCertificate = certificate;\r\n                    httpsOptions.ClientCertificateMode = ClientCertificateMode.AllowCertificate;\r\n                    httpsOptions.SslProtocols = System.Security.Authentication.SslProtocols.Tls;\r\n                    options.UseHttps(httpsOptions);\r\n                })\r\n```\r\n\r\nThe functional tests use a constructor that is marked internal so I can't use it."},{"Id":"7187299061","Type":"IssuesEvent","CreatedAt":"2018-02-02T04:14:44","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2083","RelatedDescription":"Closed issue \"Where to get the kestrel log on ubuntu14.04?\" (#2083) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7187295419","Type":"IssuesEvent","CreatedAt":"2018-02-02T04:13:05","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1887","RelatedDescription":"Closed issue \"Running Two Kestrel Processes Through Proxy -- Killed\" (#1887) at aspnet/KestrelHttpServer","RelatedBody":"Hello:\r\n\r\nI'm running two Kestrel processes on Ubuntu 14.04.  One process is on port 5000 and the other is on 5001.  The processes host the same site; however, one of them is our sandbox.\r\n\r\nThe proxy is administered by Apache.\r\n\r\nThe two sites can coexist as long as there is not a web request in one of the controllers.  However, if a method in the controller DOES have a web request, one of the processes is \"killed.\"  There no error or log message; it's just killed.\r\n\r\nI've attached a sample project that illustrates this abnormal behavior.  While -- at times -- this sample project will work, our main app is ALWAYS failing.  The sample project is a base project.  I've added one line to the /Home/Index view: a string that indicates the site that your viewing.\r\n\r\nThe logic for running on port 5000 or 5001 is found in Program.cs.  A quick enum in conjunction with a public const value allows me to change this port.\r\n\r\nFinally, the logic for calling a web request is found in the Home controller's Index.  Again, if there's a web call, one of the processes will fail (or be killed).\r\n\r\nThanks for your help.\r\n\r\n----- TO REPRODUCE ERROR -----\r\n\r\n1.  Compile the program: dotnet publish -c Release -r ubuntu.14.04-x64\r\n2.  Transfer the publish directory to the Linux box\r\n3.  Run command: dotnet KestrelTest.dll (Notice it will be hosted on 5000)\r\n4.  Go back to VS 2017 and change Startup.FORWARD_FACING_SITE to Site2 and compile: dotnet publish -c Release -r ubuntu.14.04-x64\r\n5.  Transfer the publish directory to the Linux box in a new directory\r\n6.  Run the command: dotnet KestrelTest.dll (Notice it will be hosted on 5001)\r\n7.  Load the website.\r\n\r\n8.  Now here's the kicker.  Toggle between the two web sites, and reload them from the browser.  Hopefully, they'll work.  Now go back to the command terminal and manually kill one of the Kestrel processes.  Then restart the killed Kestrel process.  Finally, go back to the website and reload it.  If it works again, go to the command terminal and kill a Kestrel process and then respawn it and go to the web browser of the killed process and reload.  *** Eventually one of the Kestrel processes will be killed internally, but I'm not sure what's doing it.  There's no pattern or logic behind the failure that I can see.\r\n\r\nIf you're still having problems reproducing this error, let me know, and I can get you our production application that is always failing if two or more Kestrel processes are running.\r\n\r\n\r\nSaul\r\n\r\n[KestrelTest.zip](https://github.com/aspnet/KestrelHttpServer/files/1056032/KestrelTest.zip)\r\n"},{"Id":"7187295049","Type":"IssuesEvent","CreatedAt":"2018-02-02T04:12:54","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1883","RelatedDescription":"Closed issue \"Kestrel raises an exception on disposing \" (#1883) at aspnet/KestrelHttpServer","RelatedBody":"Kestrel 1.1.2 running on .net 4.5.1  raises an exception on disposing  when new incoming requests come during disposing process. \r\nIs there a way to stop Kestrel before disposing or pause incoming requests?\r\n\r\n> Microsoft.AspNetCore.Server.Kestrel.Internal.Networking.UvException: Error -4082 EBUSY resource busy or locked\r\n> in Microsoft.AspNetCore.Server.Kestrel.Internal.Networking.Libuv.loop_close(UvLoopHandle handle) in Microsoft.AspNetCore.Server.Kestrel.Internal.Networking.UvLoopHandle.ReleaseHandle() in System.Runtime.InteropServices.SafeHandle.InternalDispose() in System.Runtime.InteropServices.SafeHandle.Dispose(Boolean disposing)\r\n> in System.Runtime.InteropServices.SafeHandle.Dispose() in Microsoft.AspNetCore.Server.Kestrel.Internal.KestrelThread.ThreadStart(Object parameter)\r\n\r\nThe question was raised at  [https://stackoverflow.com/questions/44324864/unable-to-stop-asp-net-core-windows-service-when-kestrel-receives-requests](https://stackoverflow.com/questions/44324864/unable-to-stop-asp-net-core-windows-service-when-kestrel-receives-requests)\r\n\r\n"},{"Id":"7187294301","Type":"IssuesEvent","CreatedAt":"2018-02-02T04:12:35","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1869","RelatedDescription":"Closed issue \"Kestrel listening port is not working\" (#1869) at aspnet/KestrelHttpServer","RelatedBody":"I try to define 22 profile to launch kestrel:\r\n```\r\n    \"Dev\": {\r\n      \"commandName\": \"Project\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"http://localhost:5000\",\r\n\t\t\t\"environmentVariables\": {\r\n\t\t\t\t\"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n\t\t\t},\r\n      \"applicationUrl\": \"http://localhost:5000\"\r\n    },\r\n\t\"PreProd\": {\r\n\t\t\"commandName\": \"Project\",\r\n\t\t\"launchBrowser\": true,\r\n\t\t\"launchUrl\": \"http://localhost:6000\",\r\n\t\t\t\"environmentVariables\": {\r\n\t\t\t\t\"ASPNETCORE_ENVIRONMENT\": \"PreProd\"\r\n\t\t\t},\r\n\t\t\"applicationUrl\": \"http://localhost:6000\"\r\n\t}\r\n```\r\nUnder VS2017, the ASPNETCORE_URLS variable should be set to applicationUrl and when running, kestrel claims to listen \"http://localhost:6000\" but doesn't, browser can't reach the application.\r\nI've tried to browse port 5000 (default port) it fail too.\r\nWhat's wrong with kestrel?"},{"Id":"7187290693","Type":"IssuesEvent","CreatedAt":"2018-02-02T04:10:56","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1800","RelatedDescription":"Closed issue \"Question on getting Original Request\" (#1800) at aspnet/KestrelHttpServer","RelatedBody":"I'm looking at KestrelHttpServer and wondering if it is possible to get the original request stream (headers + body)\r\nI know I could \"rebuild\" a _similar_ stream by enumerating context.Request.Headers and writing them (+ CRLF) to a MemoryStream, and then writing CRLF and then the context.Request.Body.\r\nBut the headers may be in a different order than what they arrived in and the HttpParser appears to trim whitespace from start/end.\r\n\r\nIs it possible to inject/intercept before the HttpParser gets its hands on the stream ?\r\n"},{"Id":"7187286339","Type":"IssuesEvent","CreatedAt":"2018-02-02T04:09:06","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1654","RelatedDescription":"Closed issue \"Delay config of listen options until server starts\" (#1654) at aspnet/KestrelHttpServer","RelatedBody":"Currently ListenOptions are configured immediately when Listen is called. We should delay this until we have determined to use the ListenOptions or IServerAddressesFeature since we may be throwing away the configured endpoints in https://github.com/aspnet/KestrelHttpServer/blob/99278c469161370b1015c67d18ae9388591a49af/src/Microsoft.AspNetCore.Server.Kestrel.Core/KestrelServer.cs#L119. This could potentially help when configuring HTTPS for Kestrel, see https://github.com/aspnet/KestrelHttpServer/issues/1290. \r\n\r\ncc @glennc @danroth27 @muratg "},{"Id":"7187285708","Type":"IssuesEvent","CreatedAt":"2018-02-02T04:08:49","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1647","RelatedDescription":"Closed issue \"Obtaining HttpContext within ClientCertificateValidation\" (#1647) at aspnet/KestrelHttpServer","RelatedBody":"We have an asp.net core self hosted application within Kestrel. Part of the configuration is using .ClientCertificateValidation functionality of HttpsConnectionFilterOptions. We have the func override and validation happening correctly for client certificates but within our validation function we need to obtain HttpContext so that we can add an asp.net identity role to the connection whose certificate we just validated.\r\n\r\nHow do we obtain HttpContext or perform such functionality within the .ClientCertificateValidation function? Normally we would do dependency injection but given ClientCertificateValidation is specified as part of the .UseKestrel options within our Program.cs Main() it does not seem that dependency injection is available? thank you\r\n\r\nOriginally asked on stackoverflow: http://stackoverflow.com/questions/43227978/how-to-get-httpcontext-from-within-function-performing-clientcertificatevalidati"},{"Id":"7187283991","Type":"IssuesEvent","CreatedAt":"2018-02-02T04:08:05","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1604","RelatedDescription":"Closed issue \"VS 2017 ASPNETCORE_URLS is ignored\" (#1604) at aspnet/KestrelHttpServer","RelatedBody":"I have an issue with starting Kestrel server from VS2017. In VS2015 in `launchSettings.json` I was able to set the port like this:\r\n\r\n    \"Kestrel\": {\r\n      \"launchUrl\": \"http://localhost:5010/api\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_URLS\": \"http://localhost:5010\"\r\n    }\r\n\r\nNow this setting is ignored by kestrel. If I change the name of the setting to: `\"ASPNETCORE_SERVER.URLS\"` I'm getting the warning about the setting being deprecated, which suggests that the `launchSettings.json` file is still being processed.\r\n\r\nI also tried other options of setting the port - setting environment variable (`ASPNETCORE_URLS`) still works, but using `dotnet run --server.urls http://0.0.0.0:5010` doesn't."},{"Id":"7187282552","Type":"IssuesEvent","CreatedAt":"2018-02-02T04:07:29","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1563","RelatedDescription":"Closed issue \"Use nameof where possible\" (#1563) at aspnet/KestrelHttpServer","RelatedBody":"https://github.com/aspnet/KestrelHttpServer/pull/1551#discussion_r108027733\r\n\r\nWait until #1551 is merged."},{"Id":"7187282235","Type":"IssuesEvent","CreatedAt":"2018-02-02T04:07:20","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1433","RelatedDescription":"Closed issue \"KestrelServer At Win7-x64 connection bug\" (#1433) at aspnet/KestrelHttpServer","RelatedBody":"this is my code:\r\n\r\n```C#\r\npublic static void Main(string[] args)\r\n        {\r\n            bool debug = true;\r\n            string url = null;\r\n            if (debug)\r\n            {\r\n                url = \"http://localhost:8083\";\r\n            }\r\n            else\r\n            {\r\n                url = \"http://localhost:80\";\r\n            }\r\n            var host = new WebHostBuilder()\r\n               .UseStartup<Startup>()\r\n               .UseContentRoot(AppContext.BaseDirectory)\r\n               .UseUrls(url)\r\n               .UseKestrel()\r\n               .Build();\r\n            host.Run();\r\n        }\r\npublic void Configure(IApplicationBuilder app)\r\n        {\r\n            app.Run(async (context) =>\r\n            {\r\n                await context.Response.WriteAsync(\"Hello World!\");\r\n            });\r\n        }\r\n```\r\n\r\nWhen I do stress testing on win7-x64,after about 5 seconds,the kerstrel server reject all request.\r\nwin10 is ok."},{"Id":"7187281724","Type":"IssuesEvent","CreatedAt":"2018-02-02T04:07:07","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1395","RelatedDescription":"Closed issue \"Add unit tests for CancelPendingRead fix\" (#1395) at aspnet/KestrelHttpServer","RelatedBody":"#1392"},{"Id":"7187281335","Type":"IssuesEvent","CreatedAt":"2018-02-02T04:06:56","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1344","RelatedDescription":"Closed issue \"SSL Mutual Authentication in .NetCore 1.1 Kestrel\" (#1344) at aspnet/KestrelHttpServer","RelatedBody":"I am trying to implement SSL mutual authentication using Kestrel web server in a MVC project. In order to do so, I created self signed client and server certificate on my local machine. I enabled SSL settings in Program.cs by using the ClientCertificateMode equals RequiredCertificate enum. After this when I browse a endpoint from browser, it prompts for a certificate and when I choose an invalid certificate, I can see HTTPS authentication failed message in the console and in log file but still the request is being processed and the JSON output is rendered back. Below is the piece code for SSL authentication.\r\n\r\n```csharp\r\nvar host = new WebHostBuilder()\r\n                         .UseConfiguration(config)\r\n                         .UseKestrel(options =>\r\n                         {\r\n                            var signingCertificate = new X509Certificate2(\"\\\\ServerCert.pfx\", \"Test123\");\r\n                            HttpsConnectionFilterOptions httpsOptions = new HttpsConnectionFilterOptions();\r\n                            httpsOptions.ServerCertificate = signingCertificate;\r\n                            httpsOptions.ClientCertificateMode = ClientCertificateMode.RequireCertificate;\r\n                            options.UseHttps(httpsOptions);\r\n                          })\r\n                          .UseContentRoot(Directory.GetCurrentDirectory())\r\n                          .UseStartup<Startup>()\r\n                         .Build();\r\nhost.Run();\r\n```\r\nWhat needs to done to prevent the request from getting processed when SSL authentication fails? Since the MVC project will be consumed within our domain network, we are okay to expose Kestrel as the front facing web server."},{"Id":"7187280106","Type":"IssuesEvent","CreatedAt":"2018-02-02T04:06:23","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1286","RelatedDescription":"Closed issue \"String.Equals(..., OrdinalIgnoreCase) is slow\" (#1286) at aspnet/KestrelHttpServer","RelatedBody":"Have been unsuccessful at making it fast so far 😢 \r\n\r\nSee: https://github.com/dotnet/coreclr/pull/8579"},{"Id":"7187279313","Type":"IssuesEvent","CreatedAt":"2018-02-02T04:06:02","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1247","RelatedDescription":"Closed issue \"Consider renaming KestrelServerLimits properties to indicate unit\" (#1247) at aspnet/KestrelHttpServer","RelatedBody":"Per @blowdart's suggestion in https://github.com/aspnet/KestrelHttpServer/pull/1244#discussion_r90983978\r\n\r\nCurrent                                     | New\r\n--------------------------------- | -----\r\nMaxResponseBufferSize           | MaxResponseBufferBytes\r\nMaxRequestBufferSize             | MaxRequestBufferBytes\r\nMaxRequestLineSize                | MaxRequestLineBytes\r\nMaxRequestHeadersTotalSize  | MaxRequestHeadersTotalBytes\r\nMaxRequestBodySize               | MaxRequestBodyBytes\r\n\r\n"},{"Id":"7187278367","Type":"IssuesEvent","CreatedAt":"2018-02-02T04:05:39","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1237","RelatedDescription":"Closed issue \"\"Connection Id\" from Microsoft.AspNetCore.Server.Kestrel does not correlate with context.TraceIdentifie\" (#1237) at aspnet/KestrelHttpServer","RelatedBody":"In logs I receive different values - for example 0HL0NED41KJBG in Kestrel and 0HL0NED42ER6G in custom logging middleware (using context.TraceIdentifier):\r\n\r\n2016-11-28 12:45:27.0113|1|Microsoft.AspNetCore.Server.Kestrel|DEBUG|Connection id \"0HL0NED41KJBG\" started. \r\n2016-11-28 12:45:27.0113|1|Microsoft.AspNetCore.Hosting.Internal.WebHost|INFO|Request starting HTTP/1.1 GET http://10.111.254.230:4321/api/v1/partner   \r\n2016-11-28 12:45:27.0113|0|Wallet.API.Core.RequestLoggingMiddleware|INFO|Connection id: 0HL0NED42ER6G Client IP: 10.111.XXX.XXX Request path: /api/v1/partner Request content type: (null) Request content length: (null) Start time: 11/28/2016 09:45:27"},{"Id":"7187277808","Type":"IssuesEvent","CreatedAt":"2018-02-02T04:05:25","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1200","RelatedDescription":"Closed issue \"ODE on shutdown\" (#1200) at aspnet/KestrelHttpServer","RelatedBody":"The ObjectDisposedException is happening on `Post(t => t.AllowStop());`, but the `UvAsyncHandle` shouldn't be disposed or finalized until AllowStop is called. Weird.\r\n\r\n    Microsoft.AspNetCore.Server.KestrelTests.RequestTargetProcessingTests.NonPathRequestTargetSetInRawTarget(requestTarget: \"../\") [FAIL]\r\n      System.AggregateException : One or more errors occurred. (Safe handle has been closed)\r\n      ---- System.ObjectDisposedException : Safe handle has been closed\r\n      Stack Trace:\r\n           at System.ThrowHelper.ThrowAggregateException(List`1 exceptions)\r\n           at System.Threading.Tasks.Task.WaitAll(Task[] tasks, Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n           at System.Threading.Tasks.Task.WaitAll(Task[] tasks, Int32 millisecondsTimeout)\r\n           at System.Threading.Tasks.Task.WaitAll(Task[] tasks)\r\n        C:\\projects\\kestrelhttpserver\\src\\Microsoft.AspNetCore.Server.Kestrel\\Internal\\KestrelEngine.cs(54,0): at Microsoft.AspNetCore.Server.Kestrel.Internal.KestrelEngine.Dispose()\r\n        C:\\projects\\kestrelhttpserver\\test\\shared\\TestServer.cs(67,0): at Microsoft.AspNetCore.Testing.TestServer.Dispose()\r\n        C:\\projects\\kestrelhttpserver\\test\\Microsoft.AspNetCore.Server.KestrelTests\\RequestTargetProcessingTests.cs(129,0): at Microsoft.AspNetCore.Server.KestrelTests.RequestTargetProcessingTests.<NonPathRequestTargetSetInRawTarget>d__2.MoveNext()\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        --- End of stack trace from previous location where exception was thrown ---\r\n           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n        ----- Inner Stack Trace -----\r\n           at System.Runtime.InteropServices.SafeHandle.DangerousAddRef(Boolean& success)\r\n           at System.StubHelpers.StubHelpers.SafeHandleAddRef(SafeHandle pHandle, Boolean& success)\r\n           at Microsoft.AspNetCore.Server.Kestrel.Internal.Networking.Libuv.NativeMethods.uv_async_send(UvAsyncHandle handle)\r\n        C:\\projects\\kestrelhttpserver\\src\\Microsoft.AspNetCore.Server.Kestrel\\Internal\\Networking\\Libuv.cs(179,0): at Microsoft.AspNetCore.Server.Kestrel.Internal.Networking.Libuv.async_send(UvAsyncHandle handle)\r\n        C:\\projects\\kestrelhttpserver\\src\\Microsoft.AspNetCore.Server.Kestrel\\Internal\\Networking\\UvAsyncHandle.cs(37,0): at Microsoft.AspNetCore.Server.Kestrel.Internal.Networking.UvAsyncHandle.Send()\r\n        C:\\projects\\kestrelhttpserver\\src\\Microsoft.AspNetCore.Server.Kestrel\\Internal\\Infrastructure\\KestrelThread.cs(222,0): at Microsoft.AspNetCore.Server.Kestrel.Internal.KestrelThread.Post(Action`1 callback, Object state)\r\n        C:\\projects\\kestrelhttpserver\\src\\Microsoft.AspNetCore.Server.Kestrel\\Internal\\Infrastructure\\KestrelThread.cs(227,0): at Microsoft.AspNetCore.Server.Kestrel.Internal.KestrelThread.Post(Action`1 callback)\r\n        C:\\projects\\kestrelhttpserver\\src\\Microsoft.AspNetCore.Server.Kestrel\\Internal\\Infrastructure\\KestrelThread.cs(122,0): at Microsoft.AspNetCore.Server.Kestrel.Internal.KestrelThread.<StopAsync>d__45.MoveNext()\r\n    \r\nhttps://ci.appveyor.com/project/aspnetci/kestrelhttpserver/build/1.0.3743"},{"Id":"7187276983","Type":"IssuesEvent","CreatedAt":"2018-02-02T04:05:07","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1058","RelatedDescription":"Closed issue \"Kestrel Dasm\" (#1058) at aspnet/KestrelHttpServer","RelatedBody":"Produced this while looking at something else; might be interesting\n\nIts ngen'd so caveats apply; Vector paths aren't taken and readonly statics aren't consts etc...\nhttps://aoa.blob.core.windows.net/aspnet/Microsoft.AspNetCore.Server.Kestrel.dasm.txt\n\nBut should give flavour for what's inlined what's not, how things expand, what is converted to registers what not and why etc...\n\n/cc @davidfowl @halter73 @cesarbs \n"},{"Id":"7187276472","Type":"IssuesEvent","CreatedAt":"2018-02-02T04:04:53","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/736","RelatedDescription":"Closed issue \"Implement ITlsTokenBindingFeature \" (#736) at aspnet/KestrelHttpServer","RelatedBody":"http://tools.ietf.org/html/draft-popov-token-binding-00\nhttp://tools.ietf.org/html/draftbalfanz-https-token-binding-00\nhttp://www.ietf.org/proceedings/91/slides/slides-91-uta-2.pdf\nhttps://github.com/aspnet/HttpAbstractions/blob/dev/src/Microsoft.AspNetCore.Http.Features/ITlsTokenBindingFeature.cs\n\nThis requires new APIs on SslStream, and Win10+.\n"},{"Id":"7187272916","Type":"IssuesEvent","CreatedAt":"2018-02-02T04:03:21","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/564","RelatedDescription":"Closed issue \"Enable custom header encoding\" (#564) at aspnet/KestrelHttpServer","RelatedBody":"Officially request and response headers are restricted to ASCII. Historically however ANSI and local code pages were supported. There are also some cases where UTF-8 was used in for Unicode host names prior to the punycode standard (IE and HttpWebReqeuest on intranets), see Host and Location.\n\nDefault header encoding/decoding to utf-8. Allow this encoding to be set at startup. For performance reasons the encoding/decoding process can assume simple ASCII until it encounters 8bit values.\n\nRelated: https://github.com/aspnet/KestrelHttpServer/pull/491 pre-encoded response headers.\n\nRE: https://github.com/aspnet/WebListener/issues/123#issuecomment-158533753 [private]\n"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7186945699","Type":"IssuesEvent","CreatedAt":"2018-02-02T02:00:16","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2010","RelatedDescription":"Opened issue \"Make RazorTextViewConnectionListener not depend on a \"primary\" workspace.\" (#2010) at aspnet/Razor","RelatedBody":"Today our text view connection listener has the lifetime of the IDE yet depends on Workspace level dependencies. We need to change that entire graph (where appropriate) to have an IDE lifetime."},{"Id":"7186943890","Type":"IssuesEvent","CreatedAt":"2018-02-02T01:59:40","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2007","RelatedDescription":"Closed issue \"Change RazorCodeDocumentProvider to not be per-workspace.\" (#2007) at aspnet/Razor","RelatedBody":"The RazorCodeDocumentProvider is needed by the `RazorDirectiveCompletionProvider` (IDE Lifetime) and most of all doesn't have any workspace specific APIs. Given that, it needs to move off of workspace services and into MEF services."},{"Id":"7186943186","Type":"PullRequestEvent","CreatedAt":"2018-02-02T01:59:25","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2008","RelatedDescription":"Merged pull request \"Change RazorCodeDocumentProvider to not be per-workspace.\" (#2008) at aspnet/Razor","RelatedBody":"- Changed the `RazorCodeDocumentProvider` and its `TextBufferCodeDocumentProvider` dependency to be MEF services. This changes their lifetimes from per-workspace to per-IDE.\r\n- Updated `RazorDirectiveCompletionProvider` to get the code document provider via MEF instead of the old primary workspace\".\r\n- Removed language service factory types.\r\n\r\n#2007 \r\n\r\n/cc @mkArtakMSFT "},{"Id":"7186826494","Type":"PullRequestEvent","CreatedAt":"2018-02-02T01:18:41","Actor":"natemcmaster","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2009","RelatedDescription":"Opened pull request \"Include portable symbols in nupkgs\" (#2009) at aspnet/Razor","RelatedBody":"Part of https://github.com/aspnet/Universe/issues/131.\r\n\r\nWe will need to convert portable PDBs to full later in our build. See https://github.com/aspnet/Coherence-Signed/issues/763. Labeling this PR as <kbd>blocked</kbd> until we have a plan to address this."},{"Id":"7186777238","Type":"PullRequestEvent","CreatedAt":"2018-02-02T01:01:43","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2008","RelatedDescription":"Opened pull request \"Change RazorCodeDocumentProvider to not be per-workspace.\" (#2008) at aspnet/Razor","RelatedBody":"- Changed the `RazorCodeDocumentProvider` and its `TextBufferCodeDocumentProvider` dependency to be MEF services. This changes their lifetimes from per-workspace to per-IDE.\r\n- Updated `RazorDirectiveCompletionProvider` to get the code document provider via MEF instead of the old primary workspace\".\r\n- Removed language service factory types.\r\n\r\n#2007 \r\n\r\n/cc @mkArtakMSFT "},{"Id":"7186723419","Type":"IssuesEvent","CreatedAt":"2018-02-02T00:43:12","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2007","RelatedDescription":"Opened issue \"Change RazorCodeDocumentProvider to not be per-workspace.\" (#2007) at aspnet/Razor","RelatedBody":"The RazorCodeDocumentProvider is needed by the `RazorDirectiveCompletionProvider` (IDE Lifetime) and most of all doesn't have any workspace specific APIs. Given that, it needs to move off of workspace services and into MEF services."},{"Id":"7186599559","Type":"IssuesEvent","CreatedAt":"2018-02-02T00:02:41","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2006","RelatedDescription":"Opened issue \"Include ToolsVersion=\"14.0\" in all msbuild files\" (#2006) at aspnet/Razor","RelatedBody":"Didn't notice until I ran a detailed log. MSBuild produces warnings when it encounters our project files:\r\n\r\n```\r\nProject file contains ToolsVersion=\"\". This toolset may be unknown or missing, in which case you may be able to resolve this by installing the appropriate version of MSBuild, or the build may have been forced to a particular ToolsVersion for policy reasons. Treating the project as if it had ToolsVersion=\"15.0\". For more information, please see http://go.microsoft.com/fwlink/?LinkId=293424.\r\n```"},{"Id":"7186599252","Type":"PullRequestEvent","CreatedAt":"2018-02-02T00:02:35","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2005","RelatedDescription":"Opened pull request \"Change DefaultTagHelperFactsService to not expect a primary workspace.\" (#2005) at aspnet/Razor","RelatedBody":"- Removed `TagHelperFactsServiceInternal` since we had no way of retrieving the internal Workspace service given the exposed public API. Not to mention I think the `TagHelperFactsService` made more sense as a MEF service anyhow.\r\n- Moved `TagHelperFactsServiceInternal` tests to `Microsoft.VisualStudio.Editor.Razor.Test` project and changed them to utilize the non-\"internal\" version.\r\n- Updated completion service API to rely on non-`TagHelperFactsServiceInternal` pieces.\r\n- Tested the updated bits in this PR in VS.\r\n\r\n#2004 \r\n\r\n/cc @mkArtakMSFT "},{"Id":"7186353272","Type":"IssuesEvent","CreatedAt":"2018-02-01T22:51:58","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1989","RelatedDescription":"Closed issue \"Add WorkspaceProvider as a means to go from ITextBuffer => Workspace\" (#1989) at aspnet/Razor","RelatedBody":"We have several API's which today utilize `VisualStudioWorkspaceAccessor` to get Workspace services. These API's can't use that type anymore given that we're moving away from assuming 1 workspace. Instead we should have a workspace provider which allows us to go from text buffer to workspace and then dynamically grab any services we need off of a workspace retrieved via TextBuffer."},{"Id":"7186352385","Type":"IssuesEvent","CreatedAt":"2018-02-01T22:51:44","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1997","RelatedDescription":"Closed issue \"Change TextBufferProjectService to not be per-workspace\" (#1997) at aspnet/Razor","RelatedBody":"Today the `TextBufferProjectService` types operate on `IVsHierarchy` and `DotNetProject` (VS windows/mac concepts) yet it's a workspace service. In order to build non-workspace specific services we'll need to lift the project service to not be tied to a single workspace."},{"Id":"7186351104","Type":"PullRequestEvent","CreatedAt":"2018-02-01T22:51:24","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1998","RelatedDescription":"Merged pull request \"Change TextBufferProjectService to not be per-workspace.\" (#1998) at aspnet/Razor","RelatedBody":"Prior to this `TextBufferProjectService` operated on `IVsHierarchy` and `DotNetProject` (VS windows/mac concepts) yet it was a workspace service. In order to build non-workspace specific services I needed to change the text buffer project service to not be tied to a single workspace.\r\n\r\n- Updated impacted code to now expect this from MEF.\r\n\r\n#1997 \r\n\r\n/cc @mkArtakMSFT "},{"Id":"7186317234","Type":"PullRequestEvent","CreatedAt":"2018-02-01T22:43:02","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1996","RelatedDescription":"Merged pull request \"Update DefaultRazorEditorFactoryService to be per-workspace (in Windows)\" (#1996) at aspnet/Razor","RelatedBody":"- Added a `WorkspaceProvider` API to enable the factory to retrieve a workspace given a text buffer.\r\n- Added a way to add test services to `AdhocWorkspace` so we can test against services being retrieved from a `Workspace`. This will be much more common once we rely on services coming from `TextBuffer`s in our other tooling pieces.\r\n- Added tests for the default workspace provider.\r\n\r\n**Note:** This PR lays the groundwork for enabling the remaining Razor pieces to not use `VisualStudioWorkspaceAccessor` and instead rely on getting workspaces given TextBuffers and the like.\r\n\r\n#1989 \r\n\r\n/cc @mkArtakMSFT "}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7156693215","Type":"IssuesEvent","CreatedAt":"2018-01-26T17:07:42","Actor":"jodavis","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1010","RelatedDescription":"Closed issue \"Manage Bower Packages: Update button should disable upon clicking\" (#1010) at aspnet/Tooling","RelatedBody":"Here are the steps to reproduce in VS 2017:\r\n\r\n1. Use the ASP.NET Core Web Application (.NET Core) project template to create a new ASP.NET Core 1.1 Web Application with No Authentication.\r\n1. Right-click the web project in Solution Explorer, and select **Manage Bower Packages...**.\r\n1. From the **Installed** tab, click the **Update** button for the Bootstrap package. Notice that the button doesn't disable after it's been clicked, yet the update is occurring.\r\n\r\nThis **Update** button should be disabled while the package update is in progress. Otherwise, the following command is executed each time the button is clicked: `\"C:\\Users\\Scott Addie\\AppData\\Roaming\\npm\\Bower.cmd\" install bootstrap#v4.0.0-alpha.6 --force-latest --save`.\r\n\r\nIn the screenshot below, you see what happens when I click the button 3 times in a row:\r\n\r\n![bower_update](https://cloud.githubusercontent.com/assets/10702007/23536562/5c5589f6-ff8b-11e6-8c22-7aa322a802d9.png)\r\n\r\n\r\n\r\n"},{"Id":"7151591436","Type":"IssuesEvent","CreatedAt":"2018-01-25T18:01:43","Actor":"jodavis","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/914","RelatedDescription":"Closed issue \"Format on paste setting does not work in .cshtml (Razor - VS 2015)\" (#914) at aspnet/Tooling","RelatedBody":"When disabling format on paste for C# + HTML in the Visual Studio settings, usually code does not get formatted on paste (as expected)\r\n\r\nIn razor files, when you copy and past something like this statement:\r\n```csharp\r\n@Html.AttributeEncode(\"test\")\r\n```\r\nit also works as intended.\r\n\r\nHowever when you mark the \".\" (dot) and do something like cut (Ctlr+X) and paste (Ctlr+V) (or just paste), \r\nthe html helper call gets formatted (in our case like this):\r\n```csharp\r\n@Html.AttributeEncode (\"test\")\r\n```\r\n\r\nThis is ***unexpected and even leads to a compile failure*** (razor @ syntax does not support whitespaces)"},{"Id":"7141550084","Type":"IssuesEvent","CreatedAt":"2018-01-24T01:14:53","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Closed issue \"Issue with Sales discount App - Odoo 9\" (#1065) at aspnet/Tooling","RelatedBody":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n"},{"Id":"7138385029","Type":"IssuesEvent","CreatedAt":"2018-01-23T14:19:55","Actor":"NeerajaRagesh","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1065","RelatedDescription":"Opened issue \"Issue with Sales discount App - Odoo 9\" (#1065) at aspnet/Tooling","RelatedBody":"I installed sales discount on total in sales order. While creating invoice am getting the below error\r\nOdoo Server Error\r\nTraceback (most recent call last):\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 638, in _handle_exception\r\nreturn super(JsonRequest, self)._handle_exception(exception)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 675, in dispatch\r\nresult = self._call_function(**self.params)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 331, in _call_function\r\nreturn checked_call(self.db, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/service/model.py\", line 119, in wrapper\r\nreturn f(dbname, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 324, in checked_call\r\nresult = self.endpoint(*a, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 933, in call\r\nreturn self.method(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/http.py\", line 504, in response_wrap\r\nresponse = f(*args, **kw)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 878, in call_kw\r\nreturn self._call_kw(model, method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/web/controllers/main.py\", line 870, in _call_kw\r\nreturn call_kw(request.env[model], method, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 681, in call_kw\r\nreturn call_kw_multi(method, model, args, kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/api.py\", line 672, in call_kw_multi\r\nresult = method(recs, *args, **kwargs)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5469, in onchange\r\nrecord._onchange_eval(name, field_onchange[name], result)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/models.py\", line 5367, in _onchange_eval\r\nmethod_res = method(self)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 456, in _onchange_invoice_line_ids\r\ntaxes_grouped = self.get_taxes_values()\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 635, in get_taxes_values\r\nval = self._prepare_tax_line_vals(line, tax)\r\nFile \"/usr/lib/python2.7/dist-packages/odoo/addons/account/models/account_invoice.py\", line 612, in _prepare_tax_line_vals\r\n'base': tax['base'],\r\nKeyError: 'base'\r\n\r\n\r\nplease give any solution\r\n"},{"Id":"7119899220","Type":"IssuesEvent","CreatedAt":"2018-01-18T22:33:02","Actor":"mlorbetske","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/555","RelatedDescription":"Closed issue \"Microsoft.DotNet.Publishing.targets breaks webdeploy zip support\" (#555) at aspnet/Tooling","RelatedBody":"When I create a VS build deployment template in VSTS, it tries building a project or solution with the following arguments:\n\n```\n/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation=\"$(build.artifactstagingdirectory)\\\\\"\n```\n\nAfter the move from DNX targets to DotNet targets, this only builds the project rather than outputting a zip file, breaking the VSTS template.\n\nI'm having a hard time trying to figure out how to call msbuild on my xproj file to get it to build a webdeploy compatible zip package that can be deployed with `Publish-AzureWebsiteProject`.\n"},{"Id":"7107011065","Type":"IssuesEvent","CreatedAt":"2018-01-16T18:28:07","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/522","RelatedDescription":"Closed issue \"Asp.Net project with Build platform x86 \" (#522) at aspnet/Tooling","RelatedBody":"Here are threads in CLI and MVC repo https://github.com/aspnet/Mvc/issues/4663 and  https://github.com/dotnet/cli/issues/3091 with no real answers. Thought it would be VS Tooling bug.\n\nI have a asp.net project that reference a native dll via Nuget package. This native DLL is only build for x86. I've changed my project.json to set buildOptions\n \"platform\": \"x86\"\n\nBut when I build this asp.net project via visual studio, it creates \"bin\\Debug\\net46\\win7-x64\" as oppose to \"win7-x86\". If I run the resulting \".exe\" file it would crash.\n\nI've tried to use \"dotnet build -r win7-x86\" and it would create the right folder \"bin\\Debug\\net46\\win7-x86\" and then I can run the \".exe\" file.\n\nStill cannot test the application in x86 mode.\n\nThen I've uninstalled Microsoft .NET Code 1.0.0 RC2 - SDK Preview 1 (x64) which was installed via \"VS 2015 Tooling Preview\" and installed the \"x86\" one, and everything seems to be working.\n\nI think it is not right. I should be have the option to install x64 and x86 and then via that buildOption I should be able to tell dotnet how to compile. Just like MSBuild and ASP.Net projects where I set the build options from Project Properties.\n"},{"Id":"7106985478","Type":"IssuesEvent","CreatedAt":"2018-01-16T18:22:30","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/557","RelatedDescription":"Closed issue \"Question: Typescript with ASP.NET Core RC2\" (#557) at aspnet/Tooling","RelatedBody":"Is it possible to compile Typescript code directly in Visual Studio 2015 using the ASP.NET Core RC2 project templates?  This used to work in RC1, but since updating to RC2 I can't get Typescript and ASP.NET Core working together simultaneously.  If I create a .NET Core project (e.g., **ASP.NET Core Web Application (.NET Core)** template), then I don't see \"Typescript Build\" properties page in Project Properties (the only property pages available are Application, Build, Debug).  I can create a Typescript project (e.g., **HTML Application with Typescript** template, which uses the csproj format), and Typescript works as expected, but of course I can't use .NET Core in that project.\n\nI have confirmed that my .xproj file does include a reference to Microsoft.DotNet.Web.targets, which I understand is supposed to bring in Typescript support:\n\n```\n<Import Project=\"$(VSToolsPath)\\DotNet.Web\\Microsoft.DotNet.Web.targets\"\n        Condition=\"'$(VSToolsPath)' != ''\" />\n```\n\nIs the built-in Typescript compilation no longer supported with RC2, or am I missing something somewhere?\n"},{"Id":"7065973641","Type":"PullRequestEvent","CreatedAt":"2018-01-07T03:48:49","Actor":"cartermp","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1062","RelatedDescription":"Closed pull request \"Update migrate-sql-server.md\" (#1062) at aspnet/Tooling","RelatedBody":"Removed product links in favor of all docs links, changed wording slightly, and moved Get Started to be at the top."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7168812814","Type":"IssuesEvent","CreatedAt":"2018-01-30T02:33:11","Actor":"DamianEdwards","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/287","RelatedDescription":"Opened issue \"Introduction of new meta-package \"Microsoft.AspNetCore.App\"\" (#287) at aspnet/Announcements","RelatedBody":"## Overview\r\nASP.NET Core 2.1 will introduce a new meta-package for use by applications: *Microsoft.AspNetCore.App*. Additionally, new projects created that target 2.1 will use this meta-package by default, rather than the existing meta-package *Microsoft.AspNetCore.All*.\r\n\r\nThe new meta-package differs from the existing meta-package in that it reduces the number of dependencies of packages not owned or supported by the ASP.NET or .NET teams to just those deemed necessary to ensure the major frameworks features function. The full list of packages being removed compared to *Microsoft.AspNetCore.All* can be seen below.\r\n\r\nThe existing *Microsoft.AspNetCore.All* meta-package will continue to be made available throughout the 2.x lifecycle, and it now depends on *Microsoft.AspNetCore.App*, but we recommend customers move to the new *Microsoft.AspNetCore.App* meta-pacakge and then add individual references to any of the removed packages if their app requires it.\r\n\r\n## Package references not in \"Microsoft.AspNetCore.App\", compared to \"Microsoft.AspNetCore.All\"\r\nThe following packages are direct dependencies of *Microsoft.AspNetCore.All* but **not** of *Microsoft.AspNetCore.App*. Note that any dependencies of these packages that otherwise aren't dependencies of *Microsoft.AspNetCore.App* will now **not** be included implicitly, e.g. *StackExchange.Redis* as a dependency of *Microsoft.Extensions.Caching.Redis*, *Microsoft.ApplicationInsights* as a dependency of *Microsoft.AspNetCore.ApplicationInsights.HostingStartup*:\r\n- Microsoft.Data.Sqlite\r\n- Microsoft.Data.Sqlite.Core\r\n- Microsoft.EntityFrameworkCore.Sqlite\r\n- Microsoft.EntityFrameworkCore.Sqlite.Core\r\n- Microsoft.Extensions.Caching.Redis\r\n- Microsoft.AspNetCore.DataProtection.AzureStorage\r\n- Microsoft.Extensions.Configuration.AzureKeyVault\r\n- Microsoft.AspNetCore.DataProtection.AzureKeyVault\r\n- Microsoft.AspNetCore.Identity.Service.AzureKeyVault\r\n- Microsoft.AspNetCore.AzureKeyVault.HostingStartup\r\n- Microsoft.AspNetCore.ApplicationInsights.HostingStartup\r\n\r\nWhen moving from *Microsoft.AspNetCore.All* to *Microsoft.AspNetCore.App*, if your application uses any APIs from the above packages, or packages brought in by those packages, you'll now need to add references to those packages in your project manually."},{"Id":"7082740966","Type":"IssuesEvent","CreatedAt":"2018-01-10T21:14:16","Actor":"dougbu","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/286","RelatedDescription":"Opened issue \"Remove project file elements added for WebApiCompatShim in 2.0\" (#286) at aspnet/Announcements","RelatedBody":"The Microsoft.AspNetCore.Mvc.WebApiCompatShim package now depends on the latest (5.2.4-preview1) Microsoft.AspNet.WebApi.Client package. That dependency includes a new .NET Standard 2.0 assembly. This assembly supports all platforms the Microsoft.AspNetCore.Mvc.WebApiCompatShim package supports and includes the full Web API Client feature set.\r\n\r\nWhen upgrading projects using the Microsoft.AspNetCore.Mvc.WebApiCompatShim package to our nightly builds or the forthcoming 2.1.0-preview1 release, we recommend removing the following elements from the project file. (Of course, some projects may need the elements for other reasons.)\r\n``` xml\r\n<PackageTargetFallback>$(PackageTargetFallback);portable-net451+win8</PackageTargetFallback>\r\n<DisableImplicitAssetTargetFallback>true</DisableImplicitAssetTargetFallback>\r\n```\r\n\r\nFYI the `<PackageTargetFallback>` element caused the application to build and run against the Portable Class Library (PCL) assembly from the Microsoft.AspNet.WebApi.Client package.\r\n\r\nFor discussion of this change, see aspnet/Mvc#7229."},{"Id":"7076432273","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:08:19","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/285","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0784 - ASP.NET Core Templates enable Elevation Of Privilege Vulnerability\" (#285) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0784\r\n##  ASP.NET Core Templates enable Elevation Of Privilege Vulnerability\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of ASP.NET Core  2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of an elevation of privilege vulnerability exists when a ASP.NET Core web application, created using vulnerable project templates, fails to properly sanitize web requests. An attacker who successfully exploited this vulnerability could perform content injection attacks and run script in the security context of the logged-on user.\r\n\r\nTo exploit the vulnerability, an attacker could send a specially crafted email, containing a malicious link, to a user. Alternatively, an attacker could use a chat client to social engineer a user into clicking the malicious link. However, in all cases to exploit this vulnerability a user must click a maliciously crafted link from an attacker.\r\n\r\nThe security update addresses the vulnerability by correcting the ASP.NET Core project templates.\r\n\r\nDevelopers who have generated applications from the vulnerable templates should change their code using the following instructions. They should also change their code to address a further vulnerability,  [CVE-2018-0783](https://github.com/aspnet/Announcements/issues/284), which is in the same templates. Finally installing the latest .NET Core SDK, version 2.1.4, from https://www.microsoft.com/net/download/ will update the templates to correct the issue for any new applications created.\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nASP.NET Core applications which are not created using the ASP.NET Core 2.0 Individual Authentication templates are not vulnerable to this issue.\r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses any of affected runtime versions listed below and have generated applications using Individual Authentication with usernames and passwords stored within the application. Applications which use Azure Active Directory, or Azure Active Directory B2C are not affected.\r\n\r\nVulnerable .NET SDK Version | Fixed SDK Version\r\n----------------| -------------------------\r\n2.0.0, 2.0.2, 2.0.3, 2.1.2, 2.1.3 |  2.1.4\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nYour application will be affected if you generated it using the ASP.NET 2.0 Web Application template or the ASP.NET 2.0 Web Application (Model/View/Controller) template from a vulnerable SDK version where you have selected individual authentication where user accounts are stored in-app.\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\sdk\\ |\r\n| macOS | /usr/local/share/dotnet/sdk/    |\r\n| Supported Linux platforms | /usr/share/dotnet/sdk/   |\r\n\r\nEach SDK version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 2.1.4 then any applications generated for ASP.NET Core 2.0 using Individual Authentication may be vulnerable.. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by changing the code created during application generation using the following instructions.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Razor Pages)\r\n\r\n1. Open `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` find the `OnPostAsync()` method and search for the following line\r\n\r\n```\r\n<div id=\"qrCodeData\" data-url=\"@Html.Raw(Model.AuthenticatorUri)\"></div>\r\n```\r\n\r\nReplace this line with the following code, removing the call to `Html.Raw()`\r\n\r\n```C#\r\n<div id=\"qrCodeData\" data-url=\"@Model.AuthenticatorUri\"></div>\r\n```\r\n\r\n2. Open the `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` and search for the following line, inside the `OnGetAsync()` method;\r\n\r\n```C#\r\nawait LoadSharedKeyAndQrCodeUriAsync(user);\r\n```\r\n\r\nRemove the code shown below which follows the call to `LoadSharedKeyAndQrCodeUriAsync(user);`\r\n\r\n```C#\r\nif (string.IsNullOrEmpty(SharedKey))\t\t\r\n{\t\t\r\n    await _userManager.ResetAuthenticatorKeyAsync(user);\t\t\r\n    await LoadSharedKeyAndQrCodeUriAsync(user);\t\t\r\n}\r\n```\r\n\r\nThe `OnGetAsync()` method should now look like\r\n\r\n```C#\r\npublic async Task<IActionResult> OnGetAsync()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    await LoadSharedKeyAndQrCodeUriAsync(user);\r\n\r\n    return Page();\r\n}\r\n```\r\n\r\n3. Still in the `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` file  and search for the `LoadSharedKeyAndQrCodeUriAsync(ApplicationUser user) function` and replace it with \r\n\r\n```C#\r\nprivate async Task LoadSharedKeyAndQrCodeUriAsync(ApplicationUser user)\r\n{\r\n    // Load the authenticator key & QR code URI to display on the form\r\n    var unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n    if (string.IsNullOrEmpty(unformattedKey))\r\n    {\r\n        await _userManager.ResetAuthenticatorKeyAsync(user);\r\n        unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n     }\r\n\r\n    SharedKey = FormatKey(unformattedKey);\r\n    AuthenticatorUri = GenerateQrCodeUri(user.Email, unformattedKey);\r\n }\r\n```\r\n\r\n4. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Model/View/Controller)\r\n\r\n1. Open the `Controllers\\ManageController.cs` file and find the declaration for `private const string AuthenticatorUriFormat`. Add the following new const declaration below it;\r\n\r\n```C#\r\nprivate const string RecoveryCodesKey = nameof(RecoveryCodesKey);\r\n```\r\n\r\n2. Still in `Controllers\\ManageController.cs` file and find the `EnableAuthenticator()` function. Replace its contents with\r\n\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> EnableAuthenticator()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    var model = new EnableAuthenticatorViewModel();\r\n    await LoadSharedKeyAndQrCodeUriAsync(user, model);\r\n\r\n    return View(model);\r\n}\r\n```\r\n\r\n3. Still in `Controllers\\ManageController.cs` file and find the `EnableAuthenticator(EnableAuthenticatorViewModel model)` method. Replace its contents with\r\n\r\n```C#\r\n[HttpPost]\r\n[ValidateAntiForgeryToken]\r\npublic async Task<IActionResult> EnableAuthenticator(EnableAuthenticatorViewModel model)\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!ModelState.IsValid)\r\n    {\r\n        await LoadSharedKeyAndQrCodeUriAsync(user, model);\r\n        return View(model);\r\n     }\r\n\r\n    // Strip spaces and hypens\r\n    var verificationCode = model.Code.Replace(\" \", string.Empty).Replace(\"-\", string.Empty);\r\n\r\n    var is2faTokenValid = await _userManager.VerifyTwoFactorTokenAsync(\r\n        user, _userManager.Options.Tokens.AuthenticatorTokenProvider, verificationCode);\r\n\r\n    if (!is2faTokenValid)\r\n    {\r\n        ModelState.AddModelError(\"Code\", \"Verification code is invalid.\");\r\n        await LoadSharedKeyAndQrCodeUriAsync(user, model);\r\n        return View(model);\r\n    }\r\n\r\n    await _userManager.SetTwoFactorEnabledAsync(user, true);\r\n    _logger.LogInformation(\"User with ID {UserId} has enabled 2FA with an authenticator app.\", user.Id);\r\n    var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\n    TempData[RecoveryCodesKey] = recoveryCodes.ToArray();\r\n\r\n    return RedirectToAction(nameof(ShowRecoveryCodes));\r\n}\r\n```\r\n\r\n4. Still in `Controllers\\ManageController.cs` file create the following method after `EnableAuthenticator(EnableAuthenticatorViewModel model)`;\r\n\r\n```C#\r\n[HttpGet]\r\npublic IActionResult ShowRecoveryCodes()\r\n{\r\n    var recoveryCodes = (string[])TempData[RecoveryCodesKey];\r\n    if (recoveryCodes == null)\r\n    {\r\n        return RedirectToAction(nameof(TwoFactorAuthentication));\r\n    }\r\n\r\n    var model = new ShowRecoveryCodesViewModel { RecoveryCodes = recoveryCodes };\r\n    return View(model);\r\n}\r\n```\r\n\r\n5. Still in `Controllers\\ManageController.cs` file create the following method after the `GenerateQrCodeUri(string email, string unformattedKey)` method\r\n\r\n```C#\r\nprivate async Task LoadSharedKeyAndQrCodeUriAsync(ApplicationUser user, EnableAuthenticatorViewModel model)\r\n{\r\n    var unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n    if (string.IsNullOrEmpty(unformattedKey))\r\n    {\r\n        await _userManager.ResetAuthenticatorKeyAsync(user);\r\n        unformattedKey = await _userManager.GetAuthenticatorKeyAsync(user);\r\n    }\r\n\r\n    model.SharedKey = FormatKey(unformattedKey);\r\n    model.AuthenticatorUri = GenerateQrCodeUri(user.Email, unformattedKey);\r\n}\r\n```\r\n\r\n6. Still in `Controllers\\ManageController.cs` Create a new action method in the controller file, `GenerateRecoveryCodesWarning()` containing the following code\r\n\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> GenerateRecoveryCodesWarning()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!user.TwoFactorEnabled)\r\n    {\r\n        throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' because they do not have 2FA enabled.\");\r\n    }\r\n\r\n    return View(nameof(GenerateRecoveryCodesWarning));\r\n}\r\n```\r\n\r\n7. Open the `Models\\ManageViewModels\\EnableAuthenticatorViewModel.cs` file and add the following `using` reference;\r\n\r\n```C#\r\nusing Microsoft.AspNetCore.Mvc.ModelBinding;\r\n```\r\n\r\nthen replace the class declaration with \r\n\r\n```C# \r\npublic class EnableAuthenticatorViewModel\r\n{\r\n    [Required]\r\n    [StringLength(7, ErrorMessage = \"The {0} must be at least {2} and at max {1} characters long.\", MinimumLength = 6)]\r\n    [DataType(DataType.Text)]\r\n    [Display(Name = \"Verification Code\")]\r\n    public string Code { get; set; }\r\n\r\n    [BindNever]\r\n    public string SharedKey { get; set; }\r\n\r\n    [BindNever]\r\n    public string AuthenticatorUri { get; set; }\r\n}\r\n```\r\n\r\n8. Open the `Views\\Manage\\EnableAuthenticator.cshtml` file and replace the following line\r\n\r\n```\r\n<div id=\"qrCodeData\" data-url=\"@Html.Raw(Model.AuthenticatorUri)\"></div>\r\n```\r\n\r\nwith\r\n\r\n```\r\n<div id=\"qrCodeData\" data-url=\"@Model.AuthenticatorUri\"></div>\r\n```\r\n\r\nremove the call to `Html.Raw()`.\r\n\r\n9. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Acknowledgments\r\nThanks to Kévin Chalet for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0784](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0784)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n  \r\n  \r\n  \r\n  "},{"Id":"7076428623","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:07:27","Actor":"blowdart","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/284","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0785 - ASP.NET Core Templates enable Cross Site Request Forgery\" (#284) at aspnet/Announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0785\r\n## ASP.NET Core Templates enable Cross Site Request Forgery\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of ASP.NET Core  2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a Cross Site Request Forgery vulnerability in the individual authentication templates for ASP.NET Core 2.0. An attacker who successfully exploited this vulnerability could change the recovery codes associated with the victim's user account without his/her consent. As a result, a victim of this attack may be permanently locked out of his/her account after loosing access to his/her 2FA device, as the initial recovery codes would be no longer valid.\r\n\r\nThe security update addresses the vulnerability by correcting the ASP.NET Core project templates.\r\n\r\nDevelopers who have generated applications from the vulnerable templates should change their code using the following instructions. They should also change their code to address a further vulnerability,  CVE-2018-0784, which is in the same templates.  ***** TODO: ADD LINK TO OTHER ISSUE ***** \r\n\r\nYou should also install the latest .NET Core SDK, version 2.1.4, from https://www.microsoft.com/net/download/ as will update the templates to correct the issue for any _new_ applications created after its installation. Existing applications must be manually updated using the instructions below.\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nASP.NET Core applications which are not created using the ASP.NET Core 2.0 Individual Authentication templates are not vulnerable to this issue.\r\n\r\n## Affected Software\r\nThe vulnerabilities affect any Microsoft .NET Core project if it uses any of affected runtime versions listed below and have generated applications using Individual Authentication with usernames and passwords stored within the application. Applications which use Azure Active Directory, or Azure Active Directory B2C are not affected.\r\n\r\nVulnerable .NET SDK Version | Fixed SDK Version\r\n----------------| -------------------------\r\n2.0.0, 2.0.2, 2.0.3, 2.1.2, 2.1.3 |  2.1.4\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nYour application will be affected if you generated it using the ASP.NET 2.0 Web Application template or the ASP.NET 2.0 Web Application (Model/View/Controller) template from a vulnerable SDK version where you have selected individual authentication where user accounts are stored in-app.\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\sdk\\ |\r\n| macOS | /usr/local/share/dotnet/sdk/    |\r\n| Supported Linux platforms | /usr/share/dotnet/sdk/   |\r\n\r\nEach SDK version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 2.1.4 then any applications generated for ASP.NET Core 2.0 using Individual Authentication may be vulnerable.. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by changing the code created during application generation using the following instructions.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Razor Pages)\r\n\r\n1. Open `Pages\\Account\\Manage\\EnableAuthenticator.cshtml.cs` find the `OnPostAsync()` method. The last line of this file should be\r\n\r\n```C#\r\nreturn RedirectToPage(\"./GenerateRecoveryCodes\");\r\n```\r\n\r\nReplace this line with the following code\r\n\r\n```C#\r\nvar recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\nTempData[\"RecoveryCodes\"] = recoveryCodes.ToArray();\r\nreturn RedirectToPage(\"./ShowRecoveryCodes\");\r\n```\r\n\r\n2. Open the `Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml` and replace its contents with \r\n\r\n```C#\r\n@page\r\n@model GenerateRecoveryCodesModel\r\n@{\r\n    ViewData[\"Title\"] = \"Generate two-factor authentication (2FA) recovery codes\";\r\n    ViewData[\"ActivePage\"] = \"TwoFactorAuthentication\";\r\n}\r\n\r\n<h4>@ViewData[\"Title\"]</h4>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>This action generates new recovery codes.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n    <p>\r\n        Generating new recovery codes does not change the keys used in authenticator apps. If you wish to change the key\r\n        used in an authenticator app you should <a asp-action=\"ResetAuthenticatorWarning\">reset your authenticator keys.</a>\r\n    </p>\r\n</div>\r\n\r\n<div>\r\n    <form method=\"post\" class=\"form-group\">\r\n        <button class=\"btn btn-danger\" type=\"submit\">Generate Recovery Codes</button>\r\n    </form>\r\n</div>\r\n```\r\n3. Open the `Pages\\Account\\Manage\\GenerateRecoveryCodes.cshtml.cs` file. Replace its contents with\r\n\r\n```C#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Identity;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Mvc.RazorPages;\r\nusing Microsoft.Extensions.Logging;\r\nusing Company.WebApplication1.Data;\r\n\r\nnamespace Company.WebApplication1.Pages.Account.Manage\r\n{\r\n    public class GenerateRecoveryCodesModel : PageModel\r\n    {\r\n        private readonly UserManager<ApplicationUser> _userManager;\r\n        private readonly ILogger<GenerateRecoveryCodesModel> _logger;\r\n\r\n        public GenerateRecoveryCodesModel(\r\n            UserManager<ApplicationUser> userManager,\r\n            ILogger<GenerateRecoveryCodesModel> logger)\r\n        {\r\n            _userManager = userManager;\r\n            _logger = logger;\r\n        }\r\n\r\n        public async Task<IActionResult> OnGetAsync()\r\n        {\r\n            var user = await _userManager.GetUserAsync(User);\r\n            if (user == null)\r\n            {\r\n                throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n            }\r\n\r\n            if (!user.TwoFactorEnabled)\r\n            {\r\n                throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' because they do not have 2FA enabled.\");\r\n            }\r\n\r\n            return Page();\r\n        }\r\n\r\n        public async Task<IActionResult> OnPostAsync()\r\n        {\r\n            var user = await _userManager.GetUserAsync(User);\r\n            if (user == null)\r\n            {\r\n                throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n            }\r\n\r\n            if (!user.TwoFactorEnabled)\r\n            {\r\n                throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' as they do not have 2FA enabled.\");\r\n            }\r\n\r\n            var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\n            TempData[\"RecoveryCodes\"] = recoveryCodes.ToArray();\r\n\r\n            _logger.LogInformation(\"User with ID '{UserId}' has generated new 2FA recovery codes.\", user.Id);\r\n\r\n            return RedirectToPage(\"./ShowRecoveryCodes\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n4. Create a new file, `Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml` with the following contents \r\n\r\n```C#\r\n@page\r\n@model ShowRecoveryCodesModel\r\n@{\r\n    ViewData[\"Title\"] = \"Recovery codes\";\r\n    ViewData[\"ActivePage\"] = \"TwoFactorAuthentication\";\r\n}\r\n\r\n<h4>@ViewData[\"Title\"]</h4>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>Put these codes in a safe place.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        @for (var row = 0; row < Model.RecoveryCodes.Length; row += 2)\r\n        {\r\n            <code>@Model.RecoveryCodes[row]</code><text>&nbsp;</text><code>@Model.RecoveryCodes[row + 1]</code><br />\r\n        }\r\n    </div>\r\n</div>\r\n```\r\n\r\n5. Create a new file `Pages\\Account\\Manage\\ShowRecoveryCodes.cshtml.cs` with the following contents\r\n\r\n```C#\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Threading.Tasks;\r\nusing Microsoft.AspNetCore.Mvc;\r\nusing Microsoft.AspNetCore.Mvc.RazorPages;\r\n\r\nnamespace Company.WebApplication1.Pages.Account.Manage\r\n{\r\n    public class ShowRecoveryCodesModel : PageModel\r\n    {\r\n        public string[] RecoveryCodes { get; private set; }\r\n\r\n        public IActionResult OnGet()\r\n        {\r\n            RecoveryCodes = (string[])TempData[\"RecoveryCodes\"];\r\n            if (RecoveryCodes == null)\r\n            {\r\n                return RedirectToPage(\"TwoFactorAuthentication\");\r\n            }\r\n\r\n            return Page();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n6. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n#### For ASP.NET Core 2.0 Web Application (Model/View/Controller)\r\n\r\n1. Open the `Controllers\\ManageController.cs` file and find \r\n\r\n```C#\r\nprivate const string AuthenicatorUriFormat = \"otpauth://totp/{0}:{1}?secret={2}&issuer={0}&digits=6\";\r\n```\r\n  and add a new declaration underneath,\r\n\r\n```C#\r\nprivate const string AuthenicatorUriFormat = \"otpauth://totp/{0}:{1}?secret={2}&issuer={0}&digits=6\";\r\nprivate const string RecoveryCodesKey = nameof(RecoveryCodesKey);\r\n```\r\n\r\n2. Still in `Controllers\\ManageController.cs` file and find the `EnableAuthenticator(EnableAuthenticatorViewModel model)` method. The last line in this method should be\r\n\r\n```C#\r\nreturn RedirectToAction(nameof(GenerateRecoveryCodes));\r\n```\r\n\r\nReplace this final line with\r\n\r\n```C#\r\nvar recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\nTempData[RecoveryCodesKey] = recoveryCodes.ToArray();\r\nreturn RedirectToAction(nameof(ShowRecoveryCodes));\r\n```\r\n\r\n3. Create a new method in `Controllers\\ManageController.cs` called `ShowRecoveryCodes()` with the following code\r\n\r\n```C#\r\n[HttpGet]\r\npublic IActionResult ShowRecoveryCodes()\r\n{\r\n    var recoveryCodes = (string[])TempData[RecoveryCodesKey];\r\n    if (recoveryCodes == null)\r\n    {\r\n        return RedirectToAction(nameof(TwoFactorAuthentication));\r\n    }\r\n\r\n    var model = new ShowRecoveryCodesViewModel { RecoveryCodes = recoveryCodes };\r\n    return View(model);\r\n}\r\n```\r\n\r\n4. Still in `Controllers\\ManageController.cs` Create a new action method in the controller file, `GenerateRecoveryCodesWarning()` containing the following code\r\n\r\n```C#\r\n[HttpGet]\r\npublic async Task<IActionResult> GenerateRecoveryCodesWarning()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!user.TwoFactorEnabled)\r\n    {\r\n        throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' because they do not have 2FA enabled.\");\r\n    }\r\n\r\n    return View(nameof(GenerateRecoveryCodesWarning));\r\n}\r\n```\r\n\r\n5. Still in `Controllers\\ManageController.cs` file and find the `GenerateRecoveryCodes()` method. The code should look as follows\r\n\r\n```C# \r\n[HttpGet]\r\npublic async Task<IActionResult> GenerateRecoveryCodes()\r\n{\r\n    ...\r\n}\r\n```\r\nReplace the method with the following\r\n\r\n```C#\r\n[HttpPost]\r\n[ValidateAntiForgeryToken]\r\npublic async Task<IActionResult> GenerateRecoveryCodes()\r\n{\r\n    var user = await _userManager.GetUserAsync(User);\r\n    if (user == null)\r\n    {\r\n        throw new ApplicationException($\"Unable to load user with ID '{_userManager.GetUserId(User)}'.\");\r\n    }\r\n\r\n    if (!user.TwoFactorEnabled)\r\n    {\r\n        throw new ApplicationException($\"Cannot generate recovery codes for user with ID '{user.Id}' as they do not have 2FA enabled.\");\r\n    }\r\n\r\n    var recoveryCodes = await _userManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);\r\n    _logger.LogInformation(\"User with ID {UserId} has generated new 2FA recovery codes.\", user.Id);\r\n\r\n    var model = new ShowRecoveryCodesViewModel { RecoveryCodes = recoveryCodes.ToArray() };\r\n\r\n    return View(nameof(ShowRecoveryCodes), model);\r\n}\r\n```\r\n\r\n6. Create a new View in `Views\\Manage\\ShowRecoveryCodes.cshtml` with the following content\r\n\r\n```\r\n@model ShowRecoveryCodesViewModel\r\n@{\r\n    ViewData[\"Title\"] = \"Recovery codes\";\r\n    ViewData.AddActivePage(ManageNavPages.TwoFactorAuthentication);\r\n}\r\n\r\n<h4>@ViewData[\"Title\"]</h4>\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>Put these codes in a safe place.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        @for (var row = 0; row < Model.RecoveryCodes.Length; row += 2)\r\n        {\r\n            <code>@Model.RecoveryCodes[row]</code><text>&nbsp;</text><code>@Model.RecoveryCodes[row + 1]</code><br />\r\n        }\r\n    </div>\r\n</div>\r\n```\r\n\r\n7. Create a new `ShowRecoveryCodesViewModel` class in the `Models\\ManageViewModels` folder and create the class as follows\r\n\r\n```c#\r\npublic class ShowRecoveryCodesViewModel\r\n{\r\n    public string[] RecoveryCodes { get; set; }\r\n}\r\n``` \r\n\r\n8.  Delete the `Models\\ManageViewModels\\generateRecoveryCodesViewModel.cs` file.\r\n\r\n9. Open the `Views\\Manage\\GenerateRecoveryCodes.cshtml` file. Replace the contents with \r\n\r\n```\r\n@{\r\n    ViewData[\"Title\"] = \"Generate two-factor authentication (2FA) recovery codes\";\r\n    ViewData.AddActivePage(ManageNavPages.TwoFactorAuthentication);\r\n}\r\n\r\n<h2>@ViewData[\"Title\"]</h2>\r\n\r\n<div class=\"alert alert-warning\" role=\"alert\">\r\n    <p>\r\n        <span class=\"glyphicon glyphicon-warning-sign\"></span>\r\n        <strong>This action generates new recovery codes.</strong>\r\n    </p>\r\n    <p>\r\n        If you lose your device and don't have the recovery codes you will lose access to your account.\r\n    </p>\r\n    <p>\r\n        Generating new recovery codes does not change the keys used in authenticator apps. If you wish to change the key\r\n        used in an authenticator app you should <a asp-action=\"ResetAuthenticatorWarning\">reset your authenticator keys.</a>\r\n    </p>\r\n</div>\r\n\r\n<div>\r\n    <form asp-action=\"GenerateRecoveryCodes\" method=\"post\" class=\"form-group\">\r\n        <button class=\"btn btn-danger\" type=\"submit\">Generate Recovery Codes</button>\r\n    </form>\r\n</div>\r\n```\r\n\r\n10. Edit `Views\\Manage\\TwoFactorAuthentication.cshtml` to change `<a asp-action=\"GenerateRecoveryCodes\" class=\"btn btn-default\">Reset recovery codes</a>` to ` <a asp-action=\"GenerateRecoveryCodesWarning\" class=\"btn btn-default\">Reset recovery codes</a>`.\r\n\r\n11. Recompile your application and test you can generate 2fa recovery codes correctly, then redeploy your application.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### Acknowledgments\r\nThanks to Kévin Chalet for reporting this issue.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0785](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0785)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n\r\n  \r\n  \r\n  "}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"958482115208781824","CreatedAt":"2018-01-30T23:28:38+00:00","UserScreenname":"aspnet","Text":"Starting soon: #ASPNET Community Standup at 3:45 PM Pacific / 23:45 GMT.\n\nToday's community links: https://t.co/Va4tu6Rv47","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":11,"RawContent":null},{"Id":"958121957295140864","CreatedAt":"2018-01-29T23:37:30+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup tomorrow at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":3,"RawContent":null},{"Id":"956668144784846849","CreatedAt":"2018-01-25T23:20:34+00:00","UserScreenname":"aspnet","Text":"Just blogged: @Azure Storage for Serverless .NET apps in Minutes.\nhttps://t.co/5vSYYtzt8p","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":83,"FavoriteCount":53,"RawContent":null},{"Id":"956524881121771521","CreatedAt":"2018-01-25T13:51:17+00:00","UserScreenname":"aspnet","Text":"Jeff and Maira - improving https://t.co/y1SqotEH5B LIVE at 10am ET / 15:00 UTC.  Check it out! https://t.co/IXsNIkHfWB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":2,"RawContent":null},{"Id":"955862764530024448","CreatedAt":"2018-01-23T18:00:16+00:00","UserScreenname":"aspnet","Text":"Starting now: #ASPNET Community Standup with Ryan Nowak on HttpClientFactory\n\nhttps://t.co/3dFxSj11IQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":16,"FavoriteCount":8,"RawContent":null},{"Id":"955790962739040256","CreatedAt":"2018-01-23T13:14:57+00:00","UserScreenname":"aspnet","Text":"Check out @csharpfritz and @condrong at 10am ET, 15:00 UTC talking about new @AspNet Core features and benefits for… https://t.co/BDz2cgCTrt","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":0,"RawContent":null},{"Id":"955640761793495042","CreatedAt":"2018-01-23T03:18:07+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is Jan 23 10 AM PT / 1800 GMT with special guest Ryan Nowak talking about Htt… https://t.co/5a8Ga9AJNL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":27,"FavoriteCount":10,"RawContent":null},{"Id":"954763537884372997","CreatedAt":"2018-01-20T17:12:20+00:00","UserScreenname":"aspnet","Text":"Jeff is close to his first follower goal!  Follow him on Mixer or Twitch and he will host a FREE workshop live on s… https://t.co/0zBt67tqGg","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":3,"RawContent":null},{"Id":"954724179403837440","CreatedAt":"2018-01-20T14:35:56+00:00","UserScreenname":"aspnet","Text":"Join Jeff at 10am ET (-5:00 UTC) for a live coding stream about .NET, .NET Core, C#, and Visual Studio.  He'll also… https://t.co/Y02invGhm1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":5,"RawContent":null},{"Id":"953279227012542464","CreatedAt":"2018-01-16T14:54:13+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz today to learn more about .NET and ask questions about .NET, .NET Core, Visual Studio or ASPNet. https://t.co/PfmelAvxS2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":7,"RawContent":null},{"Id":"952185961147969537","CreatedAt":"2018-01-13T14:29:58+00:00","UserScreenname":"aspnet","Text":"Our Jeff Fritz (@csharpfritz) will be LIVE CODING again today.  Today's topic is unit testing @AspNet Core projects… https://t.co/H2wBoF77Ri","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":7,"RawContent":null},{"Id":"950775244016332800","CreatedAt":"2018-01-09T17:04:17+00:00","UserScreenname":"aspnet","Text":"Join us for the @aspnet Community Standup at 10 AM Pacific / 18:00 UTC today. We've got special guest… https://t.co/o5WiTdUXQC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":18,"RawContent":null},{"Id":"949414507759124480","CreatedAt":"2018-01-05T22:57:12+00:00","UserScreenname":"aspnet","Text":"Announcing Preview 1 of #ASPNET MVC 5.2.4, Web API 5.2.4, and Web Pages 3.2.4 https://t.co/xVYhW7ospD","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":108,"FavoriteCount":69,"RawContent":null},{"Id":"948916811034234882","CreatedAt":"2018-01-04T13:59:32+00:00","UserScreenname":"aspnet","Text":"At 10am ET, join our Jeff Fritz (@csharpfritz) for LIVE CODING and he'll answer your questions and .NET, ASPNet, an… https://t.co/SPEnBXEEbC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":5,"RawContent":null},{"Id":"948343098278477824","CreatedAt":"2018-01-02T23:59:48+00:00","UserScreenname":"aspnet","Text":"The ASPNET Community Standup is live at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":16,"FavoriteCount":5,"RawContent":null},{"Id":"944564608404205568","CreatedAt":"2017-12-23T13:45:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz - @csharpfritz and MVP @IrisClasson in about an hour for LIVE CODING and pair programming on… https://t.co/RuFa6Hh6S7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":17,"FavoriteCount":5,"RawContent":null},{"Id":"943234846289289217","CreatedAt":"2017-12-19T21:41:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz (@csharpfritz) in a little more than 2 hours for LIVE CODING. He's working on an @aspnet Core p… https://t.co/wEDxxFaCxu","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"942039735207448576","CreatedAt":"2017-12-16T14:32:29+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz in 30 minutes for some LIVE CODING and answering your questions about .NET and Visual Studio.  https://t.co/OakzDOKxUB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2018-02-02T05:30:09.7070255Z","RunDurationInMilliseconds":8371}