{"Data":{"Blog":{"FeedItems":[{"Title":"Performance Improvements in .NET Core 2.1","PublishedOn":"2018-04-18T19:29:45+00:00","CommentsCount":31,"FacebookCount":0,"Summary":"Back before .NET Core 2.0 shipped, I wrote a post highlighting various performance improvements in .NET Core 2.0 when compared with .NET Core 1.1 and the .NET Framework. As .NET Core 2.1 is in its...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/18/performance-improvements-in-net-core-2-1/","RawContent":null},{"Title":".NET Highlights in Visual Studio 2017 version 15.7 Preview 4","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"As you know we continue to incrementally improve Visual Studio 2017 (version 15), and our 7th significant update is currently well under way with the 4th preview shipping today. As we’re winding down...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/18/visual-studio-2017-15-7-preview-4/","RawContent":null},{"Title":".NET Core April 2018 Update","PublishedOn":"2018-04-17T23:50:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core April 2018 Update. This update includes .NET Core 1.0.11, 1.1.8 and 2.0.7. There are no new security fixes in this update. See April 2018 .NET Updates for other...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1 Preview 2","PublishedOn":"2018-04-11T18:02:40+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today we’re releasing the second preview of EF Core 2.1, alongside .NET Core 2.1 Preview 2 and ASP.NET Core 2.1 Preview 2. Thank you so much to everyone who has tried our early builds and has helped...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-entity-framework-core-2-1-preview-2/","RawContent":null},{"Title":"Announcing .NET Core 2.1 Preview 2","PublishedOn":"2018-04-11T17:53:44+00:00","CommentsCount":31,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.1 Preview 2. The release is now ready for broad testing, as we get closer to a final build within the next two to three months. We&#8217;d appreciate any feedback...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/","RawContent":null},{"Title":"Explore Azure Cosmos DB with .NET Core and MongoDB","PublishedOn":"2018-04-09T16:00:47+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Have you had to design general purpose &#8220;metadata&#8221; tables in your SQL database that basically store column names and values? Do you often serialize/de-serialize XML or JSON from your SQL...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/09/explore-cosmosdb-with-net-core-and-mongodb/","RawContent":null},{"Title":"Calling all Desktop Developers: how should UI development be improved?","PublishedOn":"2018-03-23T18:01:31+00:00","CommentsCount":65,"FacebookCount":0,"Summary":"The user interface (UI) of any application is critical in making your app convenient and efficient for the folks using it. When developing applications for Enterprise use, a good UI can shave time off...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/23/calling-all-desktop-developers-how-should-ui-development-be-improved/","RawContent":null},{"Title":".NET Framework 4.7.2 Developer Pack Early Access build 3056 is available!","PublishedOn":"2018-03-08T23:22:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are happy to share an Early Access build with the .NET Framework 4.7.2 Developer Pack. The .NET Framework 4.7.2 Developer Pack lets developers build applications that target the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/08/net-framework-4-7-2-developer-pack-early-access-build-3056-is-available/","RawContent":null},{"Title":"F# language and tools update for Visual Studio 2017 version 15.6","PublishedOn":"2018-03-06T18:28:06+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the release of Visual Studio 2017 version 15.6, we’re excited to share updates to the F# language and core library, F# tooling in Visual Studio, and infrastructure updates that concern OSS...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/06/f-language-and-tools-update-for-visual-studio-2017-version-15-6/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:11:29+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Today we are releasing the first preview of EF Core 2.1, alongside .NET Core 2.1 Preview 1 and ASP.NET Core 2.1 Preview 1. The new bits are available in NuGet as part of the individual packages, and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-entity-framework-core-2-1-preview-1/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7452103949","Type":"PullRequestEvent","CreatedAt":"2018-03-29T07:03:03","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Merged pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7419410563","Type":"IssuesEvent","CreatedAt":"2018-03-22T14:02:36","Actor":"vvavrychuk","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/99","RelatedDescription":"Opened issue \"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux \" (#99) at dotnet/home","RelatedBody":"On the page http://www.microsoft.com/net/learn/get-started/linux dropdown \"Linux Distribution\" has no effect on the installation instruction next to him (they are always displayed for RedHat).\r\n\r\n![screenshot from 2018-03-22 16-02-19](https://user-images.githubusercontent.com/152563/37775020-6ec5778e-2dea-11e8-9ea3-b33e26c1c4e1.png)\r\n"},{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7545995438","Type":"IssuesEvent","CreatedAt":"2018-04-18T00:20:14","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/64","RelatedDescription":"Opened issue \"April 2018 .NET Updates\" (#64) at dotnet/announcements","RelatedBody":"# April 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* No new releases. See: [.NET Framework February 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/).\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core April 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/)\r\n   * [2.0.7 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.0/2.0.7.md)\r\n   * [1.1.8 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.8.md)\r\n   * [1.0.11 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.11.md)\r\n* [.NET Core 2.1 Preview 2](https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n* Latest .NET Core security release: [.NET Core March 2018 Update](https://github.com/dotnet/core/issues/1341)\r\n\r\n## .NET for UWP\r\n\r\n* No new releases. See: [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/).\r\n\r\n## Previous Updates\r\n\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)"},{"Id":"7387413694","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:18:32","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Reopened issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discusses the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7387391842","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:13:45","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Closed issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discussed the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7373349220","Type":"IssuesEvent","CreatedAt":"2018-03-13T17:01:53","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\" (#62) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 2.0 (including other minor and patch releases).\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where a malicious file or web request could cause a denial of service (DoS) attack.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.10, 1.1.7 or 2.0.6. Developers are advised to update their .NET Core SDK to versions 1.1.8 or 2.1.101.\r\n\r\n## Discussion\r\n\r\nUse *TBD* for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nNone\r\n\r\n### Affected Software\r\n\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\nA complete list of runtimes can be discovered by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows\t| `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS\t| `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms\t| `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.10, 1.1.7 and 2.0.6, then any applications targeting the respective major/minor versions, 1.0 or 1.1 or 2.0 of .NET Core are vulnerable.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n#### How do I fix my affected application?\r\n\r\nApplications can be fixed by installing the latest .NET Core runtimes or SDKs. Typically, application servers only have runtime packages installed and developer machines have the SDKs installed. \r\nInstallers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). \r\n.NET Core 1.1.8 SDK installs both versions 1.0.10 and 1.1.7 of the .NET Core runtime.\r\n\r\nIf you've built a self-contained application, you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the `application.runtime.config` file for that application. Set the framework version to the desired version and the `rollForward` property to false. These settings should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nSince the `application.runtime.config` file is an optional file, you may need to create one for each application and add it alongside the executable.\r\n\r\n### Acknowledgments\r\n[Ben Adams](https://twitter.com/ben_a_adams) of [Illyriad Games](https://www.illyriad.co.uk/)\r\n\r\n### External Links\r\n[CVE-2018-0875](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0875)\r\n\r\n### Revisions\r\n\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-03-13_\r\n"},{"Id":"7301596554","Type":"IssuesEvent","CreatedAt":"2018-02-27T06:10:33","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/61","RelatedDescription":"Opened issue \"New offline books released for Visual Studio 2017\" (#61) at dotnet/announcements","RelatedBody":"# New offline books released for Visual Studio 2017\r\n\r\nEarlier this month, we released an update to Offline Books for the Visual Studio 2017 Help Viewer.\r\n\r\nThis release includes new .NET books, including .NET Core Guide, .NET Guide, .NET Framework Guide and the .NET API Reference. It also includes the latest content for Visual Studio 2017 version 15.5, the latest updates to Visual Basic, C# (7.1 and 7.2), F#, ASP.NET Core, NuGet, SQL Server, and the Universal Windows Platform.\r\n\r\nThe .NET Guide, .NET Framework Guide and .NET API Reference books together are a replacement for the .NET Framework 4.6 and 4.5 book, which can be removed. Just be aware that the new .NET API Reference book currently displays the API syntax block for C# only, but examples are shown in other languages, just like the experience you currently have on docs.microsoft.com.If you need to see the API syntax for Visual Basic, C++/CLI or F#, then you should keep the old book until the new reference book is updated again in a few weeks. Once you remove the .NET Framework 4.6 and 4.5 book, you cannot reinstall it.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\n- https://github.com/dotnet/docs/issues/4502\r\n\r\n## Add new content\r\n\r\nYou will see these new books when you have Help Viewer installed and choose **Help** > **Add and Remove Content** from the Visual Studio 2017 main menu. If you don't see this menu item, then [open the Visual Studio Installer](https://docs.microsoft.com/visualstudio/install/modify-visual-studio), click the **More** dropdown and choose **Modify**. When the component list appears, choose **Individual Components** at the top, then check **Help Viewer**.\r\n\r\n![help_viewer_component](https://user-images.githubusercontent.com/12971179/36713111-c9d49a7c-1b40-11e8-918a-e7e3619669a2.png)\r\n\r\n## Help Viewer Installation\r\n\r\nTo start the installation, select the **Modify** button in the lower right corner of the Installer window.\r\n\r\nTo update individual books whose status is \"Updates available\", remove the book and then click **Add** to get the new version. To update all your books at once, select the link in the lower right corner of the **Add and Remove Content** window:\r\n\r\n![offline-books](https://user-images.githubusercontent.com/12971179/36713028-75b944f6-1b40-11e8-91c4-4830355f815e.png)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7559244119","Type":"PullRequestEvent","CreatedAt":"2018-04-20T02:47:53","Actor":"kouvel","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17677","RelatedDescription":"Merged pull request \"Fix nested spin locks in thread pool etw firing\" (#17677) at dotnet/coreclr","RelatedBody":"`UnManagedPerAppDomainTPCount::QueueUnmanagedWorkRequest` fires an ETW event inside a spin lock and a nested spin lock is taken here:\r\n\r\n```\r\nSpinLock::GetLock + 0x8E (0x719da71d)\r\nEventPipeBufferManager::AllocateBufferForThread + 0x7B (0x71afa92e)\r\nEventPipeBufferManager::WriteEvent + 0x250 (0x71afbe0a)\r\nEventPipe::WriteEventInternal + 0x125 (0x71951c93)\r\nEventPipe::WriteEvent + 0x91 (0x71951714)\r\nEventPipeWriteEventThreadPoolEnqueue + 0x9E (0x71d468a6)\r\nFireEtwThreadPoolEnqueue + 0xF (0x71b7a04b)\r\nUnManagedPerAppDomainTPCount::QueueUnmanagedWorkRequest + 0x21D (0x71b7a597)\r\n```\r\n\r\nNesting spin locks is not allowed, moved the ETW firing outside the lock."},{"Id":"7559208273","Type":"IssuesEvent","CreatedAt":"2018-04-20T02:34:55","Actor":"ahsonkhan","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17566","RelatedDescription":"Closed issue \"Suprising sliced ReadOnlySpan Equality with strings\" (#17566) at dotnet/coreclr","RelatedBody":"If a ``ReadOnlySpan`` is sliced the it does not equal an \"equal\" (in sense of char by char) string anymore, but for an unsliced ``ReadOnlySpan`` it does equal it.\r\nAs ``Slice`` can be used for ``SubString``, like described in @stephentoub's article https://msdn.microsoft.com/en-us/magazine/mt814808.aspx this is a bit unexpected.\r\n\r\nRepro\r\n```csharp\r\nstring fullString = \"Hello World and Universe\";\r\nReadOnlySpan<char> span = fullString;\r\nstring partialString = \"Hello World\";\r\nReadOnlySpan<char> partialSpan = span.Slice(0, 11); \r\n\r\nConsole.WriteLine(span == fullString);\r\nConsole.WriteLine(span.ToString() == fullString);\r\n\r\nConsole.WriteLine(partialSpan == partialString);\r\nConsole.WriteLine(partialSpan.ToString() == partialString);\r\n```\r\nThe output is:\r\n```ini\r\nTrue\r\nTrue\r\nFalse\r\nTrue\r\n```\r\n<details>\r\n\r\n```ini\r\n.NET Core SDK (gemäß \"global.json\"):\r\n Version:   2.1.300-preview2-008530\r\n Commit:    822ae6d43a\r\n\r\nLaufzeitumgebung:\r\n OS Name:     Windows\r\n OS Version:  10.0.17133\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.0-preview3-26411-01\r\n  Commit:  38de1bfbb8\r\n\r\n.NET Core SDKs installed:\r\n  1.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300-preview2-008530 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-preview2-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-preview2-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview2-26406-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview3-26411-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```\r\n</details>"},{"Id":"7559176632","Type":"PullRequestEvent","CreatedAt":"2018-04-20T02:23:55","Actor":"adityamandaleeka","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17694","RelatedDescription":"Opened pull request \"Account for copied bytes in struct copy loop when generating GT_PUTARG_STK code [ARM64]\" (#17694) at dotnet/coreclr","RelatedBody":"When generating code for a GT_PUTARG_STK where there's an HFA struct being passed on the stack, we have a loop that copies the struct 16 bytes at a time with ldp/stp. However, in the case where we have a var node for the struct, we weren't increasing the offset of the ldp to account for the portion of the struct we've already copied. Thus, a struct with size 16*_n_ would just end up having _n_ copies of its first 16 bytes.\r\n\r\nThe fix is simple: instead of hardcoding the offset to 0 when we emit the ldp, we set it to be the number of bytes we've copied, which is conveniently already captured for us in `structOffset`.\r\n\r\n@BruceForstall @jkotas @janvorli "},{"Id":"7559145270","Type":"IssuesEvent","CreatedAt":"2018-04-20T02:12:56","Actor":"rajivharris","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17693","RelatedDescription":"Opened issue \"[clrdbg] Add support for inline values\" (#17693) at dotnet/coreclr","RelatedBody":"VSCode Debugger Protocol now supports inline values for variables when debugging. It would be great if vsdbg/vsdbg-ui adds support for this.\r\n\r\nDebugger Protocol:\r\n[https://github.com/Microsoft/vscode-debugadapter-node/issues/78](url)\r\n[https://github.com/Microsoft/vscode-debugadapter-node/blob/896566e0be3f48e5cf90fb715b3b3ffbfa777888/protocol/src/debugProtocol.ts#L1329-L1337](url)\r\n\r\nVSCode Support:\r\n[https://github.com/Microsoft/vscode/pull/16129](url)"},{"Id":"7558916964","Type":"IssuesEvent","CreatedAt":"2018-04-20T00:49:52","Actor":"nbilling","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17692","RelatedDescription":"Opened issue \"Mscordbi uses incorrect layout for MDInternalRW.\" (#17692) at dotnet/coreclr","RelatedBody":"Mscordbi uses incorrect layout for MDInternalRW when marshaling to Target_MDInternalRW, in a couple of places. Specifically for Target_RecordPool (aligned to 4 bytes on Linux rather than 8) and Target_MapSHash (don't need to skip a byte at the beginning of struct on Linux). The mismatch causes CordbModule::GetMetadataInterface to fail for dump debugging on Linux."},{"Id":"7558897670","Type":"PullRequestEvent","CreatedAt":"2018-04-20T00:42:24","Actor":"fiigii","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17691","RelatedDescription":"Opened pull request \"Fix SSE2 SetZeroVector128 on float type\" (#17691) at dotnet/coreclr","RelatedBody":"fix https://github.com/dotnet/coreclr/issues/17689\r\n\r\n@CarolEidt PTAL"},{"Id":"7558887099","Type":"IssuesEvent","CreatedAt":"2018-04-20T00:38:25","Actor":"gregg-miskelly","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17690","RelatedDescription":"Opened issue \"ThirdPartyNotices.txt in installer/packages is missing entries\" (#17690) at dotnet/coreclr","RelatedBody":"Repro steps:\r\n1. Download https://www.nuget.org/packages/runtime.linux-x64.Microsoft.NETCore.App/2.1.0-preview2-26406-04\r\n2. Look at THIRD-PARTY-NOTICES.TXT\r\n\r\nExpected:\r\nThis should call out all of CoreCLR's Third Party Notices. An example missing one is libunwind8. I believe the complete list can be found at https://github.com/dotnet/coreclr/blob/release/2.1/THIRD-PARTY-NOTICES.TXT\r\n\r\nActual:\r\n[THIRD-PARTY-NOTICES.TXT](https://github.com/dotnet/coreclr/files/1930160/THIRD-PARTY-NOTICES.TXT)\r\n\r\n\r\nThere is a similar problem when installing the .NET SDK (and maybe runtime?) - there is a ThirdPartyNotices.txt (laid down to /usr/share/dotnet/ThirdPartyNotices.txt and c:\\Program Files\\dotnet\\ThirdPartyNotices.txt), but this is also missing many items from this repo's Third-Party-Notices, including libunwind8 again.\r\n"},{"Id":"7558886519","Type":"IssuesEvent","CreatedAt":"2018-04-20T00:38:12","Actor":"fiigii","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17689","RelatedDescription":"Opened issue \"[RyuJIT] SSE2 SetZeroVector128 does not support float base type \" (#17689) at dotnet/coreclr","RelatedBody":"`Sse2.SetZeroVector128<T>` is a generic helper intrinsic that should generate SSE `xorps` instruction for `Vector128<float>`. "},{"Id":"7558838577","Type":"PullRequestEvent","CreatedAt":"2018-04-20T00:20:05","Actor":"briansull","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17688","RelatedDescription":"Opened pull request \"Fix for Retail/Checked Asm diffs\" (#17688) at dotnet/coreclr","RelatedBody":"Check for retail config for EnableAVX\r\nAlso disable AVX2 whenever AVX is disabled\r\n"},{"Id":"7558831251","Type":"IssuesEvent","CreatedAt":"2018-04-20T00:17:20","Actor":"sebastienros","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17687","RelatedDescription":"Opened issue \"Lower memory usage, expected?\" (#17687) at dotnet/coreclr","RelatedBody":"On the reliability testing we are doing in the aspnet team, I noticed a drop in memory usage around April 11-12. Is this something that could be explained by Server GC changes?\r\n\r\n| OS | Before (MB) | After (MB) | Delta |\r\n| -- | -- | -- | -- |\r\n| Linux | 430 | 360 |  -27% |\r\n| Windows | 345 | 245 | -29% |\r\n\r\nThis graph show the Windows consumption overtime. The application was the same, the load constant. Only ASP.NET and the runtime were updated. (MVC + EF + Razor). CPU usage remained constant.\r\n\r\n![image](https://user-images.githubusercontent.com/1165805/39024187-0436c0d8-43f4-11e8-82ff-6d30b7e07985.png)\r\n\r\nIf this is not expected I might be able to run the app with the version that were used and get some dumps/traces. It can also be related to changes in other repos but I am trying here first."},{"Id":"7558794837","Type":"IssuesEvent","CreatedAt":"2018-04-20T00:03:49","Actor":"sebastienros","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17686","RelatedDescription":"Opened issue \"'perfcollect install' fails on official dotnet docker images\" (#17686) at dotnet/coreclr","RelatedBody":"In a `microsoft/dotnet:2.0-sdk-jessie` image, running `perfcollect install` errors with an unsupported linux distribution. `uname` returns `Linux` which isn't handled.\r\n\r\nI tried to install manually based on `Debian` instructions, however after installing `zip` and `linux-tools` I still get a \r\n\r\n```\r\nPerf not installed.\r\nInstall perf to proceed.\r\n```"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7559113017","Type":"IssuesEvent","CreatedAt":"2018-04-20T02:01:31","Actor":"natemcmaster","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9105","RelatedDescription":"Opened issue \"`dotnet.exe msbuild` exits code 1 even if MSBuild succeeds\" (#9105) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nSo far, this only reproduces on our Windows 2012 R2 machines, but **it is consistent**. I can get you access to a machine to investigate more.\r\n\r\nWe are trying to upgrade ASP.NET Core to build with the 2.1.300-preview3-008646 SDK. \r\nPreviously we were building with 2.1.300-preview2-008530. https://github.com/aspnet/BuildTools/commit/ed5ca9de3c652347dbb0158a9a65eff3471d2114\r\n\r\n## Expected  behavior\r\n\r\nExit code 0 when a build completes\r\n\r\n## Actual behavior\r\n\r\ndotnet.exe exits code 1, even though MSBuild succeeds.\r\n\r\n```\r\n[18:35:10]  EventNotification     | \r\n[18:35:10]  EventNotification     | Build succeeded.\r\n[18:35:10]  EventNotification     |     0 Warning(s)\r\n[18:35:10]  EventNotification     |     0 Error(s)\r\n[18:35:10]  EventNotification     | \r\n[18:35:10]  EventNotification     | Time Elapsed 00:00:37.68\r\n[18:35:11]  dotnet.exe failed with exit code: 1\r\n[18:35:11]  At C:\\b\\w\\6e78c7aba2f17cd5\\.dotnet\\buildtools\\korebuild\\2.1.0-rc1-15774\\scripts\r\n[18:35:11]  \\common.psm1:11 char:9\r\n[18:35:11]  +         throw \"$cmdName failed with exit code: $exitCode\"\r\n[18:35:11]  +         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n[18:35:11]      + CategoryInfo          : OperationStopped: (dotnet.exe failed with exit c \r\n[18:35:11]     ode: 1:String) [], RuntimeException\r\n[18:35:11]      + FullyQualifiedErrorId : dotnet.exe failed with exit code: 1\r\n```\r\n![image](https://user-images.githubusercontent.com/2696087/39026843-fbb3a498-4403-11e8-99fd-38668d8285e4.png)\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n2.1.300-preview3-008646\r\n\r\ncc @muratg @pranavkm \r\n\r\n\r\n\r\n"},{"Id":"7558765343","Type":"IssuesEvent","CreatedAt":"2018-04-19T23:53:23","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7687","RelatedDescription":"Closed issue \"\"dotnet new mvc -lang f#\" failing with switch \"-au\" on Windows 10 64 bit\" (#7687) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n1. dotnet new mvc -lang F# -o AspNetCoreFS -au Individual\r\n\r\n## Expected  behavior\r\n\r\nGenerate an F# mvc web site.  (--help says that this can be done.)\r\n\r\n## Actual behavior\r\n\r\nFails with error:\r\n```\r\nInvalid input switch:\r\n  -au\r\n  Individual\r\nRun dotnet new mvc --help for usage information.\r\nSee https://aka.ms/dotnet-install-templates to learn how to install additional template packs.\r\n```\r\n(CSharp mvc is generated as expected.)\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.14393\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.0\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7558747287","Type":"IssuesEvent","CreatedAt":"2018-04-19T23:46:59","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9095","RelatedDescription":"Closed issue \"2.1.105 SDK package isn't installing aspnetcore-store packages\" (#9095) at dotnet/cli","RelatedBody":"I installed the dotnet-sdk-2.1.105 package on an Ubuntu 16.04 machine and then removed the 2.1.104 package, and I noticed that the aspnetcore-store packages were eligible for auto-removal.\r\n\r\nIt looks like the 2.1.105 package doesn't have the correct dependency to bring in the runtime store packages like previous SDKs do.\r\n\r\nLooking at the tarball version of the 2.1.105 SDK, I see that the store files are still in there, so I suspect this change isn't intentional.\r\n\r\n@natemcmaster \r\n\r\n"},{"Id":"7558746539","Type":"PullRequestEvent","CreatedAt":"2018-04-19T23:46:42","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9096","RelatedDescription":"Merged pull request \"Fix .deb and .rpm dependency on the aspnetcore-store package \" (#9096) at dotnet/cli","RelatedBody":"Fixes https://github.com/dotnet/cli/issues/9095\r\n\r\nIn cleaning up some targets for 2.1.105, I missed that the <AspNetCoreRuntimePackageName> property needed to be set in both Installer.RPM.targets _and_ Installer.DEB.targets.\r\n\r\nChanges:\r\n - add tests that would have caught this error in the first place\r\n - fix the targets to include correctly a dependency on aspnetcore-store for 2.1.1xx builds"},{"Id":"7558705778","Type":"IssuesEvent","CreatedAt":"2018-04-19T23:32:39","Actor":"nguerrera","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/9092","RelatedDescription":"Closed issue \"dotnet store crashed with The process cannot access the file rs.assets.cache\" (#9092) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n1.\r\n```\r\n> cat D:\\temp\\store\\rs.csproj\r\n\r\n<Project Sdk=\"Microsoft.NET.Sdk\"><ItemGroup>\r\n<PackageReference Include=\"Microsoft.AspNetCore.AzureAppServices.HostingStartup\" Version=\"2.1.0-preview2-final\" />\r\n<PackageReference Include=\"Microsoft.AspNetCore.Hosting\" Version=\"2.1.0-preview2-final\" />\r\n</ItemGroup></Project>\r\n```\r\n2. \r\n`dotnet.exe store -m d:\\temp\\store\\rs.csproj -f netcoreapp2.1 --framework-version 2.1.0-preview3-26413-05 -r win7-x64 --output d:\\temp\\store --skip-optimization`\r\n\r\n\r\n## Expected  behavior\r\nNo error\r\n\r\n\r\n## Actual behavior\r\n```\r\nicrosoft (R) Build Engine version 15.7.145.53551 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring packages for d:\\temp\\store\\rs.csproj...\r\n  Restoring packages for d:\\temp\\store\\rs.csproj...\r\n  Generating MSBuild file C:\\Users\\pakrymet\\AppData\\Local\\Temp\\2yki0y3w.r4a\\Microsoft.AspNetCore.Hosting_2.1.0-preview2-final\\rs.csproj.nuget.g.props.\r\n  Generating MSBuild file C:\\Users\\pakrymet\\AppData\\Local\\Temp\\2yki0y3w.r4a\\Microsoft.AspNetCore.Hosting_2.1.0-preview2-final\\rs.csproj.nuget.g.targets.\r\n  Restore completed in 338.28 ms for d:\\temp\\store\\rs.csproj.\r\n  Generating MSBuild file C:\\Users\\pakrymet\\AppData\\Local\\Temp\\2yki0y3w.r4a\\Microsoft.AspNetCore.AzureAppServices.HostingStartup_2.1.0-preview2-final\\rs.csproj.nuget.g.props.\r\n  Generating MSBuild file C:\\Users\\pakrymet\\AppData\\Local\\Temp\\2yki0y3w.r4a\\Microsoft.AspNetCore.AzureAppServices.HostingStartup_2.1.0-preview2-final\\rs.csproj.nuget.g.targets.\r\n  Restore completed in 518.21 ms for d:\\temp\\store\\rs.csproj.\r\nC:\\Users\\pakrymet\\.dotnet\\x64\\sdk\\2.1.300-preview2-008533\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(201,5): error MSB4018: The \"ResolvePackageAssets\" task failed unexpectedly. [d:\\temp\\store\\rs.csproj]\r\nC:\\Users\\pakrymet\\.dotnet\\x64\\sdk\\2.1.300-preview2-008533\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(201,5): error MSB4018: System.IO.IOException: The process cannot access the file 'd:\\temp\\store\\obj\\Debug\\netcoreapp2.1\\win7-x64\\rs.assets.cache' because it is being used by another process. [d:\\temp\\store\\rs.csproj]\r\nC:\\Users\\pakrymet\\.dotnet\\x64\\sdk\\2.1.300-preview2-008533\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(201,5): error MSB4018:    at System.IO.FileStream.ValidateFileHandle(SafeFileHandle fileHandle) [d:\\temp\\store\\rs.csproj]\r\nC:\\Users\\pakrymet\\.dotnet\\x64\\sdk\\2.1.300-preview2-008533\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(201,5): error MSB4018:    at System.IO.FileStream.CreateFileOpenHandle(FileMode mode, FileShare share, FileOptions options) [d:\\temp\\store\\rs.csproj]\r\nC:\\Users\\pakrymet\\.dotnet\\x64\\sdk\\2.1.300-preview2-008533\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(201,5): error MSB4018:    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options) [d:\\temp\\store\\rs.csproj]\r\nC:\\Users\\pakrymet\\.dotnet\\x64\\sdk\\2.1.300-preview2-008533\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(201,5): error MSB4018:    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share) [d:\\temp\\store\\rs.csproj]\r\nC:\\Users\\pakrymet\\.dotnet\\x64\\sdk\\2.1.300-preview2-008533\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(201,5): error MSB4018:    at System.IO.File.Open(String path, FileMode mode, FileAccess access, FileShare share) [d:\\temp\\store\\rs.csproj]\r\nC:\\Users\\pakrymet\\.dotnet\\x64\\sdk\\2.1.300-preview2-008533\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(201,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheWriter..ctor(ResolvePackageAssets task, Stream stream) [d:\\temp\\store\\rs.csproj]\r\nC:\\Users\\pakrymet\\.dotnet\\x64\\sdk\\2.1.300-preview2-008533\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(201,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.CreateReaderFromDisk(ResolvePackageAssets task, Byte[] settingsHash) [d:\\temp\\store\\rs.csproj]\r\nC:\\Users\\pakrymet\\.dotnet\\x64\\sdk\\2.1.300-preview2-008533\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(201,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader..ctor(ResolvePackageAssets task) [d:\\temp\\store\\rs.csproj]\r\nC:\\Users\\pakrymet\\.dotnet\\x64\\sdk\\2.1.300-preview2-008533\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(201,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ReadItemGroups() [d:\\temp\\store\\rs.csproj]\r\nC:\\Users\\pakrymet\\.dotnet\\x64\\sdk\\2.1.300-preview2-008533\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(201,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ExecuteCore() [d:\\temp\\store\\rs.csproj]\r\nC:\\Users\\pakrymet\\.dotnet\\x64\\sdk\\2.1.300-preview2-008533\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(201,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() [d:\\temp\\store\\rs.csproj]\r\nC:\\Users\\pakrymet\\.dotnet\\x64\\sdk\\2.1.300-preview2-008533\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(201,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [d:\\temp\\store\\rs.csproj]\r\nC:\\Users\\pakrymet\\.dotnet\\x64\\sdk\\2.1.300-preview2-008533\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(201,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [d:\\temp\\store\\rs.csproj]\r\n  Files were composed in d:\\temp\\store\\x64\\netcoreapp2.1\\\r\n  The list of packages stored is in d:\\temp\\store\\x64\\netcoreapp2.1\\artifact.xml\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.300-preview2-008533\r\n Commit:    996eb6c92c\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Users\\pakrymet\\.dotnet\\x64\\sdk\\2.1.300-preview2-008533\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.0-preview3-26413-05\r\n  Commit:  967b9806b2\r\n\r\n```\r\n\r\nMarking as blocking partner as this breaks ASP.NET Core site extension build.\r\n\r\n\r\n\r\n"},{"Id":"7558662720","Type":"PullRequestEvent","CreatedAt":"2018-04-19T23:18:39","Actor":"weshaggard","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9104","RelatedDescription":"Opened pull request \"Replace alpine with linux-musl builds\" (#9104) at dotnet/cli","RelatedBody":"We still build linux-musl on the alpine OS but we no longer\r\nproduce a alpine installer/tar file instead we just have the\r\nlinux-musl version.\r\n\r\ncc @eerhardt @johnbeisner @livarcocc @janvorli \r\n\r\nThis is pretty close to a find-release of alpine3.6 with linux-musl. I suspect we also need to make changes to the official build definitions which I will do once this merges. "},{"Id":"7558499535","Type":"PullRequestEvent","CreatedAt":"2018-04-19T22:29:12","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9101","RelatedDescription":"Merged pull request \"Updating CLI branding to RC1\" (#9101) at dotnet/cli","RelatedBody":""},{"Id":"7558275021","Type":"IssuesEvent","CreatedAt":"2018-04-19T21:34:32","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9103","RelatedDescription":"Opened issue \"Remove -f short hand in dotnet tool install\" (#9103) at dotnet/cli","RelatedBody":"`--framework` usage in `dotnet tool install` and `update` is uncommon, it is not necessary to take the shorthand `-f`. And  `-f` can be used for future commands\r\n\r\nhttps://github.com/dotnet/cli/issues/9073#issuecomment-382138783\r\nhttps://github.com/dotnet/cli/issues/9064#issuecomment-382240361 \r\n"},{"Id":"7558243764","Type":"PullRequestEvent","CreatedAt":"2018-04-19T21:27:42","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9102","RelatedDescription":"Opened pull request \"Remove -f short hand in dotnet tool install\" (#9102) at dotnet/cli","RelatedBody":""}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7558497238","Type":"PullRequestEvent","CreatedAt":"2018-04-19T22:28:34","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/715","RelatedDescription":"Opened pull request \"Update BuildTools to preview1-02719-03 (master)\" (#715) at dotnet/standard","RelatedBody":""},{"Id":"7558201336","Type":"PullRequestEvent","CreatedAt":"2018-04-19T21:18:29","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/714","RelatedDescription":"Merged pull request \"Mark 2.0.3 version of NETStandard.Library package stable\" (#714) at dotnet/standard","RelatedBody":"Release notes for 2.0.3:\r\n - Issue https://github.com/dotnet/standard/issues/708 Wrong reference path in NETStandard.Library.targets - fixed in https://github.com/dotnet/standard/pull/713"},{"Id":"7557781012","Type":"PullRequestEvent","CreatedAt":"2018-04-19T19:53:40","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/714","RelatedDescription":"Opened pull request \"Mark 2.0.3 version of NETStandard.Library package stable\" (#714) at dotnet/standard","RelatedBody":"Release notes for 2.0.3:\r\n - Issue https://github.com/dotnet/standard/issues/708 Wrong reference path in NETStandard.Library.targets - fixed in https://github.com/dotnet/standard/pull/713"},{"Id":"7557590498","Type":"PullRequestEvent","CreatedAt":"2018-04-19T19:16:00","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/713","RelatedDescription":"Merged pull request \"[release/2.0.0] Fix old project system warnings\" (#713) at dotnet/standard","RelatedBody":"When NETStandard.Library was referenced in a .NETFramework project using the old project system,\r\nit would evaluate the project ignoring conditions on ItemGroups. Apparently this is done to\r\ndisplay the superset of project configurations (eg both debug and release) in the solution heirarchy.\r\nThe warnings were a result of the items never being resolved after design time build finished\r\nresolving references (because of course the items were conditioned out for the target framework).\r\n\r\nWe can workaround this using choose/when. Apparently the evaluation of the project is bold\r\nenough to ignore the conditions on an itemgroup, but not bold enough to choose one of many\r\nwhen (or all) clauses. :)\r\n\r\nFixes #708\r\n\r\nRelease version of https://github.com/dotnet/standard/pull/710"},{"Id":"7557190776","Type":"IssuesEvent","CreatedAt":"2018-04-19T17:59:07","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/standard/issues/708","RelatedDescription":"Reopened issue \"Wrong reference path in NETStandard.Library.targets\" (#708) at dotnet/standard","RelatedBody":"@cannehag commented on [Thu Apr 12 2018](https://github.com/dotnet/core/issues/1440)\n\n# After installing NetStandard.Library 2.0.2, a lot of warning occur.\r\nNetStandard.Library.targets 2.0.2 have \r\n<Reference Include=\"$(MSBuildThisFileDirectory)\\ref\\Microsoft.Win32.Primitives.dll...\r\nAccording to documentation MSBuildThisFileDirectory will include a final slash, thus giving a path with double slash and the error message \r\nThe referenced component 'C:\\Users\\xxx\\.nuget\\packages\\netstandard.library\\2.0.2\\build\\netstandard2.0\\\\ref\\Microsoft.Win32.Primitives.dll could not be found'\r\n\r\nVersion 2.0.1 does not have this issue since the targets file is including *.dll from another path\r\n<ReferenceCopyLocalPaths Condition=\"'$(_NetStandardLibraryLibPath)' != ''\" Include=\"$(_NetStandardLibraryLibPath)*.dll\">\r\n\n\n---\n\n@elementalpete commented on [Mon Apr 16 2018](https://github.com/dotnet/core/issues/1440#issuecomment-381640157)\n\nI experienced the same issue after upgrading (path in warning message contains a double slash, actual path has only a single slash).  Downgrading to 2.0.1 solved the issue for now.\n\n"},{"Id":"7556486567","Type":"PullRequestEvent","CreatedAt":"2018-04-19T15:48:46","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/711","RelatedDescription":"Merged pull request \"Update BuildTools to preview1-02719-02 (master)\" (#711) at dotnet/standard","RelatedBody":""},{"Id":"7556361699","Type":"PullRequestEvent","CreatedAt":"2018-04-19T15:29:23","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/713","RelatedDescription":"Opened pull request \"[release/2.0.0] Fix old project system warnings\" (#713) at dotnet/standard","RelatedBody":"When NETStandard.Library was referenced in a .NETFramework project using the old project system,\r\nit would evaluate the project ignoring conditions on ItemGroups. Apparently this is done to\r\ndisplay the superset of project configurations (eg both debug and release) in the solution heirarchy.\r\nThe warnings were a result of the items never being resolved after design time build finished\r\nresolving references (because of course the items were conditioned out for the target framework).\r\n\r\nWe can workaround this using choose/when. Apparently the evaluation of the project is bold\r\nenough to ignore the conditions on an itemgroup, but not bold enough to choose one of many\r\nwhen (or all) clauses. :)\r\n\r\nFixes #708\r\n\r\nRelease version of https://github.com/dotnet/standard/pull/710"},{"Id":"7551243488","Type":"IssuesEvent","CreatedAt":"2018-04-18T19:29:00","Actor":"slozier","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/712","RelatedDescription":"Opened issue \"Is System.Reflection.Emit compatible with .NET Standard 2.0?\" (#712) at dotnet/standard","RelatedBody":"I seem to recall reading somewhere that the System.Reflection.Emit package probably shouldn't be used with .NET Standard 2.0. Is this correct? The issue I have is that users would like us (IronPython) to target netstandard2.0 and since it compiles fine when we reference the package they assume that this is correct. If this scenario is not supported then I'd rather not mislead them. If these should not be used together are there any plans to prevent the package from being referenced from a netstandard2.0 project?"},{"Id":"7550895308","Type":"PullRequestEvent","CreatedAt":"2018-04-18T18:21:27","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/711","RelatedDescription":"Opened pull request \"Update BuildTools to preview3-02718-02 (master)\" (#711) at dotnet/standard","RelatedBody":""},{"Id":"7550348911","Type":"PullRequestEvent","CreatedAt":"2018-04-18T16:37:41","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/709","RelatedDescription":"Merged pull request \"Update BuildTools to preview3-02717-01 (master)\" (#709) at dotnet/standard","RelatedBody":""},{"Id":"7550065613","Type":"PullRequestEvent","CreatedAt":"2018-04-18T15:48:36","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/710","RelatedDescription":"Merged pull request \"Fix old project system warnings\" (#710) at dotnet/standard","RelatedBody":"When NETStandard.Library was referenced in a .NETFramework project using the old project system,\r\nit would evaluate the project ignoring conditions on ItemGroups.  Apparently this is done to\r\ndisplay the superset of project configurations (eg both debug and release) in the solution heirarchy.\r\nThe warnings were a result of the items never being resolved after design time build finished\r\nresolving references (because of course the items were conditioned out for the target framework).\r\n\r\nWe can workaround this using choose/when.  Apparently the evaluation of the project is bold\r\nenough to ignore the conditions on an itemgroup, but not bold enough to choose one of many\r\nwhen (or all) clauses. :)\r\n\r\nFixes #708 "},{"Id":"7550065599","Type":"IssuesEvent","CreatedAt":"2018-04-18T15:48:35","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/708","RelatedDescription":"Closed issue \"Wrong reference path in NETStandard.Library.targets\" (#708) at dotnet/standard","RelatedBody":"@cannehag commented on [Thu Apr 12 2018](https://github.com/dotnet/core/issues/1440)\n\n# After installing NetStandard.Library 2.0.2, a lot of warning occur.\r\nNetStandard.Library.targets 2.0.2 have \r\n<Reference Include=\"$(MSBuildThisFileDirectory)\\ref\\Microsoft.Win32.Primitives.dll...\r\nAccording to documentation MSBuildThisFileDirectory will include a final slash, thus giving a path with double slash and the error message \r\nThe referenced component 'C:\\Users\\xxx\\.nuget\\packages\\netstandard.library\\2.0.2\\build\\netstandard2.0\\\\ref\\Microsoft.Win32.Primitives.dll could not be found'\r\n\r\nVersion 2.0.1 does not have this issue since the targets file is including *.dll from another path\r\n<ReferenceCopyLocalPaths Condition=\"'$(_NetStandardLibraryLibPath)' != ''\" Include=\"$(_NetStandardLibraryLibPath)*.dll\">\r\n\n\n---\n\n@elementalpete commented on [Mon Apr 16 2018](https://github.com/dotnet/core/issues/1440#issuecomment-381640157)\n\nI experienced the same issue after upgrading (path in warning message contains a double slash, actual path has only a single slash).  Downgrading to 2.0.1 solved the issue for now.\n\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7559639511","Type":"PullRequestEvent","CreatedAt":"2018-04-20T05:22:38","Actor":"rmkerr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29233","RelatedDescription":"Opened pull request \"[release/2.1] Ensure LocalCertificateSelectionCallback is still called with AuthetnicateAsServerAsync\" (#29233) at dotnet/corefx","RelatedBody":"In .NET Core 2.0, we call LocalCertificateSelectionCallback to choose the certificate during AuthenticateAsServerAsync. As part of adding support for SNI, this functionality was removed. However, some users have already implemented SNI using LocalCertificateSelectionCallback, and we should aim to maintain compatibility for them.\r\n\r\nThis change ensures that we maintain the old behavior of LocalCertificateSelectionCallback when the new SNI callback is not set.\r\n\r\nThe fix has been merged into master in [this commit](https://github.com/dotnet/corefx/commit/eeea6babf28188887f99aa0b459dc5877b39f31e).\r\n\r\nSee issue #29110 for details.\r\n\r\ncc: @karelz \r\n\r\n"},{"Id":"7559521773","Type":"PullRequestEvent","CreatedAt":"2018-04-20T04:33:10","Actor":"rmkerr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29167","RelatedDescription":"Merged pull request \"Ensure LocalCertificateSelectionCallback is still called with AuthenticateAsServerAsync\" (#29167) at dotnet/corefx","RelatedBody":"In .NET Core 2.0, we call `LocalCertificateSelectionCallback` to choose the certificate during `AuthenticateAsServerAsync`. As part of adding support for SNI, this functionality was removed. However, some users have already implemented SNI using `LocalCertificateSelectionCallback`, and we should aim to maintain compatibility for them.\r\n\r\nThis change ensures that we maintain the old behavior of `LocalCertificateSelectionCallback` when the new SNI callback is not set. When both are set, we default to the new behavior. I also added two tests to verify this behavior.\r\n\r\nFixes: #29110"},{"Id":"7559521769","Type":"IssuesEvent","CreatedAt":"2018-04-20T04:33:10","Actor":"rmkerr","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/29110","RelatedDescription":"Closed issue \"SslStream LocalCertificateSelectionCallback\" (#29110) at dotnet/corefx","RelatedBody":"The LocalCertificateSelectionCallback of SslStream is not called anymore on .Net Core 2.1 Preview. I looked in the code and it seems someone was trying to replace it with another callback but didn't finish the implementation. \r\n\r\nWe need this for SNI, please fix this for the release."},{"Id":"7559378394","Type":"IssuesEvent","CreatedAt":"2018-04-20T03:35:36","Actor":"joshgarnett","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/29232","RelatedDescription":"Opened issue \"Add cross platform support for PerformanceCounters\" (#29232) at dotnet/corefx","RelatedBody":"The recent addition of PerformanceCounters to 2.1 only supports Windows.  It would be great to offer a cross platform solution that worked on OSX & Windows as well.    The main categories that come to mind are .NET CLR Memory (Gen[0-2,Large] Heap Size, % Time in GC, etc...), .NET CLR LocksAndThreads, .NET CLR Jit, .NET CLR Exceptions, and Process."},{"Id":"7559297946","Type":"PullRequestEvent","CreatedAt":"2018-04-20T03:06:45","Actor":"AlexRadch","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29231","RelatedDescription":"Opened pull request \"Created ReadOnlySequence GetPositionAndSliceAreEqual test and fixed where was not\" (#29231) at dotnet/corefx","RelatedBody":"Created ReadOnlySequence GetPositionAndSliceAreEqual test to test that all GetPosition methods and Slice methods return the same result for the same input parameters. Fixed where was not."},{"Id":"7559290665","Type":"PullRequestEvent","CreatedAt":"2018-04-20T03:04:07","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29230","RelatedDescription":"Opened pull request \"Update ApiCompatBaseline for uapaot for System.Runtime\" (#29230) at dotnet/corefx","RelatedBody":"Leftover from https://github.com/dotnet/corefx/pull/29138.\r\n\r\ncc @jkotas, @morganbr"},{"Id":"7559230879","Type":"PullRequestEvent","CreatedAt":"2018-04-20T02:43:09","Actor":"jorive","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29229","RelatedDescription":"Opened pull request \"Update to a xUnit Performance Api that has a bigger Etw buffer size.\" (#29229) at dotnet/corefx","RelatedBody":"These change is to alleviate the frequent failures on the Concurrent tests due to the lost of events, which blocks uploading any data on Windows."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7559415175","Type":"PullRequestEvent","CreatedAt":"2018-04-20T03:49:30","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26275","RelatedDescription":"Opened pull request \"Merge latest bits from master into features/async-streams\" (#26275) at dotnet/roslyn","RelatedBody":""},{"Id":"7559249332","Type":"PullRequestEvent","CreatedAt":"2018-04-20T02:49:43","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24189","RelatedDescription":"Closed pull request \"Update to ILSpy 3.0.0.3447\" (#24189) at dotnet/roslyn","RelatedBody":"<details><summary>Ask Mode template not completed</summary>\r\n\r\n<!-- This template is not always required. If you aren't sure about whether it's needed or want help filling out the sections,\r\nsubmit the pull request and then ask us for help. :) -->\r\n\r\n### Customer scenario\r\n\r\nWhat does the customer do to get into this situation, and why do we think this\r\nis common enough to address for this release.  (Granted, sometimes this will be\r\nobvious \"Open project, VS crashes\" but in general, I need to understand how\r\ncommon a scenario is)\r\n\r\n### Bugs this fixes\r\n\r\n(either VSO or GitHub links)\r\n\r\n### Workarounds, if any\r\n\r\nAlso, why we think they are insufficient for RC vs. RC2, RC3, or RTW\r\n\r\n### Risk\r\n\r\nThis is generally a measure our how central the affected code is to adjacent\r\nscenarios and thus how likely your fix is to destabilize a broader area of code\r\n\r\n### Performance impact\r\n\r\n(with a brief justification for that assessment (e.g. \"Low perf impact because no extra allocations/no complexity changes\" vs. \"Low\")\r\n\r\n### Is this a regression from a previous update?\r\n\r\n### Root cause analysis\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n### How was the bug found?\r\n\r\n(E.g. customer reported it vs. ad hoc testing)\r\n\r\n### Test documentation updated?\r\n\r\nIf this is a new non-compiler feature or a significant improvement to an existing feature, update https://github.com/dotnet/roslyn/wiki/Manual-Testing once you know which release it is targeting.\r\n\r\n</details>\r\n"},{"Id":"7559112358","Type":"PullRequestEvent","CreatedAt":"2018-04-20T02:01:17","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25928","RelatedDescription":"Merged pull request \"Prototype mechanism for adding annotations to BCL APIs\" (#25928) at dotnet/roslyn","RelatedBody":"This is a minimalistic implementation, which can be expanded as we want to annotate new APIs.\r\nAPIs that are useful to annotate: (1) don't accept null input, (2) can return null, or (3) never return null.\r\n\r\nStill investigating one more regression (`DynamicEncodingDecoding_01`, a test where some nullable symbols appear despite nullability feature not being turned on)."},{"Id":"7558962884","Type":"PullRequestEvent","CreatedAt":"2018-04-20T01:07:25","Actor":"cston","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26107","RelatedDescription":"Merged pull request \"Handle conversions for arguments in NullableWalker\" (#26107) at dotnet/roslyn","RelatedBody":""},{"Id":"7558749228","Type":"IssuesEvent","CreatedAt":"2018-04-19T23:47:39","Actor":"jinujoseph","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/15003","RelatedDescription":"Closed issue \"Newly added .editorconfig only applied after reloading files\" (#15003) at dotnet/roslyn","RelatedBody":"Create a new C# console app.\r\nOpen `program.cs`\r\nRight click -> add new item -> text file.\r\nRename the file to `.editorconfig` \r\nPaste the following into the file and save\r\n```\r\n[*.cs]\r\nindent_style = tab\r\nindent_size = 10\r\n```\r\nSwitch to the `program.cs` tab and invoke `Edit.FormatDocument`.\r\n\r\nExpected:\r\nThe document is formatted to use tabs and a wider indent.\r\nActual: Nothing happens\r\nAfter closing and reopening program.cs, `Edit.FormatDocument` applies the new formattnig settings."},{"Id":"7558747889","Type":"PullRequestEvent","CreatedAt":"2018-04-19T23:47:12","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26216","RelatedDescription":"Merged pull request \"Fixes mapping of active statement when changing ctor body from block to expression\" (#26216) at dotnet/roslyn","RelatedBody":"### Customer scenario\r\n\r\nVS crashes when program is stopped at a breakpoint placed on the constructor declaration (not on its body) and the constructor body is changed from a block to an expression.\r\n\r\nHarden GetAllAddedSymbolsAsync to avoid VS crash on an unexpected exception.\r\n\r\n### Bugs this fixes\r\n\r\n[VSO 590387](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/590387)\r\n\r\n### Workarounds, if any\r\n\r\nNone.\r\n\r\n### Risk\r\n\r\nSmall.\r\n\r\n### Performance impact\r\n\r\nSmall.\r\n\r\n### Is this a regression from a previous update?\r\n\r\n### Root cause analysis\r\n\r\nMissing unit test.\r\n\r\n### How was the bug found?\r\n\r\nCustomer reported.\r\n\r\n### Test documentation updated?\r\n"},{"Id":"7558697429","Type":"IssuesEvent","CreatedAt":"2018-04-19T23:29:54","Actor":"svick","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/26274","RelatedDescription":"Opened issue \"KeyNotFoundException in StackOptimizerPass1 for switch expression in features/recursive-patterns\" (#26274) at dotnet/roslyn","RelatedBody":"**Version Used**: dc34a02, the latest commit in features/recursive-patterns\r\n\r\n**Steps to Reproduce**:\r\n\r\nTry to compile [the following code](https://sharplab.io/#v2:EYLgZgpghgLgrgJwgZwLRIMaOQSwG4SoAOsMECAdsgD4ACATAAQDCAsAFADeHjvjwAewEAbRgFEAjnCjDkACgHAAVhAwxGipQEpGAXgB8PPgEhNjZAHccMDAAsjfPt3aPXfZozwy4EPfsYwCD4ANA5ufAD6foxgMsgQYY4AvgDcHElAA) in SharpLab:\r\n\r\n```c#\r\nclass C\r\n{\r\n    bool Equals(object obj) =>\r\n    \tobj switch\r\n        {\r\n            C value => true,\r\n            _ => false\r\n        };\r\n}\r\n```\r\n\r\n**Expected Behavior**: Successful compilation.\r\n\r\n**Actual Behavior**:\r\n\r\n```\r\nSystem.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.\r\n   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.RecordVarWrite(LocalSymbol local) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 1802\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitAssignmentOperator(BoundAssignmentOperator node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 998\r\n   at Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator.Accept(BoundTreeVisitor visitor) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\Generated\\BoundNodes.xml.Generated.cs:line 1261\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitExpressionCore(BoundExpression node, ExprContext context) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 465\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitExpressionCoreWithStackGuard(BoundExpression node, ExprContext context) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 521\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitExpression(BoundExpression node, ExprContext context) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 508\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitExpressionStatement(BoundExpressionStatement node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 849\r\n   at Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement.Accept(BoundTreeVisitor visitor) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\Generated\\BoundNodes.xml.Generated.cs:line 2638\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitSideEffect(BoundNode node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 578\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(BoundNode node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 445\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\BoundTree\\BoundTreeRewriter.cs:line 37\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitBlock(BoundBlock node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\Generated\\BoundNodes.xml.Generated.cs:line 9911\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitBlock(BoundBlock node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 627\r\n   at Microsoft.CodeAnalysis.CSharp.BoundBlock.Accept(BoundTreeVisitor visitor) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\Generated\\BoundNodes.xml.Generated.cs:line 2288\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitSideEffect(BoundNode node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 578\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(BoundNode node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 445\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\BoundTree\\BoundTreeRewriter.cs:line 37\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitBlock(BoundBlock node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\Generated\\BoundNodes.xml.Generated.cs:line 9911\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitBlock(BoundBlock node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 627\r\n   at Microsoft.CodeAnalysis.CSharp.BoundBlock.Accept(BoundTreeVisitor visitor) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\Generated\\BoundNodes.xml.Generated.cs:line 2288\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitSideEffect(BoundNode node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 578\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(BoundNode node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 445\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitSequencePoint(BoundSequencePoint node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\Generated\\BoundNodes.xml.Generated.cs:line 9901\r\n   at Microsoft.CodeAnalysis.CSharp.BoundSequencePoint.Accept(BoundTreeVisitor visitor) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\Generated\\BoundNodes.xml.Generated.cs:line 2221\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitSideEffect(BoundNode node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 578\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(BoundNode node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 445\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\BoundTree\\BoundTreeRewriter.cs:line 37\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitBlock(BoundBlock node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\Generated\\BoundNodes.xml.Generated.cs:line 9911\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitBlock(BoundBlock node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 627\r\n   at Microsoft.CodeAnalysis.CSharp.BoundBlock.Accept(BoundTreeVisitor visitor) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\Generated\\BoundNodes.xml.Generated.cs:line 2288\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitSideEffect(BoundNode node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 578\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(BoundNode node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 445\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.DoVisitList[T](ImmutableArray`1 list) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\BoundTree\\BoundTreeRewriter.cs:line 37\r\n   at Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter.VisitStatementList(BoundStatementList node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\Generated\\BoundNodes.xml.Generated.cs:line 10135\r\n   at Microsoft.CodeAnalysis.CSharp.BoundStatementList.Accept(BoundTreeVisitor visitor) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\Generated\\BoundNodes.xml.Generated.cs:line 3855\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.VisitSideEffect(BoundNode node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 578\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Visit(BoundNode node) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 445\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1.Analyze(BoundNode node, Dictionary`2 locals, Boolean debugFriendly) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 434\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.Optimizer.Optimize(BoundStatement src, Boolean debugFriendly, HashSet`1& stackLocals) in D:\\$TC\\work\\c99972099bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\Optimizer.cs:line 60\r\n   at Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator..ctor(MethodSymbol method, BoundStatement boundBody, ILBuilder builder, PEModuleBuilder moduleBuilder, DiagnosticBag diagnostics, OptimizationLevel optimizations, Boolean emittingPdb) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\CodeGen\\CodeGenerator.cs:line 121\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.GenerateMethodBody(PEModuleBuilder moduleBuilder, MethodSymbol method, Int32 methodOrdinal, BoundStatement block, ImmutableArray`1 lambdaDebugInfo, ImmutableArray`1 closureDebugInfo, StateMachineTypeSymbol stateMachineTypeOpt, VariableSlotAllocator variableSlotAllocatorOpt, DiagnosticBag diagnostics, DebugDocumentProvider debugDocumentProvider, ImportChain importChainOpt, Boolean emittingPdb, Boolean emitTestCoverageData, ImmutableArray`1 dynamicAnalysisSpans) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\Compiler\\MethodCompiler.cs:line 1370\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethod(MethodSymbol methodSymbol, Int32 methodOrdinal, ProcessedFieldInitializers& processedInitializers, SynthesizedSubmissionFields previousSubmissionFields, TypeCompilationState compilationState) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\Compiler\\MethodCompiler.cs:line 1187\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileNamedType(NamedTypeSymbol containingType) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\Compiler\\MethodCompiler.cs:line 494\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.<>c__DisplayClass21_0.<CompileNamedTypeAsTask>b__0() in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\Compiler\\MethodCompiler.cs:line 384\r\n   at Roslyn.Utilities.UICultureUtilities.<>c__DisplayClass5_0.<WithCurrentUICulture>b__0() in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\Core\\Portable\\InternalUtilities\\UICultureUtilities.cs:line 136\r\n   at System.Threading.Tasks.Task.InnerInvoke()\r\n   at System.Threading.Tasks.Task.Execute()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.WaitForWorkers() in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\Compiler\\MethodCompiler.cs:line 299\r\n   at Microsoft.CodeAnalysis.CSharp.MethodCompiler.CompileMethodBodies(CSharpCompilation compilation, PEModuleBuilder moduleBeingBuiltOpt, Boolean emittingPdb, Boolean emitTestCoverageData, Boolean hasDeclarationErrors, DiagnosticBag diagnostics, Predicate`1 filterOpt, CancellationToken cancellationToken) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\Compiler\\MethodCompiler.cs:line 144\r\n   at Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CompileMethods(CommonPEModuleBuilder moduleBuilder, Boolean emittingPdb, Boolean emitMetadataOnly, Boolean emitTestCoverageData, DiagnosticBag diagnostics, Predicate`1 filterOpt, CancellationToken cancellationToken) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\CSharp\\Portable\\Compilation\\CSharpCompilation.cs:line 2520\r\n   at Microsoft.CodeAnalysis.Compilation.Emit(Stream peStream, Stream metadataPEStream, Stream pdbStream, Stream xmlDocumentationStream, Stream win32Resources, IEnumerable`1 manifestResources, EmitOptions options, IMethodSymbol debugEntryPoint, Stream sourceLinkStream, IEnumerable`1 embeddedTexts, CompilationTestData testData, CancellationToken cancellationToken) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\Core\\Portable\\Compilation\\Compilation.cs:line 2195\r\n   at Microsoft.CodeAnalysis.Compilation.Emit(Stream peStream, Stream pdbStream, Stream xmlDocumentationStream, Stream win32Resources, IEnumerable`1 manifestResources, EmitOptions options, IMethodSymbol debugEntryPoint, Stream sourceLinkStream, IEnumerable`1 embeddedTexts, Stream metadataPEStream, CancellationToken cancellationToken) in D:\\$TC\\work\\c99972096bc51e45\\!roslyn\\sources\\dotnet\\src\\Compilers\\Core\\Portable\\Compilation\\Compilation.cs:line 2143\r\n   at SharpLab.Server.Compilation.Compiler.<TryCompileToStreamAsync>d__0.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at SharpLab.Server.MirrorSharp.SlowUpdate.<ProcessAsync>d__7.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MirrorSharp.Internal.Handlers.SlowUpdateHandler.<ExecuteAsync>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at MirrorSharp.Internal.Connection.<ReceiveAndProcessInternalAsync>d__13.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at MirrorSharp.Internal.Connection.<ReceiveAndProcessAsync>d__12.MoveNext()\r\n```\r\n\r\nI found two issues with similar stack traces: https://github.com/dotnet/roslyn/issues/13712 and https://github.com/dotnet/roslyn/issues/13159, but they don't seem to be closely related to this issue.\r\n\r\n---\r\n\r\nAlso, trying to compile [this similar, but invalid code](https://sharplab.io/#v2:EYLgZgpghgLgrgJwgZwLRIMaOQSwG4SoAOsMECAdsgD4ACATAAQDCAsAFADeHjvjwAewEAbRgFEAjnCjDkACgHAAVhAwxGipQEpGAXgB8PPgEhNjZAHccMDAAsjfPt3aPXfZozwy4EPfsYwCD4OrgC+ANwcoUA==):\r\n\r\n```c#\r\nclass C\r\n{\r\n    bool Equals(object obj) =>\r\n    \tobj switch\r\n        {\r\n            C value => true\r\n        };\r\n}\r\n```\r\n\r\nResults in:\r\n\r\n> error CS7038: Failed to emit module '_'.\r\n\r\nI don't think that's a reasonable error message for this code.\r\n\r\n---\r\n\r\nAs with https://github.com/dotnet/roslyn/issues/25591 before, I understand that this branch is a prototype, but I though reporting this issue might be useful nonetheless.\r\n\r\ncc: @gafter "}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7555955469","Type":"IssuesEvent","CreatedAt":"2018-04-19T14:28:30","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5731","RelatedDescription":"Closed issue \"Unsupported marshalling ?\" (#5731) at dotnet/corert","RelatedBody":"I'm getting this:\r\n\r\n```\r\nUnhandled Exception: System.Exception: Method '[CoreCompat.System.Drawing]System.Drawing.GDIPlus.GdipLoadImageFromStream(IStream,native int&)' requires non-trivial marshalling that is not yet supported by this compiler.\r\n   at System.Drawing.GDIPlus.GdipLoadImageFromStream(IStream, IntPtr&) + 0x3e\r\n   at System.Drawing.Image.InitFromStream(Stream) + 0x278\r\n   at System.Drawing.Bitmap..ctor(Stream, Boolean) + 0x35\r\n   at System.Drawing.Bitmap..ctor(Stream) + 0x21\r\n   at Ultraviolet.Shims.NETCore.Graphics.NETCoreSurfaceSource..ctor(Stream) + 0xe1\r\n   at Ultraviolet.Shims.NETCore.NETCoreFactoryInitializer.<>c.<Initialize>b__0_0(Stream) + 0x2d\r\n   at Ultraviolet.Graphics.SurfaceSource.Create(Stream) + 0x68\r\n   at Ultraviolet.Shims.NETCore.Platform.NETCoreIconLoader.LoadIcon() + 0x20b\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindow.LoadDefaultWindowIcon(UltravioletContext) + 0x5b\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindow.<>c.<.cctor>b__148_0(UltravioletContext) + 0x20\r\n   at Ultraviolet.UltravioletSingleton`1.InitializeResource() + 0xe5\r\n   at Ultraviolet.UltravioletSingleton`1.get_Value() + 0x1d\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindow..ctor(UltravioletContext, IntPtr, Boolean) + 0xaf\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindowInfo.InitializePrimaryWindow(UltravioletConfiguration, SDL2PlatformConfiguration) + 0x466\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindowInfo..ctor(UltravioletContext, UltravioletConfiguration, SDL2PlatformConfiguration) + 0xb7\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindowInfoOpenGL..ctor(UltravioletContext, UltravioletConfiguration, SDL2PlatformConfiguration) + 0x2e\r\n   at Ultraviolet.SDL2.SDL2UltravioletPlatform..ctor(UltravioletContext, UltravioletConfiguration, SDL2PlatformConfiguration) + 0x9f\r\n   at Ultraviolet.OpenGL.OpenGLUltravioletContext..ctor(IUltravioletHost, OpenGLUltravioletConfiguration) + 0x287\r\n   at UvDebug.Game.OnCreatingUltravioletContext() + 0x135\r\n   at Ultraviolet.UltravioletContext.EnsureSuccessfulCreation(Func`1) + 0x3e0\r\n   at Ultraviolet.UltravioletApplication.CreateUltravioletContext() + 0x53\r\n   at Ultraviolet.UltravioletApplication.Run() + 0x56\r\n   at UvDebug.Game.Main(String[]) + 0x3e\r\n   at UvDebug!<BaseAddress>+0x96ce3e\r\n   at UvDebug!<BaseAddress>+0x96cecb\r\n```\r\n\r\nUsing this library: https://www.nuget.org/packages/CoreCompat.System.Drawing.v2/5.2.0-preview1-r131"},{"Id":"7555823774","Type":"IssuesEvent","CreatedAt":"2018-04-19T14:08:55","Actor":"Scellow","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5731","RelatedDescription":"Opened issue \"Unsupported marshalling ?\" (#5731) at dotnet/corert","RelatedBody":"I'm getting this:\r\n\r\n```\r\nUnhandled Exception: System.Exception: Method '[CoreCompat.System.Drawing]System.Drawing.GDIPlus.GdipLoadImageFromStream(IStream,native int&)' requires non-trivial marshalling that is not yet supported by this compiler.\r\n   at System.Drawing.GDIPlus.GdipLoadImageFromStream(IStream, IntPtr&) + 0x3e\r\n   at System.Drawing.Image.InitFromStream(Stream) + 0x278\r\n   at System.Drawing.Bitmap..ctor(Stream, Boolean) + 0x35\r\n   at System.Drawing.Bitmap..ctor(Stream) + 0x21\r\n   at Ultraviolet.Shims.NETCore.Graphics.NETCoreSurfaceSource..ctor(Stream) + 0xe1\r\n   at Ultraviolet.Shims.NETCore.NETCoreFactoryInitializer.<>c.<Initialize>b__0_0(Stream) + 0x2d\r\n   at Ultraviolet.Graphics.SurfaceSource.Create(Stream) + 0x68\r\n   at Ultraviolet.Shims.NETCore.Platform.NETCoreIconLoader.LoadIcon() + 0x20b\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindow.LoadDefaultWindowIcon(UltravioletContext) + 0x5b\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindow.<>c.<.cctor>b__148_0(UltravioletContext) + 0x20\r\n   at Ultraviolet.UltravioletSingleton`1.InitializeResource() + 0xe5\r\n   at Ultraviolet.UltravioletSingleton`1.get_Value() + 0x1d\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindow..ctor(UltravioletContext, IntPtr, Boolean) + 0xaf\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindowInfo.InitializePrimaryWindow(UltravioletConfiguration, SDL2PlatformConfiguration) + 0x466\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindowInfo..ctor(UltravioletContext, UltravioletConfiguration, SDL2PlatformConfiguration) + 0xb7\r\n   at Ultraviolet.SDL2.Platform.SDL2UltravioletWindowInfoOpenGL..ctor(UltravioletContext, UltravioletConfiguration, SDL2PlatformConfiguration) + 0x2e\r\n   at Ultraviolet.SDL2.SDL2UltravioletPlatform..ctor(UltravioletContext, UltravioletConfiguration, SDL2PlatformConfiguration) + 0x9f\r\n   at Ultraviolet.OpenGL.OpenGLUltravioletContext..ctor(IUltravioletHost, OpenGLUltravioletConfiguration) + 0x287\r\n   at UvDebug.Game.OnCreatingUltravioletContext() + 0x135\r\n   at Ultraviolet.UltravioletContext.EnsureSuccessfulCreation(Func`1) + 0x3e0\r\n   at Ultraviolet.UltravioletApplication.CreateUltravioletContext() + 0x53\r\n   at Ultraviolet.UltravioletApplication.Run() + 0x56\r\n   at UvDebug.Game.Main(String[]) + 0x3e\r\n   at UvDebug!<BaseAddress>+0x96ce3e\r\n   at UvDebug!<BaseAddress>+0x96cecb\r\n```\r\n\r\nUsing this library: https://www.nuget.org/packages/CoreCompat.System.Drawing.v2/5.2.0-preview1-r131"},{"Id":"7554947022","Type":"IssuesEvent","CreatedAt":"2018-04-19T11:31:24","Actor":"Scellow","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5730","RelatedDescription":"Closed issue \"Weird error with .NET Core 2.1 (Preview 2)\" (#5730) at dotnet/corert","RelatedBody":"I installed latest preview of Core 2.1 and i'm now getting that error message whenever i try to run `` dotnet publish -r win-x64 -c release``\r\n\r\n```\r\nC:\\Users\\Scellow\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-26413-02\\build\\Microsoft.NETCore.Native.Publish.targets(57,5)\r\n: error : The PrivateSdkAssemblies ItemGroup is required for _ComputeAssembliesToCompileToNative [C:\\Users\\Scellow\\dev\\rpgpvp\\src\\Realm.Game\\Realm.Game.csproj]\r\n```"},{"Id":"7553975064","Type":"IssuesEvent","CreatedAt":"2018-04-19T08:24:01","Actor":"Scellow","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5730","RelatedDescription":"Opened issue \"Weird error with .NET Core 2.1 (Preview 2)\" (#5730) at dotnet/corert","RelatedBody":"I installed latest preview of Core 2.1 and i'm now getting that error message whenever i try to run `` dotnet publish -r win-x64 -c release``\r\n\r\n```\r\nC:\\Users\\Scellow\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-26413-02\\build\\Microsoft.NETCore.Native.Publish.targets(57,5)\r\n: error : The PrivateSdkAssemblies ItemGroup is required for _ComputeAssembliesToCompileToNative [C:\\Users\\Scellow\\dev\\rpgpvp\\src\\Realm.Game\\Realm.Game.csproj]\r\n```"},{"Id":"7552833920","Type":"PullRequestEvent","CreatedAt":"2018-04-19T02:39:12","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5727","RelatedDescription":"Merged pull request \"Update MonoGame samples to WinExe\" (#5727) at dotnet/corert","RelatedBody":"So that they don't pop out a console on Windows."},{"Id":"7552833119","Type":"PullRequestEvent","CreatedAt":"2018-04-19T02:38:55","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5728","RelatedDescription":"Merged pull request \"Disable Object.GetType optimizations\" (#5728) at dotnet/corert","RelatedBody":"Fixes #5713, adds more stuff to #5180 backlog."},{"Id":"7552368878","Type":"PullRequestEvent","CreatedAt":"2018-04-18T23:54:04","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5726","RelatedDescription":"Merged pull request \"Use fully canonical method in ready to run helpers\" (#5726) at dotnet/corert","RelatedBody":"Helper to call `Foo<string>.Virtual()` and `Foo<object>.Virtual()` is the same. Let's make fewer of them and also avoid helpers for things like `Foo<string, __Canon>.Virtual()` that put weird things in the dependency graph in the process.\r\n\r\nFixes #5710."},{"Id":"7552368868","Type":"IssuesEvent","CreatedAt":"2018-04-18T23:54:03","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5710","RelatedDescription":"Closed issue \"AF: !method.IsCanonicalMethod(CanonicalFormKind.Any) || method.GetCanonMethodTarget(CanonicalFormKind.Specific) == method\" (#5710) at dotnet/corert","RelatedBody":"Repro:\r\n\r\n```\r\ndotnet new console -lang F#\r\ndotnet publish -r win-x64 // make this run on debug version of the compiler\r\n```\r\n\r\nResult:\r\n\r\nAssertion failure in `ReflectableMethodNode::.ctor`:\r\n```\r\n            Debug.Assert(!method.IsCanonicalMethod(CanonicalFormKind.Any) ||\r\n                method.GetCanonMethodTarget(CanonicalFormKind.Specific) == method);\r\n```"},{"Id":"7552123251","Type":"IssuesEvent","CreatedAt":"2018-04-18T22:38:56","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4444","RelatedDescription":"Closed issue \"LinkNative doesn't pull assemblies from Runtime Package Store\" (#4444) at dotnet/corert","RelatedBody":"Before I start, I should say that I know the scenario I'm describing isn't remotely supported yet; I have just been exploring how unsupported it is. :smiling_imp: \r\n\r\nI'm [working on a thing](https://github.com/shtik/cli) that will benefit greatly from CoreRT AOT compilation when it is ready, so I thought I'd try it and see how far it got. It's an ASP.NET Core 2.0 application that just uses Routing, Kestrel and various Extensions packages. No Controllers or Views whatsoever. I figured it might work a bit and I could provide feedback on any problems I encountered.\r\n\r\nSo here goes with the first one:\r\n\r\nWhen I tried to build the `shtik/cli` console application with `/t:/LinkNative` it did actually produce a runnable `shtik.exe` file, but when I ran it it errored out with a `Could not find assembly Microsoft.Extensions...` message. Obviously it failed to pull the various assemblies from the ASP.NET Core runtime package store during the build.\r\n\r\nAs I say, I'm not expecting it to work, just flagging the issue for now.\r\n\r\n### Environment info:\r\n\r\nWindows 10 x64\r\nVisual Studio 2017.3 Native Tools command prompt\r\ndotnet SDK 2.0.0\r\nASP.NET Core 2.0.0\r\nCoreRT built from master branch as of about a week back."}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7558704401","Type":"IssuesEvent","CreatedAt":"2018-04-19T23:32:13","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2089","RelatedDescription":"Closed issue \"GivenThatWeWantToStoreAProjectWithDependencies.compose_multifile has become flaky\" (#2089) at dotnet/sdk","RelatedBody":"I'm making it run Windows only for now."},{"Id":"7558698800","Type":"IssuesEvent","CreatedAt":"2018-04-19T23:30:21","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2149","RelatedDescription":"Closed issue \"Occasionally seeing warnings or errors building Asp.Net Core 2.1 projects\" (#2149) at dotnet/sdk","RelatedBody":"_From @BillHiebert on April 12, 2018 15:42_\n\n## Steps to reproduce\r\n\r\n- From VS, create a new ASP.NET Core 2.1 Empty Web project\r\n- Build\r\n\r\n## Expected  behavior\r\nBuild succeeds\r\n\r\n## Actual behavior\r\nOccasionally, the build will succeed but show the following warning:\r\n\r\nCould not write state file \"obj\\Debug\\netcoreapp1.1\\App3.csprojAssemblyReference.cache\". The process cannot access the file 'D:\\dd\\WTE\\Rel\\TestResults\\Deploy_asplab 2018-04-11 14_56_42\\Out\\App3\\App3\\obj\\Debug\\netcoreapp1.1\\App3.csprojAssemblyReference.cache' because it is being used by another process.\r\n\r\nOn one occasion I saw the following error:\r\n\r\n```\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018: The \"ResolvePackageAssets\" task failed unexpectedly.\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018: System.IO.IOException: The process cannot access the file 'C:\\Users\\billhie\\Source\\Repos\\WebApplication87\\WebApplication87\\obj\\Debug\\netcoreapp2.1\\WebApplication87.assets.cache' because it is being used by another process.\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018:    at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018:    at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018:    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheWriter..ctor(ResolvePackageAssets task)\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader..ctor(ResolvePackageAssets task)\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ReadItemGroups()\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ExecuteCore()\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n1>C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(205,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n1>Done building project \"WebApplication87.csproj\" -- FAILED.\r\n\r\n\r\n```\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.300-preview2-008530\r\n Commit:    822ae6d43a\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008530\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.0-preview2-26406-04\r\n  Commit:  6833f3026b\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.7 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.8 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.100 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200-preview-007474 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200-preview-007480 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200-preview-007509 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300-preview1-008174 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300-preview2-008530 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-preview1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.0-preview2-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-preview1-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.0-preview2-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview1-26216-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview2-26406-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\n\n_Copied from original issue: dotnet/cli#9061_"},{"Id":"7558697255","Type":"PullRequestEvent","CreatedAt":"2018-04-19T23:29:50","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2159","RelatedDescription":"Merged pull request \"Defend against parallel access to package assets cache\" (#2159) at dotnet/sdk","RelatedBody":"This can happen if certain targets are invoked in parallel on the same project\r\nhaving with global properties not differing sufficiently to provide each build\r\nwith a unique intermediate directory.\r\n\r\nOne case where this can happen is if there is a design-time build and real build\r\nhappening in parallel. Another case occurs frequently in `dotnet store`. The\r\nlatter may be a design flaw in `dotnet store` but the root cause hasn't been\r\nidentified yet. This will at least prevent `dotnet store` from failing, but more\r\ninvestigation is needed to understand why `dotnet store` gets itself into this\r\nsituation.\r\n\r\nNow, when we're unable to read or write the assets cache, we fall back to the\r\nsame in-memory technique that is used when DisablePackageAssetsCache is set to\r\ntrue. We will also log a high importance message (not a warning because that can\r\nbreak builds with warning-as-error and this can happen outside the user's\r\ncontrol). The intent of logging a message is to be able to get feedback if this\r\nis happening frequently. The risk the message is trying to mitigate is if we\r\nstart falling back from the fast path in common cases and don't have any clues\r\nabout that other than the perf hit.\r\n\r\nFix #2149\r\nFix #2089\r\nFix dotnet/cli#9092"},{"Id":"7558465238","Type":"PullRequestEvent","CreatedAt":"2018-04-19T22:19:38","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2166","RelatedDescription":"Opened pull request \"Merge remote-tracking branch 'dotnet/release/2.1.2xx' into version-tasks\" (#2166) at dotnet/sdk","RelatedBody":"FYI. @nguerrera, @livarcocc "},{"Id":"7558440599","Type":"PullRequestEvent","CreatedAt":"2018-04-19T22:13:07","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2165","RelatedDescription":"Merged pull request \"Updating the MSBuild Task DLLs to be versioned with every build. \" (#2165) at dotnet/sdk","RelatedBody":"FYI. @nguerrera, @livarcocc "},{"Id":"7558299490","Type":"PullRequestEvent","CreatedAt":"2018-04-19T21:39:59","Actor":"tannergooding","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2165","RelatedDescription":"Opened pull request \"Updating the MSBuild Task DLLs to be versioned with every build. \" (#2165) at dotnet/sdk","RelatedBody":"FYI. @nguerrera, @livarcocc "},{"Id":"7558235024","Type":"IssuesEvent","CreatedAt":"2018-04-19T21:25:47","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2161","RelatedDescription":"Closed issue \"Building a project between two different SDKs fails hard if you reuse nodes\" (#2161) at dotnet/sdk","RelatedBody":"## Steps to reproduce\r\n\r\n1. Build a project via msbuild with 2.1.300-preview2-008324\r\n2. Before msbuild nodes shutdown, build a project via msbuild with 2.1.300-preview2-008533\r\n\r\n## Expected  behavior\r\nNo errors\r\n\r\n## Actual behavior\r\nActual:\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\2.1.300-preview2-008533\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInfer\r\nence.targets(134,5): error MSB4062: The \"ShowPreviewMessage\" task could not be loaded from the assembly C:\\Program File\r\ns\\dotnet\\sdk\\2.1.300-preview2-008533\\Sdks\\Microsoft.NET.Sdk\\targets\\..\\tools\\net46/Microsoft.NET.Build.Tasks.dll.  Conf\r\nirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the\r\n task contains a public class that implements Microsoft.Build.Framework.ITask. [E:\\project-system2\\src\\Microsoft.Visual\r\nStudio.ProjectSystem.VisualBasic.UnitTests\\Microsoft.VisualStudio.ProjectSystem.VisualBasic.UnitTests.csproj]\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n"},{"Id":"7558231955","Type":"PullRequestEvent","CreatedAt":"2018-04-19T21:25:07","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2163","RelatedDescription":"Merged pull request \"Updating the MSBuild Task DLLs to be versioned with every build.\" (#2163) at dotnet/sdk","RelatedBody":"This resolves https://github.com/dotnet/sdk/issues/2161"},{"Id":"7557987575","Type":"IssuesEvent","CreatedAt":"2018-04-19T20:35:00","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1438","RelatedDescription":"Closed issue \"Sdk should use $(ProjectAssetsFile) always, never reset it, and never assume it is named project.assets.json\" (#1438) at dotnet/sdk","RelatedBody":"Currently the `project.assets.json` for a project is defaulted to be `$(BaseIntermediateOutputPath)\\project.assets.json` (where `$(BaseIntermediateOutputPath)` defaults to `obj`).\r\n\r\nThis makes it such that two projects can no longer exist in the same folder by default (and will also cause conflicts if the user unwittingly updates `$(BaseIntermediateOutputPath)` to be shared across all projects in the solution, as can be done with `$(BaseOutputPath)`, rather than ensuring that it remains unique per-project).\r\n\r\nI propose that the `project.assets.json` file be updated to include either `MSBuildProjectName` or `AssemblyName` (in other places in the SDK, `AssemblyName` seems to be the preferred prefix) by default or for a switch to be added to easily enable this functionality.\r\n\r\n"},{"Id":"7557971728","Type":"PullRequestEvent","CreatedAt":"2018-04-19T20:31:54","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2164","RelatedDescription":"Merged pull request \"Update the SDK branding to RC1\" (#2164) at dotnet/sdk","RelatedBody":""},{"Id":"7557838703","Type":"PullRequestEvent","CreatedAt":"2018-04-19T20:05:13","Actor":"JunTaoLuo","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2148","RelatedDescription":"Merged pull request \"Update implicit version checks to operate on list of implicit packages\" (#2148) at dotnet/sdk","RelatedBody":"Addresses https://github.com/aspnet/Universe/issues/967. As discussed in email. This change will allow us to reuse the dotnet SDK code to check implicit versions against resolved versions. Is this the correct branch for 2.1 rc1? I will send a shiproom email with all the changes later in the day."},{"Id":"7557792357","Type":"PullRequestEvent","CreatedAt":"2018-04-19T19:55:56","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2152","RelatedDescription":"Merged pull request \"Block PackAsTool invalid TFMs\" (#2152) at dotnet/sdk","RelatedBody":"https://github.com/dotnet/cli/issues/9073 "},{"Id":"7557752731","Type":"PullRequestEvent","CreatedAt":"2018-04-19T19:48:04","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2164","RelatedDescription":"Opened pull request \"Update the SDK branding to RC1\" (#2164) at dotnet/sdk","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"986692696507953152","CreatedAt":"2018-04-18T19:47:25+00:00","UserScreenname":"dotnet","Text":"Performance Improvements in .NET Core 2.1 https://t.co/6YMK8P99cZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":232,"FavoriteCount":144,"RawContent":null},{"Id":"986692437211987969","CreatedAt":"2018-04-18T19:46:23+00:00","UserScreenname":"dotnet","Text":"Announcing Visual Studio 2017 15.7 Preview 4 https://t.co/XYIzXNDMhn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":62,"FavoriteCount":43,"RawContent":null},{"Id":"986400394786914304","CreatedAt":"2018-04-18T00:25:55+00:00","UserScreenname":"dotnet","Text":".NET Core April 2018 Update https://t.co/PuT2Jc7GBy","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":70,"FavoriteCount":32,"RawContent":null},{"Id":"985915431499259904","CreatedAt":"2018-04-16T16:18:50+00:00","UserScreenname":"dotnet","Text":"Join our @csharpfritz and his pair-programming guest @fiercekittenz tomorrow for some LIVE CODING and discussion ab… https://t.co/Vll8gfdlKQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":5,"RawContent":null},{"Id":"984485381071450112","CreatedAt":"2018-04-12T17:36:20+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core 2.1.0-preview2 now available https://t.co/W0wBUDkqXt","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":94,"FavoriteCount":80,"RawContent":null}]}},"RunOn":"2018-04-20T05:30:27.6396747Z","RunDurationInMilliseconds":12591}