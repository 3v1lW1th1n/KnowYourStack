{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework March 1, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019","PublishedOn":"2019-03-01T18:25:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, March 1, we released the February 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-march-1-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/","RawContent":null},{"Title":"An update to C# versions and C# tooling","PublishedOn":"2019-02-27T18:59:23+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Starting with Visual Studio 2019 Preview 4 and RC, we&#8217;ll be adjusting how C# versions are treated in .NET tooling.\nSummary of changes\nFirstly, we&#8217;re adding two new Language Version...","Href":"https://devblogs.microsoft.com/dotnet/an-update-to-c-versions-and-c-tooling/","RawContent":null},{"Title":"How to port desktop applications to .NET Core 3.0","PublishedOn":"2019-02-26T18:00:30+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"In this post, I will describe how to port a desktop application from .NET Framework to .NET Core. I picked a WinForms application as an example. Steps for WPF application are similar and I&#8217;ll...","Href":"https://devblogs.microsoft.com/dotnet/how-to-port-desktop-applications-to-net-core-3-0/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access Build 3745","PublishedOn":"2019-02-21T19:27:54+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As we get closer to the final version, our efforts are focused on stabilizing the release over the coming weeks. Please keep up the support by trying out our latest preview 3745 and provide any...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-framework-4-8-early-access-build-3745/","RawContent":null},{"Title":".NET Framework February 2019 Preview of Quality Rollup","PublishedOn":"2019-02-19T15:19:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we released the February 2019 Preview of Quality Rollup.\nQuality and Reliability\nThis release contains the following quality and reliability improvements.\nCLR\n\nAddresses an issue in...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-february-2019-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core 1.0 and 1.1 will reach End of Life on June 27, 2019","PublishedOn":"2019-02-19T15:00:16+00:00","CommentsCount":2,"FacebookCount":0,"Summary":".NET Core 1.0 was released on June 27, 2016 and .NET Core 1.1 was released on November 16, 2016. As an LTS release, .NET Core 1.0 is supported for three years. .NET Core 1.1 fits into the same support...","Href":"https://devblogs.microsoft.com/dotnet/net-core-1-0-and-1-1-will-reach-end-of-life-on-june-27-2019/","RawContent":null},{"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","PublishedOn":"2019-02-15T13:03:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Final Update 2/19/19 @1:30 PM (PST): This advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no...","Href":"https://devblogs.microsoft.com/dotnet/advisory-on-february-2019-security-update-for-windows-10-update-1809/","RawContent":null},{"Title":"Microsoft’s Developer Blogs are Getting an Update","PublishedOn":"2019-02-13T18:49:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the coming days, we’ll be moving our developer blogs to a new platform with a modern, clean design and powerful features that will make it easy for you to discover and share great content. This...","Href":"https://devblogs.microsoft.com/dotnet/microsofts-developer-blogs-are-getting-an-update/","RawContent":null},{"Title":"Help us make the .NET Architecture guides better for you!","PublishedOn":"2019-02-13T15:47:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the last couple of years, we worked with experts to create some incredible architecture guides &#38; reference samples for .NET developers. We focused on Microservices Architecture, Modernizing...","Href":"https://devblogs.microsoft.com/dotnet/help-us-make-the-net-architecture-guides-better-for-you/","RawContent":null},{"Title":".NET Framework February 2019 Security and Quality Rollup","PublishedOn":"2019-02-13T13:45:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Updated: February 15, 2019\n\nA new Advisory on February 2019 Security update for Windows 10 update 1809 has been released today for issues customers have reported with .NET 4.8 Preview and this...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-february-2019-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9168056662","Type":"PullRequestEvent","CreatedAt":"2019-03-02T18:57:28","Actor":"manne","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Opened pull request \"adds Umbraco logo\" (#135) at dotnet/foundation","RelatedBody":"fixes #124 "},{"Id":"9168030118","Type":"PullRequestEvent","CreatedAt":"2019-03-02T18:43:42","Actor":"manne","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Opened pull request \"adds the prism logo\" (#134) at dotnet/foundation","RelatedBody":"fixes #126 "},{"Id":"9163318579","Type":"PullRequestEvent","CreatedAt":"2019-03-01T15:37:52","Actor":"glennawatson","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Opened pull request \"Add additional ReactiveUI organization projects.\" (#133) at dotnet/foundation","RelatedBody":""},{"Id":"9142546450","Type":"IssuesEvent","CreatedAt":"2019-02-26T23:12:20","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/75","RelatedDescription":"Closed issue \"Fix mailto link on Team page\" (#75) at dotnet/foundation","RelatedBody":"When visiting [https://dotnetfoundation.org/team](https://dotnetfoundation.org/team), I noticed that the email icon under **Miklos Barkoczi**'s name has `mailto:` referenced twice. It may be obvious to some, but not to others.\r\n\r\n```\r\n<a href=\"mailto:mailto:contact@dotnetfoundation.org\">\r\n    <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>\r\n</a>\r\n```\r\nshould be\r\n```\r\n<a href=\"mailto:contact@dotnetfoundation.org\">\r\n    <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>\r\n</a>\r\n```"},{"Id":"9089021734","Type":"PullRequestEvent","CreatedAt":"2019-02-18T17:45:45","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Merged pull request \"Update MVVM project logo\" (#132) at dotnet/foundation","RelatedBody":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125"},{"Id":"9089021716","Type":"IssuesEvent","CreatedAt":"2019-02-18T17:45:45","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125) at dotnet/foundation","RelatedBody":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139"},{"Id":"9089015890","Type":"PullRequestEvent","CreatedAt":"2019-02-18T17:44:39","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Merged pull request \"Update links\" (#131) at dotnet/foundation","RelatedBody":"Replace http links with https where possible - both returned 200 OK."},{"Id":"9018375188","Type":"PullRequestEvent","CreatedAt":"2019-02-06T14:07:17","Actor":"Potapy4","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Opened pull request \"Update MVVM project logo\" (#132) at dotnet/foundation","RelatedBody":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125"},{"Id":"9001989260","Type":"PullRequestEvent","CreatedAt":"2019-02-04T07:33:23","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Opened pull request \"Update links\" (#131) at dotnet/foundation","RelatedBody":"Replace http links with https where possible - both returned 200 OK."},{"Id":"8997330482","Type":"PullRequestEvent","CreatedAt":"2019-02-02T11:04:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Merged pull request \"Update links\" (#130) at dotnet/foundation","RelatedBody":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9150531193","Type":"IssuesEvent","CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Opened issue \"SDK Installers will remove previous patch versions\" (#102) at dotnet/announcements","RelatedBody":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions)."},{"Id":"9078417647","Type":"IssuesEvent","CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Opened issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101) at dotnet/announcements","RelatedBody":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition."},{"Id":"9075495754","Type":"IssuesEvent","CreatedAt":"2019-02-15T14:06:30","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Opened issue \"Advisory on February 2019 Security update for Windows 10 update 1809\" (#100) at dotnet/announcements","RelatedBody":"<span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.\r\n\r\nWe are actively working on fixing and re-shipping a correction for this issue. If you installed the February 2019 security update and have not yet seen any negative behavior, we recommend that you leave your system as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We are working to improve our testing infrastructure to prevent these type of issues in the future. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this <a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/15/advisory-on-february-2019-security-update-for-windows-10-update-1809/\" rel=\"nofollow\">post</a> as we have new information.\r\n<h2>Guidance</h2>\r\nWe are working on guidance and will update this pose and as we have new information.\r\n<h2>Workaround</h2>\r\nThere are no known workarounds at this time.\r\n<h2>Symptoms</h2>\r\nAfter installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:\r\n<p class=\"xxxxxmsonormal\"><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></p>\r\n"},{"Id":"9070407129","Type":"IssuesEvent","CreatedAt":"2019-02-14T19:28:26","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Opened issue \"Supporting new Alpine versions (for containers)\" (#99) at dotnet/announcements","RelatedBody":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread."},{"Id":"9060710562","Type":"IssuesEvent","CreatedAt":"2019-02-13T14:48:22","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Opened issue \"February 2019 .NET Updates\" (#98) at dotnet/announcements","RelatedBody":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework January 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9172029135","Type":"PullRequestEvent","CreatedAt":"2019-03-04T05:07:26","Actor":"AaronRobinsonMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22985","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corert\" (#22985) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar"},{"Id":"9171533277","Type":"IssuesEvent","CreatedAt":"2019-03-04T02:21:57","Actor":"peppy","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/22990","RelatedDescription":"Opened issue \"Runtime crash in 3.0.0-preview-27324-5 (TieredCompilation)\" (#22990) at dotnet/coreclr","RelatedBody":"Our project which works fine on all 2.2 releases will crash at runtime with the following trace:\r\n\r\n```\r\n\r\nThread 33 Crashed:\r\n0   libclrjit.dylib               \t0x000000010a49bdc4 GenTree::isContained() const + 4\r\n1   libclrjit.dylib               \t0x000000010a570405 CodeGen::genStructPutArgUnroll(GenTreePutArgStk*) + 69\r\n2   libclrjit.dylib               \t0x000000010a56d63d CodeGen::genPutArgStk(GenTreePutArgStk*) + 301\r\n3   libclrjit.dylib               \t0x000000010a453425 CodeGen::genCodeForBBlist() + 1829\r\n4   libclrjit.dylib               \t0x000000010a44cab5 CodeGen::genGenerateCode(void**, unsigned int*) + 85\r\n5   libclrjit.dylib               \t0x000000010a4582c6 Compiler::compCompile(void**, unsigned int*, JitFlags*) + 5734\r\n6   libclrjit.dylib               \t0x000000010a4592e1 Compiler::compCompileHelper(CORINFO_MODULE_STRUCT_*, ICorJitInfo*, CORINFO_METHOD_INFO*, void**, unsigned int*, JitFlags*, CorInfoInstantiationVerification) + 705\r\n7   libclrjit.dylib               \t0x000000010a458cd1 Compiler::compCompile(CORINFO_METHOD_STRUCT_*, CORINFO_MODULE_STRUCT_*, ICorJitInfo*, CORINFO_METHOD_INFO*, void**, unsigned int*, JitFlags*) + 881\r\n8   libclrjit.dylib               \t0x000000010a459d51 jitNativeCode(CORINFO_METHOD_STRUCT_*, CORINFO_MODULE_STRUCT_*, ICorJitInfo*, CORINFO_METHOD_INFO*, void**, unsigned int*, JitFlags*, void*) + 641\r\n9   libclrjit.dylib               \t0x000000010a45ce30 CILJit::compileMethod(ICorJitInfo*, CORINFO_METHOD_INFO*, unsigned int, unsigned char**, unsigned int*) + 160\r\n10  libcoreclr.dylib              \t0x00000001099e01c7 invokeCompileMethodHelper(EEJitManager*, CEEInfo*, CORINFO_METHOD_INFO*, CORJIT_FLAGS, unsigned char**, unsigned int*) + 231\r\n11  libcoreclr.dylib              \t0x00000001099e028e invokeCompileMethod(EEJitManager*, CEEInfo*, CORINFO_METHOD_INFO*, CORJIT_FLAGS, unsigned char**, unsigned int*) + 126\r\n12  libcoreclr.dylib              \t0x00000001099e03a3 CallCompileMethodWithSEHWrapper(EEJitManager*, CEEInfo*, CORINFO_METHOD_INFO*, CORJIT_FLAGS, unsigned char**, unsigned int*, NativeCodeVersion) + 83\r\n13  libcoreclr.dylib              \t0x00000001099e0cf1 UnsafeJitFunction(NativeCodeVersion, COR_ILMETHOD_DECODER*, CORJIT_FLAGS, unsigned int*) + 1329\r\n14  libcoreclr.dylib              \t0x0000000109a12b75 MethodDesc::JitCompileCodeLocked(PrepareCodeConfig*, ListLockEntryBase<NativeCodeVersion>*, unsigned int*, CORJIT_FLAGS*) + 309\r\n15  libcoreclr.dylib              \t0x0000000109a128f5 MethodDesc::JitCompileCodeLockedEventWrapper(PrepareCodeConfig*, ListLockEntryBase<NativeCodeVersion>*) + 533\r\n16  libcoreclr.dylib              \t0x0000000109a11ed5 MethodDesc::JitCompileCode(PrepareCodeConfig*) + 341\r\n17  libcoreclr.dylib              \t0x0000000109a11cc9 MethodDesc::PrepareILBasedCode(PrepareCodeConfig*) + 137\r\n18  libcoreclr.dylib              \t0x0000000109a11ad6 MethodDesc::PrepareCode(NativeCodeVersion) + 486\r\n19  libcoreclr.dylib              \t0x0000000109975e62 CodeVersionManager::PublishVersionableCodeIfNecessary(MethodDesc*, int) + 466\r\n20  libcoreclr.dylib              \t0x0000000109a14273 MethodDesc::DoPrestub(MethodTable*) + 371\r\n21  libcoreclr.dylib              \t0x0000000109a13e6b PreStubWorker + 571\r\n22  libcoreclr.dylib              \t0x0000000109c1bb8d ThePreStub + 92\r\n23  ???                           \t0x000000011574de24 0 + 4654947876\r\n24  ???                           \t0x00000001143acad6 0 + 4634364630\r\n25  ???                           \t0x00000001143ac813 0 + 4634363923\r\n26  ???                           \t0x00000001143a96b2 0 + 4634351282\r\n27  ???                           \t0x00000001143a8b1b 0 + 4634348315\r\n28  ???                           \t0x00000001143a6fcd 0 + 4634341325\r\n29  ???                           \t0x00000001143a6efd 0 + 4634341117\r\n30  ???                           \t0x00000001143a6d71 0 + 4634340721\r\n31  ???                           \t0x00000001143a6957 0 + 4634339671\r\n32  ???                           \t0x00000001143a6829 0 + 4634339369\r\n33  ???                           \t0x00000001143a63d9 0 + 4634338265\r\n34  ???                           \t0x00000001143b2c6b 0 + 4634389611\r\n35  ???                           \t0x00000001143b2ad5 0 + 4634389205\r\n36  ???                           \t0x0000000114399db6 0 + 4634287542\r\n37  ???                           \t0x00000001143a4fac 0 + 4634333100\r\n38  ???                           \t0x00000001143a4e58 0 + 4634332760\r\n39  ???                           \t0x000000011576930e 0 + 4655059726\r\n40  ???                           \t0x00000001157a9bab 0 + 4655324075\r\n41  ???                           \t0x0000000115c8b8ce 0 + 4660443342\r\n42  ???                           \t0x0000000115c8b80f 0 + 4660443151\r\n43  ???                           \t0x0000000115c8b751 0 + 4660442961\r\n44  ???                           \t0x0000000115644396 0 + 4653859734\r\n45  ???                           \t0x00000001157a9887 0 + 4655323271\r\n46  ???                           \t0x0000000115ce426a 0 + 4660806250\r\n47  libcoreclr.dylib              \t0x0000000109c1ae87 CallDescrWorkerInternal + 124\r\n48  libcoreclr.dylib              \t0x0000000109a7b2fe CallDescrWorkerWithHandler(CallDescrData*, int) + 110\r\n49  libcoreclr.dylib              \t0x0000000109b3785f CallDescrWorkerReflectionWrapper(CallDescrData*, Frame*) + 127\r\n50  libcoreclr.dylib              \t0x0000000109b3888d RuntimeMethodHandle::InvokeMethod(Object*, PtrArray*, SignatureNative*, bool, bool) + 3229\r\n51  ???                           \t0x0000000115c3f5ef 0 + 4660131311\r\n52  ???                           \t0x0000000115c42ee3 0 + 4660145891\r\n53  ???                           \t0x00000001157be7c4 0 + 4655409092\r\n54  ???                           \t0x0000000115c4409b 0 + 4660150427\r\n55  ???                           \t0x0000000115c43dc1 0 + 4660149697\r\n56  ???                           \t0x0000000115c43b3e 0 + 4660149054\r\n57  ???                           \t0x0000000115c45ba3 0 + 4660157347\r\n58  libcoreclr.dylib              \t0x0000000109c1ae87 CallDescrWorkerInternal + 124\r\n59  libcoreclr.dylib              \t0x0000000109a7b2fe CallDescrWorkerWithHandler(CallDescrData*, int) + 110\r\n60  libcoreclr.dylib              \t0x0000000109b3785f CallDescrWorkerReflectionWrapper(CallDescrData*, Frame*) + 127\r\n61  libcoreclr.dylib              \t0x0000000109b3888d RuntimeMethodHandle::InvokeMethod(Object*, PtrArray*, SignatureNative*, bool, bool) + 3229\r\n62  ???                           \t0x0000000115c3f64f 0 + 4660131407\r\n63  ???                           \t0x0000000115c42ee3 0 + 4660145891\r\n64  ???                           \t0x00000001157be7c4 0 + 4655409092\r\n65  ???                           \t0x00000001157be781 0 + 4655409025\r\n66  ???                           \t0x00000001157be781 0 + 4655409025\r\n67  ???                           \t0x00000001157be781 0 + 4655409025\r\n68  ???                           \t0x00000001157be781 0 + 4655409025\r\n69  ???                           \t0x0000000115c4409b 0 + 4660150427\r\n70  ???                           \t0x0000000115c43dc1 0 + 4660149697\r\n71  ???                           \t0x00000001143f55e8 0 + 4634662376\r\n72  ???                           \t0x0000000115c60452 0 + 4660266066\r\n73  ???                           \t0x0000000115c892eb 0 + 4660433643\r\n74  ???                           \t0x00000001109b874e 0 + 4573595470\r\n75  ???                           \t0x00000001109cab37 0 + 4573670199\r\n76  ???                           \t0x00000001143f5219 0 + 4634661401\r\n77  ???                           \t0x000000011153518b 0 + 4585640331\r\n78  ???                           \t0x00000001109a1f94 0 + 4573503380\r\n79  ???                           \t0x00000001109acde6 0 + 4573548006\r\n80  ???                           \t0x00000001109a205e 0 + 4573503582\r\n81  libcoreclr.dylib              \t0x0000000109c1ae87 CallDescrWorkerInternal + 124\r\n82  libcoreclr.dylib              \t0x0000000109a7bdbf MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 911\r\n83  libcoreclr.dylib              \t0x0000000109a8f795 ThreadNative::KickOffThread_Worker(void*) + 469\r\n84  libcoreclr.dylib              \t0x0000000109a3c66a ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 346\r\n85  libcoreclr.dylib              \t0x0000000109a3cc53 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n86  libcoreclr.dylib              \t0x0000000109a8f9ef ThreadNative::KickOffThread(void*) + 351\r\n87  libcoreclr.dylib              \t0x00000001098af0d7 CorUnix::CPalThread::ThreadEntry(void*) + 407\r\n88  libsystem_pthread.dylib       \t0x00007fff77727305 _pthread_body + 126\r\n89  libsystem_pthread.dylib       \t0x00007fff7772a26f _pthread_start + 70\r\n90  libsystem_pthread.dylib       \t0x00007fff77726415 thread_start + 13\r\n```\r\n\r\nThis is reproducible but I have not been able to isolate the specific code which causes the crash. Reproduction follows:\r\n\r\n- https://github.com/peppy/osu/tree/target-net-core-30\r\n- `dotnet run osu.sln --project osu.Desktop`\r\n- Click osu! logo\r\n- Click \"play\"\r\n- Click \"solo\"\r\n- Application will crash\r\n\r\nThis crash **can be avoided** by disabling tiered compilation (adding `<TieredCompilation>false</TieredCompilation>` to `osu.Desktop.csproj` and performing a full `dotnet clean`).\r\n\r\n```\r\ndotnet --version\r\n3.0.100-preview-010184\r\n```\r\n\r\nHost: macOS Mojave 10.14.2 (18C54)\r\n\r\n"},{"Id":"9171391554","Type":"IssuesEvent","CreatedAt":"2019-03-04T01:30:34","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/22989","RelatedDescription":"Opened issue \"[x64] Test failed: System.Runtime.Loader.Tests.DefaultLoadContextTests.LoadInDefaultContext\" (#22989) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/jitstress/job/x64_checked_ubuntu_corefx_baseline/856/\r\n\r\n**Failed tests:**\r\nSystem.Runtime.Loader.Tests.DefaultLoadContextTests.LoadInDefaultContext\r\n\r\n**Log:**\r\n```\r\nSystem.Runtime.Loader.Tests.DefaultLoadContextTests.LoadInDefaultContext [FAIL]\r\n  [m[31;1m[m[37m      Assert.Throws() Failure\r\n  [m[37m      Expected: typeof(System.IO.FileNotFoundException)\r\n  [m[37m      Actual:   (No exception was thrown)\r\n  [m[30;1m      Stack Trace:\r\n  [m[37m        /mnt/j/workspace/dotnet_coreclr/master/jitstress/x64_checked_ubuntu_corefx_baseline/_/fx/src/System.Runtime.Loader/tests/DefaultContext/DefaultLoadContextTest.cs(97,0): at System.Runtime.Loader.Tests.DefaultLoadContextTests.LoadInDefaultContext()\r\n  [m[37m  Finished:    System.Runtime.Loader.DefaultContext.Tests\r\n  [m[37m=== TEST EXECUTION SUMMARY ===\r\n  [m[37m   System.Runtime.Loader.DefaultContext.Tests  Total: 2, Errors: 0, Failed: 1, Skipped: 0, Time: 1.415s\r\n  [m[m/mnt/j/workspace/dotnet_coreclr/master/jitstress/x64_checked_ubuntu_corefx_baseline/_/fx/src/System.Runtime.Loader/tests/DefaultContext\r\n```"},{"Id":"9171358764","Type":"IssuesEvent","CreatedAt":"2019-03-04T01:17:53","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/22988","RelatedDescription":"Opened issue \"[x64] error MSB1008 in x64_checked_windows_nt_illink\" (#22988) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/illink/job/x64_checked_windows_nt_illink/654/\r\n\r\n**Log:**\r\n```\r\nMSBUILD : error MSB1008: Only one project can be specified.\r\n```"},{"Id":"9171336342","Type":"IssuesEvent","CreatedAt":"2019-03-04T01:08:34","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/22987","RelatedDescription":"Opened issue \"[x64] Unexpected test count in checked_windows_nt\" (#22987) at dotnet/coreclr","RelatedBody":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/checked_windows_nt/11522/\r\n\r\n**Log:**\r\n```\r\nD:\\j\\workspace\\checked_windo---14fb495b\\tests\\runtest.proj(75,5): error : Unexpected test count. Expected > 9000, found 3149.'\r\n```"},{"Id":"9170882717","Type":"PullRequestEvent","CreatedAt":"2019-03-03T21:33:55","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22982","RelatedDescription":"Closed pull request \"[master] Update dependencies from dotnet/core-setup\" (#22982) at dotnet/coreclr","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/core-setup\r\n\r\n- Microsoft.NETCore.App - 3.0.0-preview4-27502-8\r\n\r\n"},{"Id":"9170882149","Type":"PullRequestEvent","CreatedAt":"2019-03-03T21:33:40","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22981","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#22981) at dotnet/coreclr","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- Microsoft.NETCore.Platforms - 3.0.0-preview4.19153.2\r\n- Microsoft.Private.CoreFx.NETCoreApp - 4.6.0-preview4.19153.2\r\n\r\n"},{"Id":"9170881564","Type":"PullRequestEvent","CreatedAt":"2019-03-03T21:33:23","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22983","RelatedDescription":"Merged pull request \"[master] Update dependencies from  1 repositories\" (#22983) at dotnet/coreclr","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://dnceng@dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n\r\n- optimization.IBC.CoreCLR - 99.99.99-master-20190303.1\r\n\r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9169774356","Type":"PullRequestEvent","CreatedAt":"2019-03-03T13:00:50","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10912","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#10912) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19151.5\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9170447152","Type":"IssuesEvent","CreatedAt":"2019-03-03T18:13:53","Actor":"bartonjs","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1093","RelatedDescription":"Closed issue \"HashCode to standard\" (#1093) at dotnet/standard","RelatedBody":"Hi,\r\n\r\nis it possible to add the HashCode-\"Helper\" struct to the .net standard? Including the Combine method? it is covered by the .net corefx since v2.1 and it looks like there is no os or platform specific usecase"},{"Id":"9169506675","Type":"IssuesEvent","CreatedAt":"2019-03-03T10:29:32","Actor":"proof85","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1093","RelatedDescription":"Opened issue \"HashCode to standard\" (#1093) at dotnet/standard","RelatedBody":"Hi,\r\n\r\nis it possible to add the HashCode-\"Helper\" struct to the .net standard? Including the Combine method? it is covered by the .net corefx since v2.1 and it looks like there is no os or platform specific usecase"},{"Id":"9143447128","Type":"IssuesEvent","CreatedAt":"2019-02-27T02:53:50","Actor":"divega","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1092","RelatedDescription":"Opened issue \"Add string overloads to DbDataReader.Get*() to .NET Standard 2.1\" (#1092) at dotnet/standard","RelatedBody":"This is mainly about adding the API from https://github.com/dotnet/corefx/issues/31595, plus possibly two additional async method possibly coming from https://github.com/dotnet/corefx/issues/35611, to .NET Standard 2.1.\r\n\r\ncc @roji @ajcvickers @terrajobst "},{"Id":"9142900791","Type":"IssuesEvent","CreatedAt":"2019-02-27T00:35:13","Actor":"ChaseFlorell","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1091","RelatedDescription":"Opened issue \"Collection<T> and ObservableCollection<T> do not support ranges\" (#1091) at dotnet/standard","RelatedBody":"This is taken directly from https://github.com/dotnet/corefx/issues/10752 [by @robertmclaws]\r\n\r\nThis API change is already approved in .netcore (tentatively scheduled for 3.0), and I think it's equally as important to be available in .netstandard\r\n\r\n```csharp\r\n    // Adds a range to the end of the collection.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Add)\r\n    public void AddRange(IEnumerable<T> collection) => InsertItemsRange(0, collection);\r\n\r\n    // Inserts a range\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Add)\r\n    public void InsertRange(int index, IEnumerable<T> collection) => InsertItemsRange(index, collection);\r\n\r\n    // Removes a range.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Remove)\r\n    public void RemoveRange(int index, int count) => RemoveItemsRange(index, count);\r\n\r\n    // Will allow to replace a range with fewer, equal, or more items.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Replace)\r\n    public void ReplaceRange(int index, int count, IEnumerable<T> collection)\r\n    {\r\n         RemoveItemsRange(index, count);\r\n         InsertItemsRange(index, collection);\r\n    }\r\n\r\n    #region virtual methods\r\n    protected virtual void InsertItemsRange(int index, IEnumerable<T> collection);\r\n    protected virtual void RemoveItemsRange(int index, int count);\r\n    #endregion\r\n```\r\n\r\nPlease see the linked issue for the full discussion.\r\n\r\nI'm assuming it would land [here](https://github.com/dotnet/standard/blob/master/src/netstandard/ref/System.Collections.ObjectModel.cs) and the appropriate shims would be created, however I don't know enough about netstandard to actually draw up the PR.\r\n"},{"Id":"9142764225","Type":"IssuesEvent","CreatedAt":"2019-02-27T00:01:35","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1090","RelatedDescription":"Opened issue \"Sort out baseline between netstandard & netcoreapp\" (#1090) at dotnet/standard","RelatedBody":"We should sit down & go over the diff between netstandard & netcoreapp, and decide what we need to fix/how we need to fix it.\r\n\r\nCC @terrajobst "},{"Id":"9138348417","Type":"PullRequestEvent","CreatedAt":"2019-02-26T13:10:54","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1089","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#1089) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19125.2\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9172010365","Type":"PullRequestEvent","CreatedAt":"2019-03-04T05:00:54","Actor":"safern","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/34410","RelatedDescription":"Closed pull request \"[Wip] Enable Xunit analyzers for test projects\" (#34410) at dotnet/corefx","RelatedBody":"Marked as WIP as I expect the build to fail in a lot of test projects that don't follow the rules enforced by the analyzers.\r\n\r\nFixes: https://github.com/dotnet/corefx/issues/22210\r\n\r\ncc: @danmosemsft "},{"Id":"9172001481","Type":"PullRequestEvent","CreatedAt":"2019-03-04T04:57:55","Actor":"karelz","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/34379","RelatedDescription":"Closed pull request \"Reuse GenAPI GenerateReferenceAssemblySource target\" (#34379) at dotnet/corefx","RelatedBody":"Fixes https://github.com/dotnet/corefx/issues/33981\r\nFixes https://github.com/dotnet/corefx/issues/31193\r\nRequires https://github.com/dotnet/arcade/pull/1701\r\n\r\nI decided to still recommend the target as the property together with a build/rebuild target is to noisy as it also updates the ref sources of referenced projects.\r\n\r\nCommit 2 is just a manual darc update."},{"Id":"9171990881","Type":"PullRequestEvent","CreatedAt":"2019-03-04T04:54:10","Actor":"karelz","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/33605","RelatedDescription":"Closed pull request \"Support for Sampling based on Activity \" (#33605) at dotnet/corefx","RelatedBody":"The PR is for discussion purposes at the moment.  It is a strawman.  \r\n\r\nIt is likely a companion to other Activity changes, most notably the change to support W3C IDs. \r\nSee https://github.com/dotnet/corefx/pull/33207\r\n\r\nThis adds a 'Recording' bit to activities. which will be propagated along with the activity.    Code can use the SetRecordingDesired bit on an activity to suggest that the current activity is a good one to record.  \r\n\r\nThe idea is that subscribers give a desired Sampling % (thus 1 samples 1 out of every 100 activities).   It tries to pick the suggestions, but it enforces the sampling rate.    If there are no suggested samples, then it picks ones at random.  "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9171446501","Type":"PullRequestEvent","CreatedAt":"2019-03-04T01:51:38","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/33840","RelatedDescription":"Opened pull request \"Replace Stack with ArrayBuilder in GreenNode walker\" (#33840) at dotnet/roslyn","RelatedBody":"This has shown up as a hot allocation path in a few different traces.\r\nThis change amortizes the allocations by using a pooled ArrayBuilder\r\ninstead of allocating a new Stack every time.\r\n\r\nThe following benchmarks seem to support the hypothesis:\r\n\r\nBefore change:\r\n\r\n```\r\nBenchmarkDotNet=v0.11.1, OS=Windows 10.0.17134.590 (1803/April2018Update/Redstone4)\r\nAMD Ryzen 7 1800X Eight-Core Processor (Max: 3.60GHz), 1 CPU, 16 logical and 8 physical cores\r\n.NET Core SDK=2.2.103\r\n  [Host] : .NET Core 2.1.8 (CoreCLR 4.6.27317.03, CoreFX 4.6.27317.03), 64bit RyuJIT\r\n  Core   : .NET Core 2.1.8 (CoreCLR 4.6.27317.03, CoreFX 4.6.27317.03), 64bit RyuJIT\r\n\r\nJob=Core  Runtime=Core  Server=True\r\n\r\n                Method |      Mean |     Error |    StdDev |     Gen 0 | Allocated |\r\n---------------------- |----------:|----------:|----------:|----------:|----------:|\r\n               Parsing |  65.36 ms |  1.298 ms |  2.955 ms |         - |   2.93 MB |\r\n CompileMethodsAndEmit | 633.92 ms | 12.654 ms | 21.828 ms | 1000.0000 |  40.41 MB |\r\n     SerializeMetadata | 200.97 ms |  2.544 ms |  1.986 ms | 1000.0000 |  82.35 MB |\r\n```\r\n\r\nAfter change:\r\n\r\n```\r\nBenchmarkDotNet=v0.11.1, OS=Windows 10.0.17134.590 (1803/April2018Update/Redstone4)\r\nAMD Ryzen 7 1800X Eight-Core Processor (Max: 3.60GHz), 1 CPU, 16 logical and 8 physical cores\r\n.NET Core SDK=2.2.103\r\n  [Host] : .NET Core 2.1.8 (CoreCLR 4.6.27317.03, CoreFX 4.6.27317.03), 64bit RyuJIT\r\n  Core   : .NET Core 2.1.8 (CoreCLR 4.6.27317.03, CoreFX 4.6.27317.03), 64bit RyuJIT\r\n\r\nJob=Core  Runtime=Core  Server=True\r\n\r\n                Method |      Mean |     Error |    StdDev |     Gen 0 | Allocated |\r\n---------------------- |----------:|----------:|----------:|----------:|----------:|\r\n               Parsing |  67.26 ms |  1.344 ms |  3.321 ms |         - |   2.59 MB |\r\n CompileMethodsAndEmit | 627.23 ms | 13.307 ms | 23.995 ms | 1000.0000 |  28.85 MB |\r\n     SerializeMetadata | 206.02 ms |  4.087 ms |  5.991 ms | 1000.0000 |  17.39 MB |\r\n```"},{"Id":"9171390237","Type":"PullRequestEvent","CreatedAt":"2019-03-04T01:30:06","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/33838","RelatedDescription":"Merged pull request \"Merge dev16.0-vs-deps to master-vs-deps\" (#33838) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from dev16.0-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/dev16.0-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9171269624","Type":"PullRequestEvent","CreatedAt":"2019-03-04T00:38:12","Actor":"ryzngard","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/33647","RelatedDescription":"Merged pull request \"Rename and cleanup some members in the 'use var' feature.\" (#33647) at dotnet/roslyn","RelatedBody":"Precursor to some additional work i'm doing here.\r\n\r\nReviewing a commit at a time would likely be useful."},{"Id":"9171196940","Type":"IssuesEvent","CreatedAt":"2019-03-04T00:04:27","Actor":"huoyaoyuan","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/33839","RelatedDescription":"Opened issue \"Intendation for switch expression is not good in expression bodied method\" (#33839) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nVS 2019 RC\r\n![image](https://user-images.githubusercontent.com/5644458/53704071-b3b98b80-3e53-11e9-8187-a382808d578c.png)\r\n![image](https://user-images.githubusercontent.com/5644458/53704073-c2a03e00-3e53-11e9-942c-e4bcbf396cc6.png)\r\n![image](https://user-images.githubusercontent.com/5644458/53704077-d350b400-3e53-11e9-9810-2b2c682df721.png)\r\nThe first case should be considered mis-aligned, comparing to object initializer."},{"Id":"9171187836","Type":"PullRequestEvent","CreatedAt":"2019-03-04T00:00:19","Actor":"dotnet-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/33838","RelatedDescription":"Opened pull request \"Merge dev16.0-vs-deps to master-vs-deps\" (#33838) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from dev16.0-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/dev16.0-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9169953779","Type":"PullRequestEvent","CreatedAt":"2019-03-03T14:27:45","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7111","RelatedDescription":"Merged pull request \"Move fully managed TimerQueue implementation to shared partition\" (#7111) at dotnet/corert","RelatedBody":""},{"Id":"9169948512","Type":"PullRequestEvent","CreatedAt":"2019-03-03T14:25:19","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7114","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7114) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas"},{"Id":"9169576361","Type":"PullRequestEvent","CreatedAt":"2019-03-03T11:10:52","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7114","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7114) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9169064471","Type":"PullRequestEvent","CreatedAt":"2019-03-03T05:39:41","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7113","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7113) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar"},{"Id":"9168733925","Type":"PullRequestEvent","CreatedAt":"2019-03-03T01:32:49","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7113","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7113) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"9168584279","Type":"PullRequestEvent","CreatedAt":"2019-03-02T23:48:21","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7112","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7112) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @grant-d"},{"Id":"9168404137","Type":"PullRequestEvent","CreatedAt":"2019-03-02T21:59:39","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7112","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7112) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9168314785","Type":"PullRequestEvent","CreatedAt":"2019-03-02T21:09:54","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7110","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7110) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar"},{"Id":"9168267516","Type":"PullRequestEvent","CreatedAt":"2019-03-02T20:45:24","Actor":"marek-safar","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7111","RelatedDescription":"Opened pull request \"Move fully managed TimerQueue implementation to shared partition\" (#7111) at dotnet/corert","RelatedBody":""},{"Id":"9168139250","Type":"PullRequestEvent","CreatedAt":"2019-03-02T19:40:06","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7110","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7110) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9167405847","Type":"PullRequestEvent","CreatedAt":"2019-03-02T13:24:42","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7109","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7109) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9170449315","Type":"PullRequestEvent","CreatedAt":"2019-03-03T18:14:52","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3002","RelatedDescription":"Merged pull request \"Fix publishing self-contained ASP.NET apps\" (#3002) at dotnet/sdk","RelatedBody":"- Ignore .json files in runtime packs.  Fixes self-contained ASP.NET apps failing to launch with new runtime packs. @pakrym \r\n- Remove UseRefTargetingPacks property.  Fixes #2962"},{"Id":"9170449307","Type":"IssuesEvent","CreatedAt":"2019-03-03T18:14:52","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/2962","RelatedDescription":"Closed issue \"Remove UseRefTargetingPacks once SDK round-trips through core-sdk\" (#2962) at dotnet/sdk","RelatedBody":"#2919 added a `UseRefTargetingPacks` flag to enable using the new .Ref targeting packs instead of the ones in the bundled versions file.  Once that PR has flowed into core-sdk, we should update the stage 0 in dotnet/sdk and remove the flag."}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-02T18:57:28","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"open","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Open PR \"adds Umbraco logo\" (#135)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-02T18:43:42","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"open","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Open PR \"adds the prism logo\" (#134)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-01T15:37:52","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Open PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Update links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Update links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2018-12-16T11:57:53","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"open","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Open issue \"No logo provided for Prism\" (#126)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2018-12-16T11:52:07","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"open","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Open issue \"Missing logo for Umbraco\" (#124)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2018-12-16T11:50:29","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"open","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Open issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379731798","IsPullRequest":true,"CreatedAt":"2018-11-13T04:22:32","Actor":"leastprivilege","Number":"114","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#114)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"},{"Id":"379733880","IsPullRequest":true,"CreatedAt":"2018-11-13T04:20:23","Actor":"leastprivilege","Number":"115","RawContent":null,"Title":"Create identitymodel.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Closed or merged PR \"Create identitymodel.md\" (#115)"},{"Id":"371941750","IsPullRequest":true,"CreatedAt":"2018-11-01T16:20:07","Actor":"SeanKilleen","Number":"113","RawContent":null,"Title":"Update logo for couchbase-lite in projects.json","State":"closed","Body":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser.","Url":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Closed or merged PR \"Update logo for couchbase-lite in projects.json\" (#113)"},{"Id":"365089074","IsPullRequest":false,"CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Number":"112","RawContent":null,"Title":"Suggest: key  F12  go to source code of dotnetcore  rather then metadata","State":"open","Body":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n","Url":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Open issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112)"},{"Id":"356296763","IsPullRequest":false,"CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Number":"111","RawContent":null,"Title":"Sourcelink location is confusing","State":"open","Body":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section.","Url":"https://github.com/dotnet/foundation/issues/111","RelatedDescription":"Open issue \"Sourcelink location is confusing\" (#111)"},{"Id":"353832272","IsPullRequest":true,"CreatedAt":"2018-08-27T16:21:55","Actor":"jkonicki","Number":"110","RawContent":null,"Title":"Fix - add missing comma","State":"closed","Body":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix.","Url":"https://github.com/dotnet/foundation/pull/110","RelatedDescription":"Closed or merged PR \"Fix - add missing comma\" (#110)"},{"Id":"352736883","IsPullRequest":true,"CreatedAt":"2018-08-23T23:10:07","Actor":"anthonychu","Number":"108","RawContent":null,"Title":"Fix errors in projects.json","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/108","RelatedDescription":"Closed or merged PR \"Fix errors in projects.json\" (#108)"},{"Id":"353536205","IsPullRequest":true,"CreatedAt":"2018-08-23T23:09:07","Actor":"jkonicki","Number":"109","RawContent":null,"Title":"Add Steeltoe to the project listing","State":"closed","Body":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks.","Url":"https://github.com/dotnet/foundation/pull/109","RelatedDescription":"Closed or merged PR \"Add Steeltoe to the project listing\" (#109)"},{"Id":"340355507","IsPullRequest":false,"CreatedAt":"2018-07-11T18:28:16","Actor":"Eilon","Number":"107","RawContent":null,"Title":"Links to .NET Foundation web site use HTTP instead of HTTPS","State":"open","Body":"It appears that HTTPS works just fine: https://www.dotnetfoundation.org/\r\n\r\nBut the links at these places use HTTP:\r\n1. The link in the header of https://github.com/dotnet/home\r\n2. The link in the header of https://github.com/dotnet\r\n3. Some links in https://github.com/dotnet/home/blob/master/README.md (both to .NET Foundation, and a GitHub link to another project)\r\n\r\nThese links should all change to HTTPS.","Url":"https://github.com/dotnet/foundation/issues/107","RelatedDescription":"Open issue \"Links to .NET Foundation web site use HTTP instead of HTTPS\" (#107)"},{"Id":"340126921","IsPullRequest":false,"CreatedAt":"2018-07-11T07:41:25","Actor":"glatzert","Number":"106","RawContent":null,"Title":"Updates are not requested from local WSUS","State":"open","Body":"The Team somewhen Mention, that fixes should be installed automatically, if .NET Core is on a Windows Server.\r\nThis seems not to work. What are the prerequisits for this to be working?","Url":"https://github.com/dotnet/foundation/issues/106","RelatedDescription":"Open issue \"Updates are not requested from local WSUS\" (#106)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"416522245","IsPullRequest":true,"CreatedAt":"2019-03-04T05:07:25","Actor":"Dotnet-GitSync-Bot","Number":"22985","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/coreclr/pull/22985","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert\" (#22985)"},{"Id":"416601766","IsPullRequest":false,"CreatedAt":"2019-03-04T02:21:57","Actor":"peppy","Number":"22990","RawContent":null,"Title":"Runtime crash in 3.0.0-preview-27324-5 (TieredCompilation)","State":"open","Body":"Our project which works fine on all 2.2 releases will crash at runtime with the following trace:\r\n\r\n```\r\n\r\nThread 33 Crashed:\r\n0   libclrjit.dylib               \t0x000000010a49bdc4 GenTree::isContained() const + 4\r\n1   libclrjit.dylib               \t0x000000010a570405 CodeGen::genStructPutArgUnroll(GenTreePutArgStk*) + 69\r\n2   libclrjit.dylib               \t0x000000010a56d63d CodeGen::genPutArgStk(GenTreePutArgStk*) + 301\r\n3   libclrjit.dylib               \t0x000000010a453425 CodeGen::genCodeForBBlist() + 1829\r\n4   libclrjit.dylib               \t0x000000010a44cab5 CodeGen::genGenerateCode(void**, unsigned int*) + 85\r\n5   libclrjit.dylib               \t0x000000010a4582c6 Compiler::compCompile(void**, unsigned int*, JitFlags*) + 5734\r\n6   libclrjit.dylib               \t0x000000010a4592e1 Compiler::compCompileHelper(CORINFO_MODULE_STRUCT_*, ICorJitInfo*, CORINFO_METHOD_INFO*, void**, unsigned int*, JitFlags*, CorInfoInstantiationVerification) + 705\r\n7   libclrjit.dylib               \t0x000000010a458cd1 Compiler::compCompile(CORINFO_METHOD_STRUCT_*, CORINFO_MODULE_STRUCT_*, ICorJitInfo*, CORINFO_METHOD_INFO*, void**, unsigned int*, JitFlags*) + 881\r\n8   libclrjit.dylib               \t0x000000010a459d51 jitNativeCode(CORINFO_METHOD_STRUCT_*, CORINFO_MODULE_STRUCT_*, ICorJitInfo*, CORINFO_METHOD_INFO*, void**, unsigned int*, JitFlags*, void*) + 641\r\n9   libclrjit.dylib               \t0x000000010a45ce30 CILJit::compileMethod(ICorJitInfo*, CORINFO_METHOD_INFO*, unsigned int, unsigned char**, unsigned int*) + 160\r\n10  libcoreclr.dylib              \t0x00000001099e01c7 invokeCompileMethodHelper(EEJitManager*, CEEInfo*, CORINFO_METHOD_INFO*, CORJIT_FLAGS, unsigned char**, unsigned int*) + 231\r\n11  libcoreclr.dylib              \t0x00000001099e028e invokeCompileMethod(EEJitManager*, CEEInfo*, CORINFO_METHOD_INFO*, CORJIT_FLAGS, unsigned char**, unsigned int*) + 126\r\n12  libcoreclr.dylib              \t0x00000001099e03a3 CallCompileMethodWithSEHWrapper(EEJitManager*, CEEInfo*, CORINFO_METHOD_INFO*, CORJIT_FLAGS, unsigned char**, unsigned int*, NativeCodeVersion) + 83\r\n13  libcoreclr.dylib              \t0x00000001099e0cf1 UnsafeJitFunction(NativeCodeVersion, COR_ILMETHOD_DECODER*, CORJIT_FLAGS, unsigned int*) + 1329\r\n14  libcoreclr.dylib              \t0x0000000109a12b75 MethodDesc::JitCompileCodeLocked(PrepareCodeConfig*, ListLockEntryBase<NativeCodeVersion>*, unsigned int*, CORJIT_FLAGS*) + 309\r\n15  libcoreclr.dylib              \t0x0000000109a128f5 MethodDesc::JitCompileCodeLockedEventWrapper(PrepareCodeConfig*, ListLockEntryBase<NativeCodeVersion>*) + 533\r\n16  libcoreclr.dylib              \t0x0000000109a11ed5 MethodDesc::JitCompileCode(PrepareCodeConfig*) + 341\r\n17  libcoreclr.dylib              \t0x0000000109a11cc9 MethodDesc::PrepareILBasedCode(PrepareCodeConfig*) + 137\r\n18  libcoreclr.dylib              \t0x0000000109a11ad6 MethodDesc::PrepareCode(NativeCodeVersion) + 486\r\n19  libcoreclr.dylib              \t0x0000000109975e62 CodeVersionManager::PublishVersionableCodeIfNecessary(MethodDesc*, int) + 466\r\n20  libcoreclr.dylib              \t0x0000000109a14273 MethodDesc::DoPrestub(MethodTable*) + 371\r\n21  libcoreclr.dylib              \t0x0000000109a13e6b PreStubWorker + 571\r\n22  libcoreclr.dylib              \t0x0000000109c1bb8d ThePreStub + 92\r\n23  ???                           \t0x000000011574de24 0 + 4654947876\r\n24  ???                           \t0x00000001143acad6 0 + 4634364630\r\n25  ???                           \t0x00000001143ac813 0 + 4634363923\r\n26  ???                           \t0x00000001143a96b2 0 + 4634351282\r\n27  ???                           \t0x00000001143a8b1b 0 + 4634348315\r\n28  ???                           \t0x00000001143a6fcd 0 + 4634341325\r\n29  ???                           \t0x00000001143a6efd 0 + 4634341117\r\n30  ???                           \t0x00000001143a6d71 0 + 4634340721\r\n31  ???                           \t0x00000001143a6957 0 + 4634339671\r\n32  ???                           \t0x00000001143a6829 0 + 4634339369\r\n33  ???                           \t0x00000001143a63d9 0 + 4634338265\r\n34  ???                           \t0x00000001143b2c6b 0 + 4634389611\r\n35  ???                           \t0x00000001143b2ad5 0 + 4634389205\r\n36  ???                           \t0x0000000114399db6 0 + 4634287542\r\n37  ???                           \t0x00000001143a4fac 0 + 4634333100\r\n38  ???                           \t0x00000001143a4e58 0 + 4634332760\r\n39  ???                           \t0x000000011576930e 0 + 4655059726\r\n40  ???                           \t0x00000001157a9bab 0 + 4655324075\r\n41  ???                           \t0x0000000115c8b8ce 0 + 4660443342\r\n42  ???                           \t0x0000000115c8b80f 0 + 4660443151\r\n43  ???                           \t0x0000000115c8b751 0 + 4660442961\r\n44  ???                           \t0x0000000115644396 0 + 4653859734\r\n45  ???                           \t0x00000001157a9887 0 + 4655323271\r\n46  ???                           \t0x0000000115ce426a 0 + 4660806250\r\n47  libcoreclr.dylib              \t0x0000000109c1ae87 CallDescrWorkerInternal + 124\r\n48  libcoreclr.dylib              \t0x0000000109a7b2fe CallDescrWorkerWithHandler(CallDescrData*, int) + 110\r\n49  libcoreclr.dylib              \t0x0000000109b3785f CallDescrWorkerReflectionWrapper(CallDescrData*, Frame*) + 127\r\n50  libcoreclr.dylib              \t0x0000000109b3888d RuntimeMethodHandle::InvokeMethod(Object*, PtrArray*, SignatureNative*, bool, bool) + 3229\r\n51  ???                           \t0x0000000115c3f5ef 0 + 4660131311\r\n52  ???                           \t0x0000000115c42ee3 0 + 4660145891\r\n53  ???                           \t0x00000001157be7c4 0 + 4655409092\r\n54  ???                           \t0x0000000115c4409b 0 + 4660150427\r\n55  ???                           \t0x0000000115c43dc1 0 + 4660149697\r\n56  ???                           \t0x0000000115c43b3e 0 + 4660149054\r\n57  ???                           \t0x0000000115c45ba3 0 + 4660157347\r\n58  libcoreclr.dylib              \t0x0000000109c1ae87 CallDescrWorkerInternal + 124\r\n59  libcoreclr.dylib              \t0x0000000109a7b2fe CallDescrWorkerWithHandler(CallDescrData*, int) + 110\r\n60  libcoreclr.dylib              \t0x0000000109b3785f CallDescrWorkerReflectionWrapper(CallDescrData*, Frame*) + 127\r\n61  libcoreclr.dylib              \t0x0000000109b3888d RuntimeMethodHandle::InvokeMethod(Object*, PtrArray*, SignatureNative*, bool, bool) + 3229\r\n62  ???                           \t0x0000000115c3f64f 0 + 4660131407\r\n63  ???                           \t0x0000000115c42ee3 0 + 4660145891\r\n64  ???                           \t0x00000001157be7c4 0 + 4655409092\r\n65  ???                           \t0x00000001157be781 0 + 4655409025\r\n66  ???                           \t0x00000001157be781 0 + 4655409025\r\n67  ???                           \t0x00000001157be781 0 + 4655409025\r\n68  ???                           \t0x00000001157be781 0 + 4655409025\r\n69  ???                           \t0x0000000115c4409b 0 + 4660150427\r\n70  ???                           \t0x0000000115c43dc1 0 + 4660149697\r\n71  ???                           \t0x00000001143f55e8 0 + 4634662376\r\n72  ???                           \t0x0000000115c60452 0 + 4660266066\r\n73  ???                           \t0x0000000115c892eb 0 + 4660433643\r\n74  ???                           \t0x00000001109b874e 0 + 4573595470\r\n75  ???                           \t0x00000001109cab37 0 + 4573670199\r\n76  ???                           \t0x00000001143f5219 0 + 4634661401\r\n77  ???                           \t0x000000011153518b 0 + 4585640331\r\n78  ???                           \t0x00000001109a1f94 0 + 4573503380\r\n79  ???                           \t0x00000001109acde6 0 + 4573548006\r\n80  ???                           \t0x00000001109a205e 0 + 4573503582\r\n81  libcoreclr.dylib              \t0x0000000109c1ae87 CallDescrWorkerInternal + 124\r\n82  libcoreclr.dylib              \t0x0000000109a7bdbf MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 911\r\n83  libcoreclr.dylib              \t0x0000000109a8f795 ThreadNative::KickOffThread_Worker(void*) + 469\r\n84  libcoreclr.dylib              \t0x0000000109a3c66a ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) + 346\r\n85  libcoreclr.dylib              \t0x0000000109a3cc53 ManagedThreadBase::KickOff(ADID, void (*)(void*), void*) + 51\r\n86  libcoreclr.dylib              \t0x0000000109a8f9ef ThreadNative::KickOffThread(void*) + 351\r\n87  libcoreclr.dylib              \t0x00000001098af0d7 CorUnix::CPalThread::ThreadEntry(void*) + 407\r\n88  libsystem_pthread.dylib       \t0x00007fff77727305 _pthread_body + 126\r\n89  libsystem_pthread.dylib       \t0x00007fff7772a26f _pthread_start + 70\r\n90  libsystem_pthread.dylib       \t0x00007fff77726415 thread_start + 13\r\n```\r\n\r\nThis is reproducible but I have not been able to isolate the specific code which causes the crash. Reproduction follows:\r\n\r\n- https://github.com/peppy/osu/tree/target-net-core-30\r\n- `dotnet run osu.sln --project osu.Desktop`\r\n- Click osu! logo\r\n- Click \"play\"\r\n- Click \"solo\"\r\n- Application will crash\r\n\r\nThis crash **can be avoided** by disabling tiered compilation (adding `<TieredCompilation>false</TieredCompilation>` to `osu.Desktop.csproj` and performing a full `dotnet clean`).\r\n\r\n```\r\ndotnet --version\r\n3.0.100-preview-010184\r\n```\r\n\r\nHost: macOS Mojave 10.14.2 (18C54)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/22990","RelatedDescription":"Open issue \"Runtime crash in 3.0.0-preview-27324-5 (TieredCompilation)\" (#22990)"},{"Id":"416594079","IsPullRequest":false,"CreatedAt":"2019-03-04T01:30:33","Actor":"VincentBu","Number":"22989","RawContent":null,"Title":"[x64] Test failed: System.Runtime.Loader.Tests.DefaultLoadContextTests.LoadInDefaultContext","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/jitstress/job/x64_checked_ubuntu_corefx_baseline/856/\r\n\r\n**Failed tests:**\r\nSystem.Runtime.Loader.Tests.DefaultLoadContextTests.LoadInDefaultContext\r\n\r\n**Log:**\r\n```\r\nSystem.Runtime.Loader.Tests.DefaultLoadContextTests.LoadInDefaultContext [FAIL]\r\n  [m[31;1m[m[37m      Assert.Throws() Failure\r\n  [m[37m      Expected: typeof(System.IO.FileNotFoundException)\r\n  [m[37m      Actual:   (No exception was thrown)\r\n  [m[30;1m      Stack Trace:\r\n  [m[37m        /mnt/j/workspace/dotnet_coreclr/master/jitstress/x64_checked_ubuntu_corefx_baseline/_/fx/src/System.Runtime.Loader/tests/DefaultContext/DefaultLoadContextTest.cs(97,0): at System.Runtime.Loader.Tests.DefaultLoadContextTests.LoadInDefaultContext()\r\n  [m[37m  Finished:    System.Runtime.Loader.DefaultContext.Tests\r\n  [m[37m=== TEST EXECUTION SUMMARY ===\r\n  [m[37m   System.Runtime.Loader.DefaultContext.Tests  Total: 2, Errors: 0, Failed: 1, Skipped: 0, Time: 1.415s\r\n  [m[m/mnt/j/workspace/dotnet_coreclr/master/jitstress/x64_checked_ubuntu_corefx_baseline/_/fx/src/System.Runtime.Loader/tests/DefaultContext\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22989","RelatedDescription":"Open issue \"[x64] Test failed: System.Runtime.Loader.Tests.DefaultLoadContextTests.LoadInDefaultContext\" (#22989)"},{"Id":"416592276","IsPullRequest":false,"CreatedAt":"2019-03-04T01:17:52","Actor":"VincentBu","Number":"22988","RawContent":null,"Title":"[x64] error MSB1008 in x64_checked_windows_nt_illink","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/illink/job/x64_checked_windows_nt_illink/654/\r\n\r\n**Log:**\r\n```\r\nMSBUILD : error MSB1008: Only one project can be specified.\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22988","RelatedDescription":"Open issue \"[x64] error MSB1008 in x64_checked_windows_nt_illink\" (#22988)"},{"Id":"416591137","IsPullRequest":false,"CreatedAt":"2019-03-04T01:08:34","Actor":"VincentBu","Number":"22987","RawContent":null,"Title":"[x64] Unexpected test count in checked_windows_nt","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/checked_windows_nt/11522/\r\n\r\n**Log:**\r\n```\r\nD:\\j\\workspace\\checked_windo---14fb495b\\tests\\runtest.proj(75,5): error : Unexpected test count. Expected > 9000, found 3149.'\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22987","RelatedDescription":"Open issue \"[x64] Unexpected test count in checked_windows_nt\" (#22987)"},{"Id":"416518463","IsPullRequest":true,"CreatedAt":"2019-03-03T21:33:54","Actor":"dotnet-maestro[bot]","Number":"22982","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/core-setup\r\n\r\n- Microsoft.NETCore.App - 3.0.0-preview4-27502-8\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/22982","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#22982)"},{"Id":"416517951","IsPullRequest":true,"CreatedAt":"2019-03-03T21:33:39","Actor":"dotnet-maestro[bot]","Number":"22981","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- Microsoft.NETCore.Platforms - 3.0.0-preview4.19153.2\r\n- Microsoft.Private.CoreFx.NETCoreApp - 4.6.0-preview4.19153.2\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/22981","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#22981)"},{"Id":"416518903","IsPullRequest":true,"CreatedAt":"2019-03-03T21:33:23","Actor":"dotnet-maestro[bot]","Number":"22983","RawContent":null,"Title":"[master] Update dependencies from  1 repositories","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://dnceng@dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n\r\n- optimization.IBC.CoreCLR - 99.99.99-master-20190303.1\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/22983","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from  1 repositories\" (#22983)"},{"Id":"416543315","IsPullRequest":false,"CreatedAt":"2019-03-03T17:54:16","Actor":"aviv86","Number":"22986","RawContent":null,"Title":"strange \"AccessViolationException\" when a \"StackOverflowException\" is expected","State":"open","Body":"Just a simple Net Core 2.1 Console App, \r\nand awaiting (probably any) async task before an infinite recursive call.\r\n\r\nWhen running the below piece of code inside Visual Studio 2017, \r\nI'd expect a StackOverflowException due the (symbolic) recursion. \r\nHowever, I get a strange AccessViolationException, and the program shuts down abruptly.\r\n\r\nIf I remove the async call, the stack will overflow as expected, and the IDE points me where the problem is (Same if I replace `await httpClient.GetAsync(\"https://www.ravendb.net\")` with `httpClient.GetAsync(\"https://www.ravendb.net\").Result` )\r\n\r\n```\r\n    class Program\r\n    {\r\n        private async Task<string> DoCurlAsync()\r\n        {\r\n            using (var httpClient = new HttpClient())\r\n            using (var httpResponse = await httpClient.GetAsync(\"https://www.ravendb.net\"))\r\n            {\r\n                return await httpResponse.Content.ReadAsStringAsync();\r\n            }\r\n        }\r\n\r\n        private void Foo()\r\n        {\r\n            Foo();\r\n        }\r\n\r\n        private async Task Test()\r\n        {\r\n            var str = await DoCurlAsync();\r\n            Foo();\r\n        }\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            new Program().Test().Wait();\r\n        }\r\n\r\n    }\r\n```\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/22986","RelatedDescription":"Open issue \"strange \"AccessViolationException\" when a \"StackOverflowException\" is expected\" (#22986)"},{"Id":"416519536","IsPullRequest":true,"CreatedAt":"2019-03-03T14:04:25","Actor":"benaadams","Number":"22984","RawContent":null,"Title":"Avoid boxing allocations for async in Tier0","State":"open","Body":"https://github.com/dotnet/coreclr/pull/14178 removed allocations for async method delgates; however the reduced optimization in Tier0 reintroduces allocations due to boxing and non-inlining:\r\n\r\n![image](https://user-images.githubusercontent.com/1142958/53696203-b4531300-3dbc-11e9-9b8b-d34af9187110.png)\r\n\r\nAdding `AggressiveOptimization` to `AwaitUnsafeOnCompleted` addresses this.\r\n\r\nResolves: https://github.com/dotnet/coreclr/issues/20937\r\n\r\n/cc @stephentoub @davidfowl @AndyAyersMS @jkotas ","Url":"https://github.com/dotnet/coreclr/pull/22984","RelatedDescription":"Open PR \"Avoid boxing allocations for async in Tier0\" (#22984)"},{"Id":"416479097","IsPullRequest":true,"CreatedAt":"2019-03-03T11:10:08","Actor":"Dotnet-GitSync-Bot","Number":"22980","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/coreclr/pull/22980","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert\" (#22980)"},{"Id":"416476737","IsPullRequest":true,"CreatedAt":"2019-03-03T05:06:56","Actor":"RussKeldorph","Number":"22979","RawContent":null,"Title":"Fix JIT/Directed/pinvoke/tail","State":"open","Body":"Remove dependency on Windows user32 library and enable test for all platforms.\r\n\r\nFixes #13048","Url":"https://github.com/dotnet/coreclr/pull/22979","RelatedDescription":"Open PR \"Fix JIT/Directed/pinvoke/tail\" (#22979)"},{"Id":"416469251","IsPullRequest":true,"CreatedAt":"2019-03-03T03:21:40","Actor":"fhalim","Number":"22978","RawContent":null,"Title":"Corrected some misspellings","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/22978","RelatedDescription":"Closed or merged PR \"Corrected some misspellings\" (#22978)"},{"Id":"416464136","IsPullRequest":true,"CreatedAt":"2019-03-03T03:20:31","Actor":"stephentoub","Number":"22977","RawContent":null,"Title":"Remove defunct Augments\\RuntimeThread","State":"closed","Body":"I believe everything is now in place to remove this from coreclr, though we probably need to wait to merge this, as everything hasn't fully worked its way through the system for corert.","Url":"https://github.com/dotnet/coreclr/pull/22977","RelatedDescription":"Closed or merged PR \"Remove defunct Augments\\RuntimeThread\" (#22977)"},{"Id":"416430149","IsPullRequest":true,"CreatedAt":"2019-03-02T19:09:10","Actor":"jashook","Number":"22976","RawContent":null,"Title":"Disable tests for open issues","State":"open","Body":"Disable tests based on #22975 and #22974 ","Url":"https://github.com/dotnet/coreclr/pull/22976","RelatedDescription":"Open PR \"Disable tests for open issues\" (#22976)"},{"Id":"416429935","IsPullRequest":false,"CreatedAt":"2019-03-02T19:06:57","Actor":"jashook","Number":"22975","RawContent":null,"Title":"[Linux|x64] Regressions/coreclr/1514/interlockexchange/ fails randomly","State":"open","Body":"This test was not being run for a bit. It fails intermittently. Example output below:\r\n\r\n```\r\nSystem.Runtime.InteropServices.SEHException: External component has thrown an exception.System.Runtime.InteropServices.SEHException: External component has thrown an exception.\r\n\r\nSystem.Runtime.InteropServices.SEHException: External component has thrown an exception.System.Runtime.InteropServices.SEHException: External component has thrown an exception.System.Runtime.InteropServices.SEHException: External component has thrown an exception.\r\n\r\n\r\n at System.Threading.Interlocked.Add(Int64 ByRef, Int64)\r\n at System.Threading.Interlocked.Add(Int64 ByRef, Int64) at System.Threading.Interlocked.Add(Int64 ByRef, Int64) at Program.DoWork()\r\n\r\n\r\n at System.Threading.Interlocked.Add(Int64 ByRef, Int64)\r\n at Program.DoWork()\r\n at Program.DoWork()\r\n at System.Threading.Thread.ThreadMain_ThreadStart() at System.Threading.Thread.ThreadMain_ThreadStart()\r\n\r\n at System.Threading.Interlocked.Add(Int64 ByRef, Int64) at Program.DoWork() at System.Threading.Thread.ThreadMain_ThreadStart()\r\n at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n at System.Threading.ThreadHelper.ThreadStart_Context(System.Object) at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n\r\n at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n\r\n at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n at System.Threading.Thread.ThreadMain_ThreadStart()\r\n\r\n at System.Threading.ThreadHelper.ThreadStart() at Program.DoWork()\r\n at System.Threading.ThreadHelper.ThreadStart()\r\n\r\n at System.Threading.Thread.ThreadMain_ThreadStart()\r\n at System.Threading.ThreadHelper.ThreadStart() at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n\r\n at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n at System.Threading.ThreadHelper.ThreadStart()\r\n at System.Threading.ThreadHelper.ThreadStart()\r\n/home/helixbot/dotnetbuild/work/26c5993a-dbfe-45cc-a3a3-b2f309444ed6/Work/4ad2340d-a861-465d-8c62-65a6518c469d/Exec/1514/InterlockExchange/InterlockExchange.sh: line 252: 11134 Aborted (core dumped) $LAUNCHER $ExePath \\\"${CLRTestExecutionArguments[@]}\\\"\r\n/n/nReturn code: 1/nRaw output file: /home/helixbot/dotnetbuild/work/26c5993a-dbfe-45cc-a3a3-b2f309444ed6/Work/4ad2340d-a861-465d-8c62-65a6518c469d/Exec/Reports/Regressions.coreclr/1514/InterlockExchange/InterlockExchange.output.txt/nRaw output:/nBEGIN EXECUTION\r\n/home/helixbot/dotnetbuild/work/26c5993a-dbfe-45cc-a3a3-b2f309444ed6/Payload/corerun InterlockExchange.exe ''\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\n/nTo run the test:/n> set CORE_ROOT=/home/helixbot/dotnetbuild/work/26c5993a-dbfe-45cc-a3a3-b2f309444ed6/Payload/n> /home/helixbot/dotnetbuild/work/26c5993a-dbfe-45cc-a3a3-b2f309444ed6/Work/4ad2340d-a861-465d-8c62-65a6518c469d/Exec/1514/InterlockExchange/InterlockExchange.sh/n\r\nExpected: True\r\nActual: False\r\n\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22975","RelatedDescription":"Open issue \"[Linux|x64] Regressions/coreclr/1514/interlockexchange/ fails randomly\" (#22975)"},{"Id":"416429161","IsPullRequest":false,"CreatedAt":"2019-03-02T18:59:55","Actor":"jashook","Number":"22974","RawContent":null,"Title":"[Windows x64|x86|arm64] Native vararg test failures","State":"open","Body":"This is a recent regression that causes the following tests to fail:\r\n\r\n```\r\nJIT_jit64._mcc_interop_mcc_i11_mcc_i11_._mcc_interop_mcc_i11_mcc_i11_cmd\r\nJIT_jit64._mcc_interop_mcc_i10_mcc_i10_._mcc_interop_mcc_i10_mcc_i10_cmd\r\nJIT_jit64._mcc_interop_mcc_i12_mcc_i12_._mcc_interop_mcc_i12_mcc_i12_cmd\r\nJIT_jit64._mcc_interop_mcc_i13_mcc_i13_._mcc_interop_mcc_i13_mcc_i13_cmd\r\n```\r\n\r\n```\r\n0xC0000005\r\n at MCCTest.MyClass.Sum(Single, ...)\r\n at MCCTest.MyClass.GetSum()\r\n at MCCTest.MyClass.Main(System.String[])\r\n\r\n\r\nReturn code: 1\r\nRaw output file: C:\\\\dotnetbuild\\\\work\\\\308bb24e-1a5a-44e4-b913-92d855d0490c\\\\Work\\\\68e84c2c-3ffc-49aa-b877-1064b1f421fc\\\\Exec\\\\Reports\\\\JIT.jit64\\\\mcc\\\\interop\\\\mcc_i13\\\\mcc_i13.output.txt\r\nRaw output:\r\nBEGIN EXECUTION\\r\r\n 1 file(s) copied.\\r\r\n\\\" C:\\\\dotnetbuild\\\\work\\\\308bb24e-1a5a-44e4-b913-92d855d0490c\\\\Payload\\\\crossgen.exe\\\" /Platform_Assemblies_Paths C:\\\\dotnetbuild\\\\work\\\\308bb24e-1a5a-44e4-b913-92d855d0490c\\\\Payload;C:\\\\dotnetbuild\\\\work\\\\308bb24e-1a5a-44e4-b913-92d855d0490c\\\\Work\\\\68e84c2c-3ffc-49aa-b877-1064b1f421fc\\\\Exec\\\\mcc\\\\interop\\\\mcc_i13\\\\IL;C:\\\\dotnetbuild\\\\work\\\\308bb24e-1a5a-44e4-b913-92d855d0490c\\\\Work\\\\68e84c2c-3ffc-49aa-b877-1064b1f421fc\\\\Exec\\\\mcc\\\\interop\\\\mcc_i13 /in mcc_i13.org /out mcc_i13.exe\\r\r\nMicrosoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\\r\r\nCopyright (c) Microsoft Corporation. All rights reserved.\\r\r\n\\r\r\nWarning: Could not load type 'System.Runtime.CompilerServices.AssemblyAttributesGoHere' from assembly 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'. while resolving 0x1000016 - System.Runtime.CompilerServices.AssemblyAttributesGoHere.\\r\r\nCOMPILATION FAILED: file: lclvars.cpp:380 compiling method MCCTest.Common:CheckResult(struct,int):int reason Too many arguments for the \\\"ret\\\" instruction to pop\\r\r\nCOMPILATION FAILED: file: lclvars.cpp:380 compiling method MCCTest.Common:CheckResult(struct,int):int reason Too many arguments for the \\\"ret\\\" instruction to pop\\r\r\nThe JIT compiler encountered invalid IL code or an internal limitation. while compiling method MCCTest.Common.CheckResult\\r\r\nCOMPILATION FAILED: file: lclvars.cpp:380 compiling method MCCTest.VTypeF:Add(struct):this reason Too many arguments for the \\\"ret\\\" instruction to pop\\r\r\nCOMPILATION FAILED: file: lclvars.cpp:380 compiling method MCCTest.VTypeF:Add(struct):this reason Too many arguments for the \\\"ret\\\" instruction to pop\\r\r\nThe JIT compiler encountered invalid IL code or an internal limitation. while compiling method MCCTest.VTypeF.Add\\r\r\nCOMPILATION FAILED: file: lclvars.cpp:380 compiling method MCCTest.VTypeF:Check(struct):this reason Too many arguments for the \\\"ret\\\" instruction to pop\\r\r\nCOMPILATION FAILED: file: lclvars.cpp:380 compiling method MCCTest.VTypeF:Check(struct):this reason Too many arguments for the \\\"ret\\\" instruction to pop\\r\r\nThe JIT compiler encountered invalid IL code or an internal limitation. while compiling method MCCTest.VTypeF.Check\\r\r\nCOMPILATION FAILED: file: lclvars.cpp:380 compiling method MCCTest.Common2`1[VTypeF][MCCTest.VTypeF]:CheckResult(struct,int):int reason Too many arguments for the \\\"ret\\\" instruction to pop\\r\r\nCOMPILATION FAILED: file: lclvars.cpp:380 compiling method MCCTest.Common2`1[VTypeF][MCCTest.VTypeF]:CheckResult(struct,int):int reason Too many arguments for the \\\"ret\\\" instruction to pop\\r\r\nThe JIT compiler encountered invalid IL code or an internal limitation. while compiling method MCCTest.Common2`1[VTypeF][MCCTest.VTypeF].CheckResult\\r\r\nNative image mcc_i13.exe generated successfully.\\r\r\n \\\"C:\\\\dotnetbuild\\\\work\\\\308bb24e-1a5a-44e4-b913-92d855d0490c\\\\Payload\\\\corerun.exe\\\" mcc_i13.exe \\r\r\nExpected: 100\\r\r\nActual: -1073741819\\r\r\nEND EXECUTION - FAILED\\r\r\nFAILED\\r\r\nTest Harness Exitcode is : 1\\r\r\n\r\nTo run the test:\r\n> set CORE_ROOT=C:\\\\dotnetbuild\\\\work\\\\308bb24e-1a5a-44e4-b913-92d855d0490c\\\\Payload\r\n> C:\\\\dotnetbuild\\\\work\\\\308bb24e-1a5a-44e4-b913-92d855d0490c\\\\Work\\\\68e84c2c-3ffc-49aa-b877-1064b1f421fc\\\\Exec\\\\mcc\\\\interop\\\\mcc_i13\\\\mcc_i13.cmd\r\n\\r\r\nExpected: True\\r\r\nActual: False\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22974","RelatedDescription":"Open issue \"[Windows x64|x86|arm64] Native vararg test failures\" (#22974)"},{"Id":"416399802","IsPullRequest":true,"CreatedAt":"2019-03-02T18:55:41","Actor":"dotnet-maestro[bot]","Number":"22969","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/core-setup\r\n\r\n- Microsoft.NETCore.App - 3.0.0-preview4-27501-13\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/22969","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#22969)"},{"Id":"416399302","IsPullRequest":true,"CreatedAt":"2019-03-02T18:55:16","Actor":"dotnet-maestro[bot]","Number":"22968","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- Microsoft.NETCore.Platforms - 3.0.0-preview4.19152.1\r\n- Microsoft.Private.CoreFx.NETCoreApp - 4.6.0-preview4.19152.1\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/22968","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#22968)"},{"Id":"416428589","IsPullRequest":true,"CreatedAt":"2019-03-02T18:54:49","Actor":"jashook","Number":"22973","RawContent":null,"Title":"Revert \"Revert \"Improve coreclrhost.h header\"\"","State":"closed","Body":"Reverts dotnet/coreclr#22955","Url":"https://github.com/dotnet/coreclr/pull/22973","RelatedDescription":"Closed or merged PR \"Revert \"Revert \"Improve coreclrhost.h header\"\"\" (#22973)"},{"Id":"416404828","IsPullRequest":true,"CreatedAt":"2019-03-02T16:49:53","Actor":"jkotas","Number":"22972","RawContent":null,"Title":"Disable DOTNET_MULTILEVEL_LOOKUP in the build scripts","State":"closed","Body":"Fixes #22971","Url":"https://github.com/dotnet/coreclr/pull/22972","RelatedDescription":"Closed or merged PR \"Disable DOTNET_MULTILEVEL_LOOKUP in the build scripts\" (#22972)"},{"Id":"416403089","IsPullRequest":false,"CreatedAt":"2019-03-02T16:49:53","Actor":"jkotas","Number":"22971","RawContent":null,"Title":"Build fails: System.MissingMethodException: Method not found: 'Void NuGet.Packaging.Manifest.Save","State":"closed","Body":"Building current master (https://github.com/dotnet/coreclr/commit/ef0fde985732148eea136e90aece4ccd3d0370b5) using `build.cmd checked skiptests` fails on Windows for me with:\r\n\r\n```\r\nBUILD: Building Packages for Windows_NT.x64.Checked\r\nTools are already initialized.\r\nRunning: dotnet msbuild /nologo /verbosity:minimal /clp:Summary /nodeReuse:false      /l:BinClashLogger,Tools/Microsoft.DotNet.Build.Tasks.dll;LogFile=binclash.log      /p:RestoreDefaultOptimizationDataPackage=false /p:PortableBuild=true      /p:UsePartialNGENOptimization=false /maxcpucount      C:\\coreclr\\src\\.nuget\\packages.builds      /flp:Verbosity=normal;LogFile=\"C:\\coreclr\\bin\\Logs\\Nuget_Windows_NT__x64__Checked.log\" /flp1:WarningsOnly;LogFile=\"C:\\coreclr\\bin\\Logs\\Nuget_Windows_NT__x64__Checked.wrn\" /flp2:ErrorsOnly;LogFile=\"C:\\coreclr\\bin\\Logs\\Nuget_Windows_NT__x64__Checked.err\" /p:Platform=x64 /p:__BuildOS=Windows_NT /p:__BuildType=Checked /p:__BuildArch=x64\r\nC:\\coreclr\\Tools\\Packaging.targets(1208,5): error : System.MissingMethodException: Method not found: 'Void NuGet.Packaging.Manifest.Save(System.IO.Stream, Boolean)'. [C:\\coreclr\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\nC:\\coreclr\\Tools\\Packaging.targets(1208,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.GenerateNuSpec.WriteNuSpecFile() [C:\\coreclr\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\nC:\\coreclr\\Tools\\Packaging.targets(1208,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.GenerateNuSpec.Execute() [C:\\coreclr\\src\\.nuget\\Microsoft.NETCore.Runtime.CoreCLR\\Microsoft.NETCore.Runtime.CoreCLR.pkgproj]\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22971","RelatedDescription":"Closed issue \"Build fails: System.MissingMethodException: Method not found: 'Void NuGet.Packaging.Manifest.Save\" (#22971)"},{"Id":"416400118","IsPullRequest":true,"CreatedAt":"2019-03-02T16:37:45","Actor":"dotnet-maestro[bot]","Number":"22970","RawContent":null,"Title":"[master] Update dependencies from  1 repositories","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://dnceng@dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n\r\n- optimization.IBC.CoreCLR - 99.99.99-master-20190302.1\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/22970","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from  1 repositories\" (#22970)"},{"Id":"416378633","IsPullRequest":true,"CreatedAt":"2019-03-02T13:31:28","Actor":"Dotnet-GitSync-Bot","Number":"22966","RawContent":null,"Title":"Mirror changes from dotnet/corert,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/coreclr/pull/22966","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert,corefx\" (#22966)"},{"Id":"416397162","IsPullRequest":true,"CreatedAt":"2019-03-02T13:26:10","Actor":"dotnet-maestro[bot]","Number":"22967","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19151.5\r\n- Microsoft.DotNet.Helix.Sdk - 2.0.0-beta.19151.5\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19151.5\r\n- Microsoft.DotNet.Helix.Sdk - 2.0.0-beta.19151.5\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/22967","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#22967)"},{"Id":"416362321","IsPullRequest":true,"CreatedAt":"2019-03-02T05:53:32","Actor":"tannergooding","Number":"22965","RawContent":null,"Title":"Speeding up Math.Min and Math.Max for float/double","State":"open","Body":"This resolves https://github.com/dotnet/coreclr/issues/22951 for x86/x64.","Url":"https://github.com/dotnet/coreclr/pull/22965","RelatedDescription":"Open PR \"Speeding up Math.Min and Math.Max for float/double\" (#22965)"},{"Id":"416354743","IsPullRequest":false,"CreatedAt":"2019-03-02T04:05:26","Actor":"jkotas","Number":"22964","RawContent":null,"Title":"AF: VirtualCallStubManager::isDispatchingStubStatic((PCODE)contents)","State":"open","Body":"Windows_NT x64 Checked CoreFX Tests failed in https://github.com/dotnet/coreclr/pull/22958 with:\r\n\r\n```\r\nAssert failure(PID 6120 [0x000017e8], Thread: 5796 [0x16a4]): VirtualCallStubManager::isDispatchingStubStatic((PCODE)contents)\r\n16:43:58 \r\n16:43:58 CORECLR! DispatchEntry::SetContents + 0x42 (0x00007ffb`035bbec2)\r\n16:43:58 CORECLR! Prober::Add + 0x1AE (0x00007ffb`035abd6e)\r\n16:43:58 CORECLR! FastTable::Add + 0xDB (0x00007ffb`035abb6b)\r\n16:43:58 CORECLR! BucketTable::Add + 0xE3 (0x00007ffb`035ab9d7)\r\n16:43:58 CORECLR! VirtualCallStubManager::ResolveWorker + 0x12F6 (0x00007ffb`035ba2be)\r\n16:43:58 CORECLR! VSD_ResolveWorker + 0xA83 (0x00007ffb`035be8f3)\r\n16:43:58 CORECLR! ResolveWorkerAsmStub + 0x6D (0x00007ffb`038d920d)\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22964","RelatedDescription":"Open issue \"AF: VirtualCallStubManager::isDispatchingStubStatic((PCODE)contents)\" (#22964)"},{"Id":"416354612","IsPullRequest":true,"CreatedAt":"2019-03-02T04:03:22","Actor":"sandreenko","Number":"22963","RawContent":null,"Title":"[WIP][Do not review]Test PR ","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/22963","RelatedDescription":"Open PR \"[WIP][Do not review]Test PR \" (#22963)"},{"Id":"416342736","IsPullRequest":false,"CreatedAt":"2019-03-02T01:54:22","Actor":"echesakovMSFT","Number":"22962","RawContent":null,"Title":"Some of the tests are running significantly slower on Windows/x64 than on Linux/x64 ","State":"open","Body":"I see this consistently happening in our CI and I could reproduce this locally.\r\n\r\nI set both environment to COMPlus_ZapDisable=1 COMPlus_ReadyToRun=0 to make sure that it's not a ReadyToRun issue\r\n\r\n**NestedGenericTypesMix.exe** takes 0.8s on Linux x64 Checked (i7-4790 CPU @ 3.60GHz)\r\n\r\n```\r\n[root@9f2f7f1a0117 NestedGenericTypesMix]# env | grep COMP\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_ZapDisable=1\r\nCOMPlus_ReadyToRun=0\r\n[root@9f2f7f1a0117 NestedGenericTypesMix]# time $CORE_ROOT/corerun NestedGenericTypesMix.exe\r\nPASS\r\n\r\nreal    0m0.801s\r\nuser    0m0.606s\r\nsys     0m0.205s\r\n[root@9f2f7f1a0117 NestedGenericTypesMix]# time $CORE_ROOT/corerun NestedGenericTypesMix.exe\r\nPASS\r\n\r\nreal    0m0.797s\r\nuser    0m0.643s\r\nsys     0m0.165s\r\n[root@9f2f7f1a0117 NestedGenericTypesMix]# time $CORE_ROOT/corerun NestedGenericTypesMix.exe\r\nPASS\r\n\r\nreal    0m0.796s\r\nuser    0m0.630s\r\nsys     0m0.176s\r\n```\r\n\r\n**NestedGenericTypesMix.exe** takes 7.37 s on Windows x64 Checked (i7-6700 CPU @ 3.40 GHz)\r\n```\r\nPS D:\\git\\coreclr2\\bin\\tests\\Windows_NT.x64.Checked\\Loader\\classloader\\generics\\Instantiation\\Nesting\\NestedGenericTypesMix> $env:COMPlus_TieredCompilation\r\n0\r\nPS D:\\git\\coreclr2\\bin\\tests\\Windows_NT.x64.Checked\\Loader\\classloader\\generics\\Instantiation\\Nesting\\NestedGenericTypesMix> $env:COMPlus_ZapDisable\r\n1\r\nPS D:\\git\\coreclr2\\bin\\tests\\Windows_NT.x64.Checked\\Loader\\classloader\\generics\\Instantiation\\Nesting\\NestedGenericTypesMix> $env:COMPlus_ReadyToRun\r\n0\r\nPS D:\\git\\coreclr2\\bin\\tests\\Windows_NT.x64.Checked\\Loader\\classloader\\generics\\Instantiation\\Nesting\\NestedGenericTypesMix> Measure-Command { & $env:CORE_ROOT\\CoreRun.exe NestedGenericTypesMix.exe } | select TotalSeconds\r\n\r\nTotalSeconds\r\n------------\r\n   7.3781582\r\n\r\n\r\nPS D:\\git\\coreclr2\\bin\\tests\\Windows_NT.x64.Checked\\Loader\\classloader\\generics\\Instantiation\\Nesting\\NestedGenericTypesMix> Measure-Command { & $env:CORE_ROOT\\CoreRun.exe NestedGenericTypesMix.exe } | select TotalSeconds\r\n\r\nTotalSeconds\r\n------------\r\n   7.3985089\r\n\r\n\r\nPS D:\\git\\coreclr2\\bin\\tests\\Windows_NT.x64.Checked\\Loader\\classloader\\generics\\Instantiation\\Nesting\\NestedGenericTypesMix> Measure-Command { & $env:CORE_ROOT\\CoreRun.exe NestedGenericTypesMix.exe } | select TotalSeconds\r\n\r\nTotalSeconds\r\n------------\r\n   7.3504274\r\n```\r\n\r\n**RecursiveInheritance.exe** takes 1.1s on Linux x64 Checked (i7-4790 CPU @ 3.60GHz)\r\n```\r\n[root@9f2f7f1a0117 RecursiveInheritance]# time $CORE_ROOT/corerun RecursiveInheritance.exe\r\nPASS\r\n\r\nreal    0m1.131s\r\nuser    0m0.877s\r\nsys     0m0.265s\r\n[root@9f2f7f1a0117 RecursiveInheritance]# time $CORE_ROOT/corerun RecursiveInheritance.exe\r\nPASS\r\n\r\nreal    0m1.132s\r\nuser    0m0.935s\r\nsys     0m0.208s\r\n[root@9f2f7f1a0117 RecursiveInheritance]# time $CORE_ROOT/corerun RecursiveInheritance.exe\r\nPASS\r\n\r\nreal    0m1.129s\r\nuser    0m0.880s\r\nsys     0m0.260s\r\n```\r\n\r\n**RecursiveInheritance.exe** takes 11.82 s on Windows x64 Checked (i7-6700 CPU @ 3.40 GHz)\r\n\r\n```\r\nPS D:\\git\\coreclr2\\bin\\tests\\Windows_NT.x64.Checked\\Loader\\classloader\\generics\\Instantiation\\Recursion\\RecursiveInheritance> Measure-Command { & $env:CORE_ROOT\\CoreRun.exe RecursiveInheritance.exe } | select TotalSeconds\r\n\r\nTotalSeconds\r\n------------\r\n  11.7332094\r\n\r\n\r\nPS D:\\git\\coreclr2\\bin\\tests\\Windows_NT.x64.Checked\\Loader\\classloader\\generics\\Instantiation\\Recursion\\RecursiveInheritance> Measure-Command { & $env:CORE_ROOT\\CoreRun.exe RecursiveInheritance.exe } | select TotalSeconds\r\n\r\nTotalSeconds\r\n------------\r\n  11.9744501\r\n\r\n\r\nPS D:\\git\\coreclr2\\bin\\tests\\Windows_NT.x64.Checked\\Loader\\classloader\\generics\\Instantiation\\Recursion\\RecursiveInheritance> Measure-Command { & $env:CORE_ROOT\\CoreRun.exe RecursiveInheritance.exe } | select TotalSeconds\r\n\r\nTotalSeconds\r\n------------\r\n  11.7703648\r\n```\r\n\r\n**chaos65204782cs_o.exe** takes 1.1s on Linux x64 Checked (i7-4790 CPU @ 3.60GHz)\r\n```\r\n[root@9f2f7f1a0117 chaos65204782cs_o]# time $CORE_ROOT/corerun chaos65204782cs_o.exe > /dev/null 2>&1\r\n\r\nreal    0m1.059s\r\nuser    0m0.925s\r\nsys     0m0.145s\r\n[root@9f2f7f1a0117 chaos65204782cs_o]# time $CORE_ROOT/corerun chaos65204782cs_o.exe > /dev/null 2>&1\r\n\r\nreal    0m1.053s\r\nuser    0m0.947s\r\nsys     0m0.117s\r\n[root@9f2f7f1a0117 chaos65204782cs_o]# time $CORE_ROOT/corerun chaos65204782cs_o.exe > /dev/null 2>&1\r\n\r\nreal    0m1.050s\r\nuser    0m0.932s\r\nsys     0m0.128s\r\n```\r\n\r\n**chaos65204782cs_o.exe** takes 9.3s on Windows x64 Checked (i7-6700 CPU @ 3.40 GHz)\r\n```\r\nPS D:\\git\\coreclr2\\bin\\tests\\Windows_NT.x64.Checked\\JIT\\Generics\\Coverage\\chaos65204782cs_o> Measure-Command { & $env:CORE_ROOT\\CoreRun.exe chaos65204782cs_o.exe  } | select TotalSeconds\r\n\r\nTotalSeconds\r\n------------\r\n   9.2215821\r\n\r\n\r\nPS D:\\git\\coreclr2\\bin\\tests\\Windows_NT.x64.Checked\\JIT\\Generics\\Coverage\\chaos65204782cs_o> Measure-Command { & $env:CORE_ROOT\\CoreRun.exe chaos65204782cs_o.exe  } | select TotalSeconds\r\n\r\nTotalSeconds\r\n------------\r\n   9.4226971\r\n\r\n\r\nPS D:\\git\\coreclr2\\bin\\tests\\Windows_NT.x64.Checked\\JIT\\Generics\\Coverage\\chaos65204782cs_o> Measure-Command { & $env:CORE_ROOT\\CoreRun.exe chaos65204782cs_o.exe  } | select TotalSeconds\r\n\r\nTotalSeconds\r\n------------\r\n   9.2920004\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22962","RelatedDescription":"Open issue \"Some of the tests are running significantly slower on Windows/x64 than on Linux/x64 \" (#22962)"},{"Id":"416333611","IsPullRequest":false,"CreatedAt":"2019-03-02T00:46:22","Actor":"Maoni0","Number":"22961","RawContent":null,"Title":"return correct pmask when there are multiple NUMA nodes on linux","State":"open","Body":"on Linux we need to return the correct pmask when there are multiple NUMA nodes on machines with > 64 cores. discussion is on issue #22861 starting [here](https://github.com/dotnet/coreclr/pull/22861#issuecomment-468807720).","Url":"https://github.com/dotnet/coreclr/issues/22961","RelatedDescription":"Open issue \"return correct pmask when there are multiple NUMA nodes on linux\" (#22961)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"416395051","IsPullRequest":true,"CreatedAt":"2019-03-03T13:00:49","Actor":"dotnet-maestro[bot]","Number":"10912","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19151.5\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10912","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#10912)"},{"Id":"416414303","IsPullRequest":true,"CreatedAt":"2019-03-02T16:35:30","Actor":"NextTurn","Number":"10913","RawContent":null,"Title":"Clean up","State":"open","Body":"Related to dotnet/core-setup#5156.\r\n\r\nPlease also check if other pages are still valid.\r\n\r\nskip ci please","Url":"https://github.com/dotnet/cli/pull/10913","RelatedDescription":"Open PR \"Clean up\" (#10913)"},{"Id":"416364671","IsPullRequest":false,"CreatedAt":"2019-03-02T06:20:05","Actor":"Doan-Van-Tuan","Number":"10911","RawContent":null,"Title":"Incredibly misleading message when the executable cannot be found: \"No executable found matching command\"","State":"open","Body":"## Steps to reproduce\r\nRunning this command:\r\ndotnet not-existing.dll\r\n\r\n## Expected  behavior\r\nThe message should say clearly not-existing.dll cannot be found.\r\n\r\n## Actual behavior\r\nThe actual message is \"No executable found matching command \"dotnet-not-existing.dll\"\", which is misleading. When I encountered it the first time, I thought it was an environment issue, or a bug caused the system searching for dotnet-not-existing.dll.\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10911","RelatedDescription":"Open issue \"Incredibly misleading message when the executable cannot be found: \"No executable found matching command\"\" (#10911)"},{"Id":"415879211","IsPullRequest":true,"CreatedAt":"2019-03-02T00:05:18","Actor":"dotnet-bot","Number":"10900","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10900","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#10900)"},{"Id":"415879190","IsPullRequest":true,"CreatedAt":"2019-03-02T00:02:38","Actor":"dotnet-bot","Number":"10898","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.1.6xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10898","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.1.6xx\" (#10898)"},{"Id":"416322198","IsPullRequest":true,"CreatedAt":"2019-03-01T23:41:02","Actor":"peterhuene","Number":"10910","RawContent":null,"Title":"Merge for upcoming march release","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/10910","RelatedDescription":"Open PR \"Merge for upcoming march release\" (#10910)"},{"Id":"416305342","IsPullRequest":true,"CreatedAt":"2019-03-01T22:30:35","Actor":"mistachkin","Number":"10909","RawContent":null,"Title":"Make sure that an empty argument is preserved.  Fix for #8892.","State":"open","Body":"\r\nThese changes fix issue #8892.  The net effect is that when an empty argument is detected, a pair of double quotes will be emitted.\r\n","Url":"https://github.com/dotnet/cli/pull/10909","RelatedDescription":"Open PR \"Make sure that an empty argument is preserved.  Fix for #8892.\" (#10909)"},{"Id":"416191380","IsPullRequest":false,"CreatedAt":"2019-03-01T16:54:57","Actor":"peterhuene","Number":"10908","RawContent":null,"Title":"Remove old patch versions from bundledversions.props","State":"open","Body":"## Steps to reproduce\r\n\r\n1. Install a 2.2 SDK.\r\n2. Open `Microsoft.NETCoreSdk.BundledVersions.props` for the installed SDK.\r\n\r\n## Expected  behavior\r\n\r\nThe `LatestPatchVersionForNetCoreX_X` properties to not be present since they are no longer used by the SDK.\r\n\r\n## Actual behavior\r\n\r\nThe values are still present (and stale).\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10908","RelatedDescription":"Open issue \"Remove old patch versions from bundledversions.props\" (#10908)"},{"Id":"416095774","IsPullRequest":false,"CreatedAt":"2019-03-01T16:12:38","Actor":"ColinM9991","Number":"10905","RawContent":null,"Title":"dotnet restore failing with TaskCanceledException","State":"closed","Body":"## Steps to reproduce\r\n\r\nN/A\r\nThis issue is intermittent, however when it happens it then lingers for some time.\r\n\r\n## Description\r\n\r\nWe are using the dotnet CLI to restore packages for an ASP.NET Core application targeting .NET Core in our TeamCity build process, and are intermittently having failed builds where the restore task fails as soon as it picks up the first project file\r\n\r\n```\r\n[12:43:57]\tStep 1/13: Restore Packages (.NET CLI (dotnet)) (30s)\r\n[12:43:58]\t[Step 1/13] dotnet.exe restore Project.sln --disable-parallel\r\n[12:43:58]\t[Step 1/13] restore (29s)\r\n[12:43:58]\t[restore] Starting: \"C:\\Program Files\\dotnet\\dotnet.exe\" restore Project.sln --disable-parallel\r\n[12:43:58]\t[restore] in directory: C:\\buildAgent\\work\\g0124fa0e71e5f68\r\n[12:44:16]\t[restore]   Restoring packages for C:\\buildAgent\\work\\g0124fa0e71e5f68\\ProjectA\\Common\\ProjectB.csproj...\r\n[12:44:28]\t[restore] C:\\Program Files\\dotnet\\sdk\\2.2.102\\NuGet.targets(114,5): error : A task was canceled.\r\n[12:44:28]\t[restore] \r\n[12:44:28]\t[restore] Build FAILED.\r\n[12:44:28]\t[restore] \r\n[12:44:28]\t[restore]     0 Warning(s)\r\n[12:44:28]\t[restore]     1 Error(s)\r\n[12:44:28]\t[restore] \r\n[12:44:28]\t[restore] Time Elapsed 00:00:24.84\r\n[12:44:28]\t[restore] \r\n[12:44:28]\t[restore] \r\n[12:44:28]\t[restore] C:\\Program Files\\dotnet\\sdk\\2.2.102\\NuGet.targets(114,5): error : A task was canceled.\r\n[12:44:28]\t[restore] Process exited with code 1\r\n[12:44:28]\t[Step 1/13] Process exited with code 1\r\n[12:44:28]\t[Step 1/13] Step Restore Packages (.NET CLI (dotnet)) failed\r\n```\r\n\r\n## Expected  behavior\r\n\r\nIn the scenario where there is an actual error with the codebase then the dotnet CLI should return a meaningful error message as to what the problem is\r\n\r\nIn the scenario where nothing is wrong and the dotnet CLI fails for no reason, the expected behavior would be for the restore task to complete successfully as it does in other builds of the same codebase at previous times.\r\n\r\n## Actual behavior\r\n\r\n`dotnet restore` fails with `TaskCanceledException` and no indication as to what the issue is.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n[13:07:51]\t[Step 2/2] .NET Core SDK (reflecting any global.json):\r\n[13:07:51]\t[Step 2/2]  Version:   2.2.102\r\n[13:07:51]\t[Step 2/2]  Commit:    96ff75a873\r\n[13:07:51]\t[Step 2/2] \r\n[13:07:51]\t[Step 2/2] Runtime Environment:\r\n[13:07:51]\t[Step 2/2]  OS Name:     Windows\r\n[13:07:51]\t[Step 2/2]  OS Version:  10.0.17763\r\n[13:07:51]\t[Step 2/2]  OS Platform: Windows\r\n[13:07:51]\t[Step 2/2]  RID:         win10-x64\r\n[13:07:51]\t[Step 2/2]  Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.102\\\r\n[13:07:51]\t[Step 2/2] \r\n[13:07:51]\t[Step 2/2] Host (useful for support):\r\n[13:07:51]\t[Step 2/2]   Version: 2.2.1\r\n[13:07:51]\t[Step 2/2]   Commit:  878dd11e62\r\n[13:07:51]\t[Step 2/2] \r\n[13:07:51]\t[Step 2/2] .NET Core SDKs installed:\r\n[13:07:51]\t[Step 2/2]   1.1.12 [C:\\Program Files\\dotnet\\sdk]\r\n[13:07:51]\t[Step 2/2]   2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n[13:07:51]\t[Step 2/2]   2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n[13:07:51]\t[Step 2/2]   2.2.102 [C:\\Program Files\\dotnet\\sdk]\r\n[13:07:51]\t[Step 2/2] \r\n[13:07:51]\t[Step 2/2] .NET Core runtimes installed:\r\n[13:07:51]\t[Step 2/2]   Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n[13:07:51]\t[Step 2/2]   Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n[13:07:51]\t[Step 2/2]   Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n[13:07:51]\t[Step 2/2]   Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n[13:07:51]\t[Step 2/2]   Microsoft.NETCore.App 1.0.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[13:07:51]\t[Step 2/2]   Microsoft.NETCore.App 1.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[13:07:51]\t[Step 2/2]   Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[13:07:51]\t[Step 2/2]   Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[13:07:51]\t[Step 2/2]   Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```\r\n\r\nNuGet.CommandLine version: 4.9.3","Url":"https://github.com/dotnet/cli/issues/10905","RelatedDescription":"Closed issue \"dotnet restore failing with TaskCanceledException\" (#10905)"},{"Id":"416159140","IsPullRequest":true,"CreatedAt":"2019-03-01T15:40:43","Actor":"dotnet-maestro-bot","Number":"10907","RawContent":null,"Title":"Update aspnet, aspnet, coresetup, sdk to rtm-35537, rtm-35537, 2.1.0, 2.2.101, respectively (release/2.2.1xx)","State":"open","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/10907","RelatedDescription":"Open PR \"Update aspnet, aspnet, coresetup, sdk to rtm-35537, rtm-35537, 2.1.0, 2.2.101, respectively (release/2.2.1xx)\" (#10907)"},{"Id":"416108799","IsPullRequest":true,"CreatedAt":"2019-03-01T14:14:13","Actor":"dotnet-maestro[bot]","Number":"10906","RawContent":null,"Title":"[master] Update dependencies from dotnet/clicommandlineparser","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/clicommandlineparser\r\n\r\n- Microsoft.DotNet.Cli.CommandLine - 1.0.0-preview.19127.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10906","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/clicommandlineparser\" (#10906)"},{"Id":"415612647","IsPullRequest":true,"CreatedAt":"2019-03-01T13:31:58","Actor":"dotnet-maestro[bot]","Number":"10895","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19127.8\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19128.3\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10895","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#10895)"},{"Id":"416051511","IsPullRequest":false,"CreatedAt":"2019-03-01T11:02:58","Actor":"Potapy4","Number":"10904","RawContent":null,"Title":"Update licence headers","State":"open","Body":"Should we replace the license headers?\r\n\r\nFrom:\r\n```\r\n// Copyright (c) .NET Foundation and contributors. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for full license information.\r\n```\r\n\r\nTo:\r\n```\r\n// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// See the LICENSE file in the project root for more information.\r\n```\r\n\r\nA similar issue here: dotnet/core-setup#5224","Url":"https://github.com/dotnet/cli/issues/10904","RelatedDescription":"Open issue \"Update licence headers\" (#10904)"},{"Id":"415997742","IsPullRequest":true,"CreatedAt":"2019-03-01T08:43:38","Actor":"Jalalx","Number":"10903","RawContent":null,"Title":"fix UnauthorizedAccessException when opening readonly sln file for read","State":"open","Body":"This fixes #10166 ","Url":"https://github.com/dotnet/cli/pull/10903","RelatedDescription":"Open PR \"fix UnauthorizedAccessException when opening readonly sln file for read\" (#10903)"},{"Id":"415881214","IsPullRequest":true,"CreatedAt":"2019-03-01T00:09:12","Actor":"dotnet-maestro-bot","Number":"10902","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)","State":"open","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/10902","RelatedDescription":"Open PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)\" (#10902)"},{"Id":"415879221","IsPullRequest":true,"CreatedAt":"2019-03-01T00:01:20","Actor":"dotnet-bot","Number":"10901","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10901","RelatedDescription":"Open PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#10901)"},{"Id":"415879204","IsPullRequest":true,"CreatedAt":"2019-03-01T00:01:16","Actor":"dotnet-bot","Number":"10899","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10899","RelatedDescription":"Open PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#10899)"},{"Id":"414879189","IsPullRequest":true,"CreatedAt":"2019-02-28T23:27:57","Actor":"dotnet-bot","Number":"10887","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10887","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#10887)"},{"Id":"414879179","IsPullRequest":true,"CreatedAt":"2019-02-28T23:27:01","Actor":"dotnet-bot","Number":"10886","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10886","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#10886)"},{"Id":"414879169","IsPullRequest":true,"CreatedAt":"2019-02-28T23:26:16","Actor":"dotnet-bot","Number":"10885","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.1.6xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10885","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.1.6xx\" (#10885)"},{"Id":"415748202","IsPullRequest":false,"CreatedAt":"2019-02-28T18:03:18","Actor":"kpstolk","Number":"10897","RawContent":null,"Title":"dotnet restore does not use NuGetDefaults.Config on Linux","State":"closed","Body":"According to the [NuGet documentation](https://docs.microsoft.com/en-us/nuget/consume-packages/configuring-nuget-behavior#nuget-defaults-file) it is possible to store a `NuGetDefaults.Config` file in `~/.local/share` or `/usr/local/share` to configure global settings.\r\n\r\nWe currently use a Windows machine and using this file (on `%ProgramFiles(x86)%\\NuGet\\Config` of course) works just fine with `dotnet restore`.\r\n\r\nHowever now I'm setting up an Ubuntu 18.04 build server and have installed [dotnet](https://dotnet.microsoft.com/download/linux-package-manager/ubuntu18-04/sdk-current) but the `NuGetDefaults.Config` doesn't seem to be used as I get an error from `dotnet restore`.\r\n\r\nI also tried to install NuGet directly using `sudo apt-get install nuget` but this doesn't work either with `nuget restore`, I get the same error. It does work however when I store the file in  `~/.config/NuGet/NuGet.Config` (so not at Computer but [User level](https://docs.microsoft.com/en-us/nuget/consume-packages/configuring-nuget-behavior#config-file-locations-and-uses)).\r\nEven configured at user level `dotnet restore` still fails.\r\n\r\nSo how else can I configure my custom [package source](https://docs.microsoft.com/en-us/nuget/reference/nuget-config-file#packagesources)?\r\n\r\n## Steps to reproduce\r\n1. Install .NET Core SDK on Linux Ubuntu 18.04 x64\r\n1. Create a `NuGetDefaults.Config` in both `~/.local/share` or `/usr/local/share` with content as shown below\r\n1. Clone Git repo containing .NET Core project and `cd` to it\r\n1. Run `dotnet restore`\r\n1. Error NU1101 is shown\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<configuration>\r\n    <packageSources>\r\n        <add key=\"MySource\" value=\"http://my/custom/source/\" />\r\n    </packageSources>\r\n</configuration>\r\n```\r\n\r\n## Expected  behavior\r\n`dotnet restore` to restore packages from my custom package source defined in `NuGetDefaults.Config`.\r\n\r\n## Actual behavior\r\nError from `dotnet restore`:\r\n\r\n```\r\n/home/user/devops/_work/1/s/src/path/to/my.csproj : error NU1101: Unable to find package My.Custom.Package. No packages exist with this id in source(s): nuget.org\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.104\r\n Commit:    73f036d4ac\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.104/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.2\r\n  Commit:  a4fd7b2c84\r\n\r\n.NET Core SDKs installed:\r\n  2.2.104 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.2 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.2 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n```","Url":"https://github.com/dotnet/cli/issues/10897","RelatedDescription":"Closed issue \"dotnet restore does not use NuGetDefaults.Config on Linux\" (#10897)"},{"Id":"415612842","IsPullRequest":true,"CreatedAt":"2019-02-28T13:02:07","Actor":"dotnet-maestro[bot]","Number":"10896","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview4.19127.1\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview4.19128.1\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview4.19151.1\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview4.19152.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10896","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/sdk\" (#10896)"},{"Id":"415385914","IsPullRequest":true,"CreatedAt":"2019-02-28T00:10:44","Actor":"wli3","Number":"10894","RawContent":null,"Title":"Nicer message for `dotnet tool install` failure","State":"open","Body":"Fix https://github.com/dotnet/cli/issues/10863\r\n\r\n-v vs -d\r\nFirst -v is not correct. To have verbose output we need `-v detailed`. Only commands piped to MBuild (including nuget) honor this flag. And existing global tools use -d to include stack trace since the existing infrastructure of GracefulException only honor -d. Project tools also ask the user to use `-d` to investigate further. I prefer -d in the end due to.\r\n\r\n- we will be more consistent with the past using -v. and minimal code change no need to make CLI layer understand msbuild verbose flag\r\n- -d will only include the “manifest file searched” instead of adding msbuild and nuget’s log which is several pages.\r\n- -d will not be confused with user’s command in dotnet tool run mymake -v that’s also why Project Tools cannot move output of this flag to use -v\r\n\r\n- On the downside, use -d will further increase the separation of 2 flag to control output.\r\n\r\nSince cannot find manifest is shared. To add “-g” does not make sense in many contexts I did not follow the text in the issue completely.\r\nThe final result:\r\nλ dotnet tool uninstall apackage\r\nCannot find a manifest file.\r\nFor a list of locations searched, use `dotnet -d tool install <toolname>`\r\nIf you intended to uninstall a global tool, add `--global` to the command.\r\n\r\n```\r\nλ dotnet -d  tool uninstall apackage\r\nTelemetry is: Enabled\r\nThe list of searched path:\r\n        c:\\work\\cli\\test\\dotnet.Tests\\.config\\dotnet-tools.json\r\n        c:\\work\\cli\\test\\dotnet.Tests\\dotnet-tools.json\r\n        c:\\work\\cli\\test\\.config\\dotnet-tools.json\r\n        c:\\work\\cli\\test\\dotnet-tools.json\r\n        c:\\work\\cli\\.config\\dotnet-tools.json\r\n        c:\\work\\cli\\dotnet-tools.json\r\n        c:\\work\\.config\\dotnet-tools.json\r\n        c:\\work\\dotnet-tools.json\r\n        c:\\.config\\dotnet-tools.json\r\n        c:\\dotnet-tools.json\r\nCannot find a manifest file.\r\nFor a list of locations searched, use `dotnet -d tool install <toolname>`\r\nIf you intended to uninstall a global tool, add `--global` to the command.\r\n\r\nλ dotnet tool install apackage\r\nCannot find a manifest file.\r\nFor a list of locations searched, use `dotnet -d tool install <toolname>`\r\nIf you intended to install a global tool, add `--global` to the command.\r\nIf you would like to create a manifest, use `dotnet new tool-manifest` first, usually in the repo root directory.\r\n\r\nλ dotnet -d tool install apackage\r\nTelemetry is: Enabled\r\nThe list of searched path:\r\n        c:\\work\\cli\\test\\dotnet.Tests\\.config\\dotnet-tools.json\r\n        c:\\work\\cli\\test\\dotnet.Tests\\dotnet-tools.json\r\n        c:\\work\\cli\\test\\.config\\dotnet-tools.json\r\n        c:\\work\\cli\\test\\dotnet-tools.json\r\n        c:\\work\\cli\\.config\\dotnet-tools.json\r\n        c:\\work\\cli\\dotnet-tools.json\r\n        c:\\work\\.config\\dotnet-tools.json\r\n        c:\\work\\dotnet-tools.json\r\n        c:\\.config\\dotnet-tools.json\r\n        c:\\dotnet-tools.json\r\nCannot find a manifest file.\r\nFor a list of locations searched, use `dotnet -d tool install <toolname>`\r\nIf you intended to install a global tool, add `--global` to the command.\r\nIf you would like to create a manifest, use `dotnet new tool-manifest` first, usually in the repo root directory.\r\n\r\nλ dotnet tool  restore\r\nCannot find a manifest file.\r\nFor a list of locations searched, use `dotnet -d tool install <toolname>`\r\nNo tools were restored.\r\n```","Url":"https://github.com/dotnet/cli/pull/10894","RelatedDescription":"Open PR \"Nicer message for `dotnet tool install` failure\" (#10894)"},{"Id":"415273486","IsPullRequest":true,"CreatedAt":"2019-02-27T20:46:12","Actor":"nguerrera","Number":"10893","RawContent":null,"Title":"Set master branding back to preview4","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/10893","RelatedDescription":"Closed or merged PR \"Set master branding back to preview4\" (#10893)"},{"Id":"415234041","IsPullRequest":false,"CreatedAt":"2019-02-27T20:06:21","Actor":"stannynuytkens","Number":"10891","RawContent":null,"Title":"What triggers dotnet pack to build?","State":"closed","Body":"## Steps to reproduce\r\n\r\n`dotnet pack --configuration Debug --no-build --verbosity d`\r\n\r\noutput: https://gist.github.com/stannynuytkens/447b465c756da2552f79f66c4405401f\r\n\r\n## Expected  behavior\r\n\r\nto NOT build (output for Debug is already there)\r\n\r\n## Actual behavior\r\n\r\nBuilds...\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\nλ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.504\r\n Commit:    91e160c7f0\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.504\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.8\r\n  Commit:  209f8aa25c\r\n\r\n.NET Core SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\ncsproj:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard1.1</TargetFramework>\r\n    <Authors>Acme</Authors>\r\n    <Copyright>© 2017 Proximus</Copyright>\r\n    <Description>Acme SDK</Description>\r\n    <!--<DocumentationFile>bin/$(Configuration)/$(TargetFramework)/$(AssemblyName).xml</DocumentationFile>\r\n    <AssemblyVersion>1.0</AssemblyVersion>\r\n    <PackageTargetFallback>\r\n      $(PackageTargetFallback);portable46-net451+win81+wpa81\r\n    </PackageTargetFallback>-->\r\n  </PropertyGroup>\r\n\r\n  <!--<ItemGroup>\r\n    <Content Include=\"..\\readme.txt\">\r\n      <Pack>true</Pack>\r\n      <PackagePath>\\</PackagePath>\r\n    </Content>\r\n    <Content Include=\"..\\html\\**\\*.*\">\r\n      <Link>html\\%(RecursiveDir)%(Filename)%(Extension)</Link>\r\n      <Pack>true</Pack>\r\n      <PackagePath>\\html</PackagePath>\r\n    </Content>\r\n  </ItemGroup>-->\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Acme.Core\" Version=\"1.2019.2.18005\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10891","RelatedDescription":"Closed issue \"What triggers dotnet pack to build?\" (#10891)"},{"Id":"415238064","IsPullRequest":true,"CreatedAt":"2019-02-27T17:21:50","Actor":"dotnet-bot","Number":"10892","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10892","RelatedDescription":"Open PR \"Merge release/3.0.1xx to master\" (#10892)"},{"Id":"415128816","IsPullRequest":true,"CreatedAt":"2019-02-27T15:39:24","Actor":"dotnet-maestro[bot]","Number":"10890","RawContent":null,"Title":"[master] Update dependencies from dotnet/clicommandlineparser","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/clicommandlineparser\r\n\r\n- Microsoft.DotNet.Cli.CommandLine - 1.0.0-preview.19126.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10890","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/clicommandlineparser\" (#10890)"},{"Id":"414983809","IsPullRequest":true,"CreatedAt":"2019-02-27T07:35:36","Actor":"jeffkl","Number":"10889","RawContent":null,"Title":"Add -DownloadDir parameter to dotnet-install","State":"open","Body":"Our hosted build agents have multiple enlistments on them and we'd like to install the .NET Core SDK prior to building.  After the build we'd then delete the installation and re-install the version again for another build.  The current script deletes the downloaded zip file.\r\n\r\nThis change lets you specify a folder to use as a cache of downloaded installers so they can be used for installation again.\r\n","Url":"https://github.com/dotnet/cli/pull/10889","RelatedDescription":"Open PR \"Add -DownloadDir parameter to dotnet-install\" (#10889)"},{"Id":"414904831","IsPullRequest":true,"CreatedAt":"2019-02-27T02:28:15","Actor":"peterhuene","Number":"10888","RawContent":null,"Title":"Parameterize latest patch versions.","State":"closed","Body":"This commit parameterizes the latest patch versions in the build.\r\n","Url":"https://github.com/dotnet/cli/pull/10888","RelatedDescription":"Closed or merged PR \"Parameterize latest patch versions.\" (#10888)"},{"Id":"414864905","IsPullRequest":true,"CreatedAt":"2019-02-26T23:43:36","Actor":"peterhuene","Number":"10884","RawContent":null,"Title":"Skip the self-contained roll-forward version tests.","State":"closed","Body":"See #10879. Disabling these tests until we figure out a way to make them work\r\nfor servicing builds that will be bumping the versions without the unreleased,\r\nupcoming shared frameworks being available.\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10884","RelatedDescription":"Closed or merged PR \"Skip the self-contained roll-forward version tests.\" (#10884)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"416499863","IsPullRequest":false,"CreatedAt":"2019-03-03T18:13:53","Actor":"proof85","Number":"1093","RawContent":null,"Title":"HashCode to standard","State":"closed","Body":"Hi,\r\n\r\nis it possible to add the HashCode-\"Helper\" struct to the .net standard? Including the Combine method? it is covered by the .net corefx since v2.1 and it looks like there is no os or platform specific usecase","Url":"https://github.com/dotnet/standard/issues/1093","RelatedDescription":"Closed issue \"HashCode to standard\" (#1093)"},{"Id":"414920447","IsPullRequest":false,"CreatedAt":"2019-02-27T02:53:49","Actor":"divega","Number":"1092","RawContent":null,"Title":"Add string overloads to DbDataReader.Get*() to .NET Standard 2.1","State":"open","Body":"This is mainly about adding the API from https://github.com/dotnet/corefx/issues/31595 (commit https://github.com/dotnet/corefx/commit/b30fc2b4ee302e449e3580ae39cb083a76b813c9), plus possibly two additional async method possibly coming from https://github.com/dotnet/corefx/issues/35611, to .NET Standard 2.1.\r\n\r\ncc @roji @ajcvickers @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1092","RelatedDescription":"Open issue \"Add string overloads to DbDataReader.Get*() to .NET Standard 2.1\" (#1092)"},{"Id":"414887877","IsPullRequest":false,"CreatedAt":"2019-02-27T00:35:13","Actor":"ChaseFlorell","Number":"1091","RawContent":null,"Title":"Collection<T> and ObservableCollection<T> do not support ranges","State":"open","Body":"This is taken directly from https://github.com/dotnet/corefx/issues/10752 [by @robertmclaws]\r\n\r\nThis API change is already approved in .netcore (tentatively scheduled for 3.0), and I think it's equally as important to be available in .netstandard\r\n\r\n```csharp\r\n    // Adds a range to the end of the collection.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Add)\r\n    public void AddRange(IEnumerable<T> collection) => InsertItemsRange(0, collection);\r\n\r\n    // Inserts a range\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Add)\r\n    public void InsertRange(int index, IEnumerable<T> collection) => InsertItemsRange(index, collection);\r\n\r\n    // Removes a range.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Remove)\r\n    public void RemoveRange(int index, int count) => RemoveItemsRange(index, count);\r\n\r\n    // Will allow to replace a range with fewer, equal, or more items.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Replace)\r\n    public void ReplaceRange(int index, int count, IEnumerable<T> collection)\r\n    {\r\n         RemoveItemsRange(index, count);\r\n         InsertItemsRange(index, collection);\r\n    }\r\n\r\n    #region virtual methods\r\n    protected virtual void InsertItemsRange(int index, IEnumerable<T> collection);\r\n    protected virtual void RemoveItemsRange(int index, int count);\r\n    #endregion\r\n```\r\n\r\nPlease see the linked issue for the full discussion.\r\n\r\nI'm assuming it would land [here](https://github.com/dotnet/standard/blob/master/src/netstandard/ref/System.Collections.ObjectModel.cs) and the appropriate shims would be created, however I don't know enough about netstandard to actually draw up the PR.\r\n","Url":"https://github.com/dotnet/standard/issues/1091","RelatedDescription":"Open issue \"Collection<T> and ObservableCollection<T> do not support ranges\" (#1091)"},{"Id":"414879247","IsPullRequest":false,"CreatedAt":"2019-02-27T00:01:34","Actor":"wtgodbe","Number":"1090","RawContent":null,"Title":"Sort out baseline between netstandard & netcoreapp","State":"open","Body":"We should sit down & go over the diff between netstandard & netcoreapp, and decide what we need to fix/how we need to fix it.\r\n\r\nCC @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1090","RelatedDescription":"Open issue \"Sort out baseline between netstandard & netcoreapp\" (#1090)"},{"Id":"414599564","IsPullRequest":true,"CreatedAt":"2019-02-26T13:10:54","Actor":"dotnet-maestro[bot]","Number":"1089","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19125.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1089","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1089)"},{"Id":"414366560","IsPullRequest":true,"CreatedAt":"2019-02-26T02:10:06","Actor":"terrajobst","Number":"1087","RawContent":null,"Title":"Remove windows row","State":"closed","Body":"After talking to @ptorr-msft it seems we can update this table and simplify the confusing Windows rows by combining *Windows* with *UWP* and removing *Windows Phone* and *Windows Phone Silverlight* entirely.\r\n\r\n/cc @mairaw @richlander ","Url":"https://github.com/dotnet/standard/pull/1087","RelatedDescription":"Closed or merged PR \"Remove windows row\" (#1087)"},{"Id":"414395637","IsPullRequest":true,"CreatedAt":"2019-02-26T02:09:06","Actor":"terrajobst","Number":"1088","RawContent":null,"Title":"Update .NET Standard 2.1 API delta","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1088","RelatedDescription":"Closed or merged PR \"Update .NET Standard 2.1 API delta\" (#1088)"},{"Id":"414093373","IsPullRequest":true,"CreatedAt":"2019-02-25T13:10:50","Actor":"dotnet-maestro[bot]","Number":"1086","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19124.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1086","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1086)"},{"Id":"413818940","IsPullRequest":true,"CreatedAt":"2019-02-24T13:10:46","Actor":"dotnet-maestro[bot]","Number":"1085","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19123.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1085","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1085)"},{"Id":"413693365","IsPullRequest":true,"CreatedAt":"2019-02-23T13:10:47","Actor":"dotnet-maestro[bot]","Number":"1084","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19122.3\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1084","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1084)"},{"Id":"413628435","IsPullRequest":true,"CreatedAt":"2019-02-23T00:53:44","Actor":"terrajobst","Number":"1083","RawContent":null,"Title":"Add \"generated by a tool\"-header","State":"closed","Body":"This adds a header to all the Markdown files provided in the docs folder that\r\nshow the API set of .NET Standard. The header indicates that these are\r\ngenerated by a tool and PRs are generally not accepted.\r\n\r\nFixes #1053.","Url":"https://github.com/dotnet/standard/pull/1083","RelatedDescription":"Closed or merged PR \"Add \"generated by a tool\"-header\" (#1083)"},{"Id":"408526522","IsPullRequest":false,"CreatedAt":"2019-02-23T00:00:14","Actor":"jmroyb","Number":"1066","RawContent":null,"Title":"Will be supported System.Web.Services.Discovery and System.Web.Services.Description?","State":"closed","Body":"Hi folks,\r\n\r\nI need make portability from .NET FW 4.5 to .NET Standard. My lib uses System.Web.Services.Discovery and System.Web.Services.Description. Do you plan to migrate them to .NET Standard?\r\n\r\nCheers","Url":"https://github.com/dotnet/standard/issues/1066","RelatedDescription":"Closed issue \"Will be supported System.Web.Services.Discovery and System.Web.Services.Description?\" (#1066)"},{"Id":"413393938","IsPullRequest":true,"CreatedAt":"2019-02-22T13:10:47","Actor":"dotnet-maestro[bot]","Number":"1082","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19121.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1082","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1082)"},{"Id":"413086694","IsPullRequest":true,"CreatedAt":"2019-02-22T07:09:05","Actor":"terrajobst","Number":"1080","RawContent":null,"Title":"Add SwitchExpressionException","State":"closed","Body":"Fixes #1077\r\n\r\nThis adds `SwitchExpressionException` that was added for supporting C#'s [`switch` expression construct](https://github.com/dotnet/csharplang/blob/master/proposals/patterns.md#switch-expression). The exception type was discussed in CoreFX in [this API request](https://github.com/dotnet/corefx/issues/33284).","Url":"https://github.com/dotnet/standard/pull/1080","RelatedDescription":"Closed or merged PR \"Add SwitchExpressionException\" (#1080)"},{"Id":"412707494","IsPullRequest":false,"CreatedAt":"2019-02-22T07:09:05","Actor":"terrajobst","Number":"1077","RawContent":null,"Title":"Include SwitchExpression added for C# 8","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/issues/1077","RelatedDescription":"Closed issue \"Include SwitchExpression added for C# 8\" (#1077)"},{"Id":"413148623","IsPullRequest":false,"CreatedAt":"2019-02-21T22:14:20","Actor":"wtgodbe","Number":"1081","RawContent":null,"Title":"Use Arcade defaults for DebugType, etc","State":"open","Body":"https://github.com/dotnet/standard/blob/4a006e962fc5c5651b7712028e0e352b1e011a58/Directory.Build.props#L86-L104\r\n\r\nCC @tmat ","Url":"https://github.com/dotnet/standard/issues/1081","RelatedDescription":"Open issue \"Use Arcade defaults for DebugType, etc\" (#1081)"},{"Id":"412718646","IsPullRequest":true,"CreatedAt":"2019-02-21T22:12:16","Actor":"tmat","Number":"1078","RawContent":null,"Title":"Set copyright and package license","State":"closed","Body":"Prepares repo for change https://github.com/dotnet/arcade/pull/2003 by setting `Copyright` and `PackageLicenseExpression` properties. These values will be required to be set by each repository once https://github.com/dotnet/arcade/pull/2003 is merged.\r\n\r\nIn order to not break the current builds this change sets the properties conditionally. This condition can be removed once all repos switch to Arcade that has https://github.com/dotnet/arcade/pull/2003.\r\n\r\n@markwilkie\r\n","Url":"https://github.com/dotnet/standard/pull/1078","RelatedDescription":"Closed or merged PR \"Set copyright and package license\" (#1078)"},{"Id":"411583193","IsPullRequest":true,"CreatedAt":"2019-02-21T19:39:58","Actor":"akoeplinger","Number":"1074","RawContent":null,"Title":"Fix link to build logs in build status badge","State":"closed","Body":"The PR which added the build status badges used the status from the public project but linked to the internal project: https://github.com/dotnet/standard/pull/1062\r\nUpdated to link to point to the public project.\r\n\r\nFixes https://github.com/dotnet/standard/issues/1065\r\n\r\n/cc @wtgodbe ","Url":"https://github.com/dotnet/standard/pull/1074","RelatedDescription":"Closed or merged PR \"Fix link to build logs in build status badge\" (#1074)"},{"Id":"408429514","IsPullRequest":false,"CreatedAt":"2019-02-21T19:39:58","Actor":"kaby76","Number":"1065","RawContent":null,"Title":"CI build status log is not public","State":"closed","Body":"Readme.md now includes a CI build status (https://github.com/dotnet/standard/commit/1e445e1f69f0fe37a7562bc59c054e7d0e15761f#diff-04c6e90faac2675aa89e2176d2eec7d8). This is good, but when I click on it, I get a \"401\" page because I am not an MS employee. Status of the build should not be opaque, and generally, if you go around to other projects on the web, the links are to the output of the build, not to 401. The badge links in the .../standard/readme.md page should to a public build so I can understand what is going on here. Roslyn does it correctly (https://github.com/dotnet/roslyn/blob/master/README.md); others, such as Corefx do not. Coreclr doesn't even have a badge for build status. Mono's readme.md page has them, and the links work.","Url":"https://github.com/dotnet/standard/issues/1065","RelatedDescription":"Closed issue \"CI build status log is not public\" (#1065)"},{"Id":"412912955","IsPullRequest":true,"CreatedAt":"2019-02-21T13:10:49","Actor":"dotnet-maestro[bot]","Number":"1079","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19121.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1079","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1079)"},{"Id":"410901729","IsPullRequest":false,"CreatedAt":"2019-02-20T21:32:22","Actor":"mpetrinidev","Number":"1071","RawContent":null,"Title":"Cannot use linq in MatchCollection regex with .NET Standard 2.0","State":"closed","Body":"Hi everyone,\r\n\r\nI have the following problem with a .NET Standard 2.0 class library\r\n\r\n'MatchCollection' does not contain a definition for 'Select' and no accessible extension method 'Select' accepting a first argument of type 'MatchCollection' could be found (are you missing a using directive or an assembly reference?)\r\n\r\n**Code**\r\n\r\n`IEnumerable<string> words = Regex.Matches(text, @\"([\\w]+\\.)+[\\w]+(?=[\\s]|$)\").Select(p => p.Value);`\r\n\r\nI had to move this code from a project that is develope with .NET Core 2.1.\r\n\r\nHow do I solve this problem? I read [https://docs.microsoft.com/en-us/dotnet/api/system.text.regularexpressions.matchcollection?view=netstandard-2.0](url) but I cannot find what the problem is\r\n\r\nThanks in advance","Url":"https://github.com/dotnet/standard/issues/1071","RelatedDescription":"Closed issue \"Cannot use linq in MatchCollection regex with .NET Standard 2.0\" (#1071)"},{"Id":"412413302","IsPullRequest":true,"CreatedAt":"2019-02-20T13:10:57","Actor":"dotnet-maestro[bot]","Number":"1076","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19119.2\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19119.2\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19119.2\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19119.2\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19119.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1076","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1076)"},{"Id":"412032685","IsPullRequest":false,"CreatedAt":"2019-02-19T17:11:56","Actor":"YairHalberstadt","Number":"1075","RawContent":null,"Title":"A number of APIs still exist in both .NetCore and .NetFramework, but are missing in the .NetStandard 2.0 version of System.Reflection.Emit","State":"closed","Body":"I'm currently looking into targeting .Net Standard for Iron Python: https://github.com/IronLanguages/dlr/issues/175\r\n\r\nSome of the required Reflection.Emit APIs are missing from the System.Reflection.Emit nuget package when targeting .Net Standard 2.0, such as `DynamicMethod` and `TypeBuilder.CreateType()`. However they exist in both .Net Core and .Net Framework, and I believe it was decided in https://github.com/dotnet/corefx/issues/29365 (specifically from https://github.com/dotnet/corefx/issues/29365#issuecomment-398256162  and onwards) that such APIs should be included in the Nuget Package, and should throw when used from an AOT runtime.\r\n\r\nThe work to do that was completed in https://github.com/dotnet/corefx/pull/30741.\r\n\r\nIs there any reason why the Nuget package doesn't seem to reflect this?\r\n\r\nThanks","Url":"https://github.com/dotnet/standard/issues/1075","RelatedDescription":"Closed issue \"A number of APIs still exist in both .NetCore and .NetFramework, but are missing in the .NetStandard 2.0 version of System.Reflection.Emit\" (#1075)"},{"Id":"411518831","IsPullRequest":false,"CreatedAt":"2019-02-18T15:04:17","Actor":"kjpou1","Number":"1073","RawContent":null,"Title":".NET Standard for WebAssembly","State":"open","Body":"### Rationale and Usage\r\n\r\nAs WebAssembly support in Mono is being worked on there is a need to consider it as a platform for NS2.1.  `PlatformID.WebAssembly`\r\n \r\n### Proposed API\r\n\r\n#### PlatformID\r\n\r\nThis adds WebAssembly enum to `PlatformID`\r\n\r\n```\r\n    public enum PlatformID\r\n    {\r\n        [EditorBrowsable(EditorBrowsableState.Never)] Win32S = 0,\r\n        [EditorBrowsable(EditorBrowsableState.Never)] Win32Windows = 1,\r\n        Win32NT = 2,\r\n        [EditorBrowsable(EditorBrowsableState.Never)] WinCE = 3,\r\n        Unix = 4,\r\n        [EditorBrowsable(EditorBrowsableState.Never)] Xbox = 5,\r\n        [EditorBrowsable(EditorBrowsableState.Never)] MacOSX = 6\r\n        [EditorBrowsable(EditorBrowsableState.Never)] WebAssembly = 7\r\n    }\r\n```\r\n\r\n#### OSPlatform\r\n\r\nThis adds `OSPlatform.WebAssembly`.\r\n\r\n```\r\nnamespace System.Runtime.InteropServices\r\n{\r\n    public readonly struct OSPlatform : IEquatable<OSPlatform>\r\n    {\r\n        private readonly string _osPlatform;\r\n\r\n        public static OSPlatform WebAssembly { get; } = new OSPlatform(\"WEBASSEMBLY\");\r\n\r\n        public static OSPlatform FreeBSD { get; } = new OSPlatform(\"FREEBSD\");\r\n\r\n        public static OSPlatform Linux { get; } = new OSPlatform(\"LINUX\");\r\n\r\n        public static OSPlatform OSX { get; } = new OSPlatform(\"OSX\");\r\n\r\n        public static OSPlatform Windows { get; } = new OSPlatform(\"WINDOWS\");\r\n\r\n```\r\n\r\nIssue from Blazor: https://github.com/mono/mono/issues/13002\r\n\r\n@terrajobst @marek-safar @lewing\r\n","Url":"https://github.com/dotnet/standard/issues/1073","RelatedDescription":"Open issue \".NET Standard for WebAssembly\" (#1073)"},{"Id":"411070793","IsPullRequest":true,"CreatedAt":"2019-02-16T13:10:47","Actor":"dotnet-maestro[bot]","Number":"1072","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19115.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19115.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19115.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19115.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19115.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1072","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1072)"},{"Id":"410533703","IsPullRequest":true,"CreatedAt":"2019-02-15T20:32:52","Actor":"wtgodbe","Number":"1069","RawContent":null,"Title":"Label package as 'preview3'","State":"closed","Body":"Change label from `preview1` to `preview3` for upcoming release\r\n\r\nCC @danmosemsft @terrajobst","Url":"https://github.com/dotnet/standard/pull/1069","RelatedDescription":"Closed or merged PR \"Label package as 'preview3'\" (#1069)"},{"Id":"410527393","IsPullRequest":true,"CreatedAt":"2019-02-15T20:32:45","Actor":"wtgodbe","Number":"1067","RawContent":null,"Title":"Add netstandard.xml Intellisense file back to NetStandard.Library","State":"closed","Body":"The SDK expects `XmlDocFileRoot` to be defined by the repo so that it can find the intellisense file to binplace into the package - redefining this property makes it so we get `netstandard.xml` in the package again for 2.1.\r\n\r\nCC @dsplaisted @terrajobst ","Url":"https://github.com/dotnet/standard/pull/1067","RelatedDescription":"Closed or merged PR \"Add netstandard.xml Intellisense file back to NetStandard.Library\" (#1067)"},{"Id":"410759394","IsPullRequest":true,"CreatedAt":"2019-02-15T13:10:55","Actor":"dotnet-maestro[bot]","Number":"1070","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19114.4\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19114.4\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19114.4\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19114.4\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19114.4\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1070","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1070)"},{"Id":"410528981","IsPullRequest":true,"CreatedAt":"2019-02-14T23:12:42","Actor":"dotnet-maestro[bot]","Number":"1068","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19113.4\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19113.4\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19113.4\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19113.4\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19113.4\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1068","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#1068)"},{"Id":"405434278","IsPullRequest":false,"CreatedAt":"2019-01-31T20:48:53","Actor":"botrif","Number":"1064","RawContent":null,"Title":"NETStandard, T4 templates, and System.Numerics.Vectors","State":"open","Body":"We have a T4 template to generate code based on reflection of another project. The template project and the other project are SDK style, multitargeted: &lt;TargetFrameworks&gt;net46;netstandard2.0;uap10.0.14393&lt;/TargetFramework&gt;\r\nThe assembly to reflect on is loaded with &lt;#@ assembly name=…\r\nIf the first target in the list is net46, reflection works fine: typeof(MyClass).Assembly.GetTypes()\r\nBut with netstandard first in the list, we get ReflectionTypeLoadException containing the following:\r\n\r\nCould not load file or assembly 'System.Numerics.Vectors, Version=4.1.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n\r\n(the reflected-on assembly uses System.Vector.Numerics: &lt;PackageReference Include=\"System.Numerics.Vectors\" Version=\"4.5.0\" Condition=\" '$(TargetFramework)' == 'netstandard2.0' \" /&gt;\r\nOur previous workaround was to do the design-time code generation on net46, but we want to move to netstandard builds soon. How can this error be dealt with?","Url":"https://github.com/dotnet/standard/issues/1064","RelatedDescription":"Open issue \"NETStandard, T4 templates, and System.Numerics.Vectors\" (#1064)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"416587564","IsPullRequest":true,"CreatedAt":"2019-03-04T00:36:45","Actor":"danmosemsft","Number":"35741","RawContent":null,"Title":"Fix ArgIterator condition","State":"open","Body":"When simplifying the condition on arg iterator, I misread it as \"Windows not ARMxx\" because it was written redundantly. It was effectively \"Windows not ARM[32]\". \r\n```c#\r\n-        public static bool IsArgIteratorSupported => IsWindows && (IsNotArmProcess || IsArm64Process);\r\n+        public static bool IsArgIteratorSupported => IsWindows && IsNotArmNorArm64Process;\r\n```\r\n\r\n\r\nhttps://mc.dot.net/#/product/netcore/30/source/official~2Fdotnet~2Fcorefx~2Frefs~2Fheads~2Fmaster/type/test~2Ffunctional~2Fcli~2F/build/20190303.7/workItem/System.Runtime.Tests/analysis/xunit/System.Tests.ArgIteratorTests~2FArgIterator_Throws_PlatformNotSupportedException","Url":"https://github.com/dotnet/corefx/pull/35741","RelatedDescription":"Open PR \"Fix ArgIterator condition\" (#35741)"},{"Id":"416576904","IsPullRequest":true,"CreatedAt":"2019-03-04T00:22:24","Actor":"stephentoub","Number":"35740","RawContent":null,"Title":"Avoid NullReferenceException in BinaryObjectInfo","State":"closed","Body":"A corrupted BinaryFormatter stream can result in a BinaryObjectInfo getting constructed before the ObjectManager is constructed, resulting in the BinaryObjectInfo not having a reference to the ObjectManager.  Attempts to use it then hit a null reference exception.\r\n\r\n(I've not added a unit test here.  I suggest as part of adding a wrapping exception to fix 35491, we come up with a good way of encoding fuzzed inputs; this can then have a test that piggybacks on that.)\r\n\r\nContributes to https://github.com/dotnet/corefx/issues/35491\r\ncc: @danmosemsft, @ViktorHofer ","Url":"https://github.com/dotnet/corefx/pull/35740","RelatedDescription":"Closed or merged PR \"Avoid NullReferenceException in BinaryObjectInfo\" (#35740)"},{"Id":"416551127","IsPullRequest":true,"CreatedAt":"2019-03-03T20:09:35","Actor":"ViktorHofer","Number":"35739","RawContent":null,"Title":"Enable -? help parameter","State":"closed","Body":"12 more code lines with a slightly increased complexity but I'm ok with that.","Url":"https://github.com/dotnet/corefx/pull/35739","RelatedDescription":"Closed or merged PR \"Enable -? help parameter\" (#35739)"},{"Id":"416549964","IsPullRequest":false,"CreatedAt":"2019-03-03T18:57:46","Actor":"Eilon","Number":"35738","RawContent":null,"Title":"await SmtpClient.SendMailAsync never ends","State":"open","Body":"_From @BogCZE on Tuesday, 26 February 2019 21:31:18_\r\n\r\n### Describe the bug\r\nHi guys,\r\nWe've got problem with SmtpClient.SendMailAsync method. When try to send MailMessage with null or empty Body SendMailAsync never ends or throws exception and thread is stucked.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Using this version of ASP.NET Core '2.2.1'\r\n2. Run this code - not full code just the main part (we are using our own smtp server)\r\n```c#\r\n using (var smtpClient = InitSmtpClient(smtpConfig)) {\r\n                    try {\r\n                        var mailMessage = new MailMessage('from', 'To', 'Subject' String.Empty);\r\n                        await smtpClient.SendMailAsync(mailMessage).ConfigureAwait(false);\r\n                        await _emailLogic.MarQueueAsReadAsync(e.Id);\r\n                    }\r\n                    catch (Exception ex) {\r\n                        _logger.LogError(ex, ex.Message);\r\n                    }\r\n                }\r\n```\r\n3. With these arguments `new MailMessage('from', 'To', 'Subject' String.Empty)`\r\n4. No error or result application just awaits and awaits\r\n\r\n### Expected behavior\r\nWe tried to set Timeout for SmtpClient but after reading documentation we find out that Timeout is not related to SendMailAsync. We expects at least some kind of exception or timeout to be able to react and skip of sending such email. Now just stuck and nothing happens - we run this code using https://blog.maartenballiauw.be/post/2017/08/01/building-a-scheduled-cache-updater-in-aspnet-core-2.html tutorial (it means our email sender runs repeatedly every minute).\r\nWesolved this issue by add default message to body when null or empty but I think it would be better when this SenMailAsync will not stuck like this at first place.\r\n\r\n### Additional context\r\nAdd any other context about the problem here.\r\nInclude the output of `dotnet --info`\r\n.NET Core SDKs installed:\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.102 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n_Copied from original issue: aspnet/AspNetCore#7976_","Url":"https://github.com/dotnet/corefx/issues/35738","RelatedDescription":"Open issue \"await SmtpClient.SendMailAsync never ends\" (#35738)"},{"Id":"416542194","IsPullRequest":true,"CreatedAt":"2019-03-03T17:43:33","Actor":"am11","Number":"35737","RawContent":null,"Title":"Add GNU compiler support to build src/Native","State":"open","Body":"Tested with gcc v5, v6, v7 and v8 on CentOS 7, Ubuntu 18, Debian 8 and\r\nFreeBSD 11.\r\n`corefx/src/Native/build-native.sh x64 checked gcc`","Url":"https://github.com/dotnet/corefx/pull/35737","RelatedDescription":"Open PR \"Add GNU compiler support to build src/Native\" (#35737)"},{"Id":"416522264","IsPullRequest":true,"CreatedAt":"2019-03-03T15:28:22","Actor":"Dotnet-GitSync-Bot","Number":"35736","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corefx/pull/35736","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert\" (#35736)"},{"Id":"416519273","IsPullRequest":true,"CreatedAt":"2019-03-03T15:12:00","Actor":"dotnet-maestro[bot]","Number":"35735","RawContent":null,"Title":"[master] Update dependencies from  1 repositories","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://dnceng@dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n\r\n- optimization.windows_nt-x64.IBC.CoreFx - 99.99.99-master-20190303.1\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/35735","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from  1 repositories\" (#35735)"},{"Id":"416517504","IsPullRequest":true,"CreatedAt":"2019-03-03T15:03:50","Actor":"dotnet-maestro[bot]","Number":"35734","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- Microsoft.NETCore.Platforms - 3.0.0-preview4.19153.2\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/35734","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#35734)"},{"Id":"416514026","IsPullRequest":true,"CreatedAt":"2019-03-03T14:17:27","Actor":"dotnet-maestro[bot]","Number":"35733","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/coreclr\r\n\r\n- Microsoft.NET.Sdk.IL - 3.0.0-preview4-27502-72\r\n- Microsoft.NETCore.ILAsm - 3.0.0-preview4-27502-72\r\n- Microsoft.NETCore.Runtime.CoreCLR - 3.0.0-preview4-27502-72\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/35733","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#35733)"},{"Id":"416503401","IsPullRequest":true,"CreatedAt":"2019-03-03T12:27:35","Actor":"Dotnet-GitSync-Bot","Number":"35731","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corefx/pull/35731","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#35731)"},{"Id":"416506667","IsPullRequest":false,"CreatedAt":"2019-03-03T11:46:29","Actor":"AntonDavydov1","Number":"35732","RawContent":null,"Title":"System.BadImageFormatException","State":"open","Body":"Hello!\r\n\r\nI have **.Net Core 2.1** project with following code:\r\n\r\n`Tools.Serialize(new Dictionary<string, object> { { \"1\", null } });`\r\n\r\nThe method Tools.Serialize placed in **.Net Framework 4.5.1** project (to which **first one refers to**). This method looks as follows:\r\n\r\n`public static string Serialize(Dictionary<string, object> d)\r\n        {\r\n            var serializer = new JavaScriptSerializer();\r\n            var result = serializer.Serialize(d);\r\n            return result;\r\n        }`\r\n\r\nJavaScriptSerializer placed in .Net Framework's System.Web.Extensions assembly.\r\n\r\nSo I added reference to System.Web.Extensions in my .Net Core project (through PackageReference). But I constantly have the following exception when running code:\r\n\r\n> System.BadImageFormatException: 'Could not load file or assembly 'System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'. Reference assemblies should not be loaded for execution.  They can only be loaded in the Reflection-only loader context. (Exception from HRESULT: 0x80131058)'\r\n\r\nI read the similar issues on the forum, but haven't found solution for my situation. Can anyone give an advice, please?","Url":"https://github.com/dotnet/corefx/issues/35732","RelatedDescription":"Open issue \"System.BadImageFormatException\" (#35732)"},{"Id":"416490448","IsPullRequest":false,"CreatedAt":"2019-03-03T08:36:15","Actor":"ppekrol","Number":"35730","RawContent":null,"Title":"Discrepancy between Utf8Parser and double.TryParse between x64 and x86","State":"open","Body":"Hi,\r\n\r\nI'm using .NET Core 2.2.2 and this is my code:\r\n\r\n```csharp\r\nvar eps = double.Epsilon;\r\nvar epsTimesTwo = eps * 2;\r\nvar input = epsTimesTwo.ToString(\"R\", CultureInfo.InvariantCulture);\r\nvar bytes = Encoding.UTF8.GetBytes(input);\r\nvar parsed = Utf8Parser.TryParse(new ReadOnlySpan<byte>(bytes), out double output, out var consumed) && bytes.Length == consumed;\r\nvar dblParsed = double.TryParse(input, out var dblOutput);\r\nConsole.WriteLine($\"Input: {epsTimesTwo} ({input})\");\r\nConsole.WriteLine($\"Bytes length: {bytes.Length}\");\r\nConsole.WriteLine($\"Parsed (parser): {parsed}\");\r\nConsole.WriteLine($\"Output (parser): {output} ({output.ToString(\"R\", CultureInfo.InvariantCulture)})\");\r\nConsole.WriteLine($\"Parsed (double): {dblParsed}\");\r\nConsole.WriteLine($\"Output (double): {dblOutput} ({dblOutput.ToString(\"R\", CultureInfo.InvariantCulture)})\");\r\n```\r\n\r\nThe output on x64 (Windows) is as follows: \r\n\r\n```\r\nInput: 9.88131291682493E-324 (9.8813129168249309E-324) // notice that 'R' format differs\r\nBytes length: 23\r\nParsed (parser): True\r\nOutput (parser): 9.88131291682493E-324 (9.8813129168249309E-324)\r\nParsed (double): True\r\nOutput (double): 9.88131291682493E-324 (9.8813129168249309E-324)\r\n```\r\n\r\nAnd the x86 (Windows) output is:\r\n\r\n```\r\nInput: 9.88131291682493E-324 (9.88131291682493E-324) // no difference\r\nBytes length: 21\r\nParsed (parser): True\r\nOutput (parser): 4.94065645841247E-324 (4.94065645841247E-324)\r\nParsed (double): True\r\nOutput (double): 9.88131291682493E-324 (9.88131291682493E-324)\r\n```\r\n\r\nPlease note that `double.TryParse` is handling the difference between 'R' format on both platforms in the same manner, but `Utf8Parser` does not.\r\n\r\nI'm aware that 'R' format does not guarantee successful round-trips, but I would expect the same behavior between both of the platforms.","Url":"https://github.com/dotnet/corefx/issues/35730","RelatedDescription":"Open issue \"Discrepancy between Utf8Parser and double.TryParse between x64 and x86\" (#35730)"},{"Id":"416479113","IsPullRequest":true,"CreatedAt":"2019-03-03T06:20:34","Actor":"Dotnet-GitSync-Bot","Number":"35729","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corefx/pull/35729","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert\" (#35729)"},{"Id":"416448172","IsPullRequest":true,"CreatedAt":"2019-03-03T03:55:06","Actor":"danmosemsft","Number":"35721","RawContent":null,"Title":"Add Windows ARM64 to official builds","State":"closed","Body":"@ulisesh tells me the queues are Windows.10.Arm64.Open and Windows.10.Arm64\r\n\r\nI kicked off an official build against the private fork, with default settings. buildId=112683\r\n\r\n@safern does this look right?","Url":"https://github.com/dotnet/corefx/pull/35721","RelatedDescription":"Closed or merged PR \"Add Windows ARM64 to official builds\" (#35721)"},{"Id":"416471219","IsPullRequest":true,"CreatedAt":"2019-03-03T03:35:48","Actor":"danmosemsft","Number":"35728","RawContent":null,"Title":"Disable appdomains for System.Linq.Parallel tests on netfx","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/35727\r\n\r\nDisabling appdomains cuts the test time down from \"somewhere beyond 10 minutes\" to about 90 sec on my machine. The threads parameter helps a bit more.","Url":"https://github.com/dotnet/corefx/pull/35728","RelatedDescription":"Open PR \"Disable appdomains for System.Linq.Parallel tests on netfx\" (#35728)"},{"Id":"416462137","IsPullRequest":true,"CreatedAt":"2019-03-03T03:07:54","Actor":"Dotnet-GitSync-Bot","Number":"35726","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corert\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corefx/pull/35726","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corert\" (#35726)"},{"Id":"416455782","IsPullRequest":true,"CreatedAt":"2019-03-03T03:07:25","Actor":"stephentoub","Number":"35725","RawContent":null,"Title":"Improve assert error message in Process tests","State":"closed","Body":"Contributes to https://github.com/dotnet/corefx/issues/35708","Url":"https://github.com/dotnet/corefx/pull/35725","RelatedDescription":"Closed or merged PR \"Improve assert error message in Process tests\" (#35725)"},{"Id":"416467106","IsPullRequest":false,"CreatedAt":"2019-03-03T02:42:07","Actor":"danmosemsft","Number":"35727","RawContent":null,"Title":"System.Linq.Parallel tests hang on NETFX","State":"open","Body":"Was https://github.com/dotnet/core-eng/issues/5399\r\n\r\nThe problem seems to be the messaging generated by the 200K tests in this single assembly. In the NETFX configuration, xunit runs tests in a separate appdomain, and passes \"test started\" \"test finished\" etc to the main app domain using .NET remoting. It appears this is overwhelmed - when I break in I see 100K+ messages in its queue. .NET Core obviously doesn't use appdomains, and that may be the simple reason it doesn't hang.\r\n\r\n`   System.Linq.Parallel.Tests  Total: 185924, Errors: 0, Failed: 0, Skipped: 0, Time: 113.751s`","Url":"https://github.com/dotnet/corefx/issues/35727","RelatedDescription":"Open issue \"System.Linq.Parallel tests hang on NETFX\" (#35727)"},{"Id":"416453727","IsPullRequest":true,"CreatedAt":"2019-03-03T01:25:26","Actor":"danmosemsft","Number":"35723","RawContent":null,"Title":"Get RH6 outerloop clean","State":"closed","Body":"Related to https://github.com/dotnet/corefx/issues/34809\r\n\r\nI see #24008 is expected to be fixed.","Url":"https://github.com/dotnet/corefx/pull/35723","RelatedDescription":"Closed or merged PR \"Get RH6 outerloop clean\" (#35723)"},{"Id":"416446643","IsPullRequest":true,"CreatedAt":"2019-03-02T23:51:59","Actor":"Dotnet-GitSync-Bot","Number":"35720","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @grant-d","Url":"https://github.com/dotnet/corefx/pull/35720","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#35720)"},{"Id":"416454483","IsPullRequest":false,"CreatedAt":"2019-03-02T23:40:06","Actor":"danmosemsft","Number":"35724","RawContent":null,"Title":"JSON tests timing out on some distros","State":"open","Body":"https://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fpull~2F35100~2Fmerge/test~2Ffunctional~2Fcli~2F~2Fouterloop~2F/20190302.1/workItem/System.Text.Json.Tests/wilogs\r\n\r\nDump files aren't working but I see these\r\n```\r\n  System.Text.Json.Tests: [Long Running Test] 'System.Text.Json.Tests.Utf8JsonReaderTests.TestPartialJsonReaderMultiSegment', Elapsed: 00:03:11\r\n[Long Running Test] 'System.Text.Json.Tests.Utf8JsonWriterTests.WriteLargeKeyValue', Elapsed: 00:02:00\r\n\r\n```\r\n\r\nThey appear on several instances, the entire library only gets 10 minutes, can you make these much faster, maybe that will be enough?\r\n\r\n@ahsonkhan ","Url":"https://github.com/dotnet/corefx/issues/35724","RelatedDescription":"Open issue \"JSON tests timing out on some distros\" (#35724)"},{"Id":"416452424","IsPullRequest":false,"CreatedAt":"2019-03-02T23:11:16","Actor":"danmosemsft","Number":"35722","RawContent":null,"Title":"On Windows ARM64, serial ports are not found by SerialPort class","State":"open","Body":"This means that in Windows IoT, ports were not found under HKLM\\HARDWARE\\DEVICEMAP\\SERIALCOMM (by product) that were found under QueryDosDevice (by test)\r\n\r\nThis was discussed here https://github.com/dotnet/corefx/issues/18023 and apparently it hides real ports. \r\n```\r\nCOM3 is not present in SerialPort.GetPortNames result\r\nPortHelper Ports: COM3,COM5\r\nSerialPort Ports: \r\n\r\nExpected: True\r\nActual:   False\r\nStack Trace :\r\n   at System.IO.Ports.Tests.GetPortNames.AllHelperPortsAreInGetPortNames() in F:\\vsagent\\5\\s\\src\\System.IO.Ports\\tests\\SerialPort\\GetPortNames.cs:line 49\r\n```\r\nhttps://mc.dot.net/#/user/dotnet-mc-bot-2/official~2Fdotnet~2Fcorefx~2Frefs~2Fheads~2Farm64/test~2Ffunctional~2Fcli~2F/20190302.5/workItem/System.IO.Ports.Tests/analysis/xunit/System.IO.Ports.Tests.GetPortNames~2FAllHelperPortsAreInGetPortNames","Url":"https://github.com/dotnet/corefx/issues/35722","RelatedDescription":"Open issue \"On Windows ARM64, serial ports are not found by SerialPort class\" (#35722)"},{"Id":"416445271","IsPullRequest":false,"CreatedAt":"2019-03-02T21:42:56","Actor":"danmosemsft","Number":"35719","RawContent":null,"Title":"Details of new Azure CI pull request commands","State":"closed","Body":"See https://github.com/dotnet/corefx/blob/master/Documentation/project-docs/pullrequest-builds.md\r\n\r\nCreating this issue merely to pin to the top of the homepage, as an experiment.","Url":"https://github.com/dotnet/corefx/issues/35719","RelatedDescription":"Closed issue \"Details of new Azure CI pull request commands\" (#35719)"},{"Id":"416433249","IsPullRequest":true,"CreatedAt":"2019-03-02T21:15:47","Actor":"Dotnet-GitSync-Bot","Number":"35718","RawContent":null,"Title":"Mirror changes from dotnet/corert,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corefx/pull/35718","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert,coreclr\" (#35718)"},{"Id":"416400458","IsPullRequest":true,"CreatedAt":"2019-03-02T21:15:11","Actor":"dotnet-maestro[bot]","Number":"35715","RawContent":null,"Title":"[master] Update dependencies from  1 repositories","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://dnceng@dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n\r\n- optimization.windows_nt-x64.IBC.CoreFx - 99.99.99-master-20190302.1\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/35715","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from  1 repositories\" (#35715)"},{"Id":"416398903","IsPullRequest":true,"CreatedAt":"2019-03-02T21:14:48","Actor":"dotnet-maestro[bot]","Number":"35714","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- Microsoft.NETCore.Platforms - 3.0.0-preview4.19152.1\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/35714","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#35714)"},{"Id":"416433225","IsPullRequest":false,"CreatedAt":"2019-03-02T19:39:38","Actor":"wfurt","Number":"35717","RawContent":null,"Title":"tests failing epically with LANG='C.UTF-8' on Alpine","State":"open","Body":"Since Alpine/musl-linux does not really have locale like glibc based distributions, this inherently default.  However, when set explicitly, many tests do fail with strange errors: \r\n\r\nfor example Microsoft.VisualBasic.Core.Tests\r\n```\r\nSystem.InvalidCastException : Conversion from string \\\"false\\\" to type 'Boolean' is not valid.\r\n---- System.FormatException : Input string was not in a correct format.\r\n```\r\nrelated to  #35646 and  #32250\r\n\r\nAccording to discussion in #32250, this is \"expected\".\r\nWe should update tests so they do not fail with default system setting. I also tried same setting on Ubuntu 18.04 and I don't see same results. This should be investigated.  \r\n\r\ncc: @MattGal @ulisesh \r\n","Url":"https://github.com/dotnet/corefx/issues/35717","RelatedDescription":"Open issue \"tests failing epically with LANG='C.UTF-8' on Alpine\" (#35717)"},{"Id":"416430036","IsPullRequest":false,"CreatedAt":"2019-03-02T19:07:57","Actor":"jefffhaynes","Number":"35716","RawContent":null,"Title":"Add Socket.ReceiveFrom overloads that accept Span<byte>","State":"open","Body":"Currently it is possible to perform a socket receive from a connection-oriented protocol using Socket.Receive(Span<byte>, ...).  In some cases it would be desirable to do the same for datagrams, especially in high-performance streaming scenarios.  However, currently the Socket.ReceiveFrom method, necessary to receive datagrams from unconnected sources, does not include any overload which accepts a Span<byte> buffer.","Url":"https://github.com/dotnet/corefx/issues/35716","RelatedDescription":"Open issue \"Add Socket.ReceiveFrom overloads that accept Span<byte>\" (#35716)"},{"Id":"416395566","IsPullRequest":true,"CreatedAt":"2019-03-02T15:22:54","Actor":"dotnet-maestro[bot]","Number":"35712","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/coreclr\r\n\r\n- Microsoft.NET.Sdk.IL - 3.0.0-preview4-27501-75\r\n- Microsoft.NETCore.ILAsm - 3.0.0-preview4-27501-75\r\n- Microsoft.NETCore.Runtime.CoreCLR - 3.0.0-preview4-27501-75\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/35712","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#35712)"},{"Id":"416398450","IsPullRequest":true,"CreatedAt":"2019-03-02T13:40:54","Actor":"dotnet-maestro[bot]","Number":"35713","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/core-setup\r\n\r\n- Microsoft.NETCore.App - 3.0.0-preview4-27501-13\r\n- Microsoft.NETCore.DotNetHost - 3.0.0-preview4-27501-13\r\n- Microsoft.NETCore.DotNetHostPolicy - 3.0.0-preview4-27501-13\r\n\r\nUpdates from https://github.com/dotnet/core-setup\r\n\r\n- Microsoft.NETCore.App - 3.0.0-preview4-27502-8\r\n- Microsoft.NETCore.DotNetHost - 3.0.0-preview4-27502-8\r\n- Microsoft.NETCore.DotNetHostPolicy - 3.0.0-preview4-27502-8\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/35713","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#35713)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"416596933","IsPullRequest":true,"CreatedAt":"2019-03-04T01:51:38","Actor":"agocke","Number":"33840","RawContent":null,"Title":"Replace Stack with ArrayBuilder in GreenNode walker","State":"open","Body":"This has shown up as a hot allocation path in a few different traces.\r\nThis change amortizes the allocations by using a pooled ArrayBuilder\r\ninstead of allocating a new Stack every time.\r\n\r\nThe following benchmarks seem to support the hypothesis:\r\n\r\nBefore change:\r\n\r\n```\r\nBenchmarkDotNet=v0.11.1, OS=Windows 10.0.17134.590 (1803/April2018Update/Redstone4)\r\nAMD Ryzen 7 1800X Eight-Core Processor (Max: 3.60GHz), 1 CPU, 16 logical and 8 physical cores\r\n.NET Core SDK=2.2.103\r\n  [Host] : .NET Core 2.1.8 (CoreCLR 4.6.27317.03, CoreFX 4.6.27317.03), 64bit RyuJIT\r\n  Core   : .NET Core 2.1.8 (CoreCLR 4.6.27317.03, CoreFX 4.6.27317.03), 64bit RyuJIT\r\n\r\nJob=Core  Runtime=Core  Server=True\r\n\r\n                Method |      Mean |     Error |    StdDev |     Gen 0 | Allocated |\r\n---------------------- |----------:|----------:|----------:|----------:|----------:|\r\n               Parsing |  65.25 ms |  1.301 ms |  2.568 ms |         - |   6.57 MB |\r\n CompileMethodsAndEmit | 634.00 ms | 12.640 ms | 22.468 ms | 1000.0000 |  40.29 MB |\r\n     SerializeMetadata | 200.52 ms |  3.656 ms |  3.241 ms | 1000.0000 |  17.39 MB |\r\n```\r\n\r\nAfter change:\r\n\r\n```\r\nBenchmarkDotNet=v0.11.1, OS=Windows 10.0.17134.590 (1803/April2018Update/Redstone4)\r\nAMD Ryzen 7 1800X Eight-Core Processor (Max: 3.60GHz), 1 CPU, 16 logical and 8 physical cores\r\n.NET Core SDK=2.2.103\r\n  [Host] : .NET Core 2.1.8 (CoreCLR 4.6.27317.03, CoreFX 4.6.27317.03), 64bit RyuJIT\r\n  Core   : .NET Core 2.1.8 (CoreCLR 4.6.27317.03, CoreFX 4.6.27317.03), 64bit RyuJIT\r\n\r\nJob=Core  Runtime=Core  Server=True\r\n\r\n                Method |      Mean |     Error |    StdDev |     Gen 0 | Allocated |\r\n---------------------- |----------:|----------:|----------:|----------:|----------:|\r\n               Parsing |  67.26 ms |  1.344 ms |  3.321 ms |         - |   2.59 MB |\r\n CompileMethodsAndEmit | 627.23 ms | 13.307 ms | 23.995 ms | 1000.0000 |  28.85 MB |\r\n     SerializeMetadata | 206.02 ms |  4.087 ms |  5.991 ms | 1000.0000 |  17.39 MB |\r\n```","Url":"https://github.com/dotnet/roslyn/pull/33840","RelatedDescription":"Open PR \"Replace Stack with ArrayBuilder in GreenNode walker\" (#33840)"},{"Id":"416583245","IsPullRequest":true,"CreatedAt":"2019-03-04T01:30:05","Actor":"dotnet-bot","Number":"33838","RawContent":null,"Title":"Merge dev16.0-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.0-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/dev16.0-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33838","RelatedDescription":"Closed or merged PR \"Merge dev16.0-vs-deps to master-vs-deps\" (#33838)"},{"Id":"416583732","IsPullRequest":false,"CreatedAt":"2019-03-04T00:04:27","Actor":"huoyaoyuan","Number":"33839","RawContent":null,"Title":"Intendation for switch expression is not good in expression bodied method","State":"open","Body":"**Version Used**: \r\nVS 2019 RC\r\n![image](https://user-images.githubusercontent.com/5644458/53704071-b3b98b80-3e53-11e9-8187-a382808d578c.png)\r\n![image](https://user-images.githubusercontent.com/5644458/53704073-c2a03e00-3e53-11e9-942c-e4bcbf396cc6.png)\r\n![image](https://user-images.githubusercontent.com/5644458/53704077-d350b400-3e53-11e9-9810-2b2c682df721.png)\r\nThe first case should be considered mis-aligned, comparing to object initializer.","Url":"https://github.com/dotnet/roslyn/issues/33839","RelatedDescription":"Open issue \"Intendation for switch expression is not good in expression bodied method\" (#33839)"},{"Id":"416440670","IsPullRequest":true,"CreatedAt":"2019-03-03T21:40:37","Actor":"sharwell","Number":"33832","RawContent":null,"Title":"Revert \"Merge pull request #33800 from sharwell/script-cleanup\"","State":"closed","Body":"This reverts commit 726c2bc02410d1fadaba9a6f763cdaa1cb2e30d4, reversing changes made to f51b549089145547d09ff828ec09cc221936c31c.\r\n\r\n📝 I'm rebuilding this until it runs on one of the machines I know was failing in this part of the script today.","Url":"https://github.com/dotnet/roslyn/pull/33832","RelatedDescription":"Closed or merged PR \"Revert \"Merge pull request #33800 from sharwell/script-cleanup\"\" (#33832)"},{"Id":"416458413","IsPullRequest":false,"CreatedAt":"2019-03-03T07:46:30","Actor":"ilopez","Number":"33837","RawContent":null,"Title":"Missing \"Analyzer with Code Fix\" project template in VS 2017 (15.9.7)","State":"closed","Body":"Visual Studio 2017 version 15.9.7: \r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Clean Visual Studio 2017 Install\r\n2. Install \"Visual Studio extension development\" and \".NET Core cross-platform development\" workloads\r\n3. Launch VS2017 and navigate to new project wizard, extensibility folder, no projects for \"Code Analyzer with Code Fix (.NET Standard)\"\r\n\r\n**Expected Behavior**: Code Analyzer project should be available to create a project.\r\n\r\n**Actual Behavior**: Option missing.\r\n\r\nReferencing:\r\nhttps://github.com/dotnet/roslyn/issues/21012\r\n\r\nInstall Settings\r\n`Microsoft Visual Studio Professional 2017 \r\nVersion 15.9.7\r\nVisualStudio.15.Release/15.9.7+28307.423\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Professional\r\n\r\nApplication Insights Tools for Visual Studio Package   8.14.20131.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Functions and Web Jobs Tools   15.9.02046.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.0.0\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61901.24070\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.9.20918.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers`\r\n","Url":"https://github.com/dotnet/roslyn/issues/33837","RelatedDescription":"Closed issue \"Missing \"Analyzer with Code Fix\" project template in VS 2017 (15.9.7)\" (#33837)"},{"Id":"416455925","IsPullRequest":true,"CreatedAt":"2019-03-03T01:30:10","Actor":"dotnet-bot","Number":"33835","RawContent":null,"Title":"Merge dev16.0-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.0-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/dev16.0-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33835","RelatedDescription":"Closed or merged PR \"Merge dev16.0-vs-deps to master-vs-deps\" (#33835)"},{"Id":"416455951","IsPullRequest":true,"CreatedAt":"2019-03-03T01:30:05","Actor":"dotnet-bot","Number":"33836","RawContent":null,"Title":"Merge master to features/readonly-members","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/readonly-members.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/readonly-members\ngit reset --hard upstream/features/readonly-members\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/readonly-members --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33836","RelatedDescription":"Closed or merged PR \"Merge master to features/readonly-members\" (#33836)"},{"Id":"416447175","IsPullRequest":true,"CreatedAt":"2019-03-02T22:06:08","Actor":"CyrusNajmabadi","Number":"33834","RawContent":null,"Title":"Introduce more efficient internal representation of a sequence VirtualChars","State":"open","Body":"Review with https://github.com/dotnet/roslyn/pull/33834/files?w=1 for better diffs.\r\n\r\nPrior to this PR, the way regex worked was to first start with a string-SyntaxToken.  This token was then converted into an ImmutableArray where each char of the string was 'interpretted' into 'VirtualChars' and then placed in the array.  For a normal character (like 'a'), this interpretation had no effect.  But we did it to be able to understand that `\\\\` in text would mean `\\` as an actual char value.  \r\n\r\nAfter this, this sequence of 'VirtualChars' was then lexed and parsed if appropriate by the regex engine.  When lexing, sub-sequences of this array were then placed into the RegexTokens being created.  Finally, these tokens are parsed into a tree.\r\n\r\nThis can end up with a fairly large number of allocations.  First, you're gettin an array created for each string.  And that array goes from being `sizeof(char) * N` to `sizeof(VirtualChar) * N`.  Then, each token/trivia will consume and copy part of that array, effectively leading to double that.  \r\n\r\n--\r\n\r\nThis PR changes things in a couple of ways.\r\n\r\n1. There is now a new abstraction called VirtualCharSequence.  It exposes the needed surface area that features need (i.e. it's similar to an `ImmutableArray<VirtualChar>`), but allows for more efficient internal implementations.  \r\n2. One important implementation is the 'sits on a string' version.  this version is used when the original string had no escaped sequences in it.  i.e. a string like `\"abc\"`.  In this case, we just create a single object that points at that text and says \"i represents the chars from `abc`\".  This means that for *most* strings in a project, we can represent the sequence of chars with just a single allocation.\r\n3. It's efficient (one extra object) to get a sub-sequence of a VirtualCharSequence.  So, when all the trivia/tokens get lexed for a regex, we can just point at the right information without copying out an entire array.","Url":"https://github.com/dotnet/roslyn/pull/33834","RelatedDescription":"Open PR \"Introduce more efficient internal representation of a sequence VirtualChars\" (#33834)"},{"Id":"416446584","IsPullRequest":false,"CreatedAt":"2019-03-02T21:58:53","Actor":"kfertitta","Number":"33833","RawContent":null,"Title":"Adding an assembly reference via CPS does not update Roslyn MetadataReferences.","State":"open","Body":"**Version Used**: \r\n2.9.0\r\n\r\n**Steps to Reproduce**:\r\n\r\n1.  Open a solution with a C# project.\r\n2.  Obtain a `ConfiguredProject` interface for the C# project.\r\n3.  Add a reference to a GAC'd assembly via the following calls:\r\n```\r\nawait configuredProject.Services.AssemblyReferences.AddAsync(assemblyName, null);\r\n\r\nawait configuredProject.UnconfiguredProject.SaveAsync();\r\n```\r\n4. Note that the `.csproj` file is properly updated to include the reference.\r\n5. Obtain a reference to the `VisualStudioWorkspace` and locate the `Project` to which the reference was added.\r\n6.  Note that the `MetadataReferences` on that `Project` do NOT include the reference added via the CPS calls above.\r\n\r\n**Expected Behavior**:\r\nThe Roslyn project should pick up the added reference.\r\n\r\n**Actual Behavior**:\r\nThe Roslyn project does not include the added reference.\r\n","Url":"https://github.com/dotnet/roslyn/issues/33833","RelatedDescription":"Open issue \"Adding an assembly reference via CPS does not update Roslyn MetadataReferences.\" (#33833)"},{"Id":"416436364","IsPullRequest":true,"CreatedAt":"2019-03-02T20:06:37","Actor":"sharwell","Number":"33831","RawContent":null,"Title":"Remove unnecessary (duplicate) WaitForAsyncOperations","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/33831","RelatedDescription":"Open PR \"Remove unnecessary (duplicate) WaitForAsyncOperations\" (#33831)"},{"Id":"416435935","IsPullRequest":true,"CreatedAt":"2019-03-02T20:03:09","Actor":"sharwell","Number":"33830","RawContent":null,"Title":"Fix completion at the start of readonly documents","State":"open","Body":"Fixes #33829","Url":"https://github.com/dotnet/roslyn/pull/33830","RelatedDescription":"Open PR \"Fix completion at the start of readonly documents\" (#33830)"},{"Id":"416435216","IsPullRequest":false,"CreatedAt":"2019-03-02T19:57:44","Actor":"sharwell","Number":"33829","RawContent":null,"Title":"Typing at the start of a read-only document crashes the IDE","State":"open","Body":"**Version Used**: 2773f5e\r\n\r\nCaught by integration test `BasicEditAndContinue.DocumentStateTrackingReadonlyInRunMode`.\r\n","Url":"https://github.com/dotnet/roslyn/issues/33829","RelatedDescription":"Open issue \"Typing at the start of a read-only document crashes the IDE\" (#33829)"},{"Id":"416434866","IsPullRequest":true,"CreatedAt":"2019-03-02T19:54:32","Actor":"sharwell","Number":"33828","RawContent":null,"Title":"Restore original behavior of Shift+Enter during completion","State":"open","Body":"Fixes #33823","Url":"https://github.com/dotnet/roslyn/pull/33828","RelatedDescription":"Open PR \"Restore original behavior of Shift+Enter during completion\" (#33828)"},{"Id":"416434471","IsPullRequest":true,"CreatedAt":"2019-03-02T19:51:00","Actor":"sharwell","Number":"33827","RawContent":null,"Title":"Ensure the caret is visible after commit","State":"open","Body":"Fixes #33822","Url":"https://github.com/dotnet/roslyn/pull/33827","RelatedDescription":"Open PR \"Ensure the caret is visible after commit\" (#33827)"},{"Id":"416433980","IsPullRequest":false,"CreatedAt":"2019-03-02T19:46:51","Actor":"sharwell","Number":"33826","RawContent":null,"Title":"Suggestion mode does not work in C# Interactive view with async completion","State":"open","Body":"**Version Used**: 2773f5e\r\n\r\nThe command is not available. We did not have any tests that relied on in working (they should be added), but several tests assumed the command was available.","Url":"https://github.com/dotnet/roslyn/issues/33826","RelatedDescription":"Open issue \"Suggestion mode does not work in C# Interactive view with async completion\" (#33826)"},{"Id":"416432372","IsPullRequest":false,"CreatedAt":"2019-03-02T19:31:55","Actor":"sharwell","Number":"33825","RawContent":null,"Title":"Async completion fails to account for brace matching sessions","State":"open","Body":"**Version Used**: 2773f5e\r\n\r\nCaught by integration test `CompletionUsesTrackingPointsInTheFaceOfAutomaticBraceCompletion`.\r\n","Url":"https://github.com/dotnet/roslyn/issues/33825","RelatedDescription":"Open issue \"Async completion fails to account for brace matching sessions\" (#33825)"},{"Id":"416432184","IsPullRequest":false,"CreatedAt":"2019-03-02T19:30:08","Actor":"sharwell","Number":"33824","RawContent":null,"Title":"RecentItemsManager is global for async completion","State":"open","Body":"**Version Used**: 2773f5e\r\n\r\nIndirectly caught by integration tests `XmlDocCommentIntelliSense` and `XmlTagCompletion`.\r\n\r\nIn legacy completion, the MRU set was local to a subject buffer. In async completion, the MRU is shared state.\r\n","Url":"https://github.com/dotnet/roslyn/issues/33824","RelatedDescription":"Open issue \"RecentItemsManager is global for async completion\" (#33824)"},{"Id":"416431914","IsPullRequest":false,"CreatedAt":"2019-03-02T19:27:41","Actor":"sharwell","Number":"33823","RawContent":null,"Title":"Commit on shift+enter fails for async completion","State":"open","Body":"**Version Used**: 2773f5e\r\n\r\nCaught by integration test `CommitOnShiftEnter`.\r\n","Url":"https://github.com/dotnet/roslyn/issues/33823","RelatedDescription":"Open issue \"Commit on shift+enter fails for async completion\" (#33823)"},{"Id":"416431735","IsPullRequest":false,"CreatedAt":"2019-03-02T19:26:02","Actor":"sharwell","Number":"33822","RawContent":null,"Title":"Async completion fails to scroll the caret into view","State":"open","Body":"**Version Used**: 2773f5e\r\n\r\nCaught by integration test `EnsureTheCaretIsVisibleAfterALongEdit`.\r\n","Url":"https://github.com/dotnet/roslyn/issues/33822","RelatedDescription":"Open issue \"Async completion fails to scroll the caret into view\" (#33822)"},{"Id":"416390183","IsPullRequest":true,"CreatedAt":"2019-03-02T13:30:10","Actor":"dotnet-bot","Number":"33819","RawContent":null,"Title":"Merge dev16.0-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.0-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/dev16.0-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33819","RelatedDescription":"Closed or merged PR \"Merge dev16.0-vs-deps to master-vs-deps\" (#33819)"},{"Id":"416390199","IsPullRequest":true,"CreatedAt":"2019-03-02T13:30:06","Actor":"dotnet-bot","Number":"33820","RawContent":null,"Title":"Merge master to features/readonly-members","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/readonly-members.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/readonly-members\ngit reset --hard upstream/features/readonly-members\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/readonly-members --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33820","RelatedDescription":"Closed or merged PR \"Merge master to features/readonly-members\" (#33820)"},{"Id":"416390497","IsPullRequest":false,"CreatedAt":"2019-03-02T12:04:12","Actor":"ufcpp","Number":"33821","RawContent":null,"Title":"help message for langversion isn't updated","State":"open","Body":"**Version Used**: \r\n\r\ncsc 3.0.19.12206 (ec366687)\r\n(installed with Visual Studio 2019 RC)\r\n\r\n**Steps to Reproduce**:\r\n\r\nShow csc help message.\r\n\r\n**Expected Behavior**:\r\n\r\nHelp message for `-langversion` should refer to `latestMajor` and `preview`, and describe `default` as latest including minor.\r\n\r\n**Actual Behavior**:\r\n\r\nThe message isn't updated: https://github.com/dotnet/roslyn/blob/2566316b364148050f60e83bc9a6c73e73209114/src/Compilers/CSharp/Portable/CSharpResources.resx#L4625\r\n","Url":"https://github.com/dotnet/roslyn/issues/33821","RelatedDescription":"Open issue \"help message for langversion isn't updated\" (#33821)"},{"Id":"416377193","IsPullRequest":false,"CreatedAt":"2019-03-02T09:07:21","Actor":"heejaechang","Number":"33818","RawContent":null,"Title":"update refactoring provider to have something that we can use to order its listing in lightbulb","State":"open","Body":"currently, we distinguish refactoring and code fix but in reality, it doesn't matter much for users.\r\n\r\ncode fix can use diagnostic and caret location to figure out what's more important and then use priority to sort things in light bulb menu.\r\n\r\nbut refactoring doesn't have such mark (anchor) like diagnostic for code fix that we can use to place it in right place in menu.\r\n\r\nso we do something like this - http://source.roslyn.io/#Microsoft.CodeAnalysis.EditorFeatures.Wpf/Suggestions/SuggestedActionsSource.cs,197\r\n\r\nand distinguish refactoring and code fix. I believe this will be just a source of an endless tweak as new refactoring is added and we want to place it in a different place. \r\n\r\nI think we should fix the root cause not just keep changing ordering rules. also, we don't actually have tests for all different combinations of selection and refactorings and code fix mix so we actually have no idea how/what behavior got changed due to this kind of tweak.\r\n\r\nwe should discuss how we should address this once for all in a design meeting.\r\n\r\n...\r\n\r\nmy suggestion will be making code refactoring and code fix to behave the same (this theme is consistent with this - https://github.com/dotnet/roslyn/issues/32461) and order those without distinguishing two.\r\n\r\nright now, the only difference between these 2 for ordering is the applicable span for suggestedactionset.\r\n\r\ncode fix has the applicable span from diagnostic it is fixing, but refactoring gets it from selection (which might or might not directly related to the refactoring and it get even wierdier if there is no explicit selection) \r\n\r\ndue to that, ordering those 2 (code fix and code refactoring) without distinguishing them mess things up. and we had to do this hueristic based ordering we have even though we don't actually know whether selection is used for refactoring or not.\r\n\r\nif we see code fix provider, code fix is registered this way (or variation of the API)\r\nhttp://source.roslyn.io/#Microsoft.CodeAnalysis.Workspaces/CodeFixes/CodeFixContext.cs,165\r\n\r\n```csharp\r\npublic void RegisterCodeFix(CodeAction action, Diagnostic diagnostic)\r\n```\r\n\r\nand refactoring is done this way\r\nhttp://source.roslyn.io/#Microsoft.CodeAnalysis.Workspaces/CodeRefactorings/CodeRefactoringContext.cs,51\r\n\r\n```csharp\r\npublic void RegisterRefactoring(CodeAction action)\r\n```\r\n\r\nI suggest we add an overload (or its variation) for coderefactoring provider\r\n\r\n```csharp\r\npublic void RegisterRefactoring(CodeAction action, TextSpan span)\r\n```\r\n\r\nand we use that span for applicable span for suggestedActionSet and for those refactoring that added this way, we don't disthinguish it from code fixes when ordering.\r\n\r\nalso, another benefit of this is we no longer need to do the hard to discover \"caret must be on this specific magic location for refactoring to show up in LB\".\r\n\r\nnow we can include refactoring in menu if the span provided is on the line where caret is on, exact same behavior as code fix.\r\n\r\nwe can leave existing API as it is, so refactoring that truely depends on selection like extract method can still use it.  \r\n\r\n...\r\n\r\nthe suggestion above is something I just think on top of my head so we can discuss more in design meeting.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/33818","RelatedDescription":"Open issue \"update refactoring provider to have something that we can use to order its listing in lightbulb\" (#33818)"},{"Id":"416344022","IsPullRequest":true,"CreatedAt":"2019-03-02T02:05:53","Actor":"ivanbasov","Number":"33817","RawContent":null,"Title":"improving performance on running completion tests","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/33817","RelatedDescription":"Open PR \"improving performance on running completion tests\" (#33817)"},{"Id":"416329803","IsPullRequest":true,"CreatedAt":"2019-03-02T02:00:12","Actor":"dotnet-bot","Number":"33813","RawContent":null,"Title":"Merge dev16.0 to master","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.0 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-to-master\ngit reset --hard upstream/master\ngit merge upstream/dev16.0\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33813","RelatedDescription":"Closed or merged PR \"Merge dev16.0 to master\" (#33813)"},{"Id":"416329856","IsPullRequest":true,"CreatedAt":"2019-03-02T02:00:08","Actor":"dotnet-bot","Number":"33814","RawContent":null,"Title":"Merge dev16.0 to dev16.0-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.0 into dev16.0-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-to-dev16.0-vs-deps\ngit reset --hard upstream/dev16.0-vs-deps\ngit merge upstream/dev16.0\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-to-dev16.0-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33814","RelatedDescription":"Closed or merged PR \"Merge dev16.0 to dev16.0-vs-deps\" (#33814)"},{"Id":"416337762","IsPullRequest":true,"CreatedAt":"2019-03-02T01:15:18","Actor":"chsienki","Number":"33816","RawContent":null,"Title":"Report nullability for attribute arguments:","State":"open","Body":"- At binding time check both constructor and value arguments for const null\r\n- When arguments are arrays, check for nullable array mismatch\r\n- When arguments are non nullable arrays check for nullable inside initializers\r\n- Add tests","Url":"https://github.com/dotnet/roslyn/pull/33816","RelatedDescription":"Open PR \"Report nullability for attribute arguments:\" (#33816)"},{"Id":"416321868","IsPullRequest":true,"CreatedAt":"2019-03-02T01:00:10","Actor":"dotnet-bot","Number":"33811","RawContent":null,"Title":"Merge master to features/readonly-members","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/readonly-members.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/readonly-members\ngit reset --hard upstream/features/readonly-members\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/readonly-members --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33811","RelatedDescription":"Closed or merged PR \"Merge master to features/readonly-members\" (#33811)"},{"Id":"416329867","IsPullRequest":true,"CreatedAt":"2019-03-02T00:23:15","Actor":"dotnet-bot","Number":"33815","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33815","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#33815)"},{"Id":"416321857","IsPullRequest":true,"CreatedAt":"2019-03-02T00:22:42","Actor":"dotnet-bot","Number":"33810","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33810","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#33810)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"416440240","IsPullRequest":true,"CreatedAt":"2019-03-03T14:27:45","Actor":"marek-safar","Number":"7111","RawContent":null,"Title":"Move fully managed TimerQueue implementation to shared partition","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7111","RelatedDescription":"Closed or merged PR \"Move fully managed TimerQueue implementation to shared partition\" (#7111)"},{"Id":"416503419","IsPullRequest":true,"CreatedAt":"2019-03-03T14:25:19","Actor":"Dotnet-GitSync-Bot","Number":"7114","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7114","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7114)"},{"Id":"416462154","IsPullRequest":true,"CreatedAt":"2019-03-03T05:39:41","Actor":"Dotnet-GitSync-Bot","Number":"7113","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/7113","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7113)"},{"Id":"416446656","IsPullRequest":true,"CreatedAt":"2019-03-02T23:48:21","Actor":"Dotnet-GitSync-Bot","Number":"7112","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @grant-d","Url":"https://github.com/dotnet/corert/pull/7112","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7112)"},{"Id":"416433266","IsPullRequest":true,"CreatedAt":"2019-03-02T21:09:54","Actor":"Dotnet-GitSync-Bot","Number":"7110","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/7110","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7110)"},{"Id":"416378646","IsPullRequest":true,"CreatedAt":"2019-03-02T13:24:42","Actor":"Dotnet-GitSync-Bot","Number":"7109","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7109","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7109)"},{"Id":"416322845","IsPullRequest":true,"CreatedAt":"2019-03-02T03:30:03","Actor":"Dotnet-GitSync-Bot","Number":"7108","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7108","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7108)"},{"Id":"416306984","IsPullRequest":true,"CreatedAt":"2019-03-01T23:19:54","Actor":"Dotnet-GitSync-Bot","Number":"7106","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @Foxtrek64 @marek-safar","Url":"https://github.com/dotnet/corert/pull/7106","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7106)"},{"Id":"416309160","IsPullRequest":true,"CreatedAt":"2019-03-01T22:44:49","Actor":"nattress","Number":"7107","RawContent":null,"Title":"Re-init tools when init-tools.cmd is updated","State":"open","Body":"Recent Roslyn compiler version upgrades cause build breaks on existing repos because init-tools will not run if the semaphore file is present.\r\n\r\nEmit the most recent git commit hash of init-tools.cmd to the semaphore and compare the two whenever init-tools.cmd is run. This will catch updates and re-init the tools automatically.\r\n\r\nI can implement a similar change to init-tools.sh if folks don't see a problem with this direction. These build tools are nearing end of life as I understand - it would be nice to also include updates to the CLI and build tools version text files in this logic, too, but this fixes the immediate breaks we've been seeing.","Url":"https://github.com/dotnet/corert/pull/7107","RelatedDescription":"Open PR \"Re-init tools when init-tools.cmd is updated\" (#7107)"},{"Id":"416188816","IsPullRequest":true,"CreatedAt":"2019-03-01T19:13:09","Actor":"Dotnet-GitSync-Bot","Number":"7105","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @morganbr","Url":"https://github.com/dotnet/corert/pull/7105","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7105)"},{"Id":"415951984","IsPullRequest":true,"CreatedAt":"2019-03-01T06:57:37","Actor":"Dotnet-GitSync-Bot","Number":"7104","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corert/pull/7104","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7104)"},{"Id":"415926456","IsPullRequest":true,"CreatedAt":"2019-03-01T03:40:12","Actor":"Dotnet-GitSync-Bot","Number":"7103","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @AaronRobinsonMSFT","Url":"https://github.com/dotnet/corert/pull/7103","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7103)"},{"Id":"415698046","IsPullRequest":true,"CreatedAt":"2019-03-01T03:31:32","Actor":"trylek","Number":"7099","RawContent":null,"Title":"Fix two errors in CPAOT release build of CoreCLR framework","State":"closed","Body":"1) GetClosestDefType should return Array, not Array`1, in CPAOT,\r\nas there's no Array`1 in CoreCLR CoreLib.\r\n\r\n2) We cannot resolve calls from within non-versionable inlined\r\nmethods outside the version bubble because their callee tokens\r\nare relative to the external module and cannot be encoded in the\r\nR2R image. We hit this for string.IsNullOrEmpty -> string.get_Length.\r\n\r\nI have also fixed the token context for some tokens; the context\r\nis generally specified by the calling method, not by the module\r\nbeing compiled, in the presence of inlining.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7099","RelatedDescription":"Closed or merged PR \"Fix two errors in CPAOT release build of CoreCLR framework\" (#7099)"},{"Id":"415886006","IsPullRequest":true,"CreatedAt":"2019-03-01T03:31:00","Actor":"Dotnet-GitSync-Bot","Number":"7102","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7102","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7102)"},{"Id":"415870437","IsPullRequest":true,"CreatedAt":"2019-02-28T23:29:29","Actor":"Dotnet-GitSync-Bot","Number":"7101","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @AaronRobinsonMSFT","Url":"https://github.com/dotnet/corert/pull/7101","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7101)"},{"Id":"415838861","IsPullRequest":true,"CreatedAt":"2019-02-28T22:49:30","Actor":"Dotnet-GitSync-Bot","Number":"7100","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7100","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7100)"},{"Id":"414893982","IsPullRequest":true,"CreatedAt":"2019-02-28T21:08:27","Actor":"nattress","Number":"7089","RawContent":null,"Title":"[SuperIlc] Pass through unmanaged assets during compilation","State":"closed","Body":"Improve quality of life by passing through to the output all inputs that aren't managed assemblies. This also includes the input assembly if we're unable to successfully compile the assembly, which is useful during CPAOT workload bring-up. If the input folder is a an published with `dotnet publish --self-contained` and contains the runtime, this results in a nice runnable output folder.","Url":"https://github.com/dotnet/corert/pull/7089","RelatedDescription":"Closed or merged PR \"[SuperIlc] Pass through unmanaged assets during compilation\" (#7089)"},{"Id":"415600490","IsPullRequest":true,"CreatedAt":"2019-02-28T17:16:33","Actor":"Dotnet-GitSync-Bot","Number":"7098","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @stephentoub","Url":"https://github.com/dotnet/corert/pull/7098","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7098)"},{"Id":"415437656","IsPullRequest":false,"CreatedAt":"2019-02-28T12:31:45","Actor":"rainbowlee","Number":"7096","RawContent":null,"Title":"Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory ","State":"closed","Body":"I compie project.\r\n\r\nerror on ubantu , bu window is normal\r\n\r\n1.0.0-alpha-27427-02\r\nEXEC : error : Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory [/home/lihy/project/Server/Server/src/GameServer_dotnet.csproj]\r\n  System.DllNotFoundException: Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.InitObjWriter(String objectFilePath, String triple)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter..ctor(String objectFilePath, NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.EmitObject(String objectFilePath, IEnumerable`1 nodes, NodeFactory factory, IObjectDumper dumper)\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n/home/lihy/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27427-02/build/Microsoft.NETCore.Native.targets(235,5): error MSB3073: The command \"\"/home/lihy/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27427-02/tools/ilc\" @\"obj/release/netcoreapp2.0/linux-x64/native/GameServer.ilc.rsp\"\" exited with code 1. [/home/lihy/project/Server/Server/src/GameServer_dotnet.csproj]\r\n","Url":"https://github.com/dotnet/corert/issues/7096","RelatedDescription":"Closed issue \"Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory \" (#7096)"},{"Id":"415304269","IsPullRequest":true,"CreatedAt":"2019-02-28T12:29:25","Actor":"Dotnet-GitSync-Bot","Number":"7094","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara @jkotas @jkotas @stephentoub @stephentoub","Url":"https://github.com/dotnet/corert/pull/7094","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7094)"},{"Id":"415474026","IsPullRequest":true,"CreatedAt":"2019-02-28T08:03:55","Actor":"nattress","Number":"7097","RawContent":null,"Title":"Treat enums as primitives in auto layout","State":"closed","Body":"CoreCLR removes the value type designation for enums when doing type layout. They are treated as a primitive of the enum's underlying type (the default being `System.Int32`). Since value types are placed last in auto layout, this moves enum fields up earlier in the layout.\r\n\r\nMatch this behavior for CoreRT's auto layout algorithm so that generated code refers to the same offets that will be used at runtime in CPAOT.","Url":"https://github.com/dotnet/corert/pull/7097","RelatedDescription":"Closed or merged PR \"Treat enums as primitives in auto layout\" (#7097)"},{"Id":"415372387","IsPullRequest":true,"CreatedAt":"2019-02-28T06:02:38","Actor":"tannergooding","Number":"7095","RawContent":null,"Title":"Updating the Roslyn toolset to 3.0.0-beta4 and setting LangVersion=preview","State":"closed","Body":"CC. @jaredpar, @agocke, @jkotas, @danmosemsft, @eerhardt, @safern\r\n\r\nThe beta4 package was published today. This is still required for CoreRT until it can update the associated BuildTools version (https://github.com/dotnet/corert/issues/7032).","Url":"https://github.com/dotnet/corert/pull/7095","RelatedDescription":"Closed or merged PR \"Updating the Roslyn toolset to 3.0.0-beta4 and setting LangVersion=preview\" (#7095)"},{"Id":"414689687","IsPullRequest":true,"CreatedAt":"2019-02-27T21:46:00","Actor":"trylek","Number":"7085","RawContent":null,"Title":"Fix spurious duplicate symbol in Microsoft.EntityFrameworkCore.Design","State":"closed","Body":"Thanks to help from Michal I have discovered that two structurally\r\ndifferent methods on instantiated types can have identical textual\r\nrepresentation as the type / method definition can contain references\r\nto different generic argument indices that just happen to resolve\r\nto the same types in the instantiated entity. Based on Michal's\r\nsuggestion I have changed context method formating to use the\r\nNameMangler formatting methods that take care of this issue.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7085","RelatedDescription":"Closed or merged PR \"Fix spurious duplicate symbol in Microsoft.EntityFrameworkCore.Design\" (#7085)"},{"Id":"414857140","IsPullRequest":true,"CreatedAt":"2019-02-27T09:26:21","Actor":"trylek","Number":"7087","RawContent":null,"Title":"Fix CPAOT build of three more ASP.NET assemblies","State":"closed","Body":"1) throw \"requires runtime JIT\" on INITCLASS / INITINSTCLASS like\r\nCrossgen does;\r\n\r\n2) throw \"requires runtime JIT\" on embedMethodHandle like Crossgen\r\ndoes;\r\n\r\n3) Apply GetMangledMethodName in MethodFixupSignature to fix\r\nspurious symbol name matches.\r\n\r\n4) In ImportedMethodNode, suppress constrained type for local methods;\r\notherwise we could end up with two different TypeAndMethod keys\r\n(because of the different constrained type) but we ended up\r\nproducing an identical LocalMethodImport in both cases.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7087","RelatedDescription":"Closed or merged PR \"Fix CPAOT build of three more ASP.NET assemblies\" (#7087)"},{"Id":"414947522","IsPullRequest":true,"CreatedAt":"2019-02-27T06:04:39","Actor":"Dotnet-GitSync-Bot","Number":"7093","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @grant-d","Url":"https://github.com/dotnet/corert/pull/7093","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7093)"},{"Id":"414927790","IsPullRequest":false,"CreatedAt":"2019-02-27T03:27:20","Actor":"rainbowlee","Number":"7092","RawContent":null,"Title":"Oracle Mysql.Data System.TypeInitializationException:","State":"open","Body":"I wrote a test Project\r\n\r\nPackage Mysql.Data\r\n\r\n### code:\r\nusing System;\r\nusing MySql;\r\n\r\nnamespace TestMysql\r\n{\r\n  class Program\r\n  {\r\n    internal static string MySqlConnectString\r\n    {\r\n      get\r\n      {\r\n        string mysqlConnString = string.Format(\"SERVER={0};UID={1};PWD={2};DATABASE={3};CHARSET=utf8;Pooling=true;Min Pool Size=10;Max Pool Size={4};\",\r\n                                    \"127.0.0.1\", \"dfds\", \"dfds\" , \"dsnode\", 10);\r\n\r\n        return mysqlConnString;\r\n      }\r\n    }\r\n\r\n    static void Main(string[] args)\r\n    {\r\n      for ( int i = 0; i < 10; i++)\r\n      {\r\n        Console.WriteLine(\"count{0}\", i);\r\n        try\r\n        {\r\n          MySql.Data.MySqlClient.MySqlConnection conn = new MySql.Data.MySqlClient.MySqlConnection(MySqlConnectString);\r\n          Console.WriteLine(\"open\");\r\n          conn.Open();\r\n          Console.WriteLine(\"close\");\r\n          conn.Close();\r\n        }\r\n\r\n        catch(Exception ex)\r\n        {\r\n          Console.WriteLine(\"MySql Connection ERROR :{0}\", ex);\r\n        }\r\n      }\r\n      Console.WriteLine(\"Hello World!\");\r\n    }\r\n  }\r\n}\r\n\r\nwhen ran , exception as follows:\r\n\r\nMySql Connection ERROR :System.TypeInitializationException: A type initializer threw an exception. To determine which type, inspect the InnerException's StackTrace property. ---> System.TypeInitializationException: A type initializer threw an exception. To determine which type, inspect the InnerException's StackTrace property. ---> System.Configuration.ConfigurationErrorsException: Configuration system failed to initialize ---> System.MissingMethodException: No parameterless constructor defined for this object.\r\n   at System.ActivatorImplementation.CreateInstance(Type, Boolean) + 0xfe\r\n   at System.Configuration.Internal.ConfigSystem.System.Configuration.Internal.IConfigSystem.Init(Type, Object[]) + 0x40\r\n   at System.Configuration.ClientConfigurationSystem..ctor() + 0x47\r\n   at System.Configuration.ConfigurationManager.EnsureConfigurationSystem() + 0x5f\r\n\r\n   --- End of inner exception stack trace ---\r\n   at System.Configuration.ConfigurationManager.EnsureConfigurationSystem() + 0xfa\r\n   at System.Configuration.ConfigurationManager.PrepareConfigSystem() + 0x13\r\n   at System.Configuration.ConfigurationManager.GetSection(String) + 0x25\r\n   at MySql.Data.MySqlClient.MySqlConfiguration..cctor() + 0x11\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0xd5\r\n\r\n   --- End of inner exception stack trace ---\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0x18d\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.CheckStaticClassConstructionReturnGCStaticBase(StaticClassConstructionContext*, Object) + 0xd\r\n   at MySql.Data.MySqlClient.Replication.ReplicationManager..cctor() + 0x6a\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0xd5\r\n\r\n   --- End of inner exception stack trace ---\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0x18d\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.CheckStaticClassConstructionReturnNonGCStaticBase(StaticClassConstructionContext*, IntPtr) + 0xd\r\n   at MySql.Data.MySqlClient.Replication.ReplicationManager.IsReplicationGroup(String) + 0x22\r\n   at MySql.Data.MySqlClient.MySqlConnection.Open() + 0x422\r\n   at TestMysql.Program.Main(String[]) + 0x71\r\n\r\nIs there any idea for this problem? \r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7092","RelatedDescription":"Open issue \"Oracle Mysql.Data System.TypeInitializationException:\" (#7092)"},{"Id":"414927624","IsPullRequest":true,"CreatedAt":"2019-02-27T03:26:26","Actor":"sergiy-k","Number":"7091","RawContent":null,"Title":"[WIP] Add scripts to set up CI with Azure Pipelines","State":"open","Body":"All scripts have been copied from the CoreCLR repo and adjusted for CoreRT.\r\n\r\nThe first goal is enable Windows_NT Debug build without running any tests.","Url":"https://github.com/dotnet/corert/pull/7091","RelatedDescription":"Open PR \"[WIP] Add scripts to set up CI with Azure Pipelines\" (#7091)"},{"Id":"414899180","IsPullRequest":false,"CreatedAt":"2019-02-27T01:21:09","Actor":"yowl","Number":"7090","RawContent":null,"Title":"wasm: Question about ExportedType.IsForwarder","State":"open","Body":"I'm trying out ilc for wasm on some larger programs, and I'm hitting \r\nhttps://github.com/dotnet/corert/blob/5056fd45b076277579c84833060447415b7b9403/src/Common/src/TypeSystem/Ecma/EcmaModule.cs#L305\r\nfor a type that has `IsForwarder == true`.  (Type is `System.Threading.PreAllocatedOverlapped` and it looks in the `implementation` for `System.Private.CoreLib`).  Am I right in thinking this is for types that are forwarded to another assemby using `System.Runtime.CompilerServices.TypeForwardedTo`?  If so I suppose what could be happening is that the module which now contains the type, is not getting this type added through the dependency analysis as the actual reference is to the type when it was in the \"older\" module.  Does that make sense?","Url":"https://github.com/dotnet/corert/issues/7090","RelatedDescription":"Open issue \"wasm: Question about ExportedType.IsForwarder\" (#7090)"},{"Id":"414888622","IsPullRequest":true,"CreatedAt":"2019-02-27T00:38:07","Actor":"trylek","Number":"7088","RawContent":null,"Title":"Produce full vtables in CPAOT","State":"open","Body":"I believe it's inappropriate to try to \"optimize\" the VTable\r\nas it's not us, it's the CoreCLR runtime that actually emits the\r\nvtable based on type metadata. In contrast to full AOT, we're not\r\nrequired to produce the complete code graph and so we currently\r\ndon't need the detailed VirtualMethodUse tracking that is required\r\nfor lazy vtable construction to work properly.\r\n\r\nThis change fixes CPAOT build of System.Private.CoreLib, hopefully\r\nthe last remaining issue in CoreCLR framework and ASP.NET assembly\r\nbuilds.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7088","RelatedDescription":"Open PR \"Produce full vtables in CPAOT\" (#7088)"},{"Id":"414795101","IsPullRequest":true,"CreatedAt":"2019-02-26T20:06:18","Actor":"yowl","Number":"7086","RawContent":null,"Title":"wasm: fix for Initobj fails to compile for structs with double fields","State":"open","Body":"There was no path for initialising double fields in structs so the following struct failed to compile the Initobj call:\r\n```\r\npublic struct StructWithDouble\r\n{\r\n    public double DoubleField;\r\n}\r\n```\r\nThis PR adds double support for Initobj opcode.","Url":"https://github.com/dotnet/corert/pull/7086","RelatedDescription":"Open PR \"wasm: fix for Initobj fails to compile for structs with double fields\" (#7086)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"416329826","IsPullRequest":true,"CreatedAt":"2019-03-03T18:14:52","Actor":"dsplaisted","Number":"3002","RawContent":null,"Title":"Fix publishing self-contained ASP.NET apps","State":"closed","Body":"- Ignore .json files in runtime packs.  Fixes self-contained ASP.NET apps failing to launch with new runtime packs. @pakrym \r\n- Remove UseRefTargetingPacks property.  Fixes #2962","Url":"https://github.com/dotnet/sdk/pull/3002","RelatedDescription":"Closed or merged PR \"Fix publishing self-contained ASP.NET apps\" (#3002)"},{"Id":"416394963","IsPullRequest":true,"CreatedAt":"2019-03-02T14:26:05","Actor":"dotnet-maestro[bot]","Number":"3003","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19151.5\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19151.5\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3003","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3003)"},{"Id":"416305439","IsPullRequest":false,"CreatedAt":"2019-03-01T22:30:54","Actor":"JoeRobich","Number":"3001","RawContent":null,"Title":"error NETSDK1085 during Roslyn builds with 3.0.100 preview 4 sdk","State":"open","Body":"When building Roslyn with 3.0.100-preview4-010381 installed, I get the following error on every solution build.\r\n\r\n```\r\n8>------ Build started: Project: VS.Tools.Roslyn.Package, Configuration: Debug Any CPU ------\r\n2>C:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-010381\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(112,5): error NETSDK1085: The 'NoBuild' property was set to true but the 'Build' target was invoked.\r\n2>Done building project \"IlAsmDeploy.csproj\" -- FAILED.\r\n```","Url":"https://github.com/dotnet/sdk/issues/3001","RelatedDescription":"Open issue \"error NETSDK1085 during Roslyn builds with 3.0.100 preview 4 sdk\" (#3001)"},{"Id":"416214091","IsPullRequest":true,"CreatedAt":"2019-03-01T17:55:17","Actor":"JoeRobich","Number":"3000","RawContent":null,"Title":"Update the json manifest for the Dotfuscator Vsix","State":"closed","Body":"@livarcocc This is to update the dotfuscator manifest for a new build (in dotfuscator branch, which unfortunately still exists in this repo...)","Url":"https://github.com/dotnet/sdk/pull/3000","RelatedDescription":"Closed or merged PR \"Update the json manifest for the Dotfuscator Vsix\" (#3000)"},{"Id":"416092757","IsPullRequest":true,"CreatedAt":"2019-03-01T14:21:16","Actor":"dotnet-maestro[bot]","Number":"2999","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19128.3\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19128.3\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2999","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2999)"},{"Id":"415919082","IsPullRequest":false,"CreatedAt":"2019-03-01T03:00:55","Actor":"sayedihashimi","Number":"2998","RawContent":null,"Title":"Unable to run global tools in PowerShell running on macOS","State":"open","Body":"I tried to execute a global tool from PowerShell running on macOS and the tool was not located. When I run `dotnet tool list --global` it does show up. When I exit out of PowerShell, and get back into a normal bash prompt, the global tool works fine.\r\n\r\nmacOS version = 10.14.2\r\n\r\n![global-tool](https://user-images.githubusercontent.com/1283154/53613386-f3f2e280-3ba3-11e9-90de-4669536bc35e.jpg)\r\n\r\nHere are the runtime/sdks that I have installed.\r\n![image](https://user-images.githubusercontent.com/1283154/53613512-2e5c7f80-3ba4-11e9-9073-9f4d0a32e6c1.png)\r\n","Url":"https://github.com/dotnet/sdk/issues/2998","RelatedDescription":"Open issue \"Unable to run global tools in PowerShell running on macOS\" (#2998)"},{"Id":"415882721","IsPullRequest":true,"CreatedAt":"2019-03-01T00:15:02","Actor":"fadimounir","Number":"2997","RawContent":null,"Title":"Crossgen Task","State":"open","Body":"Intitial implementation of the crossgen task, and plumbing in the SDK targets to invoke the task. The crossgen task invokes crossgen from the runtime pack.\r\n\r\n- Task triggered when <ReadyToRun> is set to true in the main app's project file (opt-in feature)\r\n- Added new condition to download runtime packs: when the ReadyToRun property is set.\r\n- Adding R2R exclusion list capability\r\n- Symbol emission is optional (opt-in, when ReadyToRunEmitSymbols is set to true)","Url":"https://github.com/dotnet/sdk/pull/2997","RelatedDescription":"Open PR \"Crossgen Task\" (#2997)"},{"Id":"415838644","IsPullRequest":false,"CreatedAt":"2019-02-28T21:47:43","Actor":"nguerrera","Number":"2996","RawContent":null,"Title":"ReferenceManagerAssemblies is hidden from .NETCoreApp but not .NETStandard","State":"open","Body":"See https://github.com/dotnet/sdk/pull/2994#discussion_r261372831\r\n\r\nIs this by design? ","Url":"https://github.com/dotnet/sdk/issues/2996","RelatedDescription":"Open issue \"ReferenceManagerAssemblies is hidden from .NETCoreApp but not .NETStandard\" (#2996)"},{"Id":"415612168","IsPullRequest":true,"CreatedAt":"2019-02-28T14:26:25","Actor":"dotnet-maestro[bot]","Number":"2995","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19127.8\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19127.8\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2995","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2995)"},{"Id":"415365956","IsPullRequest":true,"CreatedAt":"2019-02-27T22:56:37","Actor":"etbyrd","Number":"2994","RawContent":null,"Title":"Remove opt-out of COM Reference Manager Tab","State":"open","Body":"This is a fix for: https://github.com/dotnet/project-system/issues/4355\r\nI tested this locally and ensured that projects built with COM references but I am not sure if anything is blocking this on the SDK side. ","Url":"https://github.com/dotnet/sdk/pull/2994","RelatedDescription":"Open PR \"Remove opt-out of COM Reference Manager Tab\" (#2994)"},{"Id":"415112893","IsPullRequest":true,"CreatedAt":"2019-02-27T14:21:22","Actor":"dotnet-maestro[bot]","Number":"2993","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19126.6\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19126.6\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2993","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2993)"},{"Id":"415027102","IsPullRequest":false,"CreatedAt":"2019-02-27T09:35:47","Actor":"Lily721","Number":"2992","RawContent":null,"Title":"issues occurred when .Net core console project reference .net framework class library","State":"closed","Body":"I got a .NET Core console project which use .NET Core 3.0 preview, and other class library with .NET Framework 4 Client Profile, and this framework class library got a reference from System.Security which using PermissionSet like following:\r\n\r\n`using System.Security;`\r\n`......................................`\r\n`new PermissionSet(PermissionState.Unrestricted).Demand();`\r\n\r\nWhen I add this class library to NetCore console project, everything is fine when build, but got an issue during debug:\r\n`System.TypeLoadException: 'Could not load type 'System.Security.PermissionSet' from assembly 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.'`\r\n\r\nThen I checked the mscorlib.dll in local folder:(C:\\Users\\*****\\.nuget\\packages\\microsoft.netcore.app\\3.0.0-preview-27117-01\\ref\\netcoreapp3.0)\r\nand reflector it but without any system.Security namespace in it.\r\n\r\nSwitch to net core 2.0, got same issue.\r\n\r\nAnyone can help? thanks a lot.","Url":"https://github.com/dotnet/sdk/issues/2992","RelatedDescription":"Closed issue \"issues occurred when .Net core console project reference .net framework class library\" (#2992)"},{"Id":"414342537","IsPullRequest":true,"CreatedAt":"2019-02-27T01:24:23","Actor":"nguerrera","Number":"2990","RawContent":null,"Title":"Add hook to redirect common props, only ref m.nc.platforms when necessary","State":"closed","Body":"1. Introduce $(AlternateCommonProps) to redirect the Sdk common props import to a user-defined location. This is morally equivalent to $(LanguageTargets) being customizable on the targets side. Having full control over both of these imports makes it much easier to integrate the SDK into existing heavily-customized builds. The current use case is to get some internal builds over to netcoreapp3.0\r\n\r\n2. Getting an intermittent error about 'vs' not being found from dogfood script. Removing unnecessary setting of msbuildEngine seems to have fixed it.\r\n\r\n3. With https://github.com/dotnet/core-sdk/pull/698, microsoft.netcore.platforms becomes the only package that cannot be resolved from packs. Make it so that we only pull it in when there are other package references. Otherwise, nuget doesn't need to see it as a package reference. This is just moving the temporary solution around, but means that we can get a working offline experience before we figure out how to adress the runtime graph going into to nuget (or sdk taking over for nuget).","Url":"https://github.com/dotnet/sdk/pull/2990","RelatedDescription":"Closed or merged PR \"Add hook to redirect common props, only ref m.nc.platforms when necessary\" (#2990)"},{"Id":"414599677","IsPullRequest":true,"CreatedAt":"2019-02-26T14:21:42","Actor":"dotnet-maestro[bot]","Number":"2991","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19125.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2991","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2991)"},{"Id":"414093522","IsPullRequest":true,"CreatedAt":"2019-02-25T14:21:40","Actor":"dotnet-maestro[bot]","Number":"2988","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19124.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2988","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2988)"},{"Id":"414119637","IsPullRequest":false,"CreatedAt":"2019-02-25T14:02:53","Actor":"loop-evgeny","Number":"2989","RawContent":null,"Title":"Error running self-contained Linux EXE: \"This executable is not bound to a managed DLL to execute. The binding value is: 'c3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2'\"","State":"open","Body":"I created a new console application in VS 2017 using .NET Core 2.1. Published it as a self-contained linux-x64 app without any changes and tried to run it on an Ubuntu 18.04 VM. Got this error:\r\n\r\n```\r\n ./LinuxTest \r\nThis executable is not bound to a managed DLL to execute. The binding value is: 'c3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2'\r\nA fatal error was encountered. This executable was not bound to load a managed DLL.\r\n```\r\n\r\nc3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2 is apparently the SHA256 hash of \"foobar\", so whatever the real problem is, this is a very weird error message, too!\r\n\r\nLinuxTest.csproj:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nProgram.cs:\r\n```\r\nusing System;\r\n\r\nnamespace LinuxTest\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nResulting self-contained binary: [LinuxTest.zip](https://github.com/dotnet/sdk/files/2900841/LinuxTest.zip)\r\n\r\nIf I install dotnet-runtime-2.1 on the Linux VM and run `dotnet LinuxTest.dll` it works.","Url":"https://github.com/dotnet/sdk/issues/2989","RelatedDescription":"Open issue \"Error running self-contained Linux EXE: \"This executable is not bound to a managed DLL to execute. The binding value is: 'c3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2'\"\" (#2989)"},{"Id":"413818973","IsPullRequest":true,"CreatedAt":"2019-02-25T13:00:49","Actor":"dotnet-maestro[bot]","Number":"2985","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19123.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2985","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2985)"},{"Id":"413197636","IsPullRequest":false,"CreatedAt":"2019-02-25T02:30:23","Actor":"natemcmaster","Number":"2976","RawContent":null,"Title":"All packages targeting netcoreapp3.0 have a 'Microsoft.NETCore.Platforms' dependency in nuspec","State":"closed","Body":"https://github.com/dotnet/sdk/blob/0690b28e426f5b7e6dfe7ab4200b83ce3c96bc95/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.DefaultItems.props#L81-L87\r\n\r\nThis should probably have been 'PrivateAssets=All'. \r\n\r\nAll aspnet 3.0 Preview 3 packages which target netcoreapp3.0 have this dependency in their nuspec. cc @Eilon @livarcocc \r\n\r\n![image](https://user-images.githubusercontent.com/2696087/53213059-4e1c0280-35fc-11e9-9591-32f81f33502c.png)\r\n","Url":"https://github.com/dotnet/sdk/issues/2976","RelatedDescription":"Closed issue \"All packages targeting netcoreapp3.0 have a 'Microsoft.NETCore.Platforms' dependency in nuspec\" (#2976)"},{"Id":"413886149","IsPullRequest":true,"CreatedAt":"2019-02-25T02:30:21","Actor":"dotnet-bot","Number":"2987","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2987","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#2987)"},{"Id":"413843026","IsPullRequest":true,"CreatedAt":"2019-02-24T21:53:25","Actor":"dsplaisted","Number":"2986","RawContent":null,"Title":"Mark implicit platforms package reference as PrivateAssets","State":"closed","Body":"Fixes #2976","Url":"https://github.com/dotnet/sdk/pull/2986","RelatedDescription":"Closed or merged PR \"Mark implicit platforms package reference as PrivateAssets\" (#2986)"},{"Id":"413641877","IsPullRequest":false,"CreatedAt":"2019-02-24T18:29:59","Actor":"SergeyKhutornoy","Number":"2982","RawContent":null,"Title":"donet publish always publishes web.Release.config","State":"closed","Body":"When you run dotnet publish command for a Microsoft.NET.Sdk.Web project targeting **net462**, the tool always publishes web.*.config files (web.debug.config and web.release.config in addition to the transformed web.config).\r\n\r\nProject file (.csproj):\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <ProductVersion>8.0.30703</ProductVersion>\r\n    <ProjectGuid>{842f247f-8658-4b47-b9cf-5582f7c1e26e}</ProjectGuid>\r\n    <RootNamespace>Service</RootNamespace>\r\n    <AssemblyName>Service</AssemblyName>\r\n    <TargetFramework>net462</TargetFramework>\r\n    <AssemblyTitle>Service</AssemblyTitle>\r\n    <OutputPath>bin\\$(Configuration)\\</OutputPath>\r\n    <ProjectTypeGuids>{349c5851-65df-11da-9384-00065b846f21};{fae04ec0-301f-11d3-bf4b-00c04f79efbc}</ProjectTypeGuids>\r\n    <OutputType>Library</OutputType>\r\n    <AppDesignerFolder>Properties</AppDesignerFolder>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \">\r\n    <DebugSymbols>true</DebugSymbols>\r\n    <DebugType>full</DebugType>\r\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \">\r\n    <DebugType>pdbonly</DebugType>\r\n    <Optimize>true</Optimize>\r\n    <DefineConstants>TRACE</DefineConstants>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Reference Include=\"System.configuration\" />\r\n    <Reference Include=\"System.Runtime.Serialization\" />\r\n    <Reference Include=\"System.ServiceModel\" />\r\n    <Reference Include=\"System\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n## Steps to reproduce\r\n1. Create web.config, web.Debug.config, web.Release.config files in the project root folder.\r\n2. Run `dotnet publish /p:Configuration=Release`\r\n\r\nor\r\n\r\n1. Create web.config, web.Debug.config, web.Release.config files in the project root folder.\r\n2. Run `msbuild Service.csproj /p:DeployOnBuild=true /p:Configuration=Release /p:PublishProfile=FolderProfile`\r\n\r\n## Expected behavior\r\nThere is only transformed web.config file in the publish folder.\r\n\r\n## Actual behavior\r\nweb.config, web.release.config, web.debug.config files are in the publish folder.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.103\r\n Commit:    8edbc2570a\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.103\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.1\r\n  Commit:  878dd11e62\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview2-003131 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]","Url":"https://github.com/dotnet/sdk/issues/2982","RelatedDescription":"Closed issue \"donet publish always publishes web.Release.config\" (#2982)"},{"Id":"413639072","IsPullRequest":false,"CreatedAt":"2019-02-24T18:29:13","Actor":"YankdaCode","Number":"2981","RawContent":null,"Title":"Error on implementing custom FileProvider - Cannot find compilation library location for package 'projectCLB'","State":"closed","Body":"So, I am designing a very customized solution from scratch wherein I have asp.net mvc core app as the main web app. Then I create separate class libraries and update the SDK to Microsoft.NET.Sdk.Razor and use:\r\n    `<PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.2.0\" />`\r\nThis allows me to create MVC type class library, lets say \"projectCLB\" and then at startup I scan the folder that is located outside of the project main directory and load the assemblies for my project:\r\nprojectCLB.dll\r\nprojectCLB.Views.dll\r\n\r\nThis was working fine by the following code:\r\n`\r\n```\r\nAssembly assembly;\r\n                try\r\n                {\r\n                    assembly = AssemblyLoadContext.Default.LoadFromAssemblyPath(file.FullName);\r\n                }\r\n                catch (FileLoadException ex)\r\n                {\r\n                    // If assembly is already loaded, we'll just catch it and continue to the next one, plugins can have same dependencies:\r\n                    if (ex.Message == \"Assembly with same name is already loaded\")\r\n                    {\r\n                        continue;\r\n                    }\r\n                    throw;\r\n                }\r\n\r\n// Check if the assembly has already been loaded:\r\n                if (!(mvcBuilder.PartManager.ApplicationParts.Any(x => x.Name == assembly.GetName().Name)))\r\n                {\r\n                    //Load the pre-compiled Views:\r\n                    if (assembly.ManifestModule.Name.Contains(\".Views.dll\"))\r\n                    {\r\n                        mvcBuilder.ConfigureApplicationPartManager(mgr =>\r\n                        {\r\n                            foreach (var b in CompiledRazorAssemblyApplicationPartFactory.GetDefaultApplicationParts(assembly))\r\n                            {\r\n                                mvcBuilder.ConfigureApplicationPartManager(apm => apm.ApplicationParts.Add(b));\r\n                            }\r\n\r\n                        });\r\n\r\n                    }\r\n                    // Load the plug in assemblies:\r\n                    else\r\n                    {\r\n                        \r\n                        mvcBuilder.AddApplicationPart(assembly);\r\n                     \r\n                       \r\n\r\n                    }\r\n\r\n                }\r\n```\r\n`\r\n\r\n\r\nThis is how my class library project file looks:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Razor\">\r\n\r\n\r\n  <PropertyGroup Label=\"Globals\">\r\n    <SccProjectName>SAK</SccProjectName>\r\n    <SccProvider>SAK</SccProvider>\r\n    <SccAuxPath>SAK</SccAuxPath>\r\n    <SccLocalPath>SAK</SccLocalPath>\r\n  </PropertyGroup>\r\n\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n    \r\n  </PropertyGroup>\r\n\r\n\r\n  <ItemGroup>\r\n    \r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"2.2.1\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Design\" Version=\"2.2.1\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Relational\" Version=\"2.2.1\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer\" Version=\"2.2.1\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"2.2.1\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <Folder Include=\"Content\\\" />\r\n    <Folder Include=\"Infrastructure\\Data\\\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n\r\n    <ProjectReference Include=\"..\\..\\<baseapp project>.Common\\baseapp project.Common.csproj\" />\r\n\r\n    <ProjectReference Include=\"..\\..\\baseapp project.Data\\baseapp project.Data.csproj\" />\r\n    <ProjectReference Include=\"..\\..\\baseapp project.Repositories\\baseapp project.Repositories.csproj\" />\r\n  </ItemGroup>\r\n  <Target Name=\"UpdateTargetPath\" BeforeTargets=\"AssignRazorGenerateTargetPaths\">\r\n    <ItemGroup>\r\n      <RazorGenerate Include=\"@(RazorGenerate)\" Link=\"$(TargetName)\\plugin\\%(RazorGenerate.RelativeDir)%(RazorGenerate.FileName)%(RazorGenerate.Extension)\" />\r\n\r\n    </ItemGroup>\r\n  </Target>\r\n \r\n\r\n</Project>\r\n\r\n```\r\n\r\nIt was working all fine until I implemented a File Provider so that we can use cshtml files at development time instead of precompiled views since I was having to copy the dlls/ rebuild after a cshtml change. \r\nReason being that PhysicalFileProvider doesn't look outside of the webroot. Now I get this error and there are other posts that I saw but none of the workarounds actually work for me.\r\n\r\n\r\n`System.InvalidOperationException: Cannot find compilation library location for package 'projectCLB'\r\n   at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths(ICompilationAssemblyResolver resolver, List`1 assemblies)\r\n   at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths()\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart.<>c.<GetReferencePaths>b__8_0(CompilationLibrary library)\r\n   at System.Linq.Enumerable.SelectManySingleSelectorIterator`2.MoveNext()\r\n   at Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeatureProvider.PopulateFeature(IEnumerable`1 parts, MetadataReferenceFeature feature)\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.PopulateFeature[TFeature](TFeature feature)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.GetCompilationReferences()\r\n   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.get_CompilationReferences()\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.LazyMetadataReferenceFeature.get_References()\r\n   at Microsoft.CodeAnalysis.Razor.CompilationTagHelperFeature.GetDescriptors()\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorTagHelperBinderPhase.ExecuteCore(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorEnginePhaseBase.Execute(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorEngine.Process(RazorCodeDocument document)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorProjectEngine.ProcessCore(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorProjectEngine.Process(RazorProjectItem projectItem)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(String relativePath)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.OnCacheMiss(String normalizedPath)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorPageFactoryProvider.CreateFactory(String relativePath)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.CreateCacheResult(HashSet`1 expirationTokens, String relativePath, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.OnCacheMiss(ViewLocationExpanderContext expanderContext, ViewLocationCacheKey cacheKey)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.LocatePageFromViewLocations(ActionContext actionContext, String pageName, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindView(ActionContext context, String viewName, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.FindView(ActionContext context, String viewName, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.FindView(ActionContext actionContext, ViewResult viewResult)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)\r\n   at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)`","Url":"https://github.com/dotnet/sdk/issues/2981","RelatedDescription":"Closed issue \"Error on implementing custom FileProvider - Cannot find compilation library location for package 'projectCLB'\" (#2981)"},{"Id":"413780813","IsPullRequest":true,"CreatedAt":"2019-02-24T04:32:29","Actor":"dsplaisted","Number":"2984","RawContent":null,"Title":"Add CI legs to run tests as tools","State":"open","Body":"Eventually I'd like to use the tests from this repo in other repos such as dotnet/core-sdk.  This PR adds CI legs which runs the tests as tools, in order to make sure they run correctly as tools.","Url":"https://github.com/dotnet/sdk/pull/2984","RelatedDescription":"Open PR \"Add CI legs to run tests as tools\" (#2984)"},{"Id":"413693389","IsPullRequest":true,"CreatedAt":"2019-02-23T14:21:28","Actor":"dotnet-maestro[bot]","Number":"2983","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19122.3\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2983","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2983)"},{"Id":"413638871","IsPullRequest":true,"CreatedAt":"2019-02-23T01:33:35","Actor":"natemcmaster","Number":"2980","RawContent":null,"Title":"Change publish feed to workaround 'Waiting to obtain an exclusive lock on the feed.'","State":"open","Body":"We're getting consistent build timeouts. Changing to a unique feed instead. \n\nNote!!! Each upstream repo will need to add this to restore sources.","Url":"https://github.com/dotnet/sdk/pull/2980","RelatedDescription":"Open PR \"Change publish feed to workaround 'Waiting to obtain an exclusive lock on the feed.'\" (#2980)"},{"Id":"413617702","IsPullRequest":true,"CreatedAt":"2019-02-22T23:24:14","Actor":"wli3","Number":"2979","RawContent":null,"Title":"Fix 1.0 project tools missing dll in runtime","State":"open","Body":"By Disabling targeting pack reference in generate deps.json\r\n\r\nIn short, since generating deps.json in 2.x.xxx SDK does not have Microsoft.NETCore.App reference. We need to do the same for 2.x.xxx.\r\n\r\nDetail:\r\n\r\nProject Tools deps.json generator is not ideal. When restore, since we don’t know what is the tool’s TFM before restoring it, we will always restore with SDK’s TFM, which is netcoreapp3.0.\r\n\r\nIn 2.x.xxx time due to special restore logic, there is no reference to Microsoft.NETCore.App in asset.json file. So when generate deps.son, assets from the packages will be in deps.json instead of being removed by conflict resolution. This is important since when invoke the command, 1.0 runtime will be used (due to the tool is targeting 1.0), and 1.0 runtime will not have all the dlls restored in netcoreapp2.0 TFM available to load these dll need dep.json.\r\n\r\nAnd now in 3.0, ImplicitFrameworkReferences need to be disabled to match existing “no reference to Microsoft.NETCore.App” behavior.","Url":"https://github.com/dotnet/sdk/pull/2979","RelatedDescription":"Open PR \"Fix 1.0 project tools missing dll in runtime\" (#2979)"},{"Id":"413284966","IsPullRequest":false,"CreatedAt":"2019-02-22T21:29:36","Actor":"jimmylewis","Number":"2977","RawContent":null,"Title":"Installing 3.0 Preview 3 SDK broke build for 3.0 Preview 2 Razor Components app","State":"closed","Body":"I created an app with the Preview 2 SDK (released bits).  Today I installed the latest available Preview 3 bits (https://dotnetcli.blob.core.windows.net/dotnet/Sdk/release/3.0.1xx/dotnet-sdk-latest-win-x64.exe) and now I get build errors for the Razor Components cshtml files.  I'm not sure if this is expected, since there have been a lot of changes in this area between Preview 2 and Preview 3.\r\n\r\nInstallation reported these bits, for context:\r\n>The following were installed at: 'C:\\Program Files\\dotnet'\r\n>    • .NET Core SDK 3.0.100-preview3-010343\r\n>    • .NET Core Runtime 3.0.0-preview3-27421-7\r\n>    • ASP.NET Core Runtime 3.0.0-preview3-19121-17\r\n>    • .NET Core Windows Desktop Runtime 3.0.0-preview3-27420-40\r\n\r\nThe build errors I get are like this one (note, it's in a generated file for the .cshtml):\r\n> obj\\Debug\\netstandard2.0\\Razor\\Pages\\Counter.cshtml.g.cs(35,48): error CS0234: The type or namespace name 'EventCallback' does not exist in the namespace 'Microsoft.AspNetCore.Components' (are you missing an assembly reference?) [D:\\src\\AppBuilding\\src\\OrderSite.App\\OrderSite.App.csproj]\r\n\r\nThe generated line of code is:\r\n```\r\nbuilder.AddAttribute(7, \"onclick\", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, IncrementCount));\r\n```\r\n\r\nWith the Preview 2 SDK, the generated line of code was:\r\n\r\n```\r\nbuilder.AddAttribute(7, \"onclick\", Microsoft.AspNetCore.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Components.UIMouseEventArgs>(IncrementCount));\r\n```\r\n\r\nNote: if I create a new Razor Components project with the Preview 3 SDK installed, it builds fine.  The project created is very different from the Preview 2 template however.","Url":"https://github.com/dotnet/sdk/issues/2977","RelatedDescription":"Closed issue \"Installing 3.0 Preview 3 SDK broke build for 3.0 Preview 2 Razor Components app\" (#2977)"},{"Id":"413394061","IsPullRequest":true,"CreatedAt":"2019-02-22T14:46:46","Actor":"dotnet-maestro[bot]","Number":"2978","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19121.5\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2978","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2978)"},{"Id":"413180902","IsPullRequest":true,"CreatedAt":"2019-02-22T02:00:20","Actor":"dotnet-bot","Number":"2975","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2975","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#2975)"},{"Id":"412913042","IsPullRequest":true,"CreatedAt":"2019-02-21T14:16:41","Actor":"dotnet-maestro[bot]","Number":"2974","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19121.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2974","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2974)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"1015450578","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"},{"Id":"359151445","IsPullRequest":false,"CreatedAt":"2018-09-11T17:44:50","Actor":"leecow","Number":"84","RawContent":null,"Title":"September 2018 .NET Updates","State":"open","Body":"# September 2018 .NET Updates\r\n\r\nThe following .NET updates were released in September 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework September 2018 Security and Quality Rollup - September 11, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core September 2018 Update - September 11, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.4/2.1.4.md)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/84","RelatedDescription":"Open issue \"September 2018 .NET Updates\" (#84)"},{"Id":"359136325","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:55","Actor":"blowdart","Number":"83","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](https://github.com/aspnet/Announcements/issues/316).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32228\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83)"},{"Id":"357399856","IsPullRequest":false,"CreatedAt":"2018-09-05T20:56:25","Actor":"richlander","Number":"82","RawContent":null,"Title":".NET Core Runtime ARM64 Status","State":"open","Body":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\n[.NET Core 3.0 Preview 1](https://github.com/dotnet/core/issues/2099) includes support for Linux ARM64. Please try this build and provide support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/coreclr #19843](https://github.com/dotnet/coreclr/issues/19843)\r\n\r\n## Current Status\r\n\r\nARM64 builds are functional, for console and ASP.NET Core apps.\r\n\r\n## Details\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\nSee [Installing .NET Core 3.0 on Linux ARM64](https://gist.github.com/richlander/467813274cea8abc624553ee72b28213) to install .NET Core on your ARM64 machine. Builds are available from the [daily builds page](https://github.com/dotnet/core/blob/master/daily-builds.md).\r\n\r\n## Bug Queries\r\n\r\nthe following bugs queries are available for ARM64:\r\n\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds are tested on the following operating systems:\r\n\r\n* Ubuntu 16.04 and 18.04\r\n* Debian 9\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)","Url":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Open issue \".NET Core Runtime ARM64 Status\" (#82)"},{"Id":"349693735","IsPullRequest":false,"CreatedAt":"2018-08-22T18:23:01","Actor":"richlander","Number":"80","RawContent":null,"Title":"Improving Performance of ARM32 Docker Images with .NET Core Package Cache","State":"closed","Body":"# Improving Performance of ARM32 Docker Images with .NET Core Package Cache\r\n\r\n.NET Core SDK distributions include a compressed copy of NuGet packages for .NET Core, ASP.NET Core and EF Core. These packages are decompressed upon installation of the .NET Core SDK. The packages are not currently included in ARM32 distributions due to the time and space cost to decompress the packages. Instead, they will be added to [.NET Core ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/), where these costs can be paid as part of image creation.\r\n\r\nThese NuGet packages include content for two purposes:\r\n\r\n- Reference assemblies for .NET Core, for code compilation.\r\n- Pre-compiled assemblies (compiled with [crossgen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md)) for .NET Core, for use in self-contained applications.\r\n\r\nIn both cases, the presence of these packages avoid the need to access remote NuGet feeds for .NET Core assemblies as part of package restore.\r\n\r\nThis change only affects [.NET Core 2.1 SDK ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/). This change will be made in August 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #653](https://github.com/dotnet/dotnet-docker/issues/653)\r\n\r\n## .NET Core SDK NugetFallbackFolder\r\n\r\nThe .NET Core SDK includes a compressed copy of all NuGet package, in LZMA format. It exists at the following version-specific location:\r\n\r\n```\r\nroot@3778032bc43d:/# ls -l /usr/share/dotnet/sdk/2.1.302/*.lzma\r\n-rw-r--r-- 1 1004 sudo 35995936 Jul  2 22:51 /usr/share/dotnet/sdk/2.1.302/nuGetPackagesArchive.lzma\r\n```\r\n\r\nThis file is decompressed to the following location: `/usr/share/dotnet/sdk/NuGetFallbackFolder/`\r\n\r\nA package restore for a .NET Core assembly will restore the assembly from the NuGetFallbackFolder location and copy it to the user NuGet cache. At that point, regular NuGet behavior is used.\r\n\r\n## Impact of this change\r\n\r\nThere should be no functional difference in behavior after this change. .NET SDK commands should complete faster and require fewer package restore network requests.\r\n\r\nThe following examples demonstrates the benefit of this change. The improvement can be observed with package restore. Build times (assuming no restore) are not affected.\r\n\r\n### .NET Core 2.1 SDK image after this change\r\n\r\n> The change has already been made in the `microsoft/dotnet-nightly` repo, as you can see in the example below. In August, this same change will be made available in the `microsoft/dotnet` repo.\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet-nightly:2.1-sdk\r\nroot@416731f24915:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 6.68 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m32.496s\r\nuser    0m35.820s\r\nsys     0m4.280s\r\nroot@416731f24915:/# cd mvcapp/\r\nroot@416731f24915:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.8.138-preview+ge0cd4f1c1f for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 524.78 ms for /mvcapp/mvcapp.csproj.\r\n/usr/share/dotnet/sdk/2.1.401-preview-009081/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(143,5): message NETSDK1057: You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452 [/mvcapp/mvcapp.csproj]\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:09.15\r\n\r\nreal    2m13.377s\r\nuser    1m25.260s\r\nsys     0m9.420s\r\nroot@416731f24915:/mvcapp#\r\n```\r\n\r\n### .NET Core 2.1 SDK image before this change\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet:2.1-sdk\r\nroot@9d1d5e45df6a:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Private.DataContractSerialization 4.3.0.\r\n  Installing System.Security.Principal 4.3.0.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.App 2.1.1.\r\n  Installing runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.AspNetCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Antiforgery 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Session 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.KeyPerFile 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Embedded 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Physical 2.1.1.\r\n  Installing Microsoft.Extensions.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Cookies 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Core 2.1.1.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.Authentication.Google 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Facebook 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting.Abstractions 2.1.1.\r\n  Installing runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.HttpsPolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.MicrosoftAccount 2.1.1.\r\n  Installing Microsoft.Extensions.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.MiddlewareAnalysis 2.1.1.\r\n  Installing Microsoft.Extensions.FileSystemGlobbing 2.1.1.\r\n  Installing Microsoft.Extensions.DiagnosticAdapter 2.1.0.\r\n  Installing Microsoft.Extensions.Identity.Core 2.1.1.\r\n  Installing Microsoft.Extensions.Identity.Stores 2.1.1.\r\n  Installing Microsoft.Extensions.Options.ConfigurationExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Localization.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Abstractions 2.1.1.\r\n  Installing runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Options 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Composite 2.1.1.\r\n  Installing Microsoft.Extensions.Logging 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.TraceSource 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.UserSecrets 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Debug 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Console 2.1.1.\r\n  Installing Microsoft.Extensions.DependencyInjection 2.1.1.\r\n  Installing Microsoft.Extensions.ObjectPool 2.1.1.\r\n  Installing runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Binder 2.1.1.\r\n  Installing runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.FileExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Memory 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.CommandLine 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Abstractions 2.1.1.\r\n  Installing Microsoft.Net.Http.Headers 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.InMemory 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Ini 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.StaticFiles 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Relational 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Https 2.1.1.\r\n  Installing Microsoft.Extensions.Primitives 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel 2.1.1.\r\n  Installing Microsoft.Extensions.WebEncoders 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebUtilities 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR 1.0.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Tools 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Rewrite 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCompression 2.1.1.\r\n  Installing System.Globalization.Extensions 4.3.0.\r\n  Installing Microsoft.AspNetCore.Razor.Language 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.TagHelpers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Runtime 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.RazorPages 2.1.1.\r\n  Installing Microsoft.AspNetCore.Owin 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.ViewCompilation 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Json 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebSockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Cors 2.1.1.\r\n  Installing System.Diagnostics.DiagnosticSource 4.3.0.\r\n  Installing Microsoft.AspNetCore.Mvc.DataAnnotations 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ApiExplorer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.EventSource 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OAuth 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Json 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Protocols.Json 1.0.1.\r\n  Installing Microsoft.AspNetCore.NodeServices 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.JsonPatch 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization.Routing 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.IISIntegration 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.UI 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HttpOverrides 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Features 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cors 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.Internal 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.KeyDerivation 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HostFiltering 2.1.1.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing Microsoft.AspNetCore.CookiePolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1.\r\n  Installing Microsoft.AspNetCore.Html.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Twitter 2.1.1.\r\n  Installing Microsoft.AspNetCore.Connections.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization.Policy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.HttpSys 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.SqlServer 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.SqlServer 2.1.1.\r\n  Installing Microsoft.AspNet.WebApi.Client 5.2.6.\r\n  Installing Microsoft.AspNetCore.SignalR.Core 1.0.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ViewFeatures 2.1.1.\r\n  Installing Microsoft.CodeAnalysis.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.JwtBearer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OpenIdConnect 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.WsFederation 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore 2.1.1.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Core 2.1.1.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.5.0.\r\n  Installing System.ComponentModel.Annotations 4.5.0.\r\n  Installing System.Buffers 4.5.0.\r\n  Installing System.Memory 4.5.1.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.1.\r\n  Installing System.Text.Encodings.Web 4.5.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Net.WebSockets.WebSocketProtocol 4.5.1.\r\n  Installing Newtonsoft.Json 11.0.2.\r\n  Installing System.IO.Pipelines 4.5.0.\r\n  Installing System.Numerics.Vectors 4.5.0.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Threading.Tasks.Extensions 4.5.1.\r\n  Installing System.Security.Cryptography.Cng 4.5.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Xml 4.5.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing System.Reflection.Metadata 1.6.0.\r\n  Installing System.Data.SqlClient 4.5.1.\r\n  Installing Newtonsoft.Json.Bson 1.0.1.\r\n  Installing Newtonsoft.Json 10.0.1.\r\n  Installing System.Threading.Channels 4.5.0.\r\n  Installing System.Reflection.Emit 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.OpenIdConnect 5.2.0.\r\n  Installing System.IdentityModel.Tokens.Jwt 5.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.WsFederation 5.2.0.\r\n  Installing System.Collections.Immutable 1.5.0.\r\n  Installing Remotion.Linq 2.2.0.\r\n  Installing System.Interactive.Async 3.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing System.Security.Cryptography.Pkcs 4.5.0.\r\n  Installing System.Security.Permissions 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing NETStandard.Library 1.6.1.\r\n  Installing System.Text.Encoding.CodePages 4.5.0.\r\n  Installing System.Linq 4.3.0.\r\n  Installing runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing System.Diagnostics.Debug 4.3.0.\r\n  Installing System.Globalization 4.3.0.\r\n  Installing System.IO 4.3.0.\r\n  Installing System.Collections 4.3.0.\r\n  Installing System.Runtime.Serialization.Primitives 4.3.0.\r\n  Installing System.Runtime.Serialization.Formatters 4.3.0.\r\n  Installing System.Xml.XmlDocument 4.3.0.\r\n  Installing System.Threading 4.3.0.\r\n  Installing System.Resources.ResourceManager 4.3.0.\r\n  Installing System.Text.Encoding.Extensions 4.3.0.\r\n  Installing System.Xml.XDocument 4.3.0.\r\n  Installing System.Threading.Tasks 4.3.0.\r\n  Installing System.Linq.Expressions 4.3.0.\r\n  Installing System.Runtime.Numerics 4.3.0.\r\n  Installing System.Text.Encoding 4.3.0.\r\n  Installing System.Reflection.Extensions 4.3.0.\r\n  Installing System.Text.RegularExpressions 4.3.0.\r\n  Installing System.Runtime.Extensions 4.3.0.\r\n  Installing System.Reflection 4.3.0.\r\n  Installing System.ObjectModel 4.3.0.\r\n  Installing System.Dynamic.Runtime 4.3.0.\r\n  Installing System.Xml.ReaderWriter 4.3.0.\r\n  Installing Microsoft.CSharp 4.3.0.\r\n  Installing System.ComponentModel.TypeConverter 4.3.0.\r\n  Installing System.Runtime 4.3.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.3.0.\r\n  Installing System.Reflection.Primitives 4.3.0.\r\n  Installing System.AppContext 4.3.0.\r\n  Installing System.Console 4.3.0.\r\n  Installing System.Collections.Concurrent 4.3.0.\r\n  Installing System.Diagnostics.Tools 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.3.0.\r\n  Installing System.IO.FileSystem 4.3.0.\r\n  Installing System.IO.FileSystem.Primitives 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.3.0.\r\n  Installing System.Collections.Immutable 1.3.1.\r\n  Installing System.Runtime.InteropServices 4.3.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Diagnostics.StackTrace 4.3.0.\r\n  Installing System.Reflection.Metadata 1.4.2.\r\n  Installing System.Threading.Thread 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.Analyzers 1.1.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.3.0.\r\n  Installing System.ValueTuple 4.3.0.\r\n  Installing System.Diagnostics.FileVersionInfo 4.3.0.\r\n  Installing System.Threading.Tasks.Parallel 4.3.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.3.0.\r\n  Installing System.Xml.XPath.XDocument 4.3.0.\r\n  Installing System.Text.Encoding.CodePages 4.3.0.\r\n  Installing System.Runtime.InteropServices 4.1.0.\r\n  Installing Microsoft.IdentityModel.Protocols 5.2.0.\r\n  Installing Microsoft.IdentityModel.Tokens 5.2.0.\r\n  Installing Microsoft.IdentityModel.Xml 5.2.0.\r\n  Installing System.Diagnostics.Debug 4.0.11.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing Microsoft.IdentityModel.Tokens.Saml 5.2.0.\r\n  Installing System.Runtime.Extensions 4.1.0.\r\n  Installing System.Threading 4.0.11.\r\n  Installing System.Collections 4.0.11.\r\n  Installing System.Reflection 4.1.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.Linq.Queryable 4.0.1.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Runtime 4.1.0.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 2.1.0.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.0.\r\n  Installing runtime.win-x64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-x86.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-arm64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing Microsoft.NETCore.Platforms 1.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.3.0.\r\n  Installing System.Net.Sockets 4.3.0.\r\n  Installing System.Diagnostics.Tracing 4.3.0.\r\n  Installing System.IO.Compression.ZipFile 4.3.0.\r\n  Installing System.Globalization.Calendars 4.3.0.\r\n  Installing System.Threading.Timer 4.3.0.\r\n  Installing System.Security.Cryptography.Primitives 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing System.Runtime.Handles 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.3.0.\r\n  Installing System.Net.Http 4.3.0.\r\n  Installing Microsoft.NETCore.Targets 1.1.0.\r\n  Installing System.Net.Primitives 4.3.0.\r\n  Installing System.Reflection.Emit.Lightweight 4.3.0.\r\n  Installing System.Reflection.TypeExtensions 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.3.0.\r\n  Installing System.ComponentModel 4.3.0.\r\n  Installing System.ComponentModel.Primitives 4.3.0.\r\n  Installing System.Collections.NonGeneric 4.3.0.\r\n  Installing System.Collections.Specialized 4.3.0.\r\n  Installing runtime.native.System 4.3.0.\r\n  Installing runtime.native.System.IO.Compression 4.3.0.\r\n  Installing System.Buffers 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.native.System.Net.Http 4.3.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing System.Security.Cryptography.Cng 4.3.0.\r\n  Installing System.Security.Cryptography.Csp 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing System.Xml.XPath 4.3.0.\r\n  Installing Microsoft.IdentityModel.Logging 5.2.0.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Runtime.Serialization.Xml 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 1.0.1.\r\n  Installing Microsoft.NETCore.Targets 1.0.1.\r\n  Installing System.Security.Claims 4.3.0.\r\n  Installing System.Reflection.Primitives 4.0.1.\r\n  Installing System.IO 4.1.0.\r\n  Installing System.Globalization 4.0.11.\r\n  Installing System.Threading.Tasks 4.0.11.\r\n  Installing System.Resources.ResourceManager 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing System.IO.FileSystem.Primitives 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.IO.FileSystem 4.0.1.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Text.Encoding 4.0.11.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Runtime.Handles 4.0.1.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 44.04 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    1m8.386s\r\nuser    1m8.010s\r\nsys     0m18.190s\r\nroot@9d1d5e45df6a:/# cd mvcapp/\r\nroot@9d1d5e45df6a:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 557.76 ms for /mvcapp/mvcapp.csproj.\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:07.34\r\n\r\nreal    2m11.716s\r\nuser    1m22.990s\r\nsys     0m8.880s\r\nroot@9d1d5e45df6a:/mvcapp#\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/80","RelatedDescription":"Closed issue \"Improving Performance of ARM32 Docker Images with .NET Core Package Cache\" (#80)"},{"Id":"350233220","IsPullRequest":false,"CreatedAt":"2018-08-13T23:50:57","Actor":"richlander","Number":"81","RawContent":null,"Title":"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+","State":"open","Body":"# Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\r\n\r\nAn [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md) was discovered with [.NET Framework 4.7.1](https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/). This issue was resolved earlier this year, with the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/). We recently learned that some applications, including Johnson Controls’ C-CURE 9000 Software, were negatively impacted by this change as this update requires all client and server workstations to be updated simultaneously with the appropriate Microsoft updates. The changes made to .NET Framework 4.7.1 were also integrated into .NET Framework 4.6 and later servicing releases. As a result, this advisory applies to .NET Framework 4.6 and later versions.\r\n\r\nThis advisory is provided so that developers can correctly diagnose this issue and be aware of our guidance. We will continue to update this issue as we have new information to share.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #832](https://github.com/Microsoft/dotnet/issues/832)\r\n\r\n## Guidance\r\n\r\nThis guidance only applies to customers that have experienced this issue.\r\n\r\nWe have released [an update for .NET Framework 4.6](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/) and later that resolves the issue. **You must deploy the .NET Framework update for this issue to all .NET Framework 4.6+ machines that communicate via serialized objects**. After doing that, cross-machine serialization will work as expected. \r\n \r\nPlease consult your software vendor to understand if this impacts the software you are using.\r\n\r\n## Technical Context\r\n\r\nIn the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/), we made a change to the internal type CultureAwareComparer to implement ISerializable. We made the change in order to address [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md).\r\n\r\nThe issue reported was that a type that contains an instance of CultureAwareComparer was not able to correctly serialize and deserialize across different versions of the .NET Framework. There are a few types in .NET Framework that do this, the most commonly impacted one being the Dictionary<TKey, TValue> type.\r\n \r\nThe change to implement the ISerializable interface had unintended side effects when exchanging this type across different machines. We have had a small number of reports from customers who have been affected.\r\n\r\nA common, but not unique way, of exchanging objects across machines is to use WCF in conjunction with a serializer. One of the common serializers being DataContractSerializer. The side-effect of the change prevented data serialized on systems where the type implements ISerializable to correctly deserialize of systems where the type does NOT implement ISerializable. The same is true of the opposite case, that systems where the type does not implement ISerializable will not correctly deserialize data from systems where the type does implement ISerializable.\r\n\r\nWe have an updated fix that we intend to release within the next month that will remove the implementation of the ISerializable interface on the type and use a different internal mechanism for ensuring the cross-version serialization continues to work as expected. This change addresses the break experienced with WCF.\r\n\r\nThe upcoming fix will remove the implementation of the ISerializable interface on the type and use a different mechanism for ensuring the cross-version serialization of that type continues to work. This change addresses the break experienced with WCF.\r\n\r\n## Symptoms\r\n\r\nAn application that is affected by this issue will most likely crash when trying to deserialize an object. It may print or log an error message similar to the following one:\r\n\r\n```\r\nThe formatter threw an exception while trying to deserialize the message: \r\nThere was an error while trying to deserialize parameter . The InnerException message was ''EndElement' 'Comparer' from namespace '' is not expected. Expecting element '_compareInfo'.'.  Please see InnerException for more details.\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/81","RelatedDescription":"Open issue \"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\" (#81)"},{"Id":"348162872","IsPullRequest":false,"CreatedAt":"2018-08-07T04:26:40","Actor":"richlander","Number":"79","RawContent":null,"Title":"August 2018 .NET Updates","State":"open","Body":"# August 2018 .NET Updates\r\n\r\nThe following .NET updates were released in August 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [August 2018 .NET Framework Security and Quality Rollup - August 14, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/)\r\n* [Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+](https://github.com/dotnet/announcements/issues/81)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [August 2018 Preview of Quality Rollup - August 30, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core August 2018 Update - August 21, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.3/2.1.3.md)\r\n* [.NET Core 2.1.400 SDK Update - August 14, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.400-SDK/2.1.400-sdk.md)\r\n\r\n## End of Support for Operating System Versions\r\n\r\n.NET Core does not support systems that are out of support. The following operating systems are now out of support. To stay supported, move to a [later version of the given operating system](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md).\r\n\r\n* [Debian 8 -- Jessie](https://lists.debian.org/debian-security-announce/2018/msg00132.html)\r\n* [Ubuntu 17.10 -- Artful Aardvark](https://lists.ubuntu.com/archives/ubuntu-announce/2018-July/000232.html)\r\n\r\nSee [Debian Jessie End of Life -- Impact on .NET Core Docker Images](https://github.com/dotnet/announcements/issues/78)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/79","RelatedDescription":"Open issue \"August 2018 .NET Updates\" (#79)"},{"Id":"348161534","IsPullRequest":false,"CreatedAt":"2018-08-07T04:18:01","Actor":"richlander","Number":"78","RawContent":null,"Title":"Debian Jessie End of Life -- Impact on .NET Core Docker Images","State":"open","Body":"# Debian Jessie End of Life -- Impact on .NET Core Docker Images\r\n\r\nDebian Jessie (AKA Debian 8) is now [out of support](https://lists.debian.org/debian-security-announce/2018/msg00132.html). Debian Jessie is no longer a supported operating system for .NET Core. Docker users need to switch to Debian Stretch-based (AKA Debian 9) images to stay in support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #647](https://github.com/dotnet/dotnet-docker/issues/647)\r\n\r\n## Context\r\n\r\nJessie-based images are currently provided for .NET Core 1.0, 1.1 and 2.0. .NET Core 1.0 and 1.1 expose multi-arch tags, such as `1.0-runtime` and `1.1-sdk`, that support Debian Jessie. When pulled for a Linux Docker daemon (on Linux or Windows), these tags pull Jessie-based images. .NET Core 2.0 supports Jessie, but it is not the default. .NET Core 2.0 multi-arch tags, such as `2.0-runtime` and `2.0-sdk`, pull Debian Stretch-based images, when pulled for a Linux Docker daemon. We made a conscious decision with .NET Core 2.0 to move off of Jessie as the default to avoid this problem, based the Jessie 2018 EOL date. .NET Core 2.1 does not support Jessie, only Stretch.\r\n\r\nWe recently posted about our policy for underlying operating system dependencies with Docker:\r\n\r\n> For each major and minor .NET version, we may take a new major operating system version dependency. As I mentioned earlier, we adopted Debian 9 as the base image for .NET Core 2.0. We stayed with Debian 9 for .NET Core 2.1, since Debian 10 (AKA “Buster”) has not been released. Debian 9 will remain the default base image for .NET Core 2.1 for the life of .NET Core 2.1. **Once we adopt an underlying operating system major version, we will not change it for the life of that given .NET release.**\r\n\r\nSource: https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/\r\n\r\n## Plan\r\n\r\nWe will continue to re-build .NET Core 1.0 and 1.1 multi-arch tags on top of Jessie for the remaining [supported lifetime of .NET Core 1.0 and 1.1](https://github.com/dotnet/core/blob/master/microsoft-support.md). We will also provide a Stretch-based image for .NET Core 1.1. This tag will look like the following: `1.1-runtime-stretch` or `1.1.9-sdk-stretch`. This is same format that Jessie has used.\r\n\r\nWe will produce Jessie-based images for NET Core 2.0 until October 2018, which is when [.NET Core 2.0 support ends](https://github.com/dotnet/core/blob/master/microsoft-support.md). .NET Core 2.0 multi-arch tags support Debian Stretch, not Jessie, as described above.\r\n\r\nIn summary, .NET Core is no longer supported on Debian Jessie, with Docker or otherwise. We will produce Docker images for Jessie until .NET Core 1.0, 1.1 and 2.0 support ends, respectively, to avoid breaking applications. This aligns with the policy defined above, per [Staying up-to-date with .NET Container Images](https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/).\r\n\r\n## Affected Repos\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)","Url":"https://github.com/dotnet/announcements/issues/78","RelatedDescription":"Open issue \"Debian Jessie End of Life -- Impact on .NET Core Docker Images\" (#78)"},{"Id":"345028102","IsPullRequest":false,"CreatedAt":"2018-07-26T22:31:32","Actor":"leecow","Number":"77","RawContent":null,"Title":"https://dot.net now using TLS 1.2-only","State":"open","Body":"Earlier today, https://dot.net switched to using TLS 1.2-only. Most Windows Powershell instances default to TLS 1.1 and will thus fail with `wget : The underlying connection was closed: An unexpected error occurred on a send. trying to run the previous command.`\r\n\r\nAn example of a PowerShell script fix can be seen in https://github.com/dotnet/docs/pull/6689","Url":"https://github.com/dotnet/announcements/issues/77","RelatedDescription":"Open issue \"https://dot.net now using TLS 1.2-only\" (#77)"},{"Id":"343360319","IsPullRequest":false,"CreatedAt":"2018-07-21T22:29:05","Actor":"richlander","Number":"76","RawContent":null,"Title":"July 2018 .NET Updates","State":"open","Body":"# July 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework 4.7.2 is available on Windows Update, WSUS and MU Catalog](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-framework-4-7-2-is-available-on-windows-update-wsus-and-mu-catalog/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3632](https://blogs.msdn.microsoft.com/dotnet/2018/07/18/announcing-net-framework-4-8-early-access-build-3632/)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-core-july-2018-update/)\r\n\r\n## .NET Core Support Policies\r\n\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core Supported OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n","Url":"https://github.com/dotnet/announcements/issues/76","RelatedDescription":"Open issue \"July 2018 .NET Updates\" (#76)"},{"Id":"343360017","IsPullRequest":false,"CreatedAt":"2018-07-21T22:22:25","Actor":"richlander","Number":"75","RawContent":null,"Title":"June 2018 .NET Updates","State":"open","Body":"# June 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework June 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/06/13/net-framework-june-2018-security-and-quality-rollup/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3621!](https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core 2.1 June Update](https://blogs.msdn.microsoft.com/dotnet/2018/06/22/net-core-2-1-june-update/)\r\n* [.NET Core 2.0 will reach End of Life on October 1, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core 1.0 and 1.1 EOL Dates Documented](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n\r\n## Previous Updates\r\n\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/75","RelatedDescription":"Open issue \"June 2018 .NET Updates\" (#75)"},{"Id":"343283437","IsPullRequest":false,"CreatedAt":"2018-07-21T00:56:48","Actor":"richlander","Number":"74","RawContent":null,"Title":"Advisory on July 2018 .NET Framework Updates","State":"open","Body":"# Advisory on July 2018 .NET Framework Updates\r\n\r\nUpdated: 08/14/2018\r\n\r\n> A new [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/) has been released that **resolves this advisory for all supported Windows versions**.\r\n\r\n~~A new [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) has been released that resolves this advisory. See Guidance section.~~\r\n\r\n~~Guidance has changed for Windows 7, Windows Server 2008 and Windows Server 2008 R2. See Guidance section.~~\r\n\r\nThe [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) was released earlier this month. We have received multiple customer reports of [applications that fail to start or don't run correctly](https://support.microsoft.com/en-us/help/4345913) after installing the July 2018 update. These reports are specific to applications that initialize a COM component and run with restricted permissions.\r\n\r\nWe have stopped distributing the .NET Framework July 2018 updates on Windows Update and are actively working on fixing and re-shipping this month's updates. If you installed the July 2018 update and have not yet seen any negative behavior, we recommend that you leave your systems as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We discovered while investigating this issue that we have a test hole for the specific combination of COM activation and restricted permissions, including impersonation. We will be mitigating that gap going forward. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this issue and [post](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/) as we have new information.\r\n\r\n## Discussion\r\nPlease share your thoughts/experience on this advisory and see what others are saying at:\r\n\r\n* [microsoft/dotnet #811](https://github.com/Microsoft/dotnet/issues/811)\r\n\r\n## Guidance\r\n\r\nWe strongly recommend that you install [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/).\r\n\r\n~~We recommend that you install [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) on your systems if you experienced the symptoms described in this advisory. If you did not experience these symptoms, we recommend you wait to update your machines until the next regular update, in August.~~\r\n\r\n~~On Windows 7, Windows Server 2008, and Windows Server 2008 R2, we have found that the combination of [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) and  [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) do not resolve all symptoms. On these Windows versions, if you are experiencing these symptoms after installing this combination of patches, we recommend that you uninstall (only) the Monthly Rollup patch and then install the appropriate Security Only patch listed at [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356).~~\r\n\r\n## Technical Context\r\n\r\nThe .NET Framework runtime uses the process token to determine whether the process is being run within an elevated context. These system calls can fail if the required process inspection permissions are not present. This causes an “access denied\" error.\r\n\r\n## Symptoms\r\n\r\nA COM component fails to load because of “access denied,” “class not registered,” or “internal failure occurred for unknown reasons” errors. \r\n\r\nThe most commonly reported failure results in the following error message:\r\n\r\n```console\r\nException type: System.UnauthorizedAccessException\r\nMessage: Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\n### Sharepoint\r\n\r\nWhen users browse to a SharePoint site they may see the following HTTP 403 message:\r\n\r\n```console\r\n\"The Web Site declined to show this webpage\"\r\n```\r\n\r\nThe SharePoint ULS Logs will contain a message like the following:  \r\n\r\n```console\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 0000       High                UnauthorizedAccessException for the request. 403 Forbidden will be returned. Error=An error occurred creating the configuration section handler for system.serviceModel/extensions: Could not load file or assembly <AssemblySignature>  or one of its dependencies. Access is denied. (C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\Config\\machine.config line 180)    \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General b6p2      VerboseEx                Sending HTTP response 403:403 FORBIDDEN.      \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 8nca       Verbose                Application error when access /, Error=Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\nWhen crawling a people content source, the request may fail with the following entry logged to the SharePoint ULS Log: \r\n\r\n```console\r\nmssearch.exe (0x118C) 0x203C SharePoint Server Search Crawler:Gatherer Plugin cd11 Warning The start address sps3s://<URLtoSite> cannot be crawled.  Context: Application 'Search_Service_Application', Catalog 'Portal_Content'  Details:  Class not registered   (0x80040154)  \r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive error \"ActiveX component can't create object\" \r\n\r\n.NET Application creates instance of .NET COM application within an Impersonation Context may receive error \"0x80040154 (REGDB_E_CLASSNOTREG)\"\r\n```\r\n\r\n### BizTalk Server Administration Console\r\n\r\nBizTalk Server Administration Console fails to launch properly with the following errors: \r\n\r\n```console\r\nAn internal failure occurred for unknown reasons. (WinMgmt) \r\n\r\nProgram Location:  \r\n\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode, IntPtr errorInfo) \r\n\r\n   at System.Management.ManagementObject.Get() \r\n\r\n   at Microsoft.BizTalk.SnapIn.Framework.WmiProvider.SelectInstance\r\n```\r\n\r\n> Warning: The following workarounds may make a computer or a network more vulnerable to attack by malicious users or by malicious software such as viruses. We do not recommend these workarounds but are providing this information so that you can implement the workarounds at your own discretion. Use these workarounds at your own risk.\r\n\r\nUse the following guidance as a workaround:\r\n\r\n* Add “NETWORK SERVICE” to the local Administrators group. \r\n\r\n### IIS with Classic ASP\r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive the following error: \"ActiveX component can't create object\". Use the following guidance as a workaround.\r\n\r\n* If your web site uses Anonymous Authentication, change the Web Site Anonymous Authentication credentials to use the \"Application pool identity\"\r\n* If your site uses Basic Authentication, log into the application once as the application pool identity and then create an instance of the .NET COM component. All subsequent activations for that .NET COM component should succeed, for any user.\r\n\r\n### .NET applications using COM and impersonation\r\n\r\n.NET Applications that creates instances of .NET COM application within an Impersonation Context may receive the following error: \"0x80040154 (REGDB_E_CLASSNOTREG)\". Use the following guidance as a workaround.\r\n\r\n* Create an instance of the .NET COM component prior to the impersonation context call. Later impersonated create instance calls should work as expected.\r\n* Run the .NET Application in the context of the impersonated user\r\n* Avoid using Impersonation when creating the .NET COM object","Url":"https://github.com/dotnet/announcements/issues/74","RelatedDescription":"Open issue \"Advisory on July 2018 .NET Framework Updates\" (#74)"},{"Id":"339929129","IsPullRequest":false,"CreatedAt":"2018-07-10T17:00:37","Actor":"blowdart","Number":"73","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core does not correctly validate certificates. An attacker who successfully exploited this vulnerability could present an expired certificate when challenged.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle certificate validation.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wcf/issues/3009\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not use Windows Communication Foundation you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, or ASP.NET Core based application that uses System.Private.ServiceModel with a version of 4.5.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Private.ServiceModel | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 |  4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Duplex | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.443 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Http | 4.0.0, 4.0.10, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.NetTcp | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Primitives | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.2 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Security | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n### <a name=\"project-format\"></a>.NET Core Project formats\r\n\r\n.NET Core has two different project file formats, depending on what software created the project.\r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1, .NET Core 2.0 and Microsoft Visual Studio 2017.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file or your `project.json` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n The `System.Private.ServiceModel` package is not meant to be directly depended on and will not appear in your direct dependency list.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects *OR*.\r\n* By examining the `project.lock.json` file contained in the root directory of your project for `project.json` based projects.\r\n\r\nThe `project.assets.json` and `project.lock.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in a csproj based project / Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.ServiceModel.Http` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.3\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"direct-dependencies-vs2015\"></a> Fixing Direct Dependencies in project.json based project / Visual Studio 2015\r\n\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n     \"System.ServiceModel.Http\" : \"4.0.0\"\r\n    }\r\n```\r\n\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Mvc.Core` and `System.ServiceModel.Http`.\r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on a vulnerable package, `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `System.ServiceModel.Http` to 4.4.3.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n    \"System.ServiceModel.Http \": \"4.4.3\"\r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) or the [the `project.lock.json` file](#project-lock-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json (csproj/VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.ServiceModel.Http/4.3.0` is a reference to version 4.3.0 of `System.ServiceModel.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.3.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### <a name=\"project-lock-json\"></a> Manually reviewing project.lock.json (project.json/VS2015)\r\n\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `System.ServiceModel.Http/4.0.1` is a reference to v4.0.1 of `System.ServiceModel.Http`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to a vulnerable version of `System.ServiceModel.Http` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `System.ServiceModel.Http` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"System.ServiceModel.Http\": \"4.1.2\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8356](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8356)\r\n\r\n### Revisions\r\n\r\nV1.1 (July 23, 2018): Updated package versions, as some assemblies were released unsigned.\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2018-07-23_\r\n","Url":"https://github.com/dotnet/announcements/issues/73","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\" (#73)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1101095169120747523","CreatedAt":"2019-02-28T12:22:00+00:00","UserScreenname":"dotnet","Text":"Subscribe to the On .NET on @ch9 to keep up with the latest episodes as we explore the world of .NET… https://t.co/1IClAyi1yE","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":8,"RawContent":null},{"Id":"1098610296367841282","CreatedAt":"2019-02-21T15:48:00+00:00","UserScreenname":"dotnet","Text":"The #dotnet blog just got a makeover!\n\nDiscover and share great content while enjoying the modern, clean design of… https://t.co/b0rdirHuPF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":49,"FavoriteCount":16,"RawContent":null},{"Id":"1098594189313363968","CreatedAt":"2019-02-21T14:44:00+00:00","UserScreenname":"dotnet","Text":". @ChristosMatskas joins #OnDotNet to share the story of an application he built using the Azure SDKs for .NET and… https://t.co/TR4ua9BnvV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":10,"RawContent":null},{"Id":"1098337450924040194","CreatedAt":"2019-02-20T21:43:49+00:00","UserScreenname":"dotnet","Text":"Check out the February updates for .NET. https://t.co/8Fz51sPyod","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":9,"RawContent":null},{"Id":"1097924819415326720","CreatedAt":"2019-02-19T18:24:10+00:00","UserScreenname":"dotnet","Text":".NET Core 1.0 and 1.1 will reach End of Life on June 27, 2019 https://t.co/45GssRCrZk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":128,"FavoriteCount":133,"RawContent":null}]}},"RunOn":"2019-03-04T05:30:30.6699123Z","RunDurationInMilliseconds":8654}