{"Data":{"Blog":{"FeedItems":[{"Title":"Publish Improvements in Visual Studio 2017 15.7","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Visual Studio 2017 15.7 Preview 4. Our 15.7 update brings some exciting updates for publishing applications from Visual Studio that we’re excited to tell you about, including:...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/visual-studio-2017-15-7-p4-publish/","RawContent":null},{"Title":"What Happened to Bower?","PublishedOn":"2018-04-18T18:04:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Bower is a popular package management system for managing static content used by client-side web applications. Visual Studio provides rich support for Bower, including templates and package management...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/18/what-happened-to-bower/","RawContent":null},{"Title":"Library Manager: Client-side content manager for web apps","PublishedOn":"2018-04-17T21:48:24+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"If you’re developing a modern web app, chances are your app will reference client-side JavaScript and CSS files like jQuery or bootstrap. Maybe you copy these from a previous project. Or perhaps you...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/library-manager-client-side-content-manager-for-web-apps/","RawContent":null},{"Title":"Blazor 0.2.0 release now available","PublishedOn":"2018-04-17T17:59:55+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Just a few weeks ago we announced the first preview release of an experimental web UI framework called Blazor. Blazor enables full-stack web development using C# and WebAssembly. So far thousands of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/17/blazor-0-2-0-release-now-available/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2: Improvements to the Kestrel HTTP server","PublishedOn":"2018-04-13T00:42:44+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Change default transport to Sockets Building off the improvements to the managed sockets implementation in .NET Core we have changed the default transport in Kestrel from libuv to sockets. As a...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-improvements-to-the-kestrel-http-server/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2 now available","PublishedOn":"2018-04-12T17:24:30+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Today we&#8217;re very happy to announce that the second preview of the next minor release of ASP.NET Core and .NET Core is now available for you to try out. This second preview includes many...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-now-available/","RawContent":null},{"Title":"Get started building .NET web apps that run in the browser with Blazor","PublishedOn":"2018-03-22T17:00:26+00:00","CommentsCount":42,"FacebookCount":0,"Summary":"Today we released our first public preview of Blazor, a new experimental .NET web framework using C#/Razor and HTML that runs in the browser with WebAssembly. Blazor enables full stack web development...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/get-started-building-net-web-apps-in-the-browser-with-blazor/","RawContent":null},{"Title":"ASP.NET Core manageability and Application Insights improvements","PublishedOn":"2018-03-22T14:12:38+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"There are many great investments on the ASP.NET Core 2.1 roadmap. These investments make ASP.NET Core applications easier to write, host, test, and make security and standards compliant. This blog...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/asp-net-core-manageability-and-application-insights-improvements/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-03-19T22:00:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/19/announcing-preview-1-of-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Functional testing of MVC applications","PublishedOn":"2018-03-05T18:30:28+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"For ASP.NET Core 2.1 we have created a new package, Microsoft.AspNetCore.Mvc.Testing, to help streamline in-memory end-to-end testing of MVC applications using TestServer. This package takes care of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/05/asp-net-core-2-1-0-preview1-functional-testing-of-mvc-applications/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7552053306","Type":"IssuesEvent","CreatedAt":"2018-04-18T22:19:40","Actor":"mikeharder","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3062","RelatedDescription":"Closed issue \"AutobahnTester should use dynamic port \"0\" with Kestrel\" (#3062) at aspnet/Home","RelatedBody":"Changes should be made to `AutobahnTester` and/or `SelfHostDeployer` to use dynamic port \"0\" for `ServerType.Kestrel`.  Currently, it uses the less-reliable `GetNextPort()` method.\r\n\r\nThis is somewhat complicated since `AutobahnTester` requires HTTPS, which is currently only supported in `SelfHostDeployer` when `DeploymentParameters.ApplicationBaseUriHint` is set, but dynamic port \"0\" is only used when `ApplicationBaseUriHint` is **not** set.  So, there are two options (in my order of preference):\r\n\r\n1. Add an `Ssl` parameter to `DeploymentParameters`, then change `AutobahnTester` to set `DeploymentParameters.Ssl` instead of `DeploymentParameters.ApplicationBaseUriHint`.  This will use dynamic port \"0\" for ServerType.Kestrel (both HTTP and HTTPS), and `GetNextPort()` for ServerType.WebListener (since dynamic port \"0\" is not supported).\r\n\r\n2. Change `SelfHostDeployer` to use dynamic port \"0\" when `ApplicationBaseUriHint` is set to either \"127.0.0.1:0\" or \"[::1]:0\".  Dynamic port \"0\" is not supported on other hostnames which try to bind both IPv4 and IPv6, like \"localhost\".  Then change `AutobahnTester` to use \"http[s]://127.0.0.1:0\" instead of \"http[s]://localhost:0\".\r\n\r\nhttps://github.com/aspnet/WebSockets/blob/612db427725b3bdac3d6851288c93051bfe69621/test/Microsoft.AspNetCore.WebSockets.ConformanceTest/Autobahn/AutobahnTester.cs#L132\r\n\r\nRelated: https://github.com/aspnet/Hosting/issues/1296"},{"Id":"7552044084","Type":"IssuesEvent","CreatedAt":"2018-04-18T22:17:11","Actor":"mikeharder","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3074","RelatedDescription":"Opened issue \"WebSockets AutobahnTester frequently fails in Travis\" (#3074) at aspnet/Home","RelatedBody":"```\r\n$ ./build/setup-wstest.sh\r\n/opt/pyenv/shims/python\r\nPython 2.7.6\r\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n100   122  100   122    0     0   9013      0 --:--:-- --:--:-- --:--:--  9384\r\ntar: This does not look like a tar archive\r\ngzip: stdin: not in gzip format\r\ntar: Child returned status 1\r\ntar: Error is not recoverable: exiting now\r\npython: can't open file './.python/virtualenv-15.1.0/virtualenv.py': [Errno 2] No such file or directory\r\n./build/setup-wstest.sh: line 22: .virtualenv/bin/python: No such file or directory\r\n```\r\n\r\nhttps://travis-ci.org/aspnet/WebSockets/jobs/368372668\r\n"},{"Id":"7551732067","Type":"IssuesEvent","CreatedAt":"2018-04-18T21:06:10","Actor":"mikeharder","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3063","RelatedDescription":"Closed issue \"StaticFileMiddlewareTests should use dynamic ports\" (#3063) at aspnet/Home","RelatedBody":"`StaticFileMiddlewareTests` should use dynamic ports rather than hardcoding port `12345`.  For `ServerType.Kestrel`, the app should bind to dynamic port \"0\" and query the app to find the assigned port, since this is 100% reliable.  For `ServerType.WebListener`, the app should use `GetNextPort()` which is less reliable than directly binding to \"0\", but should be more reliable than a hardcoded port.\r\n\r\nhttps://github.com/aspnet/StaticFiles/blob/5d2b1000f19dc3e892611f387b46cd519976a9f0/test/Microsoft.AspNetCore.StaticFiles.FunctionalTests/StaticFileMiddlewareTests.cs#L181"},{"Id":"7551407893","Type":"IssuesEvent","CreatedAt":"2018-04-18T20:02:14","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Home/issues/2537","RelatedDescription":"Reopened issue \"Support GetFileInfo for directories\" (#2537) at aspnet/Home","RelatedBody":"_From @stilettk on Friday, November 3, 2017 2:56:28 AM_\r\n\r\nCurrently `GetFileInfo` supports only files: when called on a path that points to a directory it returns `PhysicalFileInfo` which has `IsDirectory == false`. \r\n\r\nSo, when given a path, how to decide what to do: to call `GetFileInfo` (if it's a file) or call `GetDirectoryContents` (if it's a folder)? Currently the only way I found isn't very intuitive:\r\n`bool isDirectory = fileProvider.GetDirectoryContents(myPath).Exists`\r\n\r\nMy suggestion:\r\n`new PhysicalFileProvider(myPath).GetFileInfo(\"data\")` \r\nExpected:\r\n`PhysicalDirectoryInfo`\r\nActual:\r\n`PhysicalFileInfo`\r\n\r\n_Copied from original issue: aspnet/FileSystem#298_"},{"Id":"7550646369","Type":"IssuesEvent","CreatedAt":"2018-04-18T17:34:13","Actor":"ssougnez","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3072","RelatedDescription":"Opened issue \"ASP.NET Core Runtime extensions not in 2.1.0-preview2 on Azure\" (#3072) at aspnet/Home","RelatedBody":"Hi,\r\n\r\nwhen 2.1.0-preview1 has been officially released, it also has been announced that it was possible to use it via the site extensions. I followed the article \"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-0-preview1-using-asp-net-core-previews-on-azure-app-service/\" and it worked.\r\n\r\nI just tried it for preview2, however, the extension \"ASP.NET Core Runtime Extensions\" are still in preview1 version (while \"ASP.NET Core Runtime\" is in preview2).\r\n\r\nIs it normal? If so, when is \"preview2\" supposed to be available on Azure ?"},{"Id":"7550184401","Type":"IssuesEvent","CreatedAt":"2018-04-18T16:08:19","Actor":"blowdart","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3066","RelatedDescription":"Closed issue \"DataProtectionProvider.Create() throws an exception during certificate protected key encryption when Fips is enabled\" (#3066) at aspnet/Home","RelatedBody":"### Title\r\nDataProtectionProvider.Create() throws an exception during certificate protected key encryption when Fips is enabled.\r\n\r\n### Functional impact\r\nShared cookie authentication does not work on systems with Fips enabled\r\n\r\n### Minimal repro steps\r\n1. Enable Fips compliant algorithms on the system running the MVC app\r\n2. Download and compile the following MVC solution at https://github.com/bszarko/Study/\r\n3. Deploy to IIS 7.5\r\n4. Import Dev.SharedCookieTest.Cert02.pfx into cert store localmachine, my\r\n5. Give AppPool identity permissions to the certificate's private key\r\n6. Open a desktop browser and navigate to the application\r\n\r\n### Expected result\r\nA key should be generated and encrypted (protected by certificate) using a Fips compliant algorithm. \r\n\r\n### Actual result\r\nException\r\n\"This implementation is not part of the Windows Platform FIPS validated cryptographic algorithms\"\r\n\r\n### Further technical details\r\nWhens Fips is disabled this setup works but throws an exception when Fips is enabled.\r\n\r\n// Test project\r\nhttps://github.com/bszarko/Study/\r\n\r\nTests:\r\nOS: Windows & & Windows 2008 R2 SP1\r\nIIS 7.5.7600, AppPool using a Service Account\r\nFrameworks: 4.6.1, 4.6.2, 4.7.1, netstandard 2.0\r\nVisual Studio 2015 Enterprise & Visual Studio 2017 Community\r\n\r\nI also tried adding crypto mappings to the machine.config in hopes that something other than RijndaelManaged was used.\r\n\r\n\"This implementation is not part of the Windows Platform FIPS validated cryptographic algorithms\"\r\n\r\n[InvalidOperationException: This implementation is not part of the Windows Platform FIPS validated cryptographic algorithms.]\r\n   System.Security.Cryptography.RijndaelManaged..ctor() +5256144\r\n   System.Security.Cryptography.Xml.EncryptedXml.Encrypt(XmlElement inputElement, X509Certificate2 certificate) +477\r\n   Microsoft.AspNetCore.DataProtection.XmlEncryption.CertificateXmlEncryptor.Microsoft.AspNetCore.DataProtection.XmlEncryption.IInternalCertificateXmlEncryptor.PerformEncryption(EncryptedXml encryptedXml, XmlElement elementToEncrypt) +200\r\n   Microsoft.AspNetCore.DataProtection.XmlEncryption.CertificateXmlEncryptor.EncryptElement(XElement plaintextElement) +394\r\n   Microsoft.AspNetCore.DataProtection.XmlEncryption.CertificateXmlEncryptor.Encrypt(XElement plaintextElement) +47\r\n   Microsoft.AspNetCore.DataProtection.XmlEncryption.XmlEncryptionExtensions.EncryptIfNecessary(IXmlEncryptor encryptor, XElement element) +407\r\n   Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.CreateNewKey(Guid keyId, DateTimeOffset creationDate, DateTimeOffset activationDate, DateTimeOffset expirationDate) +1402\r\n   Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.CreateNewKey(DateTimeOffset activationDate, DateTimeOffset expirationDate) +136\r\n   Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded) +599\r\n   Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.ICacheableKeyRingProvider.GetCacheableKeyRing(DateTimeOffset now) +12\r\n   Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow) +513\r\n   Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext) +84\r\n\r\n[CryptographicException: An error occurred while trying to encrypt the provided data. Refer to the inner exception for more information.]\r\n   Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingBasedDataProtector.Protect(Byte[] plaintext) +821\r\n   Microsoft.Owin.Security.DataHandler.SecureDataFormat`1.Protect(TData data) +92\r\n   Microsoft.Owin.Security.Cookies.<ApplyResponseGrantAsync>d__b.MoveNext() +1334\r\n   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() +31\r\n   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +60\r\n   Microsoft.Owin.Security.Infrastructure.<ApplyResponseCoreAsync>d__b.MoveNext() +218\r\n   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() +31\r\n   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +60\r\n   Microsoft.Owin.Security.Infrastructure.<ApplyResponseAsync>d__8.MoveNext() +475\r\n   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() +31\r\n   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +60\r\n   Microsoft.Owin.Security.Infrastructure.<TeardownAsync>d__5.MoveNext() +215\r\n   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() +31\r\n   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +60\r\n   Microsoft.Owin.Security.Infrastructure.<Invoke>d__0.MoveNext() +968\r\n   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() +31\r\n   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +60\r\n   Microsoft.Owin.Host.SystemWeb.IntegratedPipeline.<RunApp>d__5.MoveNext() +194\r\n   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() +31\r\n   System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) +60\r\n   Microsoft.Owin.Host.SystemWeb.IntegratedPipeline.<DoFinalWork>d__2.MoveNext() +184\r\n   System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw() +31\r\n   Microsoft.Owin.Host.SystemWeb.IntegratedPipeline.StageAsyncResult.End(IAsyncResult ar) +117\r\n   System.Web.AsyncEventExecutionStep.System.Web.HttpApplication.IExecutionStep.Execute() +365\r\n   System.Web.HttpApplication.ExecuteStepImpl(IExecutionStep step) +195\r\n   System.Web.HttpApplication.ExecuteStep(IExecutionStep step, Boolean& completedSynchronously) +128\r\n\r\nOwin Startup\r\n\r\npublic void ConfigureAuth(IAppBuilder app)\r\n\t\t{\r\n\t\t\t// these don't seem to change the behavior\r\n\t\t\tif (CryptoConfig.AllowOnlyFipsAlgorithms)\r\n\t\t\t{\r\n\t\t\t\tCryptoConfig.AddAlgorithm(\r\n\t\t\t\t\ttypeof(AesCryptoServiceProvider),\r\n\t\t\t\t\t\"AES\",\r\n\t\t\t\t\t\"AesCryptoServiceProvider\",\r\n\t\t\t\t\t\"System.Security.Cryptography.AesCryptoServiceProvider\",\r\n\t\t\t\t\t\"System.Security.Cryptography.AES\"\r\n\t\t\t\t);\r\n\r\n\t\t\t\tCryptoConfig.AddAlgorithm(\r\n\t\t\t\t\ttypeof(SHA256CryptoServiceProvider),\r\n\t\t\t\t\t\"SHA256\",\r\n\t\t\t\t\t\"SHA256CryptoServiceProvider\",\r\n\t\t\t\t\t\"System.Security.Cryptography.SHA256CryptoServiceProvider\",\r\n\t\t\t\t\t\"System.Security.Cryptography.SHA256\"\r\n\t\t\t\t);\r\n\r\n\t\t\t\tCryptoConfig.AddAlgorithm(\r\n\t\t\t\t\ttypeof(SHA256CryptoServiceProvider),\r\n\t\t\t\t\t\"SHA512\",\r\n\t\t\t\t\t\"SHA512CryptoServiceProvider\",\r\n\t\t\t\t\t\"System.Security.Cryptography.SHA512CryptoServiceProvider\",\r\n\t\t\t\t\t\"System.Security.Cryptography.SHA512\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tvar encryptionSettings = new AuthenticatedEncryptorConfiguration()\r\n\t\t\t{\r\n\t\t\t\tEncryptionAlgorithm = EncryptionAlgorithm.AES_256_CBC,\r\n\t\t\t\tValidationAlgorithm = ValidationAlgorithm.HMACSHA256\r\n\t\t\t};\r\n\r\n\t\t\t// apply AppPool identity or service account permissions to registry path\r\n\t\t\tvar regPath = @\"SOFTWARE\\SharedCookieTest\\Keys\";\r\n\t\t\tRegistry.LocalMachine.CreateSubKey(regPath, true);\r\n\r\n\t\t\t/*\r\n\t\t\t * Certificate Thumbprints\r\n\t\t\t * 6bee3f190055703c0dcd01e7c433462069549762 - dev.sharedcookietest.cert02\r\n\t\t\t * d74e3a5413047996a10bda4661d296ca7f741ff8 - Dev.SharedCookieTest.Cert01\r\n\t\t\t*/\r\n\r\n\t\t\tvar store = new X509Store(StoreName.My, StoreLocation.LocalMachine);\r\n\t\t\tstore.Open(OpenFlags.OpenExistingOnly);\r\n\t\t\tvar cert = store.Certificates\r\n\t\t\t\t.OfType<X509Certificate2>()\r\n\t\t\t\t.FirstOrDefault(c => c.Thumbprint.Equals(\"6bee3f190055703c0dcd01e7c433462069549762\", StringComparison.CurrentCultureIgnoreCase));\r\n\r\n\t\t\tvar protectionProvider = DataProtectionProvider.Create(\r\n\t\t\t\tnew DirectoryInfo($@\"{HostingEnvironment.MapPath(\"~\")}\\keys\"),\r\n\t\t\t\toptions =>\r\n\t\t\t\t{\r\n\t\t\t\t\toptions.SetDefaultKeyLifetime(TimeSpan.FromDays(365));\r\n\t\t\t\t\toptions.UseCryptographicAlgorithms(encryptionSettings);\r\n\r\n\t\t\t\t\t//options.UseCustomCryptographicAlgorithms(\r\n\t\t\t\t\t//\tnew CngCbcAuthenticatedEncryptorConfiguration()\r\n\t\t\t\t\t//\t{\r\n\t\t\t\t\t//\t\tEncryptionAlgorithm = \"AES\",\r\n\t\t\t\t\t//\t\t//EncryptionAlgorithmProvider = WhatShouldThisBe?,//\"Advanced Encryption Standard\",//\"ECDiffieHellmanCng\",//\"BCryptCloseAlgorithmProvider\",//\"MS_ENH_RSA_AES_PROV\",\r\n\t\t\t\t\t//\t\tEncryptionAlgorithmKeySize = 256,\r\n\t\t\t\t\t//\t\tHashAlgorithm = \"SHA256\"\r\n\t\t\t\t\t//\t\t//HashAlgorithmProvider = WhatShouldThisBe?//null//\"SHA256CryptoServiceProvider\"//\"Microsoft Enhanced RSA and AES Cryptographic Provider\"\r\n\t\t\t\t\t//\t});\r\n\r\n\t\t\t\t\toptions.PersistKeysToRegistry(Registry.LocalMachine.OpenSubKey(regPath, true));\r\n\t\t\t\t\toptions.ProtectKeysWithCertificate(cert);\r\n\t\t\t\t});\r\n\r\n\t\t\tvar dataProtector = protectionProvider.CreateProtector(\r\n\t\t\t\t\"CookieAuthenticationMiddleware\",\r\n\t\t\t\t\"Cookie\",\r\n\t\t\t\t\"v2\");\r\n\r\n\t\t\t// Enable the application to use a cookie to store information for the signed in user\r\n\t\t\t// and to use a cookie to temporarily store information about a user logging in with a third party login provider\r\n\t\t\t// Configure the sign in cookie\r\n\t\t\tapp.UseCookieAuthentication(new CookieAuthenticationOptions\r\n\t\t\t{\r\n\t\t\t\tTicketDataFormat = new AspNetTicketDataFormat(new DataProtectorShim(dataProtector)),\r\n\t\t\t\tAuthenticationType = DefaultAuthenticationTypes.ApplicationCookie,\r\n\t\t\t\tAuthenticationMode = Microsoft.Owin.Security.AuthenticationMode.Active,\r\n\t\t\t\tCookieDomain = \"localhost\",\r\n\t\t\t\tCookieName = \".AspNet.SharedCookie\",\r\n\t\t\t\tCookiePath = \"/\",\r\n\t\t\t\tCookieSecure = CookieSecureOption.SameAsRequest\r\n\t\t\t});\r\n\t\t}"},{"Id":"7549959771","Type":"IssuesEvent","CreatedAt":"2018-04-18T15:32:01","Actor":"bobuva","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3071","RelatedDescription":"Opened issue \"Cannot get light-up technique of assembly load to work for ASP.NET Core 2.0\" (#3071) at aspnet/Home","RelatedBody":"I recently learned about the light-up technique that Application Insights uses to get their assemblies loaded into any ASP.NET app. [Here](https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/platform-specific-configuration?view=aspnetcore-2.1) is a link to it.\r\n\r\nI've implemented an IHostingStartup class in an assembly.  I'm using a target of `netcoreapp2.0`. One thing I'm not sure if it could be an issue is that I had installed the .NET Core 2.1 preview (first and the second one), and the SDK that comes with it. So my .NET Core SDK is 2.1.\r\n\r\nI followed exactly the same process of making sure my assembly, symbols and deps.json are put in the right place in the my user profile tree under the `.dotnet` subdirectory paths. In fact I used the nice Powershell script that I think Luke Latham wrote and referred to [here](https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/platform-specific-configuration?view=aspnetcore-2.1). \r\n\r\nI verified that the files are copied correctly, and that my deps.json file has the necessary entries.\r\n\r\nWhen I run a hosting app like the `HostingStartupSample` that Luke used (all of the source is [here](https://github.com/aspnet/Docs/tree/master/aspnetcore/host-and-deploy/platform-specific-configuration/sample), I get this exception as it starts up:\r\n\r\n```\r\nSystem.InvalidOperationException: Startup assembly ShiftLeft.NetCore.Agent failed to execute. See the inner exception for more details. ---> System.IO.FileNotFoundException: Could not load file or assembly 'ShiftLeft.NetCore.Agent, Culture=neutral, PublicKeyToken=null'. The system cannot find the file specified.\r\n   at System.Reflection.RuntimeAssembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, RuntimeAssembly locationHint, StackCrawlMark& stackMark, IntPtr pPrivHostBinder, Boolean throwOnFileNotFound, Boolean forIntrospection, Boolean suppressSecurityChecks, IntPtr ptrLoadContextBinder)\r\n   at System.Reflection.RuntimeAssembly.InternalLoadAssemblyName(AssemblyName assemblyRef, Evidence assemblySecurity, RuntimeAssembly reqAssembly, StackCrawlMark& stackMark, IntPtr pPrivHostBinder, Boolean throwOnFileNotFound, Boolean forIntrospection, IntPtr ptrLoadContextBinder)\r\n   at System.Reflection.Assembly.Load(AssemblyName assemblyRef)\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.BuildCommonServices(AggregateException& hostingStartupErrors)\r\n   --- End of inner exception stack trace ---\r\n```\r\n\r\nI have no idea why it cannot find it. I set the COREHOST_TRACE=1 environment  variable but didn't see anything more than what I already knew. \r\n\r\nHere is the code:\r\n\r\n```\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing ShiftLeft.Agent;\r\n\r\n// Use a Hosting Startup Attribute to identify the IHostingStartup implementation.\r\n[assembly: HostingStartup(typeof(ShiftLeft.NetCore.Agent.AgentHostingStartup))]\r\n\r\nnamespace ShiftLeft.NetCore.Agent\r\n{\r\n    public class AgentHostingStartup : IHostingStartup\r\n    {\r\n        public static void Main(string[] args)\r\n        { }\r\n\r\n        public void Configure(IWebHostBuilder builder)\r\n        {\r\n            Logger.Instance.Log(\"AgentHostingStartup.Configure...\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe Main() entrypoint is to make the compiler happy -- apparently I cannot use that interface without having a Main entrypoint? All I do for my configuration is simply use a logger class to tell me if it gets loaded.\r\n\r\nI could use some additional tips on troubleshooting this or if you think there's a bug. Thanks, Bob\r\n"},{"Id":"7547004301","Type":"IssuesEvent","CreatedAt":"2018-04-18T06:18:34","Actor":"ndreisg","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3070","RelatedDescription":"Opened issue \"WebSocket Server does not receive Close Frame from Chrome\" (#3070) at aspnet/Home","RelatedBody":"I have an ASP.net Core WebSocket Server, and a WebClient that is connecting to that Server with Javascript.\r\n\r\nChrome seems to be the only browser that doesn't (always) send a Close Frame when I close the tab/browser where the client is running. (Works when Server is running on localhost but not when it's running in Azure App Service, see the chromium issue below for more info)\r\n\r\nSome days ago I created an Issue: https://bugs.chromium.org/p/chromium/issues/detail?id=832582\r\n\r\nUnfortunately the Chromium Team isn't going to fix this issue.\r\n\r\n**Question:**\r\n\r\nWhen no Close Frame is sent to the Server but the socket is closed anyway, shouldn't the Server throw an Exception or something?\r\n\r\nHere my code:\r\n\r\n```\r\ntry\r\n{\r\n  WebSocketReceiveResult message = await webSocket.ReceiveAsync(new ArraySegment<byte>(buffer), CancellationToken.None);\r\n  while (!message.CloseStatus.HasValue)\r\n  {\r\n    // do something with the message here...\r\n    message = await webSocket.ReceiveAsync(new ArraySegment<byte>(buffer), CancellationToken.None);\r\n  }\r\n  Close(); // Function with some cleanup code\r\n}\r\ncatch (Exception e)\r\n{\r\n  Close(); // <-- I expect this to be called when the socket is closed without a Close Frame. But it is not :(\r\n}\r\n```\r\nUnfortunately when Chrome closes the Socket without a Close Frame, the ReceiveAsync keeps waiting forever. No exception is thrown.\r\n\r\nIs there any other way to find out if a socket has died without getting a Close Frame?"},{"Id":"7546961658","Type":"IssuesEvent","CreatedAt":"2018-04-18T06:05:36","Actor":"zxyao145","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3065","RelatedDescription":"Closed issue \"How to change session in filter?\" (#3065) at aspnet/Home","RelatedBody":"Hi,\r\nI'm writing a action filter, the session's value only can be changed in the filter. And when I next enter this filter, the value of the session is still the old.\r\nPlease help me, thanks a lot!\r\n ```\r\napp.Use(async (context, next) =>\r\n{\r\n        context.Session.SetString(\"IsFirst\", \"TT\");\r\n        await next();\r\n});\r\n\r\n\r\n\r\npublic override void OnActionExecuting(ActionExecutingContext filterContext)     \r\n{\r\n    var isFisrt = filterContext.HttpContext.Session.GetString(\"IsFirst\");//isFisrt always is \"TT\"\r\n    if (isFisrt == \"TT\")\r\n    {\r\n        filterContext.HttpContext.Session.SetString(\"IsFirst\", \"FF\");\r\n        var isFisrt2 = filterContext.HttpContext.Session.GetString(\"IsFirst\");//isFisrt2 always is \"FF\"\r\n        //Dosomething\r\n    }\r\n    base.OnActionExecuting(filterContext);\r\n} \r\n```"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7553187896","Type":"PullRequestEvent","CreatedAt":"2018-04-19T04:50:29","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2090","RelatedDescription":"Opened pull request \"Global suppress low impact logging verification in tests (#2089)\" (#2090) at aspnet/SignalR","RelatedBody":""},{"Id":"7553186738","Type":"PullRequestEvent","CreatedAt":"2018-04-19T04:50:03","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2089","RelatedDescription":"Merged pull request \"Global suppress low impact logging verification in tests\" (#2089) at aspnet/SignalR","RelatedBody":"Suppress low impact test failures from #2034 and #2069"},{"Id":"7552710282","Type":"PullRequestEvent","CreatedAt":"2018-04-19T01:56:12","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2089","RelatedDescription":"Opened pull request \"Global suppress low impact logging verification in tests\" (#2089) at aspnet/SignalR","RelatedBody":"Suppress low impact test failures from #2034 and #2069"},{"Id":"7552519395","Type":"IssuesEvent","CreatedAt":"2018-04-19T00:47:06","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/2080","RelatedDescription":"Closed issue \"LongPolling connections can deadlock if pipe backpressures\" (#2080) at aspnet/SignalR","RelatedBody":"If enough messages are written to the connection then the pipe can backpressure\r\nhttps://github.com/aspnet/SignalR/blob/b3b5a13f2c0ef1707278bdeaabfb0f977f19a49e/src/Microsoft.AspNetCore.Http.Connections/Internal/HttpConnectionDispatcher.cs#L487\r\n\r\nAnd it is sitting inside the lock\r\nhttps://github.com/aspnet/SignalR/blob/b3b5a13f2c0ef1707278bdeaabfb0f977f19a49e/src/Microsoft.AspNetCore.Http.Connections/Internal/HttpConnectionDispatcher.cs#L304\r\n\r\nAnd when the LongPolling transport reads from the pipe and tries to re-poll it will try to acquire the lock which results in a deadlock\r\nhttps://github.com/aspnet/SignalR/blob/b3b5a13f2c0ef1707278bdeaabfb0f977f19a49e/src/Microsoft.AspNetCore.Http.Connections/Internal/HttpConnectionDispatcher.cs#L473"},{"Id":"7552514156","Type":"PullRequestEvent","CreatedAt":"2018-04-19T00:45:09","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2088","RelatedDescription":"Merged pull request \"Split lock into WriteLock and StateLock to prevent deadlocks and unne…\" (#2088) at aspnet/SignalR","RelatedBody":"…eded lock contention (#2081)"},{"Id":"7552512923","Type":"PullRequestEvent","CreatedAt":"2018-04-19T00:44:41","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/2088","RelatedDescription":"Opened pull request \"Split lock into WriteLock and StateLock to prevent deadlocks and unne…\" (#2088) at aspnet/SignalR","RelatedBody":"…eded lock contention (#2081)"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7552349723","Type":"IssuesEvent","CreatedAt":"2018-04-18T23:47:37","Actor":"ajaybhargavb","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7682","RelatedDescription":"Opened issue \"Microsoft.AspNetCore.Mvc.Analyzers.Experimental symbols nupkg is missing the necessary pdbs\" (#7682) at aspnet/Mvc","RelatedBody":""},{"Id":"7552167239","Type":"IssuesEvent","CreatedAt":"2018-04-18T22:51:31","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7673","RelatedDescription":"Closed issue \"MediaType.GetHashCode() throws System.ExecutionEngineException\" (#7673) at aspnet/Mvc","RelatedBody":"`MediaType.GetHashCode()` throws a `System.ExecutionEngineException` in an ASP.NET Core application. \r\n\r\nI've included a minimal project that consistently reproduces the exception on my local machine. \r\n\r\nDoes anyone have an idea of what's behind this?\r\n\r\n__Program.cs:__\r\n```c#\r\nusing System;\r\nusing Microsoft.AspNetCore;\r\nusing Microsoft.AspNetCore.Hosting;\r\nusing Microsoft.AspNetCore.Mvc.Formatters;\r\n\r\nnamespace test\r\n{\r\n    public static class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            MediaType t = new MediaType(\"text/csv\");\r\n\r\n            // throws => System.ExecutionEngineException\r\n            Console.WriteLine(t.GetHashCode());\r\n\r\n            WebHost.CreateDefaultBuilder(args)\r\n                   .Build()\r\n                   .Run();\r\n        }\r\n    }\r\n}\r\n```\r\n__test.csproj__\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n    <LangVersion>latest</LangVersion>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.5\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```"},{"Id":"7552137964","Type":"IssuesEvent","CreatedAt":"2018-04-18T22:43:07","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7664","RelatedDescription":"Closed issue \"Remove checked in msbuild.binlog from Mvc\" (#7664) at aspnet/Mvc","RelatedBody":"* [  ] Delete the file\r\n* [  ] Delete the file from existence (https://rtyley.github.io/bfg-repo-cleaner)\r\n\r\n"},{"Id":"7551972467","Type":"IssuesEvent","CreatedAt":"2018-04-18T21:59:08","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7316","RelatedDescription":"Closed issue \"Add Assembly at Runtime\" (#7316) at aspnet/Mvc","RelatedBody":"_From @AceCoderLaura on January 29, 2018 22:32_\n\nOriginal Issue:\r\nhttps://github.com/domaindrivendev/Swashbuckle.AspNetCore/issues/580\r\n\r\n> \r\n> When I load an application part with a controller in it, Swashbuckle doesn't add the controller to the Swagger.\r\n> \r\n> ```\r\n> List<System.Reflection.Assembly> ExtraControllerAssemblies { get; set; }\r\n> \r\n> public void ConfigureServices(IServiceCollection services)\r\n> {\r\n>   foreach (var assembly in ExtraControllerAssemblies)\r\n>   {\r\n>       services.AddMvc().AddApplicationPart(assembly);\r\n>   }\r\n> }\r\n> ```\r\n> I can invoke actions on the runtime-loaded controller just fine, so it's clearly loaded properly, but Swashbuckle hasn't generated any Swagger for it.\r\n\r\nThis is apparently and issue with ApiExplorer. How can I add my assembly for API exploration?\n\n_Copied from original issue: aspnet/Home#2836_"},{"Id":"7551971291","Type":"IssuesEvent","CreatedAt":"2018-04-18T21:58:51","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7334","RelatedDescription":"Closed issue \"Binding with [FromBody] results in model being null when JSON grows\" (#7334) at aspnet/Mvc","RelatedBody":"I'm having an issue where code that works without problems suddenly stops working when the POSTed JSON reaches a certain size (I haven't been able to determine the exact size due to time constraints).\r\n\r\nThe setup is a Web API with client apps POSTing JSON.\r\n\r\nThe controller method is defined as\r\n```\r\n[Route(\"Create\")]\r\n[HttpPost]\r\npublic IActionResult CreateShipment([FromBody] CreateShipmentRequest request)\r\n```\r\nThe model consists of some global info and then a list of objects for each item in a shipment. When that list consists of 20 items, everything is fine. For a larger shipment (nearly 600 items), the model is null and the ModelState is invalid.\r\n\r\nI have attached a TraceWriter to the JSON serializer but it gives me no output at all for the large shipment. So basically, nothing indicates an error or exception of some kind. It's like there is no JSON at all. Using Wireshark, I have determined that the JSON is sent to the Web API.\r\n\r\nThe strange thing is that if I add the following code to Startup.cs Configure(), it suddenly starts working for the large shipment:\r\n```\r\napp.Use(async (context, next) =>\r\n{\r\n    var requestBodyStream = new MemoryStream();\r\n    var originalRequestBody = context.Request.Body;\r\n\r\n    await context.Request.Body.CopyToAsync(requestBodyStream);\r\n    requestBodyStream.Seek(0, SeekOrigin.Begin);\r\n\r\n    context.Request.Body = requestBodyStream;\r\n\r\n    await next.Invoke();\r\n    context.Request.Body = originalRequestBody;\r\n});\r\n```\r\nI have also attached the incoming HTTP request: [request.txt](https://github.com/aspnet/Mvc/files/1702541/request.txt)"},{"Id":"7551847734","Type":"IssuesEvent","CreatedAt":"2018-04-18T21:30:49","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7345","RelatedDescription":"Closed issue \"`RazorPagesOptions.RootDirectory` is (confusingly) used for two purposes\" (#7345) at aspnet/Mvc","RelatedBody":"The `RootDirectory` option controls both the root folder for pages not in an area and the relative folder for pages within an area-specific folder. The documentation for `RootFolder` doesn't cover this though the `AllowAreas` doc comments do mention the odd `<c>/{AreaRootDirectory}/AreaName/{RootDirectory}/</c>` folder choice.\r\n\r\nFor example, after changing `RootFolder` to `/`, I needed to move all pages within the `/Pages` folder up one level. But, unexpectedly, I needed to also move `/Areas/MyArea/Pages/*.*` up to `/Areas/MyArea`.\r\n\r\nShould have a separate option for the `AreaRootDirectory`-relative folder containing area-specific pages.\r\n\r\n----\r\nOne alternative would be to remove or deprecate the `RazorPagesOptions.RootDirectory` and `RazorPagesOptions.AreaRootDirectory` properties. Then, recommend setting the formats directly in `RazorViewEngineOptions`. Could provide `RazorViewEngineOptions` extension methods to make that easier."},{"Id":"7551784742","Type":"PullRequestEvent","CreatedAt":"2018-04-18T21:17:00","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7680","RelatedDescription":"Opened pull request \"Allow PartialTagHelper to specify a null model. Fixes #7667\" (#7680) at aspnet/Mvc","RelatedBody":""},{"Id":"7551783607","Type":"PullRequestEvent","CreatedAt":"2018-04-18T21:16:45","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7670","RelatedDescription":"Merged pull request \"Allow PartialTagHelper to specify a null model. \" (#7670) at aspnet/Mvc","RelatedBody":"Fixes #7667"},{"Id":"7551780742","Type":"IssuesEvent","CreatedAt":"2018-04-18T21:16:09","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7494","RelatedDescription":"Closed issue \"Razor Pages and Filters\" (#7494) at aspnet/Mvc","RelatedBody":"Hi!\r\nI am trying to use ExceptionFilterAttribute on razor pages. It works fine on the top of PageModel:\r\n\r\n```\r\n[ApiExceptionFilter]\r\npublic class EditModel : PageModelBase\r\n```\r\n\r\nBut it doesn't work on page handler:\r\n\r\n```\r\n[ApiExceptionFilter]\r\npublic async Task<IActionResult> OnGetAsync(int id)\r\n```\r\n\r\nIs it possible to use filters on the handler level?"},{"Id":"7551734999","Type":"IssuesEvent","CreatedAt":"2018-04-18T21:06:44","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7405","RelatedDescription":"Closed issue \"Execute Razor page from Middleware\" (#7405) at aspnet/Mvc","RelatedBody":"I am planning to write a middleware that sends a razor page back to the user. the user may use get/post with all other features. The Middleware need to execute a particular razor based on some values stored in the database. I am interested to view multiple options. "}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7553229172","Type":"IssuesEvent","CreatedAt":"2018-04-19T05:07:07","Actor":"p2atran","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1763","RelatedDescription":"Opened issue \"UserManager.FindByNameAsync doesn't get roles [QUESTION]\" (#1763) at aspnet/Identity","RelatedBody":"I recently just migrated my .NET Core 1.1.4 app over to .NET Core 2. Everything builds and compiles, but my identity stuff are all messed up. When I do a call to `UserManage.FindByNameAsync(email)`, The correct user is found. However, his role count is 0.\r\n\r\nI read somewhere that Net Core 2 no longer eager/lazy loads. I'm still new to .NET Core environment and have been put in the deep end. How would I work around this to get the UserManager to work again? It used to work fine in .NET Core 1.1"},{"Id":"7551065521","Type":"IssuesEvent","CreatedAt":"2018-04-18T18:53:55","Actor":"jbagga","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1762","RelatedDescription":"Opened issue \"External login provider is not accessible when using global authorize filter\" (#1762) at aspnet/Identity","RelatedBody":"When an external login provider is configured, and a global authorize filter is applied, clicking the button to navigate to the provider (say Twitter sign in) redirects back to the current Login page.\r\n\r\nTo allow anonymous users to log in to an external provider while using a global authorize filter, the user can scaffold the `ExternalLogin.cshtml.cs` page and add the `AllowAnonymous` attribute to the `ExternalLoginModel`.\r\n\r\nPlease note, a corresponding change must also be made in aspnet/Scaffolding repo."},{"Id":"7550341310","Type":"IssuesEvent","CreatedAt":"2018-04-18T16:36:14","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1746","RelatedDescription":"Closed issue \"loop to change user\" (#1746) at aspnet/Identity","RelatedBody":"foreach (var item in list)\r\n            {\r\n                var model = new {headimgurl = \"\", nickname = \"\"};\r\n                item.WxAvatar = model.headimgurl;\r\n                item.WxName = model.nickname;\r\n                await userManager.UpdateAsync(item);\r\n            }\r\n\r\nSystem.InvalidOperationException: Invalid operation. The connection is closed.\r\n"},{"Id":"7545824261","Type":"IssuesEvent","CreatedAt":"2018-04-17T23:22:03","Actor":"mkArtakMSFT","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1737","RelatedDescription":"Closed issue \"[Preview2-Validation] Pages under Account/Manage loose the 'Title' information from ViewData\" (#1737) at aspnet/Identity","RelatedBody":"For example, when we go to `Manage` page, we should see the title of the html page to be like `Profile - <application-name>` but we only get ` - <application-name>`.\r\n\r\n@pranavkm and I debugged through this and think that the cause of this issue could be with how Identity UI uses a model type(abstract) on the view versus the actual type(implementation). Following line of code is a suspect:\r\nhttps://github.com/aspnet/Mvc/commit/7127bb5dbbb07eb325a2852ac9a91be0cf443205#diff-0901f55a5e636aeef89b9663dafcb625R171"},{"Id":"7545562789","Type":"PullRequestEvent","CreatedAt":"2018-04-17T22:07:24","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1761","RelatedDescription":"Opened pull request \"Fix build break\" (#1761) at aspnet/Identity","RelatedBody":"* Use Razor.Sdk package to not perform runtime compilation\r\n* Use Mvc with PageResult fix (https://github.com/aspnet/Mvc/issues/7665)"},{"Id":"7544351618","Type":"IssuesEvent","CreatedAt":"2018-04-17T18:10:14","Actor":"FXFernandes","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1760","RelatedDescription":"Opened issue \"ASP.NET Identity Core 2.0 - Expiration phone token\" (#1760) at aspnet/Identity","RelatedBody":"One of the methods exposed by UserManager is GenerateChangePhoneNumberTokenAsync.\r\n\r\nLooking to the code, I noticed that the method mentioned is calling Rfc6238AuthenticationService.GenerateCode. It seems to me that the lifetime of the token is hardcoded to 3 minutes as showed bellow.\r\n\r\n```\r\nprivate static readonly TimeSpan _timestep = TimeSpan.FromMinutes(3);\r\n\r\n        // More info: https://tools.ietf.org/html/rfc6238#section-4\r\n        private static ulong GetCurrentTimeStepNumber()\r\n        {\r\n            var delta = DateTime.UtcNow - _unixEpoch;\r\n            return (ulong)(delta.Ticks / _timestep.Ticks);\r\n        }\r\n\r\n        // More info: https://tools.ietf.org/html/rfc6238#section-4\r\n        private static ulong GetCurrentTimeStepNumber()\r\n        {\r\n            var delta = DateTime.UtcNow - _unixEpoch;\r\n            return (ulong)(delta.Ticks / _timestep.Ticks);\r\n        }\r\n\r\n        public static int GenerateCode(byte[] securityToken, string modifier = null)\r\n        {\r\n            if (securityToken == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(securityToken));\r\n            }\r\n\r\n            // Allow a variance of no greater than 9 minutes in either direction\r\n            var currentTimeStep = GetCurrentTimeStepNumber();\r\n            using (var hashAlgorithm = new HMACSHA1(securityToken))\r\n            {\r\n                return ComputeTotp(hashAlgorithm, currentTimeStep, modifier);\r\n            }\r\n        }\r\n```\r\n\r\nSource: https://github.com/aspnet/Identity/blob/85f8a49aef68bf9763cd9854ce1dd4a26a7c5d3c/src/Core/Rfc6238AuthenticationService.cs\r\n\r\n\r\n\r\nAm I correct? Is this the lifetime of the phone token?\r\nIf yes, since the value is hardcoded, any ideas how to change it?\r\n\r\n"},{"Id":"7543724937","Type":"IssuesEvent","CreatedAt":"2018-04-17T16:15:47","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1759","RelatedDescription":"Closed issue \"why identity use user name to login in\" (#1759) at aspnet/Identity","RelatedBody":"When I call the register code of identity to register a user, the code will update the normal name and user name same, and after I alter the user name, then re-login the system with email address, my login will fail,\r\nIt seemed identity logined by username not email, so why identity use user name to login in?"},{"Id":"7540990862","Type":"IssuesEvent","CreatedAt":"2018-04-17T08:27:27","Actor":"diymine","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1759","RelatedDescription":"Opened issue \"why identity use user name to login in\" (#1759) at aspnet/Identity","RelatedBody":"When I call the register code of identity to register a user, the code will update the normal name and user name same, and after I alter the user name, then re-login the system with email address, my login will fail,\r\nIt seemed identity logined by username not email, so why identity use user name to login in?"},{"Id":"7540965456","Type":"IssuesEvent","CreatedAt":"2018-04-17T08:22:42","Actor":"LiamDotPro","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1755","RelatedDescription":"Closed issue \"Validating a hash made in Identity Server on nodeJS / Javascript\" (#1755) at aspnet/Identity","RelatedBody":"I'm trying to write out a library that mimics the validation functionality of `identity server 3` in `nodeJS` but I'm struggling to verify the buffer generated. \r\n\r\n 1. I'm not sure why but I'm getting a different length buffer completely despite following along with what I believe is the equivalent. \r\n 2. The `pbkdf2` function being run as an async task might have different behaviour over the iterations.\r\n 3. The `pbkdf2` function might be implementing a different version of sha256 or just simply isn't hmac.\r\n 4. I've screwed up the buffer management and spiting the between the salt / subkey.\r\n 5. Copy in this sense may not be working like `blockcopy` in the aforementioned exert from `identity server 3`\r\n\r\nThough note that the hash I'm trying to verify is taken directly from `Identity Server 3` inside a separate app that was started from the `ABP boilerplate` but from my own research I don't believe they implement a custom hashing algorithm or have changed the settings. The `c#` code reference I used to convert from can be found here: \r\n\r\nhttps://github.com/aspnet/Identity/blob/rel/2.0.0/src/Microsoft.Extensions.Identity.Core/PasswordHasher.cs#L248\r\n\r\nWith some further research into the identity server 2 equivalent which uses a more mundane algorithm for checking I've noticed people reporting that they had to change the encoding, but in testing this still doesn't make it work.\r\n\r\nFurther testing using the hashpassword function contained in the class in here shows that the returned buffer is of length 61 while when verifying the decoded buffer is of size 84, sounds like some form of mismatch encoding or something where were losing bytes.\r\n\r\nBelow is my class for hashing and verifying. \r\n \r\n\r\n    import crypto from 'crypto';\r\n    import util from 'util';\r\n    \r\n    const pbkdf2Async = util.promisify(crypto.pbkdf2);\r\n    \r\n    export default class HashPasswordv3 {   \r\n    \r\n        async verifyPassword(password, hashedPassword) {\r\n    \r\n            let decodedBuffer = null;\r\n    \r\n            if (hashedPassword) {\r\n                decodedBuffer = Buffer.from(hashedPassword, 'base64');\r\n            }\r\n    \r\n            let iteration = 10000;\r\n            let key = decodedBuffer[0];\r\n            let saltLength = this.readNetworkByteOrder(decodedBuffer, 9);\r\n    \r\n            if (saltLength < 128 / 8) {\r\n                return false;\r\n            }\r\n    \r\n            let salt = new Buffer(saltLength);\r\n    \r\n            // take the salt from the stored hash in the database.\r\n            // we effectively overwrite the bytes here from our random buffer.\r\n            decodedBuffer.copy(salt, 13, 0, saltLength);\r\n    \r\n            console.log(salt);\r\n    \r\n            let subkeyLength = hashedPassword.length - 13 - saltLength;\r\n    \r\n            if (subkeyLength < 128 / 8) {\r\n                return false;\r\n            }\r\n    \r\n            let expectedSubkey = new Buffer(subkeyLength);\r\n    \r\n            decodedBuffer.copy(expectedSubkey, 0, 13 + saltLength, expectedSubkey.length);\r\n    \r\n            console.log(expectedSubkey);\r\n    \r\n            let acutalSubkey = await pbkdf2Async(password, salt, 10000, 32, 'sha256');\r\n    \r\n            console.log(acutalSubkey);\r\n    \r\n            console.log(this.areBuffersEqual(acutalSubkey, expectedSubkey));\r\n    \r\n        }\r\n    \r\n        async hashPassword(password) {\r\n    \r\n            try {\r\n                // Create a salt with cryptographically secure method.\r\n                let salt = await crypto.randomBytes(16);\r\n    \r\n                let subkey = await pbkdf2Async(password, salt, 10000, 32, 'sha256');\r\n    \r\n                let outputBytes = new Buffer(13 + salt.length + subkey.length);\r\n    \r\n                // Write in the format marker\r\n                outputBytes[0] = 0x01;\r\n    \r\n                // Write out the byte order\r\n                this.writeNetworkByteOrder(outputBytes, 1, 1);\r\n                this.writeNetworkByteOrder(outputBytes, 5, 10000);\r\n                this.writeNetworkByteOrder(outputBytes, 9, salt.length);\r\n    \r\n                salt.copy(outputBytes, 13, 0, 16);\r\n                subkey.copy(outputBytes, 13 + salt.length, 0, subkey.length);\r\n    \r\n                console.log(outputBytes.toString('base64'));\r\n    \r\n    \r\n            } catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n            }\r\n    \r\n        }\r\n    \r\n        /**\r\n         * Writes the appropriate bytes into available slots\r\n         * @param buffer\r\n         * @param offset\r\n         * @param value\r\n         */\r\n        writeNetworkByteOrder(buffer, offset, value) {\r\n            buffer[offset + 0] = value >> 0;\r\n            buffer[offset + 1] = value >> 8;\r\n            buffer[offset + 2] = value >> 16;\r\n            buffer[offset + 3] = value >> 24;\r\n        }\r\n    \r\n        /**\r\n         * Reads the bytes back out using an offset.\r\n         * @param buffer\r\n         * @param offset\r\n         * @returns {number}\r\n         */\r\n        readNetworkByteOrder(buffer, offset) {\r\n            return ((buffer[offset + 0]) << 24)\r\n                | ((buffer[offset + 1]) << 16)\r\n                | ((buffer[offset + 2]) << 8)\r\n                | ((buffer[offset + 3]));\r\n        }\r\n    \r\n        /**\r\n         * Confirms if two byte arrays are equal.\r\n         * @param a\r\n         * @param b\r\n         * @returns {boolean}\r\n         */\r\n        byteArraysEqual(a, b) {\r\n            if (Buffer.compare(a, b)) {\r\n                return true;\r\n            }\r\n    \r\n            if (a == null || b == null || a.Length !== b.Length) {\r\n                return false;\r\n            }\r\n    \r\n            let areSame = true;\r\n            for (let i = 0; i < a.Length; i++) {\r\n                areSame &= (a[i] === b[i]);\r\n            }\r\n    \r\n            return areSame;\r\n        }\r\n    \r\n\t\t/**\r\n\t\t* Checks to see if the buffers are equal when read out from uint.\r\n\t\t* @param a\r\n\t\t* @param b\r\n\t\t*/\r\n        areBuffersEqual(bufA, bufB) {\r\n            let len = bufA.length;\r\n            if (len !== bufB.length) {\r\n                return false;\r\n            }\r\n            for (let i = 0; i < len; i++) {\r\n                if (bufA.readUInt8(i) !== bufB.readUInt8(i)) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    \r\n    }\r\n\r\nThe implementation is as follows and can be used for testing:\r\n\r\n    import identityHasher from '../IdentityServer3/HashPasswordv3';\r\n    \r\n    const hasher = new identityHasher();\r\n    \r\n    let result = await hasher.verifyPassword('test', 'AQAAAAEAACcQAAAAEGKKbVuUwa4Y6qIclGpTE95X6wSw0mdwhMjXMBpAnHrjrQlHngJCgeuTf52w91UruA==');"},{"Id":"7538131267","Type":"PullRequestEvent","CreatedAt":"2018-04-16T19:17:27","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1743","RelatedDescription":"Closed pull request \"Switch to abstract user factory\" (#1743) at aspnet/Identity","RelatedBody":"Part of https://github.com/aspnet/Identity/issues/1722"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7552430386","Type":"PullRequestEvent","CreatedAt":"2018-04-19T00:14:53","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2505","RelatedDescription":"Merged pull request \"Enable xUnit diagnostic messages\" (#2505) at aspnet/KestrelHttpServer","RelatedBody":"- Required to log long-running tests\r\n- Will help investigate https://github.com/aspnet/KestrelHttpServer/issues/2503\r\n"},{"Id":"7552423445","Type":"IssuesEvent","CreatedAt":"2018-04-19T00:12:25","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2506","RelatedDescription":"Opened issue \"Test failures on Ubuntu Jenkins\" (#2506) at aspnet/KestrelHttpServer","RelatedBody":"Several tests failed on a recent Ubuntu Jenkins run.  I'm not sure if they're flaky or fail consistently on Jenkins.\r\n\r\n# RegisterAddresses_HostName_Success\r\n```\r\n16:54:35    [xUnit.net 00:00:03.7981166]     RegisterAddresses_HostName_Success [FAIL]\r\n16:54:35    Failed   RegisterAddresses_HostName_Success\r\n16:54:35  RUNDOTNET : error Message:  [/home/dotnet-bot/.dotnet/buildtools/korebuild/2.1.0-preview3-17018/KoreBuild.proj]\r\n16:54:35     System.Net.Sockets.SocketException : No such device or address\r\n16:54:35    Stack Trace:\r\n16:54:35       at Microsoft.AspNetCore.Testing.HttpClientSlim.GetSocket(Uri requestUri)\r\n16:54:35       at Microsoft.AspNetCore.Testing.HttpClientSlim.GetStream(Uri requestUri, Boolean validateCertificate)\r\n16:54:35       at Microsoft.AspNetCore.Testing.HttpClientSlim.GetStringAsync(Uri requestUri, Boolean validateCertificate)\r\n16:54:35       at Microsoft.AspNetCore.Testing.HttpClientSlim.GetStringAsync(String requestUri, Boolean validateCertificate)\r\n16:54:35       at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.AddressRegistrationTests.RegisterAddresses_Success(String addressInput, String[] testUrls, Int32 testPort) in /_/test/Kestrel.FunctionalTests/AddressRegistrationTests.cs:line 170\r\n16:54:35       at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.AddressRegistrationTests.RegisterAddresses_HostName_Success() in /_/test/Kestrel.FunctionalTests/AddressRegistrationTests.cs:line 39\r\n16:54:35    --- End of stack trace from previous location where exception was thrown ---\r\n```\r\n\r\n# ListenAnyIP_HostName_Success\r\n```\r\n16:54:37    [xUnit.net 00:00:05.9554544]     ListenAnyIP_HostName_Success [FAIL]\r\n16:54:37    Log Critical[0]: Unable to start Kestrel. System.IO.IOException: Failed to bind to address http://[::1]:46742: address already in use. ---> Microsoft.AspNetCore.Connections.AddressInUseException: Address already in use ---> System.Net.Sockets.SocketException: Address already in use\r\n16:54:37       at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, String callerName)\r\n16:54:37       at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)\r\n16:54:37       at System.Net.Sockets.Socket.Bind(EndPoint localEP)\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransport.BindAsync() in /_/src/Kestrel.Transport.Sockets/SocketTransport.cs:line 93\r\n16:54:37       --- End of inner exception stack trace ---\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransport.BindAsync() in /_/src/Kestrel.Transport.Sockets/SocketTransport.cs:line 97\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.<>c__DisplayClass22_0`1.<<StartAsync>g__OnBind|0>d.MoveNext() in /_/src/Kestrel.Core/KestrelServer.cs:line 155\r\n16:54:37    --- End of stack trace from previous location where exception was thrown ---\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 104\r\n16:54:37       --- End of inner exception stack trace ---\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 108\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.ListenOptions.BindAsync(AddressBindContext context) in /_/src/Kestrel.Core/ListenOptions.cs:line 190\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 252\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 46\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken) in /_/src/Kestrel.Core/KestrelServer.cs:line 158\r\n16:54:37    Failed   ListenAnyIP_HostName_Success\r\n16:54:37  RUNDOTNET : error Message:  [/home/dotnet-bot/.dotnet/buildtools/korebuild/2.1.0-preview3-17018/KoreBuild.proj]\r\n16:54:37     System.Net.Sockets.SocketException : No such device or address\r\n16:54:37    Stack Trace:\r\n16:54:37       at Microsoft.AspNetCore.Testing.HttpClientSlim.GetSocket(Uri requestUri)\r\n16:54:37       at Microsoft.AspNetCore.Testing.HttpClientSlim.GetStream(Uri requestUri, Boolean validateCertificate)\r\n16:54:37       at Microsoft.AspNetCore.Testing.HttpClientSlim.GetStringAsync(Uri requestUri, Boolean validateCertificate)\r\n16:54:37       at Microsoft.AspNetCore.Testing.HttpClientSlim.GetStringAsync(String requestUri, Boolean validateCertificate)\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.AddressRegistrationTests.ListenAnyIP_Success(String[] testUrls, Int32 testPort) in /_/test/Kestrel.FunctionalTests/AddressRegistrationTests.cs:line 326\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.AddressRegistrationTests.ListenAnyIP_HostName_Success() in /_/test/Kestrel.FunctionalTests/AddressRegistrationTests.cs:line 307\r\n16:54:37    --- End of stack trace from previous location where exception was thrown ---\r\n16:54:37    Log Critical[0]: Unable to start Kestrel. System.InvalidOperationException: Dynamic port binding is not supported when binding to localhost. You must either bind to 127.0.0.1:0 or [::1]:0, or both.\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions..ctor(Int32 port) in /_/src/Kestrel.Core/LocalhostListenOptions.cs:line 22\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.ParseAddress(String address, Boolean& https) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 141\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 252\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(IServerAddressesFeature addresses, KestrelServerOptions serverOptions, ILogger logger, Func`2 createBinding) in /_/src/Kestrel.Core/Internal/AddressBinder.cs:line 46\r\n16:54:37       at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServer.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken) in /_/src/Kestrel.Core/KestrelServer.cs:line 158\r\n```\r\n\r\n# Sending100ContinueDoesNotStartResponse\r\n```\r\n16:54:41    [xUnit.net 00:00:09.3892916]     Sending100ContinueDoesNotStartResponse [FAIL]\r\n16:54:42    Failed   Sending100ContinueDoesNotStartResponse\r\n16:54:42  RUNDOTNET : error Message:  [/home/dotnet-bot/.dotnet/buildtools/korebuild/2.1.0-preview3-17018/KoreBuild.proj]\r\n16:54:42     Assert.Contains() Failure\r\n16:54:42    Not found: (filter expression)\r\n16:54:42    In value:  ConcurrentQueue<LogMessage> [LogMessage { EventId = 3, Exception = null, LogLevel = Debug, Message = \"Hosting starting\" }, LogMessage { EventId = 4, Exception = null, LogLevel = Debug, Message = \"Hosting started\" }, LogMessage { EventId = 0, Exception = null, LogLevel = Debug, Message = \"Loaded hosting startup assembly Sockets.Functional\"... }, LogMessage { EventId = ConnectionStart, Exception = null, LogLevel = Debug, Message = \"Connection id \\\"0HLD5GUTSSB33\\\" started.\" }, LogMessage { EventId = 1, Exception = null, LogLevel = Information, Message = \"Request starting HTTP/1.1 POST http:///  \" }, ...]\r\n16:54:42    Stack Trace:\r\n16:54:42       at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ResponseTests.Sending100ContinueDoesNotStartResponse() in /_/test/Kestrel.FunctionalTests/ResponseTests.cs:line 1685\r\n16:54:42    --- End of stack trace from previous location where exception was thrown ---\r\n```\r\n\r\n# UpgradedConnectionsCountsAgainstDifferentLimit\r\n```\r\n16:57:17    [xUnit.net 00:00:04.4029017]     UpgradedConnectionsCountsAgainstDifferentLimit [FAIL]\r\n16:57:17    Failed   UpgradedConnectionsCountsAgainstDifferentLimit\r\n16:57:17  RUNDOTNET : error Message:  [/home/dotnet-bot/.dotnet/buildtools/korebuild/2.1.0-preview3-17018/KoreBuild.proj]\r\n16:57:17     System.IO.IOException : Expected connection close, received data instead: \"HTTP/1.1 200 OK\r\n16:57:17    Date: Wed, 18 Apr 2018 23:57:14 GMT\r\n16:57:17    Content-Length: 0\r\n16:57:17    \r\n16:57:17    \"\r\n16:57:17    Stack Trace:\r\n16:57:17       at Microsoft.AspNetCore.Testing.TaskExtensions.TimeoutAfter(Task task, TimeSpan timeout, String filePath, Int32 lineNumber)\r\n16:57:17       at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.ConnectionLimitTests.UpgradedConnectionsCountsAgainstDifferentLimit() in /_/test/Kestrel.FunctionalTests/ConnectionLimitTests.cs:line 89\r\n16:57:17    --- End of stack trace from previous location where exception was thrown ---\r\n```\r\n\r\n# UsesProvidedServerCertificateSelectorEachTime \r\n```\r\n16:57:17    [xUnit.net 00:00:04.4106802]     UsesProvidedServerCertificateSelectorEachTime [FAIL]\r\n16:57:17    Failed   UsesProvidedServerCertificateSelectorEachTime\r\n16:57:17  RUNDOTNET : error Message:  [/home/dotnet-bot/.dotnet/buildtools/korebuild/2.1.0-preview3-17018/KoreBuild.proj]\r\n16:57:17     System.IO.IOException : Unable to read data from the transport connection: Invalid argument.\r\n16:57:17    ---- System.Net.Sockets.SocketException : Invalid argument\r\n16:57:17    Stack Trace:\r\n16:57:17       at System.Net.FixedSizeReader.ReadPacketAsync(Stream transport, AsyncProtocolRequest request)\r\n16:57:17       at System.Net.Security.SslState.ThrowIfExceptional()\r\n16:57:17       at System.Net.Security.SslState.InternalEndProcessAuthentication(LazyAsyncResult lazyResult)\r\n16:57:17       at System.Net.Security.SslState.EndProcessAuthentication(IAsyncResult result)\r\n16:57:17       at System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult asyncResult)\r\n16:57:17       at System.Net.Security.SslStream.<>c.<AuthenticateAsClientAsync>b__46_2(IAsyncResult iar)\r\n16:57:17       at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n16:57:17    --- End of stack trace from previous location where exception was thrown ---\r\n16:57:17       at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.HttpsConnectionAdapterTests.UsesProvidedServerCertificateSelectorEachTime() in /_/test/Kestrel.FunctionalTests/HttpsConnectionAdapterTests.cs:line 229\r\n16:57:17    --- End of stack trace from previous location where exception was thrown ---\r\n16:57:17    ----- Inner Stack Trace -----\r\n```\r\n\r\n# AcceptsRequestWithNoContentLengthAndUpgrade \r\n```\r\n16:58:34    [xUnit.net 00:01:14.3683030]     AcceptsRequestWithNoContentLengthAndUpgrade [FAIL]\r\n16:58:34    Failed   AcceptsRequestWithNoContentLengthAndUpgrade\r\n16:58:34  RUNDOTNET : error Message:  [/home/dotnet-bot/.dotnet/buildtools/korebuild/2.1.0-preview3-17018/KoreBuild.proj]\r\n16:58:34     System.TimeoutException : The operation at /_/test/shared/TestConnection.cs:129 timed out after reaching the limit of 60000ms.\r\n16:58:34    Stack Trace:\r\n16:58:34       at Microsoft.AspNetCore.Testing.TaskExtensions.TimeoutAfter[T](Task`1 task, TimeSpan timeout, String filePath, Int32 lineNumber)\r\n16:58:34       at Microsoft.AspNetCore.Testing.TestConnection.Receive(String[] lines) in /_/test/shared/TestConnection.cs:line 131\r\n16:58:34       at Microsoft.AspNetCore.Server.Kestrel.FunctionalTests.UpgradeTests.AcceptsRequestWithNoContentLengthAndUpgrade() in /_/test/Kestrel.FunctionalTests/UpgradeTests.cs:line 190\r\n16:58:34    --- End of stack trace from previous location where exception was thrown ---\r\n```\r\n\r\nhttps://ci3.dot.net/job/aspnet_KestrelHttpServer/job/dev/job/linux-Configuration_Release_prtest/111/timestamps/?time=HH:mm:ss&appendLog&locale=en_US"},{"Id":"7552345468","Type":"PullRequestEvent","CreatedAt":"2018-04-18T23:46:11","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2505","RelatedDescription":"Opened pull request \"Enable xUnit diagnostic messages\" (#2505) at aspnet/KestrelHttpServer","RelatedBody":"- Required to log long-running tests"},{"Id":"7552302374","Type":"IssuesEvent","CreatedAt":"2018-04-18T23:32:24","Actor":"sebastienros","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2504","RelatedDescription":"Opened issue \"Perf regression on Linux SSL (ASP.NET plaintext)\" (#2504) at aspnet/KestrelHttpServer","RelatedBody":"Moving https://github.com/dotnet/corefx/issues/28830 here since nothing is showing it is because a corefx change. Now we need to investigate the same way with aspnet."},{"Id":"7551003705","Type":"IssuesEvent","CreatedAt":"2018-04-18T18:42:13","Actor":"mikeharder","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2503","RelatedDescription":"Opened issue \"Flaky Test: Hang during FunctionalTests\" (#2503) at aspnet/KestrelHttpServer","RelatedBody":"Kestrel FunctionalTests are hanging frequently on CI:\r\n\r\n# KestrelHttpServer\r\n```\r\n[17:46:18]\t[Step 4/7] Skipped RegisterAddresses_IPv6Port80_Success(addressInput: \"http://*\", testUrls: [\"http://[::1]/\"])\r\n[17:46:18]\t[Step 4/7] Skipped RegisterAddresses_IPv6Port80_Success(addressInput: \"http://[::1]\", testUrls: [\"http://[::1]/\"])\r\n[18:39:33]\t[Step 4/7] The build Projects::KestrelHttpServer #17674 {buildId=449083} has been running for more than 60 minutes. Terminating...\r\n[18:39:34]\t[Step 4/7] Execution timeout\r\n```\r\nhttp://aspnetci/viewLog.html?buildId=449083&buildTypeId=Lite_KestrelHttpServer&tab=buildLog&_focus=39538\r\n\r\n# Win2012-Kestrel\r\n```\r\n[23:37:09] :     [Step 8/9]   Skipped  RegisterAddresses_IPv6Port80_Success(addressInput: \"http://localhost\", testUrls: [\"http://127.0.0.1/\", \"http://[::1]/\"])\r\n[23:37:09] :     [Step 8/9]   Skipped  RegisterAddresses_IPv6Port80_Success(addressInput: \"http://[::1]\", testUrls: [\"http://[::1]/\"])\r\n[00:50:45]E:     [Step 8/9] The build Test::Win2012-Kestrel #2.2.0-preview1-34007 {buildId=449994} has been running for more than 120 minutes. Terminating...\r\n[00:50:45]E:     [Step 8/9] Execution timeout\r\n```\r\nhttp://aspnetci/viewLog.html?buildId=449994&tab=buildLog&buildTypeId=Lite_KestrelStressTest&logTab=tail"},{"Id":"7548650580","Type":"PullRequestEvent","CreatedAt":"2018-04-18T11:58:38","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2393","RelatedDescription":"Closed pull request \"Sockets: do 0 byte reads to avoid allocating memory for idle connections\" (#2393) at aspnet/KestrelHttpServer","RelatedBody":"Implements https://github.com/aspnet/KestrelHttpServer/issues/2334\r\n\r\nCC @davidfowl @Tratcher "},{"Id":"7548646706","Type":"PullRequestEvent","CreatedAt":"2018-04-18T11:57:51","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2502","RelatedDescription":"Opened pull request \"Sockets: do 0 byte reads to avoid allocating memory for idle connections\" (#2502) at aspnet/KestrelHttpServer","RelatedBody":"I cherry-picked 2283605b6b286ad105737547df0e6a769a90ae2d into a new branch on top of release/2.1."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7552098119","Type":"IssuesEvent","CreatedAt":"2018-04-18T22:31:49","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2248","RelatedDescription":"Closed issue \"Build server should write the process and pipe information to a file\" (#2248) at aspnet/Razor","RelatedBody":"This makes it easier to discover all the running build servers which is needed for implementing the `dotnet buildserver shutdown` command. "},{"Id":"7551969326","Type":"IssuesEvent","CreatedAt":"2018-04-18T21:58:23","Actor":"mkArtakMSFT","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2035","RelatedDescription":"Closed issue \"VS code block indent lines off by one character\" (#2035) at aspnet/Razor","RelatedBody":"Not sure if this should be opened here or on the VS feedback tracker, let me know.\r\n\r\nI'm on the latest version of everything, so VS 15.5.6, ASP.NET Core 2.0, .NET Core SDK 2.1.4. This has been a problem for months now, I don't remember exactly when it started and I couldn't find another issue here when I searched. Most indent lines in VS Razor views are off by one character, but not all of them.\r\n\r\n`if` is off by one, but the `else` is correct.\r\n![image](https://user-images.githubusercontent.com/771134/35974790-741e1e7e-0ca8-11e8-9c4f-2a37630f6b9f.png)\r\n\r\nBoth `foreach` and `for` are off.\r\n![image](https://user-images.githubusercontent.com/771134/35975161-bce116b0-0ca9-11e8-9929-6b486af3f147.png)\r\n\r\n`do`/`while` is off.\r\n![image](https://user-images.githubusercontent.com/771134/35975250-0e5d819a-0caa-11e8-8bce-adb6947b4925.png)"},{"Id":"7551796124","Type":"IssuesEvent","CreatedAt":"2018-04-18T21:19:28","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2282","RelatedDescription":"Closed issue \"Update Razor runtime package references to Microsoft.CodeAnalysis and Microsoft.CodeAnalysis.CSharp\" (#2282) at aspnet/Razor","RelatedBody":"Right now we're referencing 2.6.1, which means that runtime compilation won't work at all with C# 7.2 or 7.3 unless the user takes steps to get newer packages."},{"Id":"7551779811","Type":"IssuesEvent","CreatedAt":"2018-04-18T21:15:56","Actor":"pranavkm","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2243","RelatedDescription":"Closed issue \"Razor SDK switch issues\" (#2243) at aspnet/Razor","RelatedBody":"<EnableDefaultContentItems>false</EnableDefaultContentItems> doesn't seem to work on netcoreapp projects.\r\n\r\n1. Clone ryanbrandenburg/RazorPageLibrary\r\n2. Add `<EnableDefaultContentItems>false</EnableDefaultContentItems>` to App.csproj's propertyGroup\r\n3. Build and run the app in VS and find that it still found the views."},{"Id":"7551174843","Type":"PullRequestEvent","CreatedAt":"2018-04-18T19:15:13","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2287","RelatedDescription":"Merged pull request \"Update Roslyn version numbers\" (#2287) at aspnet/Razor","RelatedBody":"Updates the version numbers of Roslyn to match what will be available on\r\nnuget.org for our RC.\r\n\r\nFixes: #2282"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7439234583","Type":"IssuesEvent","CreatedAt":"2018-03-27T05:23:09","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7438189808","Type":"IssuesEvent","CreatedAt":"2018-03-26T23:00:08","Actor":"dvdobrovolskiy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Opened issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7416019717","Type":"IssuesEvent","CreatedAt":"2018-03-21T22:57:29","Actor":"snebjorn","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/823","RelatedDescription":"Closed issue \"Make tooling support splitting asp.net and bootstrapping in different projects (onion architecture)\" (#823) at aspnet/Tooling","RelatedBody":"I'd like to see better tooling support for a more onion architecture like solution structure.\n\nFor instance\n- Solution\n  - Core (business logic, domain model, etc)\n  - Infrastructure.EntityFramework (DAL)\n  - Presentation.ASPNET (MVC or WebApi)\n  - Bootstrapper (Program.cs and Startup.cs)\n\nSo basically I just moved Program.cs and Startup.cs to another project. This is important because according to the onion architecture Presentation.ASPNET should not have references to Entity Framework.\n\nIf I do this today I loose the \"IIS Express\" run button and I cannot publish via wed deploy in the way I'm used to. Plus a ton of other issues.\n\nWould be sweet if there was better support for this setup :)\n"},{"Id":"7381313128","Type":"IssuesEvent","CreatedAt":"2018-03-14T22:19:23","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/240","RelatedDescription":"Closed issue \"Support debugging of JS executed with EdgeJS in VS\" (#240) at aspnet/Tooling","RelatedBody":"We would like to do the server side HTML rendering with ReactJS in our ASP.NET application. This works with EdgeJS, but there is currently no way to debug the JS code in VS. \n\nIt would be nice if this would work and we wouldn't need node-inspector for this.\n\nhttps://github.com/tjanczuk/edge/issues/316\n"},{"Id":"7376247861","Type":"IssuesEvent","CreatedAt":"2018-03-14T05:33:19","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"},{"Id":"7372052889","Type":"IssuesEvent","CreatedAt":"2018-03-13T13:46:08","Actor":"TheConservativeCoder","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Opened issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7390961156","Type":"IssuesEvent","CreatedAt":"2018-03-16T14:09:54","Actor":"natemcmaster","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Closed issue \"Model binding accesses read-only properties in post-back\" (#297) at aspnet/Announcements","RelatedBody":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"986683993180590080","CreatedAt":"2018-04-18T19:12:50+00:00","UserScreenname":"aspnet","Text":"Tune in to the @PhillyDotNet user group today at 6pm ET / 3pm PT to learn more about Blazor from our MVP Chris Gome… https://t.co/D6svQPb95X","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":7,"FavoriteCount":1,"RawContent":null},{"Id":"986310111256858624","CreatedAt":"2018-04-17T18:27:09+00:00","UserScreenname":"aspnet","Text":"Blazor 0.2.0 release now available https://t.co/rFE8xvlvM3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":228,"FavoriteCount":139,"RawContent":null},{"Id":"983838325457829890","CreatedAt":"2018-04-10T22:45:10+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":6,"RawContent":null},{"Id":"983802600398049285","CreatedAt":"2018-04-10T20:23:12+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/441EI8rRQL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":10,"RawContent":null},{"Id":"981890668095332353","CreatedAt":"2018-04-05T13:45:52+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz live stream today to learn more about getting started with #ASP.NET Core. https://t.co/mkwxUOObrd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":7,"RawContent":null},{"Id":"981214732198674433","CreatedAt":"2018-04-03T16:59:56+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\n#ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/Tukk2JSsvC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":43,"FavoriteCount":16,"RawContent":null},{"Id":"981205689891803136","CreatedAt":"2018-04-03T16:24:01+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz for some #ASP.NET Core coding today, and ask questions during his live coding stream at 12:30… https://t.co/PCKhYbjIMP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":17,"FavoriteCount":9,"RawContent":null},{"Id":"980945681794809856","CreatedAt":"2018-04-02T23:10:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/lCnzHFb8x9","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":99,"FavoriteCount":56,"RawContent":null},{"Id":"979863409561812993","CreatedAt":"2018-03-30T23:30:16+00:00","UserScreenname":"aspnet","Text":"We just released some minor bug fixes to jquery-ajax-unobtrusive and jquery-validation-unobtrusive:… https://t.co/9P5vskn1i8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":13,"RawContent":null},{"Id":"978766397814710272","CreatedAt":"2018-03-27T22:51:08+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"978605317293576193","CreatedAt":"2018-03-27T12:11:03+00:00","UserScreenname":"aspnet","Text":"This will be a fun show that you won't want to miss if you're starting to lean #ASP.NET Core.  Jeff and Shayne are… https://t.co/MdzhQjXGY3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":47,"FavoriteCount":12,"RawContent":null},{"Id":"978387927041323008","CreatedAt":"2018-03-26T21:47:14+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":10,"RawContent":null},{"Id":"976910278083432449","CreatedAt":"2018-03-22T19:55:35+00:00","UserScreenname":"aspnet","Text":"Get started building .NET web apps in the browser with Blazor https://t.co/NLDaIe6hpY","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":159,"FavoriteCount":100,"RawContent":null},{"Id":"976141395114082304","CreatedAt":"2018-03-20T17:00:19+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\nThe #ASPNET Community Standup with @sshirhatti showing #aspnetcore 2.1 Improvements for IIS Hosting.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null},{"Id":"975923268740833280","CreatedAt":"2018-03-20T02:33:33+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is on Tuesday at 10 AM  Pacific / 1800 GMT. @sshirhatti will be showing… https://t.co/qlOERhEOaw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":14,"RawContent":null},{"Id":"974312682647162880","CreatedAt":"2018-03-15T15:53:40+00:00","UserScreenname":"aspnet","Text":"Watch @csharpfritz and @shanselman in this recorded video from today's LiveStream about converting an application t… https://t.co/6QP4SCXJ3S","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2018-04-19T05:30:11.3831788Z","RunDurationInMilliseconds":8799}