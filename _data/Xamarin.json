{"Data":{"Blog":{"FeedItems":[{"Title":"Easily Check Mobile Device Connectivity with Xamarin.Essentials","PublishedOn":"2019-02-12T19:06:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the best parts of a mobile device is their instant access to the internet. As a mobile app developer, it&#8217;s great to be able to pull data from the server to our apps to provide users with...","Href":"https://blog.xamarin.com/easily-check-mobile-device-connectivity-with-xamarin-essentials/","RawContent":null},{"Title":"5 Things You’ll Love in Xamarin.Forms 3.5","PublishedOn":"2019-02-06T17:22:16+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Although Valentine&#8217;s Day isn&#8217;t for a few more days, we just couldn&#8217;t wait to celebrate the love by sharing a new stable release of Xamarin.Forms &#8211; 3.5. Your engagement and...","Href":"https://blog.xamarin.com/5-things-youll-love-xamarin-forms-3-5/","RawContent":null},{"Title":"Using Existing C++ Libraries in Cross-Platform Xamarin.Forms Applications","PublishedOn":"2019-02-04T18:52:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There are many high-performance libraries primarily developed using C or C++. This article, &#8220;Use C/C++ Libraries With Xamarin&#8220;, walks through the technique of separating the concerns of...","Href":"https://blog.xamarin.com/using-c-libraries-xamarin-forms-apps/","RawContent":null},{"Title":"Mobile & .NET Developer Community Events in February","PublishedOn":"2019-02-01T17:31:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Fall in love with building your next mobile application by networking with local user groups to learn about new and exciting releases, tooling, or updates with Xamarin and .NET related technologies!...","Href":"https://blog.xamarin.com/mobile-net-developer-community-events-in-february/","RawContent":null},{"Title":"Complex UI with FastGrid for Xamarin.Forms","PublishedOn":"2019-01-30T17:56:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Slava Chernikoff (Principal Engineer at Binwell,  Microsoft MVP, Xamarin Certified Mobile Developer), Artem Tischenko (Xamarin developer at Binwell) and Kirill...","Href":"https://blog.xamarin.com/complex-ui-with-fastgrid-for-xamarin-forms/","RawContent":null},{"Title":"Android’s D8 dexer and R8 shrinker","PublishedOn":"2019-01-28T18:10:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There is quite a bit of complexity to packaging an Android application. Xamarin.Android has to run through the same build pipeline as Android apps built in Android Studio&#8211;with the addition of...","Href":"https://blog.xamarin.com/androids-d8-dexer-and-r8-shrinker/","RawContent":null},{"Title":"What’s New for Xamarin Developers in Visual Studio 2019 Preview 2","PublishedOn":"2019-01-23T20:22:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, Visual Studio 2019 Preview 2 was released and includes many improvements for mobile developers in Visual Studio. This release, we focused on key areas to make you more productive when authoring...","Href":"https://blog.xamarin.com/whats-new-for-xamarin-developers-in-visual-studio-2019-preview-2/","RawContent":null},{"Title":"Visual Studio Mobile Developer Podcast: New Year – New Pod!","PublishedOn":"2019-01-18T18:59:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Visual Studio Mobile Developer Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in mobile and cloud development. This episode includes a discussion of...","Href":"https://blog.xamarin.com/visual-studio-mobile-developer-podcast-new-year-new-pod/","RawContent":null},{"Title":"Introducing the .NET Community Standup Series","PublishedOn":"2019-01-17T16:57:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We love our amazing .NET community that is filled with amazing developers writing fantastic blogs, libraries, presentations, and pull requests every week. We are always looking for ways to highlight...","Href":"https://blog.xamarin.com/introducing-the-net-community-standup-series/","RawContent":null},{"Title":"Xamarin.Forms 3.5: A Little Bindable Love","PublishedOn":"2019-01-11T18:06:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post contributed by Andrei Nitescu, a mobile developer since 2013 and frequent contributor to Xamarin.Forms. He shares about his experiences with other developers on his blog, and...","Href":"https://blog.xamarin.com/xamarin-forms-3-5-a-little-bindable-love/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9056838052","Type":"PullRequestEvent","CreatedAt":"2019-02-13T02:05:53","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2729","RelatedDescription":"Opened pull request \"Bump to mono/mono/2018-08@b0416692\" (#2729) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/mono/mono/issues/11965\r\nFixes: https://github.com/mono/mono/issues/12831\r\nFixes: https://github.com/xamarin/xamarin-macios/issues/5363\r\nFixes: https://github.com/xamarin/xamarin-macios/issues/5381\r\n\r\nBumps to mono/corert/mono-2018-08@e229c944\r\n\r\nAdd back missing stack frames in MERP reports.\r\n\r\nFix building older runtimes with newer system Mono.\r\n(Perhaps this will fix our Linux builds?)"},{"Id":"9056817016","Type":"PullRequestEvent","CreatedAt":"2019-02-13T02:00:23","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2728","RelatedDescription":"Merged pull request \"Bump SQLite to v3.27.1\" (#2728) at xamarin/xamarin-android","RelatedBody":"Upstream changes:\r\n\r\nSQLite Release 3.27.1 On 2019-02-08\r\n\r\n Fix a bug in the query optimizer: an adverse interaction between the OR\r\n optimization and the optimization that tries to use values read directly\r\n from an expression index instead of recomputing the expression. Ticket\r\n 4e8e4857d32d401f\r\n\r\nChanges carried forward from version 3.27.0 (2019-02-07):\r\n\r\n * Added the VACUUM INTO command\r\n * Issue an SQLITE_WARNING message on the error log if a double-quoted string\r\n   literal is used.\r\n * The sqlite3_normalized_sql() interface works on any prepared statement\r\n   created using sqlite3_prepare_v2() or sqlite3_prepare_v3(). It is no longer\r\n   necessary to use sqlite3_prepare_v3() with SQLITE_PREPARE_NORMALIZE in order\r\n   to use sqlite3_normalized_sql().\r\n * Added the remove_diacritics=2 option to FTS3 and FTS5.\r\n * Added the SQLITE_PREPARE_NO_VTAB option to sqlite3_prepare_v3(). Use that\r\n   option to prevent circular references to shadow tables from causing resource\r\n   leaks.\r\n * Enhancements to the sqlite3_deserialize() interface:\r\n     * Add the SQLITE_FCNTL_SIZE_LIMIT file-control for setting an upper bound\r\n       on the size of the in-memory database created by sqlite3_deserialize. The\r\n       default upper bound is 1GiB, or whatever alternative value is specified\r\n       by sqlite3_config(SQLITE_CONFIG_MEMDB_MAXSIZE) and/or\r\n       SQLITE_MEMDB_DEFAULT_MAXSIZE.\r\n     * Honor the SQLITE_DESERIALIZE_READONLY flag, which was previously\r\n       described in the documentation, but was previously a no-op.\r\n     * Enhance the \"deserialize\" command of the TCL Interface to give it new\r\n       \"--maxsize N\" and \"--readonly BOOLEAN\" options.\r\n * Enhancements to the CLI, mostly to support testing and debugging of the SQLite library itself:\r\n     * Add support for \".open --hexdb\". The \"dbtotxt\" utility program used to\r\n       generate the text for the \"hexdb\" is added to the source tree.\r\n     * Add support for the \"--maxsize N\" option on \".open --deserialize\".\r\n     * Add the \"--memtrace\" command-line option, to show all memory allocations\r\n        and deallocations.\r\n     * Add the \".eqp trace\" option on builds with SQLITE_DEBUG, to enable\r\n       bytecode program listing with indentation and PRAGMA vdbe_trace all in one\r\n       step.\r\n     * Add the \".progress\" command for accessing the sqlite3_progress_handler()\r\n       interface.\r\n     * Add the \"--async\" option to the \".backup\" command.\r\n     * Add options \"--expanded\", \"--normalized\", \"--plain\", \"--profile\",\r\n       \"--row\", \"--stmt\", and \"--close\" to the \".trace\" command.\r\n * Increased robustness against malicious SQL that is run against a maliciously\r\n   corrupted database.\r\n\r\nBug fixes:\r\n * Do not use a partial index to do a table scan on an IN operator.\r\n * Fix the query flattener so that it works on queries that contain subqueries\r\n   that use window functions.\r\n * Ensure that ALTER TABLE modifies table and column names embedded in WITH\r\n   clauses that are part of views and triggers.\r\n * Fix a parser bug that prevented the use of parentheses around table-valued\r\n   functions.\r\n * Fix a problem with the OR optimization on indexes on expressions.\r\n * Fix a problem with the LEFT JOIN strength reduction optimization in which the\r\n   optimization was being applied inappropriately due to an IS NOT NULL\r\n   operator.\r\n * Fix the REPLACE command so that it is no longer able to sneak a NULL value\r\n   into a NOT NULL column even if the NOT NULL column has a default value of\r\n   NULL.\r\n * Fix a problem with the use of window functions used within correlated\r\n   subqueries.\r\n * Fix the ALTER TABLE RENAME COLUMN command so that it works for tables that\r\n   have redundant UNIQUE constraints.\r\n * Fix a bug that caused zeroblob values to be truncated when inserted into a\r\n   table that uses an expression index."},{"Id":"9055420005","Type":"PullRequestEvent","CreatedAt":"2019-02-12T21:04:53","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2726","RelatedDescription":"Closed pull request \"Bump to mono/mono/2018-08@b0416692\" (#2726) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/mono/mono/issues/12831\r\nFixes: https://github.com/xamarin/xamarin-macios/issues/5363\r\nFixes: https://github.com/xamarin/xamarin-macios/issues/5381"},{"Id":"9055390286","Type":"IssuesEvent","CreatedAt":"2019-02-12T20:59:58","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2700","RelatedDescription":"Closed issue \"[DevCom] No way to resolve conflict with mscorlib\" (#2700) at xamarin/xamarin-android","RelatedBody":"Developer Community issue: https://developercommunity.visualstudio.com/content/problem/356750/no-way-to-resolve-conflict-with-mscorlib.html\r\n\r\nOriginal post:\r\n\r\n```\r\nInstalled VS 15.8.7 and tried to compile my existing Xamarin Forms app after updating it to 3.3.0-pre3, but I'm having issues with Android compilation. Looks like there is some kind of version conflict with mscorlib.\r\n\r\n1>------ Rebuild All started: Project: TestClient, Configuration: Debug Any CPU ------\r\n1> Fody: Fody (version 3.2.9.0) Executing\r\n1> Fody: Searched for 'PropertyChanged'. Found: C:\\Users\\xyz.nuget\\packages\\propertychanged.fody\\2.5.13\\build..\\netclassicweaver\\PropertyChanged.Fody.dll\r\n1> Fody: Finished Fody 172ms.\r\n1>TestClient -> C:\\s\\Test\\TestClient\\TestClient\\TestClient\\bin\\Debug\\netstandard2.0\\TestClient.dll\r\n1> Fody: Skipped Verifying assembly since it is disabled in configuration\r\n2>------ Rebuild All started: Project: TestClient.Android, Configuration: Debug Any CPU ------\r\n2>C:\\s\\Test\\TestClient\\TestClient\\TestClient.Android\\FodyWeavers.xml : warning XA0101: @(Content) build action is not supported\r\n2> Fody: Fody (version 3.2.9.0) Executing\r\n2> Fody: Searched for 'PropertyChanged'. Found: C:\\Users\\xyz.nuget\\packages\\propertychanged.fody\\2.5.13\\build..\\netclassicweaver\\PropertyChanged.Fody.dll\r\n2> Fody: Finished Fody 173ms.\r\n2> TestClient.Android -> C:\\s\\Test\\TestClient\\TestClient\\TestClient.Android\\bin\\Debug\\TestClient.Android.dll\r\n2> Fody: Skipped Verifying assembly since it is disabled in configuration\r\n2> No way to resolve conflict between \"mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" and \"mscorlib, Version=2.0.5.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e\". Choosing \"mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" arbitrarily.\r\n2>COMPILETODALVIK : PARSE error :\r\n2>COMPILETODALVIK : PARSE error :\r\n2>COMPILETODALVIK : PARSE error :\r\n2>COMPILETODALVIK : PARSE error :\r\n2>COMPILETODALVIK : PARSE error : \r\n```\r\n"},{"Id":"9055337946","Type":"IssuesEvent","CreatedAt":"2019-02-12T20:51:18","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2703","RelatedDescription":"Closed issue \"[DevCom] Issue in using JNI to call activity from android AAR file\" (#2703) at xamarin/xamarin-android","RelatedBody":"Developer Community issue: https://developercommunity.visualstudio.com/content/problem/333500/issue-in-using-jni-to-call-activity-from-android-a.html\r\n\r\nOriginal post:\r\n\r\n```\r\nHi I am facing using AAR file in xamarin android project . I have added android AAR file in my xamarin android and set its build type to \"AndroidAarLibrary\" .\r\nFollowing is c# code used in xamarin to call activity that is defined in AAR file.\r\n\r\nvar clsName = Java.Lang.Class.ForName(\"com.dsphotoeditor.sdk.activity.DsPhotoEditorActivity\");\r\nvar innt = new Intent(this, clsName);\r\ninnt.SetData(inputImageUri); //Set image uri\r\ninnt.PutExtra(\"ds_photo_editor_api_key\", \"26c479d17c220131bec7b6e29e070ad89f3e6cf4\");\r\ninnt.PutExtra(\"ds_photo_editor_output_directory\", \"ds_photo_editor_sample\");\r\nStartActivityForResult(innt, DS_PHOTO_EDITOR_REQUEST_CODE);\r\n\r\nNow corresponding activity is called successfully and UI showing image editor property. But when clicking filter options in UI then it throw error and application\r\ngets closed with follwing error message:\r\n\r\nCheckJNI: method to register \"rsnScriptReduce\" not in the given class. This is slow, consider changing your RegisterNatives calls.\r\nFailed to register native method android.support.v8.renderscript.RenderScript.rsnScriptReduce(JJI[JJ[I)V in /data/app/mono.samples.jnitest-1/base.apk\r\n----- class 'Landroid/support/v8/renderscript/RenderScript;' cl=0x32c07070 -----\r\n\r\nI think some classes not included while apk generation or not accessible. Please let me know if I am doing anything or if anyone have used this approach before.\r\nThis is google drive link to corresponding xamarin project https://drive.google.com/open?id=13r5FPLhbf75ERBqJI858kubmVARitZ74\r\n\r\nLink of full log file of xamarin output : https://drive.google.com/open?id=1doDkuUR7P25TfBfGz_QHn3m_TsGQ3MNo\r\n\r\nNote:I am want to use photo-editor AAR library from https://www.dsphotoeditor.com\r\n```\r\n"},{"Id":"9055091546","Type":"PullRequestEvent","CreatedAt":"2019-02-12T20:10:00","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2728","RelatedDescription":"Opened pull request \"Bump SQLite to v3.27.1\" (#2728) at xamarin/xamarin-android","RelatedBody":"Upstream changes:\r\n\r\nSQLite Release 3.27.1 On 2019-02-08\r\n\r\n Fix a bug in the query optimizer: an adverse interaction between the OR\r\n optimization and the optimization that tries to use values read directly\r\n from an expression index instead of recomputing the expression. Ticket\r\n 4e8e4857d32d401f\r\n\r\nChanges carried forward from version 3.27.0 (2019-02-07):\r\n\r\n * Added the VACUUM INTO command\r\n * Issue an SQLITE_WARNING message on the error log if a double-quoted string\r\n   literal is used.\r\n * The sqlite3_normalized_sql() interface works on any prepared statement\r\n   created using sqlite3_prepare_v2() or sqlite3_prepare_v3(). It is no longer\r\n   necessary to use sqlite3_prepare_v3() with SQLITE_PREPARE_NORMALIZE in order\r\n   to use sqlite3_normalized_sql().\r\n * Added the remove_diacritics=2 option to FTS3 and FTS5.\r\n * Added the SQLITE_PREPARE_NO_VTAB option to sqlite3_prepare_v3(). Use that\r\n   option to prevent circular references to shadow tables from causing resource\r\n   leaks.\r\n * Enhancements to the sqlite3_deserialize() interface:\r\n     * Add the SQLITE_FCNTL_SIZE_LIMIT file-control for setting an upper bound\r\n       on the size of the in-memory database created by sqlite3_deserialize. The\r\n       default upper bound is 1GiB, or whatever alternative value is specified\r\n       by sqlite3_config(SQLITE_CONFIG_MEMDB_MAXSIZE) and/or\r\n       SQLITE_MEMDB_DEFAULT_MAXSIZE.\r\n     * Honor the SQLITE_DESERIALIZE_READONLY flag, which was previously\r\n       described in the documentation, but was previously a no-op.\r\n     * Enhance the \"deserialize\" command of the TCL Interface to give it new\r\n       \"--maxsize N\" and \"--readonly BOOLEAN\" options.\r\n * Enhancements to the CLI, mostly to support testing and debugging of the SQLite library itself:\r\n     * Add support for \".open --hexdb\". The \"dbtotxt\" utility program used to\r\n       generate the text for the \"hexdb\" is added to the source tree.\r\n     * Add support for the \"--maxsize N\" option on \".open --deserialize\".\r\n     * Add the \"--memtrace\" command-line option, to show all memory allocations\r\n        and deallocations.\r\n     * Add the \".eqp trace\" option on builds with SQLITE_DEBUG, to enable\r\n       bytecode program listing with indentation and PRAGMA vdbe_trace all in one\r\n       step.\r\n     * Add the \".progress\" command for accessing the sqlite3_progress_handler()\r\n       interface.\r\n     * Add the \"--async\" option to the \".backup\" command.\r\n     * Add options \"--expanded\", \"--normalized\", \"--plain\", \"--profile\",\r\n       \"--row\", \"--stmt\", and \"--close\" to the \".trace\" command.\r\n * Increased robustness against malicious SQL that is run against a maliciously\r\n   corrupted database.\r\n\r\nBug fixes:\r\n * Do not use a partial index to do a table scan on an IN operator.\r\n * Fix the query flattener so that it works on queries that contain subqueries\r\n   that use window functions.\r\n * Ensure that ALTER TABLE modifies table and column names embedded in WITH\r\n   clauses that are part of views and triggers.\r\n * Fix a parser bug that prevented the use of parentheses around table-valued\r\n   functions.\r\n * Fix a problem with the OR optimization on indexes on expressions.\r\n * Fix a problem with the LEFT JOIN strength reduction optimization in which the\r\n   optimization was being applied inappropriately due to an IS NOT NULL\r\n   operator.\r\n * Fix the REPLACE command so that it is no longer able to sneak a NULL value\r\n   into a NOT NULL column even if the NOT NULL column has a default value of\r\n   NULL.\r\n * Fix a problem with the use of window functions used within correlated\r\n   subqueries.\r\n * Fix the ALTER TABLE RENAME COLUMN command so that it works for tables that\r\n   have redundant UNIQUE constraints.\r\n * Fix a bug that caused zeroblob values to be truncated when inserted into a\r\n   table that uses an expression index."},{"Id":"9055089804","Type":"IssuesEvent","CreatedAt":"2019-02-12T20:09:43","Actor":"johnthiriet","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2727","RelatedDescription":"Opened issue \"Support of AppBundles\" (#2727) at xamarin/xamarin-android","RelatedBody":"Hello,\r\n\r\nAs we will soon have to support 64 bits as well as 32 bits applications ([https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html](https://android-developers.googleblog.com/2019/01/get-your-apps-ready-for-64-bit.html), the support of [Android AppBundles](https://developer.android.com/platform/technology/app-bundle/) will become more and more necessary. I know we can compile an APK per ABIs but it is nothing as convenient as AppBundles.\r\n\r\nAlso, it seems like the Play Store will support upload 500MB AppBundles ([https://android-developers.googleblog.com/2018/10/playtime-2018.html](https://android-developers.googleblog.com/2018/10/playtime-2018.html)) but this feature will maybe not be opened to traditional APKs.\r\n\r\nThe support of AppBundles will be a real game changing for us so please share any plan you have.\r\n\r\nThanks,"},{"Id":"9054371235","Type":"PullRequestEvent","CreatedAt":"2019-02-12T18:16:46","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2725","RelatedDescription":"Merged pull request \"[tests] more logging around MicrosoftNetSdkDirectory\" (#2725) at xamarin/xamarin-android","RelatedBody":"Downstream in monodroid, we have a test failure:\r\n\r\n    18:56:55   1) Failed : Xamarin.Android.Build.Tests.PackagingTest.NetStandardReferenceTest\r\n    18:56:55   Microsoft.NET.Sdk not found.\r\n    18:56:55   at Xamarin.Android.Build.Tests.PackagingTest.NetStandardReferenceTest ()\r\n\r\nWe likely introduced this in ef7a38d, but there isn't enough logging\r\nto see what went wrong. When I logged into the build machine the\r\ndirectory we are looking for looked correct.\r\n\r\nI changed `PackagingTest` to log the directory it used, and added a\r\n`Console.WriteLine` call in `Builder.cs`."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9056699541","Type":"IssuesEvent","CreatedAt":"2019-02-13T01:29:24","Actor":"BlueFire-LLC","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5225","RelatedDescription":"Opened issue \"ScrollView IsClippedToBounds=\"true\" not rendering on Android with Forms 3.3, 3.4 and 3.5\" (#5225) at xamarin/Xamarin.Forms","RelatedBody":"I'm reopening this bug since it still exists with Xamarin Forms 3.5. I've attached a sample form.\r\n\r\nIn Xamarin Forms 3.2 everything works great but starting with Forms 3.3 the first scroll page renders but subsequent pages do not. See the closed bug for screenshots.\r\n\r\nWhen setting IsClippedToBound off, the pages render but overlay the buttons.\r\n\r\nThis only applies to Android. My iOS and Windows 10 projects render correctly.\r\n\r\n[BugTest.zip](https://github.com/xamarin/Xamarin.Forms/files/2858420/BugTest.zip)\r\n\r\n"},{"Id":"9056630653","Type":"IssuesEvent","CreatedAt":"2019-02-13T01:11:44","Actor":"daveclarke","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5224","RelatedDescription":"Opened issue \"Attribute \"closeIcon\" has already been defined\" (#5224) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nWhen upgrading to Xamarin.Forms 3.5 (which installs dependency Xamarin.Android.Support.* 28.0.0.1) can no longer build Droid project\r\n\r\n### Steps to Reproduce\r\n\r\n1. Upgrade Droid project to Xamarin.Forms 3.5\r\n2. Rebuild project\r\n3. Build fails with 3 errors in values.xml: Attribute \"closeIcon\" (\"icon\", \"iconTint\") has already been defined\r\n\r\n### Expected Behavior\r\nProject successfully builds following upgrade\r\n\r\n### Actual Behavior\r\nProject fails to build with errors\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.5.0.129452\r\n- Last known good version: 3.4.0.1008975\r\n- IDE: Visual Studio for Mac 7.7.4\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: SDK Platform 28 \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9056523773","Type":"PullRequestEvent","CreatedAt":"2019-02-13T00:44:14","Actor":"AndreiMisiukevich","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5223","RelatedDescription":"Opened pull request \"[iOS] Frame.CornerRadius faulty\" (#5223) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nPrevent setting corner radius greater than Width/Height (As described in original issue)\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #5199\r\n\r\n### API Changes ###\r\nNone\r\n\r\n### Platforms Affected ### \r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\nNo \"broken\" shapes\r\n\r\n### Before/After Screenshots ### \r\n**BEFORE:**\r\n\r\n<img width=\"237\" alt=\"before1\" src=\"https://user-images.githubusercontent.com/10124814/52678026-4d6ed680-2f41-11e9-9dbf-d35d8a026a3b.png\">\r\n<img width=\"259\" alt=\"before2\" src=\"https://user-images.githubusercontent.com/10124814/52678027-4d6ed680-2f41-11e9-91dc-63c0fc87d945.png\">\r\n\r\n\r\n**AFTER:**\r\n<img width=\"227\" alt=\"after1\" src=\"https://user-images.githubusercontent.com/10124814/52678032-519af400-2f41-11e9-9206-fddb0ec148a4.png\">\r\n<img width=\"229\" alt=\"after2\" src=\"https://user-images.githubusercontent.com/10124814/52678033-519af400-2f41-11e9-9ca0-e4f65b988e52.png\">\r\n\r\n### Testing Procedure ###\r\nSmall code snippet for testing\r\n\r\n```csharp\r\nMainPage = new ContentPage\r\n{\r\n\tContent = new StackLayout\r\n\t{\r\n\t\tChildren =\r\n\t\t{\r\n\t\t\tnew Frame\r\n\t\t\t{\r\n\t\t\t\tVerticalOptions = LayoutOptions.CenterAndExpand,\r\n\t\t\t\tHorizontalOptions = LayoutOptions.CenterAndExpand,\r\n\t\t\t\tWidthRequest = 100,\r\n\t\t\t\tHeightRequest = 100,\r\n\t\t\t\tCornerRadius = 100,\r\n\t\t\t\tBackgroundColor = Color.Red,\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n```\r\n\r\n"},{"Id":"9055975368","Type":"PullRequestEvent","CreatedAt":"2019-02-12T22:40:46","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5222","RelatedDescription":"Opened pull request \"[iOS] Fix ViewRenderer dispose\" (#5222) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nRevert change introduced on #4607 \r\n\r\n### Issues Resolved ### \r\n\r\n- fixes failing tests on IOS\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard"},{"Id":"9055193573","Type":"PullRequestEvent","CreatedAt":"2019-02-12T20:27:01","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5181","RelatedDescription":"Merged pull request \"Reinstate and obsolete IPlatform, et al\" (#5181) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nReinstate and obsolete various internals that were modified in 3.5.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes https://github.com/xamarin/Xamarin.Forms/pull/4235#issuecomment-461511061\r\n\r\n### API Changes ###\r\n\r\nThis, but in reverse: https://github.com/xamarin/Xamarin.Forms/pull/4235#issuecomment-461689943\r\n \r\n### Platforms Affected ### \r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n"},{"Id":"9055130428","Type":"PullRequestEvent","CreatedAt":"2019-02-12T20:16:30","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4953","RelatedDescription":"Closed pull request \"Makes iOS ImageButton opaque when pressed\" (#4953) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nMakes iOS ImageButton opaque when pressed.\r\n\r\n### Issues Resolved ### \r\n- fixes #4947 \r\n### Platforms Affected ### \r\n- iOS\r\n### Testing\r\nUse update `.create-nuget.bat` to create private nuget to run AllLittleThings sample.\r\n### Before/After Screenshots ### \r\n![image](https://user-images.githubusercontent.com/4120386/50999059-65c87d00-14cd-11e9-8d5f-b7ce8331dc62.png)\r\n\r\n\r\n"},{"Id":"9055124738","Type":"IssuesEvent","CreatedAt":"2019-02-12T20:15:33","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4947","RelatedDescription":"Closed issue \"[iOS] ImageButton is half transparent when pressed\" (#4947) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nOn iOS, when ImageButton is in pressed state it's translucent. It should behave like on other platforms, and have a solid color.\r\n\r\nMy workaround (and probably fix):\r\nSet UIButtonType to Custom\r\nSet AdjustsImageWhenHighlighted to false\r\n\r\nCode:\r\n```\r\nusing Gemini.Changes.iOS.Renderers;\r\nusing UIKit;\r\nusing Xamarin.Forms;\r\nusing Xamarin.Forms.Platform.iOS;\r\n\r\n[assembly: ExportRenderer(typeof(ImageButton), typeof(CustomImageButtonRenderer))]\r\nnamespace Gemini.Changes.iOS.Renderers\r\n{\r\n    public class CustomImageButtonRenderer : ImageButtonRenderer\r\n    {\r\n        protected override void OnElementChanged(ElementChangedEventArgs<ImageButton> e)\r\n        {\r\n            if (Control == null)\r\n            {\r\n                SetNativeControl(UIButton.FromType(UIButtonType.Custom));\r\n                Control.AdjustsImageWhenHighlighted = false;\r\n            }\r\n\r\n            base.OnElementChanged(e);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. Use any ImageButton (for  example from https://github.com/davidortinau/TheLittleThingsPlayground)\r\n2. Press ImageButton on iOS\r\n3. \r\n\r\n### Expected Behavior\r\nButton should be smaller, but color should stay the same\r\n\r\n### Actual Behavior\r\nButton is half transparent\r\n\r\n### Basic Information\r\n- Version with issue: 3.4.0.1009999, 3.4.0.1009999\r\n- Last known good version:\r\n- IDE: Visual Studio 15.9.4\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  12.1\r\n- Affected Devices: iPhone\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9057306294","Type":"PullRequestEvent","CreatedAt":"2019-02-13T04:18:58","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5602","RelatedDescription":"Opened pull request \"[AppKit] Add NullAllowed attribute to NSScrollView.DocumentView\" (#5602) at xamarin/xamarin-macios","RelatedBody":"Fixes #5601"},{"Id":"9055863701","Type":"IssuesEvent","CreatedAt":"2019-02-12T22:20:11","Actor":"filipnavara","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5601","RelatedDescription":"Opened issue \"NSScrollView.DefaultView binding\" (#5601) at xamarin/xamarin-macios","RelatedBody":"According to [the Apple documentation](https://developer.apple.com/documentation/appkit/nsscrollview/1403485-documentview) a `null` value is allowed for the `NSScrollView.DefaultView` property. The Xamarin binding currently doesn't allow that. Similarly, the [Objective C documentation]( https://developer.apple.com/documentation/appkit/nsscrollview/1403485-documentview?language=objc) for the same property specifies that it keeps a strong reference, so adding `ArgumentSemantic.Retain` to the binding may be in order as well.\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Community 2019 Preview for Mac ===\r\n\r\nVersion 8.0 Preview (8.0 build 869)\r\nInstallation UUID: ebeb14bc-0f3c-41a4-a2c9-28a67ba018a5\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.0.0.0 ( / b40230c0)\r\n\r\n\tPackage version: 518000245\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.18.0.245 (2018-08/b0c4390d608) (64-bit)\r\n\tPackage version: 518000245\r\n\r\n=== Xamarin Designer ===\r\n\r\nVersion: 4.17.1.189\r\nHash: 0e3953bd9\r\nBranch: remotes/origin/d16-0-p1\r\nBuild date: 2018-11-07 13:21:06 UTC\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.7.0.5148\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.6\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.500/Sdks\r\nSDK Versions:\r\n\t2.1.500\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.18.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.9\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 8\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.1.103.7 (Visual Studio Community)\r\nAndroid SDK: /Users/filipnavara/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.1 (API level 25)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 27.0.1\r\nSDK Build Tools Version: 27.0.3\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: /Users/filipnavara/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.9\r\n1.8.0-9\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 1.2.0.1\r\nHash: 99d7ff4\r\nBranch: remotes/origin/d16-0-p2~1\r\nBuild date: 2018-12-03 21:56:10 UTC\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.6.0.10 (Visual Studio Community)\r\nHash: d9df1c90c\r\nBranch: d16-0\r\nBuild date: 2019-01-03 20:18:22-0500\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.6.0.10 (Visual Studio Community)\r\nHash: d9df1c90c\r\nBranch: d16-0\r\nBuild date: 2019-01-03 20:18:21-0500\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 800000869\r\nGit revision: 3c7c96b41ce6b823bf58bb89bda695448ccc97f5\r\nBuild date: 2018-12-03 21:59:44+00\r\nBuild branch: release-8.0\r\nXamarin extensions: 87c82bbb37a91ff539738267c414f0d6db88392c\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.2\r\nDarwin 18.2.0 Darwin Kernel Version 18.2.0\r\n    Mon Nov 12 20:24:31 PST 2018\r\n    root:xnu-4903.231.4~1/RELEASE_X86_64 x86_64\r\n```\r\n"},{"Id":"9054767926","Type":"PullRequestEvent","CreatedAt":"2019-02-12T19:18:42","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5586","RelatedDescription":"Merged pull request \"[d16-0] Bump maccore to get mlaunch fix.\" (#5586) at xamarin/xamarin-macios","RelatedBody":"Commit list for xamarin/maccore:\n\n* xamarin/maccore@584c5d496b Bump maciostools. (#1427)\n\nDiff: https://github.com/xamarin/maccore/compare/49a7f01ced17598cda76200db25a318712311aa0...584c5d496ba1337bb2f16bbd2568d4c5941e09d7"},{"Id":"9054767482","Type":"PullRequestEvent","CreatedAt":"2019-02-12T19:18:38","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5585","RelatedDescription":"Merged pull request \"[d15-9] Bump maccore to get mlaunch fix.\" (#5585) at xamarin/xamarin-macios","RelatedBody":"Commit list for xamarin/maccore:\n\n* xamarin/maccore@daf2168c04 Bump maciostools. (#1426)\n\nDiff: https://github.com/xamarin/maccore/compare/d68bc9500a040891da1faf1204ba2ef94870f28e...daf2168c04e86d7343ed81e62c606fd89198aa1c"},{"Id":"9054516752","Type":"PullRequestEvent","CreatedAt":"2019-02-12T18:39:41","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5600","RelatedDescription":"Opened pull request \"Bump mono to head of 2018-08\" (#5600) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\n\n* mono/mono@b0416692580 [ci] Bump bockbuild to get fontconfig download url fix\n* mono/mono@d2e33f5f5c7 [2018-08] [interp] Add method to seq_points table after we finish registering it (#12906)\n* mono/mono@32f1873983d [interp] Fix ldelema (#12930)\n* mono/mono@bbf2394619a [ci] Support building the OSX .pkg on private Jenkins\n* mono/mono@98810acba19 [runtime] Fix building older runtimes with newer system Mono (#12574)\n* mono/mono@d946a250793 [2018-08] [runtime] Fix mono_pe_file_map logging (#12897)\n* mono/mono@4d2b7f8b01b Merge pull request #12858 from monojenkins/backport-pr-12856-to-2018-08\n* mono/mono@89fe6abeef7 [arm64] encode offset within stack slot for r4 in gsharedvt descriptor (#12885)\n* mono/mono@9d21a2bb159 [Registry] Prevent crash due to background thread facing problems in the file system\n\nDiff: https://github.com/mono/mono/compare/163f45d81ced56e0d359f35564ed217e9c0b00de...b0416692580d0d18fe7c87497d45e8c7398d085e"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1095445655076700162","CreatedAt":"2019-02-12T22:12:51+00:00","UserScreenname":"xamarinhq","Text":"To provide the best user experience we need access to the current network state of our users’ devices.\n\n...new from… https://t.co/w2ZGMgKqli","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":25,"FavoriteCount":17,"RawContent":null},{"Id":"1093221405917937670","CreatedAt":"2019-02-06T18:54:28+00:00","UserScreenname":"xamarinhq","Text":"Every month we survey &amp; interview our Xamarin devs, listening to your firsthand stories. Why? To make #Xamarin bett… https://t.co/Gwc32YD8qG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":93,"FavoriteCount":40,"RawContent":null},{"Id":"1093196382901547008","CreatedAt":"2019-02-06T17:15:02+00:00","UserScreenname":"xamarinhq","Text":"On a recent #XamarinShow, Mike Parker from the Microsoft Mobile Customer Advisory Team that shows us how to easily… https://t.co/jdjf2oZXwI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":47,"FavoriteCount":16,"RawContent":null},{"Id":"1092542167078326279","CreatedAt":"2019-02-04T21:55:25+00:00","UserScreenname":"xamarinhq","Text":"Walk through some techniques for separating the concerns of dev'ing a C/C++ library, a C# wrapper, &amp; a mobile app s… https://t.co/W1RmRSHzXZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":70,"FavoriteCount":35,"RawContent":null},{"Id":"1091455153868296201","CreatedAt":"2019-02-01T21:56:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing .NET Foundation Open Membership. We're making some big changes to expand the #dotNET Foundation. We’re i… https://t.co/iePYJUdean","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":68,"FavoriteCount":39,"RawContent":null},{"Id":"1091387761297362944","CreatedAt":"2019-02-01T17:28:13+00:00","UserScreenname":"xamarinhq","Text":"There's a new Xamarin.Essentials out. Today, @JamesMontemagno highlights API of the Week, App Information; which gi… https://t.co/WlU6hQHbNl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":65,"FavoriteCount":22,"RawContent":null},{"Id":"1090678537491808256","CreatedAt":"2019-01-30T18:30:01+00:00","UserScreenname":"xamarinhq","Text":"Check out this super-interesting use-case for creating complex UI using FastGrid for Xamarin.Forms with many cell v… https://t.co/SNff8XhdJ3","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":97,"FavoriteCount":42,"RawContent":null},{"Id":"1089964090339049472","CreatedAt":"2019-01-28T19:11:04+00:00","UserScreenname":"xamarinhq","Text":"Finding it a bit complex packaging your Xamarin. Android application? Here's some excellent info about Android’s D8… https://t.co/1qhLDuX3m6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":70,"FavoriteCount":28,"RawContent":null},{"Id":"1088179823762161664","CreatedAt":"2019-01-23T21:01:02+00:00","UserScreenname":"xamarinhq","Text":"Just released: #VS2019 Preview 2 which includes tons of improvements for mobile devs to make you more productive wh… https://t.co/j4LgiuYkgc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":155,"FavoriteCount":74,"RawContent":null},{"Id":"1086352280604065792","CreatedAt":"2019-01-18T19:59:01+00:00","UserScreenname":"xamarinhq","Text":"New Year – New podcast. Now on the Visual Studio Mobile Developer Podcast: Office Hours, Hockey App moving to… https://t.co/QtObsRI6av","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":20,"RawContent":null},{"Id":"1085961073902129152","CreatedAt":"2019-01-17T18:04:30+00:00","UserScreenname":"xamarinhq","Text":"As the .NET community expands so should the community standups... We are pleased to introduce the expansion of the… https://t.co/EDO0vChQlR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":22,"RawContent":null},{"Id":"1083829954515750923","CreatedAt":"2019-01-11T20:56:12+00:00","UserScreenname":"xamarinhq","Text":"...just posted on the Xamarin Blog, Andrei Nitescu shares one of his contributions to Xamarin.Forms, the bindable l… https://t.co/rp3eVPLbYl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":104,"FavoriteCount":45,"RawContent":null},{"Id":"1083399709526503424","CreatedAt":"2019-01-10T16:26:34+00:00","UserScreenname":"xamarinhq","Text":"Our very first Mobile .NET #CommunityStandup will be live in about 30 minutes at 9am Pacific! @maddyleger1,… https://t.co/vmFHIKZTIt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":19,"RawContent":null},{"Id":"1080559862642282502","CreatedAt":"2019-01-02T20:22:01+00:00","UserScreenname":"xamarinhq","Text":"It’s a new year with tons of new and awesome Xamarin and .NET Community events coming this month. Get the full list… https://t.co/ZOykEyCRBN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":22,"RawContent":null},{"Id":"1075783769876033536","CreatedAt":"2018-12-20T16:03:32+00:00","UserScreenname":"xamarinhq","Text":"Introducing Xamarin.Essentials, a new library that abstracts native APIs into a set of cross-platform APIs giving y… https://t.co/EMM97iFY9o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":270,"FavoriteCount":119,"RawContent":null},{"Id":"1072256672498966533","CreatedAt":"2018-12-10T22:28:06+00:00","UserScreenname":"xamarinhq","Text":"CarouselView is Here! Xamarin.Forms 4.0 now includes an entirely new point of view. ...as part of the upcoming rele… https://t.co/Vh8UMRM4ez","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":153,"FavoriteCount":69,"RawContent":null},{"Id":"1070425707770195968","CreatedAt":"2018-12-05T21:12:30+00:00","UserScreenname":"xamarinhq","Text":"Yesterday at Microsoft Connect(); 2018 we announced our plans &amp; preview for Xamarin.Forms 4.0. This post will give… https://t.co/oNXLJGsrQ8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":144,"FavoriteCount":74,"RawContent":null},{"Id":"1070075277101944833","CreatedAt":"2018-12-04T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"Today, at #MSFTConnect 2018, we have several exciting announcements about brand new capabilities and foundational i… https://t.co/olEK9QjR1j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":38,"RawContent":null}]}},"RunOn":"2019-02-13T05:31:07.9295217Z","RunDurationInMilliseconds":2511}