{"Data":{"Blog":{"FeedItems":[{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null},{"Title":"Introducing signed package submissions to NuGet.org","PublishedOn":"2018-05-22T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In September 2017, we announced our plans to improve the security of the NuGet ecosystem by introducing the ability for package authors to sign packages. Today, we want to announce support for any...","Href":"https://devblogs.microsoft.com/nuget/introducing-signed-package-submissions/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10313412186","Type":"PullRequestEvent","CreatedAt":"2019-08-29T22:42:57","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7497","RelatedDescription":"Opened pull request \"Use POST for admin actions\" (#7497) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2679"},{"Id":"10311492923","Type":"IssuesEvent","CreatedAt":"2019-08-29T17:30:17","Actor":"ermshiperete","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7496","RelatedDescription":"Opened issue \"Search API doesn't find package\" (#7496) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nI try to use the query API to get information about the `SIL.Windows.Forms` nuget package. This works for other packages, but `SIL.Windows.Forms` returns nothing.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n\r\n    curl 'https://api-v2v3search-0.nuget.org/query?q=packageid:SIL.Windows.Forms'\r\n\r\n### Expected behavior\r\n\r\nOutput similar to the output that I get when I run\r\n\r\n```\r\ncurl 'https://api-v2v3search-0.nuget.org/query?q=packageid:SIL.Windows.Forms.WritingSystems'\r\n\r\n{\r\n  \"@context\": {\r\n    \"@vocab\": \"http://schema.nuget.org/schema#\",\r\n    \"@base\": \"https://api.nuget.org/v3/registration3/\"\r\n  },\r\n  \"totalHits\": 1,\r\n  \"lastReopen\": \"2019-08-29T17:22:58.0949519Z\",\r\n  \"index\": \"v3-lucene2-v2v3-20171018\",\r\n  \"data\": [\r\n    {\r\n      \"@id\": \"https://api.nuget.org/v3/registration3/sil.windows.forms.writingsystems/index.json\",\r\n      \"@type\": \"Package\",\r\n      \"registration\": \"https://api.nuget.org/v3/registration3/sil.windows.forms.writingsystems/index.json\",\r\n      \"id\": \"SIL.Windows.Forms.WritingSystems\",\r\n      \"version\": \"7.0.0\",\r\n      \"description\": \"SIL.Windows.Forms.WritingSystems contains Windows Forms UI elements for displaying and editing writing systems as defined by the SIL.WritingSystems assembly.\",\r\n      \"summary\": \"\",\r\n      \"title\": \"SIL.Windows.Forms.WritingSystems\",\r\n      \"licenseUrl\": \"https://www.nuget.org/packages/SIL.Windows.Forms.WritingSystems/7.0.0/license\",\r\n      \"projectUrl\": \"https://github.com/sillsdev/libpalaso\",\r\n      \"tags\": [],\r\n      \"authors\": [\"SIL International\"],\r\n      \"totalDownloads\": 1494,\r\n      \"verified\": false,\r\n      \"versions\": [\r\n        {\r\n          \"version\": \"7.0.0\",\r\n          \"downloads\": 0,\r\n          \"@id\": \"https://api.nuget.org/v3/registration3/sil.windows.forms.writingsystems/7.0.0.json\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n### Actual output\r\n\r\nInstead of the expected output I get:\r\n\r\n```\r\ncurl 'https://api-v2v3search-0.nuget.org/query?q=packageid:SIL.Windows.Forms'\r\n\r\n{\r\n  \"@context\": {\r\n    \"@vocab\": \"http://schema.nuget.org/schema#\",\r\n    \"@base\": \"https://api.nuget.org/v3/registration3/\"\r\n  },\r\n  \"totalHits\": 0,\r\n  \"lastReopen\": \"2019-08-29T17:27:55.1699468Z\",\r\n  \"index\": \"v3-lucene2-v2v3-20171018\",\r\n  \"data\": []\r\n}\r\n```\r\n"},{"Id":"10311248789","Type":"IssuesEvent","CreatedAt":"2019-08-29T16:53:56","Actor":"anangaur","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7495","RelatedDescription":"Opened issue \"Deprecating package on nuget.org jumps to the package details page after completing deprecation\" (#7495) at NuGet/NuGetGallery","RelatedBody":"Related Epic issue: #6697 \r\n\r\n### Describe the bug\r\nDeprecating package on nuget.org jumps to the package details page after completing deprecation\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Go to package `Manage`\\`Deprecation`\r\n2. Deprecate one or more version of the package\r\n3. Click on `Save`\r\n\r\n### Expected behavior\r\nPackage deprecation should finish. Have a banner stating the versions that were deprecated on the `Manage` page.\r\n\r\n### Actual behavior\r\nUpon `Save`, I am redirected to the package details page."},{"Id":"10311079267","Type":"PullRequestEvent","CreatedAt":"2019-08-29T16:29:23","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7488","RelatedDescription":"Merged pull request \"Add tracing to CSRF test and exclude non-actions\" (#7488) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2679\r\n\r\nThis helps debugging and makes the test more maintainable."},{"Id":"10311075902","Type":"PullRequestEvent","CreatedAt":"2019-08-29T16:28:55","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7493","RelatedDescription":"Merged pull request \"Make log off operation only accept POST\" (#7493) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/2679\r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10313066342","Type":"IssuesEvent","CreatedAt":"2019-08-29T21:31:16","Actor":"KirillOsenkov","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8529","RelatedDescription":"Opened issue \"Display which package source contains the package\" (#8529) at NuGet/Home","RelatedBody":"NuGet product used: NuGet.exe 5.1.0\r\n\r\nI currently use `nuget list FooPackage -ConfigFile nuget.config` to see whether the source specified in the nuget.config contain the `FooPackage`. In the case of success however it doesn't tell me which source contained the package.\r\n\r\nIt would be super helpful to determine which source from the list NuGet found the package in."},{"Id":"10312959487","Type":"IssuesEvent","CreatedAt":"2019-08-29T21:13:00","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8268","RelatedDescription":"Closed issue \"Insert NuGet 5.2.0.6067 into VS 16.2\" (#8268) at NuGet/Home","RelatedBody":"## Insert build 5.2.0.6067 for insertion into VS 16.2\r\n- [x] Validate tests\r\n- [x] Validate perf - https://devdiv.visualstudio.com/DevDiv/_build/results?releaseId=0&environmentId=1739355&extensionId=ms.vss-test-web.test-result-in-release-environment-editor-tab&_a=release-environment-extension\r\n- [x] Vendor validation - validated on top of d16.2stg 29027.113\r\n- [x] verify \"VsTargetBranch\" in buildinfo.json on ddfiles for that  build -- yes it is:  \"lab/d16.2stg\",\r\n- [x] verify cli/sdk branches to insert into:\r\n- \"CliTargetBranches\":  \"release/2.2.4xx;release/2.1.8xx;release/3.0.1xx\",\r\n- \"SdkTargetBranches\":  \"release/2.2.4xx;release/2.1.8xx;release/3.0.1xx\",\r\n- [x] confirm new build has a different assembly version (run ildasm on nuget.frameworks.dll) -- current VS 16.2stg build is 5.2.0.2. 5.2.0.6067 has 5.2.0.3.\r\n- [x] Submit insertion bug [939737](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/939737) for approval\r\n- [x] merge VS Insertion PR [189144](https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/189144?_a=overview)\r\n\r\n## Post VS insertion insertions\r\n- [x] SDK - https://github.com/dotnet/sdk/pull/3370 https://github.com/dotnet/sdk/pull/3371 https://github.com/dotnet/sdk/pull/3372\r\n- [x] CLI - https://github.com/dotnet/cli/pull/11658 https://github.com/dotnet/cli/pull/11659 https://github.com/dotnet/cli/pull/11660\r\n- [x] Toolset - https://github.com/dotnet/toolset/pull/1323\r\n- [ ] Mono\r\n- [ ] VS4Mac\r\n- [x] increment assembly version in case we need to insert again."},{"Id":"10312954192","Type":"IssuesEvent","CreatedAt":"2019-08-29T21:12:08","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8094","RelatedDescription":"Closed issue \"4.9.x / Visual Studio 15.9.x servicing considerations\" (#8094) at NuGet/Home","RelatedBody":"A list of issues to be considered for servicing in 15.9.x \r\n\r\nBugs: \r\n- [ ] https://github.com/NuGet/Home/issues/8019 - Packages Lock File - regenerate lock file when project graph changes\r\n* Original release version: 5.1\r\n* Other reports: \r\n- [ ] https://github.com/NuGet/Home/issues/7930 - Lock file not updating when package references removed\r\n* Original release version 5.1\r\n* Other reports: https://github.com/NuGet/Home/issues/8091\r\n- [ ] https://github.com/NuGet/Home/issues/7889 - RestoreLockedMode - Unexpected NU1004 when ProjectReference refers to a project with custom AssemblyName.\r\n* Original release version: 5.1\r\nOther reports:\r\n\r\nFeatures: \r\n- [ ] https://github.com/NuGet/Home/issues/7961 - Build Assets Transitive for VS 2017 / NuGet 4.x\r\n* Original release version 5.0\r\n* Other reports: Original issue, https://github.com/NuGet/Home/issues/6091. "},{"Id":"10312948172","Type":"IssuesEvent","CreatedAt":"2019-08-29T21:11:08","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8310","RelatedDescription":"Closed issue \"5.2 Release logistics\" (#8310) at NuGet/Home","RelatedBody":"[ ] Release notes draft\n..."},{"Id":"10312947029","Type":"IssuesEvent","CreatedAt":"2019-08-29T21:10:57","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7953","RelatedDescription":"Closed issue \"Consider publishing NuGet.mssign.exe\" (#7953) at NuGet/Home","RelatedBody":"Analyze 5.0 signing changes to determine if there is a new to upgrade consumers of NuGet.mssign.exe\r\n\r\n/cc: @dtivel @rido-min "},{"Id":"10312935219","Type":"IssuesEvent","CreatedAt":"2019-08-29T21:09:02","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/7937","RelatedDescription":"Closed issue \"Dashboard investement - repo, more\" (#7937) at NuGet/Home","RelatedBody":"Get dashboards checked in and organized in repo.\nResearch what other teams are doing to save reports and summary data."},{"Id":"10312932044","Type":"IssuesEvent","CreatedAt":"2019-08-29T21:08:31","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8485","RelatedDescription":"Closed issue \"Insert NuGet client build into VS16.3\" (#8485) at NuGet/Home","RelatedBody":"** Prepare Build Metadata ** -- https://github.com/NuGet/NuGet.Client/pull/3020\r\n- [x] Increment NetCoreAssemblyBuildNumber\r\n- [x] Change release label to \"rtm\" (as we may have 0 more insertions (??)\r\n\r\n** Pick Build & Ensure Green **\r\n\r\n| Candidate Build       | Description | Tests    | Vendor Pass    | Perf (RPS) |\r\n| --- | --- | --- | --- | --- |\r\n| 6192 | Exception in install tab |    | none yet |   |\r\n| 6190 | Embedded Icons |    | none yet |   |\r\n| 6189 | NGen pri 3 |    |  https://github.com/nuget/home/issues/8483   |  RPS results pending  |\r\n| 6187 | | |  | rps infra failed | \r\n| 6185 | | |  | [green](https://devdiv.visualstudio.com/DevDiv/_releaseProgress?releaseId=425719&_a=release-environment-logs&environmentId=2054217) | \r\n| 6182 | Ensure PackagePathResolver Root & CPS Feed Change | | https://github.com/nuget/home/issues/8483 | | \r\n| 6180 | | | green | | \r\n| 6176 | | | green | | \r\n| 6175 | | | green | | \r\n\r\n** Insertion mechanics **\r\n\r\n- [x] Create Insertion Bug - https://devdiv.visualstudio.com/DevDiv/_workitems/edit/972441\r\n- [x] Create VS insertion PR - https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/198865\r\n- [x] Create CLI insertion PR(s)\r\nSDK: https://github.com/dotnet/sdk/pull/3571\r\nToolset: https://github.com/dotnet/toolset/pull/2376\r\nCLI: https://github.com/dotnet/cli/pull/12352\r\n\r\n- [x] add change log since last insertion\r\n- [x] Get necessary approval of insertion bug\r\n- [x] Shepherd the VS PR\r\n- [x] Shepherd the CLI PR\r\n- [x] Verify that NetCore SDK containing this fix was merged into VS 16.3 p3\r\nsdk v 3.0.100-preview9-014004 is installed with VS 16.3-preview 3 latest build"},{"Id":"10311486402","Type":"IssuesEvent","CreatedAt":"2019-08-29T17:29:18","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8528","RelatedDescription":"Opened issue \"Plugin:  \"A task was canceled\"\" (#8528) at NuGet/Home","RelatedBody":"There's a report of \"A task was canceled.\" error on NuGet 5.2.x.  The root cause is unknown."},{"Id":"10311097144","Type":"IssuesEvent","CreatedAt":"2019-08-29T16:31:54","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8527","RelatedDescription":"Opened issue \"[PerfWatson] UIDelay: nuget.packagemanagement.visualstudio.dll!NuGet.PackageManagement.VisualStudio.VSSolutionManager+<EnsureInitializeAsync>d__.MoveNext|nuget.packagemanagement.visualstudio.dll\" (#8527) at NuGet/Home","RelatedBody":"From internal bug 959478"},{"Id":"10311073211","Type":"IssuesEvent","CreatedAt":"2019-08-29T16:28:30","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8526","RelatedDescription":"Opened issue \"Test:  PushCommand_PushToServerWithSymbols is flaky\" (#8526) at NuGet/Home","RelatedBody":"Test `NuGet.CommandLine.Test.NuGetPushCommandTest.PushCommand_PushToServerWithSymbols` failed on macOS [here](https://github.com/NuGet/NuGet.Client/blob/243111be8a0e31755d95672797174f8ff0b3036e/test/NuGet.Clients.Tests/NuGet.CommandLine.Test/NuGetPushCommandTest.cs#L419) with the following error:\r\n```\r\nAssert.Equal() Failure\\nExpected: 0\\nActual: 1\r\n  at NuGet.CommandLine.Test.NuGetPushCommandTest.PushCommand_PushToServerWithSymbols () [0x00181] in <945541be2d79400696383ed4db54d7e5>:0 \r\n  at (wrapper managed-to-native) System.Reflection.MonoMethod:InternalInvoke (System.Reflection.MonoMethod,object,object[],System.Exception&)\r\n  at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00032] in <48b95f3df5804531818f80e28ec60191>:0 \r\n```\r\nNote that while NuGet.exe failed with exit code 1, the test did not log NuGet.exe output.  Resolution of this issue should at least require logging NuGet.exe output in the event of failure."},{"Id":"10311005465","Type":"IssuesEvent","CreatedAt":"2019-08-29T16:18:56","Actor":"orcun","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8525","RelatedDescription":"Opened issue \"Package references should include source information for non-default sources\" (#8525) at NuGet/Home","RelatedBody":"I had this issue dotnet/cli#12289 and it looks like the problem is not limited to dotnet tools.\r\n\r\nIn short, when adding a package reference with custom source, package reference should also contain the source information.\r\n"},{"Id":"10310940224","Type":"IssuesEvent","CreatedAt":"2019-08-29T16:10:01","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8524","RelatedDescription":"Opened issue \"API:  enable custom INuGetResourceProvider's\" (#8524) at NuGet/Home","RelatedBody":"Progress on https://github.com/NuGet/Home/issues/8330."},{"Id":"10308619587","Type":"IssuesEvent","CreatedAt":"2019-08-29T11:24:47","Actor":"v-luzh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8523","RelatedDescription":"Opened issue \"[Test Failure] Most packages’ package source link and package info are missing in the right panel of PM UI\" (#8523) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet version: NuGet Client Dev\\5.4.0.6201\r\nVS Version: Master\\29228.166\r\nOS: Windows-10-Enterprise-19H1-04-05-2019\r\n## Detailed repro steps so we can see the same problem\r\n1. Launch VS and create a project (e.g. ASP .NET Core Web Application).\r\n2. Open PM UI of this project and click go to “Browse” tab.\r\n3. Select projects in the left panel and look at the package info in the right panel.\r\n## Expected\r\nEvery package’s package source link and package info show correctly.\r\n## Actual\r\nMost packages’ package source link and package info are missing in the right panel of PM UI as below screenshot.\r\n![PackageInfoLost](https://user-images.githubusercontent.com/20632625/63936490-7ea09580-ca92-11e9-9b87-73b7be670ee8.png)\r\n\r\n## Note\r\n1.Seems something wrong with today’s NuGet server since the packages showing are all OK after installing into the project.\r\n2.Repro after uninstalling the NuGet Client from the machine.\r\n"},{"Id":"10306128759","Type":"IssuesEvent","CreatedAt":"2019-08-29T04:48:17","Actor":"davidwengier","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8522","RelatedDescription":"Opened issue \"Better support for packaging from Visual Studio\" (#8522) at NuGet/Home","RelatedBody":"To fix https://github.com/dotnet/project-system/issues/1339 and https://devdiv.visualstudio.com/DevDiv/_workitems/edit/935258 we're improving the Pack command in the managed project system, but we can't solve the problem fully without changes to Nuget targets, which we're working around at the moment.\r\n\r\nThe issues are:\r\n\r\n* Nuget targets should specify the actions to call for packaging\r\n   * This means supplying a value for the `<PackageAction>` property, and the `<CleanPackageAction>` and `<RebuildPackageAction>` properties, though the last two are yet to be implemented.\r\n   * At the moment we're specifying this [here](https://github.com/dotnet/project-system/blob/efa4f2e034df733f2c3e885aae50daa0cee2dba5/src/Microsoft.VisualStudio.ProjectSystem.Managed/ProjectSystem/DesignTimeTargets/Microsoft.Managed.DesignTime.targets#L26), but since we don't own the target that is fragile.\r\n   * This is similar to how Nuget targets add the capability [here](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Build.Tasks.Pack/NuGet.Build.Tasks.Pack.targets#L58)  that controls if the menu item is shown \r\n* Nuget should supply a target for PackageAction\r\n   * At the moment the `Pack` target is dependent on the `GeneratePackageOnBuild` property, so we are temporarily forcing that property to `false` in order to ensure that a build and pack is correctly done. That is also fragile, as it means packaging only works via our command, not through any Visual Studio API\r\n   * The ideal solution is to supply a target for packing in VS that does a Build and Pack regardless (or remove the condition on `GeneratePackageOnBuild` from the Pack target and use that)\r\n* Nuget should supply targets for CleanPackageAction and RebuildPackageAction\r\n   * These should clean the package output, and rebuild the package output, as appropriate.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): Visual Studio\r\n\r\nNuGet version (x.x.x.xxx): N/A\r\n\r\ndotnet.exe --version (if appropriate): N/A\r\n\r\nVS version (if appropriate): 16.3 Preview 3\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Win10\r\n\r\nWorked before? If so, with which NuGet version: N/A\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nN/A"},{"Id":"10305910124","Type":"IssuesEvent","CreatedAt":"2019-08-29T03:47:58","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8521","RelatedDescription":"Closed issue \"The cursor in PMC is hard to spot in the light & blue themes\" (#8521) at NuGet/Home","RelatedBody":"The PMC cursor is hard to spot in the light and blue themes.\r\n\r\nNot a regression. \r\n\r\n![image](https://user-images.githubusercontent.com/2878341/63903302-d7ecc400-c9c1-11e9-9377-5e4a7a295a76.png)\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10286366828","Type":"IssuesEvent","CreatedAt":"2019-08-26T13:37:09","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/38","RelatedDescription":"Opened issue \"New and improved NuGet Search is live!\" (#38) at NuGet/Announcements","RelatedBody":"Announcing the new and improved search on NuGet.org leveraging Azure Search.\r\n\r\n[Blogpost](https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/) | [Feedback Issue](https://github.com/NuGet/NuGetGallery/issues/4124)"},{"Id":"10168692521","Type":"IssuesEvent","CreatedAt":"2019-08-07T21:31:54","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/37","RelatedDescription":"Opened issue \"Using OData to query NuGet.org repository is being deprecated\" (#37) at NuGet/Announcements","RelatedBody":"We introduced `V3 APIs` in early 2016. We have made continuous investments to make it more reliable, performant and secure. Going forward, we plan to bring all new features and improvements only to the newer `V3 APIs`. As part of this strategy, we are deprecating the usage of `OData` queries. Subsequently, we plan to **disable the `OData` queries starting Feb 5th, 2020**.\r\n\r\n**Call to Action: Transition to V3 APIs**\r\n\r\nHere are some resources to help you with the migration:\r\n* [NuGet Server `V3 APIs` reference](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n* [Guide to transition from NuGet `V2 API` to `V3 API`](https://docs.microsoft.com/en-us/nuget/guides/api/query-for-all-published-packages). \r\n* [Blog post: Switching from WCF OData to Web API](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n\r\nIf you need further help in moving your use case to `V3 APIs`, do reach out to us at [support@nuget.org](mailto:support@nuget.org).\r\n"},{"Id":"10115721045","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:44:31","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Closed issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10115715827","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:43:23","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Opened issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10105705706","Type":"IssuesEvent","CreatedAt":"2019-07-29T18:41:10","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Opened issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1164220617710686209","CreatedAt":"2019-08-21T17:00:00+00:00","UserScreenname":"nuget","Text":"⚠ Restoring packages from https://t.co/KVB7werYQh might fail in some regions. We are investigating the issue. Follo… https://t.co/t69YZ9eFo1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":2,"RawContent":null},{"Id":"1162433926578626560","CreatedAt":"2019-08-16T18:40:19+00:00","UserScreenname":"nuget","Text":"Did you check out the new docs landing page? We tried to make it better and more useful. What do you think?… https://t.co/96nBP0rV5l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":3,"RawContent":null},{"Id":"1159229316351197184","CreatedAt":"2019-08-07T22:26:21+00:00","UserScreenname":"nuget","Text":"Using OData to query https://t.co/F9kiKfdOWi repository is being deprecated\n#Announcement \n\nhttps://t.co/dtelctlNOe","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-08-30T05:30:44.3562072Z","RunDurationInMilliseconds":2598}