{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin and .NET Developer Events in May","PublishedOn":"2019-04-30T16:01:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Learn about new, exciting releases and tools to help jumpstart your next mobile development project by networking with your local community. You too could get all the latest updates about Xamarin and...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-net-developer-events-may/","RawContent":null},{"Title":"Customer Showcase: Aggreko","PublishedOn":"2019-04-23T18:23:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce a new inclusion to our Xamarin Showcase gallery:\nThe Aggreko Technician App\nA key objective of Aggreko’s company-wide Aggreko18 digital transformation program was to...","Href":"https://devblogs.microsoft.com/xamarin/customer-showcase-aggreko/","RawContent":null},{"Title":"Shrinking Your Android App Size","PublishedOn":"2019-04-22T18:15:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Mobile devices are limited in many ways. Whether it&#8217;s how much of a charge your battery can hold, the amount of storage you have left, or the speed of your internet connection to view more cat...","Href":"https://devblogs.microsoft.com/xamarin/shrinking-android-app-size/","RawContent":null},{"Title":"Xamarin.Forms 4.0 CollectionView Challenge ","PublishedOn":"2019-04-19T17:04:57+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"During March, many of you made submissions to our Visual Challenge. Your feedback has been extremely valuable and you all put together some impressive samples! As a follow up in this series, we now...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-forms-4-0-collectionview-challenge/","RawContent":null},{"Title":"The New & Improved Xamarin Developers YouTube Channel!","PublishedOn":"2019-04-18T18:13:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are so excited to re-launch our Xamarin Developers YouTube channel! Here you will find fresh content on building amazing mobile apps directly from the Xamarin team here at Microsoft. To kick things...","Href":"https://devblogs.microsoft.com/xamarin/new-xamarin-developers-youtube-channel/","RawContent":null},{"Title":"Getting Ready for macOS’s Hardened Runtime and Notary","PublishedOn":"2019-04-15T16:11:14+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"With macOS Mojave, Apple introduced support for Hardened Runtime and Notary service. These two services are designed to improve application security on macOS. Recently Apple has...","Href":"https://devblogs.microsoft.com/xamarin/macos-hardened-runtime-notary/","RawContent":null},{"Title":"Xamarin Podcast: Visual Studio 2019 is released!","PublishedOn":"2019-04-12T17:14:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in Xamarin and cloud development.\nPodcast Highlights\nVisual Studio 2019 has been released and is...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-visual-studio-2019-is-released/","RawContent":null},{"Title":"Sharing Files & Email Attachments with Xamarin.Essentials Preview Features","PublishedOn":"2019-04-10T19:15:56+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In the recent release of Xamarin.Essentials (1.1.0), we introduced several new stable features including detect shake, browser customization, and a plethora of platform helpers. The team has also been...","Href":"https://devblogs.microsoft.com/xamarin/sharing-files-attachments-xamarin-essentials/","RawContent":null},{"Title":"Getting Started With WorkManager","PublishedOn":"2019-04-08T18:12:29+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"If you need to schedule a background task on Android, you&#8217;re probably familiar with all of the various ways to accomplish this such as:\nGoogle Cloud Messaging\nFirebase Cloud...","Href":"https://devblogs.microsoft.com/xamarin/getting-started-workmanager/","RawContent":null},{"Title":"Visual Challenge Conquered!","PublishedOn":"2019-04-03T19:03:49+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"The post Visual Challenge Conquered! appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/visual-challenge-conquered/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9553526014","Type":"PullRequestEvent","CreatedAt":"2019-05-02T19:29:45","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3062","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] <ResolveAssemblies/> and ref assemblies\" (#3062) at xamarin/xamarin-android","RelatedBody":"Backport to d16-1 from #3053\r\n\r\nFixes: https://github.com/xamarin/xamarin-android/issues/3045\r\n\r\nIn VS 2019 16.1 Preview, a project using `Microsoft.Extensions.Http`\r\nfails to build with:\r\n\r\n    C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2146,5): error MSB4018: The \"LinkAssemblies\" task failed unexpectedly.\r\n    System.IO.FileNotFoundException: Could not load assembly 'System.Runtime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. Perhaps it doesn't exist in the Mono for Android profile?\r\n        File name: 'System.Runtime.dll'\r\n        at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve(AssemblyNameReference reference, ReaderParameters parameters)\r\n        at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve(AssemblyNameReference reference)\r\n        at Mono.Cecil.MetadataResolver.Resolve(TypeReference type)\r\n        at Mono.Cecil.ModuleDefinition.Resolve(TypeReference type)\r\n        at Mono.Cecil.TypeReference.Resolve()\r\n        at Java.Interop.Tools.Cecil.TypeDefinitionRocks.<GetTypeAndBaseTypes>d__1.MoveNext()\r\n        at System.Linq.Enumerable.Any[TSource](IEnumerable`1 source, Func`2 predicate)\r\n        at Java.Interop.Tools.Cecil.TypeDefinitionRocks.IsSubclassOf(TypeDefinition type, String typeName)\r\n        at MonoDroid.Tuner.FixAbstractMethodsStep.ProcessAssembly(AssemblyDefinition assembly)\r\n        at Mono.Linker.Steps.BaseStep.Process(LinkContext context)\r\n        at Mono.Linker.Pipeline.Process(LinkContext context)\r\n        at MonoDroid.Tuner.Linker.Process(LinkerOptions options, ILogger logger, LinkContext& context)\r\n        at Xamarin.Android.Tasks.LinkAssemblies.Execute(DirectoryAssemblyResolver res)\r\n        at Xamarin.Android.Tasks.LinkAssemblies.Execute()\r\n        at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n        at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [C:\\Temp\\ResolveAssembliesSystemRuntime\\AndroidApp1\\AndroidApp1.csproj]\r\n\r\nThe problem being, that the `<ResolveAssemblies/>` MSBuild task didn't\r\nreturn `System.Runtime.dll` in `@(ResolvedAssemblies)`.\r\n\r\nWhat further complicated matters, was that the same project was\r\nworking with latest xamarin-android/master (16.2)? I was only able to\r\nreproduce the problem in a test after some work to create a project\r\nthat only has a `<PackageReference/>` to ``Microsoft.Extensions.Http`\r\nwith no other references *at all*. I had to do some MSBuild trickery\r\nto remove `Java.Interop` and `System.Runtime` references.\r\n\r\nLooking at the dependency tree in the failing test,\r\n`System.Runtime.CompilerServices.Unsafe.dll` should be reporting a\r\nreference to `System.Runtime.dll`. Through debugging, I saw it only\r\nhad a reference to `netstandard.dll`?\r\n\r\nThen I realized there were two assemblies:\r\n\r\n    ~\\.nuget\\packages\\system.runtime.compilerservices.unsafe\\4.5.1\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\r\n    ~\\.nuget\\packages\\system.runtime.compilerservices.unsafe\\4.5.1\\lib\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\r\n\r\nThe \"ref\" assembly, references `netstandard.dll` and the \"lib\"\r\nassembly (that we should be using) references `System.Runtime.dll`.\r\n\r\nThrough further debugging, I found two bugs here:\r\n\r\n* We shouldn't call `resolver.AddSearchDirectory` until *after* we've\r\n  checked if the top-level assembly is a reference assembly. We don't\r\n  want a reference assembly in the search paths!\r\n* `MetadataResolver` should key its cache on the resolved path to the\r\n  assembly. This allows `<ResolveAssemblies/>` to open two *different*\r\n  instances of `System.Runtime.CompilerServices.Unsafe`."},{"Id":"9552855417","Type":"IssuesEvent","CreatedAt":"2019-05-02T17:43:50","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3036","RelatedDescription":"Closed issue \"Is xamarin app compiled to binary code or JVM byte-code?\" (#3036) at xamarin/xamarin-android","RelatedBody":"I hope that Xamarin app on Android platform could be compiled to binary code which could be executed by CPU directly, in order to get best performance."},{"Id":"9552474760","Type":"PullRequestEvent","CreatedAt":"2019-05-02T16:44:00","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3062","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] <ResolveAssemblies/> and ref assemblies\" (#3062) at xamarin/xamarin-android","RelatedBody":"Backport to d16-1 from #3053\r\n\r\nFixes: https://github.com/xamarin/xamarin-android/issues/3045\r\n\r\nIn VS 2019 16.1 Preview, a project using `Microsoft.Extensions.Http`\r\nfails to build with:\r\n\r\n    C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2146,5): error MSB4018: The \"LinkAssemblies\" task failed unexpectedly.\r\n    System.IO.FileNotFoundException: Could not load assembly 'System.Runtime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. Perhaps it doesn't exist in the Mono for Android profile?\r\n        File name: 'System.Runtime.dll'\r\n        at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve(AssemblyNameReference reference, ReaderParameters parameters)\r\n        at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve(AssemblyNameReference reference)\r\n        at Mono.Cecil.MetadataResolver.Resolve(TypeReference type)\r\n        at Mono.Cecil.ModuleDefinition.Resolve(TypeReference type)\r\n        at Mono.Cecil.TypeReference.Resolve()\r\n        at Java.Interop.Tools.Cecil.TypeDefinitionRocks.<GetTypeAndBaseTypes>d__1.MoveNext()\r\n        at System.Linq.Enumerable.Any[TSource](IEnumerable`1 source, Func`2 predicate)\r\n        at Java.Interop.Tools.Cecil.TypeDefinitionRocks.IsSubclassOf(TypeDefinition type, String typeName)\r\n        at MonoDroid.Tuner.FixAbstractMethodsStep.ProcessAssembly(AssemblyDefinition assembly)\r\n        at Mono.Linker.Steps.BaseStep.Process(LinkContext context)\r\n        at Mono.Linker.Pipeline.Process(LinkContext context)\r\n        at MonoDroid.Tuner.Linker.Process(LinkerOptions options, ILogger logger, LinkContext& context)\r\n        at Xamarin.Android.Tasks.LinkAssemblies.Execute(DirectoryAssemblyResolver res)\r\n        at Xamarin.Android.Tasks.LinkAssemblies.Execute()\r\n        at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n        at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext() [C:\\Temp\\ResolveAssembliesSystemRuntime\\AndroidApp1\\AndroidApp1.csproj]\r\n\r\nThe problem being, that the `<ResolveAssemblies/>` MSBuild task didn't\r\nreturn `System.Runtime.dll` in `@(ResolvedAssemblies)`.\r\n\r\nWhat further complicated matters, was that the same project was\r\nworking with latest xamarin-android/master (16.2)? I was only able to\r\nreproduce the problem in a test after some work to create a project\r\nthat only has a `<PackageReference/>` to ``Microsoft.Extensions.Http`\r\nwith no other references *at all*. I had to do some MSBuild trickery\r\nto remove `Java.Interop` and `System.Runtime` references.\r\n\r\nLooking at the dependency tree in the failing test,\r\n`System.Runtime.CompilerServices.Unsafe.dll` should be reporting a\r\nreference to `System.Runtime.dll`. Through debugging, I saw it only\r\nhad a reference to `netstandard.dll`?\r\n\r\nThen I realized there were two assemblies:\r\n\r\n    ~\\.nuget\\packages\\system.runtime.compilerservices.unsafe\\4.5.1\\ref\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\r\n    ~\\.nuget\\packages\\system.runtime.compilerservices.unsafe\\4.5.1\\lib\\netstandard2.0\\System.Runtime.CompilerServices.Unsafe.dll\r\n\r\nThe \"ref\" assembly, references `netstandard.dll` and the \"lib\"\r\nassembly (that we should be using) references `System.Runtime.dll`.\r\n\r\nThrough further debugging, I found two bugs here:\r\n\r\n* We shouldn't call `resolver.AddSearchDirectory` until *after* we've\r\n  checked if the top-level assembly is a reference assembly. We don't\r\n  want a reference assembly in the search paths!\r\n* `MetadataResolver` should key its cache on the resolved path to the\r\n  assembly. This allows `<ResolveAssemblies/>` to open two *different*\r\n  instances of `System.Runtime.CompilerServices.Unsafe`."},{"Id":"9552013078","Type":"IssuesEvent","CreatedAt":"2019-05-02T15:39:12","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2983","RelatedDescription":"Closed issue \"Android Webview cannot render the pdf sometimes and shows blank/white page instead\" (#2983) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Open the pdf in the webview using google docs link.\r\n2. Open the same pdf or different pdf again and again.\r\n3. Sometimes it will show the blank/white page in the android untill we refresh the webpage again for 1 or 2 times.\r\n####\r\nCode \r\n```\r\npublic void SetWebView(WebView webview,string externalUrl){\r\n\t\t\twebview.Tag = \"webview\";\r\n\t\t\twebview.Settings.JavaScriptEnabled = true;\r\n\t\t\twebview.Settings.SupportZoom ();\r\n\t\t\twebview.Settings.SetAppCacheEnabled(true);\r\n\t\t\twebview.Settings.DomStorageEnabled = true;\r\n\t\t\twebview.ZoomOut ();\r\n\t\t\twebview.ZoomIn ();\r\n\t\t\twebview.Settings.BuiltInZoomControls = true;\r\n\t\t\twebview.Settings.LoadWithOverviewMode = true;\r\n\t\t\twebview.Settings.UseWideViewPort = true;\r\n\t\t\t//webview.Settings.SetSupportZoom (true);\r\n\t\t\twebview.Settings.SetPluginState (WebSettings.PluginState.On);\r\n\t\t\twebview.Settings.GetPluginState ();\r\n            if (externalUrl.StartsWith(\"http://\") || externalUrl.StartsWith(\"https://\"))\r\n                webview.LoadUrl (externalUrl);\r\n\t\t\twebview.SetWebViewClient (new MonkeyWebViewClient (imgViewBack, imgViewForward, imgRefresh));\r\n\t\t\twebview.SetWebChromeClient (new WebChromeClient ());\r\n\t\t`}`\r\n\r\n```\r\n![Screenshot_20190416-132946 1](https://user-images.githubusercontent.com/32213215/56192401-df7f8200-604b-11e9-974d-37e8da071577.png)\r\n"},{"Id":"9551469369","Type":"IssuesEvent","CreatedAt":"2019-05-02T14:31:39","Actor":"keyur-apa","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3061","RelatedDescription":"Opened issue \"Android Webview does not recognize download links after Chrome 69+ update on Android devices.\" (#3061) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a Webview on Xamarin App with a page which consist a link to a file (pdf for example.)\r\n2. Make sure is Chrome is up-to-date (69+ version) on android device your app is running.\r\n3. Try to click on the file link on that webview, it will do nothing.\r\n4. Now if you uninstall all updates on chrome & go back to 69 or older version of chrome and repeat step-3, it should work.\r\n\r\n"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9555458338","Type":"PullRequestEvent","CreatedAt":"2019-05-03T03:27:05","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6081","RelatedDescription":"Opened pull request \"remove route params from shell\" (#6081) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9555029696","Type":"IssuesEvent","CreatedAt":"2019-05-03T00:42:20","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4872","RelatedDescription":"Closed issue \"[Shell] CSS is not working when referencing CSS-file in App.xaml\" (#4872) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nWhen I using a CSS to style buttons when inside a Shell is dosen't work if I references the CSS-fole in the App.xaml file. If I references with Grid.Resources it will work for the buttons inside that Grid.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a page inside a Shell\r\n2. Create a CSS file\r\n3. Reference the CSS file in App.xaml\r\n\r\n### Expected Behavior\r\nCSS styling should be applied according to specified values in the CSS-file.\r\n\r\n### Actual Behavior\r\nStyles is not applies.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0.0.8055-pre1\r\n- Last known good version:\r\n- IDE: Visual Studio for Mac 7.7.2 (build 21)\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  12.2.1.12\r\n- Affected Devices: iOS simulator iPhone XS 12.1\r\n\r\n\r\n### Reproduction Link\r\n\r\n[Source.zip](https://github.com/xamarin/Xamarin.Forms/files/2716790/Source.zip)\r\n\r\nParent: #2415"},{"Id":"9555025698","Type":"IssuesEvent","CreatedAt":"2019-05-03T00:40:50","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5435","RelatedDescription":"Closed issue \"Xamarin form page preview in VS2019 not working when using shell\" (#5435) at xamarin/Xamarin.Forms","RelatedBody":"Using VS2019 (preview 2.0)\r\n with xamarin.forms v4.0.0.169046-pre5\r\nviewing Android and using Shell\r\nWhen using the page preview I get render errors (see screen)\r\nits hard to read and I cant copy out the error content, or extend the frame to view, but it seems to be related to the flags set for \"Shell_Experimental\" in the MainActivity.cs in the Android project:\r\n\r\nglobal::Xamarin.Forms.Forms.SetFlags(\"Shell_Experimental\", \"Visual_Experimental\", \"CollectionView_Experimental\", \"FastRenderers_Experimental\");\r\n            global::Xamarin.Forms.Forms.Init(this, savedInstanceState);\r\n\r\nIs there a solution for this because rapid dev will suffer greatly without it?\r\n![untitled](https://user-images.githubusercontent.com/1969372/53706847-060ca380-3e78-11e9-970c-b42bf7fb7e86.png)\r\n\r\n> VS bug [#807897](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/807897)\r\nParent: #2415"},{"Id":"9554570459","Type":"PullRequestEvent","CreatedAt":"2019-05-02T22:34:45","Actor":"rookiejava","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6080","RelatedDescription":"Opened pull request \"[Tizen] Added support AutomationProperties\" (#6080) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nAdded support `AutomationProperty` for Tizen backend. This PR is an addendum to the changes in #713. Due to platform limitations, `Frame` and `Cells` are not supported\r\n\r\n### Issues Resolved ### \r\nNone\r\n\r\n### API Changes ###\r\n None\r\n\r\n### Platforms Affected ### \r\n- Tizen\r\n\r\n### Behavioral/Visual Changes ###\r\nNone\r\n\r\n### Testing Procedure ###\r\nCheck AutomationPropertyGallery\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9554104651","Type":"PullRequestEvent","CreatedAt":"2019-05-02T21:03:57","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5980","RelatedDescription":"Opened pull request \"[d16-1][xharness] Multiple cherry picks to make device tests green\" (#5980) at xamarin/xamarin-macios","RelatedBody":"This PR contains backport and new fixes that only affect the tests (no logic changed).\nSometimes https://github.com/xamarin/xamarin-macios/issues/4723 is hit (random).\nBackporting fixes to an old mono branch wasn't possible so a couple mono tests were completely skipped, note: they are fixed in master."},{"Id":"9551582926","Type":"IssuesEvent","CreatedAt":"2019-05-02T14:45:41","Actor":"arendigossweiler","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5979","RelatedDescription":"Opened issue \"MT3001: Could not AOT the assembly when private enum in generic class\" (#5979) at xamarin/xamarin-macios","RelatedBody":"\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a .net standard library\r\n2. Create a generic class\r\n3. Add a private enum into the generic class\r\n4. Create a variable from this enum type in the constructor\r\n5. Use string interpolation to convert the enum value to a string\r\n6. Use the .net standard library in a Xamarin.iOS project\r\n\r\n### Expected Behavior\r\nThe iOS project can be compiled without error.\r\n\r\n### Actual Behavior\r\nThe build failed with error:\r\nMTOUCH : error MT3001: Could not AOT the assembly '/Users/a.gossweiler/Projects/libtest/libtest.iOS/obj/iPhone/Debug/mtouch-cache/3-Build/libtest.dll'\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Community 2019 for Mac ===\r\n\r\nVersion 8.0.5 (build 9)\r\nInstallation UUID: a1c7ad7a-babc-43b7-af7c-bdca8460cb99\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.6.0.2 (d16-0 / 040682909)\r\n\r\n\tPackage version: 518010003\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.18.1.3 (2018-08/fdb26b0a445) (64-bit)\r\n\tPackage version: 518010003\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.8.2.5835\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.1.9\r\nSDK: /usr/local/share/dotnet/sdk/2.1.505/Sdks\r\nSDK Version: 2.1.505\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.18.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.9\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.2.3.0 (Visual Studio Community)\r\nAndroid SDK: /Users/Shared/Library/Developer/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.0\r\nSDK Build Tools Version: 27.0.3\r\n\r\nBuild Information: \r\nMono: mono/mono/2018-08-rc@5ac37ccd385\r\nJava.Interop: xamarin/java.interop/d16-0@c987483\r\nLibZipSharp: grendello/LibZipSharp/d16-1@44de300\r\nLibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\nMXE: xamarin/mxe/xamarin@b9cbb535\r\nProGuard: xamarin/proguard/master@905836d\r\nSQLite: xamarin/sqlite/3.26.0@325e91a\r\nXamarin.Android Tools: xamarin/xamarin-android-tools/d16-0@0a7edd6\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: /Users/a.gossweiler/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.25\r\n1.8.0-25\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 1.2.0.14\r\nHash: 86df26f\r\nBranch: remotes/origin/d16-0\r\nBuild date: 2019-04-05 16:58:56 UTC\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Xamarin Designer ===\r\n\r\nVersion: 4.17.4.418\r\nHash: 3d086e814\r\nBranch: remotes/origin/d16-0\r\nBuild date: 2019-04-01 09:20:10 UTC\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.2.1 (14490.122)\r\nBuild 10E1001\r\n\r\n=== Xamarin.Mac ===\r\n\r\nXamarin.Mac not installed. Can't find /Library/Frameworks/Xamarin.Mac.framework/Versions/Current/Version.\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.8.0.0 (Visual Studio Community)\r\nHash: 0aa84521\r\nBranch: d16-0\r\nBuild date: 2019-04-02 16:01:19-0400\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 800050009\r\nGit revision: d9d7eed60cb59740ba55c04bfe9c39ac57014c12\r\nBuild date: 2019-04-26 10:08:19+00\r\nBuild branch: master\r\nXamarin extensions: 5efedb990d786142d3b54351c01ce867af7b7680\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.4\r\nDarwin 18.5.0 Darwin Kernel Version 18.5.0\r\n    Mon Mar 11 20:40:32 PDT 2019\r\n    root:xnu-4903.251.3~3/RELEASE_X86_64 x86_64\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\nTarget _CompileToNative:\r\n    /Library/Frameworks/Xamarin.iOS.framework/Versions/Current/bin/mtouch @/Users/a.gossweiler/Projects/libtest/libtest.iOS/obj/iPhone/Debug/response-file.rsp \r\n    AOT Compilation exited with code 134, command:\r\n    MONO_PATH=/Users/a.gossweiler/Projects/libtest/libtest.iOS/obj/iPhone/Debug/mtouch-cache/3-Build /Library/Frameworks/Xamarin.iOS.framework/Versions/12.8.0.0/bin/arm64-darwin-mono-sgen --debug -O=gsharedvt -O=-float32  --aot=mtriple=arm64-ios,data-outfile=/Users/a.gossweiler/Projects/libtest/libtest.iOS/obj/iPhone/Debug/mtouch-cache/arm64/libtest.aotdata.arm64,static,asmonly,direct-icalls,full,soft-debug,dwarfdebug,no-direct-calls,outfile=/Users/a.gossweiler/Projects/libtest/libtest.iOS/obj/iPhone/Debug/mtouch-cache/arm64/libtest.dll.s \"/Users/a.gossweiler/Projects/libtest/libtest.iOS/obj/iPhone/Debug/mtouch-cache/3-Build/libtest.dll\"\r\n    Mono Ahead of Time compiler - compiling assembly /Users/a.gossweiler/Projects/libtest/libtest.iOS/obj/iPhone/Debug/mtouch-cache/3-Build/libtest.dll\r\n    AOTID 83789DAF-67CF-F8DC-35CB-14BCAF2FE32E\r\n    * Assertion at /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/external/mono/mono/mini/decompose.c:1469, condition `cfg->cbb == first_bb' not met\r\n    \r\n    \r\n    MTOUCH : error MT3001: Could not AOT the assembly '/Users/a.gossweiler/Projects/libtest/libtest.iOS/obj/iPhone/Debug/mtouch-cache/3-Build/libtest.dll'\r\nDone building target \"_CompileToNative\" in project \"libtest.iOS.csproj\" -- FAILED.\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n[libtest.zip](https://github.com/xamarin/xamarin-macios/files/3138486/libtest.zip)\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"9551490412","Type":"PullRequestEvent","CreatedAt":"2019-05-02T14:34:17","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5978","RelatedDescription":"Closed pull request \"Bump mono to head of 2018-08\" (#5978) at xamarin/xamarin-macios","RelatedBody":"New commits in mono/mono:\r\n\r\n* mono/mono@082e1a23463 Bump msbuild to track mono-2018-08\r\n* mono/mono@18fde9f8c29 Fix Windows MSI build\r\n* mono/mono@ea8ae3e8e05 More Windows MSI fixes\r\n* mono/mono@d1b7bf2c472 Fix Windows MSI build, msbuild is now in Current instead of 15.0\r\n\r\nDiff: https://github.com/mono/mono/compare/3cb36842fc47eb8d749cabe351b3902c24065d77..082e1a23463e52b611b1cbc12ae86af6b2f376bf"},{"Id":"9551156200","Type":"PullRequestEvent","CreatedAt":"2019-05-02T13:52:21","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5978","RelatedDescription":"Opened pull request \"Bump mono to head of 2018-08\" (#5978) at xamarin/xamarin-macios","RelatedBody":"New commits in mono/mono:\r\n\r\n* mono/mono@082e1a23463 Bump msbuild to track mono-2018-08\r\n* mono/mono@18fde9f8c29 Fix Windows MSI build\r\n* mono/mono@ea8ae3e8e05 More Windows MSI fixes\r\n* mono/mono@d1b7bf2c472 Fix Windows MSI build, msbuild is now in Current instead of 15.0\r\n\r\nDiff: https://github.com/mono/mono/compare/3cb36842fc47eb8d749cabe351b3902c24065d77..082e1a23463e52b611b1cbc12ae86af6b2f376bf"},{"Id":"9547619749","Type":"PullRequestEvent","CreatedAt":"2019-05-02T00:19:07","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5977","RelatedDescription":"Merged pull request \"[d16-2] [apidiff] Keep the same guid when updating markdown documents\" (#5977) at xamarin/xamarin-macios","RelatedBody":"We often (e.g. previews, service releases) update the API diff during\na release cycle. The current code generated a new GUID every time, which\nis not what correct since it's the same document.\n\nThis uses an MD5 digest of the filename as the source of the GUID so\nit will remain constant once created (and updated).\n\nBackport of #5976.\n\n/cc @spouliot "},{"Id":"9546541882","Type":"PullRequestEvent","CreatedAt":"2019-05-01T20:15:18","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5976","RelatedDescription":"Merged pull request \"[apidiff] Keep the same guid when updating markdown documents\" (#5976) at xamarin/xamarin-macios","RelatedBody":"We often (e.g. previews, service releases) update the API diff during\na release cycle. The current code generated a new GUID every time, which\nis not what correct since it's the same document.\n\nThis uses an MD5 digest of the filename as the source of the GUID so\nit will remain constant once created (and updated)."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1123980358289100801","CreatedAt":"2019-05-02T15:59:34+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8zSXL","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":10,"FavoriteCount":4,"RawContent":null},{"Id":"1123639473726685184","CreatedAt":"2019-05-01T17:25:01+00:00","UserScreenname":"xamarinhq","Text":"On this week's Xamarin.Essential API of the week, we take a look at the Detect Shake API to help you detect when a… https://t.co/rrPQPNYeFY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":26,"FavoriteCount":8,"RawContent":null},{"Id":"1123274432565452802","CreatedAt":"2019-04-30T17:14:28+00:00","UserScreenname":"xamarinhq","Text":"Learn about new, exciting releases and tools to help jump start your next mobile development project by networking… https://t.co/9YpJzAFHml","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":27,"FavoriteCount":10,"RawContent":null},{"Id":"1121888817483530243","CreatedAt":"2019-04-26T21:28:32+00:00","UserScreenname":"xamarinhq","Text":"This week, @JamesMontemagno &amp; Alexandre Costa show us the importance of making mobile apps accessible as they talk… https://t.co/7qsj6o1VYm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":15,"RawContent":null},{"Id":"1121502644189716481","CreatedAt":"2019-04-25T19:54:01+00:00","UserScreenname":"xamarinhq","Text":"We're excited to announce a new inclusion to our Xamarin Showcase gallery... let's take a look at the latest custom… https://t.co/mC9hK1Vmol","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":63,"FavoriteCount":25,"RawContent":null},{"Id":"1120428795440267265","CreatedAt":"2019-04-22T20:46:56+00:00","UserScreenname":"xamarinhq","Text":"When it comes to application size, bigger is not better. It’s one of the key factors a user takes into consideratio… https://t.co/K3s0FDTdqV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":74,"FavoriteCount":39,"RawContent":null},{"Id":"1120357094811680768","CreatedAt":"2019-04-22T16:02:01+00:00","UserScreenname":"xamarinhq","Text":"Say \"Hello!\" to the new Xamarin You Tube Channel.\nCheck it out, and don't forget to subscribe.… https://t.co/KSNaDZg4J0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":118,"FavoriteCount":48,"RawContent":null},{"Id":"1119296356651339777","CreatedAt":"2019-04-19T17:47:01+00:00","UserScreenname":"xamarinhq","Text":"During March, you made submissions to our Visual Challenge. Your feedback and samples have been valuable. ...but wa… https://t.co/S2oMKbh17G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":75,"FavoriteCount":34,"RawContent":null},{"Id":"1119279495238823937","CreatedAt":"2019-04-19T16:40:01+00:00","UserScreenname":"xamarinhq","Text":"We're re-launching our Xamarin Developers YouTube channel! ...find fresh content on building amazing mobile apps di… https://t.co/SDfbKwLV1u","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":44,"RawContent":null},{"Id":"1118990448654200832","CreatedAt":"2019-04-18T21:31:27+00:00","UserScreenname":"xamarinhq","Text":"Find fresh content on building amazing mobile apps directly from the Xamarin team @ Microsoft.\n\nIntroducing the New… https://t.co/S4JC1oCDJU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":117,"FavoriteCount":42,"RawContent":null},{"Id":"1117944446899896322","CreatedAt":"2019-04-16T00:15:01+00:00","UserScreenname":"xamarinhq","Text":"We're getting ready for macOS’s Hardened Runtime and Notary. Learn how to get started; from configuring your entitl… https://t.co/p4W2CszalI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":26,"FavoriteCount":14,"RawContent":null},{"Id":"1116762533346652160","CreatedAt":"2019-04-12T17:58:31+00:00","UserScreenname":"xamarinhq","Text":"There’re tons in store for you in the latest podcast... @codemillmatt and @JamesMontemagno rundown the new features… https://t.co/1TlcD9N8yV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1115620503232962560","CreatedAt":"2019-04-09T14:20:29+00:00","UserScreenname":"xamarinhq","Text":"Under the Hood: Take an inside look at #DevOps at Microsoft, in this webinar with @abelsquidhead and @Applitools on… https://t.co/qgf7T5OPvM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":38,"FavoriteCount":23,"RawContent":null},{"Id":"1115323538091720704","CreatedAt":"2019-04-08T18:40:27+00:00","UserScreenname":"xamarinhq","Text":"Say 'Hello' to WorkManager - a library that makes it easy to schedule deferrable, asynchronous tasks even if the ap… https://t.co/xOYvf5E0K0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":106,"FavoriteCount":47,"RawContent":null},{"Id":"1113833658920472576","CreatedAt":"2019-04-04T16:00:12+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":31,"FavoriteCount":11,"RawContent":null},{"Id":"1113554700702449664","CreatedAt":"2019-04-03T21:31:44+00:00","UserScreenname":"xamarinhq","Text":"Last week we issued a challenge to the Xamarin community to use the new Material Design controls with Visual by rep… https://t.co/JpaGEihELG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":147,"FavoriteCount":54,"RawContent":null},{"Id":"1113137014768066560","CreatedAt":"2019-04-02T17:52:00+00:00","UserScreenname":"xamarinhq","Text":"News from the #VisualStudio 2019 Launch Event. See what’s new for #Xamarin Developers in #VS2019,… https://t.co/ylrA7eBnQ4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":149,"FavoriteCount":72,"RawContent":null},{"Id":"1112804184166944768","CreatedAt":"2019-04-01T19:49:27+00:00","UserScreenname":"xamarinhq","Text":"Learn about the new, exciting releases and tooling to help jumpstart your next mobile development project.\n\nJoin us… https://t.co/4AhXCdCrB0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":27,"FavoriteCount":13,"RawContent":null},{"Id":"1111358962681765893","CreatedAt":"2019-03-28T20:06:39+00:00","UserScreenname":"xamarinhq","Text":"Unlock the power of Glide with “GlideX”: a simple library to swap-in Glide’s image loading implementation in-place… https://t.co/bAk49l9er6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":46,"FavoriteCount":25,"RawContent":null},{"Id":"1111318034789158912","CreatedAt":"2019-03-28T17:24:01+00:00","UserScreenname":"xamarinhq","Text":"How are we doing? The #Xamarin March survey is now ready for your feedback: https://t.co/yfktVy49Pl \nIt's only avai… https://t.co/gX2uC9QShF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":55,"FavoriteCount":37,"RawContent":null}]}},"RunOn":"2019-05-03T05:30:59.4093535Z","RunDurationInMilliseconds":2724}