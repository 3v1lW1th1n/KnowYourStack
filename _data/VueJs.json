{"Data":{"Vue":{"Events":[{"Id":"7361102846","Type":"IssuesEvent","CreatedAt":"2018-03-11T02:24:34","Actor":"algates90","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue/issues/7790","RelatedDescription":"Closed issue \"Radio button not working while using v-for\" (#7790) at vuejs/vue","RelatedBody":"### Version\r\n2.5.14\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/t0gaf8ha/15/?utm_source=website&utm_medium=embed&utm_campaign=t0gaf8ha](https://jsfiddle.net/t0gaf8ha/15/?utm_source=website&utm_medium=embed&utm_campaign=t0gaf8ha)\r\n\r\n### Steps to reproduce\r\nSelect first question answer (A1) and move to next question. After choosing the next answer (A4), if you go back to previous question, the chosen radio button is not checked.\r\n\r\n### What is expected?\r\nThe first answered radio button must be  checked by default\r\n\r\n### What is actually happening?\r\nThe first answered radio button is not checked\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7361061237","Type":"IssuesEvent","CreatedAt":"2018-03-11T01:48:46","Actor":"algates90","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/7790","RelatedDescription":"Opened issue \"Radio button not working while using v-for\" (#7790) at vuejs/vue","RelatedBody":"### Version\r\n2.5.14\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/t0gaf8ha/15/?utm_source=website&utm_medium=embed&utm_campaign=t0gaf8ha](https://jsfiddle.net/t0gaf8ha/15/?utm_source=website&utm_medium=embed&utm_campaign=t0gaf8ha)\r\n\r\n### Steps to reproduce\r\nSelect first question answer and move to next question. After choosing the next answer, if you go back to previous question, the chosen radio button is not checked.\r\n\r\n### What is expected?\r\nThe first answered radio button must be  checked by default\r\n\r\n### What is actually happening?\r\nThe first answered radio button is not checked\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7357207616","Type":"IssuesEvent","CreatedAt":"2018-03-09T17:17:06","Actor":"dotnetCarpenter","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2099","RelatedDescription":"Opened issue \"Setting pushState title\" (#2099) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nIs there any objections against a PR that opens up for setting the `pushState()` title argument in [push-state.js](https://github.com/vuejs/vue-router/blob/dev/src/util/push-state.js#L50).\r\n\r\nI'm porting an app to use vue-router and the app had this before. I realise that Firefox ignores the title, but other browsers do not. The app is is using vue-router to enable deep linking. The app display PDFs with hundreds of pages. I got the back/forward buttons working pretty easily but the resulting list is completely unreadable, since it is just the `document.title` repeated 10-100 times. I would like to add the page number to each entry.\r\n\r\n### What does the proposed API look like?\r\nNot sure... Could be:\r\n```js\r\nthis.$router.push({\r\n  meta: { title: `page ${pageCurrent} - foobar` }\r\n})\r\n```\r\nBut I don't have any preferences other than the one the vue-router team   community prefer. :)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7356943074","Type":"PullRequestEvent","CreatedAt":"2018-03-09T16:26:28","Actor":"bmarkovic","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/2098","RelatedDescription":"Opened pull request \"Add support for 'disabled' attribute to <router-link>, fixes #916\" (#2098) at vuejs/vue-router","RelatedBody":"During the discussion on #916 a solution was mentioned, where attribute `disabled` in `<router-link>` would prevent the link from working. This is useful for programmatically disabling router links based on application state. \r\n\r\nCompared to other solutions, both available and proposed, this is by far the cleanest and most idiomatic if you come from a HTML mindset, as it's available on form elements with the same purpose, and some CSS frameworks like Bootstrap promote its use for `<li><a>` navigation elements. \r\n\r\nFurthermore, binding to disabled attribute is a simple, easy to style and implement, and I honestly believe that for these reasons, it is also very idiomatic to Vue.js as well.\r\n\r\nThis pull request implements that proposal."}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"7359014147","Type":"PullRequestEvent","CreatedAt":"2018-03-10T01:15:13","Actor":"ktsn","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vuex/pull/1177","RelatedDescription":"Merged pull request \"update ja docs\" (#1177) at vuejs/vuex","RelatedBody":""},{"Id":"7355559121","Type":"IssuesEvent","CreatedAt":"2018-03-09T11:34:22","Actor":"dotnetCarpenter","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/1176","RelatedDescription":"Closed issue \"Publisher/subscriber pattern in vuex \" (#1176) at vuejs/vuex","RelatedBody":"### What problem does this feature solve?\r\n## To notify components in a long running task ##\r\n\r\nWhile porting some code to a vuex module, I had to re-think the synchronisation pattern and while the reactive pattern is the obvious choice, I went back to pub/sub as described in https://github.com/vuejs/vuex/issues/673#issuecomment-371469565 and posted on https://forum.vuejs.org/t/solved-publisher-subscriber-pattern-in-vuex/29176.\r\n\r\nThe gist is to notify components in a long running task.\r\n\r\nShort of implementing a streaming pattern, I think that evolving the `subscribe` API is an easier solution that solve the use-case efficiently.\r\n\r\nCurrently there exist two API calls for pub/sub. `subscribe` and `subscribeAction`. While `subscribe` listen to all mutations (making it inefficient), `subscribeAction` is pretty limiting. Instead of suggesting and implementing `subscribeCommit`, I suggest leveraging vue's `emit`/`on` system. The plugin system is subject to this exact same discussion.\r\n\r\nBy using vue's pub/sub system, we can remove `subscribeAction` and have a much more flexible system. I made a hack of this, posted in the vue forum, that works very well.\r\n\r\n_Inside vuex action or commit:_\r\n```js\r\nthis._vm.$emit('event', payload)\r\n```\r\n\r\n_Inside a vue component_\r\n```js\r\nthis.$store._vm.$on('event', payload => {/* do something useful */})\r\n```\r\n\r\nBefore doing a PR, I hope to discuss this with you.\r\n\r\nI should note that, my suggestion works equally well in _classic_ mode and _module_ mode.\r\n\r\n### What does the proposed API look like?\r\n```js\r\nstore.subscribe('pages/loaded', (payload, state) => { /* do something useful */ })\r\n```\r\nNote that `mutation` is changed to `payload` because the type is now insignificant (the first argument to subscribe tells us what we're interested in).\r\n\r\nInside a mutation, getter or action:\r\n```js\r\nthis.nofity('event', { a: 'b', c: ['d'] })\r\n```\r\n\r\nFull list of API change:\r\n1. `store.subscribe`\r\n2. `store.nofity`\r\n3. `store.unsubscribe`\r\n4. `store.subscribeOnce`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Vue-Issues":{"Issues":[{"Id":"304122402","IsPullRequest":false,"CreatedAt":"2018-03-11T02:24:34","Actor":"algates90","Number":"7790","RawContent":null,"Title":"Radio button not working while using v-for","State":"closed","Body":"### Version\r\n2.5.14\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/t0gaf8ha/15/?utm_source=website&utm_medium=embed&utm_campaign=t0gaf8ha](https://jsfiddle.net/t0gaf8ha/15/?utm_source=website&utm_medium=embed&utm_campaign=t0gaf8ha)\r\n\r\n### Steps to reproduce\r\nSelect first question answer (A1) and move to next question. After choosing the next answer (A4), if you go back to previous question, the chosen radio button is not checked.\r\n\r\n### What is expected?\r\nThe first answered radio button must be  checked by default\r\n\r\n### What is actually happening?\r\nThe first answered radio button is not checked\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7790","RelatedDescription":"Closed issue \"Radio button not working while using v-for\" (#7790)"},{"Id":"302962876","IsPullRequest":false,"CreatedAt":"2018-03-10T23:33:19","Actor":"jacobgoh101","Number":"7761","RawContent":null,"Title":"Custom Directive. Inserted hook. Element moved after inserted hook ended.","State":"closed","Body":"### Version\r\n2.5.3\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jacobgoh101/y1L2v9d4/](https://jsfiddle.net/jacobgoh101/y1L2v9d4/)\r\n\r\n### Steps to reproduce\r\n1. Click `show` button\r\n\r\n### What is expected?\r\n`input#timing` should be focused\r\n\r\n### What is actually happening?\r\n`input#timing` was focused, but something else cause it to blur immediately\r\n\r\n---\r\n\r\nBug discovered from this [Stack Overflow](https://stackoverflow.com/questions/49143432/custom-v-focus-not-work-when-there-are-many-v-if-in-parent-node) question together with [acdcjunior](https://stackoverflow.com/users/1850609/acdcjunior).\r\n\r\nfrom this example https://jsfiddle.net/acdcjunior/srfse9oe/1/ , after clicking on `show` button, the console log these \r\n\r\n    beforeUpdate\r\n    \r\n    inserted <div id=\"app\"><div><p>a</p> <input type=\"number\" id=\"timing\"> <p>b</p> <button type=\"button\">show</button> <p>c</p> <!----> <p>d</p></div></div>\r\n    \r\n    updated\r\n    \r\n    nextTick <div id=\"app\"><div><p>a</p> <!----> <p>b</p> <!----> <p>c</p> <input type=\"number\" id=\"timing\"> <p>d</p></div>  </div>\r\n\r\nin inserted hook, `input#timing` is between `<p>a</p>` and `<p>b</p>`. But in `nextTick` callback,  `input#timing` has been moved to between `<p>c</p>` and `<p>d</p>`, for no particular reason. This caused the element to blur out.\r\n\r\nSee more details in this [SO answer](https://stackoverflow.com/a/49143668/5599288)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7761","RelatedDescription":"Closed issue \"Custom Directive. Inserted hook. Element moved after inserted hook ended.\" (#7761)"},{"Id":"304047585","IsPullRequest":false,"CreatedAt":"2018-03-10T19:10:01","Actor":"KaelWD","Number":"7787","RawContent":null,"Title":"SSR - classes are not re-applied on hydration without a ref","State":"closed","Body":"### Version\r\n2.5.14\r\n\r\n### Reproduction link\r\nNo ref: https://codepen.io/anon/pen/yKyBYZ\r\nWith ref: https://codepen.io/anon/pen/PRwYPO\r\n\r\n### Steps to reproduce\r\nOpen the codepen\r\n\r\n### What is expected?\r\n`.has-padding` should be applied after 2sec\r\n\r\n### What is actually happening?\r\nNothing changes on hydration unless the element has a ref\r\n\r\n---\r\nI opened a similar issue a while ago but for styles - #7063 \r\n\r\nSame thing happens with custom attributes btw, I'd expect this to give a \"mismatched nodes\" error at the very least:\r\n\r\nNo ref: https://codepen.io/anon/pen/qoExmb?editors=1010\r\nWith ref: https://codepen.io/anon/pen/oqgEWL?editors=1010\r\n\r\nText is fine though: https://codepen.io/anon/pen/OvPQQv?editors=1010\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7787","RelatedDescription":"Closed issue \"SSR - classes are not re-applied on hydration without a ref\" (#7787)"},{"Id":"304046150","IsPullRequest":false,"CreatedAt":"2018-03-10T18:40:07","Actor":"Leopoldthecoder","Number":"7786","RawContent":null,"Title":"Maximum call stack size exceeded in v-bind:class using $slots","State":"closed","Body":"### Version\r\n2.5.14\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mmx38qxw/568/](https://jsfiddle.net/mmx38qxw/568/)\r\n\r\n### Steps to reproduce\r\nRun the fiddle\r\n\r\n### What is expected?\r\nRender without error\r\n\r\n### What is actually happening?\r\nConsole warns that maximum call stack size exceeded\r\n\r\n---\r\nThis demo works fine in prior versions, so it might be a regression in 2.5.14. Another find is that if I don't pass `<span slot=\"append\">` to `<compo>`, there'll be no error.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7786","RelatedDescription":"Closed issue \"Maximum call stack size exceeded in v-bind:class using $slots\" (#7786)"},{"Id":"304074803","IsPullRequest":false,"CreatedAt":"2018-03-10T14:42:26","Actor":"enricribas","Number":"7789","RawContent":null,"Title":"textarea with v-model cannot be updated dynamically","State":"closed","Body":"### Version\r\n2.5.14\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/175796/](https://jsfiddle.net/50wL7mdz/175796/)\r\n\r\n### Steps to reproduce\r\nchange the textarea to enter some text, try to clear it with code.\r\nan input works fine, but textarea does not.\r\nshift click the button, text clears\r\nshift-enter, log fires, text does not clear.\r\n\r\n### What is expected?\r\nit should clear\r\n\r\n### What is actually happening?\r\nit does not clear.\r\n\r\n---\r\nthanks for looking into this.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7789","RelatedDescription":"Closed issue \"textarea with v-model cannot be updated dynamically\" (#7789)"},{"Id":"304063152","IsPullRequest":false,"CreatedAt":"2018-03-10T12:28:55","Actor":"konstantinrachev","Number":"7788","RawContent":null,"Title":"Maximum call stack exceeded when using with custom components","State":"closed","Body":"### Version\r\n2.5.14\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/175425/](https://jsfiddle.net/50wL7mdz/175425/)\r\n\r\n### Steps to reproduce\r\n1. Including vue(v.2.5.14) and element.io styles and library.\r\n2. Opening new form.\r\n3. Opening new form element.\r\n4. Using custom date picker element.\r\n\r\n### What is expected?\r\nIt is expected to render a custom UI component for date picking.\r\n\r\n### What is actually happening?\r\nThe element is not being render as the console is filled with errors.\r\n\r\n[Vue warn]: Error in render: \"RangeError: Maximum call stack size exceeded\", vue.js:597\r\nRangeError: Maximum call stack size exceeded, vue.js:1745\r\n\r\n\r\n\r\n---\r\nThe issue is related to the latest vue.js version as it is working as expected with all up to 2.5.13.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7788","RelatedDescription":"Closed issue \"Maximum call stack exceeded when using with custom components\" (#7788)"},{"Id":"304043670","IsPullRequest":true,"CreatedAt":"2018-03-10T05:23:24","Actor":"chrisvfritz","Number":"7785","RawContent":null,"Title":"Add initial prettier integration","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Code style update\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n\r\n**Other information:**\r\n\r\nHere's an initial implementation of Prettier integration, with changes made to each file so that we can see how the source would change. Once we've confirmed the configs in `.eslintrc` and `.prettierrc` look good, I think it would be a good idea to do the following prior to merging:\r\n\r\n- Build the Prettier ESLint overrides into `eslint-plugin-vue-libs`.\r\n- Ship the Prettier config with `eslint-plugin-vue-libs`, so that we can maintain consistency between projects with the following in a `.prettierrc.js` file:\r\n\r\n  ```js\r\n  module.exports = require('eslint-plugin-vue-libs/.prettierrc.js')\r\n  ```\r\n\r\nThen once this is merged, I can create PRs for our other repos.","Url":"https://github.com/vuejs/vue/pull/7785","RelatedDescription":"Open PR \"Add initial prettier integration\" (#7785)"},{"Id":"304041527","IsPullRequest":false,"CreatedAt":"2018-03-10T04:43:39","Actor":"luisatmaniak","Number":"7784","RawContent":null,"Title":"SSR   Async Component   Functional = TypeError: Cannot read property 'Ctor' of undefined","State":"open","Body":"### Version\r\n2.5.14\r\n\r\n### Reproduction link\r\n[https://github.com/luisatmaniak/vue-hackernews-2.0/commit/142d1d7f4e96a19cf31d7c018bbd8797e7b28ad3](https://github.com/luisatmaniak/vue-hackernews-2.0/commit/142d1d7f4e96a19cf31d7c018bbd8797e7b28ad3)\r\n\r\n### Steps to reproduce\r\nOn the server, when rendering a component asynchronously that is also functional, errors are thrown on the console. In this particular repo (vue hacker news 2.0) it fails the first time, but for some reason, it works for a subsequent request. The same thing works just fine if it's done in the browser (non-ssr).\r\n\r\n### What is expected?\r\nNo errors thrown, correct HTML produced on the server.\r\n\r\n### What is actually happening?\r\nAn error is thrown on the console, HTML not produced at all.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7784","RelatedDescription":"Open issue \"SSR   Async Component   Functional = TypeError: Cannot read property 'Ctor' of undefined\" (#7784)"},{"Id":"303632002","IsPullRequest":false,"CreatedAt":"2018-03-09T20:44:40","Actor":"senid231","Number":"7772","RawContent":null,"Title":"functional component can't render multiple root nodes if they are functional components too","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/senid231/cxuoxdme/24/](https://jsfiddle.net/senid231/cxuoxdme/24/)\r\n\r\n### Steps to reproduce\r\njust observe JSFiddle link\r\n\r\n### What is expected?\r\nTo see `<span>Hi</span>` 32 times (2^^5)\r\n\r\n### What is actually happening?\r\n`undefinedundefined`\r\n\r\nit renders `undefined` instead of each functional component\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7772","RelatedDescription":"Closed issue \"functional component can't render multiple root nodes if they are functional components too\" (#7772)"},{"Id":"303430250","IsPullRequest":false,"CreatedAt":"2018-03-09T20:14:31","Actor":"Jack85","Number":"7768","RawContent":null,"Title":"webassembly ideas","State":"closed","Body":"### What problem does this feature solve?\r\nwebassembly integration, compilation, performance\r\n\r\n### What does the proposed API look like?\r\nCame across interesting project bringing webassembly .net core and jsworld together into browser\r\nhttps://www.youtube.com/watch?v=MiLAE6HMr10&feature=youtu.be&t=31m45s\r\n\r\nhttps://github.com/aspnet/Blazor\r\n\r\nJust a brainstorm or future future inspiration , if could you imagine if this could work or be integrated with vue workflow logic (making a dll, plugin, fork etc.), components, layouts, vuex communication and so on. Creating some kind of integration package or whatever comes to your mind? Just bringing ideas how incrementally adoptable this could be, if we could use vue goodness there.\r\nThanks for feedback\r\n\r\n```cs\r\n<h1>Counter</h1>\r\n\r\n<p>Current count: @currentCount</p>\r\n\r\n<button @onclick(IncrementCount)>Click me</button>\r\n\r\n@functions {\r\n    int currentCount = 0;\r\n\r\n    void IncrementCount()\r\n    {\r\n        currentCount++ ;\r\n    }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7768","RelatedDescription":"Closed issue \"webassembly ideas\" (#7768)"},{"Id":"303965155","IsPullRequest":false,"CreatedAt":"2018-03-09T20:10:02","Actor":"italomoralesf","Number":"7783","RawContent":null,"Title":"Render lists of nested comments","State":"closed","Body":"### I request help\r\nI have a comment json with a field called parent_id, but I do not know how to structure them visually.\r\n\r\n[{\r\n\"id\":1,\r\n\"parent_id\":0,\r\n\"user_id\":1,\r\n\"comment\":\"Comment 1\",\r\n\"since\":\"2 days ago\",\r\n},{\r\n\"id\":2,\r\n\"parent_id\":1,\r\n\"user_id\":1,\r\n\"comment\":\"Comment 2\",\r\n\"since\":\"3 days ago\",\r\n}]\r\n\r\nHow to render a nested list (dynamic) in vuejs.","Url":"https://github.com/vuejs/vue/issues/7783","RelatedDescription":"Closed issue \"Render lists of nested comments\" (#7783)"},{"Id":"303821832","IsPullRequest":true,"CreatedAt":"2018-03-09T13:54:56","Actor":"g-plane","Number":"7781","RawContent":null,"Title":"chore: fix typo","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: fix typo\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/7781","RelatedDescription":"Closed or merged PR \"chore: fix typo\" (#7781)"},{"Id":"303823792","IsPullRequest":false,"CreatedAt":"2018-03-09T13:00:05","Actor":"Sparki2002","Number":"7782","RawContent":null,"Title":"Checkbox binding not working","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Sparki2002/dnjrjkmn/2/](https://jsfiddle.net/Sparki2002/dnjrjkmn/2/)\r\n\r\n### Steps to reproduce\r\n1. Create a data property named \"value\"\r\n2. Create a input element with checkbox type on your template and bind it's value attribute to the value property\r\n3. Run the code and check and uncheck the checkbox while observing the value property\r\n\r\n### What is expected?\r\nThe value property should be the same as the checkbox check state\r\n\r\n### What is actually happening?\r\n- The value property is always false\r\n\r\n---\r\n- It's working on Firefox (59/60), but not on Chrome (64/65).\r\n- I've also tried using the checked attribute on the input element\r\n- I can't use v-model because of other mechanisms in my code\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7782","RelatedDescription":"Closed issue \"Checkbox binding not working\" (#7782)"},{"Id":"303820343","IsPullRequest":false,"CreatedAt":"2018-03-09T12:06:56","Actor":"Sparki2002","Number":"7780","RawContent":null,"Title":"Checkbox binding not working on Chrome","State":"closed","Body":"Hi,\r\n\r\ni'm using Chrome 64/65 and vue 2.5.13\r\n\r\ni try to bind the value of my checkbox to a variable, but it's always false (the problem does not exist in Firefox)\r\n\r\nI tried value and checked properties, both are not working and I cant use v-model because of other mechanisms in my code.\r\n\r\n```vue\r\n<template>\r\n  <div>\r\n    <input :value=\"value\" type=\"checkbox\">\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Test\",\r\n  props: {\r\n    value: {\r\n      required: true\r\n    }\r\n  }\r\n};\r\n</script>\r\n```","Url":"https://github.com/vuejs/vue/issues/7780","RelatedDescription":"Closed issue \"Checkbox binding not working on Chrome\" (#7780)"},{"Id":"303806104","IsPullRequest":false,"CreatedAt":"2018-03-09T11:10:51","Actor":"fyuan1992","Number":"7779","RawContent":null,"Title":"Use transition for router-view  and component use v-fcuse, the animation  lose frame","State":"closed","Body":"# Use transition for router-view  and component use v-fcuse, the animation  lose frame\r\nuse vue-cli\r\n## app.vue\r\n```html\r\n<div id=\"app\">\r\n    <transition :name=\"transitionName\">\r\n        <router-view></router-view>\r\n    </transition>\r\n</div>\r\n```\r\n```javascript\r\nexport default {\r\n  name: 'App',\r\n  data () {\r\n    return {\r\n      transitionName: 'slide-left'\r\n    }\r\n  },\r\n  watch: {\r\n    '$route' (to, from) {\r\n      const toDepth = to.path.split('/').length\r\n      const fromDepth = from.path.split('/').length\r\n      console.log(toDepth + '------' + fromDepth)\r\n      this.transitionName = toDepth < fromDepth ? 'slide-right' : 'slide-left'\r\n      console.log(this.transitionName)\r\n    }\r\n  }\r\n}\r\n```\r\n```css\r\n.slide-left-enter-active,\r\n.slide-left-leave-active,\r\n.slide-right-enter-active,\r\n.slide-right-leave-active {\r\n  will-change: transform;\r\n  transition: all 1000ms;\r\n  height: 100%;\r\n  top: 0;\r\n  position: absolute;\r\n  backface-visibility: hidden;\r\n  perspective: 1000;\r\n}\r\n.slide-left-enter {\r\n  opacity: 0;\r\n  transform: translate3d(100%, 0, 0);\r\n}\r\n.slide-left-leave-active {\r\n  opacity: 0;\r\n  transform: translate3d(-100%, 0, 0);\r\n}\r\n.slide-right-enter {\r\n  opacity: 0;\r\n  transform: translate3d(-100%, 0, 0);\r\n}\r\n.slide-right-leave-to {\r\n  opacity: 0;\r\n  transform: translate3d(100%, 0, 0);\r\n}\r\n```\r\n## router component \r\n```html\r\n<div>\r\n  <input type=\"text\" v-focus placeholder=\"something\">\r\n</div>\r\n```\r\n```javascript\r\nexport default {\r\n  directives: {\r\n    focus: {\r\n      inserted: function (el) {\r\n        el.focus()\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\nnow load this component or reload,the the animation  lose frame","Url":"https://github.com/vuejs/vue/issues/7779","RelatedDescription":"Closed issue \"Use transition for router-view  and component use v-fcuse, the animation  lose frame\" (#7779)"},{"Id":"303791368","IsPullRequest":false,"CreatedAt":"2018-03-09T10:32:05","Actor":"1969290646","Number":"7778","RawContent":null,"Title":"How does a single file component pass context.data?","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/rjjmpvwm4n/](https://codesandbox.io/s/rjjmpvwm4n/)\r\n\r\n### Steps to reproduce\r\nJust look at the codesandbox.\r\n\r\n### What is expected?\r\n[issues 7777](https://github.com/vuejs/vue/issues/7777)\r\n\r\n### What is actually happening?\r\nError\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7778","RelatedDescription":"Closed issue \"How does a single file component pass context.data?\" (#7778)"},{"Id":"303757940","IsPullRequest":false,"CreatedAt":"2018-03-09T09:18:15","Actor":"1969290646","Number":"7777","RawContent":null,"Title":"Cannot use functional components inside of transition-group","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/_MT_/qzLptLvs/10/](https://jsfiddle.net/_MT_/qzLptLvs/10/)\r\n\r\n### What is expected?\r\n```\r\n[Vue warn]: <transition-group> children must be keyed: <element>\r\n```\r\n\r\n\r\n### What is actually happening?\r\n渲染失败\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7777","RelatedDescription":"Closed issue \"Cannot use functional components inside of transition-group\" (#7777)"},{"Id":"303701749","IsPullRequest":false,"CreatedAt":"2018-03-09T08:25:22","Actor":"rawbin-","Number":"7773","RawContent":null,"Title":"default slot replaced but also executed and throw errors","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/rawbin/8y1vsc9h/8/](https://jsfiddle.net/rawbin/8y1vsc9h/8/)\r\n\r\n### Steps to reproduce\r\nchid with default slot and render incorrect data\r\n\r\n### What is expected?\r\nno error， or just replace and not execuite\r\n\r\n### What is actually happening?\r\nexecute and throw unrelated errors\r\n![image](https://user-images.githubusercontent.com/8169783/37187193-20d9ff6a-2384-11e8-89da-e25408cdacd0.png)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\n### background\r\nhttps://jsfiddle.net/rawbin/wL5u5097/","Url":"https://github.com/vuejs/vue/issues/7773","RelatedDescription":"Closed issue \"default slot replaced but also executed and throw errors\" (#7773)"},{"Id":"303748819","IsPullRequest":false,"CreatedAt":"2018-03-09T08:22:07","Actor":"zhangenming","Number":"7774","RawContent":null,"Title":"Different results","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/xlz0rk5roq](https://codesandbox.io/s/xlz0rk5roq)\r\n\r\n### Steps to reproduce\r\n1 vue init webpack vueDemo\r\n\r\n2 change main.js \r\ntemplate: \"<App/>\"  --->>> template: \"1<App/>\" \r\nwill get a [Vue warn]\r\n\r\n3 change index.html\r\n <div id=\"app\"></div> --->>> <div id=\"app\">2<App/></div>\r\nwill rendered string 2\r\n\r\nthat's get a Different results\r\n\r\n### What is expected?\r\nthat's get a same results\r\n\r\n### What is actually happening?\r\nthat's get a Different results\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7774","RelatedDescription":"Closed issue \"Different results\" (#7774)"},{"Id":"303756538","IsPullRequest":false,"CreatedAt":"2018-03-09T08:19:55","Actor":"ilife5","Number":"7775","RawContent":null,"Title":"Why are there properties starting with _ and others starting with $","State":"closed","Body":"### What problem does this feature solve?\r\n我在阅读Vue的源码，发现Vue实例上既有$前缀的方法，如$set，$delete，也有_前缀的方法，如_render。\r\n请问这两种前缀在使用上有什么区别呢？\r\n\r\n### What does the proposed API look like?\r\n以上是我的一些疑问，恳请小伙伴们回答解惑。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7775","RelatedDescription":"Closed issue \"Why are there properties starting with _ and others starting with $\" (#7775)"},{"Id":"303757868","IsPullRequest":false,"CreatedAt":"2018-03-09T08:13:03","Actor":"1969290646","Number":"7776","RawContent":null,"Title":"Vue transition-group 中渲染函数组件报错","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/_MT_/qzLptLvs/10/](https://jsfiddle.net/_MT_/qzLptLvs/10/)\r\n\r\n### Steps to reproduce\r\nconst Tag = Vue.component('cpt-tag',{\r\n\tfunctional: true,\r\n\trender (h, c) {\r\n  \treturn h('span', 'tag')\r\n  }\r\n})\r\n\r\n\r\n  <transition-group tag=\"div\" name=\"tag-list\">\r\n    <tag v-for=\"index in 5\" :key=\"index\"></tag>\r\n  </transition-group>\r\n</div>\r\n\r\n### What is expected?\r\n[Vue warn]: <transition-group> children must be keyed: <span>\r\n\r\n### What is actually happening?\r\n渲染失败\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7776","RelatedDescription":"Closed issue \"Vue transition-group 中渲染函数组件报错\" (#7776)"},{"Id":"303583244","IsPullRequest":false,"CreatedAt":"2018-03-08T18:27:19","Actor":"lsimone","Number":"7771","RawContent":null,"Title":"extended global Vue cannot use its own plugins","State":"open","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/b5a1zh6u/31/](https://jsfiddle.net/b5a1zh6u/31/)\r\n\r\n### Steps to reproduce\r\njust open this simple use case: https://jsfiddle.net/b5a1zh6u/31/ \r\nyou will see an error in console.\r\n\r\n\r\n\r\n### What is expected?\r\nAs written in [this issue](https://github.com/vuejs/vue-test-utils/issues/2#issuecomment-371568210), Vue.extend()\r\n does not work as expected.\r\nThe code should create a new global Vue instance and installa a plugin that is used by the component template.\r\n\r\n### What is actually happening?\r\nconsole error due to `$t` method not found.\r\n\r\n---\r\nI wrote the reproduction fiddle starting from [Evan's one](https://jsfiddle.net/yyx990803/b5a1zh6u/)\r\n\r\nif I set the $t function directly or as a plugin, on the global Vue like this, it works:\r\n\r\n```\r\nVue.prototype.$t = val => `* ${val}`\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7771","RelatedDescription":"Open issue \"extended global Vue cannot use its own plugins\" (#7771)"},{"Id":"303583193","IsPullRequest":false,"CreatedAt":"2018-03-08T18:27:10","Actor":"leodutra","Number":"7770","RawContent":null,"Title":"Simple current solution for constants (ref #6004)","State":"closed","Body":"I recommend adding the current solution for constants, in the docs:\r\n```\r\nimport * as constants, { FOO } from './constants'\r\n\r\n// ...\r\ndata: {\r\n   ...constants\r\n}\r\n```","Url":"https://github.com/vuejs/vue/issues/7770","RelatedDescription":"Closed issue \"Simple current solution for constants (ref #6004)\" (#7770)"},{"Id":"303098990","IsPullRequest":true,"CreatedAt":"2018-03-08T17:09:49","Actor":"HcySunYang","Number":"7762","RawContent":null,"Title":"chore: modify the variable reference","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: modify the variable reference\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/7762","RelatedDescription":"Closed or merged PR \"chore: modify the variable reference\" (#7762)"},{"Id":"303459861","IsPullRequest":false,"CreatedAt":"2018-03-08T13:37:48","Actor":"mihajlo-brankovic","Number":"7769","RawContent":null,"Title":"Configurable 'document' reference","State":"closed","Body":"### What problem does this feature solve?\r\nI'm using .vue components containing html and styles. I want to use a container wrapped into an iframe. I'm using the following code. \r\n\r\n    new Vue({\r\n      el:iframeContainer,  // reference to a container element within an iframe\r\n      template: '<Panel/>',\r\n      components : { Panel }\r\n    });\r\n\r\nThe rendered html gets injected properly, but the generated style tag does not. It gets injected into the default (main) document head element, which makes no sense in this case cause it's isolated from the rendered html.\r\n\r\nOne solution would be to have an option to configure custom document object. \r\nAnother option would be to make sure that both (html and styles) get injected into the same isolated context (document).     \r\n\r\nI would prefer the first one. \r\n\r\n### What does the proposed API look like?\r\nVue.options.document = myIframe.contentDocument.\r\n\r\nVue.document = Vue.options.document || document;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7769","RelatedDescription":"Closed issue \"Configurable 'document' reference\" (#7769)"},{"Id":"303412459","IsPullRequest":false,"CreatedAt":"2018-03-08T09:32:27","Actor":"fnlctrl","Number":"7767","RawContent":null,"Title":"Render function called whenever a computed value's dependency is updated, though the value didn't change","State":"open","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/72gzmayL/](https://jsfiddle.net/72gzmayL/)\r\n\r\n### Steps to reproduce\r\nOpen the jsfiddle link, see console output.\r\n\r\n\r\n### What is expected?\r\nRender function isn't called.\r\n\r\n### What is actually happening?\r\nRender function is called even when nothing is changed.\r\n\r\n---\r\nThis creates unnecessary render function calls, which leads to performance issues when the component is complex and render function calls aren't cheap.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7767","RelatedDescription":"Open issue \"Render function called whenever a computed value's dependency is updated, though the value didn't change\" (#7767)"},{"Id":"303273776","IsPullRequest":false,"CreatedAt":"2018-03-07T22:35:51","Actor":"networkimprov","Number":"7766","RawContent":null,"Title":"Add or Expose HTML attribute escape function","State":"closed","Body":"### What problem does this feature solve?\r\nTo instantiate Vue components into Markdown or other runtime-generated HTML, the generated HTML provides a $mount point as `<component id=\"uid\"></component>`. The uid must be properly attribute-escaped, and this is not trivial (see link below). If Vue already has an attribute-escape function, it should be exposed in the API, if not please consider adding one.\r\n\r\nThere are many use cases for Vue components in Markdown; in my case I'm extending markdown to support fillable forms generated from a schema external to the markdown.\r\n\r\n### What does the proposed API look like?\r\nVue.attrEscape(string), returns string\r\n\r\nVue.attrUnescape(string), returns string\r\n\r\nMuch more on attribute escaping:  \r\nhttps://stackoverflow.com/questions/7753448/how-do-i-escape-quotes-in-html-attribute-values\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7766","RelatedDescription":"Closed issue \"Add or Expose HTML attribute escape function\" (#7766)"},{"Id":"303248679","IsPullRequest":true,"CreatedAt":"2018-03-07T20:31:30","Actor":"yyx990803","Number":"7765","RawContent":null,"Title":"feat(core): support passing down scopedSlots with v-bind","State":"open","Body":"Allow passing down scoped slots using `v-bind`:\r\n\r\n``` vue\r\n<child v-bind=\"{ scopedSlots: $scopedSlots }\">\r\n</child>\r\n```\r\n\r\nclose #7178, close #7351 ","Url":"https://github.com/vuejs/vue/pull/7765","RelatedDescription":"Open PR \"feat(core): support passing down scopedSlots with v-bind\" (#7765)"},{"Id":"303236191","IsPullRequest":false,"CreatedAt":"2018-03-07T19:50:46","Actor":"AlexandreBonneau","Number":"7764","RawContent":null,"Title":"Make the warning messages more explicit","State":"open","Body":"### What problem does this feature solve?\r\nWhen seeing warning message like `[Vue warn]: Invalid prop: type check failed for prop \"value\". Expected Number, got String.`, it would be great if Vue could display the actual values it encountered.\r\n\r\nFor instance, immediately seeing `2` and `'2'` would speed up development.\r\n\r\n### What does the proposed API look like?\r\nNo API changes\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7764","RelatedDescription":"Open issue \"Make the warning messages more explicit\" (#7764)"},{"Id":"303111682","IsPullRequest":false,"CreatedAt":"2018-03-07T14:37:39","Actor":"alexgrozav","Number":"7763","RawContent":null,"Title":"When using [Boolean, String] props, Boolean does not work properly","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/165238/](https://jsfiddle.net/50wL7mdz/165238/)\r\n\r\n### Steps to reproduce\r\nCreate a component property that has `[Boolean, String]` types. The HTML5-like attribute doesn't behave like a normal Boolean value anymore, instead it gets discarded as empty string.\r\n\r\n### What is expected?\r\nI would expect both the HTML5 attribute and the v-bind attribute to have the same output.\r\n\r\n### What is actually happening?\r\nWhen adding String as a prop type as well, the HTML5 attribute version is not working.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7763","RelatedDescription":"Closed issue \"When using [Boolean, String] props, Boolean does not work properly\" (#7763)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"303915363","IsPullRequest":false,"CreatedAt":"2018-03-09T17:17:06","Actor":"dotnetCarpenter","Number":"2099","RawContent":null,"Title":"Setting pushState title","State":"open","Body":"### What problem does this feature solve?\r\nIs there any objections against a PR that opens up for setting the `pushState()` title argument in [push-state.js](https://github.com/vuejs/vue-router/blob/dev/src/util/push-state.js#L50).\r\n\r\nI'm porting an app to use vue-router and the app had this before. I realise that Firefox ignores the title, but other browsers do not. The app is using vue-router to enable deep linking. The app display PDFs with hundreds of pages. I got the back/forward buttons working pretty easily but the resulting list is completely unreadable, since it is just the `document.title` repeated 10-100 times. I would like to add the page number to each entry.\r\n\r\n### What does the proposed API look like?\r\nNot sure... Could be:\r\n```js\r\nthis.$router.push({\r\n  meta: { title: `page ${pageCurrent} - foobar` }\r\n})\r\n```\r\nBut I don't have any preferences other than the one the vue-router team + community prefer. :)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2099","RelatedDescription":"Open issue \"Setting pushState title\" (#2099)"},{"Id":"303898094","IsPullRequest":true,"CreatedAt":"2018-03-09T16:26:27","Actor":"bmarkovic","Number":"2098","RawContent":null,"Title":"Add support for 'disabled' attribute to <router-link>, fixes #916","State":"open","Body":"During the discussion on #916 a solution was mentioned, where attribute `disabled` in `<router-link>` would prevent the link from working. This is useful for programmatically disabling router links based on application state. \r\n\r\nCompared to other solutions, both available and proposed, this is by far the cleanest and most idiomatic if you come from a HTML mindset, as it's available on form elements with the same purpose, and some CSS frameworks like Bootstrap promote its use for `<li><a>` navigation elements. \r\n\r\nFurthermore, binding to disabled attribute is a simple, easy to style and implement, and I honestly believe that for these reasons, it is also very idiomatic to Vue.js as well.\r\n\r\nThis pull request implements that proposal.","Url":"https://github.com/vuejs/vue-router/pull/2098","RelatedDescription":"Open PR \"Add support for 'disabled' attribute to <router-link>, fixes #916\" (#2098)"},{"Id":"303819954","IsPullRequest":false,"CreatedAt":"2018-03-09T12:05:18","Actor":"helixcg","Number":"2097","RawContent":null,"Title":".$route.query传参中  数值+'/'+数值 做参数，路由页面值改变","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n    onButtonClick (type) {\r\n      var all= this.$route.query.num+\"/\"+type\r\n     // this.$route.query.num=328   type=15712121212\r\n      this.$router.push({\r\n        path: 'abc',\r\n        name: 'abc',\r\n        query:{num:all}\r\n      });\r\n    },\r\n\r\n路由页面url为   ?num=328%**2F**15712121212\r\n原因是什么呢","Url":"https://github.com/vuejs/vue-router/issues/2097","RelatedDescription":"Closed issue \".$route.query传参中  数值+'/'+数值 做参数，路由页面值改变\" (#2097)"},{"Id":"303777784","IsPullRequest":true,"CreatedAt":"2018-03-09T09:33:47","Actor":"nurdism","Number":"2096","RawContent":null,"Title":"Implements issue #2069","State":"open","Body":"This is a PR for issue #2069\r\nAdds smooth scrolling option to scrollBehavior position.","Url":"https://github.com/vuejs/vue-router/pull/2096","RelatedDescription":"Open PR \"Implements issue #2069\" (#2096)"},{"Id":"303682614","IsPullRequest":false,"CreatedAt":"2018-03-09T00:30:59","Actor":"narusas","Number":"2095","RawContent":null,"Title":"scrollBehaviour should be executed before after hooks when pressing the back button","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/narusas/ektba5vj/8/](https://jsfiddle.net/narusas/ektba5vj/8/)\r\n\r\n### Steps to reproduce\r\nOpen https://jsfiddle.net/narusas/ektba5vj/8/ \r\nOpen Dev console\r\nClick '/hello1'\r\nClear console\r\n\r\nScroll some\r\nCheck console \r\n```javascript\r\n\tscroll 4\r\n \tscroll 8\r\n \tscroll 12\r\n```\r\n\r\nClick '/hello2'\r\nCheck console\r\n```javascript\r\n\tComponent1 beforeRouteLeave\r\n\tnext-beforeRouteLeave-Component1\r\n \tglobal router  beforeEach\r\n \t/hello2 route beforeEnter\r\n \tComponent2 beforeRouteEnter\r\n\tnext-beforeRouteEnter-Component2\r\n\tglobal router beforeResolve\r\n\tglobal router afterEach\r\n\tComponent2 beforeCreate\r\n\tComponent2 created\r\n\tComponent2 beforeMount\r\n\tComponent2 mounted\r\n\tscrollBehavior\r\n\tscrollBehavior - resolve\r\n\tscroll 0 \r\n ```\r\n\r\nCurrently It's ok\r\n\r\nNow press back-button\r\nCheck console\r\n```javascript\r\n\tComponent2 beforeRouteLeave\r\n\tscroll 12   <---- Why This Timing???? Why leaving component is  scrolled??  \r\n\tnext-beforeRouteLeave-Component2\r\n\tglobal router  beforeEach\r\n\t/hello1 route beforeEnter\r\n\tComponent1 beforeRouteEnter\r\n\tnext-beforeRouteEnter-Component1\r\n\tglobal router beforeResolve\r\n\tglobal router afterEach\r\n\tComponent1 beforeCreate\r\n\tComponent1 created\r\n\tComponent1 beforeMount\r\n\tComponent1 mounted\r\n\tscrollBehavior\r\n```\r\n\r\n### What is expected?\r\nWhen press back button, \r\nBefore router leave, no scrolling is executed.\r\n\r\n### What is actually happening?\r\nWhen press back button,\r\nLeave component is  scrolled strange position. \r\nAfter that scrolling, Entering Component is entered.  \r\nIt looks like flickering. \r\n\r\n\r\n\r\n\r\n\r\n---\r\nNow I creating some SPA web site. \r\nWhen user press back/foward button, leaving component is scrolled and after that show entering component. \r\nSO It is flickering!\r\nAlso, I use lazy image loading. So user press back/foward, this not-intented  scrolling will call unnecessary image loading , and progressive loading animation is showed.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2095","RelatedDescription":"Open issue \"scrollBehaviour should be executed before after hooks when pressing the back button\" (#2095)"},{"Id":"303340809","IsPullRequest":true,"CreatedAt":"2018-03-08T09:51:10","Actor":"kazupon","Number":"2094","RawContent":null,"Title":"update ja docs","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n/ping @re-fort @potato4d @lmiller1990 @38elements\r\nどなたかレビューしてもらえると助かります！ 🙏 ","Url":"https://github.com/vuejs/vue-router/pull/2094","RelatedDescription":"Closed or merged PR \"update ja docs\" (#2094)"},{"Id":"303107765","IsPullRequest":false,"CreatedAt":"2018-03-07T14:58:01","Actor":"maki10","Number":"2093","RawContent":null,"Title":"Vue Router not working properly in Component when url have some deep","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/43q4nsx9/2/](https://jsfiddle.net/43q4nsx9/2/)\r\nGo to second home, and click on an image (but you must have some deep's in URL, in order to see the issue) \r\n\r\n### Steps to reproduce\r\nWhen calling `route-link` form Component, they switch URL bad.\r\nFor example:\r\n- My domain is: `example.com/shop/shop-slug/`\r\n- Root Vue make a path: `example.com/shop/shop-slug#/`\r\n- And Bug occurred on `Product` Component when changing the path. Router link adds me: `example.com/#/product/{{ product.id }}`\r\n\r\nI try `$router.fullPath` and get `#/product/{{ product.id }}`.\r\nTry to match, replace `router-link` nothing work as I expected?\r\n\r\n\r\n### What is expected?\r\nTo match full URL.\r\n\r\n### What is actually happening?\r\nThe router doesn't catch good URL\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2093","RelatedDescription":"Closed issue \"Vue Router not working properly in Component when url have some deep\" (#2093)"},{"Id":"302588196","IsPullRequest":false,"CreatedAt":"2018-03-06T07:12:29","Actor":"cmzz","Number":"2092","RawContent":null,"Title":"路由不能跳转","State":"closed","Body":"![image](https://user-images.githubusercontent.com/6111715/37018782-9b014af4-2150-11e8-8033-f4f7f35c89d7.png)\r\n\r\n代码是 this.$router.push({path: '/'});\r\n\r\n结果无法跳转，控制台无限的输出上面图片的消息，导致浏览器卡死。\r\n\r\n请问这是什么问题呢。","Url":"https://github.com/vuejs/vue-router/issues/2092","RelatedDescription":"Closed issue \"路由不能跳转\" (#2092)"},{"Id":"302006123","IsPullRequest":true,"CreatedAt":"2018-03-05T18:10:27","Actor":"Jinjiang","Number":"2087","RawContent":null,"Title":"[docs][zh-cn] synced udpates and some typos","State":"closed","Body":"Translated #2043 and some handy typos.\r\n/ping @Justineo ","Url":"https://github.com/vuejs/vue-router/pull/2087","RelatedDescription":"Closed or merged PR \"[docs][zh-cn] synced udpates and some typos\" (#2087)"},{"Id":"302342743","IsPullRequest":true,"CreatedAt":"2018-03-05T15:26:58","Actor":"doppelreim","Number":"2091","RawContent":null,"Title":"change example for apache-config","State":"open","Body":"This is a PR for issue #2090\r\n\r\nInstead of using `mod_rewrite`, it may be possible to use `FallbackResource` (see https://httpd.apache.org/docs/2.4/mod/mod_dir.html#fallbackresource).  \r\nThat would be more concise and would not depend on `mod_rewrite`.\r\n\r\nDisclaimer: I just started with vue and am not an expert with apache :)\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2091","RelatedDescription":"Open PR \"change example for apache-config\" (#2091)"},{"Id":"302289768","IsPullRequest":false,"CreatedAt":"2018-03-05T14:05:38","Actor":"doppelreim","Number":"2090","RawContent":null,"Title":"Update apache-example for history-mode (documentation)","State":"closed","Body":"### What problem does this feature solve?\r\nFor HTML5 History Mode, there are some example server-configurations in the documentation.\r\n\r\nSee https://github.com/vuejs/vue-router/blob/dev/docs/en/essentials/history-mode.md#apache\r\n\r\nI think the apache-example could be simplified by using https://httpd.apache.org/docs/2.4/mod/mod_dir.html#fallbackresource instead of `mod_rewrite`?\r\n\r\n\r\n### What does the proposed API look like?\r\n```\r\nFallbackResource /index.html\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2090","RelatedDescription":"Closed issue \"Update apache-example for history-mode (documentation)\" (#2090)"},{"Id":"302240531","IsPullRequest":true,"CreatedAt":"2018-03-05T10:58:54","Actor":"Haeresis","Number":"2089","RawContent":null,"Title":"[Doc FR]: update of `rout-object.md` file","State":"closed","Body":"Hi @posva !\r\n\r\nA little translation added from EN doc ;)\r\n","Url":"https://github.com/vuejs/vue-router/pull/2089","RelatedDescription":"Closed or merged PR \"[Doc FR]: update of `rout-object.md` file\" (#2089)"},{"Id":"302191728","IsPullRequest":false,"CreatedAt":"2018-03-05T08:22:28","Actor":"Goblinlordx","Number":"2088","RawContent":null,"Title":"Allow rendering an alternate route without redirect","State":"closed","Body":"### What problem does this feature solve?\r\nGiven a few examples:\r\n\r\nhttps://github.com/someProjectThatDoesntExist\r\nhttps://github.com/goblinlordx/someRepoThatDoesntExist\r\n\r\nWhen these pages render, you can see that even though these are \"Not Found\" the route doesn't change.  This (in my opinion) is fairly important for routing.  Fortunately, this is actually possible for certain cases.  For example:\r\n\r\n```\r\n{\r\n  routes: [\r\n    {path: \"\", component: \"Index\"},\r\n    {path: \"/settings\", component: \"Settings\"},\r\n    {path: \"*\", component: \"NotFound\"},\r\n  ]\r\n}\r\n```\r\n\r\nThe above config will render the \"NotFound\" for routes such as `/doesntexist`.  For routes that are not dynamic, this is trivial to implement.  The problem comes when attempting to accomplish this same behavior when using navigation guards to determine if a path should be displayed to the user or not.  This could be because of failure to load data, or something like authorization.  The current examples do not actually accomplish this and instead actually change the path via redirection.\r\n\r\nCurrently, the navigation guard api only seems to support a few different actions that can be taken in response to a route being called.  These are:\r\n\r\n - Continue to the next route by calling `next()`\r\n - Fail to load the next route by never calling `next()` (probably not something that should be done)\r\n - Fail to load the next route by calling `next(false)`\r\n - Fail to load the next route by calling `next(<Error>)`\r\n - Redirect by pushing path `next({ path/name: \"xxx\")`\r\n - Redirect by replacing path `next({ path/name: \"xxx\", replace: true)`\r\n\r\nNone of these behave in a way similar to the Github example initially mentioned.\r\n\r\n### What does the proposed API look like?\r\nI would propose that when calling `next()` in a navigation guard (or possibly anywhere a `location` can be received) that there be an option that would allow the instance to be replaced without changing the URL.  This could be a property like `changeURL: Boolean (default false)`.  I am honestly not sure what the best name would be but it seems simple enough.  Another option might be something like calling next with something indicating it should behave as if it failed to match a route (not prevent matching another route).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2088","RelatedDescription":"Closed issue \"Allow rendering an alternate route without redirect\" (#2088)"},{"Id":"301702419","IsPullRequest":true,"CreatedAt":"2018-03-02T10:58:53","Actor":"steffans","Number":"2086","RawContent":null,"Title":"Add jsdelivr to package.json","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2086","RelatedDescription":"Closed or merged PR \"Add jsdelivr to package.json\" (#2086)"},{"Id":"301281860","IsPullRequest":true,"CreatedAt":"2018-03-01T05:25:05","Actor":"DrSensor","Number":"2085","RawContent":null,"Title":"Support this.$router.options in Typescript","State":"open","Body":"There is a time when a user wants to access metadata that was defined in `router.ts` ([example](https://github.com/DrSensor/F.I.D.E/blob/develop/src/renderer/components/NavigationSidebar.vue#L93)). I notice that in the typedef `options` is missing.\r\n\r\n![screenshot from 2018-03-01 12-16-59](https://user-images.githubusercontent.com/4953069/36828284-6ed0e5d8-1d4b-11e8-9dc6-0a62c005c384.png)\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2085","RelatedDescription":"Open PR \"Support this.$router.options in Typescript\" (#2085)"},{"Id":"301272914","IsPullRequest":true,"CreatedAt":"2018-03-01T04:20:01","Actor":"cironunes","Number":"2084","RawContent":null,"Title":"feat: introduce afterResolve navigation hook","State":"open","Body":"Still missing tests, but this gives an idea of what I'm trying to achieve.\r\n\r\nLooking forward to hear from you guys.\r\n\r\nCloses #2079 ","Url":"https://github.com/vuejs/vue-router/pull/2084","RelatedDescription":"Open PR \"feat: introduce afterResolve navigation hook\" (#2084)"},{"Id":"301263579","IsPullRequest":false,"CreatedAt":"2018-03-01T03:15:04","Actor":"TyroneYvesChen","Number":"2083","RawContent":null,"Title":"官网上部分例子应使用``而不是''","State":"closed","Body":"#如：const User = {\r\n  template: '<div>User {{ $route.params.id }}</div>'\r\n}","Url":"https://github.com/vuejs/vue-router/issues/2083","RelatedDescription":"Closed issue \"官网上部分例子应使用``而不是''\" (#2083)"},{"Id":"301257346","IsPullRequest":false,"CreatedAt":"2018-03-01T02:36:18","Actor":"decademoon","Number":"2082","RawContent":null,"Title":"beforeRouteEnter next callback is not called (in this very specific async situation)","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/df4Lnuw6/271/](http://jsfiddle.net/df4Lnuw6/271/)\r\n\r\n### Steps to reproduce\r\n- Have a `<router-view v-if=\"ready\">` in the root component's template with `ready` initially `false`.\r\n- Have a single route for path `/` whose component has a `beforeRouteEnter` hook.\r\n- Perform the following in the root component's `created` hook:\r\n  1. Replace the route with `/?x=1` (this causes the same component to be reused).\r\n  2. After a timeout, set `ready` to `true`.\r\n\r\n### What is expected?\r\nThe callback function passed to `next` in the `beforeRouteEnter` hook should be called.\r\n\r\n### What is actually happening?\r\nThe callback function passed to `next` in the `beforeRouteEnter` is not called.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2082","RelatedDescription":"Open issue \"beforeRouteEnter next callback is not called (in this very specific async situation)\" (#2082)"},{"Id":"301139822","IsPullRequest":true,"CreatedAt":"2018-02-28T18:50:58","Actor":"felipe-developer","Number":"2081","RawContent":null,"Title":"Starting portuguese (pt-br) translation","State":"open","Body":"I started the Portuguese translation (pt-br). I count on the help of those who want to collaborate.","Url":"https://github.com/vuejs/vue-router/pull/2081","RelatedDescription":"Open PR \"Starting portuguese (pt-br) translation\" (#2081)"},{"Id":"300943819","IsPullRequest":false,"CreatedAt":"2018-02-28T09:10:15","Actor":"robertmylne","Number":"2080","RawContent":null,"Title":"Multiple Routers","State":"closed","Body":"Are multiple routers supported.\r\n\r\nFor example in Laravel I have routes:\r\n`/account` and `/dashboard`\r\n\r\nCan I use a different set of Vue routes for each Laravel route? So two independent instances of Vue routers?","Url":"https://github.com/vuejs/vue-router/issues/2080","RelatedDescription":"Closed issue \"Multiple Routers\" (#2080)"},{"Id":"300896544","IsPullRequest":false,"CreatedAt":"2018-02-28T05:28:07","Actor":"cironunes","Number":"2079","RawContent":null,"Title":"afterResolve global navigation hook","State":"open","Body":"### What problem does this feature solve?\r\nAs opposed to `beforeResolve`, `afterResolve` would wait until the navigation is done and trigger the registered callbacks.\r\n\r\nThe main reason for that is to be able to track events in the right moment, with the proper url in place, globally.\r\n\r\n### What does the proposed API look like?\r\n```js\r\nrouterInstance.afterResolve(cb);\r\nfunction cb(from, to, next) {...}\r\n```\r\n\r\nI'd love to submit a PR if that's something you'd like to have.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2079","RelatedDescription":"Open issue \"afterResolve global navigation hook\" (#2079)"},{"Id":"300769125","IsPullRequest":false,"CreatedAt":"2018-02-27T20:00:22","Actor":"cdekok","Number":"2078","RawContent":null,"Title":"Incorrect typehint","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vue-router/blob/dev/types/router.d.ts#L27](https://github.com/vuejs/vue-router/blob/dev/types/router.d.ts#L27)\r\n\r\n### Steps to reproduce\r\nThis should be a string not a number\r\n\r\n### What is expected?\r\na string as typehint\r\n\r\n### What is actually happening?\r\na number as typehint\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2078","RelatedDescription":"Closed issue \"Incorrect typehint\" (#2078)"},{"Id":"300643964","IsPullRequest":false,"CreatedAt":"2018-02-27T14:46:40","Actor":"oles","Number":"2077","RawContent":null,"Title":"beforeRouteUpdate is not called on change from multiple named views","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/yfj5tmh4/](https://jsfiddle.net/yfj5tmh4/)\r\n\r\n### Steps to reproduce\r\n0. Open console\r\n1. Click on /1, then /2\r\n2. Every beforeRouteUpdate is called\r\n3. Click on /2/qux, then click on /1 \r\n\r\n### What is expected?\r\nEvery beforeRouteUpdate is called, resulting in console messages.\r\n\r\n### What is actually happening?\r\nNo beforeRouteUpdate is called.\r\n\r\n---\r\nEverything works as expected when clicking on /1 if you've clicked on /2 before /2/qux.\r\n\r\nIt could be that I've miss-understood something, but I'm not 100% sure, and couldn't find any related issues - so here we are :)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2077","RelatedDescription":"Closed issue \"beforeRouteUpdate is not called on change from multiple named views\" (#2077)"},{"Id":"300565322","IsPullRequest":false,"CreatedAt":"2018-02-27T10:06:55","Actor":"CKGrafico","Number":"2076","RawContent":null,"Title":"Specify prop type","State":"closed","Body":"I want to pass a number to a component. My router is like this:\r\n```\r\n{\r\n     path: ':id',\r\n     name: 'schoolPrograms-edit',\r\n     component: () => import('./school-programs-edit/school-programs-edit.component'),\r\n     props: true\r\n}\r\n```\r\n\r\nAnd the component:\r\n\r\n```\r\nexport default class SchoolProgramsEditComponent extends Vue {\r\n    @Prop({type: String})\r\n    id: string;\r\n\r\n    // Vue pass a string\r\n    private get _id(): number {\r\n        return parseInt(this.id, 10);\r\n    }\r\n```\r\n\r\nHow can I specify that id is a number?\r\nThis doesn't work, with routes\r\n```\r\nexport default class SchoolProgramsEditComponent extends Vue {\r\n    @Prop({type: Number})\r\n    id: number;\r\n```\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2076","RelatedDescription":"Closed issue \"Specify prop type\" (#2076)"},{"Id":"300381089","IsPullRequest":false,"CreatedAt":"2018-02-26T20:17:42","Actor":"jesperlandberg","Number":"2075","RawContent":null,"Title":"Make route change wait for store update?","State":"closed","Body":"My question is, when clicking a link, is there any way to make the route change wait for the vuex store to be updated? I'm setting some store variables on link click, but sometimes the route change is a tiny bit to fast.","Url":"https://github.com/vuejs/vue-router/issues/2075","RelatedDescription":"Closed issue \"Make route change wait for store update?\" (#2075)"},{"Id":"300139714","IsPullRequest":false,"CreatedAt":"2018-02-26T11:01:21","Actor":"Overdrivr","Number":"2074","RawContent":null,"Title":"Full support for anchor tags","State":"closed","Body":"### What problem does this feature solve?\r\nAnchor tags cannot be implemented correctly in the current state of things. There are a few techniques to hack a way around, but none of them seem to cover all the following cases:\r\n\r\n- Paths with anchors should always lead to the anchor if reached multiple times (currently, only the first time works, even by refreshing the page)\r\n- Anchor tags urls should be shareable (users should be capable of bookmarking/sharing URLs, in a way that the URL will lead them back directly to the anchor)\r\n\r\nAFAIK, there two solutions currently that partially support those requirements: [vue-router Scroll behavior](https://router.vuejs.org/en/advanced/scroll-behavior.html) that does not support first requirement in a robust manner, and [vue-scrollto](https://github.com/rigor789/vue-scrollto) that does not support second requirement since it's just scrolling without any sense of routing/url.\r\n\r\n### What does the proposed API look like?\r\nThe API is already there, using the hash field\r\n\r\n```\r\n<router-link :to=\"{name: 'SomeVue', hash:'#anchor'}\">Link to anchor</router-link>\r\n\r\n// or\r\n\r\n<a href=\"/somevue#anchor>Link to anchor</a>\r\n```\r\n\r\n```\r\n<div id=\"anchor\">Anchor</div>\r\n```\r\n\r\nWe only need to implement the proper behavior for supporting use cases presented above.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2074","RelatedDescription":"Closed issue \"Full support for anchor tags\" (#2074)"},{"Id":"300092152","IsPullRequest":false,"CreatedAt":"2018-02-26T03:33:44","Actor":"chebysheph","Number":"2073","RawContent":null,"Title":"\"localhost:8080/#/\" changed to \"localhost:8080/?#/\" ?","State":"closed","Body":"### What problem does this feature solve?\r\nFor example, in page \"localhost:8080/#/temp1\" has a input tag, when I modified the input value, and press \"enter\" button, because I did not add \"@keydown.enter\" event on the input tag, so the page url become to \"localhost:8080/?#/login\", but the right result should be \"localhost:8080/#/login\", so  I would like to know how the \"?\" add into the url?And what exactly happened when I press \"enter\" button?\r\n\r\n### What does the proposed API look like?\r\nFor example, in page \"localhost:8080/#/temp1\" has a input tag, when I modified the input value, and press \"enter\" button, because I did not add \"@keydown.enter\" event on the input tag, so the page url become to \"localhost:8080/?#/login\", but the right result should be \"localhost:8080/#/login\", so  I would like to know how the \"?\" add into the url?And what exactly happened when I press \"enter\" button?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2073","RelatedDescription":"Closed issue \"\"localhost:8080/#/\" changed to \"localhost:8080/?#/\" ?\" (#2073)"},{"Id":"299384501","IsPullRequest":false,"CreatedAt":"2018-02-22T15:06:42","Actor":"Dadibom","Number":"2072","RawContent":null,"Title":"Allow router.replace without triggering scrollBehavior","State":"closed","Body":"### What problem does this feature solve?\r\nUsing router.replace to update query parameters. However this triggers scrollBehavior and scrolls to the top. As far as I know, there is no way to distinguish between a push and a replace event.\r\n\r\n### What does the proposed API look like?\r\nHere are some options:\r\n\r\nCould be a simple boolean passed to the scrollBehavior function\r\n```\r\nscrollBehavior (toRoute, fromRoute, savedPosition, isPush) {\r\n```\r\n\r\nIt could be put in the route object to be consistent with this suggestion: https://github.com/vuejs/vue-router/issues/1620\r\n```\r\nscrollBehavior (toRoute, fromRoute, savedPosition) {\r\n    const isPush = toRoute.navigationType === 'push';\r\n```\r\n\r\nI could also work with the replace function accepting an additional parameter, or having a new signature, that simply updates the url and `router.$route` without going through guards, scrollbehavior etc. I originally just updated the state manually to circumvent this (using history.replaceState), however that caused some other sneaky bugs since vue-router didn't know about these changes.\r\n\r\n```\r\nrouter.replace(route, true)\r\n// OR\r\nrouter.replace(route, { noEvents/silent: true })\r\n// OR\r\nrouter.silentReplace(route)\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2072","RelatedDescription":"Closed issue \"Allow router.replace without triggering scrollBehavior\" (#2072)"},{"Id":"299355922","IsPullRequest":false,"CreatedAt":"2018-02-22T14:01:56","Actor":"Dadibom","Number":"2071","RawContent":null,"Title":"Unexpected router.replace behaviour","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/e3odg60s/2/](https://jsfiddle.net/e3odg60s/2/)\r\n\r\n### Steps to reproduce\r\nClick push next three times\r\nthree states should be added (1,2,3)\r\nNow click replace three times. The history list should now look like this:\r\n[1,2,6]\r\n\r\nNow use the back button to go back to the start. _First navigation simply does not work._\r\nThen the order is as follows: [5, 4, 2, 1]\r\n\r\nIt appears that replace actually only _replaces_ on the first call, subsequent calls instead push states.\r\n\r\n### What is expected?\r\nReplace should always replace the current state\r\n\r\n### What is actually happening?\r\nReplace pushes new states\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2071","RelatedDescription":"Closed issue \"Unexpected router.replace behaviour\" (#2071)"},{"Id":"298727966","IsPullRequest":true,"CreatedAt":"2018-02-20T19:58:09","Actor":"samgre","Number":"2070","RawContent":null,"Title":"Implements issue #2040 <router-link .. exact-path />","State":"open","Body":"I've needed this feature many times too. Since there is an issue open, I decided to give it a try solving it even though it's not yet tagged \"contribution welcome\".\r\n\r\nPlease take a look and see if it fits to vue-router.","Url":"https://github.com/vuejs/vue-router/pull/2070","RelatedDescription":"Open PR \"Implements issue #2040 <router-link .. exact-path />\" (#2070)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"303551825","IsPullRequest":true,"CreatedAt":"2018-03-10T01:15:13","Actor":"kazupon","Number":"1177","RawContent":null,"Title":"update ja docs","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1177","RelatedDescription":"Closed or merged PR \"update ja docs\" (#1177)"},{"Id":"303523876","IsPullRequest":false,"CreatedAt":"2018-03-09T11:34:22","Actor":"dotnetCarpenter","Number":"1176","RawContent":null,"Title":"Publisher/subscriber pattern in vuex ","State":"closed","Body":"### What problem does this feature solve?\r\n## To notify components in a long running task ##\r\n\r\nWhile porting some code to a vuex module, I had to re-think the synchronisation pattern and while the reactive pattern is the obvious choice, I went back to pub/sub as described in https://github.com/vuejs/vuex/issues/673#issuecomment-371469565 and posted on https://forum.vuejs.org/t/solved-publisher-subscriber-pattern-in-vuex/29176.\r\n\r\nThe gist is to notify components in a long running task.\r\n\r\nShort of implementing a streaming pattern, I think that evolving the `subscribe` API is an easier solution that solve the use-case efficiently.\r\n\r\nCurrently there exist two API calls for pub/sub. `subscribe` and `subscribeAction`. While `subscribe` listen to all mutations (making it inefficient), `subscribeAction` is pretty limiting. Instead of suggesting and implementing `subscribeCommit`, I suggest leveraging vue's `emit`/`on` system. The plugin system is subject to this exact same discussion.\r\n\r\nBy using vue's pub/sub system, we can remove `subscribeAction` and have a much more flexible system. I made a hack of this, posted in the vue forum, that works very well.\r\n\r\n_Inside vuex action or commit:_\r\n```js\r\nthis._vm.$emit('event', payload)\r\n```\r\n\r\n_Inside a vue component_\r\n```js\r\nthis.$store._vm.$on('event', payload => {/* do something useful */})\r\n```\r\n\r\nBefore doing a PR, I hope to discuss this with you.\r\n\r\nI should note that, my suggestion works equally well in _classic_ mode and _module_ mode.\r\n\r\n### What does the proposed API look like?\r\n```js\r\nstore.subscribe('pages/loaded', (payload, state) => { /* do something useful */ })\r\n```\r\nNote that `mutation` is changed to `payload` because the type is now insignificant (the first argument to subscribe tells us what we're interested in).\r\n\r\nInside a mutation, getter or action:\r\n```js\r\nthis.nofity('event', { a: 'b', c: ['d'] })\r\n```\r\n\r\nFull list of API change:\r\n1. `store.subscribe`\r\n2. `store.nofity`\r\n3. `store.unsubscribe`\r\n4. `store.subscribeOnce`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1176","RelatedDescription":"Closed issue \"Publisher/subscriber pattern in vuex \" (#1176)"},{"Id":"303577490","IsPullRequest":false,"CreatedAt":"2018-03-08T18:16:53","Actor":"bichikim","Number":"1178","RawContent":null,"Title":"Is this safety way?","State":"closed","Body":"### What problem does this feature solve?\r\nUsing a custom property in vuex\r\n\r\n### What does the proposed API look like?\r\n    store.subscribeAction((action, state) => {\r\n      if(!state[sSymbol]){\r\n        state[sSymbol] = myToolForSomething\r\n      }\r\n    })\r\n\r\nin vuex plugin\r\n\r\nIt looks likes working well\r\n\r\nfor example\r\n```\r\nconst actions = {\r\n  a({state}, payload) {\r\n    state[sSymbol](gogogo)\r\n  },\r\n} //working\r\n```\r\n\r\n\r\nWhat do you guys think?\r\nIs it ok to use in production?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1178","RelatedDescription":"Closed issue \"Is this safety way?\" (#1178)"},{"Id":"303578776","IsPullRequest":false,"CreatedAt":"2018-03-08T18:12:43","Actor":"Toltar","Number":"1179","RawContent":null,"Title":"Found text cut off in API Documentation","State":"open","Body":"Wanted to report that in the [api documentation](https://vuex.vuejs.org/en/api.html), there is cut off where it shows the arguments of the capture and dispatch methods. See image below.\r\n\r\n![documentationcutsoff](https://user-images.githubusercontent.com/6003536/37168025-310ca088-22c9-11e8-9347-4956d4916da5.PNG)\r\n","Url":"https://github.com/vuejs/vuex/issues/1179","RelatedDescription":"Open issue \"Found text cut off in API Documentation\" (#1179)"},{"Id":"303518130","IsPullRequest":false,"CreatedAt":"2018-03-08T15:21:43","Actor":"dotnetCarpenter","Number":"1175","RawContent":null,"Title":"Publisher/subscriber pattern in vuex","State":"closed","Body":"While porting some code to a vuex module, I had to re-think the synchronisation pattern and while the reactive pattern is the obvious choice, I went back to pub/sub as described in https://github.com/vuejs/vuex/issues/673#issuecomment-371469565 and posted on https://forum.vuejs.org/t/solved-publisher-subscriber-pattern-in-vuex/29176.\r\n\r\nThe gist is to notify components in a long running task.\r\n\r\nShort of implementing a streaming pattern, I think that evolving the `subscribe` API is an easier solution that solve the use-case efficiently.\r\n\r\nCurrently there exist two API calls for pub/sub. `subscribe` and `subscribeAction`. While `subscribe` listen to all mutations (making it inefficient), `subscribeAction` is pretty limiting. Instead of suggesting and implementing `subscribeCommit`, I suggest leveraging vue's `emit`/`on` system. The plugin system is subject to this exact same discussion.\r\n\r\nBy using vue's pub/sub system, we can remove `subscribeAction` and have a much more flexible system. I made a hack of this, posted in the vue forum, that works very well.\r\n\r\n_Inside vuex action or commit:_\r\n```js\r\nthis._vm.$emit('event', payload)\r\n```\r\n\r\n_Inside a vue component_\r\n```js\r\nthis.$store._vm.$on('event', payload => {/* do something useful */})\r\n```\r\n\r\nBefore doing a PR, I hope to discuss this with you.\r\n\r\nI should note that, my suggestion works equally well in _classic_ mode and _module_ mode.","Url":"https://github.com/vuejs/vuex/issues/1175","RelatedDescription":"Closed issue \"Publisher/subscriber pattern in vuex\" (#1175)"},{"Id":"303303960","IsPullRequest":false,"CreatedAt":"2018-03-08T06:28:40","Actor":"rawbin-","Number":"1174","RawContent":null,"Title":"Error: [vuex] Do not mutate vuex store state outside mutation handlers.","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/m391k2vm8p](https://codesandbox.io/s/m391k2vm8p)\r\n\r\n### Steps to reproduce\r\nchange the grid lines\r\n\r\n### What is expected?\r\nshow errors\r\n\r\n### What is actually happening?\r\nno errors\r\n<img width=\"1651\" alt=\"qq20180308-073512 2x\" src=\"https://user-images.githubusercontent.com/8169783/37125015-a0c59d5e-22a5-11e8-99c1-53e85970c4a1.png\">\r\n\r\n---\r\nany good idea to do with the editable grids with vue and vuex?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1174","RelatedDescription":"Closed issue \"Error: [vuex] Do not mutate vuex store state outside mutation handlers.\" (#1174)"},{"Id":"303010970","IsPullRequest":true,"CreatedAt":"2018-03-07T13:04:30","Actor":"st-sloth","Number":"1173","RawContent":null,"Title":"docs: Mention payload in action handler in API","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1173","RelatedDescription":"Closed or merged PR \"docs: Mention payload in action handler in API\" (#1173)"},{"Id":"302363093","IsPullRequest":false,"CreatedAt":"2018-03-06T07:54:08","Actor":"rawbin-","Number":"1171","RawContent":null,"Title":"any good idea for us to express editable list using vuex?","State":"closed","Body":"### Version\r\n2.3.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/38n8j41vzq](https://codesandbox.io/s/38n8j41vzq)\r\n\r\n### Steps to reproduce\r\njust open the page\r\n\r\n### What is expected?\r\nany good way to bind form using vuex especially when there are many form item to bind\r\n\r\n### What is actually happening?\r\nfor every form item we do like this \r\n\r\n```\r\n<input v-model=\"message\">\r\n// ...\r\ncomputed: {\r\n  message: {\r\n    get () {\r\n      return this.$store.state.myModule.message\r\n    },\r\n    set (value) {\r\n      this.$store.commit('updateMessage', value)\r\n    }\r\n  }\r\n}\r\n```\r\nin case that we use an module to express an data structure,it turns out \r\n\r\n```\r\n<input v-model=\"message\">\r\n// ...\r\ncomputed: {\r\n  message: {\r\n    get () {\r\n      return this.$store.state.myModule.someObj.message\r\n    },\r\n    set (value) {\r\n      this.$store.commit('updateMessage', value)\r\n    }\r\n  },\r\n phone: {\r\n    get () {\r\n      return this.$store.state.myModule.someObj.phone\r\n    },\r\n    set (value) {\r\n      this.$store.commit('updatePhone', value)\r\n    }\r\n  }\r\n}\r\n}\r\n```\r\nit's boring to do this on every form item when there is much more to do\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1171","RelatedDescription":"Closed issue \"any good idea for us to express editable list using vuex?\" (#1171)"},{"Id":"302584175","IsPullRequest":false,"CreatedAt":"2018-03-06T06:52:52","Actor":"Vheissu","Number":"1172","RawContent":null,"Title":"Decoupling Vuex from Vue","State":"open","Body":"### What problem does this feature solve?\r\nI do not work with Vue.js as my primary day-to-day library of choice, however, when I have and have used the VueX state management library with it, it was fantastic. As someone who has worked with Redux before, I appreciated just how much more simple VueX was in comparison to the over-engineered and complicated Redux library.\r\n\r\nAs it currently stands, VueX is tightly coupled to Vue. This means VueX cannot be used with any other framework or library. Would it ever be a consideration to make VueX a standalone library and remove the Vue dependency?\r\n\r\nAt the end of the day, VueX allows the user to work with a bunch of data inside of a single object tree. I have not done the investigative work just yet to see how much VueX relies on Vue, but I would love to know if the team are open to making it a standalone state management solution? It's one of the best state management libraries I have ever used.\r\n\r\n### What does the proposed API look like?\r\nThe proposed API would resemble that of the current plugin. In-fact, the only thing I could see being different is that you do not register the plugin using `Vue.use(Vuex)` and just instantiate it directly and assign the result to a variable/constant called `store` or whatever.\r\n\r\nYou would then configure your state management using the same syntax.\r\n\r\n```\r\nimport Vuex from 'vuex'\r\n\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    counter: 0\r\n  },\r\n  getters: {\r\n    counter: state => state.counter * 2\r\n  },\r\n  mutations: {\r\n    increment: state => state.counter  \r\n  }\r\n});\r\n\r\n// Usage\r\n\r\nconsole.log(store.getters.counter);\r\nstore.commit('increment');\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1172","RelatedDescription":"Open issue \"Decoupling Vuex from Vue\" (#1172)"},{"Id":"302088037","IsPullRequest":true,"CreatedAt":"2018-03-04T14:01:52","Actor":"blackmiaool","Number":"1170","RawContent":null,"Title":"docs: mention mapState needs injected store","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1170","RelatedDescription":"Open PR \"docs: mention mapState needs injected store\" (#1170)"},{"Id":"301516650","IsPullRequest":true,"CreatedAt":"2018-03-01T18:47:18","Actor":"davestewart","Number":"1169","RawContent":null,"Title":"Made getter property vs method syntax more explicit","State":"open","Body":"I've been using Vuex for about a year, and I never realised you could access store getters as methods.\r\n\r\nThis docs update makes the ability to do this explicit, as well as adding notes on caching.","Url":"https://github.com/vuejs/vuex/pull/1169","RelatedDescription":"Open PR \"Made getter property vs method syntax more explicit\" (#1169)"},{"Id":"301164712","IsPullRequest":false,"CreatedAt":"2018-03-01T08:21:15","Actor":"hrasekj","Number":"1167","RawContent":null,"Title":"If module state is an array his submodules are not reactive","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/nvkupd14/16/](https://jsfiddle.net/nvkupd14/16/)\r\n\r\n### Steps to reproduce\r\nCreate an module which have his state as Array. Then create submodule for it.\r\n\r\n### What is expected?\r\nIm expecting that computed properties in modules will react to changes on submodule.\r\n\r\n### What is actually happening?\r\nVue does not map his getters & setters to submodule. So submodules state is changing, but computed properties not.\r\n\r\n---\r\nIt should warn user or something.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1167","RelatedDescription":"Closed issue \"If module state is an array his submodules are not reactive\" (#1167)"},{"Id":"301212285","IsPullRequest":false,"CreatedAt":"2018-02-28T22:42:39","Actor":"DusanMilko","Number":"1168","RawContent":null,"Title":"Uncaught TypeError: Cannot assign to read only property 'watch' of object '#<Store>'","State":"closed","Body":"All I'm doing is\r\n\r\nimport Vue from 'vue';\r\nimport Vuex from 'vuex';\r\n\r\nWhen I compile my js with webpack I get \r\n`Uncaught TypeError: Cannot assign to read only property 'watch' of object '#<Store>'`","Url":"https://github.com/vuejs/vuex/issues/1168","RelatedDescription":"Closed issue \"Uncaught TypeError: Cannot assign to read only property 'watch' of object '#<Store>'\" (#1168)"},{"Id":"300565264","IsPullRequest":true,"CreatedAt":"2018-02-27T10:18:55","Actor":"jacksonjoseph","Number":"1166","RawContent":null,"Title":"Update intro.md","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1166","RelatedDescription":"Closed or merged PR \"Update intro.md\" (#1166)"},{"Id":"300241798","IsPullRequest":false,"CreatedAt":"2018-02-26T14:58:31","Actor":"chetzof","Number":"1165","RawContent":null,"Title":"Vuex triggers the 'updated' hook when a completely unrelated dynamic module is being registered","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/132227/](https://jsfiddle.net/50wL7mdz/132227/)\r\n\r\n### Steps to reproduce\r\nNo steps to reproduce.\r\nJust open the jsfiddle, you will see an alert that is called by the updated() hook. \r\n\r\n### What is expected?\r\nThe alert should not be displayed  because the registration of a new unrelated dynamic module should not trigger anything anywhere that is has no connection to.\r\n\r\n### What is actually happening?\r\nThe component triggers updated() hook when dynamically registering an unrelated module\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1165","RelatedDescription":"Closed issue \"Vuex triggers the 'updated' hook when a completely unrelated dynamic module is being registered\" (#1165)"},{"Id":"300150382","IsPullRequest":true,"CreatedAt":"2018-02-26T09:03:21","Actor":"yanlee26","Number":"1164","RawContent":null,"Title":"it means this?","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1164","RelatedDescription":"Closed or merged PR \"it means this?\" (#1164)"},{"Id":"300128951","IsPullRequest":false,"CreatedAt":"2018-02-26T07:02:08","Actor":"cmingxu","Number":"1163","RawContent":null,"Title":"Is it possible to call some other namespace's  getters from rootGetters?  ","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n// some namespaced moduleA\r\n  getters: {\r\n    bootstrapped: ({ rootGetters }) => {\r\n      console.log( rootGetters['moduleB/getterFunc']() )\r\n    }\r\n  }","Url":"https://github.com/vuejs/vuex/issues/1163","RelatedDescription":"Closed issue \"Is it possible to call some other namespace's  getters from rootGetters?  \" (#1163)"},{"Id":"298980413","IsPullRequest":false,"CreatedAt":"2018-02-21T13:59:18","Actor":"joachimboggild","Number":"1162","RawContent":null,"Title":"Hard-to-locate error when providing wrong parameter type to mapState","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/048lw4q59n](https://codesandbox.io/s/048lw4q59n)\r\n\r\n### Steps to reproduce\r\n1) Open code sandbox provided.\r\n2) Look inside console to the error message provided.\r\n\r\nTo fix the problem, include brackets inside the mapState statement on line 97 in the HelloWorld.vue file.\r\n\r\n### What is expected?\r\nIt was expected that an error message would state that the parameter for the mapState function was invalid in 'HelloWorld.vue'.\r\n\r\n### What is actually happening?\r\nThis error message is returned: \r\n\r\n```\r\n[Vue warn]: Failed to resolve async component: function HelloWorld() {\r\n  return _promise2.default.resolve().then(function () {\r\n    return require(\"./components/HelloWorld\");\r\n  });\r\n}\r\nReason: TypeError: Cannot convert undefined or null to object\r\n```\r\n\r\n---\r\nI just thought that this was a difficult error to track, because the error message provided did not point towards the actual error. If it is possible to make the error message more precise, it would be great.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1162","RelatedDescription":"Open issue \"Hard-to-locate error when providing wrong parameter type to mapState\" (#1162)"},{"Id":"298429261","IsPullRequest":false,"CreatedAt":"2018-02-20T14:52:03","Actor":"kwame101","Number":"1161","RawContent":null,"Title":"Mutation handler don't commit -v","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/l4k5ko85qm](https://codesandbox.io/s/l4k5ko85qm)\r\n\r\n### Steps to reproduce\r\nIf you open Vue devtools and click commit on last mutation it returns null in console\r\n\r\n\r\n\r\n### What is expected?\r\nshould console log 'CoolStuff' just for testing purpose\r\n\r\n\r\n\r\n### What is actually happening?\r\nThe logo and a few text only shows (welcome test)\r\n\r\n---\r\nI'm using mapGetter function to get the name but mutation doesnt commit\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1161","RelatedDescription":"Closed issue \"Mutation handler don't commit -v\" (#1161)"},{"Id":"298428853","IsPullRequest":false,"CreatedAt":"2018-02-19T23:36:22","Actor":"kwame101","Number":"1160","RawContent":null,"Title":"Mutation handler don't commit","State":"closed","Body":"**Version**\r\n3.0.1\r\n\r\n**Reproduction link**\r\nhttps://codesandbox.io/s/l4k5ko85qm\r\n\r\n**Steps to reproduce**\r\nIf you open Vue devtools and click commit on last mutation it returns null in console\r\n\r\n**What is expected?**\r\nshould console log 'CoolStuff' just for testing purpose\r\n\r\n**What is actually happening?**\r\nThe logo and a few text only shows. I'm using mapGetter function to get the name but mutation doesnt commit","Url":"https://github.com/vuejs/vuex/issues/1160","RelatedDescription":"Closed issue \"Mutation handler don't commit\" (#1160)"},{"Id":"297725821","IsPullRequest":false,"CreatedAt":"2018-02-16T11:51:10","Actor":"hungphongbk","Number":"1158","RawContent":null,"Title":"Getters on injected dynamic module get lost","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/104859/](https://jsfiddle.net/50wL7mdz/104859/)\r\n\r\n### Steps to reproduce\r\nGetters from injected dynamic module on reproduction code must returned \"bar ahihi\", but actually I got undefined (the getter didn't exist)\r\n\r\n### What is expected?\r\nGetters from injected dynamic module on reproduction code must returned \"bar ahihi\"\r\n\r\n### What is actually happening?\r\nGot undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1158","RelatedDescription":"Closed issue \"Getters on injected dynamic module get lost\" (#1158)"},{"Id":"297755577","IsPullRequest":false,"CreatedAt":"2018-02-16T11:45:27","Actor":"zokipirlo","Number":"1159","RawContent":null,"Title":"Mutations not commited","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/r0p9pnr49p](https://codesandbox.io/s/r0p9pnr49p)\r\n\r\n### Steps to reproduce\r\nIf you open Vue devtools and click commit on last mutation, data will appear.\r\n\r\n### What is expected?\r\nNumbers from 1-7 below Data title.\r\n\r\n### What is actually happening?\r\nOnly title is visible.\r\n\r\n---\r\nThere is some commented code inside store (`state: items, getter: getItemsForLayoutId`) because that is a code from my real project. This `abc` is just for demonstration that it doesn't work even in a more simple solution.\r\n\r\nIn HelloWorld component is a `cards`computed property, which loads data from store. If it's not there, then it will dispatch an action to retrieve a data (api call is replaced with dummy data).\r\n\r\nI guess I'm doing something wrong, but don't know why.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1159","RelatedDescription":"Closed issue \"Mutations not commited\" (#1159)"},{"Id":"295828117","IsPullRequest":false,"CreatedAt":"2018-02-16T09:48:31","Actor":"moeinroid","Number":"1154","RawContent":null,"Title":"State not changes in UI component after commit","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://gist.github.com/moeinroid/3743a5814e8b172e91ef40be830f4be1](https://gist.github.com/moeinroid/3743a5814e8b172e91ef40be830f4be1)\r\n\r\n### Steps to reproduce\r\nI'm using vuejs with vue-router and vuex.\r\nI have a module with state, actions and mutations. With actions i call a api and get data from it and change the state by committing mutation\r\n\r\n### What is expected?\r\ncomponent changes Instantly\r\n\r\n### What is actually happening?\r\nin my component values doesnot changes but when i go to another route and come back, it changes.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1154","RelatedDescription":"Closed issue \"State not changes in UI component after commit\" (#1154)"},{"Id":"296151016","IsPullRequest":true,"CreatedAt":"2018-02-11T10:11:06","Actor":"sarahdayan","Number":"1157","RawContent":null,"Title":"Fix typo","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1157","RelatedDescription":"Closed or merged PR \"Fix typo\" (#1157)"},{"Id":"296077809","IsPullRequest":true,"CreatedAt":"2018-02-10T18:41:38","Actor":"william-pan","Number":"1156","RawContent":null,"Title":"Remove unnecessary word in Chinese document","State":"closed","Body":"删掉了多余的“能”字","Url":"https://github.com/vuejs/vuex/pull/1156","RelatedDescription":"Closed or merged PR \"Remove unnecessary word in Chinese document\" (#1156)"},{"Id":"295830254","IsPullRequest":true,"CreatedAt":"2018-02-09T10:57:54","Actor":"whthT","Number":"1155","RawContent":null,"Title":"Update index.js","State":"closed","Body":"added a question.","Url":"https://github.com/vuejs/vuex/pull/1155","RelatedDescription":"Closed or merged PR \"Update index.js\" (#1155)"},{"Id":"295826316","IsPullRequest":false,"CreatedAt":"2018-02-09T10:39:58","Actor":"moeinroid","Number":"1153","RawContent":null,"Title":"State not changes in UI component after commit","State":"closed","Body":"I'm using vuejs with vue-router and vuex.\r\nI have a module with state, actions and mutations. With actions i call a api and get data from it and change the state by committing mutation. But in my component it doesnot changesm but when i go to another route and come back, it changes.\r\n\r\nIt's my module:\r\n\r\n```\r\nconst state = {\r\n  info: {\r\n    name: \"\"\r\n  }\r\n}\r\nconst actions = {\r\n  getInfo({ commit }) {\r\n    api.getAllInfo().then((Response) => {\r\n      commit('SET_USER_INFO', Response.data)\r\n    }).catch((err) => {\r\n      console.log(err.response)\r\n    })\r\n  }\r\nconst mutations = {\r\n  SET_USER_INFO (state, info) {\r\n    state.info.name = info.name\r\n  }\r\n}\r\n\r\n```","Url":"https://github.com/vuejs/vuex/issues/1153","RelatedDescription":"Closed issue \"State not changes in UI component after commit\" (#1153)"},{"Id":"295411613","IsPullRequest":true,"CreatedAt":"2018-02-08T08:23:51","Actor":"anjoantoque","Number":"1152","RawContent":null,"Title":"Update state.md","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1152","RelatedDescription":"Closed or merged PR \"Update state.md\" (#1152)"},{"Id":"295099569","IsPullRequest":false,"CreatedAt":"2018-02-07T11:17:40","Actor":"davewood","Number":"1151","RawContent":null,"Title":"\"Do not mutate store state outside mutation handler\" error but I am using a mutation","State":"closed","Body":"<h3 id=\"version\">Version</h3>\r\n<p>3.0.1</p>\r\n<h3 id=\"reproduction-link\">Reproduction link</h3>\r\n<p><a href=\"https://github.com/davewood/vuejs-demo/tree/vuex_mutation_error\">https://github.com/davewood/vuejs-demo/tree/vuex_mutation_error</a></p>\r\n<h3 id=\"steps-to-reproduce\">Steps to reproduce</h3>\r\n<pre><code>git clone -b vuex_mutation_error git@github.com:davewood/vuejs-demo.git\r\ncd vuejs-demo\r\nnpm install\r\nnpm run dev\r\ntrigger error in console by changing the language in top right corner\r\n</code></pre><h3 id=\"what-is-expected-\">What is expected?</h3>\r\n<p>the state is changed and a notification is shown as expected but i dont get an error in the console</p>\r\n<h3 id=\"details-\">details:</h3>\r\n<ul>\r\n<li>store has an array of notifications</li>\r\n<li>notifications are added using a mutation in <a href=\"https://github.com/davewood/vuejs-demo/blob/vuex_mutation_error/src/store.js#L16\">src/store.js</a></li>\r\n<li>global Vue handler to trigger notification is installed in <a href=\"https://github.com/davewood/vuejs-demo/blob/vuex_mutation_error/src/notify.js#L15\">src/notify.js</a></li>\r\n</ul>\r\n<h3 id=\"what-is-actually-happening-\">What is actually happening?</h3>\r\n<p>the code works but there is an error in the console </p>\r\n<hr>\r\n<pre><code>[Vue warn]: Error in callback for watcher \"function () { return this._data.$$state }\": \"Error: [vuex] Do not mutate vuex store state outside mutation handlers.\"\r\n\r\n(found in &lt;Root&gt;)  9:579:7\r\n    warn webpack-internal:///9:579:7\r\n    logError webpack-internal:///9:1714:5\r\n    globalHandleError webpack-internal:///9:1709:3\r\n    handleError webpack-internal:///9:1698:3\r\n    run webpack-internal:///9:3209:11\r\n    update webpack-internal:///9:3181:5\r\n    notify webpack-internal:///9:685:5\r\n    mutator webpack-internal:///9:843:5\r\n    add_notification/&lt; webpack-internal:///116:21:9\r\nError: [vuex] Do not mutate vuex store state outside mutation handlers.\r\nStack trace:\r\nassert@webpack-internal:///50:104:27\r\nenableStrictMode/&lt;@webpack-internal:///50:753:7\r\nrun@webpack-internal:///9:3207:11\r\nupdate@webpack-internal:///9:3181:5\r\nnotify@webpack-internal:///9:685:5\r\nmutator@webpack-internal:///9:843:5\r\nadd_notification/&lt;@webpack-internal:///116:21:9\r\n  9:1718:5\r\n    logError webpack-internal:///9:1718:5\r\n    globalHandleError webpack-internal:///9:1709:3\r\n    handleError webpack-internal:///9:1698:3\r\n    run webpack-internal:///9:3209:11\r\n    update webpack-internal:///9:3181:5\r\n    notify webpack-internal:///9:685:5\r\n    mutator webpack-internal:///9:843:5\r\n    add_notification/&lt; webpack-internal:///116:21:9\r\n</code></pre>","Url":"https://github.com/vuejs/vuex/issues/1151","RelatedDescription":"Closed issue \"\"Do not mutate store state outside mutation handler\" error but I am using a mutation\" (#1151)"},{"Id":"295098789","IsPullRequest":false,"CreatedAt":"2018-02-07T11:15:00","Actor":"davewood","Number":"1150","RawContent":null,"Title":"using https://new-issue.vuejs.org/?repo=vuejs/vuex causes content security violation","State":"closed","Body":"if i fill out the form, click PREVIEW, click CREATE this happens\r\n\r\n```\r\nContent Security Policy: The page's settings blocked the loading of a resource at self (\"script-src https://assets-cdn.github.com\"). Source: ;(function (e){let t={};if(e.hasOwnPrope....  github.com:1\r\nContent Security Policy: The page's settings blocked the loading of a resource at https://www.google-analytics.com/collect?v=1&_v=j48&a=684224416&t=pageview&_s=1&dl=https%3A%2F%2Fgithub.com%2Fdashboard&dr=https%3A%2F%2Fnew-issue.vuejs.org%2F%3Frepo%3Dvuejs%2Fvuex&ul=en-gb&de=UTF-8&dt=(masked)&sd=24-bit&sr=1920x1080&vp=1192x922&je=1&fl=6.0%20r21&_u=SCCAAFABM~&jid=&cid=2079588354.1478686434&tid=UA-3769691-2&cd1=Logged%20In&z=527149203 (\"img-src https://github.com data: https://assets-cdn.github.com https://identicons.github.com https://collector.githubapp.com https://github-cloud.s3.amazonaws.com https://*.githubusercontent.com\").  (unknown)\r\nContent Security Policy: The page's settings blocked the loading of a resource at self (\"script-src https://assets-cdn.github.com\"). Source: ;(function (e){setTimeout(()=>{const n=d....  github.com:1\r\nContent Security Policy: The page's settings blocked the loading of a resource at self (\"script-src https://assets-cdn.github.com\"). Source: ;(function (e){let n=null,t=0;const o={n....\r\n```","Url":"https://github.com/vuejs/vuex/issues/1150","RelatedDescription":"Closed issue \"using https://new-issue.vuejs.org/?repo=vuejs/vuex causes content security violation\" (#1150)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-03-11T05:30:34.0851418Z","RunDurationInMilliseconds":4328}