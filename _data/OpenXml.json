{"Data":{"Sdk":{"Events":[{"Id":"7107041391","Type":"IssuesEvent","CreatedAt":"2018-01-16T18:34:36","Actor":"daniel-white","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/380","RelatedDescription":"Opened issue \"ToFlatOpcString fails with generated document\" (#380) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\n`ToFlatOpcString` throws \"Root element is missing.\" I'm trying to put this format into a VSTO add-in. When I enumerate `wordprocessingDocument.Package.GetParts()`, I get the relationship part back as an empty string. Shouldn't `AddMainDocumentPart` take care of this under the covers?\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Core 2.0, .NET Framework 4.7\r\n- DocumentFormat.OpenXml Version: 2.8.1\r\n\r\n**Repro**\r\n\r\n```csharp\r\nusing System;\r\nusing System.IO;\r\nusing DocumentFormat.OpenXml;\r\nusing DocumentFormat.OpenXml.Packaging;\r\nusing DocumentFormat.OpenXml.Wordprocessing;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            using (MemoryStream stream = new MemoryStream())\r\n            using (WordprocessingDocument wordprocessingDocument = WordprocessingDocument.Create(stream, WordprocessingDocumentType.Document))\r\n            {\r\n                MainDocumentPart mainDocumentPart = wordprocessingDocument.AddMainDocumentPart();\r\n                Body body = new Body(new Paragraph(new Run(new RunProperties(new Bold()),\r\n                    new Text(\"Hello world this should be bold\"))));\r\n                mainDocumentPart.Document = new Document(body);\r\n\r\n                wordprocessingDocument.Save();\r\n\r\n                Console.WriteLine(wordprocessingDocument.ToFlatOpcDocument());\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n``` \r\n\r\n**Observed**\r\n\r\nException:\r\n\r\n```\r\nSystem.Xml.XmlException: Root element is missing.\r\n   at System.Xml.XmlTextReaderImpl.Throw(Exception e)\r\n   at System.Xml.XmlTextReaderImpl.ParseDocumentContent()\r\n   at System.Xml.XmlTextReaderImpl.Read()\r\n   at System.Xml.XmlReader.MoveToContent()\r\n   at System.Xml.Linq.XElement.Load(XmlReader reader, LoadOptions options)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.GetContentsAsXml(PackagePart part)\r\n   at System.Linq.Enumerable.SelectEnumerableIterator`2.MoveNext()\r\n   at System.Xml.Linq.XContainer.AddContentSkipNotify(Object content)\r\n   at System.Xml.Linq.XContainer.AddContentSkipNotify(Object content)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.ToFlatOpcDocument(XProcessingInstruction instruction)\r\n   at ConsoleApp1.Program.Main(String[] args)\r\n```\r\n\r\n**Expected**\r\n\r\nThat `ToFlatOpcString` doesn't throw and I get the resulting XML string.\r\n"},{"Id":"7106395819","Type":"PullRequestEvent","CreatedAt":"2018-01-16T16:34:58","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/379","RelatedDescription":"Closed pull request \"For Word Add-In\" (#379) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"7101477852","Type":"PullRequestEvent","CreatedAt":"2018-01-15T17:40:26","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/379","RelatedDescription":null,"RelatedBody":""},{"Id":"7101471515","Type":"PullRequestEvent","CreatedAt":"2018-01-15T17:38:49","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/379","RelatedDescription":"Closed pull request \"For Word Add-In\" (#379) at OfficeDev/Open-XML-SDK","RelatedBody":""}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[{"Id":"7103446568","Type":"PullRequestEvent","CreatedAt":"2018-01-16T05:07:12","Actor":"lpperras","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/199","RelatedDescription":"Opened pull request \"No settings fix\" (#199) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Fixed issue with converting a docx to HTML that has no settings file."},{"Id":"7103393888","Type":"PullRequestEvent","CreatedAt":"2018-01-16T04:43:30","Actor":"lpperras","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/70","RelatedDescription":"Closed pull request \"Ability to process Flat to OPC and OPC to Flat in memory.\" (#70) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Added a couple of overloads to make it possible to transfer a flat opc structure to a docx package and vice versa without writing to disk.\n"},{"Id":"7102446154","Type":"IssuesEvent","CreatedAt":"2018-01-15T22:17:57","Actor":"AlirezaAhmadiRad","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/198","RelatedDescription":"Opened issue \"Exception during conversion of html table to docx\" (#198) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Hello\r\nI have [this html file](https://1drv.ms/f/s!Alj_FDyopEuRgtp3ZozLwqQGXxZNWQ). \r\nThis is code for converting it to docx:\r\n\r\n`                                XElement X = XElement.Parse(HT.HTML); \r\n                                HtmlToWmlConverterSettings S = HtmlToWmlConverter.GetDefaultSettings(); \r\n                                WmlDocument D = HtmlToWmlConverter.ConvertHtmlToWml(\"\", \"\", \"\", X, S); \r\n                                sources.Add(new Source(D, true));\r\n`\r\n\r\nThen I receive exception of \"Object reference not set to an instance of an object.\" at this address:\r\n\r\n   at OpenXmlPowerTools.HtmlToWml.HtmlToWmlConverterCore.GetTableGrid(XElement element, HtmlToWmlConverterSettings settings)     \r\n   at OpenXmlPowerTools.HtmlToWml.HtmlToWmlConverterCore.Transform(XNode node, HtmlToWmlConverterSettings settings, WordprocessingDocument wDoc, NextExpected nextExpected, Boolean preserveWhiteSpace)     \r\n   at OpenXmlPowerTools.HtmlToWml.HtmlToWmlConverterCore.<>c__DisplayClass20_0.<Transform>b__6(XNode n)     \r\n   at System.Linq.Enumerable.WhereSelectEnumerableIterator`2.MoveNext()     \r\n   at System.Xml.Linq.XContainer.AddContentSkipNotify(Object content)     \r\n   at System.Xml.Linq.XContainer.AddContentSkipNotify(Object content)     \r\n   at OpenXmlPowerTools.HtmlToWml.HtmlToWmlConverterCore.UpdateMainDocumentPart(WordprocessingDocument wDoc, XElement html, HtmlToWmlConverterSettings settings)     \r\n   at OpenXmlPowerTools.HtmlToWml.HtmlToWmlConverterCore.ConvertHtmlToWml(String defaultCss, String authorCss, String userCss, XElement xhtml, HtmlToWmlConverterSettings settings, WmlDocument emptyDocument, String annotatedHtmlDumpFileName)     \r\n   at OpenXmlPowerTools.HtmlToWmlConverter.ConvertHtmlToWml(String defaultCss, String authorCss, String userCss, XElement xhtml, HtmlToWmlConverterSettings settings)     at WebOS.Engine.V100.WebOSIO.GenerateWordReport(List`1 Tables, Guid FileID, String FileName, ReportType FileType, Guid OwnerProgramID, RemoteLogin ID) \r\n\r\nI'm using nuget version 4.5.3.2\r\nCould you please help?\r\n\r\n"},{"Id":"7090822866","Type":"PullRequestEvent","CreatedAt":"2018-01-12T10:28:26","Actor":"bonek","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/197","RelatedDescription":"Opened pull request \"Master\" (#197) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Fixed TextReplacer on empty string in parameter"},{"Id":"7082063968","Type":"PullRequestEvent","CreatedAt":"2018-01-10T18:45:18","Actor":"DiE-MaRMeLaDe","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/153","RelatedDescription":"Closed pull request \"Added .Net Core support without validation\" (#153) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Added .net core package without XSD validation."},{"Id":"7077940167","Type":"IssuesEvent","CreatedAt":"2018-01-10T00:34:50","Actor":"sandhyarkr","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/196","RelatedDescription":"Opened issue \"Support for converting textboxes in .docx  to html\" (#196) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Hi,\r\nI am using OpenXmlPowerTools 4.5.3.2 for my project to convert .docx files to html . I have found that the  textboxes within the .docx files are not being converted into html. Is this feature likely to be supported? \r\nI am doing this project as part of my organization requirement and most of the .docx files have textboxes and embedded data within the same which needs to be seen in the converted html .\r\nI am using Visual Studio 2012 with Update 5 applied and have retrieved the OpenXMLPowertools library through NuGet. \r\n\r\nAlso are any enhancements likely on making the html responsive?"},{"Id":"7037387027","Type":"IssuesEvent","CreatedAt":"2017-12-28T14:34:07","Actor":"kimsey0","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/181","RelatedDescription":"Closed issue \"DocumentBuilder doesn't handle multiple styles with the same style name but different IDs\" (#181) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"**Observation 1**\r\nWhen creating a document, `DocumentBuilder` merges styles by using the first style with a given ID from the list of sources. As an example, if source 1 and source 2 both specify a style with the ID `heading1`, the style from source 1 will be used.\r\n\r\n**Observation 2**\r\nWhen saving a document in a version of Word with a different display language than English, Word localizes the style IDs of built-in styles. However, it doesn't localize the style names. This leads to style XML like the following (from a Danish-language instance of Word):\r\n```\r\n<w:style w:type=\"paragraph\" w:styleId=\"Overskrift1\" xmlns:w=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\">\r\n  <w:name w:val=\"heading 1\" />\r\n  <w:basedOn w:val=\"Normal\" />\r\n  <w:next w:val=\"Normal\" />\r\n  <w:link w:val=\"Overskrift1Tegn\" />\r\n  ...\r\n</w:style>\r\n```\r\n**Observation 3**\r\nWhen opening a document containing multiple (localized) styles with the same style name, Word deletes all but the last style, applying it to all elements that referenced one of the styles.\r\n\r\n**Result**\r\nTaken together, this means that `DocumentBuilder` seems to behave erratically with regards to style merging when building documents from sources saved in different language-versions of Word.\r\n\r\n**Solution**\r\nA possible solution would be to merge not only styles with the same ID, but also styles with the same name. This would mean that all references to one of the merged style would have to be changed to reference the ID of the \"canonical\" style."}],"ResultType":"GitHubEvent"}},"RunOn":"2018-01-17T05:30:33.0271178Z","RunDurationInMilliseconds":2041}