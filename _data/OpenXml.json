{"Data":{"Sdk":{"Events":[{"Id":"8036403904","Type":"IssuesEvent","CreatedAt":"2018-07-30T09:02:06","Actor":"xiangxingze","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/518","RelatedDescription":"Opened issue \"I have a question, who can help me?\" (#518) at OfficeDev/Open-XML-SDK","RelatedBody":"Sorry for disturbing you!\r\nOpen XML SDK is similar to Microsoft.Office.Interop.Word\r\nHow to move the cursor to wrap\r\nObject extend = Word.WdMovementType.wdExtend;\r\n                 Object unit = Word.WdUnits.wdCell;\r\n                 Object count = 1;\r\n                 wApp.Selection.MoveRight(ref unit, ref count, ref extend);"},{"Id":"8036034119","Type":"IssuesEvent","CreatedAt":"2018-07-30T07:44:23","Actor":"jason8232590","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/517","RelatedDescription":"Closed issue \" Could not load assembly 'System.IO.Packaging' during Xamarin startup registration\" (#517) at OfficeDev/Open-XML-SDK","RelatedBody":"-**Description**\r\n\r\nI created a new project in Visual Studio 2017 for windows (15.5.4) and import the 'DocumentFormat.OpenXml(2.8.1)' then debug it , but it  could not be debugged in My android phone. And once I remove it , the app can work well in android phone . By the way , it could still work well in iPhone even I had imported 'DocumentFormat.OpenXml(2.8.1)' .\r\n\r\n**Information**\r\n\r\n- Xamarin.Forms (2.5.0121934)\r\n- DocumentFormat.OpenXml Version: (2.8.1)\r\n\r\n**Log**\r\n07-25 11:29:10.266 F/monodroid-assembly(26905): Could not load assembly 'System.IO.Packaging' during startup registration.\r\n07-25 11:29:10.266 F/monodroid-assembly(26905): This might be due to an invalid debug installation.\r\n07-25 11:29:10.266 F/monodroid-assembly(26905): A common cause is to 'adb install' the app directly instead of doing from the IDE.\r\n"},{"Id":"8014458384","Type":"IssuesEvent","CreatedAt":"2018-07-25T06:35:56","Actor":"jason8232590","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/517","RelatedDescription":"Opened issue \" Could not load assembly 'System.IO.Packaging' during startup registration.\" (#517) at OfficeDev/Open-XML-SDK","RelatedBody":"-**Description**\r\n\r\nI created a new project in Visual Studio 2017 for windows (15.5.4) and import the 'DocumentFormat.OpenXml(2.8.1)' then debug it , but it  could not be debugged in My android phone. And once I remove it , the app can work well in android phone . By the way , it could still work well in iPhone even I had imported 'DocumentFormat.OpenXml(2.8.1)' .\r\n\r\n**Information**\r\n\r\n- Xamarin.Forms (2.5.0121934)\r\n- DocumentFormat.OpenXml Version: (2.8.1)\r\n\r\n**Log**\r\n07-25 11:29:10.266 F/monodroid-assembly(26905): Could not load assembly 'System.IO.Packaging' during startup registration.\r\n07-25 11:29:10.266 F/monodroid-assembly(26905): This might be due to an invalid debug installation.\r\n07-25 11:29:10.266 F/monodroid-assembly(26905): A common cause is to 'adb install' the app directly instead of doing from the IDE.\r\n"}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[{"Id":"8046848345","Type":"PullRequestEvent","CreatedAt":"2018-07-31T21:40:25","Actor":"MalcolmJohnston","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/241","RelatedDescription":"Opened pull request \"Document Assembler: Ability to merge in whole documents or sub-templates\" (#241) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"As some interest was shown in this feature here is the pull request.\r\n\r\nFrom issue 191;\r\n\r\nImplementation is as follows;\r\n\r\n- Added two new elements; Document and DocumentTemplate\r\n- These two elements share common attributes Path and Data\r\n- The Path attribute can be either a file path or XPath that retrieves a file path from the input XML\r\n- The Data attribute is intended to hold a base64 encoded string containing the Word document contents\r\n- The DocumentTemplate element also has a Select attribute so that XML data can be passed to the template\r\n\r\ne.g.\r\n\r\n```\r\n<Repeat Select=\"//Invoice\" />\r\n<DocumentTemplate Path=\"SubTemplate.docx\" Select=\".\" />\r\n<Document Path=\"Terms.docx\" />\r\n<EndRepeat />\r\n\r\n```\r\nWith the above in place what I do is take a two pass approach.\r\n\r\nFirstly I process the Document and DocumentTemplate elements converting all to a Document element which contains a Data attribute with the base64 encoded content of the Document or assembled DocumentTemplate.\r\n\r\nThen I have introduced a second step and as such a dependency on DocumentBuilder in DocumentAssembler. I am not sure if this will be frowned upon or not :)\r\n\r\nThis second step is largely based on this post from Eric White;\r\n\r\nhttps://blogs.msdn.microsoft.com/ericwhite/2009/04/21/using-documentbuilder-with-content-controls-for-document-assembly/\r\n\r\n\r\nAlthough in my practical experience (been using this code in production for months) the Word documents generated are valid I had issues with the Unit Tests.  I think this is because we are using Office 365 and it looks like the validator only supports up-to 2013 at the minute?  I could re-author my test files in 2013 but don't have access to a copy.\r\n\r\nAny comments and feedback appreciated, this is my first pull request on an open-source project so be gentle :)"},{"Id":"8032133125","Type":"IssuesEvent","CreatedAt":"2018-07-28T11:36:26","Actor":"pmcquay","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/240","RelatedDescription":"Opened issue \"search and replace with string.empty as the replace throws exception\" (#240) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"index out of bounds exception.\r\n\r\nPretty sure its because of this line in textreplacer:\r\n\r\nif (textValue[0] == ' ' || textValue[textValue.Length - 1] == ' ')\r\n\r\nI haven't actually debugged this using this library, but I was getting the same exception with this library, and tried something else using this: http://www.ericwhite.com/blog/search-and-replace-text-in-an-open-xml-wordprocessingml-document/ code, which I am thinking is related. There is a very similar line there that was at fault as well."},{"Id":"8014622379","Type":"IssuesEvent","CreatedAt":"2018-07-25T07:17:31","Actor":"tdolot","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/239","RelatedDescription":"Opened issue \"Histogram chart support\" (#239) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Hi,\r\n\r\nDoes OpenXmlPowerTools support Histogram chart? I've checked the code and it looks like Histogram is of type chartEx, I cannot find any reference to it anywhere. If it's not supported, are there any plans to add the support? Are there any technical reasons for which chartEx is not implemented?\r\n\r\nRegards"}],"ResultType":"GitHubEvent"}},"RunOn":"2018-08-04T05:30:40.065733Z","RunDurationInMilliseconds":1704}