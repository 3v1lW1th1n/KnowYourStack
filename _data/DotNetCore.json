{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework January 2018 Security and Quality Rollup","PublishedOn":"2018-01-10T06:39:31+00:00","CommentsCount":28,"FacebookCount":0,"Summary":"Today, we are releasing the January 2018 Security and Quality Rollup. Please avoid installing this update on Windows 7 or Windows Server 2008 R2. See .NET Framework January 2018 Rollup Known Issue...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/","RawContent":null},{"Title":".NET for UWP January 2018 Update","PublishedOn":"2018-01-10T04:17:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET for UWP January 2018 Update. This post includes the fix included and instructions on how to update your applications. Security CVE-2018-0786 – Security Feature Bypass...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/","RawContent":null},{"Title":".NET Framework 4.7.1 is available on Windows Update, WSUS and MU Catalog!","PublishedOn":"2018-01-09T21:39:54+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today, we are happy to announce the Microsoft .NET Framework 4.7.1 is available on Windows Update, Windows Server Update Services (WSUS) and Microsoft Update (MU) Catalog. This includes reliability...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-4-7-1-is-available-on-windows-update-wsus-and-mu-catalog/","RawContent":null},{"Title":".NET Core January 2018 Update","PublishedOn":"2018-01-09T21:08:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core January 2018 Update. This includes .NET Core  1.0.9, 1.1.6 and 2.0.5. Please leave feedback on the release in the comments below or at dotnet/core #1199. Security...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-core-january-2018-update/","RawContent":null},{"Title":"Migrating your existing .NET application to the cloud? Tell us about it!","PublishedOn":"2017-12-05T18:14:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Hi everyone! The .NET team is conducting a survey to learn more about your approach for moving existing .NET applications to the cloud.  The survey should take less than 5 minutes to complete. Take...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/12/05/migrating-your-existing-net-application-to-the-cloud-tell-us-about-it/","RawContent":null},{"Title":"Announcing the Windows Compatibility Pack for .NET Core","PublishedOn":"2017-11-17T04:59:32+00:00","CommentsCount":76,"FacebookCount":0,"Summary":"Porting existing code to .NET Core used to be quite hard because the available API set was very small. In .NET Core 2.0, we already made this much easier, thanks to .NET Standard 2.0. Today,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/announcing-the-windows-compatibility-pack-for-net-core/","RawContent":null},{"Title":"UPDATE – Microservices and Docker containers: Architecture, Patterns and Development guidance (Updated for .NET Core 2.0)","PublishedOn":"2017-11-16T22:00:06+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published this eBook/guide and sample application offering guidance for architecting microservices and Docker containers based applications. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-microservices-and-docker-containers-architecture-patterns-and-development-guidance-updated-for-net-core-2-0/","RawContent":null},{"Title":"UPDATE – Web Applications with ASP.NET Core Architecture and Patterns guidance (Updated for ASP.NET Core 2)","PublishedOn":"2017-11-16T21:00:05+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Nov. 15th 2017 update Earlier this year, we published an eBook/Guide and sample application offering guidance named Architecting Modern Web Applications with ASP.NET Core and Microsoft Azure. We have...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/16/update-web-applications-with-asp-net-core-architecture-and-patterns-guidance-updated-for-asp-net-core-2/","RawContent":null},{"Title":"Introducing Tensor for multi-dimensional Machine Learning and AI data","PublishedOn":"2017-11-15T22:00:18+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"Overview Tensor is an exchange type for homogenous multi-dimensional data for 1 to N dimensions. The motivation behind introducing Tensor&#60;T&#62; is to make it easy for Machine Learning library...","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/introducing-tensor-for-multi-dimensional-machine-learning-and-ai-data/","RawContent":null},{"Title":"Introducing Nullable Reference Types in C#","PublishedOn":"2017-11-15T20:00:47+00:00","CommentsCount":240,"FacebookCount":0,"Summary":"Today we released a prototype of a C# feature called &#8220;nullable reference types&#8220;, which is intended to help you find and fix most of your null-related bugs before they blow up at runtime....","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"},{"Id":"6946829856","Type":"PullRequestEvent","CreatedAt":"2017-12-05T18:08:42","Actor":"heiligerdankgesang","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/92","RelatedDescription":"Opened pull request \"Remove contact email from system.drawing.md\" (#92) at dotnet/home","RelatedBody":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information."},{"Id":"6934052963","Type":"PullRequestEvent","CreatedAt":"2017-12-02T15:19:09","Actor":"rprouse","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/91","RelatedDescription":"Opened pull request \"Add NUnit to the .NET Foundation Projects\" (#91) at dotnet/home","RelatedBody":""},{"Id":"6872255902","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:01:26","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Merged pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""},{"Id":"6872252909","Type":"PullRequestEvent","CreatedAt":"2017-11-17T22:00:44","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/89","RelatedDescription":"Merged pull request \"New logo and SSL certificate for Peachpie\" (#89) at dotnet/home","RelatedBody":""},{"Id":"6868854916","Type":"PullRequestEvent","CreatedAt":"2017-11-17T09:04:03","Actor":"AndreyAkinshin","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/90","RelatedDescription":"Opened pull request \"Add BenchmarkDotNet to README.md and project.json\" (#90) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7089727012","Type":"IssuesEvent","CreatedAt":"2018-01-12T04:51:18","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/53","RelatedDescription":"Opened issue \".NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\" (#53) at dotnet/announcements","RelatedBody":"# .NET Framework January 2018 Rollup Known Issue KB4074906 - \"TypeInitializationException\" or \"FileFormatException\" error in WPF applications\r\n\r\nAn issue has been found in the [.NET Framework January 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-framework-january-2018-security-and-quality-rollup/). The .NET team is in the process of fixing the issue. This document describes the symptom and workarounds to resolve the issue while you are waiting for a fix.\r\n\r\nThis document will be updated when a fix is made available.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #599](https://github.com/Microsoft/dotnet/issues/599)\r\n\r\n## Symptoms\r\n\r\nWindows Presentation Foundation (WPF) applications that request a fallback font or a character that is not included in the currently selected font return the following error messages: \r\n\r\n```\r\nSystem.TypeInitializationException\r\n \r\n“FileFormatException: No FontFamily element found in FontFamilyCollection \r\nthat matches current OS or greater: Win7SP1”.\r\n\r\nInner exception originates from: CompositeFontParser\r\n```\r\n\r\n## Workarounds\r\n\r\nTo work around this problem, use one of the following methods.\r\n\r\n### Workaround 1 - Uninstall the January 2018 Update\r\n\r\nTo keep .NET 4.7.1 installed and maintain protection against vulnerabilities that are addressed by the January security updates, uninstall the January .NET Framework Security and Quality Rollup ([KB4055002](https://support.microsoft.com/en-us/help/4055002)), and then install the January .NET Framework Security-Only Update ([KB4054183](https://support.microsoft.com/en-us/help/4054183)). To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Windows Update item, and then select View update history.\r\n1. In the Review your update history list, locate and select Security Update for Microsoft .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, 4.7.1 ([KB4055002](https://support.microsoft.com/en-us/help/4055002)). Then, select Uninstall.\r\n1. When you are prompted for confirmation to uninstall, select Yes.\r\n1. Restart your computer if you are prompted to do this.\r\n1. Download and install the Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 and .NET Framework 4.6 for Windows Server 2008 SP2 ([KB4054183](https://support.microsoft.com/en-us/help/4054183)) for your operating system configuration from the following links:\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 for Windows 7 SP1 and Windows Server 2008 R2 SP1 for x86 systems (KB4054183)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x86_301cb3d6591b572786c8349c12a28e5ec5d2d334.exe)\r\n   * [Security Only update for .NET Framework 4.6, 4.6.1, 4.6.2, 4.7, and 4.7.1 on Windows 7 SP1 and Windows Server 2008 R2 SP1 for x64 systems (KB4055269)](http://download.windowsupdate.com/d/msdownload/update/software/secu/2018/01/ndp47-kb4054183-x64_a022ad5109b1208dff502d1be4477668b4fa258d.exe)\r\n1. Follow the installation prompts, and then restart your computer if your are prompted to do this.\r\n\r\n### Workaround 2 - Uninstall the .NET Framework 4.7.1, Install .NET Framework 4.7\r\n\r\nRoll back to the previous version of .NET Framework. To do this, follow these steps:\r\n\r\n1. In Control Panel, open the Programs and Features item.\r\n1. In the Uninstall or change a program list, locate and then select Microsoft .NET Framework 4.7.1, and then select Uninstall/Change.\r\n![image](https://user-images.githubusercontent.com/2608468/34859496-5a3f11e6-f70b-11e7-82cb-5a12a4f9a633.png)\r\n1. Select Remove .NET Framework 4.7.1 from this computer, and then select Next.\r\n![image](https://user-images.githubusercontent.com/2608468/34859585-f5d50f3e-f70b-11e7-8fb9-a75e35c08767.png)\r\n1. Select Continue to confirm uninstallation.\r\n1. Select Finish after the uninstallation is finished.\r\n![image](https://user-images.githubusercontent.com/2608468/34859595-07877226-f70c-11e7-9d66-908a37ef0ded.png)\r\n1. Restart your computer if you are prompted to do this.\r\n1. Install [.NET Framework 4.7](https://www.microsoft.com/en-us/download/details.aspx?id=55170).\r\n\r\n## Issue Reports\r\n\r\n* [KB4074906 (Microsoft)](https://support.microsoft.com/en-us/help/4074906)\r\n* [0xd4d/dnSpy #692](https://github.com/0xd4d/dnSpy/issues/692)\r\n* [Wox-launcher/Wox #1823](https://github.com/Wox-launcher/Wox/issues/1823)\r\n"},{"Id":"7076404590","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:02:02","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/52","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0764: Denial of Service when parsing XML documents\" (#52) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0764\r\n## Denial of Service when parsing XML documents\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a Denial of Service vulnerability in all public versions of .NET core due to improper processing of XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application. A remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET core handles XML document processing.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0786,  https://github.com/dotnet/announcements/issues/51\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0764](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0764)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  "},{"Id":"7076401836","Type":"IssuesEvent","CreatedAt":"2018-01-09T18:01:26","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/51","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0786: Security Feature Bypass in X509 Certificate Validation\" (#51) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0786\r\n## Security Feature Bypass in X509 Certificate Validation\r\n### Executive Summary \r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 1.1, and 2.0. This advisory also provides guidance on what developers can do to update their applications correctly. \r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where an attacker could present a certificate that is marked invalid for a specific use, but a component uses it for that purpose. This action disregards the Enhanced Key Usage tagging.\r\n\r\nThe security update addresses the vulnerability by ensuring that .NET Core components completely validate certificates.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.9, 1.1.6 and 2.0.5. Developers are advised to update their .NET Core SDK to version 2.1.4 or 1.1.7. These runtime and SDK versions will also address CVE-2018-0764 ***** TODO: ADD LINK TO OTHER ISSUE *****\r\n\r\n### Discussion\r\n\r\nPlease use **** TODO: FILL IN ISSUE LINK *** for discussion of this advisory.\r\n\r\n## Affected Software\r\nThe vulnerability affects any Microsoft .NET Core project if it uses any of affected runtime versions listed below\r\n\r\n Runtime Version | Fixed runtime version\r\n----------------| -------------------------\r\n1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.0.4, 1.0.5, 1.0.7, 1.0.8 | 1.0.9\r\n1.1.0, 1.1.1, 1.1.2, 1.1.4, 1.1.5 | 1.1.6\r\n2.0.0, 2.0.3, 2.0.4 |  2.0.5\r\n\r\nThis vulnerability also affects any .NET native applications using the following NuGet packages.\r\n\r\nNuGet Packages | Fixed NuGet Packages\r\n-- | --\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.2.* (contains   .NET native 1.4.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.2.4\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.3.* (contains   .NET native 1.6.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.3.5\r\nMicrosoft.NETCore.UniversalWindowsPlatform 5.4.* (contains   .NET native 1.7.*) | Microsoft.NETCore.UniversalWindowsPlatform 5.4.2\r\nMicrosoft.NETCore.UniversalWindowsPlatform 6.0.* (contains   .NET native 2.0.*) | Microsoft.NETCore.UniversalWindowsPlatform 6.0.6\r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\n\r\nTo check the runtimes installed on a computer you must view the contents of the runtime folder. By default these are\r\n\r\n| Operating System          | Location          |\r\n|---------------------------|-------------------|\r\n| Windows | C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\ |\r\n| macOS | /usr/local/share/dotnet/shared/Microsoft.NETCore.App/    |\r\n| Supported Linux platforms | /usr/share/dotnet/shared/Microsoft.NETCore.App/   |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you do not have a directory for 1.0.9, 1.1.6 or 2.0.2 then any applications targeting .NET Core will be vulnerable. Downloads for all supported platforms can be acquired from https://www.microsoft.com/net/download/\r\n\r\n#### How do I fix my affected application?\r\nApplications can be fixed by installing the latest runtimes or SDKs. Typically application servers only install a runtime package, developer machines install SDKs. Installers can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). Runtime version 1.1.6 will also install runtime version 1.0.9.\r\n\r\nIf you have built a [self-contained application](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### How do I fix my .NET native application? \r\n\r\n.NET native requires that applications be re-processed by the .NET native compiler to incorporate the fixes and the re-processed version needs to be distributed via the Windows Store.\r\n\r\nWe recommend that you update your .NET UWP apps to use the latest minor version of the `Microsoft.NETCore.UniversalWindowsPlatform` NuGet package so that you can build and verify that your app works as expected when updated. If you are using version 6.0.x, you should update to 6.0.6 and if you’re using 5.2.x, you can update to 5.2.4. Of course, you can update to a higher major version too, but we are distributing security updates for all impacted major versions (currently 5.2.x, 5.3.x, 5.4.x and 6.0.x). Additionally, whether or not you update your NuGet packages, all applications submitted to the store after today will be automatically fixed during submission processing.\r\n\r\nIf you do not update your app in the Store, it will automatically be reprocessed and distributed via an application update in the next few weeks. Users who have automatic app updates enabled will get the fix with no intervention on your or their parts. Because updated apps are distributed through the Windows Store, sideloaded apps will not be automatically updated. We recommend that developers who distribute sideloaded apps update the affected NuGet packages, rebuild their applications and distribute them to their users.\r\n\r\nMicrosoft is committed to keeping UWP applications secure and to supporting developers. If you have feedback on the fix distribution process, please let us know at dotnetnative@microsoft.com. \r\n\r\n## Other Information\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including Terms and Conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue where you can ask questions.\r\n\r\n### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the [application.runtime.config](https://github.com/dotnet/cli/blob/ede74b6be1406ba0c086b6d5fc1a5d4eacff1f01/Documentation/specs/runtime-configuration-file.md#appnameruntimeconfigjson) file for that application and editing the framework version and setting `rollForward` to `false`. This should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nNote that this file is optional, you may need to create it for each application alongside the executable.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0786](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0786)\r\n\r\n### Revisions\r\n\r\nV1.0 (Jan 9, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-01-09_"},{"Id":"6948315401","Type":"IssuesEvent","CreatedAt":"2017-12-05T23:41:57","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Closed issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Referencing #29.\r\n\r\nWill it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"},{"Id":"6944555922","Type":"IssuesEvent","CreatedAt":"2017-12-05T10:46:06","Actor":"tioduke","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/50","RelatedDescription":"Opened issue \".Net Core ARM32 SDK availability\" (#50) at dotnet/announcements","RelatedBody":"Will it be possible to : \r\n\r\na) Provide ARM32 builds for the SDK at its current state\r\nor\r\nb) Provide links on how to build the .Net Core SDK for ARM32?\r\n\r\nThe thing is I am planning to use it in a virtual environnement, through proot + qemu-arm-static. This way I would be able to build and, more importantly, run unit tests on ARM32. Another thing I am planning to do is to setup a build environnement on i686 through virtualisation as qemu doesn't seem to be able to emulate x86_64 on i686 (but arm32 does seem to work well enough).\r\n\r\nThank you in advance.\r\n\r\nSergio\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7096104384","Type":"PullRequestEvent","CreatedAt":"2018-01-14T01:21:21","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15856","RelatedDescription":"Opened pull request \"Update CoreClr to preview1-26113-03 (master)\" (#15856) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7095886333","Type":"PullRequestEvent","CreatedAt":"2018-01-13T22:13:39","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15855","RelatedDescription":"Merged pull request \"Revert \"Remove relocations for MethodTable::m_pParentMethodTable for Linux ARM\"\" (#15855) at dotnet/coreclr","RelatedBody":"This reverts commit cf1fb9e17fc8b6ee849edab5a696d0ec5c6eadd2."},{"Id":"7095628539","Type":"PullRequestEvent","CreatedAt":"2018-01-13T19:08:00","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14670","RelatedDescription":"Closed pull request \"Fix Invalid Parameter to CoreFx Test CI Legs\" (#14670) at dotnet/coreclr","RelatedBody":"The skiptests parameter is specified, but it is no longer a valid parameter."},{"Id":"7095550000","Type":"PullRequestEvent","CreatedAt":"2018-01-13T18:13:03","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15853","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx, PgoData to preview1-26113-02, preview1-26113-03, master-20180113-0045, respectively (master)\" (#15853) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7095294858","Type":"PullRequestEvent","CreatedAt":"2018-01-13T15:23:08","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/15855","RelatedDescription":"Opened pull request \"Revert \"Remove relocations for MethodTable::m_pParentMethodTable for Linux ARM\"\" (#15855) at dotnet/coreclr","RelatedBody":"This reverts commit cf1fb9e17fc8b6ee849edab5a696d0ec5c6eadd2."},{"Id":"7095260071","Type":"PullRequestEvent","CreatedAt":"2018-01-13T14:59:36","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14131","RelatedDescription":"Closed pull request \"Enable multi-byte NOP in RyuJIT/x86\" (#14131) at dotnet/coreclr","RelatedBody":"Fix #14128 "},{"Id":"7095256562","Type":"PullRequestEvent","CreatedAt":"2018-01-13T14:57:08","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14227","RelatedDescription":"Closed pull request \"[WIP] Add coreclr_preload_assembly to CoreCLR host API\" (#14227) at dotnet/coreclr","RelatedBody":"This pull request adds `coreclr_preload_assembly` to host API, which loads assembly image to memory and applies relocations. `coreclr_preload_assembly` is supposed to be called only before initialization of CoreCLR.\r\n\r\nIs it correct to call `PAL_malloc` before CoreCLR is initialized?\r\n\r\n`PAL_ForceRelocs` is ignored for preloaded assembly images.\r\n\r\ncc @ruben-ayrapetyan @Dmitri-Botcharnikov @kvochko "},{"Id":"7095235920","Type":"IssuesEvent","CreatedAt":"2018-01-13T14:42:28","Actor":"GUiHKX","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/15854","RelatedDescription":"Closed issue \"`dotnet --help` aborts when OS is low on memory?\" (#15854) at dotnet/coreclr","RelatedBody":"```\r\nArch Linux 64-bit\r\ndotnet-runtime 2.0.5-1\r\nKernel: Linux arch 4.14.13-1-ARCH #1 SMP PREEMPT Wed Jan 10 11:14:50 UTC 2018 x86_64 GNU/Linux\r\n```\r\n\r\nOkay, so I'm doing too much stuff at the same time right now and my memory usage looks like this on `htop`:\r\n\r\n![screenshot_2018-01-13_09-42-45](https://user-images.githubusercontent.com/626206/34905733-284b63a6-f846-11e7-9786-03bed7d1f781.png)\r\n\r\nMoments before I started opening a bunch of programs that ate all my RAM, I was running this [.NET program](https://github.com/JustArchi/ArchiSteamFarm) (I basically run it 24/7 with no issues at all), but this time I noticed this error in my console:\r\n\r\n```\r\n/home/gui/bin/asf: line 29:  4623 Illegal instruction     (core dumped) /usr/bin/dotnet \"~/Downloads/ArchiSteamFarm.dll\" --server\r\n```\r\n\r\nI've tried running it again a couple of times but I kept getting a similar error, then I simply tried `dotnet --help` and got this:\r\n\r\n```\r\n$ dotnet --help\r\n[1]    11478 abort (core dumped)  dotnet --version\r\n```\r\n[(here's the output of `$ coredumpctl gdb 11478`)](https://gist.githubusercontent.com/GUiHKX/2b2e16acb2d03763f435fd60e0f2579c/raw/f8f61e6a2299b4dd36fb80b2b8298d466595684c/coredump%2520gdb%252011478.txt)\r\n\r\nNow, my knowledge about debugging is basically zero, but I hope that info can be useful somehow. Let me know If you need any other information.\r\n\r\nThanks."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7095733571","Type":"IssuesEvent","CreatedAt":"2018-01-13T20:20:29","Actor":"michielvoo","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8394","RelatedDescription":"Closed issue \"`dotnet new` exits with exit code 0 but produces no output\" (#8394) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\nOn a Mac running macOS High Sierra 10.13.2:\r\n- Uninstall .NET Core SDK using [the official uninstall script](https://github.com/dotnet/cli/blob/master/scripts/obtain/uninstall/dotnet-uninstall-pkgs.sh)\r\n- Download [the .NET Core SDK 2.1.4 installer](https://www.microsoft.com/net/download/thank-you/dotnet-sdk-2.1.4-macos-x64-installer)\r\n- Install .NET Core SDK\r\n- Run the following commands\r\n\r\n```\r\n> cd ~\r\n\r\n> mkdir test\r\n\r\n> cd test\r\n\r\n> pwd\r\n/Users/Michiel/test\r\n\r\n> dotnet new sln --name test.sln --output /Users/Michiel/test\r\nThe template \"Solution File\" was created successfully.\r\n\r\n> echo $?\r\n0\r\n\r\n> ls -al\r\ntotal 0\r\ndrwxr-xr-x  2 Michiel  staff   64 Jan 13 19:21 ./\r\ndrwxr-xr-x@ 6 Michiel  staff  192 Jan 13 19:21 ../\r\n\r\n> dotnet new page --name test.cshtml --output /Users/Michiel/test\r\nThe template \"Razor Page\" was created successfully.\r\n\r\n> echo $?\r\n0\r\n\r\n> ls -al\r\ntotal 0\r\ndrwxr-xr-x   2 Michiel  staff    64 Jan 13 19:45 ./\r\ndrwxr-xr-x@ 41 Michiel  staff  1312 Jan 13 19:45 ../\r\n\r\n> dotnet new console --name test --output /Users/Michiel/test\r\nThe template \"Console Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on /Users/Michiel/test/test.csproj...\r\n  Restoring packages for /Users/Michiel/test/test.csproj...\r\n  Generating MSBuild file /Users/Michiel/test/obj/test.csproj.nuget.g.props.\r\n  Generating MSBuild file /Users/Michiel/test/obj/test.csproj.nuget.g.targets.\r\n  Restore completed in 242.71 ms for /Users/Michiel/test/test.csproj.\r\n\r\n\r\nRestore succeeded.\r\n\r\n> echo $?\r\n0\r\n\r\n> ls -al\r\ntotal 0\r\ndrwxr-xr-x   2 Michiel  staff    64 Jan 13 19:45 ./\r\ndrwxr-xr-x@ 41 Michiel  staff  1312 Jan 13 19:45 ../\r\n\r\n> stat /Users/Michiel/test/test.csproj\r\nstat: /Users/Michiel/test/test.csproj: stat: No such file or directory\r\n\r\n```\r\n## Expected  behavior\r\nA file named test.sln or test.cshtml is created, or the project and MSBuild files are created.\r\n\r\n## Actual behavior\r\nNo files are created.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  9\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.0.0/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n\r\n`dotnet new --list` output:\r\n```\r\nUsage: new [options]\r\n\r\nOptions:\r\n  -h, --help          Displays help for this command.\r\n  -l, --list          Lists templates containing the specified name. If no name is specified, lists all templates.\r\n  -n, --name          The name for the output being created. If no name is specified, the name of the current directory is used.\r\n  -o, --output        Location to place the generated output.\r\n  -i, --install       Installs a source or a template pack.\r\n  -u, --uninstall     Uninstalls a source or a template pack.\r\n  --type              Filters templates based on available types. Predefined values are \"project\", \"item\" or \"other\".\r\n  --force             Forces content to be generated even if it would change existing files.\r\n  -lang, --language   Specifies the language of the template to create.\r\n\r\n\r\nTemplates                                         Short Name       Language          Tags               \r\n--------------------------------------------------------------------------------------------------------\r\nConsole Application                               console          [C#], F#, VB      Common/Console     \r\nClass library                                     classlib         [C#], F#, VB      Common/Library     \r\nUnit Test Project                                 mstest           [C#], F#, VB      Test/MSTest        \r\nxUnit Test Project                                xunit            [C#], F#, VB      Test/xUnit         \r\nASP.NET Core Empty                                web              [C#], F#          Web/Empty          \r\nASP.NET Core Web App (Model-View-Controller)      mvc              [C#], F#          Web/MVC            \r\nASP.NET Core Web App                              razor            [C#]              Web/MVC/Razor Pages\r\nASP.NET Core with Angular                         angular          [C#]              Web/MVC/SPA        \r\nASP.NET Core with React.js                        react            [C#]              Web/MVC/SPA        \r\nASP.NET Core with React.js and Redux              reactredux       [C#]              Web/MVC/SPA        \r\nASP.NET Core Web API                              webapi           [C#], F#          Web/WebAPI         \r\nglobal.json file                                  globaljson                         Config             \r\nNuget Config                                      nugetconfig                        Config             \r\nWeb Config                                        webconfig                          Config             \r\nSolution File                                     sln                                Solution           \r\nRazor Page                                        page                               Web/ASP.NET        \r\nMVC ViewImports                                   viewimports                        Web/ASP.NET        \r\nMVC ViewStart                                     viewstart                          Web/ASP.NET    \r\n```"},{"Id":"7095633219","Type":"IssuesEvent","CreatedAt":"2018-01-13T19:11:18","Actor":"michielvoo","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8394","RelatedDescription":"Opened issue \"`dotnet new` exits with exit code 0 but produces no output\" (#8394) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\nOn a Mac running macOS Hight Sierra 10.13.2:\r\n- Uninstall .NET Core SDK using [the official uninstall script](https://github.com/dotnet/cli/blob/master/scripts/obtain/uninstall/dotnet-uninstall-pkgs.sh)\r\n- Download [the .NET Core SDK 2.1.4 installer](https://www.microsoft.com/net/download/thank-you/dotnet-sdk-2.1.4-macos-x64-installer)\r\n- Install .NET Core SDK\r\n- Run the following commands\r\n\r\n```\r\n> cd ~\r\n\r\n> mkdir test\r\n\r\n> cd test\r\n\r\n> pwd\r\n/Users/Michiel/test\r\n\r\n> dotnet new sln --name test.sln --output /Users/Michiel/test\r\nThe template \"Solution File\" was created successfully.\r\n\r\n> echo $?\r\n0\r\n\r\n> ls -al\r\ntotal 0\r\ndrwxr-xr-x  2 Michiel  staff   64 Jan 13 19:21 ./\r\ndrwxr-xr-x@ 6 Michiel  staff  192 Jan 13 19:21 ../\r\n\r\n> dotnet new page --name test.cshtml --output /Users/Michiel/test\r\nThe template \"Razor Page\" was created successfully.\r\n\r\n> echo $?\r\n0\r\n\r\n> ls -al\r\ntotal 0\r\ndrwxr-xr-x   2 Michiel  staff    64 Jan 13 19:45 ./\r\ndrwxr-xr-x@ 41 Michiel  staff  1312 Jan 13 19:45 ../\r\n\r\n> dotnet new console --name test --output /Users/Michiel/test\r\nThe template \"Console Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on /Users/Michiel/test/test.csproj...\r\n  Restoring packages for /Users/Michiel/test/test.csproj...\r\n  Generating MSBuild file /Users/Michiel/test/obj/test.csproj.nuget.g.props.\r\n  Generating MSBuild file /Users/Michiel/test/obj/test.csproj.nuget.g.targets.\r\n  Restore completed in 242.71 ms for /Users/Michiel/test/test.csproj.\r\n\r\n\r\nRestore succeeded.\r\n\r\n> echo $?\r\n0\r\n\r\n> ls -al\r\ntotal 0\r\ndrwxr-xr-x   2 Michiel  staff    64 Jan 13 19:45 ./\r\ndrwxr-xr-x@ 41 Michiel  staff  1312 Jan 13 19:45 ../\r\n\r\n> stat /Users/Michiel/test/test.csproj\r\nstat: /Users/Michiel/test/test.csproj: stat: No such file or directory\r\n\r\n```\r\n## Expected  behavior\r\nA file named test.sln or test.cshtml is created.\r\n\r\n## Actual behavior\r\nNo file is created.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     debian\r\n OS Version:  9\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.0.0/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n\r\n`dotnet new --list` output:\r\n```\r\nUsage: new [options]\r\n\r\nOptions:\r\n  -h, --help          Displays help for this command.\r\n  -l, --list          Lists templates containing the specified name. If no name is specified, lists all templates.\r\n  -n, --name          The name for the output being created. If no name is specified, the name of the current directory is used.\r\n  -o, --output        Location to place the generated output.\r\n  -i, --install       Installs a source or a template pack.\r\n  -u, --uninstall     Uninstalls a source or a template pack.\r\n  --type              Filters templates based on available types. Predefined values are \"project\", \"item\" or \"other\".\r\n  --force             Forces content to be generated even if it would change existing files.\r\n  -lang, --language   Specifies the language of the template to create.\r\n\r\n\r\nTemplates                                         Short Name       Language          Tags               \r\n--------------------------------------------------------------------------------------------------------\r\nConsole Application                               console          [C#], F#, VB      Common/Console     \r\nClass library                                     classlib         [C#], F#, VB      Common/Library     \r\nUnit Test Project                                 mstest           [C#], F#, VB      Test/MSTest        \r\nxUnit Test Project                                xunit            [C#], F#, VB      Test/xUnit         \r\nASP.NET Core Empty                                web              [C#], F#          Web/Empty          \r\nASP.NET Core Web App (Model-View-Controller)      mvc              [C#], F#          Web/MVC            \r\nASP.NET Core Web App                              razor            [C#]              Web/MVC/Razor Pages\r\nASP.NET Core with Angular                         angular          [C#]              Web/MVC/SPA        \r\nASP.NET Core with React.js                        react            [C#]              Web/MVC/SPA        \r\nASP.NET Core with React.js and Redux              reactredux       [C#]              Web/MVC/SPA        \r\nASP.NET Core Web API                              webapi           [C#], F#          Web/WebAPI         \r\nglobal.json file                                  globaljson                         Config             \r\nNuget Config                                      nugetconfig                        Config             \r\nWeb Config                                        webconfig                          Config             \r\nSolution File                                     sln                                Solution           \r\nRazor Page                                        page                               Web/ASP.NET        \r\nMVC ViewImports                                   viewimports                        Web/ASP.NET        \r\nMVC ViewStart                                     viewstart                          Web/ASP.NET    \r\n```"},{"Id":"7095609461","Type":"IssuesEvent","CreatedAt":"2018-01-13T18:54:43","Actor":"anurse","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8393","RelatedDescription":"Opened issue \"When running `dotnet test` on a solution, silently ignore non-test projects\" (#8393) at dotnet/cli","RelatedBody":"When iterating on a project, it's not uncommon to want to run all the unit tests across the solution quickly and with a single command. Running `dotnet test` at the solution level gets close to that, but needs some refinement. In particular, it's a little too grumpy about being told to test projects with no unit tests in them.\r\n\r\n## Steps to reproduce\r\n1. `dotnet new sln`\r\n2. `dotnet new classlib --name Library`\r\n3. `dotnet sln add Library/Library.csproj`\r\n4. `dotnet new xunit --name Tests`\r\n5. `dotnet sln add Tests/Tests.csproj`\r\n6. `dotnet test`\r\n\r\n## Expected  behavior\r\nTest Projects are built and the tests are executed. Ideally, only the test projects (and their dependencies) would be built, so only build failures in those projects and test failures would be displayed. I'd also be OK with all projects being built, but again, only build failures and test failures should be displayed. A notice about ignoring a project because it has no tests is OK but it should be subtle and certainly not in **red angry text** :).\r\n\r\nI think the ideal process here would be to check each project in the solution for tests, find the test projects, and just build those. Then run their tests.\r\n\r\n## Actual behavior\r\n\r\nThe behavior isn't far off, but the `No test is available ...` line is red and angry at me. Why is it so angry? I'm sorry `dotnet test`, I didn't mean to make you angry ;).\r\n\r\n```\r\nBuild started, please wait...\r\nBuild started, please wait...\r\nBuild completed.\r\n\r\nTest run for /Users/anurse/Code/anurse/silenttestrepro/Library/bin/Debug/netstandard2.0/Library.dll(.NETStandard,Version=v2.0)\r\nMicrosoft (R) Test Execution Command Line Tool Version 15.6.0-preview-20171211-02\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nStarting test execution, please wait...\r\nNo test is available in /Users/anurse/Code/anurse/silenttestrepro/Library/bin/Debug/netstandard2.0/Library.dll. Make sure test project has a nuget reference of package \"Microsoft.NET.Test.Sdk\" and framework version settings are appropriate and try again.\r\n\r\nTest Run Aborted.\r\nBuild completed.\r\n\r\nTest run for /Users/anurse/Code/anurse/silenttestrepro/Tests/bin/Debug/netcoreapp2.1/Tests.dll(.NETCoreApp,Version=v2.1)\r\nMicrosoft (R) Test Execution Command Line Tool Version 15.6.0-preview-20171211-02\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\nStarting test execution, please wait...\r\n[xUnit.net 00:00:00.9000360]   Discovering: Tests\r\n[xUnit.net 00:00:01.0090030]   Discovered:  Tests\r\n[xUnit.net 00:00:01.0250180]   Starting:    Tests\r\n[xUnit.net 00:00:01.2628950]   Finished:    Tests\r\n\r\nTotal tests: 1. Passed: 1. Failed: 0. Skipped: 0.\r\nTest Run Successful.\r\nTest execution time: 2.7807 Seconds\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\nzsh› dotnet --info\r\n.NET Command Line Tools (2.2.0-preview1-007796)\r\n\r\nProduct Information:\r\n Version:            2.2.0-preview1-007796\r\n Commit SHA-1 hash:  3ac579997c\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.13\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /Users/anurse/.dotnet/sdk/2.2.0-preview1-007796/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview2-25616-02\r\n  Build    : 8aa34a95bad481e1b5e4c8286e5cb2d7cb6ed943\r\n```\r\n\r\n\r\n\r\n"},{"Id":"7095608374","Type":"PullRequestEvent","CreatedAt":"2018-01-13T18:53:56","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8392","RelatedDescription":"Opened pull request \"Update CoreSetup to preview1-26113-01 (master)\" (#8392) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"7095500512","Type":"PullRequestEvent","CreatedAt":"2018-01-13T17:40:49","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8251","RelatedDescription":"Merged pull request \"Localization for tools work so far\" (#8251) at dotnet/cli","RelatedBody":"To cover the loc for\r\nhttps://github.com/dotnet/cli/commit/584d3f05021af25c737136275fc1c77429b12db7 \r\nhttps://github.com/dotnet/cli/commit/cc80ed43e04f0b3300f83afa0bcf8b73c6a7cbc9\r\nhttps://github.com/dotnet/cli/commit/55f62d9d646b558d53c56e226a9ddc3dc003a23b  \r\n\r\nhttps://github.com/dotnet/cli/issues/8078"},{"Id":"7094467616","Type":"PullRequestEvent","CreatedAt":"2018-01-13T03:33:30","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8388","RelatedDescription":"Merged pull request \"Enabling the publish of CLI assets to 'orchestrated' blob storage.\" (#8388) at dotnet/cli","RelatedBody":"AzureInfo.props \r\nBlobStoragePartialRelativePath = \"Sdk\" or \"[orchestrated-build-number]/cli/assets\"; replaces 'Product'\r\nFile reorganized and commented; review it directly...\r\n\r\nPublish.targets \r\nInsert a call to 'SetAzureProps'\r\n'BlobStoragePartialRelativePath' replaces 'Product'\r\nSimplification: remove Boolean 'PUBLISH_NUPKG_TO_AZURE_BLOB'\r\n\r\nAzureInfo.targets \r\nProgrammatically assign ContainerNames, AccountNames, and  BlobStoragePartialRelativePath - if conducting an orchestrated build.\r\n@jcagme \r\nplease review for correctness.\r\n\r\nFinishBuild.targets\r\nDo not copy all the blobs to 'master-latest' - if conducting an orchestrated build.\r\n\r\nPublishNupkgToBlobFeed.targets \r\nSimplification: remove Boolean 'PUBLISH_NUPKG_TO_BLOB_FEED'\r\n\r\n\r\n**Follow-up:**\r\nRemove 'PUBLISH_NUPKG_TO_BLOB_FEED' and 'PUBLISH_NUPKG_TO_AZURE_BLOB' variables in VSO build definitions\r\n\r\n"},{"Id":"7094349961","Type":"PullRequestEvent","CreatedAt":"2018-01-13T01:59:15","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/8391","RelatedDescription":"Closed pull request \"Add mock and DI to test InstallToolCommand\" (#8391) at dotnet/cli","RelatedBody":"Add mock and DI to test InstallToolCommand\r\n\r\nRun the same test against mock and real external service to avoid false positive when test with mock."},{"Id":"7094331827","Type":"PullRequestEvent","CreatedAt":"2018-01-13T01:46:09","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8379","RelatedDescription":"Merged pull request \"Add source option to install tool command.\" (#8379) at dotnet/cli","RelatedBody":"This commit adds the `--source` option to the `install tool` command.  This\r\noption is equivalent to the option of the same name for the `restore` command.\r\n\r\nThe option is forwarded to the underlying restore operation.\r\n\r\nFixes #8226.\r\n\r\n"},{"Id":"7094331819","Type":"IssuesEvent","CreatedAt":"2018-01-13T01:46:09","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8226","RelatedDescription":"Closed issue \"Add support for --source on `dotnet install tool`\" (#8226) at dotnet/cli","RelatedBody":"Currently, `dotnet install tool` only accepts a `--configfile` parameter. This means I have to create a NuGet.config file if I want to install a global tool from a local nupkg.\r\n\r\nKeeping in-line with many other dotnet verbs, it seems like `dotnet install tool` should add support for the `--source` flag that takes as a value any valid NuGet feed.\r\n\r\nThe goal is that users could install looks like this:\r\n```\r\ndotnet install tool --source https://dotnet.myget.org/F/aspnetcore-dev Microsoft.DotNet.Watcher.Tools\r\n```\r\n\r\nUsing: 2.2.0-preview1-007796\r\n\r\ncc @wli3 \r\n\r\n"},{"Id":"7094318723","Type":"PullRequestEvent","CreatedAt":"2018-01-13T01:37:35","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8391","RelatedDescription":"Opened pull request \"Tool compose parser pas\" (#8391) at dotnet/cli","RelatedBody":"Add mock and DI to test InstallToolCommand\r\n\r\nRun the same test against mock and real external service to avoid false positive when test with mock."},{"Id":"7094221199","Type":"PullRequestEvent","CreatedAt":"2018-01-13T00:43:49","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/cli/pull/8390","RelatedDescription":null,"RelatedBody":"- If this PR should not run tests please add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Please add description for changes you are making.\r\n- If there is an issue related to this PR, please add the reference.\r\n"},{"Id":"7094221121","Type":"PullRequestEvent","CreatedAt":"2018-01-13T00:43:47","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/8390","RelatedDescription":"Closed pull request \"Updates the TestPlatform to 15.6.0-preview-20180109-01\" (#8390) at dotnet/cli","RelatedBody":"- If this PR should not run tests please add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Please add description for changes you are making.\r\n- If there is an issue related to this PR, please add the reference.\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7088753160","Type":"PullRequestEvent","CreatedAt":"2018-01-11T22:45:46","Actor":"ahsonkhan","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/620","RelatedDescription":"Merged pull request \"Update BuildTools to prerelease-02411-04 (master)\" (#620) at dotnet/standard","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7096300604","Type":"PullRequestEvent","CreatedAt":"2018-01-14T04:41:15","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/26329","RelatedDescription":"Merged pull request \"IPAddress: Use BinaryPrimitives.ReverseEndianness\" (#26329) at dotnet/corefx","RelatedBody":"Went ahead and grabbed this follow-up from #26303."},{"Id":"7096168964","Type":"IssuesEvent","CreatedAt":"2018-01-14T02:25:49","Actor":"geoffkizer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/26331","RelatedDescription":"Opened issue \"[ManagedHandler] Add equivalent of ServicePoint.ConnectionLeaseTimeout \" (#26331) at dotnet/corefx","RelatedBody":"This is necessary to support DNS based routing with TTLs.  See #11224 for more details."},{"Id":"7096151190","Type":"IssuesEvent","CreatedAt":"2018-01-14T02:07:35","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/26320","RelatedDescription":"Closed issue \"Span and ReadOnlySpan methods are missing the PureAttribute\" (#26320) at dotnet/corefx","RelatedBody":"I'm very excited that `Span` is introduced in the lovely .NET framework!\r\n\r\nHowever I get a lot of R# warnings when using it, since none of the pure `Span` nor `ReadOnlySpan` methods have the `PureAttribute`.\r\n\r\nIs this 'pure' attribute obsolete? \r\n\r\n\r\n"},{"Id":"7096102073","Type":"PullRequestEvent","CreatedAt":"2018-01-14T01:19:17","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/26330","RelatedDescription":"Opened pull request \"Update CoreClr, CoreSetup to preview1-26113-03, preview1-26113-01, respectively (master)\" (#26330) at dotnet/corefx","RelatedBody":""},{"Id":"7096095930","Type":"PullRequestEvent","CreatedAt":"2018-01-14T01:13:02","Actor":"justinvp","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/26329","RelatedDescription":"Opened pull request \"IPAddress: Use BinaryPrimitives.ReverseEndianness\" (#26329) at dotnet/corefx","RelatedBody":"Went ahead and grabbed this follow-up from #26303."},{"Id":"7096095195","Type":"PullRequestEvent","CreatedAt":"2018-01-14T01:12:16","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/26328","RelatedDescription":"Merged pull request \"Restore temporarily removed assertion in Microsoft.CSharp\" (#26328) at dotnet/corefx","RelatedBody":"Assert was replaced by a runtime check \"temporarily\" to help for testing purposes in 7de4fc3a (2015-06-11)\r\n\r\nRestore to original."},{"Id":"7096072359","Type":"PullRequestEvent","CreatedAt":"2018-01-14T00:50:10","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/26315","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx, CoreSetup to preview1-26113-02, preview1-26113-03, preview1-26112-04, respectively (master)\" (#26315) at dotnet/corefx","RelatedBody":""},{"Id":"7095968051","Type":"PullRequestEvent","CreatedAt":"2018-01-13T23:16:43","Actor":"JonHanna","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/26328","RelatedDescription":"Opened pull request \"Restore temporarily removed assertion in Microsoft.CSharp\" (#26328) at dotnet/corefx","RelatedBody":"Assert was replaced by a runtime check \"temporarily\" to help for testing purposes in 7de4fc3a (2015-06-11)\r\n\r\nRestore to original."},{"Id":"7095967811","Type":"IssuesEvent","CreatedAt":"2018-01-13T23:16:32","Actor":"valeri2","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/26327","RelatedDescription":"Opened issue \"HttpListener on Unix. Windows authentication.\" (#26327) at dotnet/corefx","RelatedBody":"Hello.\r\nAre there plans to implement Windows authentication in HttpListener on Unix?\r\nIt is necessary to migrate my project on Linux."},{"Id":"7095936753","Type":"IssuesEvent","CreatedAt":"2018-01-13T22:52:38","Actor":"geoffkizer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/26326","RelatedDescription":"Opened issue \"[ManagedHandler] Consider adding support for LF line termination when parsing response header\" (#26326) at dotnet/corefx","RelatedBody":"Per RFC: https://tools.ietf.org/html/rfc7230#section-3.5\r\n\r\n\"Although the line terminator for the start-line and header fields is the sequence CRLF, a recipient MAY recognize a single LF as a line terminator and ignore any preceding CR.\"\r\n"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7095991482","Type":"PullRequestEvent","CreatedAt":"2018-01-13T23:36:17","Actor":"AdamSpeight2008","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/19999","RelatedDescription":"Closed pull request \"VB Feature: OptionalParameterDefaults.\" (#19999) at dotnet/roslyn","RelatedBody":"**Prototype** Implementation of VBLang [PR 13](https://github.com/dotnet/vblang/pull/13)\r\nCurrently doesn't have unit tests.\r\n\r\n@jaredpar Am I targeting the right base branch?\r\n\r\n@AnthonyDGreen Is this about the expected size of Pull Request (-unit tests) for should a feature?\r\nI've refactored the existing `optional parameter` code into separate methods, which allowed me to reuse some of them from the method handling the feature."},{"Id":"7095986091","Type":"PullRequestEvent","CreatedAt":"2018-01-13T23:31:31","Actor":"AdamSpeight2008","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24231","RelatedDescription":"Opened pull request \"[Feature] Default Optional Parameter\" (#24231) at dotnet/roslyn","RelatedBody":"This replaces PR #19999 as the implementation in this one is simplified.\r\n\r\n**Prototype** Implementation of VBLang [PR 13](https://github.com/dotnet/vblang/pull/13)\r\nCurrently doesn't have unit tests.\r\n"},{"Id":"7095929291","Type":"IssuesEvent","CreatedAt":"2018-01-13T22:46:42","Actor":"zidad","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/24229","RelatedDescription":"Closed issue \"Feature request: String interpolation as Expression<Func<string>>\" (#24229) at dotnet/roslyn","RelatedBody":"I'm not sure if this has already been requested once, but for C# string interpolation I would like to be able to have an Expression<string>, as with Linq expressions. This would allow for much richer string string formatting model usable for querying, templating and semantic logging.\r\n\r\nI mentioned this first in a comment here: https://ardalis.com/entity-framework-core-string-interpolation-fromsql#comment-3704532568\r\n\r\n**Expected Behavior**:\r\nstring city = \"London\";\r\nExpression<Func<string>> sql = $\"SELECT * FROM cities where name={city}\"\r\n\r\nAnd it would prevent a library like Serilog from having to pass all parameters in addition to the message template, so instead of this: \r\nLog.Information(\"I live in {city}\", city);\r\n\r\nYou can just write this:\r\nLog.Information($\"I live in {city}\");\r\n\r\nBut STILL have access to the original message template and parameters.\r\n\r\nEdit: So I noticed FormattableString now, which seems to solve a similar problem, except it doesn't provide access to he original list of arguments (and their names), only the values?\r\n"},{"Id":"7095856050","Type":"PullRequestEvent","CreatedAt":"2018-01-13T21:50:58","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/24230","RelatedDescription":"Opened pull request \"Remove some unreachable code\" (#24230) at dotnet/roslyn","RelatedBody":"Relates to https://github.com/dotnet/roslyn/issues/24206"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7096169065","Type":"PullRequestEvent","CreatedAt":"2018-01-14T02:25:57","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5247","RelatedDescription":"Opened pull request \"Force link time symbol resolution for \"__Internal\" module for compatibility with Mono\" (#5247) at dotnet/corert","RelatedBody":""},{"Id":"7096081065","Type":"PullRequestEvent","CreatedAt":"2018-01-14T00:58:46","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5246","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#5246) at dotnet/corert","RelatedBody":""},{"Id":"7096080930","Type":"PullRequestEvent","CreatedAt":"2018-01-14T00:58:38","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5246","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#5246) at dotnet/corert","RelatedBody":""},{"Id":"7096037193","Type":"PullRequestEvent","CreatedAt":"2018-01-14T00:16:55","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5245","RelatedDescription":"Merged pull request \"Merge nmirror to master\" (#5245) at dotnet/corert","RelatedBody":""},{"Id":"7095970357","Type":"PullRequestEvent","CreatedAt":"2018-01-13T23:18:34","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5245","RelatedDescription":"Opened pull request \"Merge nmirror to master\" (#5245) at dotnet/corert","RelatedBody":""},{"Id":"7095970085","Type":"PullRequestEvent","CreatedAt":"2018-01-13T23:18:20","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5244","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#5244) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7095956614","Type":"PullRequestEvent","CreatedAt":"2018-01-13T23:08:18","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5244","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#5244) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"7095879816","Type":"PullRequestEvent","CreatedAt":"2018-01-13T22:08:33","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5243","RelatedDescription":"Merged pull request \"Add ability to build CoreRT with VS BuildTools 2017\" (#5243) at dotnet/corert","RelatedBody":"Dockerfile that builds CoreRT win-x64 packages: https://gist.github.com/am11/826911cbf6c26ea1de4747176ca2b57c\r\n\r\n* Line 17 is required by `dotnet/buildtools`\r\n* Line 18 and 19 are required by MSBuild\r\n"},{"Id":"7095835452","Type":"PullRequestEvent","CreatedAt":"2018-01-13T21:35:11","Actor":"am11","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5243","RelatedDescription":"Opened pull request \"Add ability to build CoreRT with VS BuildTools 2017\" (#5243) at dotnet/corert","RelatedBody":"Dockerfile that builds CoreRT win-x64 packages: https://gist.github.com/am11/826911cbf6c26ea1de4747176ca2b57c\r\n\r\n* Line 17 is required by `dotnet/buildtools`\r\n* Line 18 and 19 are required by MSBuild\r\n"},{"Id":"7095087069","Type":"IssuesEvent","CreatedAt":"2018-01-13T12:51:38","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4517","RelatedDescription":"Closed issue \"Implement ldftn opcode\" (#4517) at dotnet/corert","RelatedBody":"Implement the ldftn opcode, which pushes a function pointer. It might be possible to just use the results of LLVM.GetNamedFunction as the function pointer and let LLVM fix it up. The method to fill in is:\r\nhttps://github.com/dotnet/corert/blob/e6d0a9398e3d8fc83d047cccda302ed13610f190/src/ILCompiler.WebAssembly/src/CodeGen/ILToWebAssemblyImporter.cs#L634"},{"Id":"7095083450","Type":"IssuesEvent","CreatedAt":"2018-01-13T12:48:50","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4518","RelatedDescription":"Closed issue \"Implement calli opcode\" (#4518) at dotnet/corert","RelatedBody":"Implement the calli opcode, which calls a function pointer. Argument management code could probably be shared with HandleCall. The method to fill in is:\r\nhttps://github.com/dotnet/corert/blob/e6d0a9398e3d8fc83d047cccda302ed13610f190/src/ILCompiler.WebAssembly/src/CodeGen/ILToWebAssemblyImporter.cs#L630"},{"Id":"7095083451","Type":"PullRequestEvent","CreatedAt":"2018-01-13T12:48:49","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5143","RelatedDescription":"Merged pull request \"Implement WebAssembly delegates\" (#5143) at dotnet/corert","RelatedBody":"Implements WebAssembly delegates and fix other minor codegen issues. Includes implementing ldftn, calli, sizeof, and ldind.ref.\r\n\r\nDepends on a separate codegen fix in #5141, so CI will fail until that's merged, but this is otherwise ready to review. \r\n\r\nFixes #4518, #4517. Progress toward #4520."},{"Id":"7094394450","Type":"PullRequestEvent","CreatedAt":"2018-01-13T02:32:54","Actor":"Anipik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5242","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5242) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7094326308","Type":"PullRequestEvent","CreatedAt":"2018-01-13T01:42:26","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5242","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5242) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7094114111","Type":"PullRequestEvent","CreatedAt":"2018-01-12T23:55:30","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1843","RelatedDescription":"Merged pull request \"Pack for tools\" (#1843) at dotnet/sdk","RelatedBody":"Add PackAsTool in csproj, and run dotnet pack. The result will be in\r\ntool format nupkg"},{"Id":"7093414375","Type":"IssuesEvent","CreatedAt":"2018-01-12T20:24:11","Actor":"rynowak","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1854","RelatedDescription":"Opened issue \"ResolvePackageFileConflicts throwing when referencing System.Diagnostics.DiagnosticSource by assembly path\" (#1854) at dotnet/sdk","RelatedBody":"This is new failure that just started happening in some Razor tests for our MSBuild functionality. This started failing for us `2.2.0-preview1-007927` - this was working before in `2.2.0-preview1-007866`.\r\n\r\nI've attached a repro project, which is doing some esoteric things because this is part of our tests for our MSBuild targets 😆. I think the probably might not be anything wierd that we're doing though.\r\n\r\nThe project file looks like this:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup Condition=\"'$(BinariesRoot)'==''\">\r\n    <!-- In test scenarios $(BinariesRoot) is defined in a generated Directory.Build.props file -->\r\n    <ProjectReference Include=\"..\\..\\Microsoft.AspNetCore.Razor.Test.MvcShim\\Microsoft.AspNetCore.Razor.Test.MvcShim.csproj\"/>\r\n    <ProjectReference Include=\"..\\..\\..\\src\\Microsoft.AspNetCore.Razor.Runtime\\Microsoft.AspNetCore.Razor.Runtime.csproj\"/>\r\n  </ItemGroup>\r\n\r\n  <ItemGroup Condition=\"'$(BinariesRoot)'!=''\">\r\n    <Reference Include=\"$(BinariesRoot)\\System.Diagnostics.DiagnosticSource.dll\"/>\r\n    <Reference Include=\"$(BinariesRoot)\\Microsoft.AspNetCore.Html.Abstractions.dll\"/>\r\n    <Reference Include=\"$(BinariesRoot)\\Microsoft.AspNetCore.Razor.dll\"/>\r\n    <Reference Include=\"$(BinariesRoot)\\Microsoft.AspNetCore.Razor.Runtime.dll\"/>\r\n    <Reference Include=\"$(BinariesRoot)\\Microsoft.AspNetCore.Razor.Test.MvcShim.dll\"/>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\nRemoving `<Reference Include=\"$(BinariesRoot)\\System.Diagnostics.DiagnosticSource.dll\"/>` seems to fix it.\r\n\r\n\r\n```\r\nMicrosoft (R) Build Engine version 15.6.22.57775 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restoring packages for C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj...\r\n  Generating MSBuild file C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\obj\\SimpleMvc.csproj.nuget.g.props.\r\n  Generating MSBuild file C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\obj\\SimpleMvc.csproj.nuget.g.targets.\r\n  Restore completed in 273.82 ms for C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj.\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018: The \"ResolvePackageFileConflicts\" task failed unexpectedly. [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018: System.ArgumentNullException: Value cannot be null. [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018: Parameter name: key [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018:    at System.Collections.Generic.Dictionary`2.FindEntry(TKey key) [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018:    at System.Collections.Generic.Dictionary`2.TryGetValue(TKey key, TValue& value) [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ConflictResolution.PackageOverrideResolver`1.Resolve(TConflictItem item1, TConflictItem item2) [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ConflictResolution.ConflictResolver`1.ResolveConflict(TConflictItem item1, TConflictItem item2) [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ConflictResolution.ConflictResolver`1.ResolveConflicts(IEnumerable`1 conflictItems, Func`2 getItemKey, Action`1 foundConflict, Boolean commitWinner, Action`1 unresolvedConflict) [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018:    at Microsoft.NET.Build.Tasks.ConflictResolution.ResolvePackageFileConflicts.ExecuteCore()[C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() in E:\\A\\_work\\24\\s\\src\\Build\\BackEnd\\TaskExecutionHost\\TaskExecutionHost.cs:line 631 [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\nC:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\Sdks\\Microsoft.NET.Sdk\\build\\Microsoft.NET.ConflictResolution.targets(59,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__25.MoveNext() in E:\\A\\_work\\24\\s\\src\\Build\\BackEnd\\Components\\RequestBuilder\\TaskBuilder.cs:line 787 [C:\\Users\\rynowak\\AppData\\Local\\Temp\\Razor\\sbp0bspc.b03\\SimpleMvc\\SimpleMvc.csproj]\r\n```\r\n\r\n\r\n```\r\n.NET Command Line Tools (2.2.0-preview1-007927)\r\n\r\nProduct Information:\r\n Version:            2.2.0-preview1-007927\r\n Commit SHA-1 hash:  a212d5a017\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Users\\rynowak\\.dotnet\\x64\\sdk\\2.2.0-preview1-007927\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview1-26110-02\r\n  Build    : 77152705cd56e7d89f52585959ec3559d91084c4\r\n```\r\n[Repro.zip](https://github.com/dotnet/sdk/files/1627368/Repro.zip)\r\n"},{"Id":"7089958883","Type":"IssuesEvent","CreatedAt":"2018-01-12T06:30:35","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/1853","RelatedDescription":"Opened issue \"[tools] Pack should glob result of publish or not\" (#1853) at dotnet/sdk","RelatedBody":"https://github.com/dotnet/sdk/pull/1843#discussion_r161075634\r\n\r\nNeed further discussion \r\n\r\n>dasMulli\r\nI think I suggested ResolvedFileToPublish previously but having doubts now. It could by PreserveNewest with some modification already done in the publish output or users could have targets with <Copy> stuff in there. (or even post-built steps using xcopy execute).\r\nThe most \"correct\" but also slowest would be to do the same as the web sdk does for publishing - clean an intermediate directory and publish to it, then use a glob to harvest this clean publish. e.g. like #1846 (comment)"},{"Id":"7088988488","Type":"PullRequestEvent","CreatedAt":"2018-01-11T23:56:32","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1848","RelatedDescription":"Merged pull request \"VB-specific DocumentationFile generation.\" (#1848) at dotnet/sdk","RelatedBody":"Fixes #1598\r\n\r\nVB targets already include `$(IntermediateOutputPath)`, so don't add it for `GenerateDocumentationFile`."},{"Id":"7088988486","Type":"IssuesEvent","CreatedAt":"2018-01-11T23:56:32","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/1598","RelatedDescription":"Closed issue \"GenerateDocumentationFile=true breaks DebugSymbolsProjectOutputGroup in VB projects\" (#1598) at dotnet/sdk","RelatedBody":"Get the following when trying to replace `<DocumentationFile>Foo.xml</DocumentationFile>` with `<GenerateDocumentionFile>true</GenerateDocumentationFile>`.\r\n\r\n```\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\Preview\\Enterprise\\MSBuild\\15.0\\bin\\Microsoft.Common.CurrentVersion.targets(5458,44): error MSB4023: Cannot evaluate the item metadata \"%(FullPath)\". The item metadata \"%(FullPath)\" cannot be applied to the path \"D:\\Src\\roslyn\\Binaries\\Obj\\BasicEditorFeatures\\Debug\\D:\\Src\\roslyn\\Binaries\\Obj\\BasicEditorFeatures\\Debug\\Microsoft.CodeAnalysis.VisualBasic.EditorFeatures.xml\". The given path's format is not supported. [D:\\Src\\roslyn\\src\\EditorFeatures\\VisualBasic\\BasicEditorFeatures.vbproj]\r\n```\r\n\r\nThe issue is that VB targets do not expect DocumentationFile to include the IntermediateOutputPath like C# targets, so GenerateDocumentationFile needs to behave differently for VB than C#."},{"Id":"7088905947","Type":"PullRequestEvent","CreatedAt":"2018-01-11T23:29:15","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/1852","RelatedDescription":"Merged pull request \"Fix spelling of 'overridden'\" (#1852) at dotnet/sdk","RelatedBody":"This typo fix affects msbuild metadata, but it is non-breaking because it was just introduced with #1805 and hasn't shipped."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"952185961085067266","CreatedAt":"2018-01-13T14:29:58+00:00","UserScreenname":"dotnet","Text":"Our Jeff Fritz (@csharpfritz) will be LIVE CODING again today.  Today's topic is unit testing @AspNet Core projects… https://t.co/kXZpzdtOqA","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":9,"RawContent":null},{"Id":"950980824685412352","CreatedAt":"2018-01-10T06:41:11+00:00","UserScreenname":"dotnet","Text":".NET Framework January 2018 Security and Quality Rollup https://t.co/vyjtKwKpkb","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":14,"RawContent":null},{"Id":"950944972588462080","CreatedAt":"2018-01-10T04:18:43+00:00","UserScreenname":"dotnet","Text":".NET for UWP January 2018 Update https://t.co/zckziEWmv7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":42,"FavoriteCount":28,"RawContent":null},{"Id":"950850103652139008","CreatedAt":"2018-01-09T22:01:45+00:00","UserScreenname":"dotnet","Text":".NET Framework 4.7.1 is available on Windows Update, WSUS and MU Catalog! https://t.co/Hr3fLteMDg","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":64,"FavoriteCount":57,"RawContent":null},{"Id":"950842872890191872","CreatedAt":"2018-01-09T21:33:01+00:00","UserScreenname":"dotnet","Text":".NET Core January 2018 Update https://t.co/waKNOsvgKU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":75,"FavoriteCount":64,"RawContent":null},{"Id":"948916811034234881","CreatedAt":"2018-01-04T13:59:32+00:00","UserScreenname":"dotnet","Text":"At 10am ET, join our Jeff Fritz (@csharpfritz) for LIVE CODING and he'll answer your questions and .NET, ASPNet, an… https://t.co/CCz9Kdyzk7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":10,"RawContent":null},{"Id":"944564608391577600","CreatedAt":"2017-12-23T13:45:26+00:00","UserScreenname":"dotnet","Text":"Join our Jeff Fritz - @csharpfritz and MVP @IrisClasson in about an hour for LIVE CODING and pair programming on… https://t.co/kicrnl8tNJ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":11,"RawContent":null}]}},"RunOn":"2018-01-14T05:30:20.7263575Z","RunDurationInMilliseconds":8029}