{"Data":{"Blog":{"FeedItems":[{"Title":"Build 2018: Conference Vision Demo App","PublishedOn":"2018-06-07T20:43:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Build 2018 we shipped Xamarin.Forms 3.0. Did you miss the announcement? No worries, you can watch it here to catch up on many of the great new things that will help make you more productive...","Href":"https://blog.xamarin.com/build-2018-conference-vision-demo-app/","RawContent":null},{"Title":"Xamarin.Android Firebase Job Dispatcher: Background Scheduling for all Android Devices","PublishedOn":"2018-06-04T16:00:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Running tasks in the background is important for Android apps. It&#8217;s what helps keep an app responsive to the user and allows work to get done even when the user isn’t actively engaged with the...","Href":"https://blog.xamarin.com/xamarin-android-firebase-job-dispatcher-background-scheduling-android-devices/","RawContent":null},{"Title":"Xamarin and .NET Developer Events this June","PublishedOn":"2018-06-01T18:13:14+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since the recent Microsoft Build conference, Xamarin and .NET recap events have been springing up all over the globe! Find an event near you this month to get the latest news on the exciting releases,...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-this-june/","RawContent":null},{"Title":"Xamarin University Presents: Guest Lectures from Industry Luminaries!","PublishedOn":"2018-05-30T18:46:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Technology moves quickly; new software, platforms, and frameworks are constantly being developed, improved, and released. Exploring the landscape of developer tools and libraries that we can consume...","Href":"https://blog.xamarin.com/xamarin-university-presents-guest-lectures/","RawContent":null},{"Title":"Contributing to Xamarin.Android","PublishedOn":"2018-05-25T18:15:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin has been open source for over two years now, starting the day we made the exciting announcement about the future of Xamarin. Since then, we&#8217;ve moved the majority of our work out in the...","Href":"https://blog.xamarin.com/contributing-xamarin-android/","RawContent":null},{"Title":"Guest Post: Securing and Versioning Xamarin Apps with Mobile.BuildTools","PublishedOn":"2018-05-23T19:11:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Dan Siegel is a Microsoft MVP, maintainer of the Prism Library, author of numerous dev tools and OSS libraries, leader of the San Diego Xamarin Dev’s Meetup, and a Xamarin blogger. Dan works as a...","Href":"https://blog.xamarin.com/securing-versioning-xamarin-apps-with-mobilebuildtools/","RawContent":null},{"Title":"Xamarin.Essentials: Cross-Platform APIs for Mobile Apps","PublishedOn":"2018-05-16T18:36:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"When developing iOS and Android apps with Xamarin, developers can access every native platform API using C#. These bindings not only expose the platform APIs in C#, but add powerful C# features, such...","Href":"https://blog.xamarin.com/xamarin-essentials-cross-platform-apis-mobile-apps/","RawContent":null},{"Title":"Integrating Xamarin.com into Microsoft Sites","PublishedOn":"2018-05-15T22:49:19+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the past year we&#8217;ve started to make it even easier to find Xamarin information on Microsoft sites, and going forward you will start seeing changes to xamarin.com as we continue to migrate...","Href":"https://blog.xamarin.com/integrating-xamarin-com-microsoft-sites/","RawContent":null},{"Title":"Update Your Xamarin.Mac Apps for 64-bit Today!","PublishedOn":"2018-05-14T18:33:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last June, Apple announced that upcoming macOS releases would only support 32-bit applications “with compromises”. If your Mac application is not 64-bit, we strongly recommend taking action to avoid...","Href":"https://blog.xamarin.com/update-xamarinmac-apps/","RawContent":null},{"Title":"Podcast: Build 2018 Recap for Mobile Developers","PublishedOn":"2018-05-11T18:38:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I discuss the news for mobile developers from Build 2018, including Xamarin.Forms 3.0, Hyper-V support for the Android emulator,...","Href":"https://blog.xamarin.com/podcast-build-2018-recap-mobile-developers/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7793755577","Type":"PullRequestEvent","CreatedAt":"2018-06-07T22:28:21","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1785","RelatedDescription":"Merged pull request \"[tests] fix concurrency issue with temporary downloaded files\" (#1785) at xamarin/xamarin-android","RelatedBody":"Context: http://build.devdiv.io/1749980\r\n\r\nOn VSTS, the `BindingBuildTest.BindingCheckHiddenFiles` test is\r\nfailing due to two tests trying to download the same file to a\r\ntemporary location on disk at the same time:\r\n\r\n    EXEC : 1) error : Xamarin.Android.Build.Tests.BindingBuildTest.BindingCheckHiddenFiles(False) [D:\\a\\1\\s\\Xamarin.Android.sln]\r\n    System.IO.IOException : The process cannot access the file 'C:\\Users\\VssAdministrator\\AppData\\Local\\Xamarin.ProjectTools\\mylibrary.aar' because it is being used by another process.\r\n        at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\r\n        at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\r\n        at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\r\n        at System.IO.File.InternalReadAllBytes(String path, Boolean checkHost)\r\n        at Xamarin.ProjectTools.BuildItem.<>c__DisplayClass70_0.<set_WebContent>b__0() in D:\\a\\1\\s\\src\\Xamarin.Android.Build.Tasks\\Tests\\Xamarin.ProjectTools\\Common\\BuildItem.cs:line 130\r\n        at Xamarin.ProjectTools.XamarinProject.<>c.<Save>b__87_4(BuildItem s) in D:\\a\\1\\s\\src\\Xamarin.Android.Build.Tasks\\Tests\\Xamarin.ProjectTools\\Common\\XamarinProject.cs:line 168\r\n        at System.Linq.Enumerable.WhereSelectListIterator`2.MoveNext()\r\n        at System.Collections.Generic.List`1.InsertRange(Int32 index, IEnumerable`1 collection)\r\n        at Xamarin.ProjectTools.XamarinProject.Save(Boolean saveProject) in D:\\a\\1\\s\\src\\Xamarin.Android.Build.Tasks\\Tests\\Xamarin.ProjectTools\\Common\\XamarinProject.cs:line 168\r\n        at Xamarin.ProjectTools.ProjectBuilder.Save(XamarinProject project, Boolean doNotCleanupOnUpdate, Boolean saveProject) in D:\\a\\1\\s\\src\\Xamarin.Android.Build.Tasks\\Tests\\Xamarin.ProjectTools\\Common\\ProjectBuilder.cs:line 44\r\n        at Xamarin.ProjectTools.ProjectBuilder.Build(XamarinProject project, Boolean doNotCleanupOnUpdate, String[] parameters, Boolean saveProject, Dictionary`2 environmentVariables) in D:\\a\\1\\s\\src\\Xamarin.Android.Build.Tasks\\Tests\\Xamarin.ProjectTools\\Common\\ProjectBuilder.cs:line 61\r\n        at Xamarin.Android.Build.Tests.BindingBuildTest.BindingCheckHiddenFiles(Boolean useShortFileNames) in D:\\a\\1\\s\\src\\Xamarin.Android.Build.Tasks\\Tests\\Xamarin.Android.Build.Tests\\BindingBuildTest.cs:line 281\r\n\r\nTo fix this, I set it up to lock based on the URL passed in using a\r\n`ConcurrentDictionary<string, object>` to hold objects to lock with."},{"Id":"7793752028","Type":"PullRequestEvent","CreatedAt":"2018-06-07T22:27:21","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1787","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] add a SLN to work on build tasks easier\" (#1787) at xamarin/xamarin-android","RelatedBody":"Currently working with Xamarin.Android.Build.Tasks in Visual Studio\r\nfor Windows requires several non-working projects to be unloaded.\r\n\r\nMost of the development done on Windows involve the\r\nXamarin.Android.Build.Tasks MSBuild tasks and unit tests, so it makes\r\nsense to just have a simple SLN file to work on this specific part of\r\nthe product.\r\n\r\nThis simplifies the workflow on Windows:\r\n- Run `msbuild Xamarin.Android.sln /t:Prepare`\r\n- Run `msbuild Xamarin.Android.sln`\r\n- Open `Xamarin.Android.Build.Tasks.sln`, which only loads 4 relevant\r\n  projects, and work completely in the IDE from there. The solution\r\n  also loads very quickly, due to having less projects.\r\n\r\nFrom here, the IDE's NUnit unit test runner works, and it is\r\nstraightforward to make changes to MSBuild tasks.\r\n\r\nOther changes:\r\n- Added a `.gitignore` rule for VS Code"},{"Id":"7793664184","Type":"PullRequestEvent","CreatedAt":"2018-06-07T22:03:22","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1788","RelatedDescription":"Merged pull request \"[Security] Fix Zip-Slip vulnerability\" (#1788) at xamarin/xamarin-android","RelatedBody":"Update LibZipSharp to pull in fixes for the zip-slip\r\nvulnerability (https://snyk.io/research/zip-slip-vulnerability).\r\n\r\nThe fix is to make sure that no zip entry path can be used to create files\r\noutside the designated output directory. This is done by removing both the\r\nrelative path segments as well as making sure that the entry path is not rooted."},{"Id":"7793647963","Type":"PullRequestEvent","CreatedAt":"2018-06-07T21:59:31","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1779","RelatedDescription":"Merged pull request \"Dont use the Managed Parser on Mac\" (#1779) at xamarin/xamarin-android","RelatedBody":"Context https://github.com/xamarin/xamarin-android/issues/1670"},{"Id":"7793275406","Type":"PullRequestEvent","CreatedAt":"2018-06-07T20:38:45","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1790","RelatedDescription":"Opened pull request \"Final P API update.\" (#1790) at xamarin/xamarin-android","RelatedBody":"API 27 package is updated and it introduced some new API bits too."},{"Id":"7792946975","Type":"PullRequestEvent","CreatedAt":"2018-06-07T19:31:57","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1773","RelatedDescription":"Closed pull request \"[Xamarin.Forms Integration] only set `$(AndroidUseAapt2)` on non-Windows platforms\" (#1773) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/issues/1771\r\n\r\nThe `Xamarin.Forms-Performance-Integration` project is currently\r\nsetting `$(AndroidUseAapt2)` as a way to test its performance\r\nimprovements.\r\n\r\nSince setting `$(AndroidUseAapt2)` would cause `aapt.exe` to operate\r\nacross different drives on VSTS (`C:\\` and `E:\\`), this is breaking\r\nthe build.\r\n\r\nFor now, let's not set `$(AndroidUseAapt2)` on Windows. We also have\r\nto move the property *after* `Configuration.props` is imported, so\r\n`$(HostOS)` is set."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7794601340","Type":"PullRequestEvent","CreatedAt":"2018-06-08T03:41:32","Actor":"activa","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2976","RelatedDescription":"Opened pull request \"[UWP] Fix listview not rendering when ItemsSource is initially null\" (#2976) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFix listview not rendering when ItemsSource is initially null\r\n\r\nWhen ItemsSource is initially null, the DataContext is not set, and it is never set when the ItemsSource property is set later. This fix will call ReloadData() when the ItemsSource property is changed on the XF ListView control.\r\n\r\n### Bugs Fixed ###\r\n\r\nNo bug reported yet\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n- [X] Consolidate commits as makes sense\r\n"},{"Id":"7794151320","Type":"IssuesEvent","CreatedAt":"2018-06-08T00:46:09","Actor":"Osmosis311","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2975","RelatedDescription":"Opened issue \"Errors on Build related to XamlGTask\" (#2975) at xamarin/Xamarin.Forms","RelatedBody":"When I try to build my XF project, I intermittently get two errors.  If I try to rebuild over and over, they _sometimes_ go away and I'm able to build.\r\n\r\nVisual Studio Mac 7.5.2 (Build 40)\r\nXamarin.Forms 3.1.0.469394-pre1\r\n\r\nHere are the two errors:\r\n\r\n/Users/<redacted>/Projects/MemberApp/packages/Xamarin.Forms.3.1.0.469394-pre1/build/netstandard2.0/Xamarin.Forms.targets(4,4): Error MSB4064: The \"OutputPath\" parameter is not supported by the \"XamlGTask\" task. Verify the parameter exists on the task, and it is a settable public instance property. (MSB4064) (MemberApp.Droid)\r\n\r\n/Users/<redacted>/Projects/MemberApp/packages/Xamarin.Forms.3.1.0.469394-pre1/build/netstandard2.0/Xamarin.Forms.targets(3,3): Error MSB4063: The \"XamlGTask\" task could not be initialized with its input parameters.  (MSB4063) (MemberApp.Droid)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7793368840","Type":"PullRequestEvent","CreatedAt":"2018-06-07T20:57:37","Actor":"migueldeicaza","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4198","RelatedDescription":"Opened pull request \"Xcode10 coregraphicsb1\" (#4198) at xamarin/xamarin-macios","RelatedBody":"Additionally, completed CFPropertyList"},{"Id":"7793366308","Type":"PullRequestEvent","CreatedAt":"2018-06-07T20:57:06","Actor":"migueldeicaza","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4197","RelatedDescription":"Closed pull request \"Xcode10 coregraphicsb1\" (#4197) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7793365328","Type":"PullRequestEvent","CreatedAt":"2018-06-07T20:56:54","Actor":"migueldeicaza","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4197","RelatedDescription":"Opened pull request \"Xcode10 coregraphicsb1\" (#4197) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7792925187","Type":"IssuesEvent","CreatedAt":"2018-06-07T19:27:25","Actor":"kalyanmungi","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4196","RelatedDescription":"Opened issue \"iOS crashes with \"ReportCrash(CrashReported): Trying to create CR directory structure as root\"\" (#4196) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significally more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7792163362","Type":"PullRequestEvent","CreatedAt":"2018-06-07T16:55:32","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4195","RelatedDescription":"Merged pull request \"[jenkins] Cherry-pick a series of fixes for internal jenkins support from the d15-8 branch\" (#4195) at xamarin/xamarin-macios","RelatedBody":"A series of fixes for internal Jenkins support were implemented on the d15-8\r\nbranch (in PR #4180); this PR is cherry-picking those fixes to master.\r\n\r\n* [jenkins] Fix passing flags to configure.\r\n\r\n    Quoting empty CONFIGURE_FLAGS ends up doing this:\r\n    \r\n        ./configure \"\" --disable-ios-device\r\n    \r\n    and since configure parses arguments until it finds an empty argument, it\r\n    would stop parsing at the first argument, effectively not disabling the\r\n    device build.\r\n    \r\n    So don't quote CONFIGURE_FLAGS when invoking configure. shellcheck doesn't\r\n    quite like this, but the better code is much more complex, and not really\r\n    needed, so just add an exception.\r\n\r\n* [Jenkins] Enable xamarin before provisioning so that we auto-provision Xcode.\r\n\r\n* [jenkins] Add sha256 checksum to artifacts.json as well.\r\n\r\n* [jenkins] Include the url in artifacts.json\r\n\r\n* [Jenkins] Create artifacts.json and set a GH status as 'Jenkins: Artifacts'."},{"Id":"7791164054","Type":"PullRequestEvent","CreatedAt":"2018-06-07T14:14:19","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4195","RelatedDescription":"Opened pull request \"[jenkins] Cherry-pick a series of fixes for internal jenkins support from the d15-8 branch\" (#4195) at xamarin/xamarin-macios","RelatedBody":"A series of fixes for internal Jenkins support were implemented on the d15-8\nbranch; this PR is cherry-picking those fixes to master.\n\n* [jenkins] Fix passing flags to configure.\n\n    Quoting empty CONFIGURE_FLAGS ends up doing this:\n    \n        ./configure \"\" --disable-ios-device\n    \n    and since configure parses arguments until it finds an empty argument, it\n    would stop parsing at the first argument, effectively not disabling the\n    device build.\n    \n    So don't quote CONFIGURE_FLAGS when invoking configure. shellcheck doesn't\n    quite like this, but the better code is much more complex, and not really\n    needed, so just add an exception.\n\n* [Jenkins] Enable xamarin before provisioning so that we auto-provision Xcode.\n\n* [jenkins] Add sha256 checksum to artifacts.json as well.\n\n* [jenkins] Include the url in artifacts.json\n\n* [Jenkins] Create artifacts.json and set a GH status as 'Jenkins: Artifacts'."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1004839391477592064","CreatedAt":"2018-06-07T21:35:54+00:00","UserScreenname":"xamarinhq","Text":"Check out the code for the #MSBuild 2018 Conference Vision demo app: https://t.co/tpcBITRsnu https://t.co/kVwUJR5NoL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":72,"FavoriteCount":38,"RawContent":null},{"Id":"1004743034813276160","CreatedAt":"2018-06-07T15:13:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build #XamariniOS from the source code in the second part of our four-part series on debugging… https://t.co/88r7PENPNw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":22,"FavoriteCount":18,"RawContent":null},{"Id":"1004393225787002881","CreatedAt":"2018-06-06T16:03:00+00:00","UserScreenname":"xamarinhq","Text":"We’ve updated the #XamarinForms project templates in #VS2017 to include #dotNET Standard support and customization… https://t.co/6IkmiiY1Jp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":77,"FavoriteCount":30,"RawContent":null},{"Id":"1004381931470049282","CreatedAt":"2018-06-06T15:18:07+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/6jygocRw2d","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":23,"RawContent":null},{"Id":"1004017778859347975","CreatedAt":"2018-06-05T15:11:06+00:00","UserScreenname":"xamarinhq","Text":"Adding geospatial calculations to your #Xamarin apps with #Azure #CosmosDB: https://t.co/acrN8gdJdS https://t.co/rS6ZWBVQDw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":44,"FavoriteCount":17,"RawContent":null},{"Id":"1003716129758629888","CreatedAt":"2018-06-04T19:12:28+00:00","UserScreenname":"xamarinhq","Text":"Introducing the https://t.co/3QxhuBuvHc Firebase Job Dispatcher—background scheduling for all Android devices: https://t.co/vZlLAkI925","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":16,"RawContent":null},{"Id":"1003656628120498176","CreatedAt":"2018-06-04T15:16:01+00:00","UserScreenname":"xamarinhq","Text":"In the first of our four-part series on debugging #Xamarin open source frameworks, learn how to build #XamarinForms… https://t.co/emYMS1KIra","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":24,"RawContent":null},{"Id":"1003397917103845376","CreatedAt":"2018-06-03T22:08:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to create cloud-connected mobile apps with #Xamarin and Microsoft #Azure: https://t.co/NK0m1MG9yM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":21,"RawContent":null},{"Id":"1003046627240751104","CreatedAt":"2018-06-02T22:52:06+00:00","UserScreenname":"xamarinhq","Text":"Learn how you can contribute to Xamarin.iOS and Xamarin.Mac—no code necessary! Get started: https://t.co/XU5OJkcXCt https://t.co/XoB2rKP2XT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":40,"RawContent":null},{"Id":"1002614995031592963","CreatedAt":"2018-06-01T18:16:57+00:00","UserScreenname":"xamarinhq","Text":"Find #Xamarin and/or #dotNET events near you this June: https://t.co/sJpR7Xk130 https://t.co/PT5WAD4JIx","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":21,"FavoriteCount":11,"RawContent":null},{"Id":"1002572478076645378","CreatedAt":"2018-06-01T15:28:00+00:00","UserScreenname":"xamarinhq","Text":"Add cloud storage to your #Xamarin apps with #Azure Blob Storage: https://t.co/xM3dAE2jRZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":29,"FavoriteCount":12,"RawContent":null},{"Id":"1002218901680377858","CreatedAt":"2018-05-31T16:03:01+00:00","UserScreenname":"xamarinhq","Text":"Add @TizenProject to your #XamarinForms apps: https://t.co/pom9Nki4vo https://t.co/I2dYlz1Tfo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":42,"FavoriteCount":29,"RawContent":null},{"Id":"1001900437233119234","CreatedAt":"2018-05-30T18:57:33+00:00","UserScreenname":"xamarinhq","Text":"We've got some great @XamarinU Guest Lectures coming up that you won't want to miss! Check them out, and make sure… https://t.co/REGhq5ZF12","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":17,"RawContent":null},{"Id":"1001568114855890945","CreatedAt":"2018-05-29T20:57:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to create simple Xamarin.iOS apps with #CoreML and Microsoft #Azure: https://t.co/poP0TGynlP https://t.co/UH3gpAFFHj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":73,"FavoriteCount":41,"RawContent":null},{"Id":"1000859470057132032","CreatedAt":"2018-05-27T22:01:07+00:00","UserScreenname":"xamarinhq","Text":"Extending #XamarinForms controls functionality with Behaviors: https://t.co/8arBeS4lBP https://t.co/iNmDBtF3zX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":18,"RawContent":null},{"Id":"1000408472083673089","CreatedAt":"2018-05-26T16:09:01+00:00","UserScreenname":"xamarinhq","Text":"Just push play—using Google Play on an Android Emulator: https://t.co/wl37sjNIjv https://t.co/t7b1GH4pMp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":10,"RawContent":null}]}},"RunOn":"2018-06-08T05:30:57.0755359Z","RunDurationInMilliseconds":4188}