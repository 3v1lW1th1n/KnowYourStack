{"Data":{"Blog":{"FeedItems":[{"Title":"Get started building .NET web apps that run in the browser with Blazor","PublishedOn":"2018-03-22T17:00:26+00:00","CommentsCount":17,"FacebookCount":0,"Summary":"Today we released our first public preview of Blazor, a new experimental .NET web framework using C#/Razor and HTML that runs in the browser with WebAssembly. Blazor enables full stack web development...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/get-started-building-net-web-apps-in-the-browser-with-blazor/","RawContent":null},{"Title":"ASP.NET Core manageability and Application Insights improvements","PublishedOn":"2018-03-22T14:12:38+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"There are many great investments on the ASP.NET Core 2.1 roadmap. These investments make ASP.NET Core applications easier to write, host, test, and make security and standards compliant. This blog...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/asp-net-core-manageability-and-application-insights-improvements/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-03-19T22:00:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/19/announcing-preview-1-of-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Functional testing of MVC applications","PublishedOn":"2018-03-05T18:30:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For ASP.NET Core 2.1 we have created a new package, Microsoft.AspNetCore.Mvc.Testing, to help streamline in-memory end-to-end testing of MVC applications using TestServer. This package takes care of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/05/asp-net-core-2-1-0-preview1-functional-testing-of-mvc-applications/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: GDPR enhancements","PublishedOn":"2018-03-04T19:21:40+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2018 sees the introduction of the General Data Protection Regulation, an EU framework to allow EU citizens to control, correct and delete their data, no matter where in the word it is held. In ASP.NET...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/04/asp-net-core-2-1-0-preview1-gdpr-enhancements/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing Identity UI as a library","PublishedOn":"2018-03-02T19:00:19+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"ASP.NET Core has historically provided project templates with code for setting up ASP.NET Core Identity, which enables support for identity related features like user registration, login, account...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/02/aspnetcore-2-1-identity-ui/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Razor UI in class libraries","PublishedOn":"2018-03-01T18:00:26+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"One frequently requested scenario that ASP.NET Core 2.1 improves is building UI in reusable class libraries. With ASP.NET Core 2.1 you can package your Razor views and pages (.cshtml files) along with...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/01/asp-net-core-2-1-razor-ui-in-class-libraries/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements to IIS hosting","PublishedOn":"2018-03-01T01:56:02+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"The ASP.NET Core Module (ANCM) is a global IIS module that has been responsible for proxying requests over from IIS to your backend ASP.NET Core application running Kestrel. Since 2.0 we have been...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-0-preview1-improvements-to-iis-hosting/","RawContent":null},{"Title":"ASP.NET Core 2.1-preview1: Introducing HTTPClient factory","PublishedOn":"2018-03-01T01:47:41+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"HttpClient factory is an opinionated factory for creating HttpClient instances to be used in your applications. It is designed to: Provide a central location for naming and configuring logical...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-preview1-introducing-httpclient-factory/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements for building Web APIs","PublishedOn":"2018-02-27T23:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"ASP.NET Core 2.1 adds a number of features that make it easier and more convenient to build Web APIs. These features include Web API controller specific conventions, more robust input processing and...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/27/asp-net-core-2-1-web-apis/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7456533244","Type":"IssuesEvent","CreatedAt":"2018-03-29T22:11:26","Actor":"blowdart","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2997","RelatedDescription":"Closed issue \"DataProtection - encryption with high-protected capi certificate\" (#2997) at aspnet/Home","RelatedBody":"I have a problem with DataProtection when is used together with `ProtectKeysWithCertificate` to protect the data at rest. If I create highProtected certificate with CryptoAPI, e.g. using `New-SelfSignedCertificate` powershell cmdlet\r\n\r\n```\r\nNew-SelfSignedCertificate `\r\n         -Subject localhost `\r\n         -DnsName localhost `\r\n         -FriendlyName \"ASP.NET Data Protection`\r\n         -NotBefore (Get-Date) `\r\n         -NotAfter (Get-Date).AddYears(10) `\r\n         -CertStoreLocation \"cert:CurrentUser\\My\" `\r\n         -KeyAlgorithm RSA `\r\n         -Provider \"Microsoft Enhanced RSA and AES Cryptographic Provider\" `\r\n         -KeyLength 2048 `\r\n         -KeyUsage KeyEncipherment, DataEncipherment `\r\n         -KeyProtection ProtectHigh\r\n```\r\n\r\nthen the certificate is protected with additional password. Windows will ask for it every time the application is started. It shows modal window like that (in Slovak lang):\r\n\r\n![image](https://user-images.githubusercontent.com/6164767/37865531-1f27fa18-2f7e-11e8-8fc1-ef794bfd3d60.png)\r\n\r\nIf I type correct password, everything is good. However, when I type wrong password for the first time, and then correct one, DataProtection generates new master key, whereas the old one is still active (not expired or revoked). The application don't start until the correct password to the cert is given, but it nevertheless uses newly-generated key. Is there any way how to suppress this behavior? If I use method `DisableAutomaticKeyGeneration`, it also disables the key rotation.\r\n\r\nBtw, the log printed to console every time the incorrect password is given:\r\n\r\n```\r\nfail: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[24]\r\n      An exception occurred while processing the key element '<key id=\"bc5319fd-63a4-45f2-b75e-1ef181f6ec19\" version=\"1\" />'.\r\nInternal.Cryptography.CryptoThrowHelper+WindowsCryptographicException: Access denied\r\n   at System.Security.Cryptography.RSACng.EncryptOrDecrypt(SafeNCryptKeyHandle key, Byte[] input, AsymmetricPaddingMode paddingMode, Void* paddingInfo, EncryptOrDecryptAction encryptOrDecrypt)\r\n   at System.Security.Cryptography.RSACng.EncryptOrDecrypt(Byte[] data, RSAEncryptionPadding padding, EncryptOrDecryptAction encryptOrDecrypt)\r\n   at System.Security.Cryptography.RSACng.Decrypt(Byte[] data, RSAEncryptionPadding padding)\r\n   at System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter.DecryptKeyExchange(Byte[] rgbIn)\r\n   at System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(Byte[] keyData, RSA rsa, Boolean useOAEP)\r\n   at System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(EncryptedKey encryptedKey)\r\n   at System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(EncryptedData encryptedData, String symmetricAlgorithmUri)\r\n   at System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument()\r\n   at Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlDecryptor.Decrypt(XElement encryptedElement)\r\n   at Microsoft.AspNetCore.DataProtection.XmlEncryption.XmlEncryptionExtensions.DecryptElement(XElement element, IActivator activator)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.DeserializeDescriptorFromKeyElement(XElement keyElement)\r\nwarn: Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver[12]\r\n      Key {bc5319fd-63a4-45f2-b75e-1ef181f6ec19} is ineligible to be the default key because its CreateEncryptor method failed.\r\nInternal.Cryptography.CryptoThrowHelper+WindowsCryptographicException: Access denied\r\n   at System.Security.Cryptography.RSACng.EncryptOrDecrypt(SafeNCryptKeyHandle key, Byte[] input, AsymmetricPaddingMode paddingMode, Void* paddingInfo, EncryptOrDecryptAction encryptOrDecrypt)\r\n   at System.Security.Cryptography.RSACng.EncryptOrDecrypt(Byte[] data, RSAEncryptionPadding padding, EncryptOrDecryptAction encryptOrDecrypt)\r\n   at System.Security.Cryptography.RSACng.Decrypt(Byte[] data, RSAEncryptionPadding padding)\r\n   at System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter.DecryptKeyExchange(Byte[] rgbIn)\r\n   at System.Security.Cryptography.Xml.EncryptedXml.DecryptKey(Byte[] keyData, RSA rsa, Boolean useOAEP)\r\n   at System.Security.Cryptography.Xml.EncryptedXml.DecryptEncryptedKey(EncryptedKey encryptedKey)\r\n   at System.Security.Cryptography.Xml.EncryptedXml.GetDecryptionKey(EncryptedData encryptedData, String symmetricAlgorithmUri)\r\n   at System.Security.Cryptography.Xml.EncryptedXml.DecryptDocument()\r\n   at Microsoft.AspNetCore.DataProtection.XmlEncryption.EncryptedXmlDecryptor.Decrypt(XElement encryptedElement)\r\n   at Microsoft.AspNetCore.DataProtection.XmlEncryption.XmlEncryptionExtensions.DecryptElement(XElement element, IActivator activator)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.IInternalXmlKeyManager.DeserializeDescriptorFromKeyElement(XElement keyElement)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.DeferredKey.<>c__DisplayClass1_0.<GetLazyDescriptorDelegate>b__0()\r\n   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)\r\n   at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\r\n   at System.Lazy`1.CreateValue()\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyBase.get_Descriptor()\r\n   at Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.CngGcmAuthenticatedEncryptorFactory.CreateEncryptorInstance(IKey key)\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyBase.CreateEncryptor()\r\n   at Microsoft.AspNetCore.DataProtection.KeyManagement.DefaultKeyResolver.CanCreateAuthenticatedEncryptor(IKey key)\r\n```\r\n"},{"Id":"7455627962","Type":"IssuesEvent","CreatedAt":"2018-03-29T18:56:53","Actor":"mkArtakMSFT","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2946","RelatedDescription":"Closed issue \"Travis-CI builds cannot connect to Test Platform on OS X\" (#2946) at aspnet/Home","RelatedBody":"Hello,\r\nI noticed that the Travis CI builds are failing after the last set of updates made automatically to dependencies.props.  I saw this issue in JsonPatch which I am using, but also saw it within the CORS project.  There may be others impacted as well.  I don't know where the CI process is managed or who has access.  Is there anybody with experience in CI who could help out.  \r\nThanks!"},{"Id":"7455137490","Type":"IssuesEvent","CreatedAt":"2018-03-29T17:07:27","Actor":"blowdart","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3008","RelatedDescription":"Closed issue \".EnterpriseLibrary.Data.Database  error when running mvc core application \" (#3008) at aspnet/Home","RelatedBody":"Hi, \r\nI get the following error when I use EnterpriseLibrary.Data.Database library in the class library that called for MVC core application, the logic worked fine with the old web project. \r\nAN EXCEPTION HAS OCCURRED  WITH ERRORCODE: Resolution of the dependency failed, type = \"Microsoft.Practices.EnterpriseLibrary.Data.Database\", name = \"Configuration\".\r\nException occurred while: while resolving.\r\nException is: InvalidOperationException - The type Database cannot be constructed. You must configure the container to supply this value."},{"Id":"7454913137","Type":"IssuesEvent","CreatedAt":"2018-03-29T16:22:57","Actor":"KTazayan","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3010","RelatedDescription":"Opened issue \"To use UseSpaStaticFiles, you must first register an ISpaStaticFileProvider in Azure Service Fabric\" (#3010) at aspnet/Home","RelatedBody":"I'm using the latest version of SPA templates: Microsoft.DotNet.Web.Spa.ProjectTemplates::2.0.0\r\nCreating Angular app by:\r\n\r\n>dotnet new angular\r\n\r\nand getting the following error when deploy it in Azure SF stateless service:\r\n\r\n`Unhealthy event: SourceId='System.RA', Property='ReplicaOpenStatus', HealthState='Warning', ConsiderWarningAsError=false.\r\nReplica had multiple failures during open on _Node1_0. API call: IStatelessServiceInstance.Open(); Error = System.InvalidOperationException (-2146233079)\r\nTo use UseSpaStaticFiles, you must first register an ISpaStaticFileProvider in the service provider, typically by calling services.AddSpaStaticFiles.\r\n   at Microsoft.Extensions.DependencyInjection.SpaStaticFilesExtensions.ShouldServeStaticFiles(IApplicationBuilder app, Boolean allowFallbackOnServingWebRootFiles, IFileProvider& fileProviderOrDefault)\r\n   at Microsoft.Extensions.DependencyInjection.SpaStaticFilesExtensions.UseSpaStaticFilesInternal(IApplicationBuilder app, StaticFileOptions staticFileOptions, Boolean allowFallbackOnServingWebRootFiles)\r\n   at AppApiGateway.Startup.Configure(IApplicationBuilder app, IHostingEnvironment env) in C:\\Users\\Yatajga\\Source\\Repos\\DistrTest\\src\\ServiceFabric\\AppApiGateway\\Startup.cs:line 68\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()\r\n   at AppApiGateway.AppApiGateway.<>c__DisplayClass1_0.b__1(String url, AspNetCoreCommunicationListener listener) in C:\\Users\\Yatajga\\Source\\Repos\\DistrTest\\src\\ServiceFabric\\AppApiGateway\\AppApiGateway.cs:line 44\r\n   at Microsoft.ServiceFabric.Services.Communication.AspNetCore.AspNetCoreCommunicationListener.OpenAsync(CancellationToken cancellationToken)\r\n   at Microsoft.ServiceFabric.Services.Runtime.StatelessServiceInstanceAdapter.d__19.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.ServiceFabric.Services.Runtime.StatelessServiceInstanceAdapter.d__13.MoveNext()\r\nFor more information see: http://aka.ms/sfhealth`\r\n\r\n`internal sealed class AppApiGateway : StatelessService\r\n    {\r\n        public AppApiGateway(StatelessServiceContext context)\r\n            : base(context)\r\n        { }\r\n\r\n        /// <summary>\r\n        /// Optional override to create listeners (like tcp, http) for this service instance.\r\n        /// </summary>\r\n        /// <returns>The collection of listeners.</returns>\r\n        protected override IEnumerable<ServiceInstanceListener> CreateServiceInstanceListeners()\r\n        {\r\n            return new ServiceInstanceListener[]\r\n            {\r\n                new ServiceInstanceListener(serviceContext =>\r\n                    new KestrelCommunicationListener(serviceContext, \"ServiceEndpoint\", (url, listener) =>\r\n                    {\r\n                        ServiceEventSource.Current.ServiceMessage(serviceContext, $\"Starting Kestrel on {url}\");\r\n\r\n                        // Read environment from config files\r\n                        var environment = FabricRuntime.GetActivationContext()?\r\n                            .GetConfigurationPackageObject(\"Config\")?\r\n                            .Settings.Sections[\"Environment\"]?\r\n                            .Parameters[\"ASPNETCORE_ENVIRONMENT\"]?.Value;\r\n\r\n                        return new WebHostBuilder()\r\n                            .UseKestrel()\r\n                            .ConfigureServices(\r\n                                services => services\r\n                                    .AddSingleton<StatelessServiceContext>(serviceContext))\r\n                            .UseContentRoot(Directory.GetCurrentDirectory())\r\n                            .UseStartup<Startup>()\r\n                            .UseEnvironment(environment)\r\n                            .UseServiceFabricIntegration(listener, ServiceFabricIntegrationOptions.None)\r\n                            .UseUrls(url)\r\n                            .Build();\r\n                    }))\r\n            };\r\n        }\r\n    }`\r\n`// This method gets called by the runtime. Use this method to add services to the container.\r\npublic IServiceProvider ConfigureServices(IServiceCollection services)\r\n{\r\n    services.AddSignalR();\r\n    services.AddMvc();\r\n\r\n    services.AddSingleton<IClusterClient>(sp =>\r\n    {\r\n        OrleansConfiguration.StartClientWithRetries(out var client);\r\n        return client;\r\n    });\r\n\r\n    var container = new ContainerBuilder();\r\n    container.Populate(services);\r\n\r\n    // In production, the Angular files will be served from this directory\r\n    services.AddSpaStaticFiles(configuration =>\r\n    {\r\n        configuration.RootPath = \"ClientApp/dist\";\r\n    });\r\n\r\n    return new AutofacServiceProvider(container.Build());\r\n}\r\n\r\n// This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\r\npublic void Configure(IApplicationBuilder app, IHostingEnvironment env)\r\n{\r\n    app.UseSignalR(routes =>\r\n    {\r\n        routes.MapHub<ProductMessageHub>(\"ProductMessageHub\");\r\n    });\r\n\r\n    if (env.IsDevelopment())\r\n    {\r\n        app.UseDeveloperExceptionPage();\r\n    }\r\n    else\r\n    {\r\n        app.UseExceptionHandler(\"/Home/Error\");\r\n    }\r\n\r\n    app.UseStaticFiles();\r\n    app.UseSpaStaticFiles();\r\n\r\n    app.UseMvc(routes =>\r\n    {\r\n        routes.MapRoute(\r\n            name: \"default\",\r\n            template: \"{controller}/{action=Index}/{id?}\");\r\n    });\r\n\r\n    app.UseSpa(spa =>\r\n    {\r\n        // To learn more about options for serving an Angular SPA from ASP.NET Core,\r\n        // see https://go.microsoft.com/fwlink/?linkid=864501\r\n\r\n        spa.Options.SourcePath = \"ClientApp\";\r\n\r\n        if (env.IsDevelopment())\r\n        {\r\n            spa.UseAngularCliServer(npmScript: \"start\");\r\n        }\r\n    });\r\n\r\n}\r\n`\r\n"},{"Id":"7454548443","Type":"IssuesEvent","CreatedAt":"2018-03-29T15:19:55","Actor":"livarcocc","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3009","RelatedDescription":"Opened issue \"request processing slows down on concurrent requests.\" (#3009) at aspnet/Home","RelatedBody":"_From @rkdrnfds on March 29, 2018 6:43_\n\nRequest handling extremely slows down on concurrent requests\r\n\r\n```\r\n[Route(\"Test\")]\r\npublic class TestController : Controller {\r\n        [HttpGet(\"DoNothingGet\")]\r\n        public void DoNothingGet() { }\r\n}\r\n```\r\nAgainst above controller, I tested concurrent request using shell script below \r\n```\r\nfor i in {1..50}\r\ndo\r\ncurl -X GET \"http://localhost:5000/Test/DoNothingGet\" -H \"Host: 127.0.0.1:5000\" -H \"X-Debug: true\" -H \"User-Agent: Terminal\" -d \"[0, 0]\" &\r\ndone\r\n```\r\n\r\nFor sequential request, there's almost no delay for processing requests. consuming about 1~5ms per request.\r\nbut For concurrent request, handling time varies from 100ms ~ 2000ms\r\n\r\nThere's light middleware attached for logging execution time.\r\n\r\n```\r\npublic class ProcessingTimeLoggingMiddleware\r\n    {\r\n        readonly RequestDelegate _next;\r\n        readonly ILogger<RequestLoggingMiddleware> _logger;\r\n\r\n        public ProcessingTimeLoggingMiddleware(\r\n            RequestDelegate next,\r\n            ILogger<RequestLoggingMiddleware> logger\r\n        )\r\n        {\r\n            _logger = logger;\r\n            _next = next;\r\n        }\r\n\r\n        public async Task Invoke(HttpContext context)\r\n        {\r\n            _logger.LogInformation(\"Start Middleware\");\r\n            var sw = Stopwatch.StartNew();\r\n\r\n            await _next.Invoke(context);\r\n\r\n            sw.Stop();\r\n\r\n            _logger.LogInformation(LoggingEvents.RequestProcessingTime,\r\n                \"Processing {Path} [{StatusCode}] took {ElapsedTime}ms.\",\r\n                context.Request.Path, context.Response.StatusCode, sw.ElapsedMilliseconds\r\n            );\r\n        }\r\n    }\r\n```\r\n\r\nBelow are collected logs for slow request. (one of 50 requests. others also have similar logs)\r\n\r\n```\r\nMarch 29th 2018, 15:50:20.286 Microsoft.AspNetCore.Hosting.Internal.WebHost \r\nRequest starting HTTP/1.1 GET http://127.0.0.1:5000/Test/DoNothingGet application/x-www-form-urlencoded 6\r\n\r\nMarch 29th 2018, 15:50:20.412 Server.Middlewares.RequestLoggingMiddleware \r\nStart Middleware\r\n\r\nMarch 29th 2018, 15:50:21.445 Server.Middlewares.RequestLoggingMiddleware \r\nProcessing /Test/DoNothingGet [200] took 830ms\r\n\r\nMarch 29th 2018, 15:50:22.439 Microsoft.AspNetCore.Hosting.Internal.WebHost \r\nRequest finished in 2166.119ms \r\n```\r\n\r\nI tried manipulating `ThreadPool.SetMinThreads` and `KestrelServerOptions.Limits.MaxConcurrentConnection` but nothing had any effect.\r\n\r\n## Environment data\r\n```\r\n<PackageReference Include=\"Microsoft.AspNetCore.Hosting\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.1.0-preview1-final\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Owin\" Version=\"2.0.0\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Server.Kestrel\" Version=\"2.0.0\" />\r\n\r\nProduct Information:\r\n Version:            2.1.4\r\n Commit SHA-1 hash:  5e8add2190\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.13\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.1.4/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.5\r\n  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n_Copied from original issue: dotnet/cli#8930_"},{"Id":"7454231919","Type":"IssuesEvent","CreatedAt":"2018-03-29T14:28:55","Actor":"WaedSaleh","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3008","RelatedDescription":"Opened issue \".EnterpriseLibrary.Data.Database  error when running mvc core application \" (#3008) at aspnet/Home","RelatedBody":"Hi, \r\nI get the following error when I use EnterpriseLibrary.Data.Database library in the class library that called for MVC core application, the logic worked fine with the old web project. \r\nAN EXCEPTION HAS OCCURRED  WITH ERRORCODE: Resolution of the dependency failed, type = \"Microsoft.Practices.EnterpriseLibrary.Data.Database\", name = \"Configuration\".\r\nException occurred while: while resolving.\r\nException is: InvalidOperationException - The type Database cannot be constructed. You must configure the container to supply this value."}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7457402568","Type":"PullRequestEvent","CreatedAt":"2018-03-30T04:05:18","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1777","RelatedDescription":"Opened pull request \"Bedrock Renames\" (#1777) at aspnet/SignalR","RelatedBody":"![https://media.giphy.com/media/DDanDHkDABbcQ/giphy.gif](https://media.giphy.com/media/DDanDHkDABbcQ/giphy.gif)\r\n\r\nFixes #1669 \r\n\r\nLots of changes here. A summary:\r\n\r\n* `Microsoft.AspNetCore.Sockets.Http` -> `Microsoft.AspNetCore.Http.Connections`\r\n* `Microsoft.AspNetCore.Sockets.Client` -> `Microsoft.AspNetCore.Http.Connections.Client`\r\n* `Microsoft.AspNetCore.Sockets.Common` -> `Microsoft.AspNetCore.Http.Connections.Common`\r\n* `SocketsSample` -> `SignalRSamples`\r\n* Make `ServerSentEventsParser` `internal` because a) I had to move it to the right folder path to fix the namespace and b) it's only used by tests\r\n\r\nTODO:\r\n* [ ] Some final find-replace passes for \"Sockets\" (it's a little tricky because of WebSockets ;))\r\n* [ ] @davidfowl I can grab your Kestrel change tomorrow morning and yank Sockets.Abstractions."},{"Id":"7457317032","Type":"PullRequestEvent","CreatedAt":"2018-03-30T03:25:14","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1776","RelatedDescription":"Merged pull request \"Client logging fixes and improvements (#1773)\" (#1776) at aspnet/SignalR","RelatedBody":""},{"Id":"7457316560","Type":"PullRequestEvent","CreatedAt":"2018-03-30T03:25:01","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1776","RelatedDescription":"Opened pull request \"Client logging fixes and improvements (#1773)\" (#1776) at aspnet/SignalR","RelatedBody":""},{"Id":"7457315748","Type":"PullRequestEvent","CreatedAt":"2018-03-30T03:24:39","Actor":"JamesNK","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1773","RelatedDescription":"Merged pull request \"Client logging fixes and improvements\" (#1773) at aspnet/SignalR","RelatedBody":""},{"Id":"7456787119","Type":"PullRequestEvent","CreatedAt":"2018-03-29T23:35:55","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1775","RelatedDescription":"Merged pull request \"Fix internal HubConnection state when handshake fails (#1774)\" (#1775) at aspnet/SignalR","RelatedBody":""},{"Id":"7456786723","Type":"PullRequestEvent","CreatedAt":"2018-03-29T23:35:45","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1775","RelatedDescription":"Opened pull request \"Fix internal HubConnection state when handshake fails (#1774)\" (#1775) at aspnet/SignalR","RelatedBody":""}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7457457717","Type":"IssuesEvent","CreatedAt":"2018-03-30T04:35:08","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7503","RelatedDescription":"Closed issue \"When validating IValidatableObject, ModelState has non-empty string key\" (#7503) at aspnet/Mvc","RelatedBody":"Hello,\r\n\r\nMy view model:\r\n\r\n```c#\r\npublic class SearchViewModel : IValidatableObject\r\n{\r\n    // ... some properties with DataAnnotations ...\r\n\r\n    public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)\r\n    {\r\n        yield return new ValidationResult(\"My object-level error\");\r\n    }\r\n}\r\n```\r\n\r\nMy Controller action:\r\n\r\n```c#\r\n// The POST comes from a standard form in cshtml\r\n[HttpPost]\r\npublic IActionResult Search(SearchViewModel viewModel)\r\n{\r\n    if (!ModelState.IsValid)\r\n        return View(viewModel);\r\n\r\n    return Content(\"OK\");\r\n}\r\n```\r\n\r\n**Problem:**\r\nInside the controller action, `ModelState` has 1 error (as expected), but that error is with a key `\"viewModel\"` (the same as action parameter name), instead of `\"\"` (empty string). This results in validation summary div not rendering at all in ModelOnly mode.\r\n\r\nThe problem is present when using ASP.NET Core MVC 2.1.0-preview1-final. The same code on version 2.0.6 works correctly (inserts an empty string to ModelState)."},{"Id":"7457457621","Type":"PullRequestEvent","CreatedAt":"2018-03-30T04:35:05","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7573","RelatedDescription":"Merged pull request \" Fix #7503 change to model name for IValidableObject \" (#7573) at aspnet/Mvc","RelatedBody":""},{"Id":"7457441334","Type":"PullRequestEvent","CreatedAt":"2018-03-30T04:26:18","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7575","RelatedDescription":"Merged pull request \"Add an analyzer to warn against the use of IHtmlHelper.Partial and IH…\" (#7575) at aspnet/Mvc","RelatedBody":"…tmlHelper.RenderPartial\r\n\r\nFixes https://github.com/aspnet/Mvc/issues/7417"},{"Id":"7457441329","Type":"IssuesEvent","CreatedAt":"2018-03-30T04:26:18","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7417","RelatedDescription":"Closed issue \"Create a new Analyzer to warn users from using `Html.Partial`\" (#7417) at aspnet/Mvc","RelatedBody":""},{"Id":"7457440981","Type":"PullRequestEvent","CreatedAt":"2018-03-30T04:26:09","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7575","RelatedDescription":"Opened pull request \"Add an analyzer to warn against the use of IHtmlHelper.Partial and IH…\" (#7575) at aspnet/Mvc","RelatedBody":"…tmlHelper.RenderPartial\r\n\r\nFixes https://github.com/aspnet/Mvc/issues/7417"},{"Id":"7457440622","Type":"PullRequestEvent","CreatedAt":"2018-03-30T04:25:55","Actor":"pranavkm","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7574","RelatedDescription":"Merged pull request \"Add an analyzer to warn against the use of IHtmlHelper.Partial and IH…\" (#7574) at aspnet/Mvc","RelatedBody":"…tmlHelper.RenderPartial\r\n\r\nFixes https://github.com/aspnet/Mvc/issues/7417"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7457329896","Type":"IssuesEvent","CreatedAt":"2018-03-30T03:31:01","Actor":"thegodliek","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1723","RelatedDescription":"Opened issue \"The ability to use different types for the Users table's pk and the roles table pk\" (#1723) at aspnet/Identity","RelatedBody":"As per this SO question:\r\n\r\n[https://stackoverflow.com/questions/49567477/](https://stackoverflow.com/questions/49567477/)\r\n\r\nWe cannot use different types for the primary keys in the users table and the roles table.\r\nThis can cause some limitations for people like me if for example wanted to use int for the Users key and enum for the Roles key."},{"Id":"7456799400","Type":"IssuesEvent","CreatedAt":"2018-03-29T23:40:41","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1722","RelatedDescription":"Opened issue \"Simplify using a custom TUser with DefaultUI\" (#1722) at aspnet/Identity","RelatedBody":"This came up as a part of investigating the fix to https://github.com/aspnet/Identity/issues/1679\r\n\r\nToday to add additional basic data to a custom user requires:\r\n- overriding the Register/Manage pages, see https://github.com/aspnet/Identity/tree/dev/samples/IdentitySample.DefaultUI/Areas/Identity/Pages/Account, to hand craft the InputModel and update the actions.\r\n\r\n```\r\n   public class MyUser : IdentityUser {\r\n       public string Name { get; set; }\r\n       public int Age { get; set; }\r\n   }\r\n```\r\n\r\nI think we can simplify this to only needing to define only the additional properties + the corresponding input model if we add a basic mechanism for generating the appropriate inputs and introduce a new abstraction in the UI package around updating/creating the actual TUser:\r\n\r\n```C#\r\n   public class MyUser : IdentityUser {\r\n       public string Name { get; set; }\r\n       public int Age { get; set; }\r\n   }\r\n\r\n   public class MyUserInputModel : RegisterInputModel, ManageInputModel {\r\n            [Required]\r\n            [DataType(DataType.Text)]\r\n            [Display(Name = \"Full name\")]\r\n            public string Name { get; set; }\r\n\r\n            [Required]\r\n            [Range(0,199, ErrorMessage = \"Age must be between 0 and 199 years\")]\r\n            [Display(Name = \"Age\")]\r\n            public int Age { get; set; }\r\n   }\r\n\r\n   public interface IUserFactory<TUser> {\r\n       TUser Create(IUserData data); // Register calls this to create a new user\r\n       void Update(TUser user, IUserData data); // Manage uses this to update the user\r\n   }\r\n\r\n   // We would provide a default implementation of this that uses reflection to work against properties, only users with truly custom POCOs would need to implement this.\r\n\r\n    // We can add a way to generate the Register/Manage.cshtml inputs from the input models, like IInputGenerator.Generate(InputModel) to generate the form groups and give the ability to customize:\r\n            <div class=\"form-group\">\r\n                <label asp-for=\"Input.Name\"></label>\r\n                <input asp-for=\"Input.Name\" class=\"form-control\" />\r\n                <span asp-validation-for=\"Input.Name\" class=\"text-danger\"></span>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label asp-for=\"Input.Age\"></label>\r\n                <input asp-for=\"Input.Age\" class=\"form-control\" />\r\n                <span asp-validation-for=\"Input.Age\" class=\"text-danger\"></span>\r\n            </div>\r\n```\r\n"},{"Id":"7456228971","Type":"IssuesEvent","CreatedAt":"2018-03-29T21:14:21","Actor":"pranavkm","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1673","RelatedDescription":"Closed issue \"Compiled Razor views won't override default UI\" (#1673) at aspnet/Identity","RelatedBody":"I wonder if it is by design. \r\n\r\nI'm trying out [Identity UI as a library](https://blogs.msdn.microsoft.com/webdev/2018/03/02/aspnetcore-2-1-identity-ui/). \r\n\r\nIt works fine unless I want to add some customization. Instead of scaffolding, I'm using `AddDefaultUI()` and then handpicking which views to override within my app. If I override, for instance, by adding a new file in my app `Areas/Identity/Pages/Account/Register.cshtml`, it will work fine when running/debugging locally. \r\n\r\nHowever, I noticed that when the app published, the override won't work - it will display views that comes from `AddDefaultUI()`. I made sure that the `<Something>.PrecompiledViews.dll` is generated and contains my app's views. If I opt out to precompiled views by adding `<MvcRazorCompileOnPublish>false</MvcRazorCompileOnPublish>` in `csproj` the overrides starts working."},{"Id":"7455806474","Type":"IssuesEvent","CreatedAt":"2018-03-29T19:38:09","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1524","RelatedDescription":"Closed issue \"How to customize GenerateUserTokenAsync token lifespan? What about brute-force protection? \" (#1524) at aspnet/Identity","RelatedBody":"I'm using `GenerateUserTokenAsync` and `VerifyUserTokenAsync` with `provider=\"Email\"`. How can I customize token expiry so tokens last longer/shorter before they aren't valid?\r\n\r\nAdditionally, how would you implement token lockout to prevent someone from brute-forcing the token? With `provider=\"Email\"`, the tokens are just 6 digits which should be easy to brute-force (<1 million possibilities, ~11 minutes on a core i3 laptop)."},{"Id":"7455804364","Type":"IssuesEvent","CreatedAt":"2018-03-29T19:37:20","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1539","RelatedDescription":"Closed issue \"How can I make the Identity working correctly thought a reverse proxy server?\" (#1539) at aspnet/Identity","RelatedBody":"I run a demo MVC project which using ASP.NET Identity under a private network (192.168.200.1). And I setup a reverse proxy server (192.168.200.201) to visit it.\r\n\r\nI use IIS 6.1 with Application Request Routing (ARR) 2.5 as the reverse proxy server.\r\n\r\nIn the Identity library, the default LoginPath is **\"/Account/Login\"**. I don't change it, but when I visit some Actions which need Authorized in **192.168.200.201**, it always redirect to **\"192.168.200.1/Account/Login\"**. It's going wrong! The correct redirect address is **\"192.168.200.201/Account/Login\"**.\r\n\r\nWhat's wrong with it? I look forward to your reply. Thank you!\r\n\r\n"},{"Id":"7455730661","Type":"IssuesEvent","CreatedAt":"2018-03-29T19:19:40","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1677","RelatedDescription":"Closed issue \"Support Async password hashers\" (#1677) at aspnet/Identity","RelatedBody":"The latest set of hashing algorithms ( like Argon2 ) feature work, memory and parallelism hardness.  \r\n\r\nThe C# / .NET Core implementation of Argon2 hashing is Task based, but the IPasswordHasher interface isn't.\r\n\r\nAny plans on making the IPasswordHasher async ?  I know this would be a breaking change"},{"Id":"7455728427","Type":"IssuesEvent","CreatedAt":"2018-03-29T19:19:08","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1682","RelatedDescription":"Closed issue \"Allow specifying the default authorization scheme on a controller action without the authorize attribute\" (#1682) at aspnet/Identity","RelatedBody":"This would be useful in the situation where I have some api controllers hosted within an MVC app that already uses a default cookies authorization scheme. In this scenario, the api controllers would use a JWT Bearer token for auth rather than the default cookie scheme used by the rest of the web app.\r\n\r\nNormally the way to do this would be to decorate the controller or action with [Authorize(AuthenticationSchemes=\"Bearer\")]. \r\nHowever, say I wish to allow anonymous requests to the api action method and return a specific result based on User.Identity.IsAuthenticated as in the example below. \r\n\r\n\r\n```\r\n[HttpGet(\"\")]\r\npublic IActionResult GetApiAction(){\r\n    if(User.Identity.IsAuthenticated){\r\n        // result for authenticated users\r\n        return Ok(...);\r\n    }else{\r\n        // result for unauthenticated users\r\n        return Ok(...);\r\n    }\r\n} \r\n```\r\n\r\nIn this scenario, the authentication scheme cannot be applied to the controller action anymore and it defaults back to cookie auth rather than populating the UserPrincipal when a valid JWT token is supplied in the request.\r\n\r\nI feel it would be more flexible to allow the scheme to be added via its own attribute similar to [AuthenticationSchemes(Schemes=\"...\")] rather than being coupled to the [Authorize] attribute directly."},{"Id":"7455718619","Type":"IssuesEvent","CreatedAt":"2018-03-29T19:17:44","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1721","RelatedDescription":"Opened issue \"Consider option to treat email as the username\" (#1721) at aspnet/Identity","RelatedBody":"And automatically keep in sync. We got so many issues because the templates conflate the two in a poor way, and the mirroring of this is manual and patchy."},{"Id":"7455615839","Type":"IssuesEvent","CreatedAt":"2018-03-29T18:53:40","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1716","RelatedDescription":"Closed issue \"Token based authentication in ASP.NET Core\" (#1716) at aspnet/Identity","RelatedBody":"_From @aswanevelder on March 28, 2018 18:58_\n\nIs it possible to build in the ability to generate tokens for APIs as is done in standard ASP.NET? There are plenty of examples online of building a JWT Authentication middleware but it will be greatly appreciated if this is just standard included.\n\n_Copied from original issue: aspnet/Mvc#7567_"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7457351751","Type":"IssuesEvent","CreatedAt":"2018-03-30T03:41:08","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2440","RelatedDescription":"Closed issue \"Make Kestrel TryAdd when adding it's IServer implementation\" (#2440) at aspnet/KestrelHttpServer","RelatedBody":"For ANCM in-proc to work with scenarios like:\r\n```c#\r\nWebHostBuilder.CreateDefaultWebHostBuilder() // which calls UseKestrel() and UseIISIntegration();\r\n    .UseKestrel();\r\n```\r\nwe need the call to UseIISIntegration to always add it's IServer implementation rather than Kestrel overriding it. \r\n\r\nAs we want out-of-proc and in-proc to work without code changes, we will need [Kestrel to TryAdd it's server implementation](https://github.com/aspnet/KestrelHttpServer/blob/dev/src/Kestrel/WebHostBuilderKestrelExtensions.cs#L35).\r\n\r\ncc/ @davidfowl @pakrym @Tratcher "},{"Id":"7457322832","Type":"PullRequestEvent","CreatedAt":"2018-03-30T03:27:55","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2442","RelatedDescription":"Merged pull request \"Prepare to 0 byte flush change\" (#2442) at aspnet/KestrelHttpServer","RelatedBody":""},{"Id":"7456663136","Type":"PullRequestEvent","CreatedAt":"2018-03-29T22:52:01","Actor":"davidfowl","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2444","RelatedDescription":"Opened pull request \"Add IConnection to Connections.Abstractions\" (#2444) at aspnet/KestrelHttpServer","RelatedBody":"The end goal for 2.1 will be to merge `IConnection` and `ConnectionContext`, in the short term, we want to move this to a shipping assembly so that we can delete sockets.abstractions."},{"Id":"7456589836","Type":"IssuesEvent","CreatedAt":"2018-03-29T22:27:57","Actor":"CoderJason123","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2443","RelatedDescription":"Closed issue \"302 redirect on apache loses https, returns as http\" (#2443) at aspnet/KestrelHttpServer","RelatedBody":"Hello.  I've spent some time trying to narrow this down a bit more, but here is what I have.\r\n\r\nI am using aspnet core 2.0 on apache (all the latest versions) on ubuntu 16.04.  After my cookie times out or if I manually delete my auth cookie from the browser, and make an ajax call, the 302 is issued, as it should be.\r\n\r\nHowever, my connection starts as https.  The redirect is returned as http, not https.  Then of course things go downhill after that.  \r\n\r\nI have followed the instructions at\r\n[https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/linux-apache?tabs=aspnetcore2x](url)\r\n\r\nNotes:\r\nI am using aspnet core identity module as well.  If you strongly feel this is not a kestrel issue, I will post this on their GitHub issue list.  So my SSL cert is handled thru apache and I'm running kestrel on the default port."},{"Id":"7456519121","Type":"IssuesEvent","CreatedAt":"2018-03-29T22:07:35","Actor":"CoderJason123","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2443","RelatedDescription":"Reopened issue \"302 redirect on apache loses https, returns as http\" (#2443) at aspnet/KestrelHttpServer","RelatedBody":"Hello.  I've spent some time trying to narrow this down a bit more, but here is what I have.\r\n\r\nI am using aspnet core 2.0 on apache (all the latest versions) on ubuntu 16.04.  After my cookie times out or if I manually delete my auth cookie from the browser, and make an ajax call, the 302 is issued, as it should be.\r\n\r\nHowever, my connection starts as https.  The redirect is returned as http, not https.  Then of course things go downhill after that.  \r\n\r\nI have followed the instructions at\r\n[https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/linux-apache?tabs=aspnetcore2x](url)\r\n\r\nNotes:\r\nI am using aspnet core identity module as well.  If you strongly feel this is not a kestrel issue, I will post this on their GitHub issue list.  So my SSL cert is handled thru apache and I'm running kestrel on the default port."},{"Id":"7456513802","Type":"IssuesEvent","CreatedAt":"2018-03-29T22:06:04","Actor":"CoderJason123","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2443","RelatedDescription":"Closed issue \"302 redirect on apache loses https, returns as http\" (#2443) at aspnet/KestrelHttpServer","RelatedBody":"Hello.  I've spent some time trying to narrow this down a bit more, but here is what I have.\r\n\r\nI am using aspnet core 2.0 on apache (all the latest versions) on ubuntu 16.04.  After my cookie times out or if I manually delete my auth cookie from the browser, and make an ajax call, the 302 is issued, as it should be.\r\n\r\nHowever, my connection starts as https.  The redirect is returned as http, not https.  Then of course things go downhill after that.  \r\n\r\nI have followed the instructions at\r\n[https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/linux-apache?tabs=aspnetcore2x](url)\r\n\r\nNotes:\r\nI am using aspnet core identity module as well.  If you strongly feel this is not a kestrel issue, I will post this on their GitHub issue list.  So my SSL cert is handled thru apache and I'm running kestrel on the default port."},{"Id":"7456485053","Type":"IssuesEvent","CreatedAt":"2018-03-29T21:59:05","Actor":"CoderJason123","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2443","RelatedDescription":"Opened issue \"302 redirect on apache loses https, returns as http\" (#2443) at aspnet/KestrelHttpServer","RelatedBody":"Hello.  I've spent some time trying to narrow this down a bit more, but here is what I have.\r\n\r\nI am using aspnet core 2.0 on apache (all the latest versions) on ubuntu 16.04.  After my cookie times out or if I manually delete my auth cookie from the browser, and make an ajax call, the 302 is issued, as it should be.\r\n\r\nHowever, my connection starts as https.  The redirect is returned as http, not https.  Then of course things go downhill after that.  \r\n\r\nI have followed the instructions at\r\n[https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/linux-apache?tabs=aspnetcore2x](url)\r\n\r\nNotes:\r\nI am using aspnet core identity module as well.  If you strongly feel this is not a kestrel issue, I will post this on their GitHub issue list.  So my SSL cert is handled thru apache and I'm running kestrel on the default port."},{"Id":"7456006472","Type":"PullRequestEvent","CreatedAt":"2018-03-29T20:24:35","Actor":"pakrym","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2442","RelatedDescription":"Opened pull request \"Prepare to 0 byte flush change\" (#2442) at aspnet/KestrelHttpServer","RelatedBody":""}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7456810989","Type":"IssuesEvent","CreatedAt":"2018-03-29T23:45:26","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2230","RelatedDescription":"Closed issue \"Shutdown command needs to compute the correct default pipe name\" (#2230) at aspnet/Razor","RelatedBody":"We recently changed the server to be created using the pipe name computed from the path to `rzc.dll` https://github.com/aspnet/Razor/issues/2216. But when the shutdown command is directly invoked, we don't pass in the tool assembly path [here](https://github.com/aspnet/Razor/blob/dev/src/Microsoft.AspNetCore.Razor.Tools/ShutdownCommand.cs#L30). It should instead pass in the tool assembly path to `ComputeDefault()`.\r\n\r\ncc @rynowak "},{"Id":"7456398269","Type":"PullRequestEvent","CreatedAt":"2018-03-29T21:44:52","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/2232","RelatedDescription":"Merged pull request \"Normalize the tool assembly path before using it as the base for pipe…\" (#2232) at aspnet/Razor","RelatedBody":"… name\r\n\r\n#2230 \r\n\r\nThe actual reason for this bug was the tool assembly path that MsBuild passes in looks like\r\n`C:\\Users\\ajbaaska\\.nuget\\packages\\microsoft.aspnetcore.razor.design\\2.1.0-preview2-t000\\build\\netstandard2.0\\..\\..\\tools\\rzc.dll`\r\n\r\nbut the shutdown command uses the path\r\n`C:\\Users\\ajbaaska\\.nuget\\packages\\microsoft.aspnetcore.razor.design\\2.1.0-preview2-t000\\build\\netstandard2.0\\tools\\rzc.dll`\r\n\r\nNotice the lack of `\\build\\netstandard2.0\\..\\..\\`\r\n\r\nSo calling `Path.GetFullPath` before using this to compute pipe name fixes the problem.\r\n\r\nAdded a test"},{"Id":"7455835879","Type":"PullRequestEvent","CreatedAt":"2018-03-29T19:44:58","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2232","RelatedDescription":"Opened pull request \"Normalize the tool assembly path before using it as the base for pipe…\" (#2232) at aspnet/Razor","RelatedBody":"… name\r\n\r\n#2230 \r\n\r\nThe actual reason for this bug was the tool assembly path that MsBuild passes in looks like\r\n`C:\\Users\\ajbaaska\\.nuget\\packages\\microsoft.aspnetcore.razor.design\\2.1.0-preview2-t000\\build\\netstandard2.0\\..\\..\\tools\\rzc.dll`\r\n\r\nbut the shutdown command uses the path\r\n`C:\\Users\\ajbaaska\\.nuget\\packages\\microsoft.aspnetcore.razor.design\\2.1.0-preview2-t000\\build\\netstandard2.0\\tools\\rzc.dll`\r\n\r\nNotice the lack of `\\build\\netstandard2.0\\..\\..\\`\r\n\r\nSo calling `Path.GetFullPath` before using this to compute pipe name fixes the problem.\r\n\r\nAdded a test"},{"Id":"7455342054","Type":"IssuesEvent","CreatedAt":"2018-03-29T17:49:46","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/2231","RelatedDescription":"Closed issue \"Abstract DocumentTracker lifecycle from directly depending on ITextViews\" (#2231) at aspnet/Razor","RelatedBody":"Today our document trackers live and die based off of having an ITextView associated with them.  We need to be able to work in an invisible editor world (live share) which does not have any associated text views."},{"Id":"7455198982","Type":"IssuesEvent","CreatedAt":"2018-03-29T17:20:28","Actor":"NTaylorMullen","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/2231","RelatedDescription":"Opened issue \"Abstract DocumentTracker lifecycle from directly depending on ITextViews\" (#2231) at aspnet/Razor","RelatedBody":"Today our document trackers live and die based off of having an ITextView associated with them.  We need to be able to work in an invisible editor world (live share) which does not have any associated text views."},{"Id":"7451537263","Type":"IssuesEvent","CreatedAt":"2018-03-29T03:34:15","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1809","RelatedDescription":"Closed issue \"Improve support for precompilation of razor views in class libraries (embedded ui)\" (#1809) at aspnet/Razor","RelatedBody":"_From @evil-shrike on October 17, 2017 15:31_\n\nAs continue of https://github.com/aspnet/MvcPrecompilation/issues/187\r\n\r\nThe problem: I need a class library with embedded UI. \r\nCurrently it's hard implement such setup when a class library in a solution contains pre-compilable razor views. Lloading views from embedded resource is another option and it works fine. \r\n\r\nAt the end of the mentioned discussion (#187) there was posted a link to blog post about how to implement embedded UI - https://dzone.com/articles/self-contained-ui-running-one-aspnet-core-mvc-site \r\nIt seems to work well. But looks hacky, too much cleaver things should be done in csproj. Another problem it's not documented in official docs.\r\n\r\nSo this issue is an suggestion to have more simplified approach for \"embedded UI\", i.e. keeping razor views in class libraries and automatically compile **and** deploy them.\r\n\r\nSome nuances which should be elaborated:\r\n* a solution with app and lib both can contain views and identical routes (like \"Home/Index\")\r\n* solution should start with F5/CtrlF5 in VS (views should be compiled and deploy)\r\n* on deployment assemblies with pre-compiled views should be deployed correctly\r\n* ideally there shouldn't be required to make a library project \"runnable\" (set `Sdk=\"Microsoft.NET.Sdk.Web\"` and declare `static Main` method) but it's not critical indeed, at least it should be documented\r\n\r\nCurrently (aspnetcore2.0) we have to do the following (thanks to @dasMulli for describing it in this comment - https://github.com/aspnet/MVCPrecompilation/issues/71#issuecomment-282494937)\r\n\r\n1.\r\n```\r\n\t\t<MvcRazorCompileOnPublish>true</MvcRazorCompileOnPublish>\r\n```\r\n2. \r\n```\r\n\t<Target Name=\"SetMvcRazorOutputPath\">\r\n\t\t<PropertyGroup>\r\n\t\t\t<MvcRazorOutputPath>$(OutputPath)</MvcRazorOutputPath>\r\n\t\t</PropertyGroup>\r\n\t</Target>\r\n\t<Target Name=\"_MvcRazorPrecompileOnBuild\" DependsOnTargets=\"SetMvcRazorOutputPath;MvcRazorPrecompile\" AfterTargets=\"Build\" Condition=\" '$(IsCrossTargetingBuild)' != 'true' \" />\r\n\t<Target Name=\"IncludePrecompiledViewsInPublishOutput\" DependsOnTargets=\"_MvcRazorPrecompileOnBuild\" BeforeTargets=\"PrepareForPublish\" Condition=\" '$(IsCrossTargetingBuild)' != 'true' \">\r\n\t\t<ItemGroup>\r\n\t\t\t<_PrecompiledViewsOutput Include=\"$(MvcRazorOutputPath)$(MSBuildProjectName).PrecompiledViews.dll\" />\r\n\t\t\t<_PrecompiledViewsOutput Include=\"$(MvcRazorOutputPath)$(MSBuildProjectName).PrecompiledViews.pdb\" />\r\n\t\t\t<ContentWithTargetPath Include=\"@(_PrecompiledViewsOutput->'%(FullPath)')\" RelativePath=\"%(_PrecompiledViewsOutput.Identity)\" TargetPath=\"%(_PrecompiledViewsOutput.Filename)%(_PrecompiledViewsOutput.Extension)\" CopyToPublishDirectory=\"PreserveNewest\" />\r\n\t\t</ItemGroup>\r\n\t</Target>\r\n```\r\n\r\nOff the top of my head I'd suggest to introduce `MvcRazorCompile=true`.\n\n_Copied from original issue: aspnet/MvcPrecompilation#214_"}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7439234583","Type":"IssuesEvent","CreatedAt":"2018-03-27T05:23:09","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7438189808","Type":"IssuesEvent","CreatedAt":"2018-03-26T23:00:08","Actor":"dvdobrovolskiy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Opened issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7416019717","Type":"IssuesEvent","CreatedAt":"2018-03-21T22:57:29","Actor":"snebjorn","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/823","RelatedDescription":"Closed issue \"Make tooling support splitting asp.net and bootstrapping in different projects (onion architecture)\" (#823) at aspnet/Tooling","RelatedBody":"I'd like to see better tooling support for a more onion architecture like solution structure.\n\nFor instance\n- Solution\n  - Core (business logic, domain model, etc)\n  - Infrastructure.EntityFramework (DAL)\n  - Presentation.ASPNET (MVC or WebApi)\n  - Bootstrapper (Program.cs and Startup.cs)\n\nSo basically I just moved Program.cs and Startup.cs to another project. This is important because according to the onion architecture Presentation.ASPNET should not have references to Entity Framework.\n\nIf I do this today I loose the \"IIS Express\" run button and I cannot publish via wed deploy in the way I'm used to. Plus a ton of other issues.\n\nWould be sweet if there was better support for this setup :)\n"},{"Id":"7381313128","Type":"IssuesEvent","CreatedAt":"2018-03-14T22:19:23","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/240","RelatedDescription":"Closed issue \"Support debugging of JS executed with EdgeJS in VS\" (#240) at aspnet/Tooling","RelatedBody":"We would like to do the server side HTML rendering with ReactJS in our ASP.NET application. This works with EdgeJS, but there is currently no way to debug the JS code in VS. \n\nIt would be nice if this would work and we wouldn't need node-inspector for this.\n\nhttps://github.com/tjanczuk/edge/issues/316\n"},{"Id":"7376247861","Type":"IssuesEvent","CreatedAt":"2018-03-14T05:33:19","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"},{"Id":"7372052889","Type":"IssuesEvent","CreatedAt":"2018-03-13T13:46:08","Actor":"TheConservativeCoder","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Opened issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"},{"Id":"7369868082","Type":"IssuesEvent","CreatedAt":"2018-03-13T05:33:42","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Closed issue \"Support dotnet watch in launchSettings.json\" (#1067) at aspnet/Tooling","RelatedBody":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine."},{"Id":"7364725434","Type":"IssuesEvent","CreatedAt":"2018-03-12T10:19:58","Actor":"RehanSaeed","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1067","RelatedDescription":"Opened issue \"Support dotnet watch in launchSettings.json\" (#1067) at aspnet/Tooling","RelatedBody":"I used to be able to use `dotnet watch` in Visual Studio by adding the following section to `launchSettings.json` and starting the project without debugging using CTRL + F5.\r\n\r\n```\r\n    \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    },\r\n```\r\n\r\nThis used to work in ASP.NET Core 1.1 but no longer does. According to https://github.com/aspnet/DotNetTools/issues/404 the new format for ASP.NET Core 2.0 is:\r\n\r\n```\r\n   \"Kestrel (dotnet watch run)\": {\r\n      \"commandName\": \"Executable\",\r\n      \"executablePath\": \"C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\",\r\n      \"commandLineArgs\": \"watch run\",\r\n      \"workingDirectory\": \"C:\\\\Users\\\\namc\\\\source\\\\repos\\\\WebApplication2\\\\WebApplication2\",\r\n      \"launchBrowser\": true,\r\n      \"launchUrl\": \"https://localhost:5001/\",\r\n      \"environmentVariables\": {\r\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\r\n      }\r\n    }\r\n```\r\n\r\nThe problem with this is the hard coded `executablePath` which is Windows specific and the `workingDirectory` which is specific to wherever I did a Git clone on my local machine."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7390961156","Type":"IssuesEvent","CreatedAt":"2018-03-16T14:09:54","Actor":"natemcmaster","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Closed issue \"Model binding accesses read-only properties in post-back\" (#297) at aspnet/Announcements","RelatedBody":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355."},{"Id":"7390872316","Type":"IssuesEvent","CreatedAt":"2018-03-16T13:54:05","Actor":"mnmr","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Opened issue \"Model binding accesses read-only properties in post-back\" (#297) at aspnet/Announcements","RelatedBody":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"978766397814710272","CreatedAt":"2018-03-27T22:51:08+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"978605317293576193","CreatedAt":"2018-03-27T12:11:03+00:00","UserScreenname":"aspnet","Text":"This will be a fun show that you won't want to miss if you're starting to lean #ASP.NET Core.  Jeff and Shayne are… https://t.co/MdzhQjXGY3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":47,"FavoriteCount":12,"RawContent":null},{"Id":"978387927041323008","CreatedAt":"2018-03-26T21:47:14+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":10,"RawContent":null},{"Id":"976910278083432449","CreatedAt":"2018-03-22T19:55:35+00:00","UserScreenname":"aspnet","Text":"Get started building .NET web apps in the browser with Blazor https://t.co/NLDaIe6hpY","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":158,"FavoriteCount":100,"RawContent":null},{"Id":"976141395114082304","CreatedAt":"2018-03-20T17:00:19+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\nThe #ASPNET Community Standup with @sshirhatti showing #aspnetcore 2.1 Improvements for IIS Hosting.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":10,"RawContent":null},{"Id":"975923268740833280","CreatedAt":"2018-03-20T02:33:33+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is on Tuesday at 10 AM  Pacific / 1800 GMT. @sshirhatti will be showing… https://t.co/qlOERhEOaw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":14,"RawContent":null},{"Id":"974312682647162880","CreatedAt":"2018-03-15T15:53:40+00:00","UserScreenname":"aspnet","Text":"Watch @csharpfritz and @shanselman in this recorded video from today's LiveStream about converting an application t… https://t.co/6QP4SCXJ3S","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":4,"RawContent":null},{"Id":"974274384792866817","CreatedAt":"2018-03-15T13:21:29+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz and @shanselman talking through an #ASP.NET upgrade at 10am ET / 7am PT / 14:00 UTC! https://t.co/vJe8zHT12j","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":3,"RawContent":null},{"Id":"973691520728510464","CreatedAt":"2018-03-13T22:45:23+00:00","UserScreenname":"aspnet","Text":"Starting now... join us for the weekly #ASPNET Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":12,"RawContent":null},{"Id":"973553523186159621","CreatedAt":"2018-03-13T13:37:02+00:00","UserScreenname":"aspnet","Text":"Today, Jeff shows you how to use dependency injection with web forms... check it out! https://t.co/viqZ28DBrV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":9,"RawContent":null},{"Id":"973350716046626816","CreatedAt":"2018-03-13T00:11:09+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null},{"Id":"972484011556818945","CreatedAt":"2018-03-10T14:47:10+00:00","UserScreenname":"aspnet","Text":"Be sure to check out Jeff's live coding stream this morning to see more about our #ASP.NET Core 2.1 preview release. https://t.co/EtKk0fMOgU","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":23,"FavoriteCount":10,"RawContent":null},{"Id":"971084152693866496","CreatedAt":"2018-03-06T18:04:38+00:00","UserScreenname":"aspnet","Text":"We are live at https://t.co/4Ioo9jNSN2 ! Join us!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"971075755168841728","CreatedAt":"2018-03-06T17:31:16+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup starts at 10 AM  Pacific / 1800 GMT. Ryan Nowak will be showing Web API 2.1 f… https://t.co/OW0zeYZPyq","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":10,"RawContent":null},{"Id":"970812132399890432","CreatedAt":"2018-03-06T00:03:43+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is a feature deep dive on Web API improvements in 2.1 with Ryan Nowak.\n\nTuesd… https://t.co/eKElaXNIR3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":36,"FavoriteCount":11,"RawContent":null},{"Id":"969671939106025473","CreatedAt":"2018-03-02T20:33:00+00:00","UserScreenname":"aspnet","Text":"Jon the Azure AD team for their first Office Hours call on March 8. https://t.co/kVYF9JWzeZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2018-03-30T05:30:09.4050593Z","RunDurationInMilliseconds":8094}