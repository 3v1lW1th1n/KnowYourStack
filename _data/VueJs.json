{"Data":{"Vue":{"Events":[{"Id":"6812380117","Type":"IssuesEvent","CreatedAt":"2017-11-06T02:41:31","Actor":"rigor789","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/7005","RelatedDescription":"Opened issue \"Create a package for building custom renderers\" (#7005) at vuejs/vue","RelatedBody":"### What problem does this feature solve?\r\nAs the author of nativescript-vue I had to set up a similar build setup as Vue's in order to be able to import certain parts of Vue directly into nativescript-vue. The main source of issues was the aliases used across the Vue repository (which do make sense btw!). \r\n\r\nTo solve that issue, I would love to have an official package for creating (and registering) custom renderers into Vue, which would enclose some most of the Vue specific logic of patching / hydrating etc.\r\n\r\nA good example of what I have in mind would be the react's package that does it: https://github.com/facebook/react/tree/master/packages/react-reconciler\r\n\r\nI would love to get some work done on this, but I'd work with the core team to make sure the best possible quality.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n```js\r\n// my custom renderer\r\n// for example: nativescript-vue.js\r\nimport VueRenderer from 'vue-renderer'\r\n\r\n// a class for creating native views in NativeScript\r\nimport ViewUtils from './ViewUtils.js'\r\n\r\nexport default new VueRenderer({\r\n  // Node operations\r\n  createElement(tagName) {},\r\n  createElementNS(namespace, tagName) {},\r\n  createTextNode(text) {},\r\n  createComment(text) {},\r\n  insertBefore(parentNode, newNode, referenceNode) {},\r\n  removeChild(node, child) {},\r\n  appendChild(node, child) {},\r\n  parentNode(node) {},\r\n  nextSibling(node) {},\r\n  tagName(node) {},\r\n  setTextContent(node, text) {},\r\n  setAttribute(node, attribute, value) {},\r\n\r\n  // Additional methods that need to be specified\r\n  // but for example:\r\n  createRoot() {} // this would get called to create the root element for the root Vue instance\r\n})\r\n```\r\n\r\n```js\r\n// then in userland we could just do\r\nimport Vue from 'vue'\r\nimport NativescriptVue from 'nativescript-vue'\r\n\r\nVue.use(NativescriptVue)\r\n\r\n\r\nnew Vue({\r\n  render(h) => h('label', { text: 'Hello World' })\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"6812394652","Type":"PullRequestEvent","CreatedAt":"2017-11-06T02:48:00","Actor":"fnlctrl","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vue-router/pull/1820","RelatedDescription":"Merged pull request \"[zh-cn] synced from #10b7de7 to #ef4a046\" (#1820) at vuejs/vue-router","RelatedBody":"ref: `/docs/en/*` parts of https://github.com/vuejs/vue-router/compare/10b7de7...ef4a046\r\n\r\n/ping @Justineo "},{"Id":"6809405629","Type":"IssuesEvent","CreatedAt":"2017-11-04T16:30:50","Actor":"jakesgordon","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1862","RelatedDescription":"Opened issue \"using addRoutes() when you already have a wildcard route fails to detect if the CURRENT url matches one of the new routes\" (#1862) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/c4jkw82o/5/](https://jsfiddle.net/c4jkw82o/5/)\r\n\r\n### Steps to reproduce\r\nThe JSFiddle shows the broken case.\r\n\r\nGiven an app/router that includes a wildcard '*' route, calling addRoutes() to dynamically add more routes does not correctly render the page if the CURRENT url matches one of the newly added routes.\r\n\r\nIf you comment out the wildcard '*' route and re-run then it works as expected.\r\n\r\n### What is expected?\r\nThe \"Test\" component should be rendered\r\n\r\n### What is actually happening?\r\nThe \"NotFound\" component is rendered\r\n\r\n---\r\nBACKGROUND...\r\n\r\nI am attempting to use webpack code splitting to keep all of my test related code in a different bundle, that includes vue components that are only used in the tests. I wanted to try to dynamically add my \"/test\" route from within this separate bundle and discovered that serving up that page showed my 404 not found component instead of my (top level) test component.\r\n\r\nDEBUGGING NOTES...\r\n\r\nFrom what I can tell, when the router is first constructed - in my main application.js bundle - it checks against the current URL \"/test\" and matches the wildcard route as $router.currentRoute. Later when the separate test.js bundle adds the new routes it checks again, this time it matches the new test route and tries to transition, but during confirmTransition() it decides that isSameRoute() is true (both matches had path=/test) and does not update.\r\n\r\n... after checking isSameRoute() there is actually a small attempt to see if the routes were dynamically changed...\r\n\r\n    // in the case the route map has been dynamically appended to\r\n    route.matched.length === current.matched.length\r\n\r\n.. but in this case this check also (incorrectly) returns true because while the length is the same (1) the details of route.matched[0] are different - current.matched is pointing to the wildcard route but route.matched is pointing to the new test route.\r\n\r\n\r\nP.S. THANK YOU FOR ALL YOUR WORK ON VUE - it is awesome!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6809229327","Type":"IssuesEvent","CreatedAt":"2017-11-04T14:35:00","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1861","RelatedDescription":"Closed issue \"Router document `Scroll Behavior - scroll to anchor` section\" (#1861) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/wxsm/pen/EbKXoz](https://codepen.io/wxsm/pen/EbKXoz)\r\n\r\n### Steps to reproduce\r\nUsing the document code:\r\n\r\n```javascript\r\nscrollBehavior (to, from, savedPosition) {\r\n  if (to.hash) {\r\n    return {\r\n      selector: to.hash\r\n      // , offset: { x: 0, y: 10 }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nto scroll between anchors such as '#1', '#2'\r\n\r\n### What is expected?\r\nscroll properly without error.\r\n\r\n### What is actually happening?\r\nscroll properly WITH error like:\r\n\r\nFail to execute 'querySelector': '#1' is not a valid selector.\r\n\r\nSee minimal reproduction link on codepen, click the `go to foo` link, then check console.\r\n\r\n---\r\nThis is because `querySelector` dose not support such id selector. There is a better way to do this:\r\n\r\n```javascript\r\nif (to.hash) {\r\n  return {\r\n    selector: `[id='${to.hash.slice(1)}']`\r\n  }\r\n}\r\n```\r\n\r\nThis will cause no error.\r\n\r\nI think the document should update to this for better helping people. I can PR this if needed. thanks.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"6812524379","Type":"PullRequestEvent","CreatedAt":"2017-11-06T03:43:10","Actor":"Jinjiang","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1046","RelatedDescription":"Opened pull request \"[en] added backquote for code in comments\" (#1046) at vuejs/vuex","RelatedBody":"a small fix"},{"Id":"6810698588","Type":"PullRequestEvent","CreatedAt":"2017-11-05T09:47:07","Actor":"Jinjiang","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1045","RelatedDescription":"Opened pull request \"[zh-cn] synced from #bb76bfd to #687962b\" (#1045) at vuejs/vuex","RelatedBody":"ref: `docs/en/*` part of http://github.com/vuejs/vuex/compare/bb76bfd...687962b"}],"ResultType":"GitHubEvent"}},"RunOn":"2017-11-06T05:30:32.5444189Z","RunDurationInMilliseconds":2073}