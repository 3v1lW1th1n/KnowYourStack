{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework October 2017 Security and Quality Rollup","PublishedOn":"2017-10-11T06:02:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the October 2017 Security and Quality Rollup. The update applies to all supported Windows versions. It includes a known issue for Windows 10 1507 (see below). Security This release contains no new security updates. Quality and Reliability This release contains the following quality and reliability improvements. WPF WPF fails to load... <a aria-label=\"read more about .NET Framework October 2017 Security and Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/10/10/net-framework-october-2017-security-and-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/10/10/net-framework-october-2017-security-and-quality-rollup/","RawContent":null},{"Title":"Announcing UWP Support for .NET Standard 2.0","PublishedOn":"2017-10-10T22:57:46+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"This post was mostly written by Rich Lander with contributions from Immo Landwerth. Today, we are releasing huge updates to UWP for .NET developers. The really big improvement is adding support for .NET Standard 2.0. UWP developers now have access to ~ 20k more APIs. This release brings UWP to partity with the other .NET implementations... <a aria-label=\"read more about Announcing UWP Support for .NET Standard 2.0\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/10/10/announcing-uwp-support-for-net-standard-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/10/10/announcing-uwp-support-for-net-standard-2-0/","RawContent":null},{"Title":".NET Framework 4.7.1 Runtime and Compiler Features","PublishedOn":"2017-09-28T23:56:59+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"This post describes the new Runtime, Compiler and Base Class Library (BCL) improvements in the .NET Framework 4.7.1. You can try out these features by downloading the Developer Pack, described in the Welcome to the .NET Framework 4.7.1 Early Access blog post.  BCL &#8211; .NET Standard 2.0 Support .NET Framework 4.7.1 has built-in support for .NET Standard 2.0. .NET Framework 4.7.1... <a aria-label=\"read more about .NET Framework 4.7.1 Runtime and Compiler Features\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/28/net-framework-4-7-1-runtime-and-compiler-features/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/28/net-framework-4-7-1-runtime-and-compiler-features/","RawContent":null},{"Title":"Build a web service with F# and .NET Core 2.0","PublishedOn":"2017-09-26T16:39:23+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"Earlier this year, I wrote about an update to the roadmap for F# and .NET Core. I had mentioned that there were a number of things you could build with F# and .NET Core today, such as web services. In this post, I&#8217;ll walk through building a web service with F# and .NET Core 2.0... <a aria-label=\"read more about Build a web service with F# and .NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/26/build-a-web-service-with-f-and-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/26/build-a-web-service-with-f-and-net-core-2-0/","RawContent":null},{"Title":".NET Framework September 2017 Preview of Quality Rollup","PublishedOn":"2017-09-25T19:57:18+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the September 2017 Preview of Quality Rollup. This type of rollup is intended for businesses that want to the preview or use quality improvements as soon as they are available. This update applies to Windows 10 Update 1607 (Anniversary Update) and to Windows Server 2016. FYI: The KBs for Windows Server 2016... <a aria-label=\"read more about .NET Framework September 2017 Preview of Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/25/net-framework-september-2017-preview-of-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/25/net-framework-september-2017-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core September 2017 Update — macOS High Sierra Support","PublishedOn":"2017-09-22T22:29:09+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We released .NET Core updates for macOS High Sierra Support and additional quality fixes. You can download and install the update for Windows, macOS and Linux. This update is for .NET Core 1.0 and 1.1. The initial .NET Core 2.0 release includes similar improvements, so is not being updated with this release. Downloads .NET Core 1.0.7 .NET... <a aria-label=\"read more about .NET Core September 2017 Update &#8212; macOS High Sierra Support\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/22/net-core-september-2017-update-macos-high-sierra-support/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/22/net-core-september-2017-update-macos-high-sierra-support/","RawContent":null},{"Title":".NET Framework 4.7.1 Accessibility and WPF Improvements","PublishedOn":"2017-09-21T22:00:20+00:00","CommentsCount":19,"FacebookCount":0,"Summary":"This post describes the new WPF and accessibility features and improvements in .NET Framework 4.7.1. You can try out these features by downloading the Developer Pack, described in the Welcome to the .NET Framework 4.7.1 Early Access blog post. Accessibility improvements .NET Framework 4.7.1 brings in a lot of accessibility improvements across different libraries to align with the... <a aria-label=\"read more about .NET Framework 4.7.1 Accessibility and WPF Improvements\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/21/net-framework-4-7-1-accessibility-and-wpf-improvements/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/21/net-framework-4-7-1-accessibility-and-wpf-improvements/","RawContent":null},{"Title":"Watch .NET Conf 2017!","PublishedOn":"2017-09-19T14:35:54+00:00","CommentsCount":12,"FacebookCount":0,"Summary":".NET Conf starts today. It&#8217;s a three-day, free, virtual and global .NET conference. All you need to do is point your web browser to channel9.msdn.com, starting at 8AM Pacific Time. We have a packed agenda with a great set of expert .NET developers. What will you learn? Many things. You will learn to build for... <a aria-label=\"read more about Watch .NET Conf 2017!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/19/watch-net-conf-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/19/watch-net-conf-2017/","RawContent":null},{"Title":".NET Framework 4.7.1 ASP.NET and Configuration features","PublishedOn":"2017-09-14T00:23:49+00:00","CommentsCount":25,"FacebookCount":0,"Summary":"This post describes the new ASP.NET, Configuration and System.Messaging features and improvements in the .NET Framework 4.7.1. More information on the build these features are available in and how to get the Developer Pack is covered in the Welcome to the .NET Framework 4.7.1 Early Access blog post. Configuration builders Configuration builders allow developers to inject and build... <a aria-label=\"read more about .NET Framework 4.7.1 ASP.NET and Configuration features\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/","RawContent":null},{"Title":".NET Framework September 2017 Security and Quality Rollup","PublishedOn":"2017-09-13T01:11:33+00:00","CommentsCount":25,"FacebookCount":0,"Summary":"Last Updated: 2017.09.21. Today, we are releasing the September 2017 Security and Quality Rollup and Security Only Update. This update applies to Windows 7 and later client versions and Windows Server 2008 and later server versions. This update has known issues. Please see them at the bottom of the update. Security This release contains the... <a aria-label=\"read more about .NET Framework September 2017 Security and Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6650451504","Type":"IssuesEvent","CreatedAt":"2017-09-28T16:22:10","Actor":"hughbe","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/87","RelatedDescription":"Opened issue \"PRs to repos outside of dotnet/* pattern should not always thank for signing the CLA\" (#87) at dotnet/home","RelatedBody":"For example: https://github.com/mono/libgdiplus/pull/109\r\n\r\nI have already signed the CLI. On the dotnet/corefx etc. projects, I don't get the extra message:\r\n\r\n```\r\n@hughbe,\r\nThanks for having already signed the Contribution License Agreement. Your agreement was validated by .NET Foundation. We will now review your pull request.\r\nThanks,\r\n.NET Foundation Pull Request Bot\r\n```\r\n\r\nJust a small gripe, as I get an email each time I do this. I've seen this in Mono and Xunit.\r\n\r\n/cc @karelz I know this is unrelated to corefx but maybe you know the right person/repo to route this to :D\r\n"},{"Id":"6515896963","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:20:18","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/85","RelatedDescription":"Merged pull request \"Create telerik-ui-for-uwp.md\" (#85) at dotnet/home","RelatedBody":"Submission of Telerik UI for UWP"},{"Id":"6515896506","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:19:49","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Merged pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6645912196","Type":"IssuesEvent","CreatedAt":"2017-09-27T19:47:08","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/32","RelatedDescription":"Opened issue \".NET Framework 4.7.1 provides built-in support for .NET Standard 2.0\" (#32) at dotnet/announcements","RelatedBody":"## Summary\r\n\r\n.NET Framework 4.7.1 will have built-in support for .NET Standard 2.0. This means that you don't have to deploy any additional files or use binding redirects to use .NET Standard 2.0 libraries.\r\n\r\nFor a demo, check out [this video][video].\r\n\r\n## Details\r\n\r\nWhile libraries targeting [.NET Standard 2.0][ns20post] are can be consumed by applications and libraries [targeting .NET Framework 4.6.1][nstable] and higher, not all files that are required for .NET Standard libraries were part of .NET Framework 4.6.1. In fact, .NET Framework 4.6.1 was shipped before .NET Standard 2.0 was even designed. That's why building an application targeting .NET Framework 4.6.1 (as well as 4.6.2 and 4.7) will have to deploy additional files.\r\n\r\n* If you use **Visual Studio 2017 15.3** or higher, these files are automatically copied to the application's output folder.\r\n\r\n* If you use **Visual Studio 2015 and [use NuGet 3.6][nuget36]**, we'll prompt you to install a [support package][vs2015support] which will handle copying the files to the output directory.\r\n\r\nStarting with .NET Framework 4.7.1 these files no longer have to be deployed with the application -- they are built right into the .NET Framework itself.\r\n\r\n.NET Framework 4.7.1 also adds[about 200 missing APIs][missingapis] that were part of .NET Standard 2.0 but not actually implemented by .NET Framework 4.6.1, 4.6.2 or 4.7.\r\n\r\nThis also removes the need for [binding redirects][netfx-issues] when using .NET Standard libraries on .NET Framework because the CLR automatically unifies version numbers of assemblies that are part of the platform.\r\n\r\nLearn more [by reading the .NET Standard FAQ](http://aka.ms/netstandardfaq).\r\n\r\n## Discussion\r\n\r\nDiscussion\r\n\r\nFor a discussion, please go to dotnet/standard#514.\r\n\r\n[ns20post]: https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\r\n[nstable]: https://docs.microsoft.com/en-us/dotnet/standard/net-standard\r\n[nuget36]: https://dist.nuget.org/visualstudio-2015-vsix/v3.6.0/NuGet.Tools.vsix\r\n[vs2015support]: https://aka.ms/netstandard-build-support-netfx\r\n[missingapis]: https://github.com/dotnet/standard/blob/master/netstandard/src/ApiCompatBaseline.net461.txt\r\n[netfx-issues]: https://github.com/dotnet/standard/issues/481\r\n[video]: https://www.youtube.com/watch?v=u67Eu_IgEMs\r\n\r\nhttps://github.com/dotnet/standard/issues/514"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"6719653666","Type":"IssuesEvent","CreatedAt":"2017-10-16T02:24:22","Actor":"micli","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/12880","RelatedDescription":"Closed issue \"Does the Microsoft symbol server publish .NET Core symbols?\" (#12880) at dotnet/coreclr","RelatedBody":"Can I specify Microsoft server http://msdl.microsoft.com/download/symbols when I debugging .NET Core application in both of platforms on Linux, Windows and macOS ?\r\n\r\nThanks!"},{"Id":"6719651488","Type":"IssuesEvent","CreatedAt":"2017-10-16T02:23:18","Actor":"micli","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/11520","RelatedDescription":"Closed issue \"Compile failed on CentOS 7\" (#11520) at dotnet/coreclr","RelatedBody":"When I compile the newest version coreclr on CentOS 7, It always failed recently with below error message:\r\n\r\n/coreclr/Tools/sign.targets(70,5): error : obj/Linux.x64.Debug/System.Private.CoreLib/System.Private.CoreLib.dll: I/O error reading or writing PE file: Invalid argument [/coreclr/src/mscorlib/System.Private.CoreLib.csproj]\r\n"},{"Id":"6719568618","Type":"PullRequestEvent","CreatedAt":"2017-10-16T01:41:24","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14516","RelatedDescription":"Opened pull request \"Update CoreFx to preview1-25816-01 (master)\" (#14516) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"6719459838","Type":"PullRequestEvent","CreatedAt":"2017-10-16T00:35:18","Actor":"4creators","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14515","RelatedDescription":"Opened pull request \"Fix Windows arm target cross build: detect prerelease VS2017, stay in repo root\" (#14515) at dotnet/coreclr","RelatedBody":"\r\nFixes issue #14514\r\n\r\nArm Windows build was recently changed by adding vswhere based VS installation detection\r\nand earlier initialization of environment variables. For details see\r\nhttps://github.com/dotnet/coreclr/pull/14228/files#diff-02389dfac0a172ab80211625efc34318R22\r\n\r\nThis introduced the following problems: (i) inability to detect and use VS 15 preview releses,\r\n(ii) unexpected changes to working directory caused by VsDevCmd.bat script execution. These\r\nerrors prevented an arm Windows build on my machine with different errors. In particular due\r\nto presence of arm tools only in preview version of VS the arm build consistently failed with\r\nCMake error \"compiler unknown\". Fixing of this problem unmasked second bug introduced by\r\nuncontrolled changes to build script working directory resulting in error: \"Command line too\r\nlong\". Both problems are fixed in this PR.\r\n\r\nIn addition in CrossArchBuild leg a new CMake custom argument is introduced which allows for\r\nselection of latest Windows 10 SDK available on machine directly by CMake. So far this define\r\nwas present only in CoreCLR native build leg."},{"Id":"6719427440","Type":"IssuesEvent","CreatedAt":"2017-10-16T00:12:34","Actor":"4creators","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14514","RelatedDescription":"Opened issue \"[arm/Windows] Build is broken by PR #14228\" (#14514) at dotnet/coreclr","RelatedBody":"PR #14228 introduced two bugs into build.cmd script which prevent successful cross build for Windows arm target.\r\n\r\nFirst issue is caused by configuration of vswhere script which detects only RTM installations of Visual Studio.  In case only preview installation would have arm VC tools installed building with build.cmd will be impossible.\r\n\r\nSecond error masked by the first one is that execution of  VsDevCmd.bat script will change working directory of build.cmd script. If this is not corrected build fails with \"Command line too long\" or \"Path too long\" errors."},{"Id":"6719279882","Type":"PullRequestEvent","CreatedAt":"2017-10-15T22:21:31","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14511","RelatedDescription":"Merged pull request \"Update CoreFx to preview1-25815-02 (master)\" (#14511) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"6719038777","Type":"PullRequestEvent","CreatedAt":"2017-10-15T19:39:23","Actor":"justinvp","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14513","RelatedDescription":"Opened pull request \"Environment.SystemDirectory: Avoid StringBuilder overhead\" (#14513) at dotnet/coreclr","RelatedBody":"Port https://github.com/dotnet/corefx/pull/24651\r\n\r\nSeparate it out for Windows-only while at it, since the only place it's called is from TimeZoneInfo.Win32.c:\r\n\r\nhttps://github.com/dotnet/coreclr/blob/a1dd9ca5e083478ad3352c9f685ccff5ddbb683c/src/mscorlib/src/System/TimeZoneInfo.Win32.cs#L799"},{"Id":"6718967578","Type":"IssuesEvent","CreatedAt":"2017-10-15T18:52:41","Actor":"4creators","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14512","RelatedDescription":"Opened issue \"[Arm64/Windows] REM TODO, remove once the toolset is open - arm64 builds currently use private toolset\" (#14512) at dotnet/coreclr","RelatedBody":"Seems that Arm64 build tools have been released by MSFT with Windows SDK 10.0.16299.15. Is it possible to unblock this build leg in build.cmd and other tools?"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"6719686733","Type":"IssuesEvent","CreatedAt":"2017-10-16T02:39:11","Actor":"Petermarcu","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/2533","RelatedDescription":"Closed issue \"User assemblies cannot be as fast as the shared framework\" (#2533) at dotnet/cli","RelatedBody":"## Steps to reproduce\n\nUser assemblies currently cannot be crossgen'd and hence are not as fast as the shared framework itself. \n## Expected  behavior\n\nA user should be able to native compile his assemblies if needed to better performance.\n## Actual behavior\n\nThere isn't an option to crossgen user assemblies. This could hamper performance even if these are run in shared apps.\n## Environment data\n\n1.0.0-rc2-002353\n"},{"Id":"6719685327","Type":"IssuesEvent","CreatedAt":"2017-10-16T02:38:33","Actor":"Petermarcu","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/1224","RelatedDescription":"Closed issue \"Add crossgen support to publish\" (#1224) at dotnet/cli","RelatedBody":"`dotnet publish` produces a single runnable output folder. It would be great if we enabled crossgen via a simple flag to publish `--crossgen`\n"},{"Id":"6719405782","Type":"IssuesEvent","CreatedAt":"2017-10-15T23:56:37","Actor":"danmosemsft","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/cli/issues/7841","RelatedDescription":"Reopened issue \"dotnet run does not work out of the box due to targeting 2.0\" (#7841) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nDownload and unzip `https://dotnetcli.blob.core.windows.net/dotnet/Sdk/master/dotnet-sdk-latest-win-x86.zip` (link from the main page https://github.com/dotnet/cli)\r\n`dotnet new console`\r\n`dotnet run`\r\n\r\n## Expected  behavior\r\nIt works.\r\n\r\n## Actual behavior\r\n```\r\nC:\\dotnet.x86.latest\\1>..\\dotnet run\r\nIt was not possible to find any compatible framework version\r\nThe specified framework 'Microsoft.NETCore.App', version '2.0.0' was not found.\r\n  - Check application dependencies and target a framework version installed at:\r\n      C:\\dotnet.x86.latest\\\r\n  - The .NET framework can be installed from:\r\n      https://aka.ms/dotnet-download-runtime\r\n  - The .NET framework and SDK can be installed from:\r\n      http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n  - The following versions are installed:\r\n      2.1.0-preview1-25806-02 at [C:\\dotnet.x86.latest\\shared]\r\n```\r\nI tried editing the csproj to target `netcoreapp2.1` then I get\r\n```\r\nC:\\dotnet.x86.latest\\1>..\\dotnet run\r\nC:\\dotnet.x86.latest\\1\\1.csproj : warning NU1603: 1 depends on Microsoft.NETCore.App (>= 2.1.0-preview1-25806-02) but Microsoft.NETCore.App 2.1.0-preview1-25806-02 was not found. An approximate best match of Microsoft.NETCore.App 2.1.0-preview2-25616-02 was resolved.\r\nC:\\dotnet.x86.latest\\1\\1.csproj : warning NU1603: 1 depends on Microsoft.NETCore.App (>= 2.1.0-preview1-25806-02) but Microsoft.NETCore.App 2.1.0-preview1-25806-02 was not found. An approximate best match of Microsoft.NETCore.App 2.1.0-preview2-25616-02 was resolved.\r\nIt was not possible to find any compatible framework version\r\nThe specified framework 'Microsoft.NETCore.App', version '2.1.0-preview2-25616-02' was not found.\r\n  - Check application dependencies and target a framework version installed at:\r\n      C:\\dotnet.x86.latest\\\r\n  - The .NET framework can be installed from:\r\n      https://aka.ms/dotnet-download-runtime\r\n  - The .NET framework and SDK can be installed from:\r\n      http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n  - The following versions are installed:\r\n      2.1.0-preview1-25806-02 at [C:\\dotnet.x86.latest\\shared]\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\nC:\\dotnet.x86.latest\\1>dotnet --info\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.0\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"6719403650","Type":"IssuesEvent","CreatedAt":"2017-10-15T23:55:01","Actor":"danmosemsft","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7841","RelatedDescription":"Closed issue \"dotnet run does not work out of the box due to targeting 2.0\" (#7841) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nDownload and unzip `https://dotnetcli.blob.core.windows.net/dotnet/Sdk/master/dotnet-sdk-latest-win-x86.zip` (link from the main page https://github.com/dotnet/cli)\r\n`dotnet new console`\r\n`dotnet run`\r\n\r\n## Expected  behavior\r\nIt works.\r\n\r\n## Actual behavior\r\n```\r\nC:\\dotnet.x86.latest\\1>..\\dotnet run\r\nIt was not possible to find any compatible framework version\r\nThe specified framework 'Microsoft.NETCore.App', version '2.0.0' was not found.\r\n  - Check application dependencies and target a framework version installed at:\r\n      C:\\dotnet.x86.latest\\\r\n  - The .NET framework can be installed from:\r\n      https://aka.ms/dotnet-download-runtime\r\n  - The .NET framework and SDK can be installed from:\r\n      http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n  - The following versions are installed:\r\n      2.1.0-preview1-25806-02 at [C:\\dotnet.x86.latest\\shared]\r\n```\r\nI tried editing the csproj to target `netcoreapp2.1` then I get\r\n```\r\nC:\\dotnet.x86.latest\\1>..\\dotnet run\r\nC:\\dotnet.x86.latest\\1\\1.csproj : warning NU1603: 1 depends on Microsoft.NETCore.App (>= 2.1.0-preview1-25806-02) but Microsoft.NETCore.App 2.1.0-preview1-25806-02 was not found. An approximate best match of Microsoft.NETCore.App 2.1.0-preview2-25616-02 was resolved.\r\nC:\\dotnet.x86.latest\\1\\1.csproj : warning NU1603: 1 depends on Microsoft.NETCore.App (>= 2.1.0-preview1-25806-02) but Microsoft.NETCore.App 2.1.0-preview1-25806-02 was not found. An approximate best match of Microsoft.NETCore.App 2.1.0-preview2-25616-02 was resolved.\r\nIt was not possible to find any compatible framework version\r\nThe specified framework 'Microsoft.NETCore.App', version '2.1.0-preview2-25616-02' was not found.\r\n  - Check application dependencies and target a framework version installed at:\r\n      C:\\dotnet.x86.latest\\\r\n  - The .NET framework can be installed from:\r\n      https://aka.ms/dotnet-download-runtime\r\n  - The .NET framework and SDK can be installed from:\r\n      http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n  - The following versions are installed:\r\n      2.1.0-preview1-25806-02 at [C:\\dotnet.x86.latest\\shared]\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\nC:\\dotnet.x86.latest\\1>dotnet --info\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.0\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"6719396081","Type":"IssuesEvent","CreatedAt":"2017-10-15T23:48:56","Actor":"danmosemsft","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7841","RelatedDescription":"Opened issue \"dotnet run does not work out of the box due to targeting 2.0\" (#7841) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nDownload and unzip `https://dotnetcli.blob.core.windows.net/dotnet/Sdk/master/dotnet-sdk-latest-win-x86.zip` (link from the main page https://github.com/dotnet/cli)\r\n`dotnet new console`\r\n`dotnet run`\r\n\r\n## Expected  behavior\r\nIt works.\r\n\r\n## Actual behavior\r\n```\r\nC:\\dotnet.x86.latest\\1>..\\dotnet run\r\nIt was not possible to find any compatible framework version\r\nThe specified framework 'Microsoft.NETCore.App', version '2.0.0' was not found.\r\n  - Check application dependencies and target a framework version installed at:\r\n      C:\\dotnet.x86.latest\\\r\n  - The .NET framework can be installed from:\r\n      https://aka.ms/dotnet-download-runtime\r\n  - The .NET framework and SDK can be installed from:\r\n      http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n  - The following versions are installed:\r\n      2.1.0-preview1-25806-02 at [C:\\dotnet.x86.latest\\shared]\r\n```\r\nTo make this work, I have to edit the csproj to target `netcoreapp2.1`. Even then I get two errors:\r\n```\r\nx:\\dotnet.x86.latest\\1>..\\dotnet run\r\nC:\\dotnet.x86.latest\\1\\1.csproj : warning NU1603: 1 depends on Microsoft.NETCore.App (>= 2.1.0-preview1-25806-02) but Microsoft.NETCore.App 2.1.0-preview1-25806-02 was not found. An approximate best match of Microsoft.NETCore.App 2.1.0-preview2-25616-02 was resolved.\r\nC:\\dotnet.x86.latest\\1\\1.csproj : warning NU1603: 1 depends on Microsoft.NETCore.App (>= 2.1.0-preview1-25806-02) but Microsoft.NETCore.App 2.1.0-preview1-25806-02 was not found. An approximate best match of Microsoft.NETCore.App 2.1.0-preview2-25616-02 was resolved.\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\nC:\\dotnet.x86.latest\\1>dotnet --info\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.0\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"6717568705","Type":"IssuesEvent","CreatedAt":"2017-10-14T23:03:25","Actor":"rendmath","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7840","RelatedDescription":"Opened issue \"dotnet new for --frameworks targeting the .NET Framework\" (#7840) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\ndotnet new console --framework net461\r\n\r\n## Expected  behavior\r\ndotnet creates a console (or other type of) application targeting the specified version of the .NET Framework.\r\n\r\n## Actual behavior\r\nError message:\r\nError: Invalid parameter(s):\r\n--framework net452\r\n    'net452' is not a valid value for --framework (Framework).\r\nRun dotnet new console --help for usage information.\r\nSee https://aka.ms/dotnet-install-templates to learn how to install additional template packs.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Command Line Tools (2.1.0-preview1-007363)\r\n\r\nProduct Information:\r\n Version:            2.1.0-preview1-007363\r\n Commit SHA-1 hash:  ee6707ced0\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.0-preview1-007363\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.1.0-preview2-25616-02\r\n  Build    : 8aa34a95bad481e1b5e4c8286e5cb2d7cb6ed943"},{"Id":"6716830978","Type":"IssuesEvent","CreatedAt":"2017-10-14T13:54:54","Actor":"jamescrowley","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7839","RelatedDescription":"Opened issue \"Build consistently fails on first build, and succeeds on second.\" (#7839) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n1. Download attached zip. \r\n[SampleConcurrencyBuildIssue.zip](https://github.com/dotnet/cli/files/1384703/SampleConcurrencyBuildIssue.zip)\r\n2. Run build.cmd (build fails)\r\n3. Run build.cmd (build passes)\r\n4. Rename folder that you've extracted to\r\n5. Run build.cmd (build fails)\r\n6. Run build.cmd (build passes)\r\n\r\nNote that the contents of this zip includes files generated by paket. But I have removed all trace of paket itself - you just see the artifacts. So regardless of what paket generates, I'm pretty confident this is a build toolchain issue.\r\n\r\n## Expected  behavior\r\n\r\nBuild should fail or pass consistently.\r\n\r\n## Actual behavior\r\n\r\n\r\nFirst build:\r\n\r\n\tC:\\Development\\Sample>dotnet build src/FundApps.Rapptr.Web/FundApps.Rapptr.Web.csproj\r\n\tMicrosoft (R) Build Engine version 15.4.8.50001 for .NET Core\r\n\tCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n\t  FundApps.Common -> C:\\Development\\Sample\\src\\FundApps.Common\\bin\\Debug\\net462\\FundApps.Common.dll\r\n\tC:\\Development\\Sample\\packages\\Microsoft.Net.Compilers\\tools\\Microsoft.CSharp.Core.targets(84,5): error MSB4062: The \"Microsoft.CodeAnalysis.BuildTasks.Csc\" task could not be loaded from the assembly C:\\Development\\Sample\\packages\\Microsoft.Net.Compilers\\build\\..\\tools\\Microsoft.Build.Tasks.CodeAnalysis.dll. Assembly with same name is already loaded Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [C:\\Development\\Sample\\src\\FundApps.Rapptr.Web\\FundApps.Rapptr.Web.csproj]\r\n\r\n\tBuild FAILED.\r\n\r\n\tC:\\Development\\Sample\\packages\\Microsoft.Net.Compilers\\tools\\Microsoft.CSharp.Core.targets(84,5): error MSB4062: The \"Microsoft.CodeAnalysis.BuildTasks.Csc\" task could not be loaded from the assembly C:\\Development\\Sample\\packages\\Microsoft.Net.Compilers\\build\\..\\tools\\Microsoft.Build.Tasks.CodeAnalysis.dll. Assembly with same name is already loaded Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. [C:\\Development\\Sample\\src\\FundApps.Rapptr.Web\\FundApps.Rapptr.Web.csproj]\r\n\t    0 Warning(s)\r\n\t    1 Error(s)\r\n\r\n\tTime Elapsed 00:00:05.38\r\n\r\nSecond build:\r\n\r\n\tC:\\Development\\Sample>build\r\n\r\n\tC:\\Development\\Sample>dotnet build src/FundApps.Rapptr.Web/FundApps.Rapptr.Web.csproj\r\n\tMicrosoft (R) Build Engine version 15.4.8.50001 for .NET Core\r\n\tCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n\t  FundApps.Common -> C:\\Development\\Sample\\src\\FundApps.Common\\bin\\Debug\\net462\\FundApps.Common.dll\r\n\t  FundApps.Rapptr.Web -> C:\\Development\\Sample\\src\\FundApps.Rapptr.Web\\bin\\FundApps.Rapptr.Web.dll\r\n\r\n\tBuild succeeded.\r\n\t    0 Warning(s)\r\n\t    0 Error(s)\r\n\r\n\tTime Elapsed 00:00:11.91\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Command Line Tools (2.0.2)\r\n\r\nProduct Information:\r\n Version:            2.0.2\r\n Commit SHA-1 hash:  a04b4bf512\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.14393\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.2\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d"},{"Id":"6715723776","Type":"IssuesEvent","CreatedAt":"2017-10-13T22:45:32","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7838","RelatedDescription":"Closed issue \"nuget: setting a source in nuget.config and using it with dotnet overrides creadentials for that source in global nuget.config\" (#7838) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nGiven a global nuget.config (in user's profile) with several nuget sources and packageSourceCredentials for them. That is sources require authentication.\r\nGiven a project with local nuget.config (besides csproj) which contains only a source url:\r\n```\r\n\t<packageSources>\r\n\t\t<add key=\"my\" value=\"https://company/api/nuget/nuget-virtual\" />\r\n\t</packageSources>\r\n```\r\nrun any dotnet command requires contacting nuget, for example `dotnet add package ..`.\r\nIt'll fail as nuget will use the source specified in local nuget.config but won't use credentials in global nuget.config. \r\n\r\n## Expected  behavior\r\nnuget should use credentials from global nuget.config.\r\n\r\n## Actual behavior\r\nany dotnet commands fail with 401 (Unauthorized) as my source requires authentication.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```                                                    \r\nD:\\Work>dotnet --info       \r\n.NET Command Line Tools (2.0.2)                                 \r\n                                                                \r\nProduct Information:                                            \r\n Version:            2.0.2                                      \r\n Commit SHA-1 hash:  a04b4bf512                                 \r\n                                                                \r\nRuntime Environment:                                            \r\n OS Name:     Windows                                           \r\n OS Version:  10.0.15063                                        \r\n OS Platform: Windows                                           \r\n RID:         win10-x64                                         \r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.2\\                \r\n                                                                \r\nMicrosoft .NET Core Shared Framework Host                       \r\n                                                                \r\n  Version  : 2.0.0                                              \r\n```"},{"Id":"6715722397","Type":"PullRequestEvent","CreatedAt":"2017-10-13T22:44:57","Actor":"natemcmaster","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/7837","RelatedDescription":"Closed pull request \"Update the 1.x templates for aspnetcore 1.0.7/1.1.4\" (#7837) at dotnet/cli","RelatedBody":"Update the aspnetcore templates for 1.x. Includes this change: https://github.com/aspnet/templating/pull/65\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"6718785694","Type":"IssuesEvent","CreatedAt":"2017-10-15T16:49:15","Actor":"Petermarcu","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/538","RelatedDescription":"Opened issue \"No netstandard.dll reference when targeting netstandard2.0\" (#538) at dotnet/standard","RelatedBody":"@alexeyzimarev reported this here: https://github.com/dotnet/core/issues/831#issuecomment-336706155\r\n\r\nThis is even worse. I converted RestSharp to be on netstandard2.0. It builds fine on my machine. But on my other machine and on anyone else's it is throwing errors on everything - `CultureInfo`, `List`, etc.\r\n\r\nSo I looked how it shows and compared it with a completely new .NET Standard class library. Here is how they look:\r\n\r\n![image](https://user-images.githubusercontent.com/2821205/31584452-365ae620-b1af-11e7-8340-a92e0a5fc552.png)\r\n\r\nThe csproj files are completely identical:\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nI tried using `<NetStandardImplicitPackageVersion>2.0.0</NetStandardImplicitPackageVersion>` and it has no effect. But hence that the RestSharp project does not even have a reference to `netstandard.dll`. How this is even possible???"},{"Id":"6716718422","Type":"IssuesEvent","CreatedAt":"2017-10-14T12:20:47","Actor":"shaggygi","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/537","RelatedDescription":"Opened issue \"[Question] Clean up milestones\" (#537) at dotnet/standard","RelatedBody":"Is it possible to close out [.NET Standard 2.0 milestone](https://github.com/dotnet/standard/milestone/2) now it is released?  I'm assuming a new milestone for v2.1 will be created once roadmap is announced.  Thx"},{"Id":"6714225269","Type":"IssuesEvent","CreatedAt":"2017-10-13T16:04:12","Actor":"ajcvickers","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/460","RelatedDescription":"Closed issue \"EntityFrameworkCore2.0 a bug about mysql\" (#460) at dotnet/standard","RelatedBody":"I have a project join some nuget packages , mysql.data,microsoft.entityframeworkcore 2.0 then it have some issues.\r\nimportment:efcore1.3 have no issue ,but efcore2.0 have a not implement method .\r\nSystem.TypeLoadException:“Method 'Clone' in type 'MySQL.Data.EntityFrameworkCore.Infraestructure.Internal.MySQLOptionsExtension' from assembly 'MySql.Data.EntityFrameworkCore, Version=8.0.8.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d' does not have an implementation.”\r\n\r\n"},{"Id":"6709887129","Type":"IssuesEvent","CreatedAt":"2017-10-12T19:28:11","Actor":"virzak","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/536","RelatedDescription":"Opened issue \"public interface IValueConverter\" (#536) at dotnet/standard","RelatedBody":"Should IValueConverter be part of the .NET Standard?\r\n\r\nIt seems so since it is identical in [WPF](https://msdn.microsoft.com/en-us/library/system.windows.data.ivalueconverter(v=vs.110).aspx), [UWP](https://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.data.ivalueconverter) and [Xamarin Forms](https://developer.xamarin.com/api/type/Xamarin.Forms.IValueConverter/)\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"6719653276","Type":"IssuesEvent","CreatedAt":"2017-10-16T02:24:10","Actor":"Jiayili1","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/24660","RelatedDescription":"Opened issue \"Build step 'Execute shell' marked build as failure in CI\" (#24660) at dotnet/corefx","RelatedBody":"https://ci.dot.net/job/dotnet_corefx/job/master/job/outerloop_netcoreapp_ubuntu14.04_debug/200/\r\n\r\nDetail: https://ci.dot.net/job/dotnet_corefx/job/master/job/outerloop_netcoreapp_ubuntu14.04_debug/lastCompletedBuild/consoleFull#-8536224876a086b3e-df04-41d2-bc4d-43e8f9406d07\r\n\r\nConfiguration: outerloop_netcoreapp_ubuntu14.04_debug\r\n\r\nBuild step 'Execute shell' marked build as failure\r\n15:52:05 [xUnit] [INFO] - Starting to record.\r\n15:52:05 [xUnit] [INFO] - Processing xUnit.Net-v2 (default)\r\n15:52:06 [xUnit] [INFO] - [xUnit.Net-v2 (default)] - No test report file(s) were found with the pattern 'bin/**/testResults.xml' relative to '/mnt/j/workspace/dotnet_corefx/master/outerloop_netcoreapp_ubuntu14.04_debug' for the testing framework 'xUnit.Net-v2 (default)'.  Did you enter a pattern relative to the correct directory?  Did you generate the result report(s) for 'xUnit.Net-v2 (default)'?\r\n15:52:06 \r\n[xUnit] [ERROR] - No test reports found for the metric 'xUnit.Net' with the resolved pattern 'bin/**/testResults.xml'. Configuration error?.\r\n15:52:06 [xUnit] [INFO] - Failing BUILD.\r\n15:52:06 [xUnit] [INFO] - There are errors when processing test results.\r\n15:52:06 [xUnit] [INFO] - Skipping tests recording.\r\n15:52:06 [xUnit] [INFO] - Stop build."},{"Id":"6719395291","Type":"PullRequestEvent","CreatedAt":"2017-10-15T23:48:20","Actor":"justinvp","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/24659","RelatedDescription":"Opened pull request \"Fix parameter to match the native name\" (#24659) at dotnet/corefx","RelatedBody":"cc: @stephentoub"},{"Id":"6719273114","Type":"PullRequestEvent","CreatedAt":"2017-10-15T22:16:43","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/24651","RelatedDescription":"Merged pull request \"Environment.SystemDirectory: Avoid StringBuilder overhead\" (#24651) at dotnet/corefx","RelatedBody":"Use a stack allocated buffer, with fallback to a char array.\r\n\r\nResults on my machine:\r\n\r\n| Method |      Mean |     Error |    StdDev |  Gen 0 | Allocated |\r\n|------- |----------:|----------:|----------:|-------:|----------:|\r\n| Before | 186.50 ns | 1.6456 ns | 1.5393 ns | 0.1447 |     608 B |\r\n|  After |  68.68 ns | 0.6775 ns | 0.6006 ns | 0.0151 |      64 B |"},{"Id":"6719244936","Type":"IssuesEvent","CreatedAt":"2017-10-15T21:56:18","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/24658","RelatedDescription":"Closed issue \"Open\" (#24658) at dotnet/corefx","RelatedBody":""},{"Id":"6719230765","Type":"IssuesEvent","CreatedAt":"2017-10-15T21:46:48","Actor":"anismorsidi","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/24658","RelatedDescription":"Opened issue \"Open\" (#24658) at dotnet/corefx","RelatedBody":""},{"Id":"6719218633","Type":"IssuesEvent","CreatedAt":"2017-10-15T21:38:16","Actor":"ringrid","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/24657","RelatedDescription":"Opened issue \"the Package: System.Text.Encoding.CodePages (ver:4.4.0) cannot be published\" (#24657) at dotnet/corefx","RelatedBody":"I found this package of version 4.4.0 cannot be publish when I use \"dotnet publish\".\r\nwhen I change to version 4.3.0, It's ok, It has rutimes\\win and runtimes\\unix.\r\nfor version 4.4-preview, it has only runtimes\\win, no runtimes\\unix."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"6719842107","Type":"IssuesEvent","CreatedAt":"2017-10-16T03:53:39","Actor":"yaakov-h","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22707","RelatedDescription":"Opened issue \"VS 15.5 Preview: VerificationException in otherwise valid function\" (#22707) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\nMicrosoft Visual Studio Enterprise 2017 Preview\r\nVersion 15.5.0 Preview 1.0\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a .NET Framework Console Application\r\n2. Replace the contents of Program.cs with the code below.\r\n3. Run the program.\r\n\r\n**Expected Behavior**:\r\n\r\nThe program prints \"Comparison: 0\"\r\n\r\n**Actual Behavior**:\r\n\r\nThe program crashes with a `VerificationException` in `StructyMcStructFace.CompareTo`.\r\n\r\n![VerificationException](https://user-images.githubusercontent.com/426009/31594612-bad640c0-b281-11e7-898f-9c6b4f684b6f.PNG)\r\n\r\nCode:\r\n\r\n```\r\nusing System;\r\nusing System.Security;\r\n\r\n[assembly: AllowPartiallyTrustedCallers()]\r\n\r\nnamespace RoslynRepro155\r\n{\r\n\tclass Program\r\n\t{\r\n\t\tstatic void Main(string[] args)\r\n\t\t{\r\n\t\t\tvar color1 = new StructyMcStructFace(TColorType.Automatic);\r\n\t\t\tvar color2 = new StructyMcStructFace(TColorType.Automatic);\r\n\r\n\t\t\tvar result = color1.CompareTo(color2);\r\n\t\t\tConsole.WriteLine(\"Comparison: {0}\", result);\r\n\t\t\tConsole.ReadKey();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic enum TAutomaticColor\r\n\t{\r\n\t}\r\n\r\n\tpublic enum TColorType\r\n\t{\r\n\t\tAutomatic,\r\n\t\tRGB,\r\n\t\tTheme,\r\n\t\tIndexed\r\n\t}\r\n\r\n\tpublic struct StructyMcStructFace\r\n\t{\r\n\t\tpublic StructyMcStructFace(TColorType type)\r\n\t\t{\r\n\t\t\tColorType = type;\r\n\t\t\tautomaticType = default(TAutomaticColor);\r\n\r\n\t\t}\r\n\r\n\t\treadonly TAutomaticColor automaticType;\r\n\r\n\t\tpublic TColorType ColorType { get; }\r\n\r\n\t\tpublic int CompareTo(StructyMcStructFace other)\r\n\t\t{\r\n\t\t\tswitch (ColorType)\r\n\t\t\t{\r\n\t\t\t\tcase TColorType.Automatic:\r\n\t\t\t\t\treturn automaticType.CompareTo(other.automaticType);\r\n\t\t\t}\r\n\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nIL of `CompareTo` with Visual Studio 2017 v15.4.0:\r\n\r\n```\r\n.method public hidebysig \r\n\tinstance int32 CompareTo (\r\n\t\tvaluetype RoslynRepro155.StructyMcStructFace other\r\n\t) cil managed \r\n{\r\n\t// Method begins at RVA 0x20b0\r\n\t// Code size 53 (0x35)\r\n\t.maxstack 2\r\n\t.locals init (\r\n\t\t[0] valuetype RoslynRepro155.TColorType,\r\n\t\t[1] valuetype RoslynRepro155.TAutomaticColor,\r\n\t\t[2] int32\r\n\t)\r\n\r\n\tIL_0000: nop\r\n\tIL_0001: ldarg.0\r\n\tIL_0002: call instance valuetype RoslynRepro155.TColorType RoslynRepro155.StructyMcStructFace::get_ColorType()\r\n\tIL_0007: stloc.0\r\n\tIL_0008: ldloc.0\r\n\tIL_0009: brfalse.s IL_000d\r\n\r\n\tIL_000b: br.s IL_002f\r\n\r\n\tIL_000d: ldarg.0\r\n\tIL_000e: ldfld valuetype RoslynRepro155.TAutomaticColor RoslynRepro155.StructyMcStructFace::automaticType\r\n\tIL_0013: stloc.1\r\n\tIL_0014: ldloca.s 1\r\n\tIL_0016: ldarg.1\r\n\tIL_0017: ldfld valuetype RoslynRepro155.TAutomaticColor RoslynRepro155.StructyMcStructFace::automaticType\r\n\tIL_001c: box RoslynRepro155.TAutomaticColor\r\n\tIL_0021: constrained. RoslynRepro155.TAutomaticColor\r\n\tIL_0027: callvirt instance int32 [mscorlib]System.Enum::CompareTo(object)\r\n\tIL_002c: stloc.2\r\n\tIL_002d: br.s IL_0033\r\n\r\n\tIL_002f: ldc.i4.0\r\n\tIL_0030: stloc.2\r\n\tIL_0031: br.s IL_0033\r\n\r\n\tIL_0033: ldloc.2\r\n\tIL_0034: ret\r\n} // end of method StructyMcStructFace::CompareTo\r\n```\r\n\r\nIL of `CompareTo` with Visual Studio 2017 v15.5.0 Preview:\r\n\r\n```\r\n.method public hidebysig \r\n\tinstance int32 CompareTo (\r\n\t\tvaluetype RoslynRepro155.StructyMcStructFace other\r\n\t) cil managed \r\n{\r\n\t// Method begins at RVA 0x20b0\r\n\t// Code size 50 (0x32)\r\n\t.maxstack 2\r\n\t.locals init (\r\n\t\t[0] valuetype RoslynRepro155.TColorType,\r\n\t\t[1] int32\r\n\t)\r\n\r\n\tIL_0000: nop\r\n\tIL_0001: ldarg.0\r\n\tIL_0002: call instance valuetype RoslynRepro155.TColorType RoslynRepro155.StructyMcStructFace::get_ColorType()\r\n\tIL_0007: stloc.0\r\n\tIL_0008: ldloc.0\r\n\tIL_0009: brfalse.s IL_000d\r\n\r\n\tIL_000b: br.s IL_002c\r\n\r\n\tIL_000d: ldarg.0\r\n\tIL_000e: ldflda valuetype RoslynRepro155.TAutomaticColor RoslynRepro155.StructyMcStructFace::automaticType\r\n\tIL_0013: ldarg.1\r\n\tIL_0014: ldfld valuetype RoslynRepro155.TAutomaticColor RoslynRepro155.StructyMcStructFace::automaticType\r\n\tIL_0019: box RoslynRepro155.TAutomaticColor\r\n\tIL_001e: constrained. RoslynRepro155.TAutomaticColor\r\n\tIL_0024: callvirt instance int32 [mscorlib]System.Enum::CompareTo(object)\r\n\tIL_0029: stloc.1\r\n\tIL_002a: br.s IL_0030\r\n\r\n\tIL_002c: ldc.i4.0\r\n\tIL_002d: stloc.1\r\n\tIL_002e: br.s IL_0030\r\n\r\n\tIL_0030: ldloc.1\r\n\tIL_0031: ret\r\n} // end of method StructyMcStructFace::CompareTo\r\n```"},{"Id":"6719809449","Type":"PullRequestEvent","CreatedAt":"2017-10-16T03:37:27","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22706","RelatedDescription":"Opened pull request \"Do not expose implicit IInstanceReferenceExpression in an IDelegateCreationExpression targeting static method.\" (#22706) at dotnet/roslyn","RelatedBody":"Fixes #15513.\r\n"},{"Id":"6719523944","Type":"PullRequestEvent","CreatedAt":"2017-10-16T01:15:53","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22705","RelatedDescription":"Opened pull request \"Properly mark IOperation nodes as Implicit.\" (#22705) at dotnet/roslyn","RelatedBody":"Fixes #22679. Fixes #7397. Related to #22029.\r\n"},{"Id":"6719376903","Type":"IssuesEvent","CreatedAt":"2017-10-15T23:33:37","Actor":"jnm2","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22704","RelatedDescription":"Opened issue \"Proposal: SourceTextReader\" (#22704) at dotnet/roslyn","RelatedBody":"## Problem\r\n\r\nI expected to find a `TextReader` implementation called `SourceTextReader` and was surprised to find none.\r\n\r\nThe docs don't say anything about `TextWriter` specifically, but the closest thing they do talk about is `Stream`. The recommended way to read a SourceText with an API that requires a `Stream` is to allocate an entire copy:\r\n\r\n> ```cs\r\n> SourceText fileText = termsFile.GetText(compilationStartContext.CancellationToken);\r\n> \r\n> MemoryStream stream = new MemoryStream();\r\n> using (StreamWriter writer = new StreamWriter(stream, Encoding.UTF8, 1024, true))\r\n> {\r\n>     fileText.Write(writer);\r\n> }\r\n> \r\n> stream.Position = 0;\r\n> ```\r\n\r\n(https://github.com/dotnet/roslyn/blob/master/docs/analyzers/Using%20Additional%20Files.md#converting-a-file-to-a-stream)\r\n\r\nThe current solution is `new StringReader(sourceText.ToString()`, but if I understand correctly, that has the same flaw: depending on the backing representation, there's a good chance it might allocate a whole new string. I don't see anything in the docs which guarantees that it doesn't.\r\n\r\n\r\n## Proposed solution\r\n\r\nAdd an API similar to this:\r\n\r\n```cs\r\npublic sealed class SourceTextReader : TextReader\r\n{\r\n    public SourceTextReader(SourceText text);\r\n}\r\n```\r\n\r\nSeems low cost and straightforward. Here's what seems to be the obvious implementation which I'm using to read AdditionalFiles in a diagnostic analyzer:\r\nhttps://gist.github.com/jnm2/91f841036006339ff91925bf5f8cd5b0"},{"Id":"6719223541","Type":"PullRequestEvent","CreatedAt":"2017-10-15T21:41:39","Actor":"AlekseyTs","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22703","RelatedDescription":"Opened pull request \"Ensure complete information is consistently captured in a bound tree for an explicit C# conversion implicitly applied by compiler.\" (#22703) at dotnet/roslyn","RelatedBody":"Fixes #7299. Fixes #19878\r\n"},{"Id":"6719218114","Type":"PullRequestEvent","CreatedAt":"2017-10-15T21:37:55","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22702","RelatedDescription":"Opened pull request \"Update xml docs on LanguageVersion\" (#22702) at dotnet/roslyn","RelatedBody":"I noticed that some entries in the enum had xml docs, but recent ones didn't. Filling in the gaps.\r\n\r\nFixes https://github.com/dotnet/roslyn/issues/22701"},{"Id":"6719152372","Type":"IssuesEvent","CreatedAt":"2017-10-15T20:55:06","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22701","RelatedDescription":"Opened issue \"Add descriptions to LanguageVersion enum entries\" (#22701) at dotnet/roslyn","RelatedBody":"\r\n```\r\n        /// <summary> \r\n        /// C# language version 6.0.\r\n        /// </summary>\r\n        /// <remarks>\r\n        /// <para>Features:</para>\r\n        /// <list type=\"bullet\">\r\n        /// <item><description>Using of a static class</description></item> \r\n        /// <item><description>Auto-property initializers</description></item> \r\n        /// <item><description>Expression-bodied methods and properties</description></item> \r\n        /// <item><description>Null-propagating operator ?.</description></item> \r\n        /// <item><description>Exception filters</description></item> \r\n        /// </list> \r\n        /// </remarks> \r\n        CSharp6 = 6,\r\n\r\n        /// <summary>\r\n        /// C# language version 7.\r\n        /// </summary>\r\n        CSharp7 = 7,\r\n\r\n        /// <summary>\r\n        /// C# language version 7.1\r\n        /// </summary>\r\n        CSharp7_1 = 701,\r\n\r\n        /// <summary>\r\n        /// C# language version 7.2\r\n        /// </summary>\r\n        CSharp7_2 = 702,\r\n\r\n```"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"6719160704","Type":"PullRequestEvent","CreatedAt":"2017-10-15T21:00:02","Actor":"hippiehunter","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4731","RelatedDescription":"Opened pull request \"added support for box/unbox/unbox_any for WASM using malloc\" (#4731) at dotnet/corert","RelatedBody":"this doesn't deal with the behavior variant where unbox.any is like cast class for a reference type"},{"Id":"6718586420","Type":"PullRequestEvent","CreatedAt":"2017-10-15T14:38:10","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4730","RelatedDescription":"Merged pull request \"Add C to IL\" (#4730) at dotnet/corert","RelatedBody":":D"},{"Id":"6718370150","Type":"PullRequestEvent","CreatedAt":"2017-10-15T12:01:03","Actor":"ShalokShalom","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4730","RelatedDescription":"Opened pull request \"Add C to IL\" (#4730) at dotnet/corert","RelatedBody":":D"},{"Id":"6718015865","Type":"PullRequestEvent","CreatedAt":"2017-10-15T06:41:46","Actor":"hippiehunter","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4729","RelatedDescription":"Opened pull request \"Added support for ldsfld/stsfld/ldsflda/ldflda including general value type support\" (#4729) at dotnet/corert","RelatedBody":"@morganbr This commit somewhat steps on/builds from #4695. For the static fields, I'm not entirely certain what the structure should be for generating the fields. It would be helpful if there were type output scaffolding in place, to make it clear where the various type level operations should be taking place."},{"Id":"6717878693","Type":"PullRequestEvent","CreatedAt":"2017-10-15T04:12:30","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4721","RelatedDescription":"Merged pull request \"Implement Shift Opcodes for WebAssembly\" (#4721) at dotnet/corert","RelatedBody":"Fixes #4523 \r\n@morganbr."},{"Id":"6717878692","Type":"IssuesEvent","CreatedAt":"2017-10-15T04:12:30","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4523","RelatedDescription":"Closed issue \"Implement shift opcodes\" (#4523) at dotnet/corert","RelatedBody":"Implement the shl, shr, and shr_un opcodes, which shift integers left and right. The method to fill in is:\r\nhttps://github.com/dotnet/corert/blob/e6d0a9398e3d8fc83d047cccda302ed13610f190/src/ILCompiler.WebAssembly/src/CodeGen/ILToWebAssemblyImporter.cs#L848"},{"Id":"6717656093","Type":"IssuesEvent","CreatedAt":"2017-10-15T00:27:59","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4525","RelatedDescription":"Closed issue \"Implement not opcode\" (#4525) at dotnet/corert","RelatedBody":"Implement the unary not opcode, which applies logical NOT to an integer. The function to fill in is (checking the opcode for ILOpcode.not)\r\nhttps://github.com/dotnet/corert/blob/e6d0a9398e3d8fc83d047cccda302ed13610f190/src/ILCompiler.WebAssembly/src/CodeGen/ILToWebAssemblyImporter.cs#L910"},{"Id":"6717647094","Type":"IssuesEvent","CreatedAt":"2017-10-15T00:19:26","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4524","RelatedDescription":"Closed issue \"Implement neg opcode\" (#4524) at dotnet/corert","RelatedBody":"Implement the unary neg opcode, which negates an integer. The function to fill in is (checking the opcod e for ILOpcode.neg)\r\nhttps://github.com/dotnet/corert/blob/e6d0a9398e3d8fc83d047cccda302ed13610f190/src/ILCompiler.WebAssembly/src/CodeGen/ILToWebAssemblyImporter.cs#L910"},{"Id":"6717647078","Type":"PullRequestEvent","CreatedAt":"2017-10-15T00:19:25","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4725","RelatedDescription":"Merged pull request \"Implement neg (float/integer) and not IL instructions. Fixes #4524 and #4525\" (#4725) at dotnet/corert","RelatedBody":"I took some time to implement the neg and not opcode. I also added support to float for neg op because I noticed a BuildFNeg method was available. I don't really know if this it's correct.\r\nJust let me know if this can help you guys ;)"},{"Id":"6717620414","Type":"PullRequestEvent","CreatedAt":"2017-10-14T23:53:22","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4728","RelatedDescription":"Merged pull request \"Merge nmirror to master\" (#4728) at dotnet/corert","RelatedBody":""},{"Id":"6717383997","Type":"PullRequestEvent","CreatedAt":"2017-10-14T20:33:11","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4728","RelatedDescription":"Opened pull request \"Merge nmirror to master\" (#4728) at dotnet/corert","RelatedBody":""},{"Id":"6717383662","Type":"PullRequestEvent","CreatedAt":"2017-10-14T20:32:54","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4727","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#4727) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6717381560","Type":"PullRequestEvent","CreatedAt":"2017-10-14T20:31:19","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4727","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#4727) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6717350402","Type":"PullRequestEvent","CreatedAt":"2017-10-14T20:07:52","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4726","RelatedDescription":"Merged pull request \"Delete EnvironmentAugments.GetEnvironmentVariables\" (#4726) at dotnet/corert","RelatedBody":"Port https://github.com/dotnet/coreclr/pull/14500"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"918494723425406976","CreatedAt":"2017-10-12T15:13:01+00:00","UserScreenname":"dotnet","Text":"So many fantastic #dotnetconf sessions this year! Check them out on-demand on @ch9 https://t.co/aFDC9i36Lu https://t.co/diQ3nfOU5p","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":106,"FavoriteCount":68,"RawContent":null},{"Id":"917994173541777409","CreatedAt":"2017-10-11T06:04:01+00:00","UserScreenname":"dotnet","Text":".NET Framework October 2017 Security and Quality Rollup https://t.co/MRrH6YjXGy","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":27,"FavoriteCount":21,"RawContent":null},{"Id":"916703209548214272","CreatedAt":"2017-10-07T16:34:11+00:00","UserScreenname":"dotnet","Text":"Join @terrajobst at his fire place for a story about .NET Standard versioning. https://t.co/8JAOGpk0Pm","Source":"<a href=\"http://twitter.com/#!/download/ipad\" rel=\"nofollow\">Twitter for iPad</a>","RetweetCount":49,"FavoriteCount":27,"RawContent":null}]}},"RunOn":"2017-10-16T05:30:18.0476435Z","RunDurationInMilliseconds":6781}