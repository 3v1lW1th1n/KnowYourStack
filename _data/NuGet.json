{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"co-authored by Scott Bommarito\nAt Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"It’s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"11532462620","Type":"IssuesEvent","CreatedAt":"2020-02-17T05:19:19","Actor":"heaths","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7848","RelatedDescription":"Opened issue \"Can't publish symbols because name collision on nuget.org\" (#7848) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nI can no longer publish symbols on nuget.smbsrc.net because someone published (and later delisted) a package with the same name.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Download MSI nupkg from https://dev.azure.com/heaths/public/_build/results?buildId=210&view=artifacts&type=publishedArtifacts\r\n2. Regenerate my key (it had expired), copy it, and try to publish to wither www.nuget.org (either package or symbol package) or nuget.smbsrc.net (symbol package).\r\n\r\n### Expected behavior\r\nI can publish the symbol package.\r\n\r\n### Actual behavior\r\nI get an HTTP 403 error. Seems someone published https://www.nuget.org/packages/msi, which is the name of my package for powershellgallery.com. I've been publishing symbols this way for a while, but no longer can because of a name collision on nuget.org. There was never a need to publish the package to nuget.org (it's a PowerShell module). Seems authentication and authorization shouldn't necessarily be tied together. Is there some other way?\r\n\r\n### Additional context\r\nAdd any other context about the problem here."},{"Id":"11527333541","Type":"IssuesEvent","CreatedAt":"2020-02-15T21:02:12","Actor":"robertmuehsig","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7847","RelatedDescription":"Opened issue \"Accessibility: Color-Contrast too low on package page\" (#7847) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\nI played around with [Accessibility Insights](https://accessibilityinsights.io/) and tried it on NuGet.org. The site seems (at least from the \"Fast pass\") quite good regarding accessibility, but the color on the package page for the currently released package is too low.\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. On this URL 'https://www.nuget.org/packages/Newtonsoft.Json/'\r\n2. Perform this operation 'FastPass with https://accessibilityinsights.io/'\r\n3. See error\r\n\r\n### Expected behavior\r\n\"Congratulations!\r\nNo failed automated checks were found.\"\r\n\r\n### Screenshots\r\n![image](https://user-images.githubusercontent.com/756703/74595115-19d7f800-503e-11ea-8730-fb319a456680.png)\r\n\r\n### Additional context\r\nThe link color and the background color (this blue-ish color) are problematic. I'm not sure if this combination is used on other pages as well. I would guess that the best fix would be to change the background color of the \"bg-info\" class. \r\n\r\nI could try to find a color combination, but I guess there is not \"right\" or \"wrong\", but if you would like that I should try something just give me a comment here. :)"},{"Id":"11524077052","Type":"IssuesEvent","CreatedAt":"2020-02-14T23:11:34","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7657","RelatedDescription":"Closed issue \"[Epic] Improve search results for Visual Studio (VS) client\" (#7657) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11516030661","Type":"PullRequestEvent","CreatedAt":"2020-02-14T03:23:36","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7846","RelatedDescription":"Merged pull request \"Removed some hot path logs\" (#7846) at NuGet/NuGetGallery","RelatedBody":"This was logging *every* time a search service request was sent. This line alone produces 500k-1m log lines per hour and duplicates the `dependencies` logging that is populated automatically."},{"Id":"11515829266","Type":"PullRequestEvent","CreatedAt":"2020-02-14T02:37:00","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7846","RelatedDescription":"Opened pull request \"Removed some hot path logs\" (#7846) at NuGet/NuGetGallery","RelatedBody":"This was logging *every* time a search service request was sent. This line alone produces 500k-1m log lines per hour and duplicates the `dependencies` logging that is populated automatically."},{"Id":"11515216646","Type":"PullRequestEvent","CreatedAt":"2020-02-14T00:23:38","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7845","RelatedDescription":"Merged pull request \"Sign Owin.dll\" (#7845) at NuGet/NuGetGallery","RelatedBody":"The new version of the verification tools found this.\r\n\r\nAddress https://github.com/NuGet/Engineering/issues/2997"},{"Id":"11514346199","Type":"PullRequestEvent","CreatedAt":"2020-02-13T21:59:19","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7845","RelatedDescription":"Opened pull request \"Sign Owin.dll\" (#7845) at NuGet/NuGetGallery","RelatedBody":"The new version of the verification tools found this."},{"Id":"11511711692","Type":"PullRequestEvent","CreatedAt":"2020-02-13T16:40:56","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7781","RelatedDescription":"Closed pull request \"Fix grammar in verify tool message\" (#7781) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"11502625280","Type":"IssuesEvent","CreatedAt":"2020-02-12T19:28:05","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7844","RelatedDescription":"Opened issue \"Incorrect error message when PDB does not match DLL\" (#7844) at NuGet/NuGetGallery","RelatedBody":"### Describe the bug\r\n\r\nA user wants to update their .snupkg associated with an already pushed package:\r\nhttps://www.nuget.org/packages/tusdotnet/2.2.2\r\n\r\nThere is an existing .snupkg that was accepted but subsequent attempts fail with this error:\r\n\r\n> The uploaded symbols package contains one or more pdbs that are not portable.\r\n\r\nHowever upon closer investigation, the failure is not because the PDBs are portable but because the PEReader saw that the PDB and DLL do not match.\r\n\r\nI think the error is here:\r\nhttps://github.com/NuGet/NuGet.Jobs/blob/dbd927c309005b63b82c1017ff6bfcfec96434cf/src/Validation.Symbols/SymbolsValidatorService.cs#L251\r\n\r\nThis should use the error message `ValidationIssue.SymbolErrorCode_MatchingAssemblyNotFound`.\r\n\r\n### To Reproduce\r\n\r\nUpload a snupkg with a portable PDB that matches in name but does not match according to `PEReader.TryOpenAssociatedPortablePdb`.\r\n\r\n### Expected behavior\r\n\r\nThe validation should fail with a more helpful error message.\r\n\r\n### Screenshots\r\n\r\n![image](https://user-images.githubusercontent.com/94054/74369714-b2465200-4d8a-11ea-8bed-bffec4118b73.png)\r\n\r\n\r\n### Additional context\r\nAdd any other context about the problem here."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"11535059496","Type":"IssuesEvent","CreatedAt":"2020-02-17T11:27:10","Actor":"v-nancyj","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8510","RelatedDescription":"Closed issue \" [Test Failure] VS hung when reoloding solution after adding a NuGet.Config file with parsing errors \" (#8510) at NuGet/Home","RelatedBody":"## Details about Problem\r\nNuGet Version: Release-5.3.x\\5.3.0.6197\r\nVS Version: VS D16.3\\29227.100\r\nOS Version: Windows-10-Enterprise-19H1-04-01-2019\r\n\r\n## Installation steps: \r\n1. Install VS from: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=2982864&view=results\r\n2. Install NuGet Client: [\\\\\\ddfiles\\Drops\\NuGet\\Drops\\CI\\NuGet.Client\\release-5.3.x\\5.3.0.6197\\artifacts\\VS15\\NuGet.Tools.vsix](url)\r\n\r\n## Repro steps: \r\n\r\n1. Create a solution with at least 1 project (something like WPF).\r\n2. Create a NuGet.Config file having below parsing errors next to the sln file.\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n  <packageSources>\r\n    <clear />\r\n    <add key=\"NuGet.org\" value=\"https://api.nuget.org/v3/index.json\" />\r\n    <add key=\"NuGetVolatile\" value=\"https://dotnet.myget.org/F/nuget-volatile/api/v3/index.json\" />\r\n    <add key=\"dotnet-core\" value=\"https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json\" />\r\n    <add key=\"dotnet-buildtools\" value=\"https://dotnet.myget.org/F/dotnet-buildtools/api/v3/index.json\" />\r\n    <add key=\"dotnet-roslyn\" value=\"https://dotnet.myget.org/F/roslyn/api/v3/index.json\" />\r\n    <add key=\"cps\" value=\"https://vside.myget.org/F/devcore/api/v3/index.json\" />\r\n    <add key=\"dotnet-msbuild\" blalblasda=\"https://dotnet.myget.org/F/msbuild/api/v3/index.json\" />\r\n  </packageSources>\r\n  <disabledPackageSources>\r\n    <clear />\r\n  </disabledPackageSources>\r\n</configuration>\r\n```\r\n3. Reload the solution.\r\n4. Click ‘OK’ button after the below error dialog pops up.\r\n![Untitled picture](https://user-images.githubusercontent.com/20632775/63846368-3c0d8900-c9be-11e9-9869-0a989570a217.png)\r\n\r\n(I record a video for the repro steps as below)\r\n![vshang](https://user-images.githubusercontent.com/20632775/63846356-33b54e00-c9be-11e9-8307-9fac30636acb.gif)\r\n\r\n## Expected:\r\nVS will not hang after clicking the ‘OK’ button on error dialog.\r\n\r\n## Actual:\r\nVS hung after clicking the ‘OK’ button on error dialog.\r\n\r\n## Notes: \r\n1. The issue repro on VS Master branch.\r\n2. The issue is not stable, the repro rate is almost 80%. \r\n\r\n"},{"Id":"11535055447","Type":"IssuesEvent","CreatedAt":"2020-02-17T11:26:40","Actor":"v-nancyj","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/3205","RelatedDescription":"Closed issue \"[Test Failure] When Package Manager UI width is small, unable to resize left/right splitter\" (#3205) at NuGet/Home","RelatedBody":"**Repro Steps:**\n1. Create a new C# ConsoleApplication.\n2. Right-click the solution and select “Manage NuGet Packages for Solution…”.\n3. Click “Browse” tab.\n4. Resize left/right splitter.\n\n**Expected Result:**\nThe splitter can be resized left/right correctly.\n\n**Actual Result:**\nThe splitter cannot be resized left/right as below screenshot.\n![splittercan tbemovedindefaultlayout](https://cloud.githubusercontent.com/assets/20632775/17096856/f2b96800-528d-11e6-96ef-5bfd2ce16b7a.png)\n\n**Note:**\n1. The issue also repro on VS2015Update3 w/ NuGet 3.4.4.\n2. It also repro in the project level Package Manager UI for the same scenario.\n3. It don't repro after you resize the NuGet-Solution window to the right or reset the window layout. Please see attached record [SplitterCan'tBeMovedInDefaultLayout.zip](https://github.com/NuGet/Home/files/381147/SplitterCan.tBeMovedInDefaultLayout.zip).\n"},{"Id":"11533508912","Type":"IssuesEvent","CreatedAt":"2020-02-17T08:26:46","Actor":"narendra2509","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9186","RelatedDescription":"Opened issue \"NPM Install failed due to  ERR! code EMISSINGARG\" (#9186) at NuGet/Home","RelatedBody":"Please read the following information before posting the issue.\r\n\r\n## Before posting the issue...\r\n\r\n* If you're having trouble with the NuGet.org Website, please post in [NuGetGallery issues](http://github.com/nuget/nugetgallery/issues)\r\n* If you're having trouble with the NuGet client tools (the Visual Studio extension, NuGet.exe command line tool, etc.), you are in the right place.\r\n\r\nRemove the content above here and fill out details below.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (4.5.0): also checked with other versions.\r\n\r\ndotnet.exe --4.6.\r\n\r\nVS version (if appropriate): 2015, 2017\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): WS 2012\r\n\r\nWorked before? If so, with which NuGet version: worked with same version earlier.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. We have latest stable nuget package for nodejs 5.3.0 and npm 3.5.2 from last 2 year and project was running fine, all of sudden we start getting issue while build with Team city, and we have used npm install in pre build event of vs 2017.\r\nProject is running fine while we run from local and only issue comes when we build with team city.\r\nNode js and npm version is same in teamcity server and local.\r\n\r\n2. [Exec] IF EXIST D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\xxxx.Web\\node_modules\\xxxx rd /s /q  D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\xxxx.Web\\node_modules\\xxxxx &\r\nD:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\xxxx.web\\.bin\\npm install\r\n[11:49:18][Exec] npm WARN deprecated autoprefixer-loader@3.2.0: Please use postcss-loader instead of autoprefixer-loader\r\n[11:49:22][Exec] npm WARN deprecated browserslist@1.1.3: Browserslist 2 could fail on reading Browserslist >3.0 config used in other tools.\r\n[11:49:24][Exec] npm WARN deprecated core-js@2.6.11: core-js@<3 is no longer maintained and not recommended for usage due to the number of issues. Please, upgrade your dependencies to the actual version of core-js@3.\r\n[11:49:24][Exec] npm WARN deprecated core-js@1.2.7: core-js@<3 is no longer maintained and not recommended for usage due to the number of issues. Please, upgrade your dependencies to the actual version of core-js@3.\r\n[11:49:33][Exec] npm WARN deprecated gulp-header@1.8.12: Removed event-stream from gulp-header\r\n[11:49:35][Exec] npm WARN deprecated babel-preset-es2015@6.18.0: ­ƒÖî  Thanks for using Babel: we recommend using babel-preset-env now: please read https://babeljs.io/env to update!\r\n[11:49:35][Exec] npm WARN deprecated extract-text-webpack-plugin@1.0.1: Deprecated. Please use https://github.com/webpack-contrib/mini-css-extract-plugin\r\n[11:49:35][Exec] npm WARN deprecated babel@6.5.2: In 6.x, the babel package has been deprecated in favor of babel-cli. Check https://opencollective.com/babel to support the Babel maintainers\r\n[11:49:38][Exec] npm WARN deprecated array.prototype.flatten@1.2.1: This method has been renamed to \"flat\" - please use `array.prototype.flat` instead\r\n[11:49:51][Exec] npm WARN deprecated browserslist@1.7.7: Browserslist 2 could fail on reading Browserslist >3.0 config used in other tools.\r\n[11:49:53][Exec] WARN engine readable-stream@3.6.0: wanted: {\"node\":\">= 6\"} (current: {\"node\":\"5.3.0\",\"npm\":\"3.5.2\"})\r\n[11:49:55][Exec] npm WARN deprecated circular-json@0.3.3: CircularJSON is in maintenance only, flatted is its successor.\r\n[11:49:57][Exec] npm ERR! Windows_NT 6.3.9600\r\n[11:49:57][Exec] npm ERR! argv \"D:\\\\xx\\\\buildAgent5\\\\work\\\\e4360fded40c5cf8\\\\packages\\\\Node.js.5.3.0\\\\node.exe\" \"D:\\\\xx\\\\buildAgent5\\\\work\\\\e4360fded40c5cf8\\\\packages\\\\Npm.3.5.2\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\"\r\n[11:49:57][Exec] npm ERR! node v5.3.0\r\n[11:49:57][Exec] npm ERR! npm  v3.5.2\r\n[11:49:57][Exec] npm ERR! code EMISSINGARG\r\n[11:49:57][Exec] \r\n[11:49:57][Exec] EXEC Missing required argument #1\r\n[11:49:57][Exec] npm ERR! typeerror     at andLogAndFinish (D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:31:3)\r\n[11:49:57][Exec] npm ERR! typeerror     at fetchPackageMetadata (D:\\xx\\buildAgent5\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:51:22)\r\n[11:49:57][Exec] npm ERR! typeerror     at resolveWithNewModule (D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\install\\deps.js:456:12)\r\n[11:49:57][Exec] npm ERR! typeerror     at D:\\xx\\buildAgent5\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\install\\deps.js:457:7\r\n[11:49:57][Exec] npm ERR! typeerror     at D:\\xx\\buildAgent5\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\node_modules\\iferr\\index.js:13:50\r\n[11:49:57][Exec] npm ERR! typeerror     at D:\\xx\\buildAgent5\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:37:12\r\n[11:49:57][Exec] npm ERR! typeerror     at addRequestedAndFinish (D:\\xx\\buildAgent5\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:82:5)\r\n[11:49:57][Exec] npm ERR! typeerror     at returnAndAddMetadata (D:\\xx\\buildAgent5\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:117:7)\r\n[11:49:57][Exec] npm ERR! typeerror     at pickVersionFromRegistryDocument (D:\\xx\\buildAgent5\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:134:20)\r\n[11:49:57][Exec] npm ERR! typeerror     at D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\node_modules\\iferr\\index.js:13:50\r\n[11:49:57][Exec] EXEC error at: \r\n[11:49:57][Exec] npm ERR! typeerror     <http://github.com/npm/npm/issues>\r\n[11:49:57][Exec] npm ERR! Windows_NT 6.3.9600\r\n[11:49:57][Exec] npm ERR! argv \"D:\\\\xx\\\\buildAgent5\\\\work\\\\e4360fded40c5cf8\\\\packages\\\\Node.js.5.3.0\\\\node.exe\" \"D:\\\\xx\\\\buildAgent5\\\\work\\\\e4360fded40c5cf8\\\\packages\\\\Npm.3.5.2\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js\" \"install\"\r\n[11:49:57][Exec] npm ERR! node v5.3.0\r\n[11:49:57][Exec] npm ERR! npm  v3.5.2\r\n[11:49:57][Exec] npm ERR! code EMISSINGARG\r\n[11:49:57][Exec] \r\n[11:49:57][Exec] EXEC Missing required argument #1\r\n[11:49:57][Exec] npm ERR! typeerror     at andLogAndFinish (D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:31:3)\r\n[11:49:57][Exec] npm ERR! typeerror     at fetchPackageMetadata (D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:51:22)\r\n[11:49:57][Exec] npm ERR! typeerror     at resolveWithNewModule (D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\install\\deps.js:456:12)\r\n[11:49:57][Exec] npm ERR! typeerror     at D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\install\\deps.js:457:7\r\n[11:49:57][Exec] npm ERR! typeerror     at D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\node_modules\\iferr\\index.js:13:50\r\n[11:49:57][Exec] npm ERR! typeerror     at D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:37:12\r\n[11:49:57][Exec] npm ERR! typeerror     at addRequestedAndFinish (D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:82:5)\r\n[11:49:57][Exec] npm ERR! typeerror     at returnAndAddMetadata (D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:117:7)\r\n[11:49:57][Exec] npm ERR! typeerror     at pickVersionFromRegistryDocument (D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\lib\\fetch-package-metadata.js:134:20)\r\n[11:49:57][Exec] npm ERR! typeerror     at D:\\xx\\buildagentxxx\\work\\e4360fded40c5cf8\\packages\\Npm.3.5.2\\node_modules\\npm\\node_modules\\iferr\\index.js:13:50\r\n[11:49:57][Exec] EXEC error at: \r\n\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\nCould you please let us know how we can resolve, as most of the places we see resolution as upgrade node and npm but we are using nuget package and this is latest stable version available.\r\n\r\nThanks"},{"Id":"11530898098","Type":"IssuesEvent","CreatedAt":"2020-02-16T21:25:47","Actor":"mrpaulreed","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9185","RelatedDescription":"Opened issue \"packages element with xmlns set makes the nuget discover process find nothing.\" (#9185) at NuGet/Home","RelatedBody":"NuGet product used (Package Manager Console):Package Manager Console\r\n\r\nNuGet version (x.x.x.xxx):Package Manager Console Host Version 5.4.0.6292\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate): VS2019 Community Edition\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):Win 10\r\n\r\n---------------------\r\n\r\n1. with a nuget based web project there is a packages.config file produced. PackagesReferences are not allowed on this project type.\r\n\r\n2. My packages.config file has been altered to give this front tag:\r\n\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<packages xmlns=\"urn:packages\">\r\n... <package id=...  references inside in the normal way. >\r\n</packages>\r\n\r\n2. Using the xmlns attribute/property removes the nag of the message: \"The packages element is not declared\" in build output.\r\n\r\n3. Unfortunately this breaks the ability to detect packages in the project for nuget.\r\n\r\nQ: Could you fix the detector part of the code to ignore the inner attributes of the \"packages\" tag.\r\n"},{"Id":"11527185311","Type":"IssuesEvent","CreatedAt":"2020-02-15T20:02:45","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/9157","RelatedDescription":"Closed issue \"Accessibility Fixes in PM UI\" (#9157) at NuGet/Home","RelatedBody":"## batch 3\r\n- [994456](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/994456) - PackageDetail - Tags - A11y_NuGetClient-MinorUIChanges_TestPackageDeprecationOther_ScreenReader : Narrator does not announces \"Blank\" for the blank field.\r\n- [994459](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/994459) - PackageDetail - A11y_NuGetClient-MinorUIChanges_TestPackage.Deprecation.Other_Installed_ScreenReader : Narrator is annoucing \"Dependencies\" for \"No Dependencies\" text.\r\n\r\n## batch 4\r\n- [994452](https://devdiv.visualstudio.com/DevDiv/_queries/edit/994452) - PackageItem - A11y_NuGetClient-MinorUIChanges_Browse_ScreenReader : Screen reader focus is not going on the  \"version and Package Description\" text.\r\n\r\n## batch 5\r\n-[1049215](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1049215) - PackageDetail -nuget.org link- A11y_VS ASP.NET and Web Development_ Install Nuget Packages _ Screen Reader: Narrator is not reading the link text for “nuget.org” link\r\n-[994495](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/994495) - PackageDetail - LicenseUI - A11y_NuGetClient-MinorUIChanges_TestPackage.Deprecation.CriticalBugs.AlternatePackage_Installed_ScreenReader : Narrator is not announcing the label association for the \"MIT\" link."},{"Id":"11524757764","Type":"IssuesEvent","CreatedAt":"2020-02-15T02:41:40","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9184","RelatedDescription":"Opened issue \"[CPVM] Increase test coverage\" (#9184) at NuGet/Home","RelatedBody":"- public static ProjectStyle? GetProjectRestoreStyleFromProjectProperty(string restoreProjectStyleProperty)\r\n- CentralPackageVersion ctor (null arg checks)\r\n- internal class MSBuildItemIdentityComparer : IEqualityComparer<IMSBuildItem>\r\n- JsonPackageSpecReader.cs  ->  PopulateCentralDependencies\r\n- Add/update tests in test\\NuGet.Core.Tests\\NuGet.ProjectModel.Test\\ProjectRestoreMetadataTests.cs\r\n- Add/update tests on LibraryDependencyTests.cs.\r\n- MSBuildProjectItemInstance.Properties\r\n- Update the test TargetFrameworkInformationCloneTest to verify the CentralPackageVersions property.\r\n\r\n"},{"Id":"11524720426","Type":"IssuesEvent","CreatedAt":"2020-02-15T02:23:05","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9183","RelatedDescription":"Opened issue \"Continue Refactoring and Reduction of XAML in the PMUI\" (#9183) at NuGet/Home","RelatedBody":"Recent changes to improve a11y in our PMUI have lead to some refactoring and reduction of code (eg, FilterLabel.xaml is gone), but perhaps more could be done. For example, in [this PR (3238)](https://github.com/NuGet/NuGet.Client/pull/3238), I split Consolidate Tab into properties in the .xaml.cs of the Top Panel, and am having to duplicate all the XAML properties in C#. Probably more elegant solutions exists here."},{"Id":"11524461822","Type":"PullRequestEvent","CreatedAt":"2020-02-15T00:42:55","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/9182","RelatedDescription":"Opened pull request \"Add spec for CPVM updates in VS\" (#9182) at NuGet/Home","RelatedBody":""},{"Id":"11523201078","Type":"IssuesEvent","CreatedAt":"2020-02-14T20:42:03","Actor":"rrelyea","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/NuGet/Home/issues/9157","RelatedDescription":"Reopened issue \"Accessibility Fixes in PM UI\" (#9157) at NuGet/Home","RelatedBody":"## batch 3\r\n- [994456](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/994456) - PackageDetail - Tags - A11y_NuGetClient-MinorUIChanges_TestPackageDeprecationOther_ScreenReader : Narrator does not announces \"Blank\" for the blank field.\r\n- [994459](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/994459) - PackageDetail - A11y_NuGetClient-MinorUIChanges_TestPackage.Deprecation.Other_Installed_ScreenReader : Narrator is annoucing \"Dependencies\" for \"No Dependencies\" text."},{"Id":"11522926250","Type":"IssuesEvent","CreatedAt":"2020-02-14T20:00:48","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/3389","RelatedDescription":"Closed issue \"Caching of version lists leads to not seeing a new package version for 30 minutes\" (#3389) at NuGet/Home","RelatedBody":"Talked to @pranavkm offline about this one.\n\nCurrently, we cache the following resources for 30 minutes in the HTTP cache (`v3-cache` directory):\n1. Flat container index.json, in `HttpFileSystemBasedFindPackageByIdResource`\n2. V2 `FindPackagesById()` OData endpoint, in `RemoteV2FindPackageByIdResource`\n\nNote that `RemoteV3FindPackageByIdResource` (unused if the V3 server has a flat container resource) does not cache version lists.\n\nThe current workaround is using `-NoCache` (although `-NoCache` has its own problems). We could be clever with etags (if supported by the source) or even by not caching version lists and only caching .nupkgs.\n\nAnother interesting angle here is that since HTTP cache entries have there own cache timeout, it's possible for version lists of transitive dependencies to cache timeout before direct dependencies. Suppose A 1.0 depends on B 1.0. Then A 2.0 and B 2.0 are published to the source. If the cache timeout of the B version list is _after_ the A version list, you could mysteriously (to the user) not be able to find A 2.0's B dependency.\n"},{"Id":"11522583852","Type":"IssuesEvent","CreatedAt":"2020-02-14T19:12:50","Actor":"softlion","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/9181","RelatedDescription":"Opened issue \"IVsPackageInstallerServices.IsPackageInstalled  returns false on 1st call\" (#9181) at NuGet/Home","RelatedBody":"## Details about Problem\r\nIn an AsyncPackage visual studio extension, this code detects if the Xamarin Forms nuget is installed when a xaml file is focused.\r\nThe code works fine except the 1st time it is called. It was tracked down to IsPackageInstalled which returns ... false.\r\n\r\nI suppose there is some async work taking place in the nuget component, which needs to load the nugets installed in the current project, and on the 1st call of IsPackageInstalled this initialization step is not finished. This is 100% guess.\r\n\r\n```csharp\r\nvar dte = await vsPackage.GetServiceAsync<DTE,DTE2>();\r\nvar nugetService = componentModelService.GetService<IVsPackageInstallerServices>();\r\n\r\n\r\nvoid OnWindowActivated(Window focus)\r\n{\r\n  if(focus.Document?.Name.ToLowerInvariant().EndsWith(\".xaml\") == true)\r\n  {\r\n     var installed = nugetService.IsPackageInstalled(focus.Project, \"Xamarin.Forms\")\r\n     //RESULT: FALSE on 1st call, even if the package is installed\r\n   }\r\n}\r\n\r\ndte.Events.WindowEvents.WindowActivated += (focus, lostFocus) => OnWindowActivated(focus);\r\n\r\n```\r\n\r\nNuGet product used: NuGet.VisualStudio nuget package\r\nNuGet versions: 5.4.0 and 5.5.0-preview.2.6382\r\nVS version : Version 16.4.5\r\nOS version: Windows  10.0.18363.657\r\n\r\n\r\n## Other suggested things\r\n\r\nI can zip a repro project to someone.\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11502675218","Type":"IssuesEvent","CreatedAt":"2020-02-12T19:33:43","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/41","RelatedDescription":"Opened issue \"Support pre-release packages with floating versions\" (#41) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Support pre-release packages with floating versions](https://github.com/NuGet/Home/wiki/Support-pre-release-packages-with-floating-versions) | https://github.com/NuGet/Home/issues/912|"},{"Id":"11467027718","Type":"IssuesEvent","CreatedAt":"2020-02-08T01:39:00","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/40","RelatedDescription":"Opened issue \"Add nuget sources command to the dotnet CLI\" (#40) at NuGet/Announcements","RelatedBody":"|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Add nuget sources command to the dotnet CLI](https://github.com/NuGet/Home/wiki/Add-nuget-sources-command-to-the-dotnet-CLI) | https://github.com/NuGet/Home/issues/4126|"},{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1219766107269025792","CreatedAt":"2020-01-21T23:37:56+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfdOWi package publishing is currently facing technical difficulty and new packages pushed to… https://t.co/4E67LHHnbI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":2,"FavoriteCount":2,"RawContent":null},{"Id":"1204812404573392897","CreatedAt":"2019-12-11T17:17:16+00:00","UserScreenname":"nuget","Text":"We are currently experiencing CDN issues in a few geographies.  https://t.co/F9kiKfdOWi services like package resto… https://t.co/0ZVMeF11CW","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":10,"FavoriteCount":8,"RawContent":null},{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We are… https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2020-02-18T05:30:47.1257774Z","RunDurationInMilliseconds":2788}