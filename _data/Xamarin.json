{"Data":{"Blog":{"FeedItems":[{"Title":"Grial UI Kit: Building Beautiful Xamarin.Forms Apps, Faster","PublishedOn":"2019-06-12T17:07:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was guest authored and contributed by Leonardo Viacava. Leo is co-founder and CTO of UXDivers, creators of Grial UI Kit and Gorilla Player. UXDivers specializes in designing and coding...","Href":"https://devblogs.microsoft.com/xamarin/grial-ui-kit-xamarin-forms/","RawContent":null},{"Title":"Join Microsoft Teams at Xamarin Developer Summit","PublishedOn":"2019-06-10T16:54:04+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"On July 11-12th, the community-run Xamarin Developer Summit is set to launch in Houston, Texas. The two-day conference is packed full of amazing Xamarin content, covering a wide range of mobile...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-developer-summit/","RawContent":null},{"Title":"Use Maps to Display and Navigate Users with Xamarin.Essentials","PublishedOn":"2019-06-07T16:26:32+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"A common scenario for mobile apps is to help their users get to a specific location. This may be a restaurant, office, or the trailhead for the most amazing hike in the pacific northwest. We can...","Href":"https://devblogs.microsoft.com/xamarin/maps-navagation-xamarin-essentials/","RawContent":null},{"Title":"CheckBox with Xamarin.Forms 4.1.0 Pre-Release","PublishedOn":"2019-06-05T19:34:55+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Just a few weeks ago we shipped Xamarin.Forms 4.0, which introduced the new Shell navigation for quickly bootstrapping your applications. As well as image source unification to make it convenient to...","Href":"https://devblogs.microsoft.com/xamarin/checkbox-xamarin-forms-4-1-0-pre-release/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in June","PublishedOn":"2019-06-03T18:50:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Jumpstart your next mobile development projects by networking with your local community and getting the latest updates about Xamarin and .NET related technologies. Discover upcoming developer events...","Href":"https://devblogs.microsoft.com/xamarin/june-developer-events-xamarin-dotnet/","RawContent":null},{"Title":"Customer Showcase: BBVA – Augmented Reality House Hunting","PublishedOn":"2019-05-31T16:14:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We recently launched a case study series with invited customers to explore their applications using various Microsoft technologies that address business needs. In this post, we look at Valora View, a...","Href":"https://devblogs.microsoft.com/xamarin/bbva-xamarin-customer-showcase/","RawContent":null},{"Title":"Preparing Android Apps for Google Play’s 64-bit Requirements","PublishedOn":"2019-05-29T18:34:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The introduction of Android 5.0 back in 2014 brought official support for 64-bit CPUs. This is a great advancement in Android as 64-bit CPUs deliver great performance improvements for all users...","Href":"https://devblogs.microsoft.com/xamarin/64-bit-requirements-xamarin-android-apps/","RawContent":null},{"Title":"Xamarin.Forms 4.0: Getting Started with Shell","PublishedOn":"2019-05-28T19:16:30+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"Xamarin.Forms 4.0 introduced amazing new features to help streamline development when building beautiful mobile apps with C#. The main highlight was the new Xamarin.Forms Shell, which seeks to reduce...","Href":"https://devblogs.microsoft.com/xamarin/shell-xamarin-forms-4-0-getting-started/","RawContent":null},{"Title":"Welcome to the Shell Era: Xamarin.Forms 4.0 Released","PublishedOn":"2019-05-21T16:10:44+00:00","CommentsCount":10,"FacebookCount":0,"Summary":"For the past year, Xamarin has been on a focused journey to improve your productivity by reducing your complexity when building cross-platform mobile applications. Notice the reference to...","Href":"https://devblogs.microsoft.com/xamarin/introducing-xamarin-forms-4-0-the-era-of-shell/","RawContent":null},{"Title":"Managing HTTP & Cleartext Traffic on Android with Network Security Configuration","PublishedOn":"2019-05-17T18:40:55+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Did you know that starting with Android 9 (API level 28) cleartext(non-HTTPS) support is disabled by default? It is always recommended to make connections over HTTPS to ensure that any web...","Href":"https://devblogs.microsoft.com/xamarin/cleartext-http-android-network-security/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9819296978","Type":"PullRequestEvent","CreatedAt":"2019-06-13T21:34:24","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3221","RelatedDescription":"Opened pull request \"[build] Clean Azure Pipeline workspaces\" (#3221) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/3205\r\nContext: https://github.com/microsoft/azure-pipelines-agent/issues/2301\r\n\r\nWe've been occasionally encountering a Windows build failure that we\r\nbelieve to be caused by having an unclean checkout on certain machines.\r\nPreviously, we had attempted to recursively clean our source checkout\r\nthrough the Azure Pipeline checkout task options. However upon further\r\ninvestigation, it appears that a 'git clean -ffdx' only occurs at the\r\nroot level of our repository, and the root level of every submodule. The\r\nclean parameter associated with the checkout task does not recurse into\r\nsubmodules of submodules. To address this, we'll attempt to clean out\r\nour workspace entirely before each build. This may add a bit of time to\r\nour checkout step, but it should ensure that we are always starting from\r\na completely clean state.\r\n\r\nA 'name' parameter has also been added to the pipeline to improve the\r\nbuild number naming schema from something date based (e.g. '20190613.14'),\r\nto something to branch and hash based (e.g.\r\n'refs_heads_master-c4c8ce4755f8dd25bc5f4e2c2f7e686fbedf2cd1-1' or\r\n'refs_pull_7_merge-eed46ff9c22217a959c60574bab473afc2d8557d-1')."},{"Id":"9819146470","Type":"IssuesEvent","CreatedAt":"2019-06-13T21:08:16","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2521","RelatedDescription":"Closed issue \"[armv7][aot][llvm] App crashes on startup in AndroidTypeManager.RegisterNativeMembers\" (#2521) at xamarin/xamarin-android","RelatedBody":"This issue occurs currently on master and on the d16-0-p2 branch.\r\n\r\n- Issue doesn't happen when disabling aot\r\n- On my slightly older version of master (9.1.199.12), disabling llvm works as well. However, I couldn't test on an updated master, since AOT compilation without llvm seems to crash right now.\r\n- Everything works properly if you run arm64-v8a instead.\r\n- The crash occurs inside C# code, but doesn't trigger an exception (as can be seen in the logs below), which leads me to believe that the llvm generated code is wrong. I've taken the liberty of disassembling the function and including it here\r\n[disassembly.txt](https://github.com/xamarin/xamarin-android/files/2669680/disassembly.txt)\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new Single-View App\r\n2. Disable Shared Runtime, Activate AOT+LLVM and build only for armeabi-v7a (You can use [App3.zip](https://github.com/xamarin/xamarin-android/files/2669629/App3.zip) )\r\n3. Build and run (armeabi-v7a or arm64-v8a device, doesn't matter, as long as only armv7 is built)\r\n4. Notice the crash\r\n\r\n### Expected Behavior\r\n\r\nApp actually starts\r\n\r\n### Actual Behavior\r\n\r\nApp crashes\r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.9.3\r\nVisualStudio.15.Release/15.9.3+28307.145\r\nMicrosoft .NET Framework\r\nVersion 4.7.03062\r\n\r\nInstalled Version: Professional\r\n\r\nVisual C++ 2017   00370-20007-36350-AA982\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.14.11009.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nCookiecutter   15.9.18254.1\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nEclipseAndroidImporter   1.0\r\nImport Android projects from Eclipse.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.13.11-pre (400cfb1)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   15.9.18254.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Django support   15.9.18254.1\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support   15.9.18254.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   15.9.18254.1\r\nProfiling support for Python projects.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61810.11040\r\nMicrosoft SQL Server Data Tools\r\n\r\nTest Adapter for Boost.Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Boost.Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTest Adapter for Google Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTypeScript Tools   15.9.20918.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.28107.00\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual C++ for Cross Platform Mobile Development (iOS)   15.0.28016.00\r\nVisual C++ for Cross Platform Mobile Development (iOS)\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Unity   3.9.0.3\r\nVisual Studio Tools for Unity\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28301.59\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.12.3.73 (d15-9@20b35b881)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.16.5 (6b9f32067)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.127 (e975299)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.199.12 (HEAD/dd498d2)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n    Mono: mono/mono/2018-06@b63e5378e38\r\n    Java.Interop: xamarin/java.interop/master@6dd6f16\r\n    LibZipSharp: grendello/LibZipSharp/master@d695149\r\n    LibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\n    MXE: xamarin/mxe/xamarin@b9cbb535\r\n    ProGuard: xamarin/proguard/master@905836d\r\n    SQLite: xamarin/sqlite/3.25.2@4ea4c69\r\n    Xamarin.Android Tools: xamarin/xamarin-android-tools/master@9e78d6e\r\n\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.11 (5ef73d3)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log File\r\n\r\nLogs for the run (this was done using d16-0-p2 branch for test, but it also occurs on master)\r\n[logs.txt](https://github.com/xamarin/xamarin-android/files/2669642/logs.txt)\n\n> VS bug [#782589](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/782589)"},{"Id":"9818668940","Type":"PullRequestEvent","CreatedAt":"2019-06-13T19:52:21","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3220","RelatedDescription":"Opened pull request \"[monodroid] Get rid of mono_profiler_install_thread\" (#3220) at xamarin/xamarin-android","RelatedBody":"Do not load that symbol anymore. Also replace the\r\n`DylibMono::profiler_install_thread` method with the callback methods\r\nand use these directly.\r\n\r\nLeft the\r\n\r\n    monodroid_mono_profiler_install_thread_fptr mono_profiler_install_thread;\r\n\r\nin DylibMono struct to preserve the binary compatability (preserve\r\nstruct order). This will vanish once we get rid of the whole\r\nDylibMono."},{"Id":"9818463552","Type":"PullRequestEvent","CreatedAt":"2019-06-13T19:18:59","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3215","RelatedDescription":"Merged pull request \"Fix debian build\" (#3215) at xamarin/xamarin-android","RelatedBody":"Debian packaging process doesn't work well with native PE executables, trying to\r\nprocess them with `ikdasm` in order to extract dependencies of the executable.\r\nTo make builds possible, remove all the Windows GNU Assemblier (`*-as.exe`)\r\nexecutables, as well as any instances of `libzip.dll`, before packaging."},{"Id":"9818426066","Type":"PullRequestEvent","CreatedAt":"2019-06-13T19:13:01","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3201","RelatedDescription":"Merged pull request \"[installer] restore missing XML documentation files\" (#3201) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/3197\r\n\r\n`xbuild-frameworks\\MonoAndroid\\v9.0\\Mono.Android.xml` was missing from\r\nour VSIX installer. This file is only needed on Windows.\r\n\r\nLooking at the code:\r\n\r\n    <_FrameworkFilesWin Include=\"$(FrameworkSrcDir)\\v8.1\\Mono.Android.xml\" />\r\n    <_FrameworkFilesWin Include=\"$(FrameworkSrcDir)\\$(AndroidLatestFrameworkVersion)\\Mono.Android.xml\" />\r\n\r\n`$(AndroidLatestFrameworkVersion)` changed to `v9.0.99`, which caused\r\nthis issue.\r\n\r\nLooking further, there was some more things that could be cleaned up:\r\n\r\n* A few files were listed using `$(FirstInstallerFrameworkVersion)`,\r\n  such as `$(FrameworkSrcDir)\\$(FirstInstallerFrameworkVersion)\\*`.\r\n  These were duplicate from what the `ConstructInstallerItems` target\r\n  was looking up.\r\n* We should make a `$(_HasCommercialFiles)` property\r\n* We can add the `*.xml` files on Windows if `$(_HasCommercialFiles)`\r\n  is set in `ConstructInstallerItems`, such as:\r\n  `@(_FrameworkDirsThatExist->'%(Identity)\\Mono.Android.xml')`\r\n\r\nAs for the other missing XML files, we can list each one under the\r\n`$(_HasCommercialFiles)` section.\r\n\r\nThere are also some changes needed in monodroid, I bumped to\r\nxamarin/monodroid@a4a3a8d\r\n\r\nChanges: https://github.com/xamarin/monodroid/compare/473ef2d...a4a3a8d"},{"Id":"9818346335","Type":"PullRequestEvent","CreatedAt":"2019-06-13T19:00:26","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3219","RelatedDescription":"Opened pull request \"[tests] Exclude additional tests\" (#3219) at xamarin/xamarin-android","RelatedBody":"Exclude two categories of tests:\r\n\r\n 1. `Mono.Unix.Native.SocketTest` tests, which started failing in\r\n    commit ce4eeb4f with the bump to mono/mono/2019-02@c6edaa62.\r\n\r\n 2. Some tests which the Xamarin.iOS team flagged as a frequent cause\r\n    of `OutOfMemoryException`-related errors.\r\n\r\nIn order to better support (2), update `XUnitTestRunner.IsIncluded()`\r\nto support \"class-based\" test exclusions.  Similar to 333b98b3 and the\r\n\"Unit test exclusion\" section, extend `XUnitFilterType.TypeName`\r\nchecking so that if a test name starts with an excluded name followed\r\nby a `.`, the test is also skipped.  This allows excluding tests by\r\nonly providing the class name that contains the tests."},{"Id":"9818337649","Type":"PullRequestEvent","CreatedAt":"2019-06-13T18:59:06","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3218","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Thrown an exception while enabling \"AndroidUseAapt2\" in application.\" (#3218) at xamarin/xamarin-android","RelatedBody":"Fixes #3123\r\n\r\nCommit 373c6ed0 added a new `_ConvertCustomView` target to\r\nhandle the conversion of custom view to the md5 hash versions.\r\nWhile it worked *most* of the time, there was a very specific\r\narea where it was not fixing up the custom views.\r\n\r\nThis problem only occurs when a library project code is updated.\r\nWhen happens next is when the main app builds the library\r\nresources are then re-extracted to the\r\n`$(IntermediateOutputPath)lp\\XX\\ji\\res` directory. The\r\n`ConvertResorucesCases` task is then run to fixup those `res`\r\nfiles with the correct casing. After than `GenerateJavaStubs`\r\nis then also run, this is because the library project was\r\nupdated.\r\n\r\nHowever at this point the wheels fall of the wagon because\r\n`_ConvertCustomViews` does NOT run. this is because it\r\nis only using the following inputs.\r\n\r\n\t`$(_CustomViewMapFile);$(_AcwMapFile)`\r\n\r\nNeither of these files are updated in this instance. The\r\nacwmap file will only be updated if a class or namespace\r\nare changed. If code within a class is changed nothing the\r\nthe acwmap will need to be updated, so we don't update the\r\nfile.\r\n\r\nThe `$(_CustomViewMapFile)` also does not be updated unless\r\nresources are added or removed. So that doesn't change either.\r\nThe result is the target is skipped, and we end up with a\r\ncustom view which does NOT have the correct md5 hash. This\r\nresults in the following error at runtime.\r\n\r\n\tAndroid.Views.InflateException: Binary XML file line #1: Binary XML file line #1: Error inflating class InflatedLibrary.CodeBehindClass occurred\r\n\r\nThe fix in this case is to update the Inputs of the `_ConvertCustomView`\r\ntarget to have the following\r\n\r\n\t`$(_CustomViewMapFile);$(_AcwMapFile);@(_AndroidResourceDest);@(_LibraryResourceDirectoryStamps)`\r\n\r\nBy including these two extra items we can make sure the target\r\nruns if either an app resource is updated or if a library\r\nproject is updated.\r\n\r\nA unit test has been updated to test for this particular issue."},{"Id":"9817690450","Type":"PullRequestEvent","CreatedAt":"2019-06-13T17:21:22","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3217","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix for abi delimiters\" (#3217) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/commit/901dba8cf03e65789f160927e8576c77924b13ff\r\nContext: https://github.com/xamarin/xamarin-android/commit/decfbccf3e99449c9a8d6afef113c9339f1bc85b\r\n\r\nIn decfbcc, we broke support for `,` and `%3b` as delimiters for\r\n`$(AndroidSupportedAbis)`. We did not have a test checking for these\r\ncases.\r\n\r\nI fixed this in 901dba8c, but the diff was too large to be deemed\r\n\"safe\" for 16.2 at this point in time.\r\n\r\nA one-line patch to fix the issue is this MSBuild incantation:\r\n\r\n    <_XARuntimeArchitecture Include=\"$([MSBuild]::Unescape($(_BuildTargetAbis.Replace(',', ';'))))\"/>\r\n\r\nWe replace the `,` with `;` -- which gets escaped to `%3b`. The\r\n`[MSBuild]::Unescape` call converts `%3b` back to `;`.\r\n\r\nThis also supports `%3b`."},{"Id":"9817394718","Type":"IssuesEvent","CreatedAt":"2019-06-13T16:36:58","Actor":"muhaym","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3216","RelatedDescription":"Opened issue \"Android HttpClient implementation in .NET Standard Project throwing Java Exception\" (#3216) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Set the AndroidHttpClientHandlerType to Xamarin.Android.Net.AndroidClientHandler\r\n![image](https://user-images.githubusercontent.com/10905479/59449402-9a49b780-8e24-11e9-8f4f-9e1cabbb924f.png)\r\n\r\n2. Replicate poor internet or no internet case using emulator / device\r\n\r\nDifferent exception thrown will be like\r\n```json\r\n\"type\": \"Java.IO.IOException\", \"message\": \"Read error: ssl=0x7f83263840: Failure in SSL library, usually a protocol error\\nerror:100000d7:SSL routines:OPENSSL_internal:SSL_HANDSHAKE_FAILURE (external/boringssl/src/ssl/s3_pkt.c:402 0x7f9f35fe7e:0x00000000)\", \"stackTrace\": \" at Java.Interop.JniEnvironment+InstanceMethods.CallIntMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x00069] in <6daf52cf652e4e32ad801c3e8a5bbdb4>:0 \\n at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeVirtualInt32Method (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) <0x7f90edfc54 + 0x0008f> in <6daf52cf652e4e32ad801c3e8a5bbdb4>:0 \\n at Java.Net.HttpURLConnection.get_ResponseCode () <0x7f8867b88c + 0x00057> in <b38bd7d2b7b64973840f6a5f661d159b>:0 \\n at Xamarin.Android.Net.AndroidClientHandler+<>c__DisplayClass45_0.<DoProcessRequest>b__1 () <0x7f884f5d10 + 0x00017> in <b38bd7d2b7b64973840f6a5f661d159b>:0 \\n at System.Threading.Tasks.Task`1[TResult].InnerInvoke () [0x0000f] in <ddff213794e94e648b95c7facad6817d>:0 \\n at System.Threading.Tasks.Task.Execute () <0x7f890417d8 + 0x0001f> in <ddff213794e94e648b95c7facad6817d>:0 \\n--- End of stack trace from previous location where exception was thrown ---\\n at Xamarin.Android.Net.AndroidClientHandler+<DoProcessRequest>d__45.MoveNext () [0x0036c] in <b38bd7d2b7b64973840f6a5f661d159b>:0 \\n--- End of stack trace from previous location where exception was thrown ---\\n at Xamarin.Android.Net.AndroidClientHandler+<SendAsync>d__40.MoveNext () <0x7f884f53b0 + 0x0028f> in <b38bd7d2b7b64973840f6a5f661d159b>:0 \\n--- End of stack trace from previous location where exception was thrown ---\\n at System.Net.Http.HttpClient+<SendAsyncWorker>d__49.MoveNext () [0x000ca] in <b42ca876d5974c1cba625d13c503e2d8>:0 \\n--- End of stack trace from previous location where exception was thrown ---\\n at apiurl.Services.CommonFiles.Services.RequestProvider+<PostAsync>d__7`2[TRequest,TResult].MoveNext () [0x001d7] in <debda5445b0b406da295bfd4eb7b720e>:0 \\n --- End of managed Java.IO.IOException stack trace ---\\njavax.net.ssl.SSLProtocolException: Read error: ssl=0x7f83263840: Failure in SSL library, usually a protocol error\\nerror:100000d7:SSL routines:OPENSSL_internal:SSL_HANDSHAKE_FAILURE (external/boringssl/src/ssl/s3_pkt.c:402 0x7f9f35fe7e:0x00000000)\\n\\tat com.android.org.conscrypt.NativeCrypto.SSL_read(Native Method)\\n\\tat com.android.org.conscrypt.OpenSSLSocketImpl$SSLInputStream.read(OpenSSLSocketImpl.java:758)\\n\\tat com.android.okhttp.okio.Okio$2.read(Okio.java:136)\\n\\tat com.android.okhttp.okio.AsyncTimeout$2.read(AsyncTimeout.java:211)\\n\\tat com.android.okhttp.okio.RealBufferedSource.indexOf(RealBufferedSource.java:306)\\n\\tat com.android.okhttp.okio.RealBufferedSource.indexOf(RealBufferedSource.java:300)\\n\\tat com.android.okhttp.okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:196)\\n\\tat com.android.okhttp.internal.http.HttpConnection.readResponse(HttpConnection.java:191)\\n\\tat com.android.okhttp.internal.http.HttpTransport.readResponseHeaders(HttpTransport.java:80)\\n\\tat com.android.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:907)\\n\\tat com.android.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:783)\\n\\tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:463)\\n\\tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:405)\\n\\tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:521)\\n\\tat com.android.okhttp.internal.huc.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:105)\\n\\tat com.android.okhttp.internal.huc.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java)\\n\", \r\n```\r\n\r\n```json\r\n\"type\": \"Java.Lang.Exception\", \"message\": \"isConnected failed: ETIMEDOUT (Connection timed out)\", \"stackTrace\": \"\\n --- End of managed Java.Lang.Exception stack trace ---\\nandroid.system.ErrnoException: isConnected failed: ETIMEDOUT (Connection timed out)\\n\\tat libcore.io.IoBridge.isConnected(IoBridge.java:223)\\n\\tat libcore.io.IoBridge.connectErrno(IoBridge.java:171)\\n\\tat libcore.io.IoBridge.connect(IoBridge.java:122)\\n\\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:183)\\n\\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:456)\\n\\tat java.net.Socket.connect(Socket.java:882)\\n\\tat com.android.okhttp.internal.Platform.connectSocket(Platform.java:174)\\n\\tat com.android.okhttp.Connection.connect(Connection.java:1222)\\n\\tat com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:395)\\n\\tat com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:298)\\n\\tat com.android.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:399)\\n\\tat com.android.okhttp.internal.http.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:110)\\n\\tat com.android.okhttp.internal.http.DelegatingHttpsURLConnection.connect(DelegatingHttpsURLConnection.java:89)\\n\\tat com.android.okhttp.internal.http.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:25)\\n\", \r\n```\r\n\r\n```json\r\n\"type\": \"Java.Net.SocketException\", \"message\": \"Socket closed\", \"stackTrace\": \" at Java.Interop.JniEnvironment+InstanceMethods.CallIntMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x00069] in <6daf52cf652e4e32ad801c3e8a5bbdb4>:0 \\n at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeVirtualInt32Method (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) <0x7e81957c54 + 0x0008f> in <6daf52cf652e4e32ad801c3e8a5bbdb4>:0 \\n at Java.Net.HttpURLConnection.get_ResponseCode () <0x7e80a5988c + 0x00057> in <b38bd7d2b7b64973840f6a5f661d159b>:0 \\n at Xamarin.Android.Net.AndroidClientHandler+<>c__DisplayClass45_0.<DoProcessRequest>b__1 () <0x7e808d3d10 + 0x00017> in <b38bd7d2b7b64973840f6a5f661d159b>:0 \\n at System.Threading.Tasks.Task`1[TResult].InnerInvoke () [0x0000f] in <ddff213794e94e648b95c7facad6817d>:0 \\n at System.Threading.Tasks.Task.Execute () <0x7e81c367d8 + 0x0001f> in <ddff213794e94e648b95c7facad6817d>:0 \\n--- End of stack trace from previous location where exception was thrown ---\\n at Xamarin.Android.Net.AndroidClientHandler+<DoProcessRequest>d__45.MoveNext () [0x0036c] in <b38bd7d2b7b64973840f6a5f661d159b>:0 \\n--- End of stack trace from previous location where exception was thrown ---\\n at Xamarin.Android.Net.AndroidClientHandler+<SendAsync>d__40.MoveNext () <0x7e808d33b0 + 0x0028f> in <b38bd7d2b7b64973840f6a5f661d159b>:0 \\n--- End of stack trace from previous location where exception was thrown ---\\n at System.Net.Http.HttpClient+<SendAsyncWorker>d__49.MoveNext () [0x000ca] in <b42ca876d5974c1cba625d13c503e2d8>:0 \\n--- End of stack trace from previous location where exception was thrown ---\\n at apiurl.Services.CommonFiles.Services.RequestProvider+<PostAsync>d__7`2[TRequest,TResult].MoveNext () [0x001d7] in <debda5445b0b406da295bfd4eb7b720e>:0 \\n --- End of managed Java.Net.SocketException stack trace ---\\njava.net.SocketException: Socket closed\\n\\tat com.android.org.conscrypt.NativeCrypto.SSL_read(Native Method)\\n\\tat com.android.org.conscrypt.NativeSsl.read(NativeSsl.java:399)\\n\\tat com.android.org.conscrypt.ConscryptFileDescriptorSocket$SSLInputStream.read(ConscryptFileDescriptorSocket.java:546)\\n\\tat com.android.okhttp.okio.Okio$2.read(Okio.java:136)\\n\\tat com.android.okhttp.okio.AsyncTimeout$2.read(AsyncTimeout.java:211)\\n\\tat com.android.okhttp.okio.RealBufferedSource.indexOf(RealBufferedSource.java:306)\\n\\tat com.android.okhttp.okio.RealBufferedSource.indexOf(RealBufferedSource.java:300)\\n\\tat com.android.okhttp.okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:196)\\n\\tat com.android.okhttp.internal.http.Http1xStream.readResponse(Http1xStream.java:186)\\n\\tat com.android.okhttp.internal.http.Http1xStream.readResponseHeaders(Http1xStream.java:127)\\n\\tat com.android.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:737)\\n\\tat com.android.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:609)\\n\\tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:471)\\n\\tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:407)\\n\\tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:538)\\n\\tat com.android.okhttp.internal.huc.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:105)\\n\\tat com.android.okhttp.internal.huc.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:26)\\n\", \r\n```\r\n\r\n```json\r\n \"type\": \"Java.IO.IOException\", \"message\": \"Read error: ssl=0x7cd0918140: I/O error during system call, Software caused connection abort\", \"stackTrace\": \" at Java.Interop.JniEnvironment+InstanceMethods.CallIntMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x00069] in <6daf52cf652e4e32ad801c3e8a5bbdb4>:0 \\n at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeVirtualInt32Method (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) <0x7cd7065c54 + 0x0008f> in <6daf52cf652e4e32ad801c3e8a5bbdb4>:0 \\n at Java.Net.HttpURLConnection.get_ResponseCode () <0x7cd725b88c + 0x00057> in <b38bd7d2b7b64973840f6a5f661d159b>:0 \\n at Xamarin.Android.Net.AndroidClientHandler+<>c__DisplayClass45_0.<DoProcessRequest>b__1 () <0x7cd70d5d10 + 0x00017> in <b38bd7d2b7b64973840f6a5f661d159b>:0 \\n at System.Threading.Tasks.Task`1[TResult].InnerInvoke () [0x0000f] in <ddff213794e94e648b95c7facad6817d>:0 \\n at System.Threading.Tasks.Task.Execute () <0x7cd84417d8 + 0x0001f> in <ddff213794e94e648b95c7facad6817d>:0 \\n--- End of stack trace from previous location where exception was thrown ---\\n at Xamarin.Android.Net.AndroidClientHandler+<DoProcessRequest>d__45.MoveNext () [0x0036c] in <b38bd7d2b7b64973840f6a5f661d159b>:0 \\n--- End of stack trace from previous location where exception was thrown ---\\n at Xamarin.Android.Net.AndroidClientHandler+<SendAsync>d__40.MoveNext () <0x7cd70d53b0 + 0x0028f> in <b38bd7d2b7b64973840f6a5f661d159b>:0 \\n--- End of stack trace from previous location where exception was thrown ---\\n at System.Net.Http.HttpClient+<SendAsyncWorker>d__49.MoveNext () [0x000ca] in <b42ca876d5974c1cba625d13c503e2d8>:0 \\n--- End of stack trace from previous location where exception was thrown ---\\n at apiurl.Services.CommonFiles.Services.RequestProvider+<PostAsync>d__7`2[TRequest,TResult].MoveNext () [0x001d7] in <debda5445b0b406da295bfd4eb7b720e>:0 \\n --- End of managed Java.IO.IOException stack trace ---\\njavax.net.ssl.SSLException: Read error: ssl=0x7cd0918140: I/O error during system call, Software caused connection abort\\n\\tat com.android.org.conscrypt.NativeCrypto.SSL_read(Native Method)\\n\\tat com.android.org.conscrypt.SslWrapper.read(SslWrapper.java:384)\\n\\tat com.android.org.conscrypt.ConscryptFileDescriptorSocket$SSLInputStream.read(ConscryptFileDescriptorSocket.java:541)\\n\\tat com.android.okhttp.okio.Okio$2.read(Okio.java:136)\\n\\tat com.android.okhttp.okio.AsyncTimeout$2.read(AsyncTimeout.java:211)\\n\\tat com.android.okhttp.okio.RealBufferedSource.indexOf(RealBufferedSource.java:306)\\n\\tat com.android.okhttp.okio.RealBufferedSource.indexOf(RealBufferedSource.java:300)\\n\\tat com.android.okhttp.okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:196)\\n\\tat com.android.okhttp.internal.http.Http1xStream.readResponse(Http1xStream.java:186)\\n\\tat com.android.okhttp.internal.http.Http1xStream.readResponseHeaders(Http1xStream.java:127)\\n\\tat com.android.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:737)\\n\\tat com.android.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:609)\\n\\tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:471)\\n\\tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:407)\\n\\tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:538)\\n\\tat com.android.okhttp.internal.huc.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:105)\\n\\tat com.android.okhttp.internal.huc.HttpsURLConnectionImpl.getResponseCode(Unknown Source:0)\\n\", \r\n```\r\n\r\n```json\r\n \"type\": \"Java.IO.IOException\", \"message\": \"failed to connect to app.apiurl.com/216.58.196.211 (port 443) after 120000ms: isConnected failed: ETIMEDOUT (Connection timed out)\", \"stackTrace\": \" at Java.Interop.JniEnvironment+InstanceMethods.CallVoidMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x00069] in <e2b68ac502ab4e7ab5d22a38be5cc933>:0 \\n at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeAbstractVoidMethod (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) <0xa101868c + 0x0007b> in <e2b68ac502ab4e7ab5d22a38be5cc933>:0 \\n at Javax.Net.Ssl.HttpsURLConnectionInvoker.Connect () <0x99d7cd30 + 0x00043> in <129efd51243441d5904e9ed64552d621>:0 \\n at Xamarin.Android.Net.AndroidClientHandler+<>c__DisplayClass43_0.<ConnectAsync>b__0 () [0x0005a] in <129efd51243441d5904e9ed64552d621>:0 \\n at System.Threading.Tasks.Task.InnerInvoke () <0x9a85e698 + 0x0005b> in <a6d2ea4bf3b740e994c1e13d1c003ca7>:0 \\n at System.Threading.Tasks.Task.Execute () <0x9a85e438 + 0x00017> in <a6d2ea4bf3b740e994c1e13d1c003ca7>:0 \\n--- End of stack trace from previous location where exception was thrown ---\\n at Xamarin.Android.Net.AndroidClientHandler+<DoProcessRequest>d__45.MoveNext () [0x0012e] in <129efd51243441d5904e9ed64552d621>:0 \\n--- End of stack trace from previous location where exception was thrown ---\\n at Xamarin.Android.Net.AndroidClientHandler+<SendAsync>d__40.MoveNext () <0x99d65054 + 0x0033b> in <129efd51243441d5904e9ed64552d621>:0 \\n--- End of stack trace from previous location where exception was thrown ---\\n at System.Net.Http.HttpClient+<SendAsyncWorker>d__49.MoveNext () [0x000ca] in <13aaea54b2f14535b37e703fae949c7a>:0 \\n--- End of stack trace from previous location where exception was thrown ---\\n at apiurl.Services.CommonFiles.Services.RequestProvider+<PostAsync>d__7`2[TRequest,TResult].MoveNext () [0x001d7] in <f54fcf91dad54864b43a249aeed3b0a7>:0 \\n --- End of managed Java.IO.IOException stack trace ---\\njava.net.SocketTimeoutException: failed to connect to app.apiurl.com/216.58.196.211 (port 443) after 120000ms: isConnected failed: ETIMEDOUT (Connection timed out)\\n\\tat libcore.io.IoBridge.isConnected(IoBridge.java:236)\\n\\tat libcore.io.IoBridge.connectErrno(IoBridge.java:171)\\n\\tat libcore.io.IoBridge.connect(IoBridge.java:122)\\n\\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:183)\\n\\tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:456)\\n\\tat java.net.Socket.connect(Socket.java:882)\\n\\tat com.android.okhttp.internal.Platform.connectSocket(Platform.java:174)\\n\\tat com.android.okhttp.Connection.connect(Connection.java:1222)\\n\\tat com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:395)\\n\\tat com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:298)\\n\\tat com.android.okhttp.internal.http.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:399)\\n\\tat com.android.okhttp.internal.http.HttpURLConnectionImpl.connect(HttpURLConnectionImpl.java:110)\\n\\tat com.android.okhttp.internal.http.DelegatingHttpsURLConnection.connect(DelegatingHttpsURLConnection.java:89)\\n\\tat com.android.okhttp.internal.http.HttpsURLConnectionImpl.connect(HttpsURLConnectionImpl.java:25)\\nCaused by: android.system.ErrnoException: isConnected failed: ETIMEDOUT (Connection timed out)\\n\\tat libcore.io.IoBridge.isConnected(IoBridge.java:223)\\n\\t... 13 more\\n\", \r\n```\r\n\r\n```json\r\n\"type\": \"Java.IO.IOException\", \"message\": \"Read error: ssl=0x7f516040: I/O error during system call, Connection reset by peer\", \"stackTrace\": \" at Java.Interop.JniEnvironment+InstanceMethods.CallIntMethod (Java.Interop.JniObjectReference instance, Java.Interop.JniMethodInfo method, Java.Interop.JniArgumentValue* args) [0x00069] in <6daf52cf652e4e32ad801c3e8a5bbdb4>:0 \\n at Java.Interop.JniPeerMembers+JniInstanceMethods.InvokeVirtualInt32Method (System.String encodedMember, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) <0x855971dc + 0x0009b> in <6daf52cf652e4e32ad801c3e8a5bbdb4>:0 \\n at Java.Net.HttpURLConnection.get_ResponseCode () <0x837eae9c + 0x00043> in <b38bd7d2b7b64973840f6a5f661d159b>:0 \\n at Xamarin.Android.Net.AndroidClientHandler+<>c__DisplayClass45_0.<DoProcessRequest>b__1 () <0x83624f1c + 0x00013> in <b38bd7d2b7b64973840f6a5f661d159b>:0 \\n at System.Threading.Tasks.Task`1[TResult].InnerInvoke () [0x0000f] in <ddff213794e94e648b95c7facad6817d>:0 \\n at System.Threading.Tasks.Task.Execute () <0x8445e438 + 0x00017> in <ddff213794e94e648b95c7facad6817d>:0 \\n--- End of stack trace from previous location where exception was thrown ---\\n at Xamarin.Android.Net.AndroidClientHandler+<DoProcessRequest>d__45.MoveNext () [0x0036c] in <b38bd7d2b7b64973840f6a5f661d159b>:0 \\n--- End of stack trace from previous location where exception was thrown ---\\n at Xamarin.Android.Net.AndroidClientHandler+<SendAsync>d__40.MoveNext () <0x836242f4 + 0x0033b> in <b38bd7d2b7b64973840f6a5f661d159b>:0 \\n--- End of stack trace from previous location where exception was thrown ---\\n at System.Net.Http.HttpClient+<SendAsyncWorker>d__49.MoveNext () [0x000ca] in <b42ca876d5974c1cba625d13c503e2d8>:0 \\n--- End of stack trace from previous location where exception was thrown ---\\n at apiurl.Services.CommonFiles.Services.RequestProvider+<PostAsync>d__7`2[TRequest,TResult].MoveNext () [0x001d7] in <debda5445b0b406da295bfd4eb7b720e>:0 \\n --- End of managed Java.IO.IOException stack trace ---\\njavax.net.ssl.SSLException: Read error: ssl=0x7f516040: I/O error during system call, Connection reset by peer\\n\\tat com.android.org.conscrypt.NativeCrypto.SSL_read(Native Method)\\n\\tat com.android.org.conscrypt.OpenSSLSocketImpl$SSLInputStream.read(OpenSSLSocketImpl.java:789)\\n\\tat com.android.okhttp.okio.Okio$2.read(Okio.java:141)\\n\\tat com.android.okhttp.okio.AsyncTimeout$2.read(AsyncTimeout.java:211)\\n\\tat com.android.okhttp.okio.RealBufferedSource.indexOf(RealBufferedSource.java:316)\\n\\tat com.android.okhttp.okio.RealBufferedSource.indexOf(RealBufferedSource.java:310)\\n\\tat com.android.okhttp.okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:206)\\n\\tat com.android.okhttp.internal.http.HttpConnection.readResponse(HttpConnection.java:239)\\n\\tat com.android.okhttp.internal.http.HttpTransport.readResponseHeaders(HttpTransport.java:104)\\n\\tat com.android.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:1156)\\n\\tat com.android.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:976)\\n\\tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:509)\\n\\tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:438)\\n\\tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:567)\\n\\tat com.android.okhttp.internal.huc.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:105)\\n\\tat com.android.okhttp.internal.huc.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java)\\n\", \r\n```\r\n\r\nThese are few samples of exception which we get in real devices.\r\n\r\n\r\n### Expected Behavior\r\n\r\nThrow HttpRequestException or similar exception which can be handled in .NETStandard / Shared code without reference to Java.\r\n\r\n### Actual Behavior\r\n\r\nJava.foo.Exception occurs which can't be handled without ToString or equivalent which are too \"anti pattern\"\r\n\r\n\r\n### Version Information\r\nXamarin.Andoid 9.2\r\nMono 5.18\r\n\r\nRelated Issue #2651 "},{"Id":"9817183796","Type":"PullRequestEvent","CreatedAt":"2019-06-13T16:07:48","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3215","RelatedDescription":"Opened pull request \"Fix debian build\" (#3215) at xamarin/xamarin-android","RelatedBody":"Debian packaging process doesn't work well with native PE executables, trying to\r\nprocess them with `ikdasm` in order to extract dependencies of the executable.\r\nTo make builds possible, remove all the Windows GNU Assemblier (`*-as.exe`)\r\nexecutables, as well as any instances of `libzip.dll`, before packaging."},{"Id":"9817113557","Type":"IssuesEvent","CreatedAt":"2019-06-13T15:59:01","Actor":"gugavaro","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3214","RelatedDescription":"Opened issue \"[Bindings] Empty namespace name for java classes without package.\" (#3214) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create an Android Library and add a class without a package\r\n```\r\npublic class Animal {\r\n    public void Test(){}\r\n}\r\n```\r\n\r\n2. Create a Binding Library Project and the AAR created on the previous step\r\n3. Buid Binding project. \r\n\r\nBuild will fail. Generated code will contain empty namespaces\r\n\r\n```\r\nnamespace  {\r\n\r\n\t// Metadata.xml XPath class reference: path=\"/api/package[@name='']/class[@name='Animal']\"\r\n\t[global::Android.Runtime.Register (\"/Animal\", DoNotGenerateAcw=true)]\r\n\tpublic partial class Animal : global::Java.Lang.Object {\r\n...\r\n```"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9820372385","Type":"PullRequestEvent","CreatedAt":"2019-06-14T02:18:35","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6527","RelatedDescription":"Opened pull request \"Shell lifecycle\" (#6527) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9820336048","Type":"PullRequestEvent","CreatedAt":"2019-06-14T02:07:34","Actor":"rookiejava","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6526","RelatedDescription":"Opened pull request \"[Tizen] Add Checkbox\" (#6526) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nThis PR is tizen implementation of `CheckBox`.\r\n\r\n### Issues Resolved ### \r\n- fixes #1728\r\n\r\n### API Changes ###\r\n None\r\n\r\n### Platforms Affected ### \r\n- Tizen\r\n\r\n### Behavioral/Visual Changes ###\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n![checkbox](https://user-images.githubusercontent.com/1029134/59478449-4080d600-8e94-11e9-8c78-5a5d95fa6bf1.gif)\r\n\r\n- Default\r\n![checkbox](https://user-images.githubusercontent.com/1029134/59478485-6312ef00-8e94-11e9-93af-0a951108e0ec.png)\r\n\r\n- Material\r\n![checkbox_visual](https://user-images.githubusercontent.com/1029134/59478406-1e875380-8e94-11e9-9d13-45f22ca97b3c.png)\r\n\r\n### Testing Procedure ###\r\nCheckbox Core Gallery and VisualGallery\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"},{"Id":"9819648250","Type":"PullRequestEvent","CreatedAt":"2019-06-13T22:48:14","Actor":"kvpt","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6525","RelatedDescription":"Opened pull request \"[Android] Dispose the collection view item adapter\" (#6525) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nThe adapter was not dispose which was causing a leak with the item source.\r\n\r\n### Issues Resolved ### \r\n- fixes #6427\r\n\r\n### API Changes ###\r\n None\r\n\r\n### Platforms Affected ### \r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\nNone\r\n\r\n### Before/After Screenshots ### \r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nLike all other garbage collection issue, it very difficult to produce a reliable reproduction.\r\nI tried to make a reproduction case from the elements of the issue #6427 without success.\r\n\r\n### PR Checklist ###\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard\r\n"},{"Id":"9819535252","Type":"IssuesEvent","CreatedAt":"2019-06-13T22:21:59","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6242","RelatedDescription":"Closed issue \"In Xamarin.Forms TabbedPage icon and text overlap when ToolBarPlacement is set to Bottom\" (#6242) at xamarin/Xamarin.Forms","RelatedBody":"Created a TabbedPage by selecting it from the Add-&gt;New Item menu in my Xamarin.Forms app. Changed the color and added some pages. It displays right when ToolBarPlacement is set to Default or Top but setting it to Bottom the text and the icon overlap. Tried to use some blank ContentPage as children to check if the problem was in my pages but it's not. Even setting the ToolBarPlacement in xaml didn't work out as the bar displays at the bottom but the overlap still persists. .xaml, .xaml.cs and screenshot attached.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/573471/in-xamarinforms-tabbedpage-icon-and-text-overlap-w.html\nVSTS ticketId: 895504_\n_These are the original issue comments:_\n\nxxenrico97x on 5/18/2019, 05:40 AM (3 days ago): Files are attached but private to Microsoft. There's an album containing the screenshot:  https://imgur.com/a/12BfrLm \nVisual Studio Feedback System on 5/19/2019, 06:44 PM (39 hours ago): <p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n_These are the original issue solutions:_\n(no solutions)"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9820037477","Type":"PullRequestEvent","CreatedAt":"2019-06-14T00:34:25","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6295","RelatedDescription":"Opened pull request \"Fix simulator provisioning.\" (#6295) at xamarin/xamarin-macios","RelatedBody":"* We must bump the min simulator versions, since Apple has bumped what they offer.\n* Re-enable simulator provisioning.\n* Minor output fix to siminstaller to make the output easier to understand."},{"Id":"9820006933","Type":"PullRequestEvent","CreatedAt":"2019-06-14T00:25:02","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6294","RelatedDescription":"Opened pull request \"Fix building and launching watchOS apps.\" (#6294) at xamarin/xamarin-macios","RelatedBody":"Fix building and launching watchOS apps (at least in the simulator).\n\nAlso fix a couple of issues that showed up now that we can build & run watchOS\napps in the simulator."},{"Id":"9819975030","Type":"PullRequestEvent","CreatedAt":"2019-06-14T00:15:42","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6293","RelatedDescription":"Opened pull request \"[runtime] Use '[obj class]' instead of 'object_getClass' to work around an Objective-C runtime bug. Fixes #6258 and #6255.\" (#6293) at xamarin/xamarin-macios","RelatedBody":"Xcode 11 introduces a bug in the Objective-C runtime that makes the runtime\nsurface uninitialized Class instances. Using these instances may lead to\ncrashes. Work around this issue by using a different API to get Class\ninstances for Objective-C objects, hoping that we won't see uninitialized\nClass instances.\n\nRef: https://trello.com/c/2g7qtnGO/143-fb6153904-classcopyprotocollist-crashes-in-ios-13\n\nFixes https://github.com/xamarin/xamarin-macios/issues/6258.\nFixes https://github.com/xamarin/xamarin-macios/issues/6255."},{"Id":"9819970053","Type":"PullRequestEvent","CreatedAt":"2019-06-14T00:14:16","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6292","RelatedDescription":"Opened pull request \"[wkwebkit] Update for xcode 11 beta 1\" (#6292) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"9819953752","Type":"PullRequestEvent","CreatedAt":"2019-06-14T00:09:35","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6286","RelatedDescription":"Merged pull request \"[devicecheck] Update for xcode 11 beta 1\" (#6286) at xamarin/xamarin-macios","RelatedBody":"Added support for macOS 10.15 and for iOS simulator (>= 13)"},{"Id":"9819925270","Type":"PullRequestEvent","CreatedAt":"2019-06-14T00:01:25","Actor":"baulig","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6291","RelatedDescription":"Opened pull request \"[XHarness]: Convert xUnit / nUnit tests to run async.\" (#6291) at xamarin/xamarin-macios","RelatedBody":"Make `TestRunner.Run()` async as we cannot sync-block on the UI thread."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1138875870553300995","CreatedAt":"2019-06-12T18:29:01+00:00","UserScreenname":"xamarinhq","Text":"We make it simple for .NET developers to build beautiful cross-platform apps, fast.\nTake a look at how Grial UI Kit… https://t.co/vceU8u475R","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":96,"FavoriteCount":43,"RawContent":null},{"Id":"1138511096380309504","CreatedAt":"2019-06-11T18:19:32+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @chewamanda, App Center Program Manager, shows us the latest features in App Center… https://t.co/VHxAknaumJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":26,"FavoriteCount":15,"RawContent":null},{"Id":"1138151096067792898","CreatedAt":"2019-06-10T18:29:01+00:00","UserScreenname":"xamarinhq","Text":"Join us at Xamarin Developer Summit - July 11-12. With 35+ sessions, there is something for everyone:\n- Mobile DevO… https://t.co/Ez5mDpM1Az","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":83,"FavoriteCount":35,"RawContent":null},{"Id":"1137049335273840640","CreatedAt":"2019-06-07T17:31:01+00:00","UserScreenname":"xamarinhq","Text":"Our cross-platform API library enables any mobile app that uses the Maps API to launch a map w/ a specific location… https://t.co/BWS4qeqtyU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":87,"FavoriteCount":34,"RawContent":null},{"Id":"1136679096954449921","CreatedAt":"2019-06-06T16:59:49+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":8,"FavoriteCount":5,"RawContent":null},{"Id":"1136666060189573120","CreatedAt":"2019-06-06T16:08:01+00:00","UserScreenname":"xamarinhq","Text":"On this week's Xamarin.Essential API of the week, we take a look at the Compass API; enabling you to monitor the de… https://t.co/6Iq1tNqo0B","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":46,"FavoriteCount":13,"RawContent":null},{"Id":"1136362715805552641","CreatedAt":"2019-06-05T20:02:38+00:00","UserScreenname":"xamarinhq","Text":"Now available... the pre-release version of Xamarin.Forms 4.1. And we're happy to say that CheckBox &amp; improved text… https://t.co/BGmdIAVxAO","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":156,"FavoriteCount":68,"RawContent":null},{"Id":"1135657873072148482","CreatedAt":"2019-06-03T21:21:51+00:00","UserScreenname":"xamarinhq","Text":"Jumpstart your next mobile dev projects by networking w/ your local community &amp; getting the latest updates about… https://t.co/39JBottYZu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":18,"RawContent":null},{"Id":"1134529085961621504","CreatedAt":"2019-05-31T18:36:27+00:00","UserScreenname":"xamarinhq","Text":"We're starting a new case study series. Today, we look at Valora View, a mobile app created by BBVA to help custome… https://t.co/Q0HeoB3chG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":68,"FavoriteCount":21,"RawContent":null},{"Id":"1134188986229035010","CreatedAt":"2019-05-30T20:05:01+00:00","UserScreenname":"xamarinhq","Text":"What's better than sharing 80% of code across #iOS &amp; #Android apps w/ #Xamarin? ...building a backend powered by… https://t.co/EZc7s5adqh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":128,"FavoriteCount":36,"RawContent":null},{"Id":"1134136640929193985","CreatedAt":"2019-05-30T16:37:01+00:00","UserScreenname":"xamarinhq","Text":"August 1 2019, Android apps that ship native libraries must provide a 64-bit v of their app.… https://t.co/JSElMqVSyB","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":55,"FavoriteCount":29,"RawContent":null},{"Id":"1133821797059780608","CreatedAt":"2019-05-29T19:45:56+00:00","UserScreenname":"xamarinhq","Text":"Today on @TheXamarinShow,, @JamesMontemagno &amp; #MSMVP @NicoVermeir shows off a tool that will change the life of eve… https://t.co/lYUf1XXB4m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":19,"RawContent":null},{"Id":"1133455659851243520","CreatedAt":"2019-05-28T19:31:02+00:00","UserScreenname":"xamarinhq","Text":"There are some amazing new features to help streamline C# dev when building beautiful mobile apps w/ Xamarin.Forms… https://t.co/MRwO5G62uW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":153,"FavoriteCount":73,"RawContent":null},{"Id":"1131261167085580289","CreatedAt":"2019-05-22T18:10:54+00:00","UserScreenname":"xamarinhq","Text":"Join us right now for the #XamarinForms 4.0 Launch Event Live Stream! https://t.co/YE7Usel1Sb","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":32,"FavoriteCount":14,"RawContent":null},{"Id":"1131230744267972608","CreatedAt":"2019-05-22T16:10:01+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin.Forms team for the Xamarin.Forms 4.0 launch event extravaganza where they will discuss the latest… https://t.co/WJK5Lp4eRK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":65,"FavoriteCount":24,"RawContent":null},{"Id":"1130900878830002177","CreatedAt":"2019-05-21T18:19:15+00:00","UserScreenname":"xamarinhq","Text":"We've been obsessing over your feedback. Thanks to your commitment to helping us deliver great dev tools, we're ann… https://t.co/uioErOmWr2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":216,"FavoriteCount":88,"RawContent":null},{"Id":"1129486865831272449","CreatedAt":"2019-05-17T20:40:28+00:00","UserScreenname":"xamarinhq","Text":"Did you know that starting with Android 9, cleartext(non-HTTPS) support is disabled by default? In our latest post,… https://t.co/hRUvSFu9c8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":53,"FavoriteCount":26,"RawContent":null},{"Id":"1129423057725083649","CreatedAt":"2019-05-17T16:26:55+00:00","UserScreenname":"xamarinhq","Text":"In the latest @XamarinShow, @JamesMontemagno &amp; @dotMorten intro us to the world of advanced mapping with ArcGIS for… https://t.co/nVZWVivZdG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":87,"FavoriteCount":27,"RawContent":null}]}},"RunOn":"2019-06-14T05:31:05.6890436Z","RunDurationInMilliseconds":3900}