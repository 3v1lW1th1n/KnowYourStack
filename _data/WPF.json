{"Data":{"GitHub":{"Issues":[{"Id":"547781413","IsPullRequest":false,"CreatedAt":"2020-01-09T23:29:55","Actor":"gomathip02","Number":"2412","RawContent":null,"Title":"A11y_VSUserStory935073-ContainerToolsWindow_ImagesTab_AI4D: Name Property does not exist for the \"Expand/collapse\" button.","State":"open","Body":"Copied from VSO ID: 1029463\n\nBug Description:\n“Check out Accessibility Insights! - Identify accessibility bugs before check-in and make bug fixing faster and easier.” \n\nEnvironment Details:​\nApplication name-VS User Story 935073-Container Tools Window\nMicrosoft Visual Studio Enterprise 2019 Int Preview\nVersion 16.5.0 Preview 1.0 [29505.209.master]\nOS: Win10\n\nRepro Steps:​\n1.Install and launch the Visual Studio2019 INT preview.\n2.Create a project  after checking the \"Enable Docker Support\" checkbox under \"Advanced label\".​\n3.Debug the solution using F5.​\n4. Navigate to View tab->other windows->Containers->Start narrator.​\n5.Use the tab key and try navigating to the toolbar below the \"Images\" tab.\n6.Observe if the  Name Property does not exist for the \"Expand/collapse\" button.\n\nActual:\n\nName Property does not exist for the \"Expand/collapse\" button.\n\nExpected:\n\nName Property should be there for the \"Expand/collapse\" button.\n\nSame issue observed for the below scenario:\n1.Files tab:\n1.Install and launch the Visual Studio2019 INT preview.\n2.Create a project  after checking the \"Enable Docker Support\" checkbox under \"Advanced label\".\n3.Debug the solution using F5.\n4. Navigate to View tab->other windows->Containers.\n5.Navigate to the Files tab.\n\n\n\nUser Impact:\nScreen Reader users will not understand the context for the \"Expand/collapse\" button. They would get confused with the names.\n\nRecommendations:​​\nhttps://microsoft.sharepoint.com/teams/msenable/mas/Pages/browse-fixes.aspx\n​\nMAS Reference:\nMAS 1.3.1-\nhttps://microsoft.sharepoint.com/:w:/r/teams/msenable/_layouts/15/WopiFrame.aspx?sourcedoc={54f28d1f-a2d1-4dcd-84e1-5c9b87e8aba4}\nMAS4.1.2-\nhttps://microsoft.sharepoint.com/:w:/r/teams/msenable/_layouts/15/WopiFrame.aspx?sourcedoc={248054a6-5e68-4771-9e1e-242fb5025730}\nMAS4.2.1-\nhttps://microsoft.sharepoint.com/:w:/r/teams/msenable/_layouts/15/WopiFrame.aspx?sourcedoc={a12f3779-bdf1-40c2-bbcc-0e314ea94858}","Url":"https://github.com/dotnet/wpf/issues/2412","RelatedDescription":"Open issue \"A11y_VSUserStory935073-ContainerToolsWindow_ImagesTab_AI4D: Name Property does not exist for the \"Expand/collapse\" button.\" (#2412)"},{"Id":"547780959","IsPullRequest":false,"CreatedAt":"2020-01-09T23:28:24","Actor":"gomathip02","Number":"2411","RawContent":null,"Title":"A11y_VSUserStory935073-ContainerToolsWindow_EnvironmentTab_Keyboard:Tab item(environment. ports, logs, files\" gets activated without performing any action by the user.","State":"open","Body":"Copied from VSO ID: 1029477\n\nBug Description:\n“Check out Accessibility Insights! - Identify accessibility bugs before check-in and make bug fixing faster and easier.” \n\nEnvironment Details:​\nApplication name-VS User Story 935073-Container Tools Window\nMicrosoft Visual Studio Enterprise 2019 Int Preview\nVersion 16.5.0 Preview 1.0 [29505.209.master]\nOS: Win10\n\nRepro Steps:​\n1. Install and launch the Visual Studio2019 INT preview.\n2. Create a project  after checking the \"Enable Docker Support\" checkbox under \"Advanced label\".\n3. Debug the solution using F5.\n4. Navigate to View tab->other windows->Containers.\n5. Navigate to the Environment tab.\n6. Check the tab items \"environment. ports, logs, files\" gets activated without performing any action by the user.\n\nActual:\nThe tab items \"environment. ports, logs, files\" gets activated without performing any action by the user.\n\nExpected:\nThe tab items \"environment. ports, logs, files\" should not get activate without performing any action by the user.\n\nUser Impact:\nKeyboard only user get confused about the control.\n\nRecommendations:​​\nhttps://microsoft.sharepoint.com/teams/msenable/mas/Pages/browse-fixes.aspx\n​\nMAS Reference:\nMAS 2.1.1:\nhttps://microsoft.sharepoint.com/teams/msenable/_layouts/15/WopiFrame.aspx?sourcedoc={8492c4eb-c179-40ae-8777-cd044ed725a2}\n\nMAS3.2.1:\nhttps://microsoft.sharepoint.com/teams/msenable/_layouts/15/WopiFrame.aspx?sourcedoc={a4bbd37d-ee11-485e-b5c8-0539f0ac94b2}","Url":"https://github.com/dotnet/wpf/issues/2411","RelatedDescription":"Open issue \"A11y_VSUserStory935073-ContainerToolsWindow_EnvironmentTab_Keyboard:Tab item(environment. ports, logs, files\" gets activated without performing any action by the user.\" (#2411)"},{"Id":"547780103","IsPullRequest":false,"CreatedAt":"2020-01-09T23:25:41","Actor":"gomathip02","Number":"2410","RawContent":null,"Title":"A11y_VSUserStory935073-ContainerToolsWindow_ContainersTab_Keyboard: Tooltip for the \"Remove\",\"Start\",\"Stop\" and \"Show All\" buttons are not accessible by keyboard.","State":"open","Body":"Copied from VSO ID: 1028932\n\nBug Description:\n“Check out Accessibility Insights! - Identify accessibility bugs before check-in and make bug fixing faster and easier.” \n\nEnvironment Details:​\nApplication name-VS User Story 935073-Container Tools Window\nMicrosoft Visual Studio Enterprise 2019 Int Preview\nVersion 16.5.0 Preview 1.0 [29505.209.master]\nOS: Win10\n\nRepro Steps:​\n1.Install and launch the Visual Studio2019 INT preview.\n2.Create a project  after checking the \"Enable Docker Support\" checkbox under \"Advanced label\".​\n3.Debug the solution using F5.​\n4. Navigate to View tab->other windows->Containers.​\n5.Use the tab key and try navigating to the toolbar below the \"Containers\" tab.\n6.Observe if the Tooltip for the \"Remove\", \"Start\", \"Stop\" and \"ShowAll\" buttons are not accessible by keyboard.\n\nActual:\nTooltip for the \"Remove\", \"Start\", \"Stop\" and \"Show All\" buttons are not accessible by keyboard.\n\nExpected:\n\nTooltip for the \"Remove\", \"Start\", \" Stop\" and \"Show All\" buttons should be accessible by keyboard. As there is no label information associated for the control,so this information should be available to keyboard only users.\n\nSame issue observed for the  below scenario:\n1.Logs tab:\n1.Install and launch the Visual Studio2019 INT preview.\n2.Create a project  after checking the \"Enable Docker Support\" checkbox under \"Advanced label\".\n3.Debug the solution using F5.\n4. Navigate to View tab->other windows->Containers.\n5.Navigate to the Logs tab.\n6.Observe  tooltip for the \"Refresh ,Clear and Stream log\" buttons are not accessible by keyboard.\n\n2.Files tab:\n1.Install and launch the Visual Studio2019 INT preview.\n2.Create a project  after checking the \"Enable Docker Support\" checkbox under \"Advanced label\".\n3.Debug the solution using F5.\n4. Navigate to View tab->other windows->Containers.\n5. Navigate to the Files tab.\n6. .Observe  tooltip for the \"Refresh\" buttons are not accessible by keyboard.\n\n\n\nUser Impact:\nKeyboard only user finds it difficult to traverse through the screen.\n\nRecommendations:​​\nhttps://microsoft.sharepoint.com/teams/msenable/mas/Pages/browse-fixes.aspx\n​\nMAS Reference:\nMAS 2.1.1-\nhttps://microsoft.sharepoint.com/:w:/r/teams/msenable/_layouts/15/WopiFrame.aspx?sourcedoc={8492c4eb-c179-40ae-8777-cd044ed725a2}\nMAS1.1.1-\nhttps://microsoft.sharepoint.com/:w:/r/teams/msenable/_layouts/15/WopiFrame.aspx?sourcedoc={d2d2051f-bdc8-4af7-8e18-38aae867e216}","Url":"https://github.com/dotnet/wpf/issues/2410","RelatedDescription":"Open issue \"A11y_VSUserStory935073-ContainerToolsWindow_ContainersTab_Keyboard: Tooltip for the \"Remove\",\"Start\",\"Stop\" and \"Show All\" buttons are not accessible by keyboard.\" (#2410)"},{"Id":"547779201","IsPullRequest":false,"CreatedAt":"2020-01-09T23:22:50","Actor":"gomathip02","Number":"2409","RawContent":null,"Title":"A11y_VSUserStory935073-ContainerToolsWindow_ AddContainerOrchestratorSupport_ScreenReader:Narrator announces space unnecessarily for the \"ok\" button at the end.","State":"open","Body":"Copied from VSO ID: 1029462\n\nBug Description:\n“Check out Accessibility Insights! - Identify accessibility bugs before check-in and make bug fixing faster and easier.” \n\nEnvironment Details:​\nApplication name-VS User Story 935073-Container Tools Window\nMicrosoft Visual Studio Enterprise 2019 Int Preview\nVersion 16.5.0 Preview 1.0 [29505.209.master]\nOS: Win10\n\nRepro Steps:​\n1. Install and launch the Visual Studio2019 INT preview.\n2. Create a project  after checking the \"Enable Docker Support\" checkbox under \"Advanced label\".\n3. Right click on the \"Project\" created->click on \"Add\".\n4. Select the \"Container Orchestrator Support\".\n5. Start the Narrator.\n6. Navigate to \"ok\" button.\n7. Observe the narrator announcement.\n\n\nActual:\nNarrator announces unnecessarily \"space\" for the \"OK\" button at the end.\n\nExpected:\nNarrator should not announces unnecessarily \"space\" for the \"OK\" button at the end.\n\nThis issue is not observed with NVDA.\n\nUser Impact:\nScreen reader user does  get confused about the control.\n\nRecommendations:​​\nhttps://microsoft.sharepoint.com/teams/msenable/mas/Pages/browse-fixes.aspx\n​\nMAS Reference:\nMAS 1.3.1:\nhttps://microsoft.sharepoint.com/teams/msenable/_layouts/15/WopiFrame.aspx?sourcedoc={54f28d1f-a2d1-4dcd-84e1-5c9b87e8aba4}","Url":"https://github.com/dotnet/wpf/issues/2409","RelatedDescription":"Open issue \"A11y_VSUserStory935073-ContainerToolsWindow_ AddContainerOrchestratorSupport_ScreenReader:Narrator announces space unnecessarily for the \"ok\" button at the end.\" (#2409)"},{"Id":"547775249","IsPullRequest":false,"CreatedAt":"2020-01-09T23:11:33","Actor":"gomathip02","Number":"2408","RawContent":null,"Title":"Part of desktop window changed black on flipped portrait display mode","State":"open","Body":"Copied from VSO ID: 23948395\n\nSteps to repro:\n- 1. Prepare 19H1 system.\n- 2. Execute WPF application. (Please refer to attached ResizeIssue.exe. It is almost empty WPF application made for repro.)\n- 3. Press Window key + Left arrow key together for letting the application fit to half of desktop window.\n- 4. Open window Settings > System > Display > Display orientation.\n- 5. Select Portrait (flipped) mode from combo box.\n\nExpected results:\n- Application is displayed as fitted to half of the desktop window\n\nActual results:\n- Part of the desktop window changed black, and the application is displayed as smaller than half of desktop window.\n  Please refer to attached \"Actual_result.png\" file.","Url":"https://github.com/dotnet/wpf/issues/2408","RelatedDescription":"Open issue \"Part of desktop window changed black on flipped portrait display mode\" (#2408)"},{"Id":"547544175","IsPullRequest":false,"CreatedAt":"2020-01-09T21:49:34","Actor":"jvcmd","Number":"2407","RawContent":null,"Title":"Emojis","State":"closed","Body":"Hi. please support of Emojis (Colored) in TextBlock and TextBoxes control","Url":"https://github.com/dotnet/wpf/issues/2407","RelatedDescription":"Closed issue \"Emojis\" (#2407)"},{"Id":"547473454","IsPullRequest":true,"CreatedAt":"2020-01-09T13:30:39","Actor":"dotnet-maestro[bot]","Number":"2406","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20200108.2\r\n- **Date Produced**: 1/8/2020 3:54 PM\r\n- **Commit**: 7f8d9c06474cc924f37bb666dbc421815a2bb659\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.20058.2\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2406","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2406)"},{"Id":"545195830","IsPullRequest":false,"CreatedAt":"2020-01-08T21:17:52","Actor":"AArnott","Number":"2395","RawContent":null,"Title":"WPF for .NET Core throws first chance exceptions due to .NET Core limitations","State":"closed","Body":"* .NET Core Version: 3.1\r\n* Windows version: 1909\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n\r\n **Problem description:**\r\n\r\nWPF for .NET Core throws a multiple first-chance exceptions during startup because AppSettings isn't available on .NET Core. \r\n\r\nhttps://github.com/dotnet/wpf/blob/24faa3f5afce57898fdd52f0f2de92c5ef5b444e/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/CoreCompatibilityPreferences.cs#L23\r\n \r\n **Actual behavior:** \r\n\r\n```\r\nSystem.Configuration.ConfigurationErrorsException\r\n  HResult=0x80131902\r\n  Message=Configuration system failed to initialize\r\n  Source=System.Configuration.ConfigurationManager\r\n  StackTrace:\r\n   at System.Configuration.ConfigurationManager.PrepareConfigSystem() in /_/src/System.Configuration.ConfigurationManager/src/System/Configuration/ConfigurationManager.cs:line 150\r\n\r\n  This exception was originally thrown at this call stack:\r\n    System.Configuration.ClientConfigPaths.ClientConfigPaths(string, bool) in ClientConfigPaths.cs\r\n    System.Configuration.ClientConfigPaths.GetPaths(string, bool) in ClientConfigPaths.cs\r\n    System.Configuration.ClientConfigurationHost.ConfigPaths.get() in ClientConfigurationHost.cs\r\n    System.Configuration.ClientConfigurationHost.GetStreamName(string) in ClientConfigurationHost.cs\r\n    System.Configuration.ClientConfigurationHost.IsAppConfigHttp.get() in ClientConfigurationHost.cs\r\n    System.Configuration.Internal.DelegatingConfigHost.IsAppConfigHttp.get() in DelegatingConfigHost.cs\r\n    System.Configuration.ClientConfigurationSystem.ClientConfigurationSystem() in ClientConfigurationSystem.cs\r\n    System.Configuration.ConfigurationManager.EnsureConfigurationSystem() in ConfigurationManager.cs\r\n\r\nInner Exception 1:\r\nPlatformNotSupportedException: Operation is not supported on this platform.\r\n```\r\n \r\n **Expected behavior:**\r\n \r\nI expect WPF for .NET Core avoids calling APIs that are known to not work on .NET Core so that these first chance exceptions aren't thrown.\r\n","Url":"https://github.com/dotnet/wpf/issues/2395","RelatedDescription":"Closed issue \"WPF for .NET Core throws first chance exceptions due to .NET Core limitations\" (#2395)"},{"Id":"546855780","IsPullRequest":true,"CreatedAt":"2020-01-08T13:29:05","Actor":"dotnet-maestro[bot]","Number":"2405","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20200107.4\r\n- **Date Produced**: 1/8/2020 12:32 AM\r\n- **Commit**: 53cedc36ca41902b0a45edb45bb326bc61fc34ff\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.20057.4\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2405","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2405)"},{"Id":"544430695","IsPullRequest":false,"CreatedAt":"2020-01-07T20:34:27","Actor":"manojkichidi","Number":"2386","RawContent":null,"Title":"'System.ArgumentNullException' at System.Windows.LogicalTreeHelper.GetChildren","State":"closed","Body":"Hi, We have WPF app in which virtualization is enabled for Treeview control. We sort the content of Treeview using CollectionViewSource.\r\n\r\n`<TreeView x:Name=\"myTreeview\" VirtualizingPanel.IsVirtualizing=\"True\" VirtualizingPanel.VirtualizationMode=\"Standard\" VirtualizingPanel.ScrollUnit=\"Item\">\r\n\r\n<Trigger Property=\"VirtualizingStackPanel.IsVirtualizing\" Value=\"true\"> <Setter Property=\"ItemsPanel\"> <Setter.Value> <ItemsPanelTemplate> <VirtualizingStackPanel/> </ItemsPanelTemplate> </Setter.Value> </Setter> </Trigger>\r\n\r\n</Treeview>`\r\n\r\nOccasionally we are getting below exception when a new item is added to observable collection and sorted.\r\n\r\nExceptionDetails: An exception of type 'System.ArgumentNullException' occurred and was caught. ---------------------------------------------------------------------------- 2019-11-04T18:42:30.510+05:30 Exception Messages: ArgumentNullException: Value cannot be null. Parameter name: current TargetInvocationException: Exception has been thrown by the target of an invocation. TargetInvocationException: Exception has been thrown by the target of an invocation. AsyncUIException : Exception has been thrown by the target of an invocation. Type : System.ArgumentNullException, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 Message : Value cannot be null. Parameter name: current Source : PresentationFramework ParamName : current TargetSite : System.Collections.IEnumerable GetChildren(System.Windows.DependencyObject) Stack Trace : at System.Windows.LogicalTreeHelper.GetChildren(DependencyObject current) at syngo.Common.Controls.Wpf.Core.HelperCore.GetChildren(DependencyObject parent) at syngo.Common.Controls.Wpf.Core.Themes.ThemeManager.ApplyThemeInDepthCore(DependencyObject depObj, Nullable`1 dpi, String themeName, HashSet`1 reachedElements) at syngo.Common.Controls.Wpf.Core.Themes.ThemeManager.ApplyThemeInDepthCore(DependencyObject depObj, Nullable`1 dpi, String themeName, HashSet`1 reachedElements) at syngo.Common.Controls.Wpf.Core.Themes.ThemeManager.ApplyThemeInDepthCore(DependencyObject depObj, Nullable`1 dpi, String themeName, HashSet`1 reachedElements) at syngo.Common.Controls.Wpf.Core.Themes.ThemeManager.ApplyThemeInDepthCore(DependencyObject depObj, Nullable`1 dpi, String themeName, HashSet`1 reachedElements) at syngo.Common.Controls.Wpf.Core.Themes.ThemeManager.EnsureDpiStyleAvailable(FrameworkElement fe) at syngo.Common.Controls.Wpf.Core.Themes.ThemeManager.OnDpiSupportChanged(DependencyObject d, DependencyPropertyChangedEventArgs e) at System.Windows.DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs e) at System.Windows.FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs e) at System.Windows.DependencyObject.NotifyPropertyChange(DependencyPropertyChangedEventArgs args) at System.Windows.DependencyObject.UpdateEffectiveValue(EntryIndex entryIndex, DependencyProperty dp, PropertyMetadata metadata, EffectiveValueEntry oldEntry, EffectiveValueEntry& newEntry, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType) at System.Windows.DependencyObject.InvalidateProperty(DependencyProperty dp, Boolean preserveCurrentValue) at System.Windows.StyleHelper.InvalidateContainerDependents(DependencyObject container, FrugalStructList`1& exclusionContainerDependents, FrugalStructList`1& oldContainerDependents, FrugalStructList`1& newContainerDependents) at System.Windows.StyleHelper.DoStyleInvalidations(FrameworkElement fe, FrameworkContentElement fce, Style oldStyle, Style newStyle) at System.Windows.StyleHelper.UpdateStyleCache(FrameworkElement fe, FrameworkContentElement fce, Style oldStyle, Style newStyle, Style& styleCache) at System.Windows.FrameworkElement.OnStyleChanged(DependencyObject d, DependencyPropertyChangedEventArgs e) at System.Windows.DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs e) at System.Windows.FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs e) at System.Windows.DependencyObject.NotifyPropertyChange(DependencyPropertyChangedEventArgs args) at System.Windows.DependencyObject.UpdateEffectiveValue(EntryIndex entryIndex, DependencyProperty dp, PropertyMetadata metadata, EffectiveValueEntry oldEntry, EffectiveValueEntry& newEntry, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType) at System.Windows.DependencyObject.InvalidateProperty(DependencyProperty dp, Boolean preserveCurrentValue) at System.Windows.StyleHelper.ClearTemplateChain(HybridDictionary[] instanceData, FrameworkElement feContainer, FrameworkContentElement fceContainer, List`1 templateChain, FrameworkTemplate oldFrameworkTemplate) at System.Windows.StyleHelper.ClearGeneratedSubTree(HybridDictionary[] instanceData, FrameworkElement feContainer, FrameworkContentElement fceContainer, FrameworkTemplate oldFrameworkTemplate) at System.Windows.StyleHelper.DoTemplateInvalidations(FrameworkElement feContainer, FrameworkTemplate oldFrameworkTemplate) at System.Windows.Controls.Control.OnTemplateChanged(DependencyObject d, DependencyPropertyChangedEventArgs e) at System.Windows.DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs e) at System.Windows.FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs e) at System.Windows.DependencyObject.NotifyPropertyChange(DependencyPropertyChangedEventArgs args) at System.Windows.DependencyObject.UpdateEffectiveValue(EntryIndex entryIndex, DependencyProperty dp, PropertyMetadata metadata, EffectiveValueEntry oldEntry, EffectiveValueEntry& newEntry, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType) at System.Windows.DependencyObject.InvalidateProperty(DependencyProperty dp, Boolean preserveCurrentValue) at System.Windows.StyleHelper.InvalidateContainerDependents(DependencyObject container, FrugalStructList`1& exclusionContainerDependents, FrugalStructList`1& oldContainerDependents, FrugalStructList`1& newContainerDependents) at System.Windows.StyleHelper.DoStyleInvalidations(FrameworkElement fe, FrameworkContentElement fce, Style oldStyle, Style newStyle) at System.Windows.StyleHelper.UpdateStyleCache(FrameworkElement fe, FrameworkContentElement fce, Style oldStyle, Style newStyle, Style& styleCache) at System.Windows.FrameworkElement.OnStyleChanged(DependencyObject d, DependencyPropertyChangedEventArgs e) at System.Windows.DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs e) at System.Windows.FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs e) at System.Windows.DependencyObject.NotifyPropertyChange(DependencyPropertyChangedEventArgs args) at System.Windows.DependencyObject.UpdateEffectiveValue(EntryIndex entryIndex, DependencyProperty dp, PropertyMetadata metadata, EffectiveValueEntry oldEntry, EffectiveValueEntry& newEntry, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType) at System.Windows.DependencyObject.InvalidateProperty(DependencyProperty dp, Boolean preserveCurrentValue) at System.Windows.FrameworkElement.UpdateStyleProperty() at System.Windows.TreeWalkHelper.InvalidateOnTreeChange(FrameworkElement fe, FrameworkContentElement fce, DependencyObject parent, Boolean isAddOperation) at System.Windows.FrameworkElement.OnVisualParentChanged(DependencyObject oldParent) at System.Windows.Media.Visual.FireOnVisualParentChanged(DependencyObject oldParent) at System.Windows.Media.Visual.RemoveVisualChild(Visual child) at System.Windows.Media.VisualCollection.DisconnectChild(Int32 index) at System.Windows.Media.VisualCollection.Clear() at System.Windows.Controls.UIElementCollection.ClearInternal() at System.Windows.Controls.Panel.ClearChildren() at System.Windows.Controls.Panel.VerifyBoundState() at System.Windows.Controls.Panel.get_InternalChildren() at System.Windows.Controls.Panel.get_LogicalChildren() at System.Windows.LogicalTreeHelper.GetChildren(DependencyObject current) at System.Windows.BroadcastEventHelper.AreThereLoadedChangeHandlersInSubtree(FrameworkObject& fo) at System.Windows.BroadcastEventHelper.UpdateHasLoadedChangeHandlerFlagInAncestry(DependencyObject d, Boolean addHandler) at System.Windows.BroadcastEventHelper.UpdateHasLoadedChangeHandlerFlagInAncestry(DependencyObject d, Boolean addHandler) at System.Windows.BroadcastEventHelper.UpdateHasLoadedChangeHandlerFlagInAncestry(DependencyObject d, Boolean addHandler) at System.Windows.BroadcastEventHelper.UpdateHasLoadedChangeHandlerFlagInAncestry(DependencyObject d, Boolean addHandler) at System.Windows.BroadcastEventHelper.UpdateHasLoadedChangeHandlerFlagInAncestry(DependencyObject d, Boolean addHandler) at System.Windows.BroadcastEventHelper.AddOrRemoveHasLoadedChangeHandlerFlag(DependencyObject d, DependencyObject oldParent, DependencyObject newParent) at System.Windows.FrameworkElement.OnVisualParentChanged(DependencyObject oldParent) at System.Windows.Media.Visual.FireOnVisualParentChanged(DependencyObject oldParent) at System.Windows.Media.Visual.RemoveVisualChild(Visual child) at System.Windows.Media.VisualCollection.DisconnectChild(Int32 index) at System.Windows.Media.VisualCollection.RemoveRange(Int32 index, Int32 count) at System.Windows.Controls.UIElementCollection.RemoveRangeInternal(Int32 index, Int32 count) at System.Windows.Controls.VirtualizingStackPanel.CleanupRange(IList children, IItemContainerGenerator generator, Int32 startIndex, Int32 count) at System.Windows.Controls.VirtualizingStackPanel.CleanupContainers(Int32 firstItemInExtendedViewportIndex, Int32 itemsInExtendedViewportCount, ItemsControl itemsControl, Boolean timeBound, Int32 startTickCount) at System.Windows.Controls.VirtualizingStackPanel.OnClearChildren() at System.Windows.Controls.TreeViewItem.ClearItemContainer(Object item, ItemsControl parentItemsControl) at System.Windows.Controls.ItemContainerGenerator.UnlinkContainerFromItem(DependencyObject container, Object item, IGeneratorHost host) at System.Windows.Controls.ItemContainerGenerator.RemoveAllInternal(Boolean saveRecycleQueue) at System.Windows.Controls.Panel.DisconnectFromGenerator() at System.Windows.Controls.Panel.VerifyBoundState() at System.Windows.Controls.Panel.OnIsItemsHostChanged(Boolean oldIsItemsHost, Boolean newIsItemsHost) at System.Windows.Controls.Panel.OnIsItemsHostChanged(DependencyObject d, DependencyPropertyChangedEventArgs e) at System.Windows.DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs e) at System.Windows.FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs e) at System.Windows.DependencyObject.NotifyPropertyChange(DependencyPropertyChangedEventArgs args) at System.Windows.DependencyObject.UpdateEffectiveValue(EntryIndex entryIndex, DependencyProperty dp, PropertyMetadata metadata, EffectiveValueEntry oldEntry, EffectiveValueEntry& newEntry, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType) at System.Windows.DependencyObject.SetValueCommon(DependencyProperty dp, Object value, PropertyMetadata metadata, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType, Boolean isInternal) at System.Windows.DependencyObject.SetValue(DependencyProperty dp, Object value) at System.Windows.Controls.ItemsPresenter.ClearPanel() at System.Windows.Controls.ItemsPresenter.OnAncestorChanged() at System.Windows.FrameworkElement.OnAncestorChangedInternal(TreeChangeInfo parentTreeState) at System.Windows.TreeWalkHelper.OnAncestorChanged(DependencyObject d, TreeChangeInfo info, Boolean visitedViaVisualTree) at System.Windows.DescendentsWalker`1._VisitNode(DependencyObject d, Boolean visitedViaVisualTree) at MS.Internal.PrePostDescendentsWalker`1._VisitNode(DependencyObject d, Boolean visitedViaVisualTree) at System.Windows.DescendentsWalker`1.WalkLogicalChildren(FrameworkElement feParent, FrameworkContentElement fceParent, IEnumerator logicalChildren) at System.Windows.DescendentsWalker`1.WalkFrameworkElementLogicalThenVisualChildren(FrameworkElement feParent, Boolean hasLogicalChildren) at System.Windows.DescendentsWalker`1.IterateChildren(DependencyObject d) at System.Windows.DescendentsWalker`1.StartWalk(DependencyObject startNode, Boolean skipStartNode) at MS.Internal.PrePostDescendentsWalker`1.StartWalk(DependencyObject startNode, Boolean skipStartNode) at System.Windows.TreeWalkHelper.InvalidateOnTreeChange(FrameworkElement fe, FrameworkContentElement fce, DependencyObject parent, Boolean isAddOperation) at System.Windows.FrameworkElement.OnVisualParentChanged(DependencyObject oldParent) at System.Windows.Media.Visual.FireOnVisualParentChanged(DependencyObject oldParent) at System.Windows.Media.Visual.RemoveVisualChild(Visual child) at System.Windows.FrameworkElement.set_TemplateChild(UIElement value) at System.Windows.StyleHelper.ClearGeneratedSubTree(HybridDictionary[] instanceData, FrameworkElement feContainer, FrameworkContentElement fceContainer, FrameworkTemplate oldFrameworkTemplate) at System.Windows.StyleHelper.DoTemplateInvalidations(FrameworkElement feContainer, FrameworkTemplate oldFrameworkTemplate) at System.Windows.Controls.Control.OnTemplateChanged(DependencyObject d, DependencyPropertyChangedEventArgs e) at System.Windows.DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs e) at System.Windows.FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs e) at System.Windows.DependencyObject.NotifyPropertyChange(DependencyPropertyChangedEventArgs args) at System.Windows.DependencyObject.UpdateEffectiveValue(EntryIndex entryIndex, DependencyProperty dp, PropertyMetadata metadata, EffectiveValueEntry oldEntry, EffectiveValueEntry& newEntry, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType) at System.Windows.DependencyObject.InvalidateProperty(DependencyProperty dp, Boolean preserveCurrentValue) at System.Windows.StyleHelper.InvalidateContainerDependents(DependencyObject container, FrugalStructList`1& exclusionContainerDependents, FrugalStructList`1& oldContainerDependents, FrugalStructList`1& newContainerDependents) at System.Windows.StyleHelper.DoStyleInvalidations(FrameworkElement fe, FrameworkContentElement fce, Style oldStyle, Style newStyle) at System.Windows.StyleHelper.UpdateStyleCache(FrameworkElement fe, FrameworkContentElement fce, Style oldStyle, Style newStyle, Style& styleCache) at System.Windows.FrameworkElement.OnStyleChanged(DependencyObject d, DependencyPropertyChangedEventArgs e) at System.Windows.DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs e) at System.Windows.FrameworkElement.OnPropertyChanged(DependencyPropertyChangedEventArgs e) at System.Windows.DependencyObject.NotifyPropertyChange(DependencyPropertyChangedEventArgs args) at System.Windows.DependencyObject.UpdateEffectiveValue(EntryIndex entryIndex, DependencyProperty dp, PropertyMetadata metadata, EffectiveValueEntry oldEntry, EffectiveValueEntry& newEntry, Boolean coerceWithDeferredReference, Boolean coerceWithCurrentValue, OperationType operationType) at System.Windows.DependencyObject.InvalidateProperty(DependencyProperty dp, Boolean preserveCurrentValue) at System.Windows.FrameworkElement.UpdateStyleProperty() at System.Windows.TreeWalkHelper.InvalidateOnTreeChange(FrameworkElement fe, FrameworkContentElement fce, DependencyObject parent, Boolean isAddOperation) at System.Windows.FrameworkElement.OnVisualParentChanged(DependencyObject oldParent) at System.Windows.Media.Visual.FireOnVisualParentChanged(DependencyObject oldParent) at System.Windows.Media.Visual.RemoveVisualChild(Visual child) at System.Windows.Media.VisualCollection.DisconnectChild(Int32 index) at System.Windows.Media.VisualCollection.RemoveRange(Int32 index, Int32 count) at System.Windows.Controls.UIElementCollection.RemoveRangeInternal(Int32 index, Int32 count) at System.Windows.Controls.VirtualizingStackPanel.CleanupRange(IList children, IItemContainerGenerator generator, Int32 startIndex, Int32 count) at System.Windows.Controls.VirtualizingStackPanel.CleanupContainers(Int32 firstItemInExtendedViewportIndex, Int32 itemsInExtendedViewportCount, ItemsControl itemsControl, Boolean timeBound, Int32 startTickCount) at System.Windows.Controls.VirtualizingStackPanel.OnClearChildren() at System.Windows.Controls.TreeViewItem.ClearItemContainer(Object item, ItemsControl parentItemsControl) at System.Windows.Controls.ItemContainerGenerator.UnlinkContainerFromItem(DependencyObject container, Object item, IGeneratorHost host) at System.Windows.Controls.ItemContainerGenerator.RemoveAllInternal(Boolean saveRecycleQueue) at System.Windows.Controls.ItemContainerGenerator.OnRefresh() at System.Windows.Controls.ItemContainerGenerator.OnCollectionChanged(Object sender, NotifyCollectionChangedEventArgs args) at System.Windows.WeakEventManager.ListenerList`1.DeliverEvent(Object sender, EventArgs e, Type managerType) at System.Windows.WeakEventManager.DeliverEvent(Object sender, EventArgs args) at System.Collections.Specialized.NotifyCollectionChangedEventHandler.Invoke(Object sender, NotifyCollectionChangedEventArgs e) at System.Windows.Data.CollectionView.OnCollectionChanged(NotifyCollectionChangedEventArgs args) at System.Windows.WeakEventManager.ListenerList`1.DeliverEvent(Object sender, EventArgs e, Type managerType) at System.Windows.WeakEventManager.DeliverEvent(Object sender, EventArgs args) at System.Windows.Data.CollectionView.OnCollectionChanged(NotifyCollectionChangedEventArgs args) at System.Windows.Data.ListCollectionView.RefreshOverride() at System.Windows.Data.CollectionView.RefreshInternal()\r\n\r\n- sort observable collection using collection view source\r\n\r\n- add a item to observable collection\r\n\r\n[Due to company policy removed the code and mentioned the steps done]","Url":"https://github.com/dotnet/wpf/issues/2386","RelatedDescription":"Closed issue \"'System.ArgumentNullException' at System.Windows.LogicalTreeHelper.GetChildren\" (#2386)"},{"Id":"546278892","IsPullRequest":true,"CreatedAt":"2020-01-07T13:44:41","Actor":"dotnet-maestro[bot]","Number":"2403","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20200106.6\r\n- **Date Produced**: 1/7/2020 1:07 AM\r\n- **Commit**: e3e278b940808fc30f1d91fe8b89ebc63ccdf162\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.20056.6\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2403","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2403)"},{"Id":"545520455","IsPullRequest":false,"CreatedAt":"2020-01-06T16:32:54","Actor":"Amy-Li02","Number":"2400","RawContent":null,"Title":"The WPF .NET Core app build error after installed .NET Core 5.0 SDK","State":"closed","Body":"* .NET Core Version: .NET Core SDK 5.0.100 - alpha1 5.0.100.16134\r\n* Windows version: 1909 (OS Build 18363.535)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n\r\n**More info:**\r\n1. The WPF .NET Core app build error after installed .NET Core 5.0 SDK, no matter targeting .NET Core 3.1 or .NET Core 5.0.\r\n2. The Console .NET Core app cannot reproduce this issue.\r\n3. The WinForms .NET Core app also reproduce this issue.\r\n\r\n**Actual behavior:** \r\nAfter build the WPF .NET Core app, some error message pops up. \r\n![Error](https://user-images.githubusercontent.com/49627022/71793406-a96dac80-3077-11ea-8e33-4548faf3f8c9.PNG)\r\n\r\n\r\n**Expected behavior:**\r\nThe WPF .NET Core app should build successfully.\r\n\r\n**Minimal repro:**\r\n1. Install .NET Core 5.0 SDK latest build from here: https://github.com/dotnet/core-sdk.\r\n2. Create a WPF .NET Core app.\r\n3. Build this app.","Url":"https://github.com/dotnet/wpf/issues/2400","RelatedDescription":"Closed issue \"The WPF .NET Core app build error after installed .NET Core 5.0 SDK\" (#2400)"},{"Id":"545723280","IsPullRequest":true,"CreatedAt":"2020-01-06T13:46:30","Actor":"dotnet-maestro[bot]","Number":"2402","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20200105.4\r\n- **Date Produced**: 1/6/2020 12:22 AM\r\n- **Commit**: acd633aa3394d5a0109f24437a37f2de064a526f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.20055.4\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2402","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2402)"},{"Id":"545523113","IsPullRequest":false,"CreatedAt":"2020-01-06T03:41:21","Actor":"gomathip02","Number":"2401","RawContent":null,"Title":"WPF status","State":"closed","Body":"","Url":"https://github.com/dotnet/wpf/issues/2401","RelatedDescription":"Closed issue \"WPF status\" (#2401)"},{"Id":"545495427","IsPullRequest":true,"CreatedAt":"2020-01-06T01:15:19","Actor":"dotnet-maestro[bot]","Number":"2399","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20200108.2\r\n- **Date Produced**: 1/8/2020 11:32 PM\r\n- **Commit**: 0e8c2767cfd5dc67bfd0d84a6cbe530a0bc103d9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.20058.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.Private.Winforms)\r\n- **System.CodeDom** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **System.DirectoryServices** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.MetadataLoadContext** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.Platforms** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **System.IO.Packaging** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILDAsm** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **System.Resources.Extensions** -> 5.0.0-alpha.1.20057.6 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2399","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/winforms\" (#2399)"},{"Id":"545416921","IsPullRequest":true,"CreatedAt":"2020-01-05T13:30:29","Actor":"dotnet-maestro[bot]","Number":"2398","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20200104.4\r\n- **Date Produced**: 1/5/2020 12:15 AM\r\n- **Commit**: 046bf1fb3997bbb79785b6edb58353798dac6e03\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.20054.4\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2398","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2398)"},{"Id":"545356501","IsPullRequest":false,"CreatedAt":"2020-01-05T02:01:55","Actor":"lindexi","Number":"2397","RawContent":null,"Title":"Known issus: WPF Image memory leak when remove image from visual tree","State":"open","Body":"* .NET Core Version: 3.1.100\r\n* Windows version: 18363\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n* Is this bug related specifically to tooling in Visual Studio No\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n\r\nThe image source will memory leak when we remove the image from visual tree before we set the image source as null\r\n\r\nStep:\r\n\r\n1.  Set the image source\r\n2. Add image in the VisualTree and wait the image show\r\n3. Remove image from the visual tree and then set the image source as null\r\n\r\nAnd you can find the image source object never free\r\n\r\n\r\n```\r\n        private void Button_Click(object sender, RoutedEventArgs e)\r\n        {\r\n            // Remove the current Image control from the  visual tree and set source is null when click button.\r\n            // Then new a image control and add source to the RenderTargetBitmap object and show it.\r\n            // You can see the gc never delete the RenderTargetBitmap object that make  memory leak.\r\n\r\n            var oldBorder = RootGrid.Children.OfType<Border>().LastOrDefault();\r\n            if (oldBorder != null)\r\n            {\r\n                var oldImage = (Image)oldBorder.Child;\r\n\r\n                // In order to solve it , you should set the image.Source is null and use UpdateLayout.\r\n                // The below code can solve it.\r\n                // oldImage.Source = null;\r\n                // oldImage.UpdateLayout();\r\n\r\n                // Remove the current Image control from the  visual tree.\r\n                RootGrid.Children.Remove(oldBorder);\r\n                oldImage.Source = null;\r\n                Borders.Add(oldBorder);\r\n            }\r\n\r\n            var bitmap = new RenderTargetBitmap(1024, 1024, 96, 96, PixelFormats.Default);\r\n\r\n            var image = new Image { Source = bitmap };\r\n            var border = new Border { Child = image };\r\n            RootGrid.Children.Add(border);\r\n\r\n            // In order to facilitate changes in memory, after each operation will be garbage collection\r\n            GC.Collect();\r\n        }\r\n\r\n        public readonly List<Border> Borders = new List<Border>();\r\n```\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n\r\nThe Image memory leak\r\n \r\n **Expected behavior:**\r\n\r\nThe image source object can be free \r\n\r\n **Minimal repro:**\r\n\r\nhttps://github.com/dotnet-campus/wpf-issues/tree/master/ImageMemoryLeakDotNetCore","Url":"https://github.com/dotnet/wpf/issues/2397","RelatedDescription":"Open issue \"Known issus: WPF Image memory leak when remove image from visual tree\" (#2397)"},{"Id":"545284214","IsPullRequest":true,"CreatedAt":"2020-01-04T13:43:16","Actor":"dotnet-maestro[bot]","Number":"2396","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20200103.4\r\n- **Date Produced**: 1/4/2020 12:35 AM\r\n- **Commit**: 2e5e9d68b8710e8ceea22f8405a54c8ce522cb7b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.20053.4\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2396","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2396)"},{"Id":"544990614","IsPullRequest":true,"CreatedAt":"2020-01-03T13:30:50","Actor":"dotnet-maestro[bot]","Number":"2394","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20200102.10\r\n- **Date Produced**: 1/3/2020 12:33 AM\r\n- **Commit**: 96a6a349f4c546f56aea9acfb3388816ea9d71b6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.20052.10\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2394","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2394)"},{"Id":"544576274","IsPullRequest":true,"CreatedAt":"2020-01-02T13:46:18","Actor":"dotnet-maestro[bot]","Number":"2392","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20200102.6\r\n- **Date Produced**: 1/2/2020 11:18 AM\r\n- **Commit**: 6836bc405dff640099524086c615c009b21a8fc0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.20052.6\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2392","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2392)"},{"Id":"544583720","IsPullRequest":false,"CreatedAt":"2020-01-02T13:42:57","Actor":"mbendtsen","Number":"2393","RawContent":null,"Title":"Issue with touch being disabled when having two windows in two different threads (like a splash screen)","State":"open","Body":"I found an issue where touch would be disabled.\r\nIf you want to create a custom splash screen and creates a new `Thread` for it, and then create the main window in the Main Thread, touch will no longer work.\r\nThis same code works fine in .NET Framework.\r\n\r\nProject for reproducing the issue can be found here including description: https://github.com/mbendtsen/touch_issue_net_core\r\nRequires a touch enabled device.\r\n\r\n```csharp\r\npublic partial class App : Application\r\n{\r\n   private Thread _splashThread;\r\n   \r\n   protected async override void OnStartup(StartupEventArgs e)\r\n   {\r\n       base.OnStartup(e);\r\n       \r\n       ShowSplash();\r\n       \r\n       // Simulate long running work.\r\n       await Task.Delay(2000);\r\n       \r\n       _splashViewModel.SetInitialized();\r\n       \r\n       var window = new MainWindow()\r\n       {\r\n          DataContext = new MainWindowViewModel()\r\n       };\r\n       window.Show();\r\n   }\r\n   \r\n   private void ShowSplash()\r\n   {\r\n       _splashViewModel = new SplashViewModel();\r\n       \r\n       _splashThread = new Thread(() =>\r\n       {\r\n          new Splash { DataContext = _splashViewModel }.Show();\r\n          Dispatcher.Run();\r\n       });\r\n       _splashThread.SetApartmentState(ApartmentState.STA);\r\n       _splashThread.IsBackground = true;\r\n       _splashThread.Name = \"Splash\";\r\n       _splashThread.Start();\r\n   }\r\n}\r\n```","Url":"https://github.com/dotnet/wpf/issues/2393","RelatedDescription":"Open issue \"Issue with touch being disabled when having two windows in two different threads (like a splash screen)\" (#2393)"},{"Id":"544459811","IsPullRequest":true,"CreatedAt":"2020-01-02T07:10:45","Actor":"dotnet-maestro[bot]","Number":"2391","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20200101.15\r\n- **Date Produced**: 1/2/2020 6:01 AM\r\n- **Commit**: fc97b5f1034666241284e23cbb39b95dc64d0615\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.20051.15\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2391","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2391)"},{"Id":"544456307","IsPullRequest":true,"CreatedAt":"2020-01-02T06:10:26","Actor":"dotnet-maestro[bot]","Number":"2390","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20200101.14\r\n- **Date Produced**: 1/2/2020 5:39 AM\r\n- **Commit**: a01e309183e7075671b70f7b46726dcdc346a748\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.20051.14\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2390","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2390)"},{"Id":"544450655","IsPullRequest":true,"CreatedAt":"2020-01-02T05:35:28","Actor":"dotnet-maestro[bot]","Number":"2389","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20200101.10\r\n- **Date Produced**: 1/2/2020 5:06 AM\r\n- **Commit**: 8e8e91c385898b21b5fe4bcbfdb9a18c318e51da\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.20051.10\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2389","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2389)"},{"Id":"544449233","IsPullRequest":true,"CreatedAt":"2020-01-02T05:25:03","Actor":"dotnet-maestro[bot]","Number":"2388","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20200101.8\r\n- **Date Produced**: 1/2/2020 5:00 AM\r\n- **Commit**: 0aba9fc95f40903da948da9c8a5824621f91ab23\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.20051.8\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2388","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2388)"},{"Id":"544444814","IsPullRequest":true,"CreatedAt":"2020-01-02T05:00:28","Actor":"dotnet-maestro[bot]","Number":"2387","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20200101.9\r\n- **Date Produced**: 1/2/2020 4:32 AM\r\n- **Commit**: 4691ddaecb8f6de0b3acdfc2beb2f2d014b5198a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.20051.9\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2387","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2387)"},{"Id":"544415759","IsPullRequest":true,"CreatedAt":"2020-01-02T00:40:30","Actor":"dotnet-maestro[bot]","Number":"2385","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20200101.3\r\n- **Date Produced**: 1/2/2020 12:00 AM\r\n- **Commit**: b83a2bbcc9073e272a72b8e112e79a36f537b350\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.20051.3\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2385","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2385)"},{"Id":"544414892","IsPullRequest":true,"CreatedAt":"2020-01-02T00:30:05","Actor":"dotnet-maestro[bot]","Number":"2384","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20200101.4\r\n- **Date Produced**: 1/2/2020 12:00 AM\r\n- **Commit**: 3bee336e41e600e974d2e4bc8c8879a0137e8a6c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.20051.4\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2384","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2384)"},{"Id":"544402031","IsPullRequest":true,"CreatedAt":"2020-01-01T22:05:28","Actor":"dotnet-maestro[bot]","Number":"2383","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20200101.2\r\n- **Date Produced**: 1/1/2020 9:25 PM\r\n- **Commit**: 67c0a4e304e40f4b863097933d883e67f75bc53a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.20051.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2383","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2383)"},{"Id":"546545577","IsPullRequest":false,"CreatedAt":"2019-12-16T15:52:01","Actor":"davikor","Number":"2404","RawContent":null,"Title":"Behavior change from .NET Core SDK 3.0.101 to 3.1.100 when generating MenuItems in WPF","State":"open","Body":"I write a WPF app targeting .NET Framework 4.7.2 and added a `global.json` to control which version of dotnet CLI tools to be used in building and deploying.\r\n\r\nIn this app I define a menu of `MenuItems` of which some contain `MenuItems` as their children (a submenu). In one place I set the `UsesItemContainerTemplate`-property of the parent to `true` and define an `ItemContainerTemplate` containing a `MenuItem` at the root. As expected the parents `ItemContainerGenerator` respects this template and does not generate a menu item around this parents children.\r\n\r\nAfter I switched the SDK version in `global.json` from `3.0.101` to `3.1.100` I noticed that this behavior changed. My submenuitems now are wrapped into an extra `MenuItem`.\r\n\r\nI created a super-simple example-app that reproduces this issue. It can be found [in this GitHub repo](https://github.com/davikor/menu-item-display-bug.git) alongside with screenshots of the issue.\r\n\r\nAfter checkout you can build and run this project in VS16.5 and it will behave as (I) expect it. Then you can change the SDK version in global.json to 3.1.100 and rebuild it in VS. When you run it now, you will see the unexpected result.\r\n\r\nOn a side note: When running dotnet clean/run from the console, the unexpected behavior always occurs, regardless of the SDK version defined in `global.json`. Unfortunately my knowledge of the dotnet / MSBuild system is not sufficient to further investigate here.\r\n\r\nAlso, I am not 100% sure whether this is the right place to post this issue. If there is a place better suited for my issue, please let me know and I will move this issue.","Url":"https://github.com/dotnet/wpf/issues/2404","RelatedDescription":"Open issue \"Behavior change from .NET Core SDK 3.0.101 to 3.1.100 when generating MenuItems in WPF\" (#2404)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-01-10T05:30:57.5479624Z","RunDurationInMilliseconds":851}