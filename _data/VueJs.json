{"Data":{"Vue":{"Events":[{"Id":"6965334881","Type":"IssuesEvent","CreatedAt":"2017-12-09T04:44:04","Actor":"jiayexie","Repository":"vuejs/vue","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue/issues/7211","RelatedDescription":"Opened issue \"Typescript fails to compile if I have methods on both the component and its mixin(s)\" (#7211) at vuejs/vue","RelatedBody":"### Version\r\n2.5.9\r\n\r\n### Reproduction link\r\n[https://github.com/jiayexie/vue-typescript-declaration-repro](https://github.com/jiayexie/vue-typescript-declaration-repro)\r\n\r\n### Steps to reproduce\r\nThe component file `test.tsx` doesn't build. It illustrates the problem with three scenarios:\r\n\r\n1. If I define my component with mixin's method interface, and there isn't any method in my component, the build passes. I can call the mixin's method from my component render() function.\r\n2. I define a method interface for my component, and use that to define my component. It cannot call the mixin's method even the `mixins` field references that mixin.\r\n3. I make my own method interface extend the mixin's method interface. Now my component complains that I'm not implementing the mixin's methods.\r\n\r\n![image](https://user-images.githubusercontent.com/1333389/33792562-7c84449c-dc58-11e7-8ed0-c394086d24c5.png)\r\n\r\n### What is expected?\r\nI should be able to have the mixin and the component define different methods and use all of them from the component with type safety.\r\n\r\n### What is actually happening?\r\nI cannot get a passing build with type declaration in this scenario. Please advise.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"6964822444","Type":"IssuesEvent","CreatedAt":"2017-12-08T23:32:17","Actor":"smartITNinja","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1933","RelatedDescription":"Opened issue \"vue-router doesn't work on IOS 10.3.2 (14F89) but works on IOS 11.2 (15C114)\" (#1933) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/fLswsLzh/](https://jsfiddle.net/fLswsLzh/)\r\n\r\n### Steps to reproduce\r\n1.- Open fiddle\r\n2.- The router links are not available for IOS 10 (ipad mini 4 and ipad pro devices) either on Safari or Chrome browsers but they are available and work as expected on IOS 11 (ipad mini 4)\r\n\r\n\r\n### What is expected?\r\nYou should be able to access the router links\r\n\r\n### What is actually happening?\r\nRouter links are not available for IOS 10 (Ipad Mini 4 and Ipad Pro) but they are available on IOS 11 as expected.\r\n\r\n---\r\nBehavior can easily reproduce on both devices using Safari and Chrome browsers.\r\n\r\nDo you have this bug confirmed? and, which version is preferred to use on IOS 10 then?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6964160599","Type":"IssuesEvent","CreatedAt":"2017-12-08T20:25:14","Actor":"mickeyzoox","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1932","RelatedDescription":"Opened issue \"Type declaration incomplete for Location.query\" (#1932) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/82013/](https://jsfiddle.net/50wL7mdz/82013/) (This doesn't actually work, but shows the code you'd need locally to repro the bug)\r\n\r\n### Steps to reproduce\r\n0. Note that JSFiddle doesn't appear to give Typescript compiler errors, so the repro linked will have to be ported into a local Typescript Vue project.\r\n\r\n1. In a Typescript Vue project:\r\n```\r\nrouter.push({ query: { array: [1,2,3] }})\r\n```\r\n\r\n### What is expected?\r\nThis should compile without error \r\n\r\n### What is actually happening?\r\nYou get an error:\r\n```\r\n error TS2345: Argument of type '{ name: string; query: QueryParams; }' is not assignable to parameter of type 'RawLocation'.\r\n  Type '{ name: string; query: QueryParams; }' is not assignable to type 'Location'.\r\n    Types of property 'query' are incompatible.\r\n      Type 'QueryParams' is not assignable to type 'Dictionary<string> | undefined'.\r\n        Type 'QueryParams' is not assignable to type 'Dictionary<string>'.\r\n          Index signatures are incompatible.\r\n            Type 'string | string[] | undefined' is not assignable to type 'string'.\r\n              Type 'undefined' is not assignable to type 'string'.\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6962467436","Type":"PullRequestEvent","CreatedAt":"2017-12-08T13:52:40","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/1931","RelatedDescription":"Opened pull request \"docs: add example of nested named routes\" (#1931) at vuejs/vue-router","RelatedBody":"Closes #1921\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n"},{"Id":"6961662387","Type":"IssuesEvent","CreatedAt":"2017-12-08T10:21:46","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1921","RelatedDescription":"Reopened issue \"Named Views and Nested Routes Problem\" (#1921) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\nFull problem Example\r\n[https://jsfiddle.net/oaxs8ek8/](https://jsfiddle.net/oaxs8ek8/)\r\n\r\n### Steps to reproduce\r\nI have created a Homepage with  2 Named Views called for example RouteA and RouteB. \r\nNow RouteA and RouteB have 2 other nested routes like so RouteA1 and RouteA2 - RouteB1 and RouteB2.\r\n\r\n```\r\nconst router = new VueRouter({\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      components: {\r\n        RouteA : Bar,\r\n        RouteB: Baz\r\n      }\r\n    }\r\n  ]\r\n})\r\n```\r\n\r\nthis work very well for the first route but then i cant continue the routing chain for the 2 differente route since i cant only do this: \r\n\r\n```\r\nconst router = new VueRouter({\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      components: {\r\n        RouteA : Bar,\r\n        RouteB: Baz\r\n      },\r\n      children: [\r\n        {\r\n          path: '' // Load RouteA1 on RouteA\r\n          component: UserProfile\r\n        },\r\n        {\r\n          path: '', // Load RouteB1 on RouteB\r\n          component: UserPosts\r\n        }\r\n      ]\r\n    }\r\n    }\r\n  ]\r\n})\r\n```\r\n\r\nThere is no way to specify the different route.\r\n\r\nA solution could be enable this for example:\r\n\r\n```\r\nconst router = new VueRouter({\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      components: {\r\n        RouteA : {\r\n                     path: ''\r\n                     component: Bar,\r\n                     children:{\r\n                        ....\r\n                     }\r\n              },\r\n        RouteB:  {\r\n                     path: ''\r\n                     component: Baz,\r\n                     children:{\r\n                        ....\r\n                     }\r\n      }\r\n    }\r\n  ]\r\n})\r\n```\r\n\r\n### What is expected?\r\nThe router should allow nested route with named view router\r\n\r\n### What is actually happening?\r\nit's not routeing correctly\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6961660735","Type":"IssuesEvent","CreatedAt":"2017-12-08T10:21:22","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1921","RelatedDescription":"Closed issue \"Named Views and Nested Routes Problem\" (#1921) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\nFull problem Example\r\n[https://jsfiddle.net/oaxs8ek8/](https://jsfiddle.net/oaxs8ek8/)\r\n\r\n### Steps to reproduce\r\nI have created a Homepage with  2 Named Views called for example RouteA and RouteB. \r\nNow RouteA and RouteB have 2 other nested routes like so RouteA1 and RouteA2 - RouteB1 and RouteB2.\r\n\r\n```\r\nconst router = new VueRouter({\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      components: {\r\n        RouteA : Bar,\r\n        RouteB: Baz\r\n      }\r\n    }\r\n  ]\r\n})\r\n```\r\n\r\nthis work very well for the first route but then i cant continue the routing chain for the 2 differente route since i cant only do this: \r\n\r\n```\r\nconst router = new VueRouter({\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      components: {\r\n        RouteA : Bar,\r\n        RouteB: Baz\r\n      },\r\n      children: [\r\n        {\r\n          path: '' // Load RouteA1 on RouteA\r\n          component: UserProfile\r\n        },\r\n        {\r\n          path: '', // Load RouteB1 on RouteB\r\n          component: UserPosts\r\n        }\r\n      ]\r\n    }\r\n    }\r\n  ]\r\n})\r\n```\r\n\r\nThere is no way to specify the different route.\r\n\r\nA solution could be enable this for example:\r\n\r\n```\r\nconst router = new VueRouter({\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      components: {\r\n        RouteA : {\r\n                     path: ''\r\n                     component: Bar,\r\n                     children:{\r\n                        ....\r\n                     }\r\n              },\r\n        RouteB:  {\r\n                     path: ''\r\n                     component: Baz,\r\n                     children:{\r\n                        ....\r\n                     }\r\n      }\r\n    }\r\n  ]\r\n})\r\n```\r\n\r\n### What is expected?\r\nThe router should allow nested route with named view router\r\n\r\n### What is actually happening?\r\nit's not routeing correctly\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"6964038486","Type":"IssuesEvent","CreatedAt":"2017-12-08T19:53:31","Actor":"leonardotessaroalves","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1086","RelatedDescription":"Opened issue \"How can i group an object in getters?\" (#1086) at vuejs/vuex","RelatedBody":"`const getters = {\r\n  getGroupItems: (state) => {\r\n    /*\r\n     *\r\n     * using _ as underscore\r\n     return _.groupBy(state.cart, 'type') // doesnt work\r\n     */\r\n    return state.cart\r\n  }\r\n}`"},{"Id":"6961672745","Type":"IssuesEvent","CreatedAt":"2017-12-08T10:24:10","Actor":"pSchaub","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1085","RelatedDescription":"Opened issue \"Easy two-way binding between v-model and vuex #1084\" (#1085) at vuejs/vuex","RelatedBody":"### What problem does this feature solve?\r\nEasy two-way binding between `v-model` and vuex state / getters / mutations / actions.\r\n\r\n### What does the proposed API look like?\r\nFor example I want to bind the state of the global menu to a vuex state.\r\n\r\nMeanwhile I use this manual workaround in my component:\r\n\r\ncomputed: {\r\n  nav: {\r\n    get () { return this.$store.state.nav },\r\n    set (v) { this.$store.commit('SET_NAV', v) }\r\n  }\r\n}\r\n\r\nOf course I could change that to getters / actions instead of state / mutations.\r\n\r\n**It would be helpful to have an easy function like `mapGetters` to do this.**\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"6961658227","Type":"IssuesEvent","CreatedAt":"2017-12-08T10:20:46","Actor":"pSchaub","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1084","RelatedDescription":"Opened issue \"Easy two-way binding between v-model and vuex\" (#1084) at vuejs/vuex","RelatedBody":"Is it possible to reduce the needed code to bind a `v-model` to a vuex state (over getters / mutations)?\r\n\r\nFor example I want to bind the state of the global menu to a vuex state.\r\n\r\nMeanwhile I use this manual workaround in my component:\r\n```\r\ncomputed: {\r\n  nav: {\r\n    get () { return this.$store.state.nav },\r\n    set (v) { this.$store.commit('SET_NAV', v) }\r\n  }\r\n}\r\n```\r\n\r\nOf course I could change that to getters / actions.\r\n\r\nI just want to know if there is a way like `mapGetters` to reduce the needed code."},{"Id":"6961108189","Type":"IssuesEvent","CreatedAt":"2017-12-08T07:57:39","Actor":"vue-issue-bot","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/1083","RelatedDescription":"Closed issue \"使用Vuex, 不同组件间，能触发事件吗？同辈组件。\" (#1083) at vuejs/vuex","RelatedBody":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\nAccording to vuex , commponnet A can muatate or dispatch  the  method of component B? \r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2017-12-09T05:30:34.7452592Z","RunDurationInMilliseconds":1992}