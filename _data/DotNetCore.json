{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework March 1, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019","PublishedOn":"2019-03-01T18:25:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, March 1, we released the February 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-march-1-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/","RawContent":null},{"Title":"An update to C# versions and C# tooling","PublishedOn":"2019-02-27T18:59:23+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Starting with Visual Studio 2019 Preview 4 and RC, we&#8217;ll be adjusting how C# versions are treated in .NET tooling.\nSummary of changes\nFirstly, we&#8217;re adding two new Language Version...","Href":"https://devblogs.microsoft.com/dotnet/an-update-to-c-versions-and-c-tooling/","RawContent":null},{"Title":"How to port desktop applications to .NET Core 3.0","PublishedOn":"2019-02-26T18:00:30+00:00","CommentsCount":15,"FacebookCount":0,"Summary":"In this post, I will describe how to port a desktop application from .NET Framework to .NET Core. I picked a WinForms application as an example. Steps for WPF application are similar and I&#8217;ll...","Href":"https://devblogs.microsoft.com/dotnet/how-to-port-desktop-applications-to-net-core-3-0/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access Build 3745","PublishedOn":"2019-02-21T19:27:54+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As we get closer to the final version, our efforts are focused on stabilizing the release over the coming weeks. Please keep up the support by trying out our latest preview 3745 and provide any...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-framework-4-8-early-access-build-3745/","RawContent":null},{"Title":".NET Framework February 2019 Preview of Quality Rollup","PublishedOn":"2019-02-19T15:19:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we released the February 2019 Preview of Quality Rollup.\nQuality and Reliability\nThis release contains the following quality and reliability improvements.\nCLR\n\nAddresses an issue in...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-february-2019-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core 1.0 and 1.1 will reach End of Life on June 27, 2019","PublishedOn":"2019-02-19T15:00:16+00:00","CommentsCount":2,"FacebookCount":0,"Summary":".NET Core 1.0 was released on June 27, 2016 and .NET Core 1.1 was released on November 16, 2016. As an LTS release, .NET Core 1.0 is supported for three years. .NET Core 1.1 fits into the same support...","Href":"https://devblogs.microsoft.com/dotnet/net-core-1-0-and-1-1-will-reach-end-of-life-on-june-27-2019/","RawContent":null},{"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","PublishedOn":"2019-02-15T13:03:53+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Final Update 2/19/19 @1:30 PM (PST): This advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no...","Href":"https://devblogs.microsoft.com/dotnet/advisory-on-february-2019-security-update-for-windows-10-update-1809/","RawContent":null},{"Title":"Microsoft’s Developer Blogs are Getting an Update","PublishedOn":"2019-02-13T18:49:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the coming days, we’ll be moving our developer blogs to a new platform with a modern, clean design and powerful features that will make it easy for you to discover and share great content. This...","Href":"https://devblogs.microsoft.com/dotnet/microsofts-developer-blogs-are-getting-an-update/","RawContent":null},{"Title":"Help us make the .NET Architecture guides better for you!","PublishedOn":"2019-02-13T15:47:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the last couple of years, we worked with experts to create some incredible architecture guides &#38; reference samples for .NET developers. We focused on Microservices Architecture, Modernizing...","Href":"https://devblogs.microsoft.com/dotnet/help-us-make-the-net-architecture-guides-better-for-you/","RawContent":null},{"Title":".NET Framework February 2019 Security and Quality Rollup","PublishedOn":"2019-02-13T13:45:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Updated: February 15, 2019\n\nA new Advisory on February 2019 Security update for Windows 10 update 1809 has been released today for issues customers have reported with .NET 4.8 Preview and this...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-february-2019-security-and-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9178188648","Type":"PullRequestEvent","CreatedAt":"2019-03-04T22:18:31","Actor":"jkonicki","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Opened pull request \"Fix logo and update team contributors\" (#136) at dotnet/foundation","RelatedBody":""},{"Id":"9168056662","Type":"PullRequestEvent","CreatedAt":"2019-03-02T18:57:28","Actor":"manne","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Opened pull request \"adds Umbraco logo\" (#135) at dotnet/foundation","RelatedBody":"fixes #124 "},{"Id":"9168030118","Type":"PullRequestEvent","CreatedAt":"2019-03-02T18:43:42","Actor":"manne","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Opened pull request \"adds the prism logo\" (#134) at dotnet/foundation","RelatedBody":"fixes #126 "},{"Id":"9163318579","Type":"PullRequestEvent","CreatedAt":"2019-03-01T15:37:52","Actor":"glennawatson","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Opened pull request \"Add additional ReactiveUI organization projects.\" (#133) at dotnet/foundation","RelatedBody":""},{"Id":"9142546450","Type":"IssuesEvent","CreatedAt":"2019-02-26T23:12:20","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/75","RelatedDescription":"Closed issue \"Fix mailto link on Team page\" (#75) at dotnet/foundation","RelatedBody":"When visiting [https://dotnetfoundation.org/team](https://dotnetfoundation.org/team), I noticed that the email icon under **Miklos Barkoczi**'s name has `mailto:` referenced twice. It may be obvious to some, but not to others.\r\n\r\n```\r\n<a href=\"mailto:mailto:contact@dotnetfoundation.org\">\r\n    <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>\r\n</a>\r\n```\r\nshould be\r\n```\r\n<a href=\"mailto:contact@dotnetfoundation.org\">\r\n    <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i>\r\n</a>\r\n```"},{"Id":"9089021734","Type":"PullRequestEvent","CreatedAt":"2019-02-18T17:45:45","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Merged pull request \"Update MVVM project logo\" (#132) at dotnet/foundation","RelatedBody":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125"},{"Id":"9089021716","Type":"IssuesEvent","CreatedAt":"2019-02-18T17:45:45","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125) at dotnet/foundation","RelatedBody":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139"},{"Id":"9089015890","Type":"PullRequestEvent","CreatedAt":"2019-02-18T17:44:39","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Merged pull request \"Update links\" (#131) at dotnet/foundation","RelatedBody":"Replace http links with https where possible - both returned 200 OK."},{"Id":"9018375188","Type":"PullRequestEvent","CreatedAt":"2019-02-06T14:07:17","Actor":"Potapy4","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Opened pull request \"Update MVVM project logo\" (#132) at dotnet/foundation","RelatedBody":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125"},{"Id":"9001989260","Type":"PullRequestEvent","CreatedAt":"2019-02-04T07:33:23","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Opened pull request \"Update links\" (#131) at dotnet/foundation","RelatedBody":"Replace http links with https where possible - both returned 200 OK."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9150531193","Type":"IssuesEvent","CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Opened issue \"SDK Installers will remove previous patch versions\" (#102) at dotnet/announcements","RelatedBody":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions)."},{"Id":"9078417647","Type":"IssuesEvent","CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Opened issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101) at dotnet/announcements","RelatedBody":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition."},{"Id":"9075495754","Type":"IssuesEvent","CreatedAt":"2019-02-15T14:06:30","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Opened issue \"Advisory on February 2019 Security update for Windows 10 update 1809\" (#100) at dotnet/announcements","RelatedBody":"<span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.\r\n\r\nWe are actively working on fixing and re-shipping a correction for this issue. If you installed the February 2019 security update and have not yet seen any negative behavior, we recommend that you leave your system as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We are working to improve our testing infrastructure to prevent these type of issues in the future. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this <a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/15/advisory-on-february-2019-security-update-for-windows-10-update-1809/\" rel=\"nofollow\">post</a> as we have new information.\r\n<h2>Guidance</h2>\r\nWe are working on guidance and will update this pose and as we have new information.\r\n<h2>Workaround</h2>\r\nThere are no known workarounds at this time.\r\n<h2>Symptoms</h2>\r\nAfter installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:\r\n<p class=\"xxxxxmsonormal\"><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></p>\r\n"},{"Id":"9070407129","Type":"IssuesEvent","CreatedAt":"2019-02-14T19:28:26","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Opened issue \"Supporting new Alpine versions (for containers)\" (#99) at dotnet/announcements","RelatedBody":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread."},{"Id":"9060710562","Type":"IssuesEvent","CreatedAt":"2019-02-13T14:48:22","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Opened issue \"February 2019 .NET Updates\" (#98) at dotnet/announcements","RelatedBody":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework January 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9179486395","Type":"IssuesEvent","CreatedAt":"2019-03-05T03:22:36","Actor":"cshung","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/23024","RelatedDescription":"Opened issue \"EE suspension for sampling profiler failed to complete\" (#23024) at dotnet/coreclr","RelatedBody":"# Symptom:\r\nWhen debugging a test case with an aggresive printing breakpoint set, the debuggee deadlocks.\r\n# Repro (x86, debug)\r\nTake my changes in https://github.com/dotnet/coreclr/pull/23012 and run the test case in #23009 with WinDBG attached and set this aggressively logging breakpoint `bm CoreCLR!EventPipeBufferList::InsertTail \"k;g\"`.\r\nIt will stop and deadlock.\r\n# Analysis\r\nIt appears that the EE suspension triggered in thread 6 will not complete because thread 9 is waiting on the LoaderHeap lock while it is held by thread 0 which is already suspended. \r\n\r\n@janvorli, can you please take a look?\r\n\r\n# Stacks\r\n```\r\n0:012> ~*k\r\n\r\n   0  Id: 6bfe4.6d4fc Suspend: 1 Teb: 00262000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 00574f2c 761a00a9 ntdll!NtWaitForSingleObject+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 129] \r\n01 00574fa0 0f509f2b KERNELBASE!WaitForSingleObjectEx+0x99 [minkernel\\kernelbase\\synch.c @ 1328] \r\n02 00574fb4 0f50cfec CoreCLR!CLREventWaitHelper2+0x1b [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 378] \r\n03 00574ffc 0f509fab CoreCLR!`CLREventWaitHelper'::`3'::__Body::Run+0x7c [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 402] \r\n04 00575058 0f50e684 CoreCLR!CLREventWaitHelper+0x7b [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 404] \r\n05 00575124 0f50d579 CoreCLR!CLREventBase::WaitEx+0x324 [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 471] \r\n06 00575140 0fc0e153 CoreCLR!CLREventBase::Wait+0x39 [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 418] \r\n07 00575158 0fc0e0ff CoreCLR!GCEvent::Impl::Wait+0x43 [c:\\dev\\coreclr\\src\\vm\\gcenv.os.cpp @ 847] \r\n08 0057516c 0fc108ba CoreCLR!GCEvent::Wait+0x3f [c:\\dev\\coreclr\\src\\vm\\gcenv.os.cpp @ 925] \r\n09 00575184 0f4c7f05 CoreCLR!WKS::GCHeap::WaitUntilGCComplete+0x6a [c:\\dev\\coreclr\\src\\gc\\gcee.cpp @ 404] \r\n0a 00575254 0f3d9f53 CoreCLR!Thread::RareDisablePreemptiveGC+0x355 [c:\\dev\\coreclr\\src\\vm\\threadsuspend.cpp @ 2794] \r\n0b 00575264 0f48f5ea CoreCLR!Thread::DisablePreemptiveGC+0xb3 [c:\\dev\\coreclr\\src\\vm\\threads.h @ 2079] \r\n0c 00575290 0f5df1f3 CoreCLR!GCHolderBase::EnterInternalCoop_HackNoThread+0x10a [c:\\dev\\coreclr\\src\\vm\\threads.h @ 5655] \r\n0d 005752b4 0f990891 CoreCLR!GCCoopHackNoThread::GCCoopHackNoThread+0x33 [c:\\dev\\coreclr\\src\\vm\\threads.h @ 5885] \r\n0e 005753d0 0f4a81a3 CoreCLR!HashMap::LookupValue+0x181 [c:\\dev\\coreclr\\src\\vm\\hash.cpp @ 554] \r\n0f 005753ec 0f859f51 CoreCLR!PtrHashMap::LookupValue+0x53 [c:\\dev\\coreclr\\src\\vm\\hash.h @ 598] \r\n10 00575488 0f40efad CoreCLR!ReadyToRunInfo::GetMethodDescForEntryPoint+0x121 [c:\\dev\\coreclr\\src\\vm\\readytoruninfo.cpp @ 62] \r\n11 0057554c 0f64070b CoreCLR!ReadyToRunJitManager::JitCodeToMethodInfo+0x1ed [c:\\dev\\coreclr\\src\\vm\\codeman.cpp @ 6976] \r\n12 005755f0 0f5b6dc8 CoreCLR!EECodeInfo::Init+0x15b [c:\\dev\\coreclr\\src\\vm\\jitinterface.cpp @ 14046] \r\n13 00575684 0f5b62c9 CoreCLR!StackFrameIterator::ProcessIp+0x118 [c:\\dev\\coreclr\\src\\vm\\stackwalk.cpp @ 2788] \r\n14 00575710 0f5b5cdb CoreCLR!StackFrameIterator::PostProcessingForManagedFrames+0x149 [c:\\dev\\coreclr\\src\\vm\\stackwalk.cpp @ 3212] \r\n15 005757f8 0f5b53c0 CoreCLR!StackFrameIterator::NextRaw+0x8ab [c:\\dev\\coreclr\\src\\vm\\stackwalk.cpp @ 2587] \r\n16 00575820 0f5b7c6c CoreCLR!StackFrameIterator::Next+0x70 [c:\\dev\\coreclr\\src\\vm\\stackwalk.cpp @ 1605] \r\n17 00575ad8 0f5b7a93 CoreCLR!Thread::StackWalkFramesEx+0x1bc [c:\\dev\\coreclr\\src\\vm\\stackwalk.cpp @ 956] \r\n18 00575e1c 0f7c0462 CoreCLR!Thread::StackWalkFrames+0x2c3 [c:\\dev\\coreclr\\src\\vm\\stackwalk.cpp @ 1034] \r\n19 00575ee4 0f7c0224 CoreCLR!EventPipe::WalkManagedStackForThread+0x1e2 [c:\\dev\\coreclr\\src\\vm\\eventpipe.cpp @ 875] \r\n1a 00575f78 0fb35a9e CoreCLR!EventPipe::WalkManagedStackForCurrentThread+0x124 [c:\\dev\\coreclr\\src\\vm\\eventpipe.cpp @ 852] \r\n1b 0057602c 0fc96e26 CoreCLR!EventPipeEventInstance::EventPipeEventInstance+0x25e [c:\\dev\\coreclr\\src\\vm\\eventpipeeventinstance.cpp @ 65] \r\n1c 00576168 0fb3f51b CoreCLR!EventPipeBuffer::WriteEvent+0x2e6 [c:\\dev\\coreclr\\src\\vm\\eventpipebuffer.cpp @ 78] \r\n1d 0057624c 0f7c0f51 CoreCLR!EventPipeBufferManager::WriteEvent+0x2fb [c:\\dev\\coreclr\\src\\vm\\eventpipebuffermanager.cpp @ 360] \r\n1e 005766bc 0f7c0618 CoreCLR!EventPipe::WriteEventInternal+0x231 [c:\\dev\\coreclr\\src\\vm\\eventpipe.cpp @ 771] \r\n1f 00576764 0fdcd357 CoreCLR!EventPipe::WriteEvent+0x138 [c:\\dev\\coreclr\\src\\vm\\eventpipe.cpp @ 720] \r\n20 005767c4 0fea6cb8 CoreCLR!EventPipeWriteEventAllocRequest+0x167 [c:\\dev\\coreclr\\bin\\obj\\windows_nt.x86.debug\\eventing\\eventpipe\\eventpipe\\dotnetruntimeprivate.cpp @ 6526] \r\n21 005767f0 0fea6c22 CoreCLR!FireEtwAllocRequest+0x28 [c:\\dev\\coreclr\\bin\\obj\\windows_nt.x86.debug\\src\\inc\\clretwallmain.h @ 5366] \r\n22 00576814 0feaa2b2 CoreCLR!`anonymous namespace'::EtwAllocRequest+0x22 [c:\\dev\\coreclr\\src\\utilcode\\loaderheap.cpp @ 39] \r\n23 005769ac 0fea9485 CoreCLR!UnlockedLoaderHeap::UnlockedAllocMem_NoThrow+0x692 [c:\\dev\\coreclr\\src\\utilcode\\loaderheap.cpp @ 1388] \r\n24 00576ae4 0f413895 CoreCLR!UnlockedLoaderHeap::UnlockedAllocMem+0x335 [c:\\dev\\coreclr\\src\\utilcode\\loaderheap.cpp @ 1266] \r\n25 00576b34 0f41382e CoreCLR!LoaderHeap::RealAllocMemUnsafe+0x55 [c:\\dev\\coreclr\\src\\inc\\loaderheap.h @ 565] \r\n26 00576b50 0fa60f3b CoreCLR!LoaderHeap::RealAllocMem+0x3e [c:\\dev\\coreclr\\src\\inc\\loaderheap.h @ 520] \r\n27 00576c08 0fa76bb7 CoreCLR!MethodTableBuilder::AllocateFromLowFrequencyHeap+0x13b [c:\\dev\\coreclr\\src\\vm\\methodtablebuilder.cpp @ 11630] \r\n28 00576d08 0fa5ffc4 CoreCLR!MethodTableBuilder::InitNewMethodDesc+0x2f7 [c:\\dev\\coreclr\\src\\vm\\methodtablebuilder.cpp @ 5061] \r\n29 00576df8 0fa603c5 CoreCLR!MethodTableBuilder::AllocAndInitMethodDescChunk+0x2d4 [c:\\dev\\coreclr\\src\\vm\\methodtablebuilder.cpp @ 6850] \r\n2a 00576eac 0fa645d2 CoreCLR!MethodTableBuilder::AllocAndInitMethodDescs+0x2b5 [c:\\dev\\coreclr\\src\\vm\\methodtablebuilder.cpp @ 6785] \r\n2b 00577ec4 0fa6ab7b CoreCLR!MethodTableBuilder::BuildMethodTableThrowing+0x1752 [c:\\dev\\coreclr\\src\\vm\\methodtablebuilder.cpp @ 1661] \r\n2c 005782e4 0f5e6e38 CoreCLR!ClassLoader::CreateTypeHandleForTypeDefThrowing+0x12eb [c:\\dev\\coreclr\\src\\vm\\methodtablebuilder.cpp @ 12175] \r\n2d 00578520 0f5e7fa4 CoreCLR!ClassLoader::CreateTypeHandleForTypeKey+0x368 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3340] \r\n2e 005786d4 0f5f53e1 CoreCLR!ClassLoader::DoIncrementalLoad+0x464 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3268] \r\n2f 005788ec 0f5f431e CoreCLR!ClassLoader::LoadTypeHandleForTypeKey_Body+0xa71 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 4030] \r\n30 00578a60 0f5f3e62 CoreCLR!ClassLoader::LoadTypeHandleForTypeKey+0x39e [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3756] \r\n31 00578d54 0f5f300c CoreCLR!ClassLoader::LoadTypeDefThrowing+0xd52 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 2644] \r\n32 00578f78 0f5eeeda CoreCLR!ClassLoader::LoadTypeDefOrRefThrowing+0x9ec [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 2816] \r\n33 00579110 0f5ee6e6 CoreCLR!ClassLoader::LoadApproxTypeThrowing+0x72a [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3159] \r\n34 005791d4 0fa69fb5 CoreCLR!ClassLoader::LoadApproxParentThrowing+0x1e6 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3213] \r\n35 005795d8 0f5e6e38 CoreCLR!ClassLoader::CreateTypeHandleForTypeDefThrowing+0x725 [c:\\dev\\coreclr\\src\\vm\\methodtablebuilder.cpp @ 11912] \r\n36 00579814 0f5e7fa4 CoreCLR!ClassLoader::CreateTypeHandleForTypeKey+0x368 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3340] \r\n37 005799c8 0f5f53e1 CoreCLR!ClassLoader::DoIncrementalLoad+0x464 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3268] \r\n38 00579be0 0f5f431e CoreCLR!ClassLoader::LoadTypeHandleForTypeKey_Body+0xa71 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 4030] \r\n39 00579d54 0f5f3e62 CoreCLR!ClassLoader::LoadTypeHandleForTypeKey+0x39e [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3756] \r\n3a 0057a048 0f5f300c CoreCLR!ClassLoader::LoadTypeDefThrowing+0xd52 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 2644] \r\n3b 0057a26c 0f8041cd CoreCLR!ClassLoader::LoadTypeDefOrRefThrowing+0x9ec [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 2816] \r\n3c 0057a590 0fa9e48d CoreCLR!SigPointer::GetTypeHandleThrowing+0x129d [c:\\dev\\coreclr\\src\\vm\\siginfo.cpp @ 1500] \r\n3d 0057a664 0f641a02 CoreCLR!ZapSig::DecodeType+0x16d [c:\\dev\\coreclr\\src\\vm\\zapsig.cpp @ 810] \r\n3e 0057a830 0f6950e0 CoreCLR!LoadDynamicInfoEntry+0x202 [c:\\dev\\coreclr\\src\\vm\\jitinterface.cpp @ 13290] \r\n3f 0057a90c 0f6c5f30 CoreCLR!Module::FixupNativeEntry+0x240 [c:\\dev\\coreclr\\src\\vm\\ceeload.cpp @ 10603] \r\n40 0057aa74 0f6ca7d2 CoreCLR!Module::FixupDelayListAux<Module *,int (__thiscall Module::*)(CORCOMPILE_IMPORT_SECTION *,unsigned long,unsigned long *)>+0x450 [c:\\dev\\coreclr\\src\\vm\\ceeload.inl @ 608] \r\n41 0057aaa8 0f8598de CoreCLR!Module::FixupDelayList+0x62 [c:\\dev\\coreclr\\src\\vm\\ceeload.inl @ 512] \r\n42 0057abbc 0f6cc4eb CoreCLR!ReadyToRunInfo::GetEntryPoint+0x3de [c:\\dev\\coreclr\\src\\vm\\readytoruninfo.cpp @ 745] \r\n43 0057ac5c 0f6cbf3c CoreCLR!MethodDesc::GetPrecompiledR2RCode+0x17b [c:\\dev\\coreclr\\src\\vm\\prestub.cpp @ 529] \r\n44 0057acf4 0f6cfe36 CoreCLR!MethodDesc::GetPrecompiledCode+0x16c [c:\\dev\\coreclr\\src\\vm\\prestub.cpp @ 413] \r\n45 0057ad98 0f6cfa3d CoreCLR!MethodDesc::PrepareILBasedCode+0x166 [c:\\dev\\coreclr\\src\\vm\\prestub.cpp @ 370] \r\n46 0057ae28 0f6d00c6 CoreCLR!MethodDesc::PrepareCode+0x17d [c:\\dev\\coreclr\\src\\vm\\prestub.cpp @ 360] \r\n47 0057aee0 0f6c8c5f CoreCLR!MethodDesc::PrepareInitialCode+0x176 [c:\\dev\\coreclr\\src\\vm\\prestub.cpp @ 316] \r\n48 0057b058 0f6d3336 CoreCLR!MethodDesc::DoPrestub+0x7cf [c:\\dev\\coreclr\\src\\vm\\prestub.cpp @ 1893] \r\n49 0057b1c0 0f478b8b CoreCLR!PreStubWorker+0x336 [c:\\dev\\coreclr\\src\\vm\\prestub.cpp @ 1649] \r\n4a 0057b1e4 3097a220 CoreCLR!ThePreStub+0x11 [C:\\Dev\\coreclr\\src\\vm\\i386\\asmhelpers.asm @ 1672] \r\n4b 0057b248 30959917 System_Private_CoreLib!System.Reflection.RuntimeAssembly.GetManifestResourceStream(System.Type, System.String)+0x13c\r\n4c 0057b284 30958baa System_Private_CoreLib!System.Resources.ManifestBasedResourceGroveler.GetManifestResourceStream(System.Reflection.Assembly, System.String)+0x87\r\n4d 0057b344 3095c9df System_Private_CoreLib!System.Resources.ManifestBasedResourceGroveler.GrovelForResourceSet(System.Globalization.CultureInfo, System.Collections.Generic.Dictionary`2<System.String,System.Resources.ResourceSet>, Boolean, Boolean)+0x282\r\n4e 0057b410 3095d21d System_Private_CoreLib!System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo, Boolean, Boolean)+0x27b\r\n4f 0057b4dc 307b8012 System_Private_CoreLib!System.Resources.ResourceManager.GetString(System.String, System.Globalization.CultureInfo)+0x205\r\n50 0057b5c0 307b7bbd System_Private_CoreLib!System.SR.InternalGetResourceString(System.String)+0x3ea\r\n51 0057b600 307b7b7b System_Private_CoreLib!System.SR.GetResourceString(System.String, System.String)+0x2d\r\n52 0057b614 30a73e19 System_Private_CoreLib!System.SR.GetResourceString(System.String)+0x23\r\n53 0057b630 30a6d295 System_Private_CoreLib!System.Diagnostics.Tracing.Resources.GetResourceString(System.String, System.Object[])+0x21\r\n54 0057b6bc 30a6f976 System_Private_CoreLib!System.Diagnostics.Tracing.ManifestBuilder.GetTypeNameHelper(System.Type)+0x2d5\r\n55 0057b704 30a6e768 System_Private_CoreLib!System.Diagnostics.Tracing.ManifestBuilder.GetTypeName(System.Type)+0xd6\r\n56 0057b804 30a6771d System_Private_CoreLib!System.Diagnostics.Tracing.ManifestBuilder.AddEventParameter(System.Type, System.String)+0x200\r\n57 0057bce4 30a650cd System_Private_CoreLib!System.Diagnostics.Tracing.EventSource.CreateManifestAndDescriptors(System.Type, System.String, System.Diagnostics.Tracing.EventSource, System.Diagnostics.Tracing.EventManifestOptions)+0x1541\r\n58 0057bde4 30a64422 System_Private_CoreLib!System.Diagnostics.Tracing.EventSource.EnsureDescriptorsInitialized()+0x16d\r\n59 0057bf7c 30a60bad System_Private_CoreLib!System.Diagnostics.Tracing.EventSource.DoCommand(System.Diagnostics.Tracing.EventCommandEventArgs)+0xe2\r\n5a 0057c064 30a5dc88 System_Private_CoreLib!System.Diagnostics.Tracing.EventSource.Initialize(System.Guid, System.String, System.String[])+0x4cd\r\n5b 0057c0e0 30a5db4a System_Private_CoreLib!System.Diagnostics.Tracing.EventSource..ctor(System.Diagnostics.Tracing.EventSourceSettings, System.String[])+0x134\r\n5c 0057c0f4 30a5dab1 System_Private_CoreLib!System.Diagnostics.Tracing.EventSource..ctor(System.Diagnostics.Tracing.EventSourceSettings)+0x1a\r\n5d 0057c100 0a4e24ad System_Private_CoreLib!System.Diagnostics.Tracing.EventSource..ctor()+0x15\r\n5e 0057c110 0a4e2465 tracecontrol!Tracing.Tests.SimpleEventSource..ctor()+0x25 [C:\\Dev\\coreclr\\tests\\src\\tracing\\tracecontrol\\TraceControl.cs @ 29] \r\n5f 0057c11c 0f4787f1 tracecontrol!Tracing.Tests.SimpleEventSource..cctor()+0x2d [C:\\Dev\\coreclr\\tests\\src\\tracing\\tracecontrol\\TraceControl.cs @ 23] \r\n60 0057c128 0f83a911 CoreCLR!CallDescrWorkerInternal+0x34 [C:\\Dev\\coreclr\\src\\vm\\i386\\asmhelpers.asm @ 612] \r\n61 0057c544 0f83ab95 CoreCLR!CallDescrWorker+0x121 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 129] \r\n62 0057c5ec 0f83bd66 CoreCLR!CallDescrWorkerWithHandler+0x205 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 72] \r\n63 0057c630 0f83b9e4 CoreCLR!`DispatchCallDebuggerWrapper'::`3'::__Body::Run+0x76 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 164] \r\n64 0057c688 0f83bc10 CoreCLR!DispatchCallDebuggerWrapper+0x74 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 164] \r\n65 0057c744 0f8ac413 CoreCLR!DispatchCallSimple+0x190 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 224] \r\n66 0057c8e0 0f89815d CoreCLR!MethodTable::RunClassInitEx+0x453 [c:\\dev\\coreclr\\src\\vm\\methodtable.cpp @ 3303] \r\n67 0057d394 0f893c15 CoreCLR!MethodTable::DoRunClassInitThrowing+0x87d [c:\\dev\\coreclr\\src\\vm\\methodtable.cpp @ 3536] \r\n68 0057d474 0f635b35 CoreCLR!MethodTable::CheckRunClassInitThrowing+0x345 [c:\\dev\\coreclr\\src\\vm\\methodtable.cpp @ 3691] \r\n69 0057d5a0 0f635e5f CoreCLR!JIT_GetSharedNonGCStaticBase_Helper+0x265 [c:\\dev\\coreclr\\src\\vm\\jithelpers.cpp @ 1449] \r\n6a 0057d5f8 006835eb CoreCLR!JIT_GetSharedNonGCStaticBase_Portable+0x11f [c:\\dev\\coreclr\\src\\vm\\jithelpers.cpp @ 1363] \r\nWARNING: Frame IP not in any known module. Following frames may be wrong.\r\n6b 0057d604 0a4e1d0e 0x6835eb\r\n6c 0057d74c 0f4787f1 tracecontrol!Tracing.Tests.TraceControlTest.Main(System.String[])+0x5e [C:\\Dev\\coreclr\\tests\\src\\tracing\\tracecontrol\\TraceControl.cs @ 57] \r\n6d 0057d758 0f83a911 CoreCLR!CallDescrWorkerInternal+0x34 [C:\\Dev\\coreclr\\src\\vm\\i386\\asmhelpers.asm @ 612] \r\n6e 0057db74 0f83ab95 CoreCLR!CallDescrWorker+0x121 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 129] \r\n6f 0057dc20 0f83b454 CoreCLR!CallDescrWorkerWithHandler+0x205 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 72] \r\n70 0057df50 0f4d89de CoreCLR!MethodDescCallSite::CallTargetWorker+0x874 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 607] \r\n71 0057dfe0 0f506d9f CoreCLR!MethodDescCallSite::Call_RetArgSlot+0xce [c:\\dev\\coreclr\\src\\vm\\callhelpers.h @ 472] \r\n72 0057e0c8 0f506ef0 CoreCLR!``RunMain'::`29'::__Body::Run'::`5'::__Body::Run+0x1bf [c:\\dev\\coreclr\\src\\vm\\assembly.cpp @ 1581] \r\n73 0057e128 0f5070ca CoreCLR!`RunMain'::`29'::__Body::Run+0xa0 [c:\\dev\\coreclr\\src\\vm\\assembly.cpp @ 1592] \r\n74 0057e1a0 0f4fcd78 CoreCLR!RunMain+0x15a [c:\\dev\\coreclr\\src\\vm\\assembly.cpp @ 1592] \r\n75 0057e57c 0f3f155f CoreCLR!Assembly::ExecuteMainMethod+0x428 [c:\\dev\\coreclr\\src\\vm\\assembly.cpp @ 1702] \r\n76 0057e710 011b1c7f CoreCLR!CorHost2::ExecuteAssembly+0x3ff [c:\\dev\\coreclr\\src\\vm\\corhost.cpp @ 472] \r\n77 0057f818 011b2f5c CoreRun!TryRun+0xb0f [c:\\dev\\coreclr\\src\\coreclr\\hosts\\corerun\\corerun.cpp @ 642] \r\n78 0057f878 0120ccbe CoreRun!wmain+0x10c [c:\\dev\\coreclr\\src\\coreclr\\hosts\\corerun\\corerun.cpp @ 758] \r\n79 0057f88c 0120cba7 CoreRun!invoke_main+0x1e [d:\\agent\\_work\\3\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl @ 90] \r\n7a 0057f8e8 0120ca4d CoreRun!__scrt_common_main_seh+0x157 [d:\\agent\\_work\\3\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl @ 288] \r\n7b 0057f8f0 0120cd28 CoreRun!__scrt_common_main+0xd [d:\\agent\\_work\\3\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl @ 331] \r\n7c 0057f8f8 75ae0179 CoreRun!wmainCRTStartup+0x8 [d:\\agent\\_work\\3\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_wmain.cpp @ 17] \r\n7d 0057f908 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n7e 0057f964 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n7f 0057f974 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n   1  Id: 6bfe4.6d00c Suspend: 1 Teb: 00265000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 0085f8a4 7755e4c6 ntdll!NtWaitForWorkViaWorkerFactory+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 3777] \r\n01 0085fa64 75ae0179 ntdll!TppWorkerThread+0x296 [minkernel\\threadpool\\ntdll\\worker.c @ 910] \r\n02 0085fa74 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n03 0085fad0 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n04 0085fae0 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n   2  Id: 6bfe4.6cde4 Suspend: 1 Teb: 00268000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 00b2f924 7755e4c6 ntdll!NtWaitForWorkViaWorkerFactory+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 3777] \r\n01 00b2fae4 75ae0179 ntdll!TppWorkerThread+0x296 [minkernel\\threadpool\\ntdll\\worker.c @ 910] \r\n02 00b2faf4 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n03 00b2fb50 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n04 00b2fb60 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n   3  Id: 6bfe4.6d21c Suspend: 1 Teb: 0026b000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 00cefa7c 7755e4c6 ntdll!NtWaitForWorkViaWorkerFactory+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 3777] \r\n01 00cefc3c 75ae0179 ntdll!TppWorkerThread+0x296 [minkernel\\threadpool\\ntdll\\worker.c @ 910] \r\n02 00cefc4c 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n03 00cefca8 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n04 00cefcb8 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n   4  Id: 6bfe4.6e37c Suspend: 1 Teb: 0026e000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 04c2f96c 761a2a03 ntdll!NtWaitForMultipleObjects+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 825] \r\n01 04c2fb00 0ff27477 KERNELBASE!WaitForMultipleObjectsEx+0x133 [minkernel\\kernelbase\\synch.c @ 1551] \r\n02 04c2fc98 0ff297ee CoreCLR!DebuggerRCThread::MainLoop+0x5c7 [c:\\dev\\coreclr\\src\\debug\\ee\\rcthread.cpp @ 1137] \r\n03 04c2fdc8 0ff298d5 CoreCLR!DebuggerRCThread::ThreadProc+0x62e [c:\\dev\\coreclr\\src\\debug\\ee\\rcthread.cpp @ 943] \r\n04 04c2fdd4 75ae0179 CoreCLR!DebuggerRCThread::ThreadProcStatic+0x45 [c:\\dev\\coreclr\\src\\debug\\ee\\rcthread.cpp @ 1528] \r\n05 04c2fde4 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n06 04c2fe40 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n07 04c2fe50 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n   5  Id: 6bfe4.6e318 Suspend: 1 Teb: 00271000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 06ddf30c 761a2a03 ntdll!NtWaitForMultipleObjects+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 825] \r\n01 06ddf4a0 0f793789 KERNELBASE!WaitForMultipleObjectsEx+0x133 [minkernel\\kernelbase\\synch.c @ 1551] \r\n02 06ddf4d8 0f792d0d CoreCLR!FinalizerThread::WaitForFinalizerEvent+0x149 [c:\\dev\\coreclr\\src\\vm\\finalizerthread.cpp @ 431] \r\n03 06ddf504 0f4e7fae CoreCLR!FinalizerThread::FinalizerThreadWorker+0xbd [c:\\dev\\coreclr\\src\\vm\\finalizerthread.cpp @ 549] \r\n04 06ddf590 0f4e805d CoreCLR!ManagedThreadBase_DispatchInner+0x11e [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 7779] \r\n05 06ddf69c 0f4ebd9f CoreCLR!ManagedThreadBase_DispatchMiddle+0x8d [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 7824] \r\n06 06ddf6dc 0f4ebe99 CoreCLR!``ManagedThreadBase_DispatchOuter'::`8'::__Body::Run'::`5'::__Body::Run+0x6f [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 8043] \r\n07 06ddf730 0f4e84c0 CoreCLR!`ManagedThreadBase_DispatchOuter'::`8'::__Body::Run+0x99 [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 8043] \r\n08 06ddf79c 0f4e878d CoreCLR!ManagedThreadBase_DispatchOuter+0xc0 [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 8065] \r\n09 06ddf844 0f4e000e CoreCLR!ManagedThreadBase_NoADTransition+0x13d [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 8115] \r\n0a 06ddf854 0f79333e CoreCLR!ManagedThreadBase::FinalizerBase+0xe [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 8141] \r\n0b 06ddf8a0 0f791ef6 CoreCLR!`FinalizerThread::FinalizerThreadStart'::`37'::__Body::Run+0xbe [c:\\dev\\coreclr\\src\\vm\\finalizerthread.cpp @ 699] \r\n0c 06ddf904 0f4f343e CoreCLR!FinalizerThread::FinalizerThreadStart+0x186 [c:\\dev\\coreclr\\src\\vm\\finalizerthread.cpp @ 768] \r\n0d 06ddf9b4 75ae0179 CoreCLR!Thread::intermediateThreadProc+0x8e [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 2151] \r\n0e 06ddf9c4 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n0f 06ddfa20 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n10 06ddfa30 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n   6  Id: 6bfe4.6af60 Suspend: 1 Teb: 00274000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 0753f760 761a00a9 ntdll!NtWaitForSingleObject+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 129] \r\n01 0753f7d4 0f509f2b KERNELBASE!WaitForSingleObjectEx+0x99 [minkernel\\kernelbase\\synch.c @ 1328] \r\n02 0753f7e8 0f50cfec CoreCLR!CLREventWaitHelper2+0x1b [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 378] \r\n03 0753f830 0f509fab CoreCLR!`CLREventWaitHelper'::`3'::__Body::Run+0x7c [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 402] \r\n04 0753f88c 0f50e684 CoreCLR!CLREventWaitHelper+0x7b [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 404] \r\n05 0753f958 0f50d579 CoreCLR!CLREventBase::WaitEx+0x324 [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 471] \r\n06 0753f974 0f4ccab1 CoreCLR!CLREventBase::Wait+0x39 [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 418] \r\n07 0753fb84 0f4cba43 CoreCLR!ThreadSuspend::SuspendRuntime+0xbc1 [c:\\dev\\coreclr\\src\\vm\\threadsuspend.cpp @ 4450] \r\n08 0753fcac 0fb40da7 CoreCLR!ThreadSuspend::SuspendEE+0x263 [c:\\dev\\coreclr\\src\\vm\\threadsuspend.cpp @ 6860] \r\n09 0753fda4 0f4f343e CoreCLR!SampleProfiler::ThreadProc+0x227 [c:\\dev\\coreclr\\src\\vm\\sampleprofiler.cpp @ 185] \r\n0a 0753fed4 75ae0179 CoreCLR!Thread::intermediateThreadProc+0x8e [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 2151] \r\n0b 0753fee4 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n0c 0753ff40 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n0d 0753ff50 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n   7  Id: 6bfe4.6bb8c Suspend: 1 Teb: 00277000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 075ef8a4 76188feb ntdll!NtDelayExecution+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 513] \r\n01 075ef90c 0fa3006d KERNELBASE!SleepEx+0x4b [minkernel\\kernelbase\\thread.c @ 2230] \r\n02 075ef9f4 0fa30321 CoreCLR!ThreadpoolMgr::TimerThreadFire+0x16d [c:\\dev\\coreclr\\src\\vm\\win32threadpool.cpp @ 4602] \r\n03 075efa08 75ae0179 CoreCLR!ThreadpoolMgr::TimerThreadStart+0x81 [c:\\dev\\coreclr\\src\\vm\\win32threadpool.cpp @ 4566] \r\n04 075efa18 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n05 075efa74 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n06 075efa84 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n   8  Id: 6bfe4.6df38 Suspend: 1 Teb: 0027a000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 07ddf518 761a00a9 ntdll!NtWaitForSingleObject+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 129] \r\n01 07ddf58c 0f509f2b KERNELBASE!WaitForSingleObjectEx+0x99 [minkernel\\kernelbase\\synch.c @ 1328] \r\n02 07ddf5a0 0f50cfec CoreCLR!CLREventWaitHelper2+0x1b [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 378] \r\n03 07ddf5e8 0f509fab CoreCLR!`CLREventWaitHelper'::`3'::__Body::Run+0x7c [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 402] \r\n04 07ddf644 0f50e684 CoreCLR!CLREventWaitHelper+0x7b [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 404] \r\n05 07ddf710 0f50d579 CoreCLR!CLREventBase::WaitEx+0x324 [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 471] \r\n06 07ddf72c 0fc0e153 CoreCLR!CLREventBase::Wait+0x39 [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 418] \r\n07 07ddf744 0fc0e0ff CoreCLR!GCEvent::Impl::Wait+0x43 [c:\\dev\\coreclr\\src\\vm\\gcenv.os.cpp @ 847] \r\n08 07ddf758 0fc108ba CoreCLR!GCEvent::Wait+0x3f [c:\\dev\\coreclr\\src\\vm\\gcenv.os.cpp @ 925] \r\n09 07ddf770 0f4c7f05 CoreCLR!WKS::GCHeap::WaitUntilGCComplete+0x6a [c:\\dev\\coreclr\\src\\gc\\gcee.cpp @ 404] \r\n0a 07ddf840 0f3d9f53 CoreCLR!Thread::RareDisablePreemptiveGC+0x355 [c:\\dev\\coreclr\\src\\vm\\threadsuspend.cpp @ 2794] \r\n0b 07ddf850 0f3e6416 CoreCLR!Thread::DisablePreemptiveGC+0xb3 [c:\\dev\\coreclr\\src\\vm\\threads.h @ 2079] \r\n0c 07ddf864 0f3e1fe6 CoreCLR!GCHolderBase::EnterInternalCoop+0xf6 [c:\\dev\\coreclr\\src\\vm\\threads.h @ 5717] \r\n0d 07ddf88c 0f4e963b CoreCLR!GCCoop::GCCoop+0x36 [c:\\dev\\coreclr\\src\\vm\\threads.h @ 5837] \r\n0e 07ddfa94 0f4dcc1c CoreCLR!Thread::OnThreadTerminate+0x22b [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 2937] \r\n0f 07ddfbb8 0fa31c33 CoreCLR!DestroyThread+0x20c [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 904] \r\n10 07ddfd44 0f4f343e CoreCLR!ThreadpoolMgr::WorkerThreadStart+0x973 [c:\\dev\\coreclr\\src\\vm\\win32threadpool.cpp @ 2191] \r\n11 07ddfef0 75ae0179 CoreCLR!Thread::intermediateThreadProc+0x8e [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 2151] \r\n12 07ddff00 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n13 07ddff5c 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n14 07ddff6c 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n   9  Id: 6bfe4.6e258 Suspend: 1 Teb: 00280000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 09d4b038 77562014 ntdll!NtWaitForAlertByThreadId+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 3753] \r\n01 09d4b058 77561f56 ntdll!RtlpWaitOnAddressWithTimeout+0x33 [minkernel\\ntos\\rtl\\waitaddr.c @ 817] \r\n02 09d4b09c 77561e4b ntdll!RtlpWaitOnAddress+0xa5 [minkernel\\ntos\\rtl\\waitaddr.c @ 1071] \r\n03 09d4b0d8 7755ff16 ntdll!RtlpWaitOnCriticalSection+0xac [minkernel\\ntos\\rtl\\resource.c @ 1568] \r\n04 09d4b100 7755fe39 ntdll!RtlpEnterCriticalSectionContended+0xd6 [minkernel\\ntos\\rtl\\resource.c @ 2265] \r\n05 09d4b108 0f4499cd ntdll!RtlEnterCriticalSection+0x49 [minkernel\\ntos\\rtl\\resource.c @ 1881] \r\n06 09d4b114 0f448586 CoreCLR!UnsafeEnterCriticalSection+0xd [c:\\dev\\coreclr\\src\\inc\\unsafe.h @ 20] \r\n07 09d4b158 0f47f075 CoreCLR!CrstBase::Enter+0x216 [c:\\dev\\coreclr\\src\\vm\\crst.cpp @ 316] \r\n08 09d4b1e4 0f3ed2fc CoreCLR!EEEnterCriticalSection+0x135 [c:\\dev\\coreclr\\src\\vm\\hosting.cpp @ 760] \r\n09 09d4b1f0 0f379f23 CoreCLR!CExecutionEngine::AcquireLock+0xc [c:\\dev\\coreclr\\src\\vm\\corhost.cpp @ 2870] \r\n0a 09d4b208 0f3ccbb2 CoreCLR!ClrEnterCriticalSection+0x33 [c:\\dev\\coreclr\\src\\utilcode\\clrhost_nodependencies.cpp @ 757] \r\n0b 09d4b218 0f3cc19c CoreCLR!FunctionBase<void *,&ClrEnterCriticalSection,&ClrLeaveCriticalSection>::DoAcquire+0x12 [c:\\dev\\coreclr\\src\\inc\\holder.h @ 715] \r\n0c 09d4b224 0f3cb8b1 CoreCLR!BaseHolder<void *,FunctionBase<void *,&ClrEnterCriticalSection,&ClrLeaveCriticalSection>,0,&CompareDefault<void *> >::Acquire+0x3c [c:\\dev\\coreclr\\src\\inc\\holder.h @ 288] \r\n0d 09d4b230 0f3cb992 CoreCLR!BaseHolder<void *,FunctionBase<void *,&ClrEnterCriticalSection,&ClrLeaveCriticalSection>,0,&CompareDefault<void *> >::BaseHolder<void *,FunctionBase<void *,&ClrEnterCriticalSection,&ClrLeaveCriticalSection>,0,&CompareDefault<void *> >+0x31 [c:\\dev\\coreclr\\src\\inc\\holder.h @ 255] \r\n0e 09d4b250 0f413877 CoreCLR!Holder<void *,&ClrEnterCriticalSection,&ClrLeaveCriticalSection,0,&CompareDefault<void *>,1>::Holder<void *,&ClrEnterCriticalSection,&ClrLeaveCriticalSection,0,&CompareDefault<void *>,1>+0x32 [c:\\dev\\coreclr\\src\\inc\\holder.h @ 749] \r\n0f 09d4b298 0f41382e CoreCLR!LoaderHeap::RealAllocMemUnsafe+0x37 [c:\\dev\\coreclr\\src\\inc\\loaderheap.h @ 564] \r\n10 09d4b2b4 0fa8cea5 CoreCLR!LoaderHeap::RealAllocMem+0x3e [c:\\dev\\coreclr\\src\\inc\\loaderheap.h @ 520] \r\n11 09d4b378 0fa91b13 CoreCLR!NgenHashTable<EETypeHashTable,EETypeHashEntry,2>::BaseAllocateEntry+0x155 [c:\\dev\\coreclr\\src\\vm\\ngenhash.inl @ 91] \r\n12 09d4b534 0f5f93bf CoreCLR!EETypeHashTable::InsertValue+0x723 [c:\\dev\\coreclr\\src\\vm\\typehash.cpp @ 645] \r\n13 09d4b818 0f5e805b CoreCLR!ClassLoader::PublishType+0x51f [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3486] \r\n14 09d4b9cc 0f5f53e1 CoreCLR!ClassLoader::DoIncrementalLoad+0x51b [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3271] \r\n15 09d4bbe4 0f5f431e CoreCLR!ClassLoader::LoadTypeHandleForTypeKey_Body+0xa71 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 4030] \r\n16 09d4bd58 0f5efe95 CoreCLR!ClassLoader::LoadTypeHandleForTypeKey+0x39e [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3756] \r\n17 09d4bf3c 0f5f0b38 CoreCLR!ClassLoader::LoadConstructedTypeThrowing+0x935 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 1202] \r\n18 09d4c104 0f8040a7 CoreCLR!ClassLoader::LoadGenericInstantiationThrowing+0x7a8 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 2079] \r\n19 09d4c434 0f804394 CoreCLR!SigPointer::GetTypeHandleThrowing+0x1177 [c:\\dev\\coreclr\\src\\vm\\siginfo.cpp @ 1438] \r\n1a 09d4c75c 0fa990ef CoreCLR!SigPointer::GetTypeHandleThrowing+0x1464 [c:\\dev\\coreclr\\src\\vm\\siginfo.cpp @ 1556] \r\n1b 09d4ca40 0f6294f1 CoreCLR!Dictionary::PopulateEntry+0x66f [c:\\dev\\coreclr\\src\\vm\\genericdict.cpp @ 820] \r\n1c 09d4cb40 0f629a41 CoreCLR!JIT_GenericHandleWorker+0x281 [c:\\dev\\coreclr\\src\\vm\\jithelpers.cpp @ 3885] \r\n1d 09d4cd24 0f628db8 CoreCLR!JIT_GenericHandle_Framed+0x4b1 [c:\\dev\\coreclr\\src\\vm\\jithelpers.cpp @ 3935] \r\n1e 09d4ce7c 30a9ba2f CoreCLR!JIT_GenericHandleClassWithSlotAndModule+0x3f8 [c:\\dev\\coreclr\\src\\vm\\jithelpers.cpp @ 4050] \r\n1f 09d4cebc 30a999f8 System_Private_CoreLib!System.Collections.Concurrent.ConcurrentQueueSegment`1[[System.__Canon, System.Private.CoreLib]]..ctor(Int32)+0xbf\r\n20 09d4ced4 308af30e System_Private_CoreLib!System.Collections.Concurrent.ConcurrentQueue`1[[System.__Canon, System.Private.CoreLib]]..ctor()+0x64\r\n21 09d4cef4 308af1ef System_Private_CoreLib!System.Threading.ThreadPoolWorkQueue..ctor()+0x26\r\n22 09d4cf0c 0f4787f1 System_Private_CoreLib!System.Threading.ThreadPoolGlobals..cctor()+0x3b\r\n23 09d4cf18 0f83a911 CoreCLR!CallDescrWorkerInternal+0x34 [C:\\Dev\\coreclr\\src\\vm\\i386\\asmhelpers.asm @ 612] \r\n24 09d4d334 0f83ab95 CoreCLR!CallDescrWorker+0x121 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 129] \r\n25 09d4d3e4 0f83bd66 CoreCLR!CallDescrWorkerWithHandler+0x205 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 72] \r\n26 09d4d428 0f83b9e4 CoreCLR!`DispatchCallDebuggerWrapper'::`3'::__Body::Run+0x76 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 164] \r\n27 09d4d480 0f83bc10 CoreCLR!DispatchCallDebuggerWrapper+0x74 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 164] \r\n28 09d4d53c 0f8ac413 CoreCLR!DispatchCallSimple+0x190 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 224] \r\n29 09d4d6d8 0f89815d CoreCLR!MethodTable::RunClassInitEx+0x453 [c:\\dev\\coreclr\\src\\vm\\methodtable.cpp @ 3303] \r\n2a 09d4e18c 0f893c15 CoreCLR!MethodTable::DoRunClassInitThrowing+0x87d [c:\\dev\\coreclr\\src\\vm\\methodtable.cpp @ 3536] \r\n2b 09d4e26c 0f6c9450 CoreCLR!MethodTable::CheckRunClassInitThrowing+0x345 [c:\\dev\\coreclr\\src\\vm\\methodtable.cpp @ 3691] \r\n2c 09d4e4f0 0f6d21ef CoreCLR!DynamicHelperFixup+0x420 [c:\\dev\\coreclr\\src\\vm\\prestub.cpp @ 2895] \r\n2d 09d4e654 0f478c24 CoreCLR!DynamicHelperWorker+0x1af [c:\\dev\\coreclr\\src\\vm\\prestub.cpp @ 3203] \r\n2e 09d4e684 30898a38 CoreCLR!DelayLoad_Helper+0x25 [C:\\Dev\\coreclr\\src\\vm\\i386\\asmhelpers.asm @ 1849] \r\n2f 09d4e690 30899790 System_Private_CoreLib!System.Threading.ThreadPool.EnsureInitialized()+0xc\r\n30 09d4e6a8 3089aa4d System_Private_CoreLib!System.Threading.ThreadPool.UnsafeQueueUserWorkItemInternal(System.Object, Boolean)+0x44\r\n31 09d4e76c 3089a5fb System_Private_CoreLib!System.Threading.TimerQueue.FireNextTimers()+0x265\r\n32 09d4e78c 0f4787f1 System_Private_CoreLib!System.Threading.TimerQueue.AppDomainTimerCallback(Int32)+0x9b\r\n33 09d4e798 0f83a911 CoreCLR!CallDescrWorkerInternal+0x34 [C:\\Dev\\coreclr\\src\\vm\\i386\\asmhelpers.asm @ 612] \r\n34 09d4ebb4 0f83ab95 CoreCLR!CallDescrWorker+0x121 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 129] \r\n35 09d4ec60 0f83b454 CoreCLR!CallDescrWorkerWithHandler+0x205 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 72] \r\n36 09d4ef94 0f3ed9e7 CoreCLR!MethodDescCallSite::CallTargetWorker+0x874 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 607] \r\n37 09d4efac 0fbdf46a CoreCLR!MethodDescCallSite::Call+0x17 [c:\\dev\\coreclr\\src\\vm\\callhelpers.h @ 472] \r\n38 09d4f0b4 0f4e7fae CoreCLR!AppDomainTimerCallback_Worker+0x15a [c:\\dev\\coreclr\\src\\vm\\comthreadpool.cpp @ 772] \r\n39 09d4f140 0f4e805d CoreCLR!ManagedThreadBase_DispatchInner+0x11e [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 7779] \r\n3a 09d4f24c 0f4ebd9f CoreCLR!ManagedThreadBase_DispatchMiddle+0x8d [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 7824] \r\n3b 09d4f28c 0f4ebe99 CoreCLR!``ManagedThreadBase_DispatchOuter'::`8'::__Body::Run'::`5'::__Body::Run+0x6f [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 8043] \r\n3c 09d4f2e0 0f4e84c0 CoreCLR!`ManagedThreadBase_DispatchOuter'::`8'::__Body::Run+0x99 [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 8043] \r\n3d 09d4f34c 0f4e8621 CoreCLR!ManagedThreadBase_DispatchOuter+0xc0 [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 8065] \r\n3e 09d4f3f0 0f4f0e06 CoreCLR!ManagedThreadBase_FullTransitionWithAD+0x131 [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 8091] \r\n3f 09d4f408 0fbdf2a1 CoreCLR!ManagedThreadBase::ThreadPool+0x16 [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 8133] \r\n40 09d4f4ec 0fa23654 CoreCLR!AppDomainTimerCallback+0x191 [c:\\dev\\coreclr\\src\\vm\\comthreadpool.cpp @ 804] \r\n41 09d4f590 0faf4f34 CoreCLR!ThreadpoolMgr::AsyncTimerCallbackCompletion+0x184 [c:\\dev\\coreclr\\src\\vm\\win32threadpool.cpp @ 4786] \r\n42 09d4f608 0fa27f51 CoreCLR!UnManagedPerAppDomainTPCount::DispatchWorkItem+0x254 [c:\\dev\\coreclr\\src\\vm\\threadpoolrequest.cpp @ 543] \r\n43 09d4f6a4 0fa3179b CoreCLR!ThreadpoolMgr::ExecuteWorkRequest+0x1a1 [c:\\dev\\coreclr\\src\\vm\\win32threadpool.cpp @ 1546] \r\n44 09d4f834 0f4f343e CoreCLR!ThreadpoolMgr::WorkerThreadStart+0x4db [c:\\dev\\coreclr\\src\\vm\\win32threadpool.cpp @ 2008] \r\n45 09d4fa64 75ae0179 CoreCLR!Thread::intermediateThreadProc+0x8e [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 2151] \r\n46 09d4fa74 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n47 09d4fad0 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n48 09d4fae0 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n  10  Id: 6bfe4.6e428 Suspend: 1 Teb: 00289000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 0ae2faf4 7755e4c6 ntdll!NtWaitForWorkViaWorkerFactory+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 3777] \r\n01 0ae2fcb4 75ae0179 ntdll!TppWorkerThread+0x296 [minkernel\\threadpool\\ntdll\\worker.c @ 910] \r\n02 0ae2fcc4 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n03 0ae2fd20 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n04 0ae2fd30 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n  11  Id: 6bfe4.6e42c Suspend: 1 Teb: 0028c000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 0afaf998 7755e4c6 ntdll!NtWaitForWorkViaWorkerFactory+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 3777] \r\n01 0afafb58 75ae0179 ntdll!TppWorkerThread+0x296 [minkernel\\threadpool\\ntdll\\worker.c @ 910] \r\n02 0afafb68 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n03 0afafbc4 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n04 0afafbd4 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n# 12  Id: 6bfe4.6d5b4 Suspend: 1 Teb: 00292000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 0b12f744 775bb3a9 ntdll!DbgBreakPoint [minkernel\\ntos\\rtl\\i386\\debug2.asm @ 61] \r\n01 0b12f774 75ae0179 ntdll!DbgUiRemoteBreakin+0x39 [minkernel\\ntdll\\dlluistb.c @ 312] \r\n02 0b12f784 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n03 0b12f7e0 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n04 0b12f7f0 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n```\r\n"},{"Id":"9179426180","Type":"PullRequestEvent","CreatedAt":"2019-03-05T03:07:33","Actor":"AaronRobinsonMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/23023","RelatedDescription":"Opened pull request \"Re-enable RCW license tests\" (#23023) at dotnet/coreclr","RelatedBody":""},{"Id":"9179400177","Type":"IssuesEvent","CreatedAt":"2019-03-05T03:01:17","Actor":"AaronRobinsonMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/22847","RelatedDescription":"Closed issue \"Remove remnants of native activation for managed COM servers\" (#22847) at dotnet/coreclr","RelatedBody":"Cruft:\r\nhttps://github.com/dotnet/coreclr/blob/master/src/vm/appdomain.hpp#L2453\r\n\r\nhttps://github.com/dotnet/coreclr/blob/master/src/System.Private.CoreLib/src/System/Runtime/InteropServices/Marshal.CoreCLR.cs#L747-L751\r\n\r\nWill have to update RCW activation as well.\r\n\r\nRemove entirely:\r\n~~https://github.com/dotnet/coreclr/blob/master/src/vm/classfactory.cpp~~"},{"Id":"9179390230","Type":"PullRequestEvent","CreatedAt":"2019-03-05T02:58:58","Actor":"AaronRobinsonMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/23010","RelatedDescription":"Merged pull request \"Remove loose dependency in runtime on System.ComponentModel.\" (#23010) at dotnet/coreclr","RelatedBody":"Disable RCW license tests until sync with CoreFX.\r\n\r\nSee https://github.com/dotnet/corefx/pull/35767\r\n\r\ncc @stephentoub, @jkotas, @ericstj, @jkoritzinsky "},{"Id":"9179341086","Type":"PullRequestEvent","CreatedAt":"2019-03-05T02:46:43","Actor":"echesakovMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/23022","RelatedDescription":"Opened pull request \"[NO MERGE] Test only\" (#23022) at dotnet/coreclr","RelatedBody":""}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9179728112","Type":"PullRequestEvent","CreatedAt":"2019-03-05T04:32:06","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10920","RelatedDescription":"Merged pull request \"Sdk 2.2.200-preview-63905-01\" (#10920) at dotnet/cli","RelatedBody":""},{"Id":"9179719246","Type":"PullRequestEvent","CreatedAt":"2019-03-05T04:29:19","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10922","RelatedDescription":"Merged pull request \"Prevent stage0 bundled versions from interfering with the build.\" (#10922) at dotnet/cli","RelatedBody":"A change to enable the parameterization of the latest known patch numbers for\r\nMicrosoft.NETCore.App reused the same property names as those in the generated\r\nbundled versions props file.\r\n\r\nWhen building locally, the stage0 dotnet install was setting the properties\r\nfirst, resulting in older versions as the fallbacks then what is currently\r\nbeing used in the repo.\r\n\r\nHowever, when building from an orchestrated build where the properties were\r\nbeing set globally, those properties get respected and the values are\r\nthe expected ones.\r\n\r\nThis commit fixes this by renaming the properties to those that aren't used in\r\nthe bundled versions props file.  The names chosen match those we're using for\r\nthe 2.2 builds for consistency.\r\n\r\n"},{"Id":"9179422174","Type":"PullRequestEvent","CreatedAt":"2019-03-05T03:06:35","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10922","RelatedDescription":"Opened pull request \"Prevent stage0 bundled versions from interfering with the build.\" (#10922) at dotnet/cli","RelatedBody":"A change to enable the parameterization of the latest known patch numbers for\r\nMicrosoft.NETCore.App reused the same property names as those in the generated\r\nbundled versions props file.\r\n\r\nWhen building locally, the stage0 dotnet install was setting the properties\r\nfirst, resulting in older versions as the fallbacks then what is currently\r\nbeing used in the repo.\r\n\r\nHowever, when building from an orchestrated build where the properties were\r\nbeing set globally, those properties get respected and the values are\r\nthe expected ones.\r\n\r\nThis commit fixes this by renaming the properties to those that aren't used in\r\nthe bundled versions props file.  The names chosen match those we're using for\r\nthe 2.2 builds for consistency.\r\n\r\n"},{"Id":"9178957964","Type":"PullRequestEvent","CreatedAt":"2019-03-05T01:07:26","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10921","RelatedDescription":"Opened pull request \"Fix flaky SIGINT/SIGTERM tests.\" (#10921) at dotnet/cli","RelatedBody":"This commit fixes the race condition that caused failures of the SIGINT/SIGTERM\r\nhandling tests on non-Windows platforms.\r\n\r\nThe tests are designed to spawn `dotnet run`, which will itself spawn a child\r\nprocess.  The tests look for output from the child process; when the child\r\noutputs the needed data, the tests' process will start signaling the dotnet\r\nprocess.\r\n\r\nThe race lies between the call to start the process and the attempt to register\r\nthe signal handlers in dotnet. If the child process outputs the needed data and\r\nthe test process signals the dotnet process *before* the dotnet process has had\r\na chance to register the signal handlers, then the default signal handlers will\r\nbe invoked.  For SIGINT, this results in dotnet exiting with 130 and not\r\nwaiting for the child process to terminate.  For SIGTERM, it won't forward the\r\nsignal to the child process or exit with the same exit code that the child\r\nexited with.\r\n\r\nThe fix is to register the handlers prior to the process starting.  On Windows,\r\nwe still need to perform an action after the process has started (namely that\r\nthe child process is added to the job object) because it needs the handle to\r\nthe child process.\r\n\r\n- If this PR should not run tests please add text \"skip[REMOVE_THIS]ci[REMOVE_THIS]please\" (remove the marked text, no quotes).\r\n- Please add description for changes you are making.\r\n- If there is an issue related to this PR, please add the reference.\r\n"},{"Id":"9178889809","Type":"PullRequestEvent","CreatedAt":"2019-03-05T00:50:32","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10920","RelatedDescription":"Opened pull request \"Sdk 2.2.200-preview-63905-01\" (#10920) at dotnet/cli","RelatedBody":""},{"Id":"9178886512","Type":"PullRequestEvent","CreatedAt":"2019-03-05T00:49:39","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10899","RelatedDescription":"Merged pull request \"Merge release/2.1.5xx to release/2.2.1xx\" (#10899) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9178753955","Type":"PullRequestEvent","CreatedAt":"2019-03-05T00:15:29","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/10910","RelatedDescription":"Closed pull request \"Merge for upcoming march release\" (#10910) at dotnet/cli","RelatedBody":""},{"Id":"9178696678","Type":"PullRequestEvent","CreatedAt":"2019-03-05T00:01:17","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10919","RelatedDescription":"Opened pull request \"Merge release/2.1.6xx to release/2.2.2xx\" (#10919) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9177724155","Type":"IssuesEvent","CreatedAt":"2019-03-04T21:01:09","Actor":"tannergooding","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1094","RelatedDescription":"Opened issue \"Consider the HWIntrinsic APIs for NS2.1\" (#1094) at dotnet/standard","RelatedBody":"### Summary\r\n\r\nWe should consider including the Harware Intrinsic APIs as part of `netstandard2.1` given that they are trivial to \"support\", were designed in a way that the feature can be incrementally enabled by a given runtime, are already finding use in the shared framework code, and will allow users to more readily write cross-runtime libraries.\r\n\r\n### Rationale\r\n\r\n`netcoreapp3.0` is adding ~1500 APIs in order to support the new \"Hardware Intrinsics\" feature. These APIs provide support for writing more efficient algorithms that can take advantage of hardware specific functionality.\r\n\r\nWhile the number of APIs exposed may seem daunting, the APIs are hardware specific and were designed such that you must perform the appropriate checks before attempting to use a given API or they will result in a `PlatformNotSupportedException` at runtime. For example, `System.Runtime.Intrinsics.X86.Sse` is a class that exposes the SSE ISA for the x86 and x64 architectures. Before using any of the methods on that class, you must emit an `if (Sse.IsSupported)` check to validate that both the current hardware and the current runtime support this ISA.\r\n\r\nThese API declarations are also part of the existing shared framework code and have a default implementation of returning `false` for the `IsSupported` checks and throwing `PlatformNotSupportedException` from any of the other exposed hardware-specific APIs. This has allowed us to already take a cross-runtime dependency on these intrinsics in places like `SpanHelpers`, `Decimal`, `BitOperations`, `BitArray`, and more.\r\n\r\nGiven the above, I propose that these APIs be included as part of `netstandard2.1` as it will allow general library and application developers to share in the same benefits we have already seen. That is, it will light-up on .NET Core 3.0 and will do nothing on other runtimes. This will avoid the need for them to cross-compile their code in a number of cases.\r\n\r\nFor the runtimes that don't support this functionality yet, they should require somewhere between no and minimal changes. For the most part, they should already be internally compiling these APIs and hitting the `IsSupported=false` paths. So they will ultimately just be exposing these APIs to the end-user and would require no changes. The work that may be required is to ensure that the `Vector64<T>`, `Vector128<T>`, and `Vector256<T>` types have the appropriate ABI dependent type layouts. That is, these types should have the appropriate packing (e.g. `16` for `Vector128<T>` on x86/x64 since it maps to the `__m128` ABI primitive defined by the Windows and System V calling convention specifications).\r\n\r\nExposing this will also allow the various runtimes to have incremental \"light-up\" of these APIs. That is, rather than waiting for the next release to both expose and implement the APIs, they can expose the the APIs as part of `netstandard2.1` and the corresponding version of their runtime (e.g `x.0`). They can then light up individual ISAs and make them available to their users as they see fit (e.g. They could enable just `SSE` in `x.1` and could enable SSE2/SSE3 in `x.2`, etc).\r\n\r\n"},{"Id":"9170447152","Type":"IssuesEvent","CreatedAt":"2019-03-03T18:13:53","Actor":"bartonjs","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1093","RelatedDescription":"Closed issue \"HashCode to standard\" (#1093) at dotnet/standard","RelatedBody":"Hi,\r\n\r\nis it possible to add the HashCode-\"Helper\" struct to the .net standard? Including the Combine method? it is covered by the .net corefx since v2.1 and it looks like there is no os or platform specific usecase"},{"Id":"9169506675","Type":"IssuesEvent","CreatedAt":"2019-03-03T10:29:32","Actor":"proof85","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1093","RelatedDescription":"Opened issue \"HashCode to standard\" (#1093) at dotnet/standard","RelatedBody":"Hi,\r\n\r\nis it possible to add the HashCode-\"Helper\" struct to the .net standard? Including the Combine method? it is covered by the .net corefx since v2.1 and it looks like there is no os or platform specific usecase"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9179508864","Type":"PullRequestEvent","CreatedAt":"2019-03-05T03:28:25","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/35773","RelatedDescription":"Merged pull request \"Disable AllHelperPortsAreInGetPortNames test on ARM Windows\" (#35773) at dotnet/corefx","RelatedBody":"related to #35722 \r\n"},{"Id":"9179478486","Type":"PullRequestEvent","CreatedAt":"2019-03-05T03:20:38","Actor":"grant-d","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/35775","RelatedDescription":"Opened pull request \"[WIP] Update BitOperations callsites\" (#35775) at dotnet/corefx","RelatedBody":"Update known callsites in `CoreFX` to use `BitOperations`"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9179336300","Type":"IssuesEvent","CreatedAt":"2019-03-05T02:45:33","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/33864","RelatedDescription":"Opened issue \"provide a unit test for \"Fix completion at the start of readonly documents\"\" (#33864) at dotnet/roslyn","RelatedBody":"Here is a scenario:\r\n\r\n1. Create a solution of two independent console applications.\r\n2. Do not build application 1\r\n3. Start debugging application 2 and stop at a break point\r\n4. Go to application 1 in editor and set cursor at position = 0\r\n5. Try to type anything.\r\n6. Get \"Changes are not allowed if the project wan't built when debugging started\"\r\n7. Hit Enter many times: once to close the dialog and the next one to attempt editing again (the cursor must be in the beginning of the file) , again and again.\r\n\r\nHere is the fix: https://github.com/dotnet/roslyn/pull/33830\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/809690 should fix the issue on the Editor side as well"},{"Id":"9179256025","Type":"IssuesEvent","CreatedAt":"2019-03-05T02:24:46","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/33863","RelatedDescription":"Opened issue \"Provide a unit test for \"Restore original behavior of Shift+Enter during completion\"\" (#33863) at dotnet/roslyn","RelatedBody":"#33823 enables an integration test. It would be great to provide a unit test as well"},{"Id":"9179248295","Type":"IssuesEvent","CreatedAt":"2019-03-05T02:22:44","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/33862","RelatedDescription":"Opened issue \"Revert workaround for \"Restore original behavior of Shift+Enter during completion\" when fix available\" (#33862) at dotnet/roslyn","RelatedBody":"Revert #33828 when  https://devdiv.visualstudio.com/DevDiv/_workitems/edit/809579 will be available on the Editor side"},{"Id":"9179196611","Type":"IssuesEvent","CreatedAt":"2019-03-05T02:09:07","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/33861","RelatedDescription":"Opened issue \"Add a unit test for Async completion fails to scroll the caret into view\" (#33861) at dotnet/roslyn","RelatedBody":"There is an integration test enabled with https://github.com/dotnet/roslyn/issues/33822\r\nIt would be great to have a unit test as well."},{"Id":"9179119786","Type":"IssuesEvent","CreatedAt":"2019-03-05T01:48:59","Actor":"shyamnamboodiripad","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/33860","RelatedDescription":"Opened issue \"Move service hub code over to StreamJsonRpc v2.0\" (#33860) at dotnet/roslyn","RelatedBody":"This would help derived unit testing services (live unit testing, source based discovery) to consume StreamJsonRpc v2.0."},{"Id":"9179072303","Type":"PullRequestEvent","CreatedAt":"2019-03-05T01:36:33","Actor":"jaredpar","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/33859","RelatedDescription":"Opened pull request \"Move ILASMDeploy to netcoreapp3.0\" (#33859) at dotnet/roslyn","RelatedBody":"The deploy project must match the target framework of the binary that is\r\nreferenced otherwise `ilasm` on startup will crash with the following\r\nerror message:\r\n\r\n```\r\nError: Fail to initialize CoreCLR\r\nFailed to initialize Assembler\r\n```"},{"Id":"9179038186","Type":"IssuesEvent","CreatedAt":"2019-03-05T01:27:47","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/33858","RelatedDescription":"Opened issue \"Move wrap/unwrap parameter to a sub-menu in the context menu\" (#33858) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n![image](https://user-images.githubusercontent.com/41759/53774177-4ed95200-3ea2-11e9-9bc3-fdc843540b3f.png)\r\n\r\nI don't think these fixes are important enough to be the ordered first in the context menu.\r\n\r\n![image](https://user-images.githubusercontent.com/41759/53774157-4254f980-3ea2-11e9-9359-65c349a91ae2.png)\r\n\r\nI'd rather see them moved to `Format Code` sub-menu, which should itself be the last item of the context menu.\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9179716367","Type":"IssuesEvent","CreatedAt":"2019-03-05T04:28:23","Actor":"trampster","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7121","RelatedDescription":"Opened issue \"linux-arm not supported yet.\" (#7121) at dotnet/corert","RelatedBody":"I'm building with the following command:\r\n\r\n    dotnet publish -c Release -r linux-arm --self-contained true\r\n\r\nI'm getting the follow message when trying to build for linux arm:\r\n\r\n    /.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27505-01/build/Microsoft.NETCore.Native.Publish.targets(65,5): error : linux-arm not supported yet. https://github.com/dotnet/corert/issues/4589\r\n\r\nThat issue link is about x86....\r\n\r\nThe readme says that Linux ARM is supported w/ RyuJIT codegen\r\n\r\n\r\n"},{"Id":"9179606170","Type":"PullRequestEvent","CreatedAt":"2019-03-05T03:55:04","Actor":"sergiy-k","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7120","RelatedDescription":"Opened pull request \"Add scripts to set up CI with Azure Pipelines for OSX\" (#7120) at dotnet/corert","RelatedBody":"This adds support for OSX. To enable CI for Linux I still need to figure out the name of docker containers (or a machine pool) to use. \r\nThe eng/install-native-dependencies.sh file has been copied from the CoreCLR repo."},{"Id":"9179114136","Type":"IssuesEvent","CreatedAt":"2019-03-05T01:47:28","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7119","RelatedDescription":"Closed issue \"No assembly metadata is written in native output\" (#7119) at dotnet/corert","RelatedBody":"It's no assembly metadata like file versions, languages, company names, product name etc.\r\n\r\nHow can this be included when compiling?"},{"Id":"9178928974","Type":"IssuesEvent","CreatedAt":"2019-03-05T01:00:13","Actor":"DoCode","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7119","RelatedDescription":"Opened issue \"No assembly metadata is written in native output\" (#7119) at dotnet/corert","RelatedBody":"It's no assembly metadata like file versions, languages, company names, product name etc.\r\n\r\nHow can this be included when compiling?"},{"Id":"9178468685","Type":"PullRequestEvent","CreatedAt":"2019-03-04T23:09:58","Actor":"sergiy-k","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7091","RelatedDescription":"Merged pull request \"Add scripts to set up CI with Azure Pipelines for Windows builds\" (#7091) at dotnet/corert","RelatedBody":"All scripts have been copied from the CoreCLR repo and adjusted for CoreRT.\r\n\r\nThe first goal is enable Windows_NT Debug build without running any tests."},{"Id":"9176503573","Type":"PullRequestEvent","CreatedAt":"2019-03-04T17:41:37","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7115","RelatedDescription":"Merged pull request \"Fix ProjectN build breaks\" (#7115) at dotnet/corert","RelatedBody":""},{"Id":"9176438314","Type":"PullRequestEvent","CreatedAt":"2019-03-04T17:31:33","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7117","RelatedDescription":"Merged pull request \"Remove TypeConverter entries in WebApi sample\" (#7117) at dotnet/corert","RelatedBody":"These didn't appear to be needed last time I was playing with this.\r\n\r\nWe are basically down to one entry. This entry is especially annoying because it shows up every time someone wants to use LINQ expressions. Couple options:\r\n\r\n* Add a really dumb peephole IL scanner to `UsageBasedMetadataManager` a la mono/linker#223\r\n* Decide that we want an actual RD.XML parser. The embedded RD.XML manifest in System.Linq.Expressions has a line that covers this scenario. BUT: RD.XML has the unfortunate property of: not requiring types to be assembly-qualified, and requiring a whole program analysis for a bunch of constructs. Plus my motivation to write yet another type name parser is pretty low."},{"Id":"9175959370","Type":"IssuesEvent","CreatedAt":"2019-03-04T16:25:13","Actor":"filipnavara","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7118","RelatedDescription":"Opened issue \"Abort trap: 6 on CoreFX / macOS\" (#7118) at dotnet/corert","RelatedBody":"There is recurring problem with macOS / CoreFX test builds on the CI:\r\n\r\n```\r\n07:35:02 Discovering: System.Collections.Tests\r\n07:35:03 Discovered:  System.Collections.Tests\r\n07:35:08 Starting:    System.Collections.Tests\r\n07:35:09    System.Collections.Tests.Dictionary_IDictionary_NonGeneric_Tests.ICollection_NonGeneric_CopyTo_NonZeroLowerBound [SKIP]\r\n07:35:09       Condition(s) not met: \\\"IsNonZeroLowerBoundArraySupported\\\"\r\n07:35:13    System.Collections.Tests.SortedList_Generic_Tests_Keys_AsICollection.ICollection_NonGeneric_CopyTo_NonZeroLowerBound [SKIP]\r\n07:35:13       Condition(s) not met: \\\"IsNonZeroLowerBoundArraySupported\\\"\r\n07:35:21    System.Collections.Tests.Queue_ICollection_NonGeneric_Tests.ICollection_NonGeneric_CopyTo_NonZeroLowerBound [SKIP]\r\n07:35:21       Condition(s) not met: \\\"IsNonZeroLowerBoundArraySupported\\\"\r\n07:35:30    System.Collections.Tests.SortedDictionary_Generic_Tests_Keys_AsICollection.ICollection_NonGeneric_CopyTo_NonZeroLowerBound [SKIP]\r\n07:35:30       Condition(s) not met: \\\"IsNonZeroLowerBoundArraySupported\\\"\r\n07:37:36 /Users/dotnet-bot/j/workspace/dotnet_corert/master/debug_osx10.12_corefx_prtest/tests/CoreFX/corerun: line 75: 88337 Abort trap: 6           ${TestFolderName}/native/${TestExecutable} ${TestFolderName}/${TestFileName}.dll @${TestFolderName}/${TestFileName}.rsp -xml ${LogDir}/${TestFileName}/testResults.xml -notrait category=nonnetcoreapptests -notrait category=${OSCategory} -notrait category=failing\r\n```\r\n\r\nPRs: \r\n#7115 (https://ci.dot.net/job/dotnet_corert/job/master/job/debug_osx10.12_corefx_prtest/1578/consoleFull#-8536224876a086b3e-df04-41d2-bc4d-43e8f9406d07)\r\n#7116 (https://ci.dot.net/job/dotnet_corert/job/master/job/debug_osx10.12_corefx_prtest/1576/consoleFull#-8536224876a086b3e-df04-41d2-bc4d-43e8f9406d07)\r\n"},{"Id":"9175415397","Type":"PullRequestEvent","CreatedAt":"2019-03-04T15:15:25","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7117","RelatedDescription":"Opened pull request \"Remove TypeConverter entries in WebApi sample\" (#7117) at dotnet/corert","RelatedBody":"These didn't appear to be needed last time I was playing with this.\r\n\r\nWe are basically down to one entry. This entry is especially annoying because it shows up every time someone wants to use LINQ expressions. Couple options:\r\n\r\n* Add a really dumb peephole IL scanner to `UsageBasedMetadataManager` a la mono/linker#223\r\n* Decide that we want an actual RD.XML parser. The embedded RD.XML manifest in System.Linq.Expressions has a line that covers this scenario. BUT: RD.XML has the unfortunate property of: not requiring types to be assembly-qualified, and requiring a whole program analysis for a bunch of constructs. Plus my motivation to write yet another type name parser is pretty low."},{"Id":"9175286579","Type":"IssuesEvent","CreatedAt":"2019-03-04T14:58:28","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7092","RelatedDescription":"Closed issue \"Oracle Mysql.Data System.TypeInitializationException:\" (#7092) at dotnet/corert","RelatedBody":"I wrote a test Project\r\n\r\nPackage Mysql.Data\r\n\r\n### code:\r\nusing System;\r\nusing MySql;\r\n\r\nnamespace TestMysql\r\n{\r\n  class Program\r\n  {\r\n    internal static string MySqlConnectString\r\n    {\r\n      get\r\n      {\r\n        string mysqlConnString = string.Format(\"SERVER={0};UID={1};PWD={2};DATABASE={3};CHARSET=utf8;Pooling=true;Min Pool Size=10;Max Pool Size={4};\",\r\n                                    \"127.0.0.1\", \"dfds\", \"dfds\" , \"dsnode\", 10);\r\n\r\n        return mysqlConnString;\r\n      }\r\n    }\r\n\r\n    static void Main(string[] args)\r\n    {\r\n      for ( int i = 0; i < 10; i++)\r\n      {\r\n        Console.WriteLine(\"count{0}\", i);\r\n        try\r\n        {\r\n          MySql.Data.MySqlClient.MySqlConnection conn = new MySql.Data.MySqlClient.MySqlConnection(MySqlConnectString);\r\n          Console.WriteLine(\"open\");\r\n          conn.Open();\r\n          Console.WriteLine(\"close\");\r\n          conn.Close();\r\n        }\r\n\r\n        catch(Exception ex)\r\n        {\r\n          Console.WriteLine(\"MySql Connection ERROR :{0}\", ex);\r\n        }\r\n      }\r\n      Console.WriteLine(\"Hello World!\");\r\n    }\r\n  }\r\n}\r\n\r\nwhen ran , exception as follows:\r\n\r\nMySql Connection ERROR :System.TypeInitializationException: A type initializer threw an exception. To determine which type, inspect the InnerException's StackTrace property. ---> System.TypeInitializationException: A type initializer threw an exception. To determine which type, inspect the InnerException's StackTrace property. ---> System.Configuration.ConfigurationErrorsException: Configuration system failed to initialize ---> System.MissingMethodException: No parameterless constructor defined for this object.\r\n   at System.ActivatorImplementation.CreateInstance(Type, Boolean) + 0xfe\r\n   at System.Configuration.Internal.ConfigSystem.System.Configuration.Internal.IConfigSystem.Init(Type, Object[]) + 0x40\r\n   at System.Configuration.ClientConfigurationSystem..ctor() + 0x47\r\n   at System.Configuration.ConfigurationManager.EnsureConfigurationSystem() + 0x5f\r\n\r\n   --- End of inner exception stack trace ---\r\n   at System.Configuration.ConfigurationManager.EnsureConfigurationSystem() + 0xfa\r\n   at System.Configuration.ConfigurationManager.PrepareConfigSystem() + 0x13\r\n   at System.Configuration.ConfigurationManager.GetSection(String) + 0x25\r\n   at MySql.Data.MySqlClient.MySqlConfiguration..cctor() + 0x11\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0xd5\r\n\r\n   --- End of inner exception stack trace ---\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0x18d\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.CheckStaticClassConstructionReturnGCStaticBase(StaticClassConstructionContext*, Object) + 0xd\r\n   at MySql.Data.MySqlClient.Replication.ReplicationManager..cctor() + 0x6a\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0xd5\r\n\r\n   --- End of inner exception stack trace ---\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0x18d\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.CheckStaticClassConstructionReturnNonGCStaticBase(StaticClassConstructionContext*, IntPtr) + 0xd\r\n   at MySql.Data.MySqlClient.Replication.ReplicationManager.IsReplicationGroup(String) + 0x22\r\n   at MySql.Data.MySqlClient.MySqlConnection.Open() + 0x422\r\n   at TestMysql.Program.Main(String[]) + 0x71\r\n\r\nIs there any idea for this problem? \r\n\r\n"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9178798194","Type":"PullRequestEvent","CreatedAt":"2019-03-05T00:27:04","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3005","RelatedDescription":"Merged pull request \"Insert NuGet Build 5.0.0-rtm.5867 into sdk\" (#3005) at dotnet/sdk","RelatedBody":"Insert NuGet Build 5.0.0-rtm.5867 into sdk release/2.2.2xx branch"},{"Id":"9178538108","Type":"IssuesEvent","CreatedAt":"2019-03-04T23:24:47","Actor":"sbomer","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3007","RelatedDescription":"Opened issue \"Duplicate items in _ResolvedCopyLocalPublishAssets\" (#3007) at dotnet/sdk","RelatedBody":"- When `ResolveCopyLocalAssets` runs during publish (`_UseBuildDependencyFile` is false), it outputs `_ResolvedCopyLocalPublishAssets`.\r\n- When `_ComputeResolvedCopyLocalPublishAssets` runs, it adds to `_ResolvedCopyLocalPublishAssets` the contents of (`ReferenceCopyLocalPaths` \\ `_ResolvedCopyLocalBuildAssets`):\r\nhttps://github.com/dotnet/sdk/blob/c60af5f303fa67d25550ecfa54975caef0f5c828/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Publish.targets#L398-L399\r\n\r\n`_ResolvedCopyLocalBuildAssets` is empty, so it gets a duplicate copy of items in `ReferenceCopyLocalPaths` (which comes from `RuntimePackAsset`), for example `System.Private.CoreLib.dll`.\r\n\r\nBefore https://github.com/dotnet/sdk/pull/2646, `ResolvedAssembliesToPublish` only had one Item for each file. I noticed this while trying to update https://github.com/mono/linker/blob/master/src/ILLink.Tasks/ILLink.Tasks.targets#L451 to work with the newest SDK. `_ManagedAssembliesToLink` was computed from `ResolvedAssembliesToPublish`, but that line breaks when there are multiple files with the same Filename in the input:\r\n```\r\nC:\\Users\\svbomer\\.nuget\\packages\\illink.tasks\\0.1.6\\build\\ILLink.Tasks.targets(451,34): error MSB4094: \"C:\\Users\\svbomer\\.nuget\\packages\\runtime.win-x64.microsoft.netcore.app\\3.0.0-preview-27324-5\\runtimes\\win-x64\\native\\System.Private.CoreLib.dll;C:\\Users\\svbomer\\.nuget\\packages\\runtime.win-x64.microsoft.netcore.app\\3.0.0-preview-27324-5\\runtimes\\win-x64\\native\\System.Private.CoreLib.dll\" is an invalid value for the \"AssemblyPath\" parameter of the \"CheckEmbeddedRootDescriptor\" task. Multiple items cannot be passed into a parameter of type \"Microsoft.Build.Framework.ITaskItem\". [D:\\linker\\test\\ILLink.Tasks.Tests\\bin\\debug\\netcoreapp3.0\\helloworld\\helloworld.csproj]\r\n```\r\n\r\nhttps://github.com/dotnet/sdk/pull/2666 may be relevant.\r\n\r\n/cc @peterhuene @nguerrera "}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-04T22:18:30","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Open PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-02T18:57:28","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"open","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Open PR \"adds Umbraco logo\" (#135)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-02T18:43:42","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"open","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Open PR \"adds the prism logo\" (#134)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-01T15:37:52","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Open PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Update links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Update links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2018-12-16T11:57:53","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"open","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Open issue \"No logo provided for Prism\" (#126)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2018-12-16T11:52:07","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"open","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Open issue \"Missing logo for Umbraco\" (#124)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2018-12-16T11:50:29","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"open","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Open issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379731798","IsPullRequest":true,"CreatedAt":"2018-11-13T04:22:32","Actor":"leastprivilege","Number":"114","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#114)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"},{"Id":"379733880","IsPullRequest":true,"CreatedAt":"2018-11-13T04:20:23","Actor":"leastprivilege","Number":"115","RawContent":null,"Title":"Create identitymodel.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Closed or merged PR \"Create identitymodel.md\" (#115)"},{"Id":"371941750","IsPullRequest":true,"CreatedAt":"2018-11-01T16:20:07","Actor":"SeanKilleen","Number":"113","RawContent":null,"Title":"Update logo for couchbase-lite in projects.json","State":"closed","Body":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser.","Url":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Closed or merged PR \"Update logo for couchbase-lite in projects.json\" (#113)"},{"Id":"365089074","IsPullRequest":false,"CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Number":"112","RawContent":null,"Title":"Suggest: key  F12  go to source code of dotnetcore  rather then metadata","State":"open","Body":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n","Url":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Open issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112)"},{"Id":"356296763","IsPullRequest":false,"CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Number":"111","RawContent":null,"Title":"Sourcelink location is confusing","State":"open","Body":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section.","Url":"https://github.com/dotnet/foundation/issues/111","RelatedDescription":"Open issue \"Sourcelink location is confusing\" (#111)"},{"Id":"353832272","IsPullRequest":true,"CreatedAt":"2018-08-27T16:21:55","Actor":"jkonicki","Number":"110","RawContent":null,"Title":"Fix - add missing comma","State":"closed","Body":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix.","Url":"https://github.com/dotnet/foundation/pull/110","RelatedDescription":"Closed or merged PR \"Fix - add missing comma\" (#110)"},{"Id":"352736883","IsPullRequest":true,"CreatedAt":"2018-08-23T23:10:07","Actor":"anthonychu","Number":"108","RawContent":null,"Title":"Fix errors in projects.json","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/108","RelatedDescription":"Closed or merged PR \"Fix errors in projects.json\" (#108)"},{"Id":"353536205","IsPullRequest":true,"CreatedAt":"2018-08-23T23:09:07","Actor":"jkonicki","Number":"109","RawContent":null,"Title":"Add Steeltoe to the project listing","State":"closed","Body":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks.","Url":"https://github.com/dotnet/foundation/pull/109","RelatedDescription":"Closed or merged PR \"Add Steeltoe to the project listing\" (#109)"},{"Id":"340355507","IsPullRequest":false,"CreatedAt":"2018-07-11T18:28:16","Actor":"Eilon","Number":"107","RawContent":null,"Title":"Links to .NET Foundation web site use HTTP instead of HTTPS","State":"open","Body":"It appears that HTTPS works just fine: https://www.dotnetfoundation.org/\r\n\r\nBut the links at these places use HTTP:\r\n1. The link in the header of https://github.com/dotnet/home\r\n2. The link in the header of https://github.com/dotnet\r\n3. Some links in https://github.com/dotnet/home/blob/master/README.md (both to .NET Foundation, and a GitHub link to another project)\r\n\r\nThese links should all change to HTTPS.","Url":"https://github.com/dotnet/foundation/issues/107","RelatedDescription":"Open issue \"Links to .NET Foundation web site use HTTP instead of HTTPS\" (#107)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"417097543","IsPullRequest":false,"CreatedAt":"2019-03-05T03:22:35","Actor":"cshung","Number":"23024","RawContent":null,"Title":"EE suspension for sampling profiler failed to complete","State":"open","Body":"# Symptom:\r\nWhen debugging a test case with an aggresive printing breakpoint set, the debuggee deadlocks.\r\n# Repro (x86, debug)\r\nTake my changes in https://github.com/dotnet/coreclr/pull/23012 and run the test case in #23009 with WinDBG attached and set this aggressively logging breakpoint `bm CoreCLR!EventPipeBufferList::InsertTail \"k;g\"`.\r\nIt will stop and deadlock.\r\n# Analysis\r\nIt appears that the EE suspension triggered in thread 6 will not complete because thread 9 is waiting on the LoaderHeap lock while it is held by thread 0 which is already suspended. \r\n\r\n@janvorli, can you please take a look?\r\n\r\n# Stacks\r\n```\r\n0:012> ~*k\r\n\r\n   0  Id: 6bfe4.6d4fc Suspend: 1 Teb: 00262000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 00574f2c 761a00a9 ntdll!NtWaitForSingleObject+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 129] \r\n01 00574fa0 0f509f2b KERNELBASE!WaitForSingleObjectEx+0x99 [minkernel\\kernelbase\\synch.c @ 1328] \r\n02 00574fb4 0f50cfec CoreCLR!CLREventWaitHelper2+0x1b [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 378] \r\n03 00574ffc 0f509fab CoreCLR!`CLREventWaitHelper'::`3'::__Body::Run+0x7c [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 402] \r\n04 00575058 0f50e684 CoreCLR!CLREventWaitHelper+0x7b [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 404] \r\n05 00575124 0f50d579 CoreCLR!CLREventBase::WaitEx+0x324 [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 471] \r\n06 00575140 0fc0e153 CoreCLR!CLREventBase::Wait+0x39 [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 418] \r\n07 00575158 0fc0e0ff CoreCLR!GCEvent::Impl::Wait+0x43 [c:\\dev\\coreclr\\src\\vm\\gcenv.os.cpp @ 847] \r\n08 0057516c 0fc108ba CoreCLR!GCEvent::Wait+0x3f [c:\\dev\\coreclr\\src\\vm\\gcenv.os.cpp @ 925] \r\n09 00575184 0f4c7f05 CoreCLR!WKS::GCHeap::WaitUntilGCComplete+0x6a [c:\\dev\\coreclr\\src\\gc\\gcee.cpp @ 404] \r\n0a 00575254 0f3d9f53 CoreCLR!Thread::RareDisablePreemptiveGC+0x355 [c:\\dev\\coreclr\\src\\vm\\threadsuspend.cpp @ 2794] \r\n0b 00575264 0f48f5ea CoreCLR!Thread::DisablePreemptiveGC+0xb3 [c:\\dev\\coreclr\\src\\vm\\threads.h @ 2079] \r\n0c 00575290 0f5df1f3 CoreCLR!GCHolderBase::EnterInternalCoop_HackNoThread+0x10a [c:\\dev\\coreclr\\src\\vm\\threads.h @ 5655] \r\n0d 005752b4 0f990891 CoreCLR!GCCoopHackNoThread::GCCoopHackNoThread+0x33 [c:\\dev\\coreclr\\src\\vm\\threads.h @ 5885] \r\n0e 005753d0 0f4a81a3 CoreCLR!HashMap::LookupValue+0x181 [c:\\dev\\coreclr\\src\\vm\\hash.cpp @ 554] \r\n0f 005753ec 0f859f51 CoreCLR!PtrHashMap::LookupValue+0x53 [c:\\dev\\coreclr\\src\\vm\\hash.h @ 598] \r\n10 00575488 0f40efad CoreCLR!ReadyToRunInfo::GetMethodDescForEntryPoint+0x121 [c:\\dev\\coreclr\\src\\vm\\readytoruninfo.cpp @ 62] \r\n11 0057554c 0f64070b CoreCLR!ReadyToRunJitManager::JitCodeToMethodInfo+0x1ed [c:\\dev\\coreclr\\src\\vm\\codeman.cpp @ 6976] \r\n12 005755f0 0f5b6dc8 CoreCLR!EECodeInfo::Init+0x15b [c:\\dev\\coreclr\\src\\vm\\jitinterface.cpp @ 14046] \r\n13 00575684 0f5b62c9 CoreCLR!StackFrameIterator::ProcessIp+0x118 [c:\\dev\\coreclr\\src\\vm\\stackwalk.cpp @ 2788] \r\n14 00575710 0f5b5cdb CoreCLR!StackFrameIterator::PostProcessingForManagedFrames+0x149 [c:\\dev\\coreclr\\src\\vm\\stackwalk.cpp @ 3212] \r\n15 005757f8 0f5b53c0 CoreCLR!StackFrameIterator::NextRaw+0x8ab [c:\\dev\\coreclr\\src\\vm\\stackwalk.cpp @ 2587] \r\n16 00575820 0f5b7c6c CoreCLR!StackFrameIterator::Next+0x70 [c:\\dev\\coreclr\\src\\vm\\stackwalk.cpp @ 1605] \r\n17 00575ad8 0f5b7a93 CoreCLR!Thread::StackWalkFramesEx+0x1bc [c:\\dev\\coreclr\\src\\vm\\stackwalk.cpp @ 956] \r\n18 00575e1c 0f7c0462 CoreCLR!Thread::StackWalkFrames+0x2c3 [c:\\dev\\coreclr\\src\\vm\\stackwalk.cpp @ 1034] \r\n19 00575ee4 0f7c0224 CoreCLR!EventPipe::WalkManagedStackForThread+0x1e2 [c:\\dev\\coreclr\\src\\vm\\eventpipe.cpp @ 875] \r\n1a 00575f78 0fb35a9e CoreCLR!EventPipe::WalkManagedStackForCurrentThread+0x124 [c:\\dev\\coreclr\\src\\vm\\eventpipe.cpp @ 852] \r\n1b 0057602c 0fc96e26 CoreCLR!EventPipeEventInstance::EventPipeEventInstance+0x25e [c:\\dev\\coreclr\\src\\vm\\eventpipeeventinstance.cpp @ 65] \r\n1c 00576168 0fb3f51b CoreCLR!EventPipeBuffer::WriteEvent+0x2e6 [c:\\dev\\coreclr\\src\\vm\\eventpipebuffer.cpp @ 78] \r\n1d 0057624c 0f7c0f51 CoreCLR!EventPipeBufferManager::WriteEvent+0x2fb [c:\\dev\\coreclr\\src\\vm\\eventpipebuffermanager.cpp @ 360] \r\n1e 005766bc 0f7c0618 CoreCLR!EventPipe::WriteEventInternal+0x231 [c:\\dev\\coreclr\\src\\vm\\eventpipe.cpp @ 771] \r\n1f 00576764 0fdcd357 CoreCLR!EventPipe::WriteEvent+0x138 [c:\\dev\\coreclr\\src\\vm\\eventpipe.cpp @ 720] \r\n20 005767c4 0fea6cb8 CoreCLR!EventPipeWriteEventAllocRequest+0x167 [c:\\dev\\coreclr\\bin\\obj\\windows_nt.x86.debug\\eventing\\eventpipe\\eventpipe\\dotnetruntimeprivate.cpp @ 6526] \r\n21 005767f0 0fea6c22 CoreCLR!FireEtwAllocRequest+0x28 [c:\\dev\\coreclr\\bin\\obj\\windows_nt.x86.debug\\src\\inc\\clretwallmain.h @ 5366] \r\n22 00576814 0feaa2b2 CoreCLR!`anonymous namespace'::EtwAllocRequest+0x22 [c:\\dev\\coreclr\\src\\utilcode\\loaderheap.cpp @ 39] \r\n23 005769ac 0fea9485 CoreCLR!UnlockedLoaderHeap::UnlockedAllocMem_NoThrow+0x692 [c:\\dev\\coreclr\\src\\utilcode\\loaderheap.cpp @ 1388] \r\n24 00576ae4 0f413895 CoreCLR!UnlockedLoaderHeap::UnlockedAllocMem+0x335 [c:\\dev\\coreclr\\src\\utilcode\\loaderheap.cpp @ 1266] \r\n25 00576b34 0f41382e CoreCLR!LoaderHeap::RealAllocMemUnsafe+0x55 [c:\\dev\\coreclr\\src\\inc\\loaderheap.h @ 565] \r\n26 00576b50 0fa60f3b CoreCLR!LoaderHeap::RealAllocMem+0x3e [c:\\dev\\coreclr\\src\\inc\\loaderheap.h @ 520] \r\n27 00576c08 0fa76bb7 CoreCLR!MethodTableBuilder::AllocateFromLowFrequencyHeap+0x13b [c:\\dev\\coreclr\\src\\vm\\methodtablebuilder.cpp @ 11630] \r\n28 00576d08 0fa5ffc4 CoreCLR!MethodTableBuilder::InitNewMethodDesc+0x2f7 [c:\\dev\\coreclr\\src\\vm\\methodtablebuilder.cpp @ 5061] \r\n29 00576df8 0fa603c5 CoreCLR!MethodTableBuilder::AllocAndInitMethodDescChunk+0x2d4 [c:\\dev\\coreclr\\src\\vm\\methodtablebuilder.cpp @ 6850] \r\n2a 00576eac 0fa645d2 CoreCLR!MethodTableBuilder::AllocAndInitMethodDescs+0x2b5 [c:\\dev\\coreclr\\src\\vm\\methodtablebuilder.cpp @ 6785] \r\n2b 00577ec4 0fa6ab7b CoreCLR!MethodTableBuilder::BuildMethodTableThrowing+0x1752 [c:\\dev\\coreclr\\src\\vm\\methodtablebuilder.cpp @ 1661] \r\n2c 005782e4 0f5e6e38 CoreCLR!ClassLoader::CreateTypeHandleForTypeDefThrowing+0x12eb [c:\\dev\\coreclr\\src\\vm\\methodtablebuilder.cpp @ 12175] \r\n2d 00578520 0f5e7fa4 CoreCLR!ClassLoader::CreateTypeHandleForTypeKey+0x368 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3340] \r\n2e 005786d4 0f5f53e1 CoreCLR!ClassLoader::DoIncrementalLoad+0x464 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3268] \r\n2f 005788ec 0f5f431e CoreCLR!ClassLoader::LoadTypeHandleForTypeKey_Body+0xa71 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 4030] \r\n30 00578a60 0f5f3e62 CoreCLR!ClassLoader::LoadTypeHandleForTypeKey+0x39e [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3756] \r\n31 00578d54 0f5f300c CoreCLR!ClassLoader::LoadTypeDefThrowing+0xd52 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 2644] \r\n32 00578f78 0f5eeeda CoreCLR!ClassLoader::LoadTypeDefOrRefThrowing+0x9ec [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 2816] \r\n33 00579110 0f5ee6e6 CoreCLR!ClassLoader::LoadApproxTypeThrowing+0x72a [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3159] \r\n34 005791d4 0fa69fb5 CoreCLR!ClassLoader::LoadApproxParentThrowing+0x1e6 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3213] \r\n35 005795d8 0f5e6e38 CoreCLR!ClassLoader::CreateTypeHandleForTypeDefThrowing+0x725 [c:\\dev\\coreclr\\src\\vm\\methodtablebuilder.cpp @ 11912] \r\n36 00579814 0f5e7fa4 CoreCLR!ClassLoader::CreateTypeHandleForTypeKey+0x368 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3340] \r\n37 005799c8 0f5f53e1 CoreCLR!ClassLoader::DoIncrementalLoad+0x464 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3268] \r\n38 00579be0 0f5f431e CoreCLR!ClassLoader::LoadTypeHandleForTypeKey_Body+0xa71 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 4030] \r\n39 00579d54 0f5f3e62 CoreCLR!ClassLoader::LoadTypeHandleForTypeKey+0x39e [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3756] \r\n3a 0057a048 0f5f300c CoreCLR!ClassLoader::LoadTypeDefThrowing+0xd52 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 2644] \r\n3b 0057a26c 0f8041cd CoreCLR!ClassLoader::LoadTypeDefOrRefThrowing+0x9ec [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 2816] \r\n3c 0057a590 0fa9e48d CoreCLR!SigPointer::GetTypeHandleThrowing+0x129d [c:\\dev\\coreclr\\src\\vm\\siginfo.cpp @ 1500] \r\n3d 0057a664 0f641a02 CoreCLR!ZapSig::DecodeType+0x16d [c:\\dev\\coreclr\\src\\vm\\zapsig.cpp @ 810] \r\n3e 0057a830 0f6950e0 CoreCLR!LoadDynamicInfoEntry+0x202 [c:\\dev\\coreclr\\src\\vm\\jitinterface.cpp @ 13290] \r\n3f 0057a90c 0f6c5f30 CoreCLR!Module::FixupNativeEntry+0x240 [c:\\dev\\coreclr\\src\\vm\\ceeload.cpp @ 10603] \r\n40 0057aa74 0f6ca7d2 CoreCLR!Module::FixupDelayListAux<Module *,int (__thiscall Module::*)(CORCOMPILE_IMPORT_SECTION *,unsigned long,unsigned long *)>+0x450 [c:\\dev\\coreclr\\src\\vm\\ceeload.inl @ 608] \r\n41 0057aaa8 0f8598de CoreCLR!Module::FixupDelayList+0x62 [c:\\dev\\coreclr\\src\\vm\\ceeload.inl @ 512] \r\n42 0057abbc 0f6cc4eb CoreCLR!ReadyToRunInfo::GetEntryPoint+0x3de [c:\\dev\\coreclr\\src\\vm\\readytoruninfo.cpp @ 745] \r\n43 0057ac5c 0f6cbf3c CoreCLR!MethodDesc::GetPrecompiledR2RCode+0x17b [c:\\dev\\coreclr\\src\\vm\\prestub.cpp @ 529] \r\n44 0057acf4 0f6cfe36 CoreCLR!MethodDesc::GetPrecompiledCode+0x16c [c:\\dev\\coreclr\\src\\vm\\prestub.cpp @ 413] \r\n45 0057ad98 0f6cfa3d CoreCLR!MethodDesc::PrepareILBasedCode+0x166 [c:\\dev\\coreclr\\src\\vm\\prestub.cpp @ 370] \r\n46 0057ae28 0f6d00c6 CoreCLR!MethodDesc::PrepareCode+0x17d [c:\\dev\\coreclr\\src\\vm\\prestub.cpp @ 360] \r\n47 0057aee0 0f6c8c5f CoreCLR!MethodDesc::PrepareInitialCode+0x176 [c:\\dev\\coreclr\\src\\vm\\prestub.cpp @ 316] \r\n48 0057b058 0f6d3336 CoreCLR!MethodDesc::DoPrestub+0x7cf [c:\\dev\\coreclr\\src\\vm\\prestub.cpp @ 1893] \r\n49 0057b1c0 0f478b8b CoreCLR!PreStubWorker+0x336 [c:\\dev\\coreclr\\src\\vm\\prestub.cpp @ 1649] \r\n4a 0057b1e4 3097a220 CoreCLR!ThePreStub+0x11 [C:\\Dev\\coreclr\\src\\vm\\i386\\asmhelpers.asm @ 1672] \r\n4b 0057b248 30959917 System_Private_CoreLib!System.Reflection.RuntimeAssembly.GetManifestResourceStream(System.Type, System.String)+0x13c\r\n4c 0057b284 30958baa System_Private_CoreLib!System.Resources.ManifestBasedResourceGroveler.GetManifestResourceStream(System.Reflection.Assembly, System.String)+0x87\r\n4d 0057b344 3095c9df System_Private_CoreLib!System.Resources.ManifestBasedResourceGroveler.GrovelForResourceSet(System.Globalization.CultureInfo, System.Collections.Generic.Dictionary`2<System.String,System.Resources.ResourceSet>, Boolean, Boolean)+0x282\r\n4e 0057b410 3095d21d System_Private_CoreLib!System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo, Boolean, Boolean)+0x27b\r\n4f 0057b4dc 307b8012 System_Private_CoreLib!System.Resources.ResourceManager.GetString(System.String, System.Globalization.CultureInfo)+0x205\r\n50 0057b5c0 307b7bbd System_Private_CoreLib!System.SR.InternalGetResourceString(System.String)+0x3ea\r\n51 0057b600 307b7b7b System_Private_CoreLib!System.SR.GetResourceString(System.String, System.String)+0x2d\r\n52 0057b614 30a73e19 System_Private_CoreLib!System.SR.GetResourceString(System.String)+0x23\r\n53 0057b630 30a6d295 System_Private_CoreLib!System.Diagnostics.Tracing.Resources.GetResourceString(System.String, System.Object[])+0x21\r\n54 0057b6bc 30a6f976 System_Private_CoreLib!System.Diagnostics.Tracing.ManifestBuilder.GetTypeNameHelper(System.Type)+0x2d5\r\n55 0057b704 30a6e768 System_Private_CoreLib!System.Diagnostics.Tracing.ManifestBuilder.GetTypeName(System.Type)+0xd6\r\n56 0057b804 30a6771d System_Private_CoreLib!System.Diagnostics.Tracing.ManifestBuilder.AddEventParameter(System.Type, System.String)+0x200\r\n57 0057bce4 30a650cd System_Private_CoreLib!System.Diagnostics.Tracing.EventSource.CreateManifestAndDescriptors(System.Type, System.String, System.Diagnostics.Tracing.EventSource, System.Diagnostics.Tracing.EventManifestOptions)+0x1541\r\n58 0057bde4 30a64422 System_Private_CoreLib!System.Diagnostics.Tracing.EventSource.EnsureDescriptorsInitialized()+0x16d\r\n59 0057bf7c 30a60bad System_Private_CoreLib!System.Diagnostics.Tracing.EventSource.DoCommand(System.Diagnostics.Tracing.EventCommandEventArgs)+0xe2\r\n5a 0057c064 30a5dc88 System_Private_CoreLib!System.Diagnostics.Tracing.EventSource.Initialize(System.Guid, System.String, System.String[])+0x4cd\r\n5b 0057c0e0 30a5db4a System_Private_CoreLib!System.Diagnostics.Tracing.EventSource..ctor(System.Diagnostics.Tracing.EventSourceSettings, System.String[])+0x134\r\n5c 0057c0f4 30a5dab1 System_Private_CoreLib!System.Diagnostics.Tracing.EventSource..ctor(System.Diagnostics.Tracing.EventSourceSettings)+0x1a\r\n5d 0057c100 0a4e24ad System_Private_CoreLib!System.Diagnostics.Tracing.EventSource..ctor()+0x15\r\n5e 0057c110 0a4e2465 tracecontrol!Tracing.Tests.SimpleEventSource..ctor()+0x25 [C:\\Dev\\coreclr\\tests\\src\\tracing\\tracecontrol\\TraceControl.cs @ 29] \r\n5f 0057c11c 0f4787f1 tracecontrol!Tracing.Tests.SimpleEventSource..cctor()+0x2d [C:\\Dev\\coreclr\\tests\\src\\tracing\\tracecontrol\\TraceControl.cs @ 23] \r\n60 0057c128 0f83a911 CoreCLR!CallDescrWorkerInternal+0x34 [C:\\Dev\\coreclr\\src\\vm\\i386\\asmhelpers.asm @ 612] \r\n61 0057c544 0f83ab95 CoreCLR!CallDescrWorker+0x121 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 129] \r\n62 0057c5ec 0f83bd66 CoreCLR!CallDescrWorkerWithHandler+0x205 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 72] \r\n63 0057c630 0f83b9e4 CoreCLR!`DispatchCallDebuggerWrapper'::`3'::__Body::Run+0x76 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 164] \r\n64 0057c688 0f83bc10 CoreCLR!DispatchCallDebuggerWrapper+0x74 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 164] \r\n65 0057c744 0f8ac413 CoreCLR!DispatchCallSimple+0x190 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 224] \r\n66 0057c8e0 0f89815d CoreCLR!MethodTable::RunClassInitEx+0x453 [c:\\dev\\coreclr\\src\\vm\\methodtable.cpp @ 3303] \r\n67 0057d394 0f893c15 CoreCLR!MethodTable::DoRunClassInitThrowing+0x87d [c:\\dev\\coreclr\\src\\vm\\methodtable.cpp @ 3536] \r\n68 0057d474 0f635b35 CoreCLR!MethodTable::CheckRunClassInitThrowing+0x345 [c:\\dev\\coreclr\\src\\vm\\methodtable.cpp @ 3691] \r\n69 0057d5a0 0f635e5f CoreCLR!JIT_GetSharedNonGCStaticBase_Helper+0x265 [c:\\dev\\coreclr\\src\\vm\\jithelpers.cpp @ 1449] \r\n6a 0057d5f8 006835eb CoreCLR!JIT_GetSharedNonGCStaticBase_Portable+0x11f [c:\\dev\\coreclr\\src\\vm\\jithelpers.cpp @ 1363] \r\nWARNING: Frame IP not in any known module. Following frames may be wrong.\r\n6b 0057d604 0a4e1d0e 0x6835eb\r\n6c 0057d74c 0f4787f1 tracecontrol!Tracing.Tests.TraceControlTest.Main(System.String[])+0x5e [C:\\Dev\\coreclr\\tests\\src\\tracing\\tracecontrol\\TraceControl.cs @ 57] \r\n6d 0057d758 0f83a911 CoreCLR!CallDescrWorkerInternal+0x34 [C:\\Dev\\coreclr\\src\\vm\\i386\\asmhelpers.asm @ 612] \r\n6e 0057db74 0f83ab95 CoreCLR!CallDescrWorker+0x121 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 129] \r\n6f 0057dc20 0f83b454 CoreCLR!CallDescrWorkerWithHandler+0x205 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 72] \r\n70 0057df50 0f4d89de CoreCLR!MethodDescCallSite::CallTargetWorker+0x874 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 607] \r\n71 0057dfe0 0f506d9f CoreCLR!MethodDescCallSite::Call_RetArgSlot+0xce [c:\\dev\\coreclr\\src\\vm\\callhelpers.h @ 472] \r\n72 0057e0c8 0f506ef0 CoreCLR!``RunMain'::`29'::__Body::Run'::`5'::__Body::Run+0x1bf [c:\\dev\\coreclr\\src\\vm\\assembly.cpp @ 1581] \r\n73 0057e128 0f5070ca CoreCLR!`RunMain'::`29'::__Body::Run+0xa0 [c:\\dev\\coreclr\\src\\vm\\assembly.cpp @ 1592] \r\n74 0057e1a0 0f4fcd78 CoreCLR!RunMain+0x15a [c:\\dev\\coreclr\\src\\vm\\assembly.cpp @ 1592] \r\n75 0057e57c 0f3f155f CoreCLR!Assembly::ExecuteMainMethod+0x428 [c:\\dev\\coreclr\\src\\vm\\assembly.cpp @ 1702] \r\n76 0057e710 011b1c7f CoreCLR!CorHost2::ExecuteAssembly+0x3ff [c:\\dev\\coreclr\\src\\vm\\corhost.cpp @ 472] \r\n77 0057f818 011b2f5c CoreRun!TryRun+0xb0f [c:\\dev\\coreclr\\src\\coreclr\\hosts\\corerun\\corerun.cpp @ 642] \r\n78 0057f878 0120ccbe CoreRun!wmain+0x10c [c:\\dev\\coreclr\\src\\coreclr\\hosts\\corerun\\corerun.cpp @ 758] \r\n79 0057f88c 0120cba7 CoreRun!invoke_main+0x1e [d:\\agent\\_work\\3\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl @ 90] \r\n7a 0057f8e8 0120ca4d CoreRun!__scrt_common_main_seh+0x157 [d:\\agent\\_work\\3\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl @ 288] \r\n7b 0057f8f0 0120cd28 CoreRun!__scrt_common_main+0xd [d:\\agent\\_work\\3\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl @ 331] \r\n7c 0057f8f8 75ae0179 CoreRun!wmainCRTStartup+0x8 [d:\\agent\\_work\\3\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_wmain.cpp @ 17] \r\n7d 0057f908 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n7e 0057f964 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n7f 0057f974 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n   1  Id: 6bfe4.6d00c Suspend: 1 Teb: 00265000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 0085f8a4 7755e4c6 ntdll!NtWaitForWorkViaWorkerFactory+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 3777] \r\n01 0085fa64 75ae0179 ntdll!TppWorkerThread+0x296 [minkernel\\threadpool\\ntdll\\worker.c @ 910] \r\n02 0085fa74 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n03 0085fad0 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n04 0085fae0 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n   2  Id: 6bfe4.6cde4 Suspend: 1 Teb: 00268000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 00b2f924 7755e4c6 ntdll!NtWaitForWorkViaWorkerFactory+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 3777] \r\n01 00b2fae4 75ae0179 ntdll!TppWorkerThread+0x296 [minkernel\\threadpool\\ntdll\\worker.c @ 910] \r\n02 00b2faf4 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n03 00b2fb50 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n04 00b2fb60 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n   3  Id: 6bfe4.6d21c Suspend: 1 Teb: 0026b000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 00cefa7c 7755e4c6 ntdll!NtWaitForWorkViaWorkerFactory+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 3777] \r\n01 00cefc3c 75ae0179 ntdll!TppWorkerThread+0x296 [minkernel\\threadpool\\ntdll\\worker.c @ 910] \r\n02 00cefc4c 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n03 00cefca8 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n04 00cefcb8 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n   4  Id: 6bfe4.6e37c Suspend: 1 Teb: 0026e000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 04c2f96c 761a2a03 ntdll!NtWaitForMultipleObjects+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 825] \r\n01 04c2fb00 0ff27477 KERNELBASE!WaitForMultipleObjectsEx+0x133 [minkernel\\kernelbase\\synch.c @ 1551] \r\n02 04c2fc98 0ff297ee CoreCLR!DebuggerRCThread::MainLoop+0x5c7 [c:\\dev\\coreclr\\src\\debug\\ee\\rcthread.cpp @ 1137] \r\n03 04c2fdc8 0ff298d5 CoreCLR!DebuggerRCThread::ThreadProc+0x62e [c:\\dev\\coreclr\\src\\debug\\ee\\rcthread.cpp @ 943] \r\n04 04c2fdd4 75ae0179 CoreCLR!DebuggerRCThread::ThreadProcStatic+0x45 [c:\\dev\\coreclr\\src\\debug\\ee\\rcthread.cpp @ 1528] \r\n05 04c2fde4 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n06 04c2fe40 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n07 04c2fe50 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n   5  Id: 6bfe4.6e318 Suspend: 1 Teb: 00271000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 06ddf30c 761a2a03 ntdll!NtWaitForMultipleObjects+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 825] \r\n01 06ddf4a0 0f793789 KERNELBASE!WaitForMultipleObjectsEx+0x133 [minkernel\\kernelbase\\synch.c @ 1551] \r\n02 06ddf4d8 0f792d0d CoreCLR!FinalizerThread::WaitForFinalizerEvent+0x149 [c:\\dev\\coreclr\\src\\vm\\finalizerthread.cpp @ 431] \r\n03 06ddf504 0f4e7fae CoreCLR!FinalizerThread::FinalizerThreadWorker+0xbd [c:\\dev\\coreclr\\src\\vm\\finalizerthread.cpp @ 549] \r\n04 06ddf590 0f4e805d CoreCLR!ManagedThreadBase_DispatchInner+0x11e [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 7779] \r\n05 06ddf69c 0f4ebd9f CoreCLR!ManagedThreadBase_DispatchMiddle+0x8d [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 7824] \r\n06 06ddf6dc 0f4ebe99 CoreCLR!``ManagedThreadBase_DispatchOuter'::`8'::__Body::Run'::`5'::__Body::Run+0x6f [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 8043] \r\n07 06ddf730 0f4e84c0 CoreCLR!`ManagedThreadBase_DispatchOuter'::`8'::__Body::Run+0x99 [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 8043] \r\n08 06ddf79c 0f4e878d CoreCLR!ManagedThreadBase_DispatchOuter+0xc0 [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 8065] \r\n09 06ddf844 0f4e000e CoreCLR!ManagedThreadBase_NoADTransition+0x13d [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 8115] \r\n0a 06ddf854 0f79333e CoreCLR!ManagedThreadBase::FinalizerBase+0xe [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 8141] \r\n0b 06ddf8a0 0f791ef6 CoreCLR!`FinalizerThread::FinalizerThreadStart'::`37'::__Body::Run+0xbe [c:\\dev\\coreclr\\src\\vm\\finalizerthread.cpp @ 699] \r\n0c 06ddf904 0f4f343e CoreCLR!FinalizerThread::FinalizerThreadStart+0x186 [c:\\dev\\coreclr\\src\\vm\\finalizerthread.cpp @ 768] \r\n0d 06ddf9b4 75ae0179 CoreCLR!Thread::intermediateThreadProc+0x8e [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 2151] \r\n0e 06ddf9c4 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n0f 06ddfa20 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n10 06ddfa30 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n   6  Id: 6bfe4.6af60 Suspend: 1 Teb: 00274000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 0753f760 761a00a9 ntdll!NtWaitForSingleObject+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 129] \r\n01 0753f7d4 0f509f2b KERNELBASE!WaitForSingleObjectEx+0x99 [minkernel\\kernelbase\\synch.c @ 1328] \r\n02 0753f7e8 0f50cfec CoreCLR!CLREventWaitHelper2+0x1b [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 378] \r\n03 0753f830 0f509fab CoreCLR!`CLREventWaitHelper'::`3'::__Body::Run+0x7c [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 402] \r\n04 0753f88c 0f50e684 CoreCLR!CLREventWaitHelper+0x7b [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 404] \r\n05 0753f958 0f50d579 CoreCLR!CLREventBase::WaitEx+0x324 [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 471] \r\n06 0753f974 0f4ccab1 CoreCLR!CLREventBase::Wait+0x39 [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 418] \r\n07 0753fb84 0f4cba43 CoreCLR!ThreadSuspend::SuspendRuntime+0xbc1 [c:\\dev\\coreclr\\src\\vm\\threadsuspend.cpp @ 4450] \r\n08 0753fcac 0fb40da7 CoreCLR!ThreadSuspend::SuspendEE+0x263 [c:\\dev\\coreclr\\src\\vm\\threadsuspend.cpp @ 6860] \r\n09 0753fda4 0f4f343e CoreCLR!SampleProfiler::ThreadProc+0x227 [c:\\dev\\coreclr\\src\\vm\\sampleprofiler.cpp @ 185] \r\n0a 0753fed4 75ae0179 CoreCLR!Thread::intermediateThreadProc+0x8e [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 2151] \r\n0b 0753fee4 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n0c 0753ff40 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n0d 0753ff50 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n   7  Id: 6bfe4.6bb8c Suspend: 1 Teb: 00277000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 075ef8a4 76188feb ntdll!NtDelayExecution+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 513] \r\n01 075ef90c 0fa3006d KERNELBASE!SleepEx+0x4b [minkernel\\kernelbase\\thread.c @ 2230] \r\n02 075ef9f4 0fa30321 CoreCLR!ThreadpoolMgr::TimerThreadFire+0x16d [c:\\dev\\coreclr\\src\\vm\\win32threadpool.cpp @ 4602] \r\n03 075efa08 75ae0179 CoreCLR!ThreadpoolMgr::TimerThreadStart+0x81 [c:\\dev\\coreclr\\src\\vm\\win32threadpool.cpp @ 4566] \r\n04 075efa18 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n05 075efa74 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n06 075efa84 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n   8  Id: 6bfe4.6df38 Suspend: 1 Teb: 0027a000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 07ddf518 761a00a9 ntdll!NtWaitForSingleObject+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 129] \r\n01 07ddf58c 0f509f2b KERNELBASE!WaitForSingleObjectEx+0x99 [minkernel\\kernelbase\\synch.c @ 1328] \r\n02 07ddf5a0 0f50cfec CoreCLR!CLREventWaitHelper2+0x1b [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 378] \r\n03 07ddf5e8 0f509fab CoreCLR!`CLREventWaitHelper'::`3'::__Body::Run+0x7c [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 402] \r\n04 07ddf644 0f50e684 CoreCLR!CLREventWaitHelper+0x7b [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 404] \r\n05 07ddf710 0f50d579 CoreCLR!CLREventBase::WaitEx+0x324 [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 471] \r\n06 07ddf72c 0fc0e153 CoreCLR!CLREventBase::Wait+0x39 [c:\\dev\\coreclr\\src\\vm\\synch.cpp @ 418] \r\n07 07ddf744 0fc0e0ff CoreCLR!GCEvent::Impl::Wait+0x43 [c:\\dev\\coreclr\\src\\vm\\gcenv.os.cpp @ 847] \r\n08 07ddf758 0fc108ba CoreCLR!GCEvent::Wait+0x3f [c:\\dev\\coreclr\\src\\vm\\gcenv.os.cpp @ 925] \r\n09 07ddf770 0f4c7f05 CoreCLR!WKS::GCHeap::WaitUntilGCComplete+0x6a [c:\\dev\\coreclr\\src\\gc\\gcee.cpp @ 404] \r\n0a 07ddf840 0f3d9f53 CoreCLR!Thread::RareDisablePreemptiveGC+0x355 [c:\\dev\\coreclr\\src\\vm\\threadsuspend.cpp @ 2794] \r\n0b 07ddf850 0f3e6416 CoreCLR!Thread::DisablePreemptiveGC+0xb3 [c:\\dev\\coreclr\\src\\vm\\threads.h @ 2079] \r\n0c 07ddf864 0f3e1fe6 CoreCLR!GCHolderBase::EnterInternalCoop+0xf6 [c:\\dev\\coreclr\\src\\vm\\threads.h @ 5717] \r\n0d 07ddf88c 0f4e963b CoreCLR!GCCoop::GCCoop+0x36 [c:\\dev\\coreclr\\src\\vm\\threads.h @ 5837] \r\n0e 07ddfa94 0f4dcc1c CoreCLR!Thread::OnThreadTerminate+0x22b [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 2937] \r\n0f 07ddfbb8 0fa31c33 CoreCLR!DestroyThread+0x20c [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 904] \r\n10 07ddfd44 0f4f343e CoreCLR!ThreadpoolMgr::WorkerThreadStart+0x973 [c:\\dev\\coreclr\\src\\vm\\win32threadpool.cpp @ 2191] \r\n11 07ddfef0 75ae0179 CoreCLR!Thread::intermediateThreadProc+0x8e [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 2151] \r\n12 07ddff00 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n13 07ddff5c 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n14 07ddff6c 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n   9  Id: 6bfe4.6e258 Suspend: 1 Teb: 00280000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 09d4b038 77562014 ntdll!NtWaitForAlertByThreadId+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 3753] \r\n01 09d4b058 77561f56 ntdll!RtlpWaitOnAddressWithTimeout+0x33 [minkernel\\ntos\\rtl\\waitaddr.c @ 817] \r\n02 09d4b09c 77561e4b ntdll!RtlpWaitOnAddress+0xa5 [minkernel\\ntos\\rtl\\waitaddr.c @ 1071] \r\n03 09d4b0d8 7755ff16 ntdll!RtlpWaitOnCriticalSection+0xac [minkernel\\ntos\\rtl\\resource.c @ 1568] \r\n04 09d4b100 7755fe39 ntdll!RtlpEnterCriticalSectionContended+0xd6 [minkernel\\ntos\\rtl\\resource.c @ 2265] \r\n05 09d4b108 0f4499cd ntdll!RtlEnterCriticalSection+0x49 [minkernel\\ntos\\rtl\\resource.c @ 1881] \r\n06 09d4b114 0f448586 CoreCLR!UnsafeEnterCriticalSection+0xd [c:\\dev\\coreclr\\src\\inc\\unsafe.h @ 20] \r\n07 09d4b158 0f47f075 CoreCLR!CrstBase::Enter+0x216 [c:\\dev\\coreclr\\src\\vm\\crst.cpp @ 316] \r\n08 09d4b1e4 0f3ed2fc CoreCLR!EEEnterCriticalSection+0x135 [c:\\dev\\coreclr\\src\\vm\\hosting.cpp @ 760] \r\n09 09d4b1f0 0f379f23 CoreCLR!CExecutionEngine::AcquireLock+0xc [c:\\dev\\coreclr\\src\\vm\\corhost.cpp @ 2870] \r\n0a 09d4b208 0f3ccbb2 CoreCLR!ClrEnterCriticalSection+0x33 [c:\\dev\\coreclr\\src\\utilcode\\clrhost_nodependencies.cpp @ 757] \r\n0b 09d4b218 0f3cc19c CoreCLR!FunctionBase<void *,&ClrEnterCriticalSection,&ClrLeaveCriticalSection>::DoAcquire+0x12 [c:\\dev\\coreclr\\src\\inc\\holder.h @ 715] \r\n0c 09d4b224 0f3cb8b1 CoreCLR!BaseHolder<void *,FunctionBase<void *,&ClrEnterCriticalSection,&ClrLeaveCriticalSection>,0,&CompareDefault<void *> >::Acquire+0x3c [c:\\dev\\coreclr\\src\\inc\\holder.h @ 288] \r\n0d 09d4b230 0f3cb992 CoreCLR!BaseHolder<void *,FunctionBase<void *,&ClrEnterCriticalSection,&ClrLeaveCriticalSection>,0,&CompareDefault<void *> >::BaseHolder<void *,FunctionBase<void *,&ClrEnterCriticalSection,&ClrLeaveCriticalSection>,0,&CompareDefault<void *> >+0x31 [c:\\dev\\coreclr\\src\\inc\\holder.h @ 255] \r\n0e 09d4b250 0f413877 CoreCLR!Holder<void *,&ClrEnterCriticalSection,&ClrLeaveCriticalSection,0,&CompareDefault<void *>,1>::Holder<void *,&ClrEnterCriticalSection,&ClrLeaveCriticalSection,0,&CompareDefault<void *>,1>+0x32 [c:\\dev\\coreclr\\src\\inc\\holder.h @ 749] \r\n0f 09d4b298 0f41382e CoreCLR!LoaderHeap::RealAllocMemUnsafe+0x37 [c:\\dev\\coreclr\\src\\inc\\loaderheap.h @ 564] \r\n10 09d4b2b4 0fa8cea5 CoreCLR!LoaderHeap::RealAllocMem+0x3e [c:\\dev\\coreclr\\src\\inc\\loaderheap.h @ 520] \r\n11 09d4b378 0fa91b13 CoreCLR!NgenHashTable<EETypeHashTable,EETypeHashEntry,2>::BaseAllocateEntry+0x155 [c:\\dev\\coreclr\\src\\vm\\ngenhash.inl @ 91] \r\n12 09d4b534 0f5f93bf CoreCLR!EETypeHashTable::InsertValue+0x723 [c:\\dev\\coreclr\\src\\vm\\typehash.cpp @ 645] \r\n13 09d4b818 0f5e805b CoreCLR!ClassLoader::PublishType+0x51f [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3486] \r\n14 09d4b9cc 0f5f53e1 CoreCLR!ClassLoader::DoIncrementalLoad+0x51b [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3271] \r\n15 09d4bbe4 0f5f431e CoreCLR!ClassLoader::LoadTypeHandleForTypeKey_Body+0xa71 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 4030] \r\n16 09d4bd58 0f5efe95 CoreCLR!ClassLoader::LoadTypeHandleForTypeKey+0x39e [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 3756] \r\n17 09d4bf3c 0f5f0b38 CoreCLR!ClassLoader::LoadConstructedTypeThrowing+0x935 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 1202] \r\n18 09d4c104 0f8040a7 CoreCLR!ClassLoader::LoadGenericInstantiationThrowing+0x7a8 [c:\\dev\\coreclr\\src\\vm\\clsload.cpp @ 2079] \r\n19 09d4c434 0f804394 CoreCLR!SigPointer::GetTypeHandleThrowing+0x1177 [c:\\dev\\coreclr\\src\\vm\\siginfo.cpp @ 1438] \r\n1a 09d4c75c 0fa990ef CoreCLR!SigPointer::GetTypeHandleThrowing+0x1464 [c:\\dev\\coreclr\\src\\vm\\siginfo.cpp @ 1556] \r\n1b 09d4ca40 0f6294f1 CoreCLR!Dictionary::PopulateEntry+0x66f [c:\\dev\\coreclr\\src\\vm\\genericdict.cpp @ 820] \r\n1c 09d4cb40 0f629a41 CoreCLR!JIT_GenericHandleWorker+0x281 [c:\\dev\\coreclr\\src\\vm\\jithelpers.cpp @ 3885] \r\n1d 09d4cd24 0f628db8 CoreCLR!JIT_GenericHandle_Framed+0x4b1 [c:\\dev\\coreclr\\src\\vm\\jithelpers.cpp @ 3935] \r\n1e 09d4ce7c 30a9ba2f CoreCLR!JIT_GenericHandleClassWithSlotAndModule+0x3f8 [c:\\dev\\coreclr\\src\\vm\\jithelpers.cpp @ 4050] \r\n1f 09d4cebc 30a999f8 System_Private_CoreLib!System.Collections.Concurrent.ConcurrentQueueSegment`1[[System.__Canon, System.Private.CoreLib]]..ctor(Int32)+0xbf\r\n20 09d4ced4 308af30e System_Private_CoreLib!System.Collections.Concurrent.ConcurrentQueue`1[[System.__Canon, System.Private.CoreLib]]..ctor()+0x64\r\n21 09d4cef4 308af1ef System_Private_CoreLib!System.Threading.ThreadPoolWorkQueue..ctor()+0x26\r\n22 09d4cf0c 0f4787f1 System_Private_CoreLib!System.Threading.ThreadPoolGlobals..cctor()+0x3b\r\n23 09d4cf18 0f83a911 CoreCLR!CallDescrWorkerInternal+0x34 [C:\\Dev\\coreclr\\src\\vm\\i386\\asmhelpers.asm @ 612] \r\n24 09d4d334 0f83ab95 CoreCLR!CallDescrWorker+0x121 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 129] \r\n25 09d4d3e4 0f83bd66 CoreCLR!CallDescrWorkerWithHandler+0x205 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 72] \r\n26 09d4d428 0f83b9e4 CoreCLR!`DispatchCallDebuggerWrapper'::`3'::__Body::Run+0x76 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 164] \r\n27 09d4d480 0f83bc10 CoreCLR!DispatchCallDebuggerWrapper+0x74 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 164] \r\n28 09d4d53c 0f8ac413 CoreCLR!DispatchCallSimple+0x190 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 224] \r\n29 09d4d6d8 0f89815d CoreCLR!MethodTable::RunClassInitEx+0x453 [c:\\dev\\coreclr\\src\\vm\\methodtable.cpp @ 3303] \r\n2a 09d4e18c 0f893c15 CoreCLR!MethodTable::DoRunClassInitThrowing+0x87d [c:\\dev\\coreclr\\src\\vm\\methodtable.cpp @ 3536] \r\n2b 09d4e26c 0f6c9450 CoreCLR!MethodTable::CheckRunClassInitThrowing+0x345 [c:\\dev\\coreclr\\src\\vm\\methodtable.cpp @ 3691] \r\n2c 09d4e4f0 0f6d21ef CoreCLR!DynamicHelperFixup+0x420 [c:\\dev\\coreclr\\src\\vm\\prestub.cpp @ 2895] \r\n2d 09d4e654 0f478c24 CoreCLR!DynamicHelperWorker+0x1af [c:\\dev\\coreclr\\src\\vm\\prestub.cpp @ 3203] \r\n2e 09d4e684 30898a38 CoreCLR!DelayLoad_Helper+0x25 [C:\\Dev\\coreclr\\src\\vm\\i386\\asmhelpers.asm @ 1849] \r\n2f 09d4e690 30899790 System_Private_CoreLib!System.Threading.ThreadPool.EnsureInitialized()+0xc\r\n30 09d4e6a8 3089aa4d System_Private_CoreLib!System.Threading.ThreadPool.UnsafeQueueUserWorkItemInternal(System.Object, Boolean)+0x44\r\n31 09d4e76c 3089a5fb System_Private_CoreLib!System.Threading.TimerQueue.FireNextTimers()+0x265\r\n32 09d4e78c 0f4787f1 System_Private_CoreLib!System.Threading.TimerQueue.AppDomainTimerCallback(Int32)+0x9b\r\n33 09d4e798 0f83a911 CoreCLR!CallDescrWorkerInternal+0x34 [C:\\Dev\\coreclr\\src\\vm\\i386\\asmhelpers.asm @ 612] \r\n34 09d4ebb4 0f83ab95 CoreCLR!CallDescrWorker+0x121 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 129] \r\n35 09d4ec60 0f83b454 CoreCLR!CallDescrWorkerWithHandler+0x205 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 72] \r\n36 09d4ef94 0f3ed9e7 CoreCLR!MethodDescCallSite::CallTargetWorker+0x874 [c:\\dev\\coreclr\\src\\vm\\callhelpers.cpp @ 607] \r\n37 09d4efac 0fbdf46a CoreCLR!MethodDescCallSite::Call+0x17 [c:\\dev\\coreclr\\src\\vm\\callhelpers.h @ 472] \r\n38 09d4f0b4 0f4e7fae CoreCLR!AppDomainTimerCallback_Worker+0x15a [c:\\dev\\coreclr\\src\\vm\\comthreadpool.cpp @ 772] \r\n39 09d4f140 0f4e805d CoreCLR!ManagedThreadBase_DispatchInner+0x11e [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 7779] \r\n3a 09d4f24c 0f4ebd9f CoreCLR!ManagedThreadBase_DispatchMiddle+0x8d [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 7824] \r\n3b 09d4f28c 0f4ebe99 CoreCLR!``ManagedThreadBase_DispatchOuter'::`8'::__Body::Run'::`5'::__Body::Run+0x6f [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 8043] \r\n3c 09d4f2e0 0f4e84c0 CoreCLR!`ManagedThreadBase_DispatchOuter'::`8'::__Body::Run+0x99 [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 8043] \r\n3d 09d4f34c 0f4e8621 CoreCLR!ManagedThreadBase_DispatchOuter+0xc0 [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 8065] \r\n3e 09d4f3f0 0f4f0e06 CoreCLR!ManagedThreadBase_FullTransitionWithAD+0x131 [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 8091] \r\n3f 09d4f408 0fbdf2a1 CoreCLR!ManagedThreadBase::ThreadPool+0x16 [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 8133] \r\n40 09d4f4ec 0fa23654 CoreCLR!AppDomainTimerCallback+0x191 [c:\\dev\\coreclr\\src\\vm\\comthreadpool.cpp @ 804] \r\n41 09d4f590 0faf4f34 CoreCLR!ThreadpoolMgr::AsyncTimerCallbackCompletion+0x184 [c:\\dev\\coreclr\\src\\vm\\win32threadpool.cpp @ 4786] \r\n42 09d4f608 0fa27f51 CoreCLR!UnManagedPerAppDomainTPCount::DispatchWorkItem+0x254 [c:\\dev\\coreclr\\src\\vm\\threadpoolrequest.cpp @ 543] \r\n43 09d4f6a4 0fa3179b CoreCLR!ThreadpoolMgr::ExecuteWorkRequest+0x1a1 [c:\\dev\\coreclr\\src\\vm\\win32threadpool.cpp @ 1546] \r\n44 09d4f834 0f4f343e CoreCLR!ThreadpoolMgr::WorkerThreadStart+0x4db [c:\\dev\\coreclr\\src\\vm\\win32threadpool.cpp @ 2008] \r\n45 09d4fa64 75ae0179 CoreCLR!Thread::intermediateThreadProc+0x8e [c:\\dev\\coreclr\\src\\vm\\threads.cpp @ 2151] \r\n46 09d4fa74 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n47 09d4fad0 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n48 09d4fae0 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n  10  Id: 6bfe4.6e428 Suspend: 1 Teb: 00289000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 0ae2faf4 7755e4c6 ntdll!NtWaitForWorkViaWorkerFactory+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 3777] \r\n01 0ae2fcb4 75ae0179 ntdll!TppWorkerThread+0x296 [minkernel\\threadpool\\ntdll\\worker.c @ 910] \r\n02 0ae2fcc4 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n03 0ae2fd20 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n04 0ae2fd30 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n  11  Id: 6bfe4.6e42c Suspend: 1 Teb: 0028c000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 0afaf998 7755e4c6 ntdll!NtWaitForWorkViaWorkerFactory+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 3777] \r\n01 0afafb58 75ae0179 ntdll!TppWorkerThread+0x296 [minkernel\\threadpool\\ntdll\\worker.c @ 910] \r\n02 0afafb68 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n03 0afafbc4 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n04 0afafbd4 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n\r\n# 12  Id: 6bfe4.6d5b4 Suspend: 1 Teb: 00292000 Unfrozen\r\n # ChildEBP RetAddr  \r\n00 0b12f744 775bb3a9 ntdll!DbgBreakPoint [minkernel\\ntos\\rtl\\i386\\debug2.asm @ 61] \r\n01 0b12f774 75ae0179 ntdll!DbgUiRemoteBreakin+0x39 [minkernel\\ntdll\\dlluistb.c @ 312] \r\n02 0b12f784 7757662d KERNEL32!BaseThreadInitThunk+0x19 [base\\win32\\client\\thread.c @ 64] \r\n03 0b12f7e0 775765fd ntdll!__RtlUserThreadStart+0x2f [minkernel\\ntdll\\rtlstrt.c @ 1163] \r\n04 0b12f7f0 00000000 ntdll!_RtlUserThreadStart+0x1b [minkernel\\ntdll\\rtlstrt.c @ 1080] \r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/23024","RelatedDescription":"Open issue \"EE suspension for sampling profiler failed to complete\" (#23024)"},{"Id":"417093722","IsPullRequest":true,"CreatedAt":"2019-03-05T03:07:33","Actor":"AaronRobinsonMSFT","Number":"23023","RawContent":null,"Title":"Re-enable RCW license tests","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/23023","RelatedDescription":"Open PR \"Re-enable RCW license tests\" (#23023)"},{"Id":"417035257","IsPullRequest":true,"CreatedAt":"2019-03-05T02:58:57","Actor":"AaronRobinsonMSFT","Number":"23010","RawContent":null,"Title":"Remove loose dependency in runtime on System.ComponentModel.","State":"closed","Body":"Disable RCW license tests until sync with CoreFX.\r\n\r\nSee https://github.com/dotnet/corefx/pull/35767\r\n\r\ncc @stephentoub, @jkotas, @ericstj, @jkoritzinsky ","Url":"https://github.com/dotnet/coreclr/pull/23010","RelatedDescription":"Closed or merged PR \"Remove loose dependency in runtime on System.ComponentModel.\" (#23010)"},{"Id":"417088339","IsPullRequest":true,"CreatedAt":"2019-03-05T02:46:43","Actor":"echesakovMSFT","Number":"23022","RawContent":null,"Title":"[NO MERGE] Test only","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/23022","RelatedDescription":"Open PR \"[NO MERGE] Test only\" (#23022)"},{"Id":"417082985","IsPullRequest":true,"CreatedAt":"2019-03-05T02:23:07","Actor":"sdmaclea","Number":"23021","RawContent":null,"Title":"Remove dead ContainToAppDomain","State":"open","Body":"Remove more left over code and comments from multiple AppDomains","Url":"https://github.com/dotnet/coreclr/pull/23021","RelatedDescription":"Open PR \"Remove dead ContainToAppDomain\" (#23021)"},{"Id":"417080235","IsPullRequest":false,"CreatedAt":"2019-03-05T02:11:46","Actor":"GrabYourPitchforks","Number":"23020","RawContent":null,"Title":"EncoderNLS.Convert doesn't always out the correct value for 'completed'","State":"open","Body":"Repro code:\r\n\r\n```cs\r\nvar encoding = Encoding.GetEncoding(\"us-ascii\", new EncoderReplacementFallback(\"hello\"), DecoderFallback.ExceptionFallback);\r\nvar encoder = encoding.GetEncoder();\r\n\r\nencoder.Convert(new[] { '\\ud800' }, 0, 1, new byte[2], 0, 2, flush: false, out int charsUsed, out int bytesUsed, out bool completed);\r\n\r\nConsole.WriteLine($\"charsUsed: {charsUsed}\");\r\nConsole.WriteLine($\"bytesUsed: {bytesUsed}\");\r\nConsole.WriteLine($\"completed: {completed}\");\r\n```\r\n\r\nExpected output:\r\n\r\n```txt\r\ncharsUsed: 1\r\nbytesUsed: 0\r\ncompleted: False\r\n```\r\n\r\nActual output:\r\n\r\n```txt\r\ncharsUsed: 1\r\nbytesUsed: 0\r\ncompleted: True\r\n```\r\n\r\nThe culprit seems to be the line below.\r\n\r\nhttps://github.com/dotnet/coreclr/blob/77fcaf6b738941a0c5dc3c00b70b49c7d9f63b69/src/System.Private.CoreLib/shared/System/Text/EncoderNLS.cs#L201\r\n\r\nThe values _flush_ and _this.HasState_ can never both be true at the same time because specifying _flush = true_ mandates that the `EncoderNLS` instance not store any remaining high surrogate character for future invocations. Since this means `(flush && this.HasState) == false` always, by DeMorgan's theorem we have `(!flush || !this.HasState) == true` always, which means this clause isn't actually contributing to the final value for _completed_.\r\n\r\nI believe the appropriate fix is to ignore the _flush_ parameter entirely and to look only at three conditions: (a) all chars were consumed, (b) there's no leftover state on the `EncoderNLS` instance, and (c) there's no leftover state in the fallback buffer.","Url":"https://github.com/dotnet/coreclr/issues/23020","RelatedDescription":"Open issue \"EncoderNLS.Convert doesn't always out the correct value for 'completed'\" (#23020)"},{"Id":"417079321","IsPullRequest":true,"CreatedAt":"2019-03-05T02:07:15","Actor":"sywhang","Number":"23019","RawContent":null,"Title":"Update eventcounter spec","State":"open","Body":"Adding info about ```AddMetaData``` API as we discussed in #22852 . \r\n","Url":"https://github.com/dotnet/coreclr/pull/23019","RelatedDescription":"Open PR \"Update eventcounter spec\" (#23019)"},{"Id":"417068741","IsPullRequest":true,"CreatedAt":"2019-03-05T01:19:31","Actor":"ahoefling","Number":"23018","RawContent":null,"Title":"Added Range Manipulation APIs to Collection<T> and ObservableCollection<T>","State":"open","Body":"Added Range Manipulation APIs to Collection<T> and ObservableCollection<T>.\r\n\r\nPart of : dotnet/corefx#10752\r\nPart of: dotnet/corefx#35772\r\n\r\nAdded the following new API that was approved:\r\n\r\n```c#\r\n    // Adds a range to the end of the collection.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Add)\r\n    public void AddRange(IEnumerable<T> collection) => InsertItemsRange(0, collection);\r\n\r\n    // Inserts a range\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Add)\r\n    public void InsertRange(int index, IEnumerable<T> collection) => InsertItemsRange(index, collection);\r\n\r\n    // Removes a range.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Remove)\r\n    public void RemoveRange(int index, int count) => RemoveItemsRange(index, count);\r\n\r\n    // Will allow to replace a range with fewer, equal, or more items.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Replace)\r\n    public void ReplaceRange(int index, int count, IEnumerable<T> collection)\r\n    {\r\n         RemoveItemsRange(index, count);\r\n         InsertItemsRange(index, collection);\r\n    }\r\n\r\n    #region virtual methods\r\n    protected virtual void InsertItemsRange(int index, IEnumerable<T> collection);\r\n    protected virtual void RemoveItemsRange(int index, int count);\r\n    #endregion\r\n```\r\n\r\nLooking forward to everyone's feedback on this\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/23018","RelatedDescription":"Open PR \"Added Range Manipulation APIs to Collection<T> and ObservableCollection<T>\" (#23018)"},{"Id":"417067472","IsPullRequest":true,"CreatedAt":"2019-03-05T01:14:15","Actor":"josalem","Number":"23017","RawContent":null,"Title":"Fix syntax bug: bash requires spaces around brackets for tests","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/23017","RelatedDescription":"Open PR \"Fix syntax bug: bash requires spaces around brackets for tests\" (#23017)"},{"Id":"417065248","IsPullRequest":false,"CreatedAt":"2019-03-05T01:03:57","Actor":"VincentBu","Number":"23016","RawContent":null,"Title":"[x86] error MSB3030 in x86_checked_windows_nt_corefx_baseline","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x86/job/jitstress/job/x86_checked_windows_nt_corefx_baseline/760/\r\n\r\n**Log:**\r\n```\r\nerror MSB3030: Could not copy the file \"D:\\j\\workspace\\x86_checked_w---fbe14ed2\\_\\fx\\artifacts\\ibc\\optimization.windows_nt-x64.IBC.CoreFx\\data\\System.Runtime.InteropServices.RuntimeInformation\\System.Runtime.InteropServices.RuntimeInformation.dll\\System.Runtime.InteropServices.RuntimeInformation.dll\" because it was not found. [D:\\j\\workspace\\x86_checked_w---fbe14ed2\\_\\fx\\src\\System.Runtime.InteropServices.RuntimeInformation\\src\\System.Runtime.InteropServices.RuntimeInformation.csproj]\r\n```","Url":"https://github.com/dotnet/coreclr/issues/23016","RelatedDescription":"Open issue \"[x86] error MSB3030 in x86_checked_windows_nt_corefx_baseline\" (#23016)"},{"Id":"417060320","IsPullRequest":true,"CreatedAt":"2019-03-05T00:43:11","Actor":"jkoritzinsky","Number":"23015","RawContent":null,"Title":"Move HasLayoutMetadata to methodtablebuilder.cpp","State":"open","Body":"Extracted from #21415 to help shrink it.","Url":"https://github.com/dotnet/coreclr/pull/23015","RelatedDescription":"Open PR \"Move HasLayoutMetadata to methodtablebuilder.cpp\" (#23015)"},{"Id":"417019559","IsPullRequest":true,"CreatedAt":"2019-03-05T00:42:41","Actor":"echesakovMSFT","Number":"23007","RawContent":null,"Title":"Pass -priority=1 argument directly to build-test.cmd","State":"closed","Body":"Fixes https://github.com/dotnet/coreclr/issues/22995\r\n\r\nBefore #21608 build.cmd was calling build-test.cmd with -priority=n argument. After that change this call has been transformed to build-test.cmd arm64 Checked  /p:CLRTestPriorityToBuild=1.\r\n\r\nAlso see https://github.com/dotnet/coreclr/issues/22995#issuecomment-469366377","Url":"https://github.com/dotnet/coreclr/pull/23007","RelatedDescription":"Closed or merged PR \"Pass -priority=1 argument directly to build-test.cmd\" (#23007)"},{"Id":"416878769","IsPullRequest":false,"CreatedAt":"2019-03-05T00:42:41","Actor":"BruceForstall","Number":"22995","RawContent":null,"Title":"Pri-1 builds all failing","State":"closed","Body":"It appears https://github.com/dotnet/coreclr/pull/22885 has broken all pri-1 builds, with errors like:\r\n\r\n```\r\nerror : Unexpected test count. Expected > 9000, found 3145.\r\n```\r\n\r\nIt appears pri-1 builds are only doing pri-0 test builds.\r\n\r\n(note, this error was introduced specifically to find problems like this)\r\n\r\ne.g.,\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/arm64_cross_checked_windows_nt/6682/\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/checked_windows_nt/11480/\r\n","Url":"https://github.com/dotnet/coreclr/issues/22995","RelatedDescription":"Closed issue \"Pri-1 builds all failing\" (#22995)"},{"Id":"417058920","IsPullRequest":true,"CreatedAt":"2019-03-05T00:37:01","Actor":"sandreenko","Number":"23014","RawContent":null,"Title":"Do not treat warnings as errors during corefx build in docker.","State":"open","Body":"Use the same workaround that CoreFX uses (https://github.com/dotnet/corefx/blob/63175f02bc3cfba4a807d565f5c60832e7785aa2/eng/pipelines/linux.yml#L40)\r\n\r\nThanks @echesakovMSFT for finding this workaround.\r\n\r\n\r\nAnother approach could be to update all docker files to include SETLOCAL packages would take too long.\r\nAlso it is not clear if it is really necessary to have during build.\r\n\r\nCloses #22823","Url":"https://github.com/dotnet/coreclr/pull/23014","RelatedDescription":"Open PR \"Do not treat warnings as errors during corefx build in docker.\" (#23014)"},{"Id":"417058825","IsPullRequest":true,"CreatedAt":"2019-03-05T00:36:35","Actor":"jkoritzinsky","Number":"23013","RawContent":null,"Title":"Split the phases of EEClassLayoutInfo::CollectLayoutFieldMetadataThrowing","State":"open","Body":"The `EEClassLayoutInfo::CollectLayoutFieldMetadataThrowing` function is a beast. After moving it to `class.cpp`, I decided to take a stab at separating out the different phases into different functions. As part of that process, I consolidated phases 3 and 4 (the field offset calculations for native and managed-sequential types) into one function since they use the same algorithm.","Url":"https://github.com/dotnet/coreclr/pull/23013","RelatedDescription":"Open PR \"Split the phases of EEClassLayoutInfo::CollectLayoutFieldMetadataThrowing\" (#23013)"},{"Id":"417052216","IsPullRequest":true,"CreatedAt":"2019-03-05T00:08:19","Actor":"cshung","Number":"23012","RawContent":null,"Title":"Fix issue 23009","State":"open","Body":"My attempt to fix #23009","Url":"https://github.com/dotnet/coreclr/pull/23012","RelatedDescription":"Open PR \"Fix issue 23009\" (#23012)"},{"Id":"417032863","IsPullRequest":false,"CreatedAt":"2019-03-04T23:01:40","Actor":"cshung","Number":"23009","RawContent":null,"Title":"Deadlock during initialization","State":"open","Body":"Here is the repro code:\r\n\r\n```csharp\r\n// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// See the LICENSE file in the project root for more information.\r\n\r\nusing System;\r\nusing System.Diagnostics.Tracing;\r\nusing System.IO;\r\nusing System.Reflection;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\nusing Tracing.Tests.Common;\r\n\r\nusing Microsoft.Diagnostics.Tracing;\r\nusing Microsoft.Diagnostics.Tracing.Parsers.Clr;\r\n\r\nnamespace Tracing.Tests\r\n{\r\n\r\n    [EventSource(Name = \"Simple-Event-Source\")]\r\n    public sealed class SimpleEventSource : EventSource\r\n    {\r\n        // define the singleton instance of the event source\r\n        public static SimpleEventSource Log = new SimpleEventSource();\r\n\r\n        private void OnEventCommand(object sender, EventCommandEventArgs command)\r\n        {\r\n        }\r\n\r\n        private SimpleEventSource()\r\n        {\r\n            this.EventCommandExecuted += this.OnEventCommand;\r\n        }\r\n\r\n        public void Request(string message)\r\n        {\r\n            WriteEvent(1, message);\r\n        }\r\n    }\r\n\r\n    public static class TraceControlTest\r\n    {\r\n        private static string ConfigFileContents = @\"\r\nOutputPath=.\r\nCircularMB=2048\r\nProviders=*:0xFFFFFFFFFFFFFFFF:5:TestFilterKey1=TestFilterValue1;TestFilterKey2=TestFilterValue2\r\n\";\r\n\r\n        private static readonly TimeSpan TimeIntervalToReadConfigFile = new TimeSpan(0, 0, 25);\r\n\r\n        private const int BytesInOneMB = 1024 * 1024;\r\n\r\n        /// <summary>\r\n        /// This test collects a trace of itself and then performs some basic validation on the trace.\r\n        /// </summary>\r\n        public static int Main(string[] args)\r\n        {\r\n            SimpleEventSource.Log.Request(\"Test \");\r\n\r\n            // Calculate the path to the config file.\r\n            string configFileName = Assembly.GetEntryAssembly().GetName().Name + \".eventpipeconfig\";\r\n            string configFilePath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, configFileName);\r\n            Console.WriteLine(\"Calculated config file path: \" + configFilePath);\r\n\r\n            // Write the config file to disk.\r\n            File.WriteAllText(configFilePath, ConfigFileContents);\r\n            Console.WriteLine(\"Wrote contents of config file.\");\r\n\r\n            // Wait few seconds to ensure that tracing has started.\r\n            Console.WriteLine($\"Waiting {TimeIntervalToReadConfigFile.TotalSeconds} seconds for the config file to be picked up by the next poll operation.\");\r\n            Thread.Sleep(TimeIntervalToReadConfigFile);\r\n\r\n            // Do some work that we can look for in the trace.\r\n            Console.WriteLine(\"Do some work that will be captured by the trace.\");\r\n            GC.Collect(2, GCCollectionMode.Forced);\r\n            Console.WriteLine(\"Done with the work.\");\r\n\r\n            // Delete the config file to start tracing.\r\n            File.Delete(configFilePath);\r\n            Console.WriteLine(\"Deleted the config file.\");\r\n\r\n            // Build the full path to the trace file.\r\n            string[] traceFiles = Directory.GetFiles(\".\", \"*.netperf\", SearchOption.TopDirectoryOnly);\r\n            Assert.Equal(\"traceFiles.Length == 1\", traceFiles.Length, 1);\r\n            string traceFilePath = traceFiles[0];\r\n\r\n            // Poll the file system and wait for the trace file to be written.\r\n            Console.WriteLine(\"Wait for the config file deletion to be picked up and for the trace file to be written.\");\r\n\r\n            // Wait for 1 second, which is the poll time when tracing is enabled.\r\n            Thread.Sleep(TimeSpan.FromSeconds(1));\r\n\r\n            SimpleEventSource.Log.Request(\"Test  again\");\r\n\r\n            // Poll for file size changes to the trace file itself.\r\n            // When the size of the trace file hasn't changed for few seconds, consider it fully written out.\r\n            Console.WriteLine($\"Waiting for the trace file to be written. Poll every second to watch for {TimeIntervalToReadConfigFile.TotalSeconds} seconds of no file size changes.\");\r\n            long lastSizeInBytes = 0;\r\n            DateTime timeOfLastChangeUTC = DateTime.UtcNow;\r\n            do\r\n            {\r\n                FileInfo traceFileInfo = new FileInfo(traceFilePath);\r\n                long currentSizeInBytes = traceFileInfo.Length;\r\n                Console.WriteLine(\"Trace file size: \" + ((double)currentSizeInBytes / BytesInOneMB));\r\n\r\n                if (currentSizeInBytes > lastSizeInBytes)\r\n                {\r\n                    lastSizeInBytes = currentSizeInBytes;\r\n                    timeOfLastChangeUTC = DateTime.UtcNow;\r\n                }\r\n\r\n                Thread.Sleep(TimeSpan.FromSeconds(1));\r\n\r\n            } while (DateTime.UtcNow.Subtract(timeOfLastChangeUTC) < TimeIntervalToReadConfigFile);\r\n\r\n            int retVal = 0;\r\n\r\n            // Use TraceEvent to consume the trace file and look for the work that we did.\r\n            Console.WriteLine(\"Using TraceEvent to parse the file to find the work that was done during trace capture.\");\r\n            using (var trace = TraceEventDispatcher.GetDispatcherFromFileName(traceFilePath))\r\n            {\r\n                string gcReasonInduced = GCReason.Induced.ToString();\r\n                string providerName = \"Microsoft-Windows-DotNETRuntime\";\r\n                string gcTriggeredEventName = \"GC/Triggered\";\r\n\r\n                trace.Clr.GCTriggered += delegate (GCTriggeredTraceData data)\r\n                {\r\n                    if (gcReasonInduced.Equals(data.Reason.ToString()))\r\n                    {\r\n                        Console.WriteLine(\"Detected an induced GC\");\r\n                        retVal = 100;\r\n                    }\r\n                };\r\n\r\n                trace.Process();\r\n            }\r\n\r\n            // Clean-up the resulting trace file.\r\n            // File.Delete(traceFilePath);\r\n\r\n            return retVal;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nHere are the relevant stacks:\r\n\r\nFrame 0x19 of this thread get the `EventPipe::GetLock()` and then frame 0x12 of this thread is waiting on `EventListener.EventListenersLock`\r\n```\r\n # ChildEBP RetAddr  \r\n00 02fba9ec 761a2a03 ntdll!NtWaitForMultipleObjects+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 825] \r\n...\r\n12 02fbb404 308bcf0b System_Private_CoreLib!System.Diagnostics.Tracing.EventSource.SendCommand(System.Diagnostics.Tracing.EventListener, System.Diagnostics.Tracing.EventProviderType, Int32, Int32, System.Diagnostics.Tracing.EventCommand, Boolean, System.Diagnostics.Tracing.EventLevel, System.Diagnostics.Tracing.EventKeywords, System.Collections.Generic.IDictionary`2<System.String,System.String>)+0x8a\r\n...\r\n19 02fbbb04 0fea022d CoreCLR!EventPipeConfiguration::RegisterProvider+0x208 [c:\\dev\\coreclr\\src\\vm\\eventpipeconfiguration.cpp @ 190] \r\n...\r\n\r\n```\r\nFrame 0x13 of this thread get the `EventListener.EventListenersLock` and then frame 0x12 of this thread is waiting on `EventPipe::GetLock()`\r\n```\r\n # ChildEBP RetAddr  \r\n00 07cfc7b8 77562014 ntdll!NtWaitForAlertByThreadId+0xc [minkernel\\ntdll\\wow6432\\objfre\\i386\\usrstubs.asm @ 3753] \r\n...\r\n0a 07cfc998 0fea2b3b CoreCLR!EventPipeProvider::AddEvent+0x11d [c:\\dev\\coreclr\\src\\vm\\eventpipeprovider.cpp @ 183] \r\n...\r\n13 07cfd0bc 308b0693 System_Private_CoreLib!System.Diagnostics.Tracing.EventSource.Initialize(System.Guid, System.String, System.String[])+0x461\r\n...\r\n```","Url":"https://github.com/dotnet/coreclr/issues/23009","RelatedDescription":"Open issue \"Deadlock during initialization\" (#23009)"},{"Id":"417020459","IsPullRequest":false,"CreatedAt":"2019-03-04T22:23:31","Actor":"CarolEidt","Number":"23008","RawContent":null,"Title":"CodeGen: Clarify the naming and usage of consumeReg methods","State":"open","Body":"The naming and usage of the various consumeReg methods is not clearly articulated anywhere. Their usage should probably be documented in codegen.h where they are declared.\r\nThis came up in the discussion of https://github.com/dotnet/coreclr/pull/22944","Url":"https://github.com/dotnet/coreclr/issues/23008","RelatedDescription":"Open issue \"CodeGen: Clarify the naming and usage of consumeReg methods\" (#23008)"},{"Id":"417009474","IsPullRequest":true,"CreatedAt":"2019-03-04T22:19:15","Actor":"jashook","Number":"23004","RawContent":null,"Title":"Fix rid choice setup stress","State":"closed","Body":"Fixes #22510","Url":"https://github.com/dotnet/coreclr/pull/23004","RelatedDescription":"Closed or merged PR \"Fix rid choice setup stress\" (#23004)"},{"Id":"417018703","IsPullRequest":false,"CreatedAt":"2019-03-04T22:18:31","Actor":"CarolEidt","Number":"23006","RawContent":null,"Title":"CodeGen: Clean up instruction emitting methods","State":"open","Body":"The conventions for organization and naming of the methods that emit instructions are unclear and inconsistent. I believe that the existing/intended conventions are:\r\n- the methods on `CodeGen` that start with `gen` are concerned with generating code for a class of `GenTree` operators, or shared functionality across operators that isn't specific to instruction encodings.\r\n- the methods on `CodeGen` that start with `inst` are concerned with emitting (usually) single instructions of a given form, generally specified by the suffix of the `inst` method:\r\n  - `RV` means \"register value\"\r\n  - `IV` means \"immediate value\"\r\n  - `TT` means a `GenTree` node that's a memory or register operand (though it may actually only be used for memory operands?)\r\n  - e.g. `inst_TT_RV` has two operands: One of which is a `GenTree` and the other of which is a register.\r\n- The methods on `emitter` that start with `emitIns` are responsible for emitting a single instruction with a given format, e.g. `emitIns_R_AR_I` emits an instruction with a register operand, an address operand and an immediate operand (though the address is expressed by passing the base register and offset, and doesn't support an index)\r\n  - In general, methods on `emitter` shouldn't take `GenTree` nodes, though many do: the handling of general addressing modes is done in `emitHandleMemOp`, and its relatives that take a `GenTreeIndir`, and the handling of binary instructions is done in `emitInsBinary` that takes `GenTree` nodes.","Url":"https://github.com/dotnet/coreclr/issues/23006","RelatedDescription":"Open issue \"CodeGen: Clean up instruction emitting methods\" (#23006)"},{"Id":"417017595","IsPullRequest":true,"CreatedAt":"2019-03-04T22:15:15","Actor":"sandreenko","Number":"23005","RawContent":null,"Title":"Reenable CoreFX tests that were fixed on arm64 windows.","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/23005","RelatedDescription":"Open PR \"Reenable CoreFX tests that were fixed on arm64 windows.\" (#23005)"},{"Id":"416990091","IsPullRequest":true,"CreatedAt":"2019-03-04T20:59:37","Actor":"TylerBrinkley","Number":"23003","RawContent":null,"Title":"DictionarySlim backport improvements: remove null buckets and entries checks","State":"open","Body":"Initialize `Dictionary`'s buckets and entries with non-null values to remove null checks.\r\n\r\nI'm having trouble running the tests locally which I believe have something to do with installing the VS 2019 RC so I'm going to rely on CI here instead. I also don't have any benchmarks though the changes should only introduce improvements.\r\n\r\nI'd suggest hiding white-space changes when reviewing.\r\n\r\nPart of https://github.com/dotnet/corefx/issues/33392.\r\nAlternative to #22599.","Url":"https://github.com/dotnet/coreclr/pull/23003","RelatedDescription":"Open PR \"DictionarySlim backport improvements: remove null buckets and entries checks\" (#23003)"},{"Id":"416974071","IsPullRequest":true,"CreatedAt":"2019-03-04T20:15:19","Actor":"dotnet-maestro[bot]","Number":"23002","RawContent":null,"Title":"[master] Update dependencies from  1 repositories","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://dnceng@dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n\r\n- optimization.IBC.CoreCLR - 99.99.99-master-20190304.2\r\n- optimization.PGO.CoreCLR - 99.99.99-master-20190304.2\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/23002","RelatedDescription":"Open PR \"[master] Update dependencies from  1 repositories\" (#23002)"},{"Id":"416950587","IsPullRequest":false,"CreatedAt":"2019-03-04T19:12:05","Actor":"echesakovMSFT","Number":"23001","RawContent":null,"Title":"Add checks for correct number of ProjectsToBuild for each TestGroup","State":"open","Body":"As suggested by @BruceForstall it would be nice to have checks similar to what added in #19290 but for each TestGroup from https://github.com/dotnet/coreclr/pull/22885","Url":"https://github.com/dotnet/coreclr/issues/23001","RelatedDescription":"Open issue \"Add checks for correct number of ProjectsToBuild for each TestGroup\" (#23001)"},{"Id":"416948219","IsPullRequest":false,"CreatedAt":"2019-03-04T19:05:35","Actor":"echesakovMSFT","Number":"23000","RawContent":null,"Title":"Remove build-test.cmd and runtest.cmd related logic from build.cmd","State":"open","Body":"We should make build.cmd building only Product related projects but not tests\r\n\r\nThis should be done in the following steps:\r\n- [ ] Print *\"DEPRECATED\"* warning when skiptests or -priority=1 are passed to build.cmd\r\n- [ ] Make sure that our infrastructure doesn't expect build.cmd building tests\r\n- [ ] Remove the build-test.cmd and runtest.cmd logic from build.cmd\r\n","Url":"https://github.com/dotnet/coreclr/issues/23000","RelatedDescription":"Open issue \"Remove build-test.cmd and runtest.cmd related logic from build.cmd\" (#23000)"},{"Id":"416944741","IsPullRequest":true,"CreatedAt":"2019-03-04T18:55:59","Actor":"layomia","Number":"22999","RawContent":null,"Title":"Add UTF8 DateTime(Offset) parser for new date and time format \"J\"","State":"open","Body":"This addresses parts of #34690. The  parser will be utilized by `Utf8JsonReader` to parse strings as `DateTime`.\r\n\r\nThe standard date and time format strings do not include a token \"J\". This token is now reserved to represent date and time strings that follow one of these variants of the ISO 8601 standard:\r\n\r\nComplete date:\r\n    YYYY-MM-DD (eg 1997-07-16)\r\nComplete date plus hours and minutes:\r\n    YYYY-MM-DDThh:mm (eg 1997-07-16T19:20)\r\nComplete date plus hours, minutes and seconds:\r\n    YYYY-MM-DDThh:mm:ss (eg 1997-07-16T19:20:30)\r\nComplete date plus hours, minutes, seconds and a decimal fraction of a second\r\n    YYYY-MM-DDThh:mm:ss.s (eg 1997-07-16T19:20:30.45)\r\nComplete date plus hours, minutes, and time zone designator:\r\n    YYYY-MM-DDThh:mmTZD (eg 1997-07-16T19:20+01:00)\r\nComplete date plus hours, minutes, seconds, and time zone designator:\r\n    YYYY-MM-DDThh:mm:ssTZD (eg 1997-07-16T19:20:30+01:00)\r\nComplete date plus hours, minutes, seconds, a decimal fraction of a second, and a time zone designator:\r\n    YYYY-MM-DDThh:mm:ss.sTZD (eg 1997-07-16T19:20:30.45+01:00)\r\n\r\nwhere:\r\n    YYYY = four-digit year\r\n     MM   = two-digit month (01=January, etc.)\r\n     DD   = two-digit day of month (01 through 31)\r\n     hh   = two digits of hour (00 through 23) (am/pm NOT allowed)\r\n     mm   = two digits of minute (00 through 59)\r\n     ss   = two digits of second (00 through 59)\r\n     s    = one or more digits representing a decimal fraction of a second\r\n     TZD  = time zone designator (Z or +hh:mm or -hh:mm)\r\n\r\nIf specified, the decimal fraction of a second must contain >= 1 digit, but the parser will truncate digits after the 7th decimal place.\r\n\r\nThe parser validates input strings according to these formats and returns the corresponding `DateTime` values.","Url":"https://github.com/dotnet/coreclr/pull/22999","RelatedDescription":"Open PR \"Add UTF8 DateTime(Offset) parser for new date and time format \"J\"\" (#22999)"},{"Id":"416944551","IsPullRequest":false,"CreatedAt":"2019-03-04T18:55:31","Actor":"kouvel","Number":"22998","RawContent":null,"Title":"Regression on CoreFx benchmarks performance since tier jitting was enabled by default.","State":"open","Body":"@jorive commented on [Fri Aug 31 2018](https://github.com/dotnet/corefx/issues/32062)\n\nWhen tiered jitting was enabled by default on CoreClr, nothing was done to disable it for the performance runs on CoreFx. Was it intended? What do we want to do here?\r\n\n\n---\n\n@danmosemsft commented on [Fri Aug 31 2018](https://github.com/dotnet/corefx/issues/32062#issuecomment-417813509)\n\n@kouvel my assumption is that for the microbenchmarks we use for corefx, we do not want tiered jitting involved (since it introduces uncertainty and also we are more interested in steady state perf) and ideally could switch it off entirely.\n\n---\n\n@noahfalk commented on [Fri Aug 31 2018](https://github.com/dotnet/corefx/issues/32062#issuecomment-417823349)\n\n@kouvel is on vacation for a week\r\n\r\nI'd be hesitant to disable tiered compilation as a long term measure. It has significant implications for steady state performance in some cases and that is the behavior customers are going to see. \r\n\r\nIf tests have regressed I suspect we'll want to figure out where that regression has come from and whether we think its a real issue that impacts customers (in which case we should improve tiered compilation) or its an implementation detail of how the test was written that does not match real customer usage (in which case maybe we change test)\r\n\r\nThe most likely issues the benchmarks would hit are:\r\n1) Tiered compilation doesn't handle hot loops in cold methods very well. Benchmarks tend to follow this pattern far more than real-world use-cases. We have a mitigation planned for 2.2\r\n2) Benchmarks that are attempting to measure steady-state perf, but don't warm up long enough to actually reach steady-state now that tiered compilation is present. \r\n\r\n\r\n@jorive - can you send me + @kouvel more info on the regressed tests so we can take a look?\n\n---\n\n@kouvel commented on [Sat Sep 01 2018](https://github.com/dotnet/corefx/issues/32062#issuecomment-417867843)\n\nMy expectation was that most cases of cold methods with hot loops in the benchmarks would disappear after the switch to use BenchmarkDotNet. It looks like some new benchmarks based on BDN are in dotnet/performance repo (https://github.com/dotnet/performance/tree/master/src/benchmarks/corefx). Are the performance tests in the corefx repo going to be deleted eventually? Is there a regression in the BDN-based benchmarks?\r\n\r\nI also wasn't sure if the benchmarks run against R2R'ed binaries. I believe we ship CoreFX libraries as R2R'ed, so the benchmarks should probably also run similarly. In that case tiering should help with steady-state perf. I'll take a closer look when I'm back.\n\n---\n\n@danmosemsft commented on [Sat Sep 01 2018](https://github.com/dotnet/corefx/issues/32062#issuecomment-417902464)\n\n@adamsitnik \n\n---\n\n@adamsitnik commented on [Tue Sep 04 2018](https://github.com/dotnet/corefx/issues/32062#issuecomment-418399723)\n\n>  It looks like some new benchmarks based on BDN are in dotnet/performance repo\r\n\r\nI have recently ported and partially rewrote all 3000+ CoreCLR and CoreFX benchmarks to BenchmarkDotNet. They are all available in the performance repo. We plan to open it as soon as we are ready (1-3 weeks). The old benchmarks are going to be removed, we are going to stop using xunit-performance. Moreover, every new benchmark will be going through detailed performance-oriented code review.\r\n\r\n> My expectation was that most cases of cold methods with hot loops in the benchmarks would disappear after the switch to use BenchmarkDotNet.\r\n\r\nYes, it will. How?\r\n\r\n1. BDN performs Pilot Experiment to decide how many times given benchmark should be executed per iteration (it's calculating the xunit `InnerIterationCount`). By default, the Iteration takes 500ms, in performance repo we are limited with the time to run for CI and it's configured to 250 ms. For short running benchmarks, it typically needs 5 iterations to calculate the `InnerIterationCount`. So we execute the benchmark for 1250ms. Tiered JIT heuristic requires the benchmark to be executed more than 30 times for longer than 100ms. So the code gets tiered in the Pilot stage.\r\n2. BDN does an extra Warmup. By default, it warms up the code until our heuristic is happy, but in the performance repo, we have configured it to run only 1 warmup iteration (we know all the benchmarks, only a few of them need more than 1 warmup iteration and these benchmarks are configured to run more warmups)\r\n3. BDN removes the outliers by default, so even if Pilot stage and  Warmup does not hit the tiered condition, but during the actual runs we hit it, BDN is going to remove the worst results (those where the benchmarked code was in tier 0).\r\n\r\n**The problem are time-consuming benchmarks which take more than 250ms to execute.** Why? Because the pilot stage determines that we should run them once after first run. Warmup runs them once to not waste too much time.  So the condition of tiered JIT to run the method more than 30 times is not met.\r\n\r\nGood news: after the port CoreFX has no such benchmarks. \r\nBad news: CoreCLR repo has, an example are BenchmarkGame benchmarks.\r\n\r\nWhat I think that we should do: have two CI jobs for benchmarks: with tiered compilation enabled and disabled. Compare the results, eliminate the regressions and remove the CI jobs for tiered compilation disabled or run them less frequently.\r\n\n\n---\n\n@kouvel commented on [Thu Sep 20 2018](https://github.com/dotnet/corefx/issues/32062#issuecomment-423125247)\n\nThat all sounds awesome, thanks for the details. We're planning on adding `MethodImplOptions.AggressiveOptimization` (https://github.com/dotnet/corefx/issues/32235) to work around the cold method with hot loops issue. For benchmarks that take long per iteration they could be attributed with a `MethodImplAttribute` to have them start at tier 1. It could also be added to all benchmarks but the attribute could be used for other optimizations in the JIT, and that may skew the results from perf in unattributed cases. I also like the idea of having a periodic perf run without tiering to find gaps in new benchmarks or gaps that result from new bugs.\n\n---\n\n@karelz commented on [Sun Jan 20 2019](https://github.com/dotnet/corefx/issues/32062#issuecomment-455932040)\n\n@kouvel @noahfalk what is status of this bug? It is not in any area (i.e. nobody pays attention to it) - can you please set the right area for it?\r\nIf you're not working on it actively, please unassign yourself ... thanks!\n\n---\n\n@kouvel commented on [Mon Jan 21 2019](https://github.com/dotnet/corefx/issues/32062#issuecomment-456158232)\n\nI have been looking at perf gaps with tiering from tests in the performance repo, they are mostly break-even or improvements, some cases of cold methods with hot loops (https://github.com/dotnet/coreclr/issues/19751), one or two regressions that appear to be real and the cause needs to be confirmed, and the rest are noise or unrelated. I'm thinking about what the appropriate mode would be while trying not to disable tiering completely so that we can get somewhat representative numbers. It would probably be something like skipping tier 0 JIT for methods that don't have prejitted code, to work around the main regressions.\n\n---\n\n@bartonjs commented on [Wed Feb 27 2019](https://github.com/dotnet/corefx/issues/32062#issuecomment-467988586)\n\n@kouvel Does this issue belong in corefx? Or is it better tracked in the performance repository?\n\n---\n\n@kouvel commented on [Mon Mar 04 2019](https://github.com/dotnet/corefx/issues/32062#issuecomment-469376681)\n\nCoreCLR repo would be appropriate, moving\n\n","Url":"https://github.com/dotnet/coreclr/issues/22998","RelatedDescription":"Open issue \"Regression on CoreFx benchmarks performance since tier jitting was enabled by default.\" (#22998)"},{"Id":"416941326","IsPullRequest":true,"CreatedAt":"2019-03-04T18:47:25","Actor":"kouvel","Number":"22997","RawContent":null,"Title":"Temporarily disable some WaitAny tests that have been failing periodically in the CI","State":"open","Body":"There have been failures on various archs and platforms. Issues:\r\n- https://github.com/dotnet/coreclr/issues/19515\r\n- https://github.com/dotnet/coreclr/issues/19406\r\n- https://github.com/dotnet/coreclr/issues/14249","Url":"https://github.com/dotnet/coreclr/pull/22997","RelatedDescription":"Open PR \"Temporarily disable some WaitAny tests that have been failing periodically in the CI\" (#22997)"},{"Id":"416925751","IsPullRequest":false,"CreatedAt":"2019-03-04T18:06:38","Actor":"AwsomeCode","Number":"22996","RawContent":null,"Title":"[UWP] Unhandled Exception ShardLibary.dll / A fail fast exception occurred.","State":"open","Body":"I am unable to find the cause of this error\r\n\r\nApp is working with Microsoft.NETCore.UniversalWindowsPlatform -Version 6.2.0-preview1-26926-04 \r\nBut Not working with Microsoft.NETCore.UniversalWindowsPlatform -Version 6.1.9 \r\nNative Toolchain is enable in debug mode.\r\n\r\nBecause of pre Version 6.2.0-preview1 I am not able to update the app on store.\r\n\r\nError\r\n![image](https://user-images.githubusercontent.com/11809653/53752911-f15ef880-3ed5-11e9-9c50-262480a92656.png)\r\n\r\n![image](https://user-images.githubusercontent.com/11809653/53752952-09cf1300-3ed6-11e9-9074-a38c681e9ccc.png)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/22996","RelatedDescription":"Open issue \"[UWP] Unhandled Exception ShardLibary.dll / A fail fast exception occurred.\" (#22996)"},{"Id":"417049958","IsPullRequest":false,"CreatedAt":"2018-10-10T18:37:11","Actor":"Cryowatt","Number":"23011","RawContent":null,"Title":"MemoryFailPoint doesn't work in a docker container","State":"open","Body":"I've run into an issue where `MemoryFailPoint` is unable to track memory usage correctly in a docker container. I've created a repo containing a reproduction of the issue [here](https://github.com/Cryowatt/MemoryHole).\r\n\r\nThe expected behavior is the `MemoryFailPoint` should be able to throw a catchable `InsufficientMemoryException` before the application is OOMKilled by docker. However, the actual behavior is the MemoryFailPoint never throws and the app is killed.\r\n\r\nI've been poking around the coreclr and corefx and it seems this issue is tied to some unimplemented sections around memory in Linux. However, I had a similar issue running this code in a Windows container.","Url":"https://github.com/dotnet/coreclr/issues/23011","RelatedDescription":"Open issue \"MemoryFailPoint doesn't work in a docker container\" (#23011)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"417062006","IsPullRequest":true,"CreatedAt":"2019-03-05T04:32:06","Actor":"livarcocc","Number":"10920","RawContent":null,"Title":"Sdk 2.2.200-preview-63905-01","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/10920","RelatedDescription":"Closed or merged PR \"Sdk 2.2.200-preview-63905-01\" (#10920)"},{"Id":"417093428","IsPullRequest":true,"CreatedAt":"2019-03-05T04:29:18","Actor":"peterhuene","Number":"10922","RawContent":null,"Title":"Prevent stage0 bundled versions from interfering with the build.","State":"closed","Body":"A change to enable the parameterization of the latest known patch numbers for\r\nMicrosoft.NETCore.App reused the same property names as those in the generated\r\nbundled versions props file.\r\n\r\nWhen building locally, the stage0 dotnet install was setting the properties\r\nfirst, resulting in older versions as the fallbacks then what is currently\r\nbeing used in the repo.\r\n\r\nHowever, when building from an orchestrated build where the properties were\r\nbeing set globally, those properties get respected and the values are\r\nthe expected ones.\r\n\r\nThis commit fixes this by renaming the properties to those that aren't used in\r\nthe bundled versions props file.  The names chosen match those we're using for\r\nthe 2.2 builds for consistency.\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10922","RelatedDescription":"Closed or merged PR \"Prevent stage0 bundled versions from interfering with the build.\" (#10922)"},{"Id":"417065987","IsPullRequest":true,"CreatedAt":"2019-03-05T01:07:23","Actor":"peterhuene","Number":"10921","RawContent":null,"Title":"Fix flaky SIGINT/SIGTERM tests.","State":"open","Body":"This commit fixes the race condition that caused failures of the SIGINT/SIGTERM\r\nhandling tests on non-Windows platforms.\r\n\r\nThe tests are designed to spawn `dotnet run`, which will itself spawn a child\r\nprocess.  The tests look for output from the child process; when the child\r\noutputs the needed data, the tests' process will start signaling the dotnet\r\nprocess.\r\n\r\nThe race lies between the call to start the process and the attempt to register\r\nthe signal handlers in dotnet. If the child process outputs the needed data and\r\nthe test process signals the dotnet process *before* the dotnet process has had\r\na chance to register the signal handlers, then the default signal handlers will\r\nbe invoked.  For SIGINT, this results in dotnet exiting with 130 and not\r\nwaiting for the child process to terminate.  For SIGTERM, it won't forward the\r\nsignal to the child process or exit with the same exit code that the child\r\nexited with.\r\n\r\nThe fix is to register the handlers prior to the process starting.  On Windows,\r\nwe still need to perform an action after the process has started (namely that\r\nthe child process is added to the job object) because it needs the handle to\r\nthe child process.\r\n","Url":"https://github.com/dotnet/cli/pull/10921","RelatedDescription":"Open PR \"Fix flaky SIGINT/SIGTERM tests.\" (#10921)"},{"Id":"415879204","IsPullRequest":true,"CreatedAt":"2019-03-05T00:49:39","Actor":"dotnet-bot","Number":"10899","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10899","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#10899)"},{"Id":"416322198","IsPullRequest":true,"CreatedAt":"2019-03-05T00:15:28","Actor":"peterhuene","Number":"10910","RawContent":null,"Title":"Merge for upcoming march release","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/10910","RelatedDescription":"Closed or merged PR \"Merge for upcoming march release\" (#10910)"},{"Id":"417050381","IsPullRequest":true,"CreatedAt":"2019-03-05T00:01:16","Actor":"dotnet-bot","Number":"10919","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10919","RelatedDescription":"Open PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#10919)"},{"Id":"415879221","IsPullRequest":true,"CreatedAt":"2019-03-04T22:59:28","Actor":"dotnet-bot","Number":"10901","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10901","RelatedDescription":"Closed or merged PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#10901)"},{"Id":"417012503","IsPullRequest":true,"CreatedAt":"2019-03-04T22:59:11","Actor":"peterhuene","Number":"10918","RawContent":null,"Title":"Update branding to 2.2.201.","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/10918","RelatedDescription":"Closed or merged PR \"Update branding to 2.2.201.\" (#10918)"},{"Id":"417012199","IsPullRequest":true,"CreatedAt":"2019-03-04T22:59:00","Actor":"peterhuene","Number":"10917","RawContent":null,"Title":"Update branding to 2.1.601.","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/10917","RelatedDescription":"Closed or merged PR \"Update branding to 2.1.601.\" (#10917)"},{"Id":"416947749","IsPullRequest":true,"CreatedAt":"2019-03-04T22:00:44","Actor":"nugetlurker","Number":"10916","RawContent":null,"Title":"Insert NuGet Build 5.0.0-rtm.5867 into cli","State":"closed","Body":"Insert NuGet Build 5.0.0-rtm.5867 into cli release/2.1.6xx branch","Url":"https://github.com/dotnet/cli/pull/10916","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-rtm.5867 into cli\" (#10916)"},{"Id":"416947722","IsPullRequest":true,"CreatedAt":"2019-03-04T22:00:18","Actor":"nugetlurker","Number":"10915","RawContent":null,"Title":"Insert NuGet Build 5.0.0-rtm.5867 into cli","State":"closed","Body":"Insert NuGet Build 5.0.0-rtm.5867 into cli release/2.2.2xx branch","Url":"https://github.com/dotnet/cli/pull/10915","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-rtm.5867 into cli\" (#10915)"},{"Id":"416934577","IsPullRequest":true,"CreatedAt":"2019-03-04T18:30:41","Actor":"ahmad-luqman","Number":"10914","RawContent":null,"Title":"Change message when the executable cannot be found to File not found {0} for issue #10911","State":"open","Body":"- Issue #10911 \r\n- Change message when the executable cannot be found from \"No executable found matching command\" to \"File not found {0}\"\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10914","RelatedDescription":"Open PR \"Change message when the executable cannot be found to File not found {0} for issue #10911\" (#10914)"},{"Id":"416414303","IsPullRequest":true,"CreatedAt":"2019-03-04T16:21:15","Actor":"NextTurn","Number":"10913","RawContent":null,"Title":"Clean up","State":"closed","Body":"Related to dotnet/core-setup#5156.\r\n\r\nPlease also check if other pages are still valid.\r\n\r\nskip ci please","Url":"https://github.com/dotnet/cli/pull/10913","RelatedDescription":"Closed or merged PR \"Clean up\" (#10913)"},{"Id":"416395051","IsPullRequest":true,"CreatedAt":"2019-03-03T13:00:49","Actor":"dotnet-maestro[bot]","Number":"10912","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19151.5\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10912","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#10912)"},{"Id":"416364671","IsPullRequest":false,"CreatedAt":"2019-03-02T06:20:05","Actor":"Doan-Van-Tuan","Number":"10911","RawContent":null,"Title":"Incredibly misleading message when the executable cannot be found: \"No executable found matching command\"","State":"open","Body":"## Steps to reproduce\r\nRunning this command:\r\ndotnet not-existing.dll\r\n\r\n## Expected  behavior\r\nThe message should say clearly not-existing.dll cannot be found.\r\n\r\n## Actual behavior\r\nThe actual message is \"No executable found matching command \"dotnet-not-existing.dll\"\", which is misleading. When I encountered it the first time, I thought it was an environment issue, or a bug caused the system searching for dotnet-not-existing.dll.\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10911","RelatedDescription":"Open issue \"Incredibly misleading message when the executable cannot be found: \"No executable found matching command\"\" (#10911)"},{"Id":"415879211","IsPullRequest":true,"CreatedAt":"2019-03-02T00:05:18","Actor":"dotnet-bot","Number":"10900","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10900","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#10900)"},{"Id":"415879190","IsPullRequest":true,"CreatedAt":"2019-03-02T00:02:38","Actor":"dotnet-bot","Number":"10898","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.1.6xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.1.6xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.1.6xx\ngit reset --hard upstream/release/2.1.6xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.5xx-to-release/2.1.6xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10898","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.1.6xx\" (#10898)"},{"Id":"416305342","IsPullRequest":true,"CreatedAt":"2019-03-01T22:30:35","Actor":"mistachkin","Number":"10909","RawContent":null,"Title":"Make sure that an empty argument is preserved.  Fix for #8892.","State":"open","Body":"\r\nThese changes fix issue #8892.  The net effect is that when an empty argument is detected, a pair of double quotes will be emitted.\r\n","Url":"https://github.com/dotnet/cli/pull/10909","RelatedDescription":"Open PR \"Make sure that an empty argument is preserved.  Fix for #8892.\" (#10909)"},{"Id":"416191380","IsPullRequest":false,"CreatedAt":"2019-03-01T16:54:57","Actor":"peterhuene","Number":"10908","RawContent":null,"Title":"Remove old patch versions from bundledversions.props","State":"open","Body":"## Steps to reproduce\r\n\r\n1. Install a 2.2 SDK.\r\n2. Open `Microsoft.NETCoreSdk.BundledVersions.props` for the installed SDK.\r\n\r\n## Expected  behavior\r\n\r\nThe `LatestPatchVersionForNetCoreX_X` properties to not be present since they are no longer used by the SDK.\r\n\r\n## Actual behavior\r\n\r\nThe values are still present (and stale).\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10908","RelatedDescription":"Open issue \"Remove old patch versions from bundledversions.props\" (#10908)"},{"Id":"416095774","IsPullRequest":false,"CreatedAt":"2019-03-01T16:12:38","Actor":"ColinM9991","Number":"10905","RawContent":null,"Title":"dotnet restore failing with TaskCanceledException","State":"closed","Body":"## Steps to reproduce\r\n\r\nN/A\r\nThis issue is intermittent, however when it happens it then lingers for some time.\r\n\r\n## Description\r\n\r\nWe are using the dotnet CLI to restore packages for an ASP.NET Core application targeting .NET Core in our TeamCity build process, and are intermittently having failed builds where the restore task fails as soon as it picks up the first project file\r\n\r\n```\r\n[12:43:57]\tStep 1/13: Restore Packages (.NET CLI (dotnet)) (30s)\r\n[12:43:58]\t[Step 1/13] dotnet.exe restore Project.sln --disable-parallel\r\n[12:43:58]\t[Step 1/13] restore (29s)\r\n[12:43:58]\t[restore] Starting: \"C:\\Program Files\\dotnet\\dotnet.exe\" restore Project.sln --disable-parallel\r\n[12:43:58]\t[restore] in directory: C:\\buildAgent\\work\\g0124fa0e71e5f68\r\n[12:44:16]\t[restore]   Restoring packages for C:\\buildAgent\\work\\g0124fa0e71e5f68\\ProjectA\\Common\\ProjectB.csproj...\r\n[12:44:28]\t[restore] C:\\Program Files\\dotnet\\sdk\\2.2.102\\NuGet.targets(114,5): error : A task was canceled.\r\n[12:44:28]\t[restore] \r\n[12:44:28]\t[restore] Build FAILED.\r\n[12:44:28]\t[restore] \r\n[12:44:28]\t[restore]     0 Warning(s)\r\n[12:44:28]\t[restore]     1 Error(s)\r\n[12:44:28]\t[restore] \r\n[12:44:28]\t[restore] Time Elapsed 00:00:24.84\r\n[12:44:28]\t[restore] \r\n[12:44:28]\t[restore] \r\n[12:44:28]\t[restore] C:\\Program Files\\dotnet\\sdk\\2.2.102\\NuGet.targets(114,5): error : A task was canceled.\r\n[12:44:28]\t[restore] Process exited with code 1\r\n[12:44:28]\t[Step 1/13] Process exited with code 1\r\n[12:44:28]\t[Step 1/13] Step Restore Packages (.NET CLI (dotnet)) failed\r\n```\r\n\r\n## Expected  behavior\r\n\r\nIn the scenario where there is an actual error with the codebase then the dotnet CLI should return a meaningful error message as to what the problem is\r\n\r\nIn the scenario where nothing is wrong and the dotnet CLI fails for no reason, the expected behavior would be for the restore task to complete successfully as it does in other builds of the same codebase at previous times.\r\n\r\n## Actual behavior\r\n\r\n`dotnet restore` fails with `TaskCanceledException` and no indication as to what the issue is.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n[13:07:51]\t[Step 2/2] .NET Core SDK (reflecting any global.json):\r\n[13:07:51]\t[Step 2/2]  Version:   2.2.102\r\n[13:07:51]\t[Step 2/2]  Commit:    96ff75a873\r\n[13:07:51]\t[Step 2/2] \r\n[13:07:51]\t[Step 2/2] Runtime Environment:\r\n[13:07:51]\t[Step 2/2]  OS Name:     Windows\r\n[13:07:51]\t[Step 2/2]  OS Version:  10.0.17763\r\n[13:07:51]\t[Step 2/2]  OS Platform: Windows\r\n[13:07:51]\t[Step 2/2]  RID:         win10-x64\r\n[13:07:51]\t[Step 2/2]  Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.102\\\r\n[13:07:51]\t[Step 2/2] \r\n[13:07:51]\t[Step 2/2] Host (useful for support):\r\n[13:07:51]\t[Step 2/2]   Version: 2.2.1\r\n[13:07:51]\t[Step 2/2]   Commit:  878dd11e62\r\n[13:07:51]\t[Step 2/2] \r\n[13:07:51]\t[Step 2/2] .NET Core SDKs installed:\r\n[13:07:51]\t[Step 2/2]   1.1.12 [C:\\Program Files\\dotnet\\sdk]\r\n[13:07:51]\t[Step 2/2]   2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n[13:07:51]\t[Step 2/2]   2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n[13:07:51]\t[Step 2/2]   2.2.102 [C:\\Program Files\\dotnet\\sdk]\r\n[13:07:51]\t[Step 2/2] \r\n[13:07:51]\t[Step 2/2] .NET Core runtimes installed:\r\n[13:07:51]\t[Step 2/2]   Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n[13:07:51]\t[Step 2/2]   Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n[13:07:51]\t[Step 2/2]   Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n[13:07:51]\t[Step 2/2]   Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n[13:07:51]\t[Step 2/2]   Microsoft.NETCore.App 1.0.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[13:07:51]\t[Step 2/2]   Microsoft.NETCore.App 1.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[13:07:51]\t[Step 2/2]   Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[13:07:51]\t[Step 2/2]   Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n[13:07:51]\t[Step 2/2]   Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n```\r\n\r\nNuGet.CommandLine version: 4.9.3","Url":"https://github.com/dotnet/cli/issues/10905","RelatedDescription":"Closed issue \"dotnet restore failing with TaskCanceledException\" (#10905)"},{"Id":"416159140","IsPullRequest":true,"CreatedAt":"2019-03-01T15:40:43","Actor":"dotnet-maestro-bot","Number":"10907","RawContent":null,"Title":"Update aspnet, aspnet, coresetup, sdk to rtm-35537, rtm-35537, 2.1.0, 2.2.101, respectively (release/2.2.1xx)","State":"open","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/10907","RelatedDescription":"Open PR \"Update aspnet, aspnet, coresetup, sdk to rtm-35537, rtm-35537, 2.1.0, 2.2.101, respectively (release/2.2.1xx)\" (#10907)"},{"Id":"416108799","IsPullRequest":true,"CreatedAt":"2019-03-01T14:14:13","Actor":"dotnet-maestro[bot]","Number":"10906","RawContent":null,"Title":"[master] Update dependencies from dotnet/clicommandlineparser","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/clicommandlineparser\r\n\r\n- Microsoft.DotNet.Cli.CommandLine - 1.0.0-preview.19127.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10906","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/clicommandlineparser\" (#10906)"},{"Id":"415612647","IsPullRequest":true,"CreatedAt":"2019-03-01T13:31:58","Actor":"dotnet-maestro[bot]","Number":"10895","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19127.8\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19128.3\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10895","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#10895)"},{"Id":"416051511","IsPullRequest":false,"CreatedAt":"2019-03-01T11:02:58","Actor":"Potapy4","Number":"10904","RawContent":null,"Title":"Update licence headers","State":"open","Body":"Should we replace the license headers?\r\n\r\nFrom:\r\n```\r\n// Copyright (c) .NET Foundation and contributors. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for full license information.\r\n```\r\n\r\nTo:\r\n```\r\n// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n// See the LICENSE file in the project root for more information.\r\n```\r\n\r\nA similar issue here: dotnet/core-setup#5224","Url":"https://github.com/dotnet/cli/issues/10904","RelatedDescription":"Open issue \"Update licence headers\" (#10904)"},{"Id":"415997742","IsPullRequest":true,"CreatedAt":"2019-03-01T08:43:38","Actor":"Jalalx","Number":"10903","RawContent":null,"Title":"fix UnauthorizedAccessException when opening readonly sln file for read","State":"open","Body":"This fixes #10166 ","Url":"https://github.com/dotnet/cli/pull/10903","RelatedDescription":"Open PR \"fix UnauthorizedAccessException when opening readonly sln file for read\" (#10903)"},{"Id":"415881214","IsPullRequest":true,"CreatedAt":"2019-03-01T00:09:12","Actor":"dotnet-maestro-bot","Number":"10902","RawContent":null,"Title":"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)","State":"open","Body":"/cc @dotnet/dotnet-cli","Url":"https://github.com/dotnet/cli/pull/10902","RelatedDescription":"Open PR \"Update aspnet, coresetup to servicing-31150, preview1-26216-03, respectively (release/2.1.5xx)\" (#10902)"},{"Id":"415748202","IsPullRequest":false,"CreatedAt":"2019-02-28T18:03:18","Actor":"kpstolk","Number":"10897","RawContent":null,"Title":"dotnet restore does not use NuGetDefaults.Config on Linux","State":"closed","Body":"According to the [NuGet documentation](https://docs.microsoft.com/en-us/nuget/consume-packages/configuring-nuget-behavior#nuget-defaults-file) it is possible to store a `NuGetDefaults.Config` file in `~/.local/share` or `/usr/local/share` to configure global settings.\r\n\r\nWe currently use a Windows machine and using this file (on `%ProgramFiles(x86)%\\NuGet\\Config` of course) works just fine with `dotnet restore`.\r\n\r\nHowever now I'm setting up an Ubuntu 18.04 build server and have installed [dotnet](https://dotnet.microsoft.com/download/linux-package-manager/ubuntu18-04/sdk-current) but the `NuGetDefaults.Config` doesn't seem to be used as I get an error from `dotnet restore`.\r\n\r\nI also tried to install NuGet directly using `sudo apt-get install nuget` but this doesn't work either with `nuget restore`, I get the same error. It does work however when I store the file in  `~/.config/NuGet/NuGet.Config` (so not at Computer but [User level](https://docs.microsoft.com/en-us/nuget/consume-packages/configuring-nuget-behavior#config-file-locations-and-uses)).\r\nEven configured at user level `dotnet restore` still fails.\r\n\r\nSo how else can I configure my custom [package source](https://docs.microsoft.com/en-us/nuget/reference/nuget-config-file#packagesources)?\r\n\r\n## Steps to reproduce\r\n1. Install .NET Core SDK on Linux Ubuntu 18.04 x64\r\n1. Create a `NuGetDefaults.Config` in both `~/.local/share` or `/usr/local/share` with content as shown below\r\n1. Clone Git repo containing .NET Core project and `cd` to it\r\n1. Run `dotnet restore`\r\n1. Error NU1101 is shown\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<configuration>\r\n    <packageSources>\r\n        <add key=\"MySource\" value=\"http://my/custom/source/\" />\r\n    </packageSources>\r\n</configuration>\r\n```\r\n\r\n## Expected  behavior\r\n`dotnet restore` to restore packages from my custom package source defined in `NuGetDefaults.Config`.\r\n\r\n## Actual behavior\r\nError from `dotnet restore`:\r\n\r\n```\r\n/home/user/devops/_work/1/s/src/path/to/my.csproj : error NU1101: Unable to find package My.Custom.Package. No packages exist with this id in source(s): nuget.org\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.104\r\n Commit:    73f036d4ac\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.104/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.2\r\n  Commit:  a4fd7b2c84\r\n\r\n.NET Core SDKs installed:\r\n  2.2.104 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.2 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.2 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.2 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n```","Url":"https://github.com/dotnet/cli/issues/10897","RelatedDescription":"Closed issue \"dotnet restore does not use NuGetDefaults.Config on Linux\" (#10897)"},{"Id":"415612842","IsPullRequest":true,"CreatedAt":"2019-02-28T13:02:07","Actor":"dotnet-maestro[bot]","Number":"10896","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview4.19127.1\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview4.19128.1\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview4.19151.1\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview4.19152.1\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview4.19153.1\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview4.19153.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10896","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/sdk\" (#10896)"},{"Id":"415385914","IsPullRequest":true,"CreatedAt":"2019-02-28T00:10:44","Actor":"wli3","Number":"10894","RawContent":null,"Title":"Nicer message for `dotnet tool install` failure","State":"open","Body":"Fix https://github.com/dotnet/cli/issues/10863\r\n\r\n-v vs -d\r\nFirst -v is not correct. To have verbose output we need `-v detailed`. Only commands piped to MBuild (including nuget) honor this flag. And existing global tools use -d to include stack trace since the existing infrastructure of GracefulException only honor -d. Project tools also ask the user to use `-d` to investigate further. I prefer -d in the end due to.\r\n\r\n- we will be more consistent with the past using -v. and minimal code change no need to make CLI layer understand msbuild verbose flag\r\n- -d will only include the “manifest file searched” instead of adding msbuild and nuget’s log which is several pages.\r\n- -d will not be confused with user’s command in dotnet tool run mymake -v that’s also why Project Tools cannot move output of this flag to use -v\r\n\r\n- On the downside, use -d will further increase the separation of 2 flag to control output.\r\n\r\nSince cannot find manifest is shared. To add “-g” does not make sense in many contexts I did not follow the text in the issue completely.\r\nThe final result:\r\nλ dotnet tool uninstall apackage\r\nCannot find a manifest file.\r\nFor a list of locations searched, use `dotnet -d tool install <toolname>`\r\nIf you intended to uninstall a global tool, add `--global` to the command.\r\n\r\n```\r\nλ dotnet -d  tool uninstall apackage\r\nTelemetry is: Enabled\r\nThe list of searched path:\r\n        c:\\work\\cli\\test\\dotnet.Tests\\.config\\dotnet-tools.json\r\n        c:\\work\\cli\\test\\dotnet.Tests\\dotnet-tools.json\r\n        c:\\work\\cli\\test\\.config\\dotnet-tools.json\r\n        c:\\work\\cli\\test\\dotnet-tools.json\r\n        c:\\work\\cli\\.config\\dotnet-tools.json\r\n        c:\\work\\cli\\dotnet-tools.json\r\n        c:\\work\\.config\\dotnet-tools.json\r\n        c:\\work\\dotnet-tools.json\r\n        c:\\.config\\dotnet-tools.json\r\n        c:\\dotnet-tools.json\r\nCannot find a manifest file.\r\nFor a list of locations searched, use `dotnet -d tool install <toolname>`\r\nIf you intended to uninstall a global tool, add `--global` to the command.\r\n\r\nλ dotnet tool install apackage\r\nCannot find a manifest file.\r\nFor a list of locations searched, use `dotnet -d tool install <toolname>`\r\nIf you intended to install a global tool, add `--global` to the command.\r\nIf you would like to create a manifest, use `dotnet new tool-manifest` first, usually in the repo root directory.\r\n\r\nλ dotnet -d tool install apackage\r\nTelemetry is: Enabled\r\nThe list of searched path:\r\n        c:\\work\\cli\\test\\dotnet.Tests\\.config\\dotnet-tools.json\r\n        c:\\work\\cli\\test\\dotnet.Tests\\dotnet-tools.json\r\n        c:\\work\\cli\\test\\.config\\dotnet-tools.json\r\n        c:\\work\\cli\\test\\dotnet-tools.json\r\n        c:\\work\\cli\\.config\\dotnet-tools.json\r\n        c:\\work\\cli\\dotnet-tools.json\r\n        c:\\work\\.config\\dotnet-tools.json\r\n        c:\\work\\dotnet-tools.json\r\n        c:\\.config\\dotnet-tools.json\r\n        c:\\dotnet-tools.json\r\nCannot find a manifest file.\r\nFor a list of locations searched, use `dotnet -d tool install <toolname>`\r\nIf you intended to install a global tool, add `--global` to the command.\r\nIf you would like to create a manifest, use `dotnet new tool-manifest` first, usually in the repo root directory.\r\n\r\nλ dotnet tool  restore\r\nCannot find a manifest file.\r\nFor a list of locations searched, use `dotnet -d tool install <toolname>`\r\nNo tools were restored.\r\n```","Url":"https://github.com/dotnet/cli/pull/10894","RelatedDescription":"Open PR \"Nicer message for `dotnet tool install` failure\" (#10894)"},{"Id":"415273486","IsPullRequest":true,"CreatedAt":"2019-02-27T20:46:12","Actor":"nguerrera","Number":"10893","RawContent":null,"Title":"Set master branding back to preview4","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/10893","RelatedDescription":"Closed or merged PR \"Set master branding back to preview4\" (#10893)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"416990675","IsPullRequest":false,"CreatedAt":"2019-03-04T21:01:09","Actor":"tannergooding","Number":"1094","RawContent":null,"Title":"Consider the HWIntrinsic APIs for NS2.1","State":"open","Body":"### Summary\r\n\r\nWe should consider including the Harware Intrinsic APIs as part of `netstandard2.1` given that they are trivial to \"support\" (you just expose the APIs and return `false` for all the `IsSupported` checks, as the shared framework code is already doing), were designed in a way that the feature can be incrementally enabled by a given runtime, are already finding use in the shared framework code, and will allow users to more readily write cross-runtime libraries.\r\n\r\n### Rationale\r\n\r\n`netcoreapp3.0` is adding ~1500 APIs in order to support the new \"Hardware Intrinsics\" feature. These APIs provide support for writing more efficient algorithms that can take advantage of hardware specific functionality.\r\n\r\nWhile the number of APIs exposed may seem daunting, the APIs are hardware specific and were designed such that you must perform the appropriate checks before attempting to use a given API or they will result in a `PlatformNotSupportedException` at runtime. For example, `System.Runtime.Intrinsics.X86.Sse` is a class that exposes the SSE ISA for the x86 and x64 architectures. Before using any of the methods on that class, you must emit an `if (Sse.IsSupported)` check to validate that both the current hardware and the current runtime support this ISA.\r\n\r\nThese API declarations are also part of the existing shared framework code and have a default implementation of returning `false` for the `IsSupported` checks and throwing `PlatformNotSupportedException` from any of the other exposed hardware-specific APIs. This has allowed us to already take a cross-runtime dependency on these intrinsics in places like `SpanHelpers`, `Decimal`, `BitOperations`, `BitArray`, and more.\r\n\r\nGiven the above, I propose that these APIs be included as part of `netstandard2.1` as it will allow general library and application developers to share in the same benefits we have already seen. That is, it will light-up on .NET Core 3.0 and will do nothing on other runtimes. This will avoid the need for them to cross-compile their code in a number of cases.\r\n\r\nFor the runtimes that don't support this functionality yet, they should require somewhere between no and minimal changes. For the most part, they should already be internally compiling these APIs and hitting the `IsSupported=false` paths. So they will ultimately just be exposing these APIs to the end-user and would require no changes. The work that may be required is to ensure that the `Vector64<T>`, `Vector128<T>`, and `Vector256<T>` types have the appropriate ABI dependent type layouts. That is, these types should have the appropriate packing (e.g. `16` for `Vector128<T>` on x86/x64 since it maps to the `__m128` ABI primitive defined by the Windows and System V calling convention specifications).\r\n\r\nExposing this will also allow the various runtimes to have incremental \"light-up\" of these APIs. That is, rather than waiting for the next release to both expose and implement the APIs, they can expose the the APIs as part of `netstandard2.1` and the corresponding version of their runtime (e.g `x.0`). They can then light up individual ISAs and make them available to their users as they see fit (e.g. They could enable just `SSE` in `x.1` and could enable SSE2/SSE3 in `x.2`, etc).\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1094","RelatedDescription":"Open issue \"Consider the HWIntrinsic APIs for NS2.1\" (#1094)"},{"Id":"416499863","IsPullRequest":false,"CreatedAt":"2019-03-03T18:13:53","Actor":"proof85","Number":"1093","RawContent":null,"Title":"HashCode to standard","State":"closed","Body":"Hi,\r\n\r\nis it possible to add the HashCode-\"Helper\" struct to the .net standard? Including the Combine method? it is covered by the .net corefx since v2.1 and it looks like there is no os or platform specific usecase","Url":"https://github.com/dotnet/standard/issues/1093","RelatedDescription":"Closed issue \"HashCode to standard\" (#1093)"},{"Id":"414920447","IsPullRequest":false,"CreatedAt":"2019-02-27T02:53:49","Actor":"divega","Number":"1092","RawContent":null,"Title":"Add string overloads to DbDataReader.Get*() to .NET Standard 2.1","State":"open","Body":"This is mainly about adding the API from https://github.com/dotnet/corefx/issues/31595 (commit https://github.com/dotnet/corefx/commit/b30fc2b4ee302e449e3580ae39cb083a76b813c9), plus possibly two additional async method possibly coming from https://github.com/dotnet/corefx/issues/35611, to .NET Standard 2.1.\r\n\r\ncc @roji @ajcvickers @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1092","RelatedDescription":"Open issue \"Add string overloads to DbDataReader.Get*() to .NET Standard 2.1\" (#1092)"},{"Id":"414887877","IsPullRequest":false,"CreatedAt":"2019-02-27T00:35:13","Actor":"ChaseFlorell","Number":"1091","RawContent":null,"Title":"Collection<T> and ObservableCollection<T> do not support ranges","State":"open","Body":"This is taken directly from https://github.com/dotnet/corefx/issues/10752 [by @robertmclaws]\r\n\r\nThis API change is already approved in .netcore (tentatively scheduled for 3.0), and I think it's equally as important to be available in .netstandard\r\n\r\n```csharp\r\n    // Adds a range to the end of the collection.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Add)\r\n    public void AddRange(IEnumerable<T> collection) => InsertItemsRange(0, collection);\r\n\r\n    // Inserts a range\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Add)\r\n    public void InsertRange(int index, IEnumerable<T> collection) => InsertItemsRange(index, collection);\r\n\r\n    // Removes a range.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Remove)\r\n    public void RemoveRange(int index, int count) => RemoveItemsRange(index, count);\r\n\r\n    // Will allow to replace a range with fewer, equal, or more items.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Replace)\r\n    public void ReplaceRange(int index, int count, IEnumerable<T> collection)\r\n    {\r\n         RemoveItemsRange(index, count);\r\n         InsertItemsRange(index, collection);\r\n    }\r\n\r\n    #region virtual methods\r\n    protected virtual void InsertItemsRange(int index, IEnumerable<T> collection);\r\n    protected virtual void RemoveItemsRange(int index, int count);\r\n    #endregion\r\n```\r\n\r\nPlease see the linked issue for the full discussion.\r\n\r\nI'm assuming it would land [here](https://github.com/dotnet/standard/blob/master/src/netstandard/ref/System.Collections.ObjectModel.cs) and the appropriate shims would be created, however I don't know enough about netstandard to actually draw up the PR.\r\n","Url":"https://github.com/dotnet/standard/issues/1091","RelatedDescription":"Open issue \"Collection<T> and ObservableCollection<T> do not support ranges\" (#1091)"},{"Id":"414879247","IsPullRequest":false,"CreatedAt":"2019-02-27T00:01:34","Actor":"wtgodbe","Number":"1090","RawContent":null,"Title":"Sort out baseline between netstandard & netcoreapp","State":"open","Body":"We should sit down & go over the diff between netstandard & netcoreapp, and decide what we need to fix/how we need to fix it.\r\n\r\nCC @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1090","RelatedDescription":"Open issue \"Sort out baseline between netstandard & netcoreapp\" (#1090)"},{"Id":"414599564","IsPullRequest":true,"CreatedAt":"2019-02-26T13:10:54","Actor":"dotnet-maestro[bot]","Number":"1089","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19125.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1089","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1089)"},{"Id":"414366560","IsPullRequest":true,"CreatedAt":"2019-02-26T02:10:06","Actor":"terrajobst","Number":"1087","RawContent":null,"Title":"Remove windows row","State":"closed","Body":"After talking to @ptorr-msft it seems we can update this table and simplify the confusing Windows rows by combining *Windows* with *UWP* and removing *Windows Phone* and *Windows Phone Silverlight* entirely.\r\n\r\n/cc @mairaw @richlander ","Url":"https://github.com/dotnet/standard/pull/1087","RelatedDescription":"Closed or merged PR \"Remove windows row\" (#1087)"},{"Id":"414395637","IsPullRequest":true,"CreatedAt":"2019-02-26T02:09:06","Actor":"terrajobst","Number":"1088","RawContent":null,"Title":"Update .NET Standard 2.1 API delta","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1088","RelatedDescription":"Closed or merged PR \"Update .NET Standard 2.1 API delta\" (#1088)"},{"Id":"414093373","IsPullRequest":true,"CreatedAt":"2019-02-25T13:10:50","Actor":"dotnet-maestro[bot]","Number":"1086","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19124.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1086","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1086)"},{"Id":"413818940","IsPullRequest":true,"CreatedAt":"2019-02-24T13:10:46","Actor":"dotnet-maestro[bot]","Number":"1085","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19123.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1085","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1085)"},{"Id":"413693365","IsPullRequest":true,"CreatedAt":"2019-02-23T13:10:47","Actor":"dotnet-maestro[bot]","Number":"1084","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19122.3\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1084","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1084)"},{"Id":"413628435","IsPullRequest":true,"CreatedAt":"2019-02-23T00:53:44","Actor":"terrajobst","Number":"1083","RawContent":null,"Title":"Add \"generated by a tool\"-header","State":"closed","Body":"This adds a header to all the Markdown files provided in the docs folder that\r\nshow the API set of .NET Standard. The header indicates that these are\r\ngenerated by a tool and PRs are generally not accepted.\r\n\r\nFixes #1053.","Url":"https://github.com/dotnet/standard/pull/1083","RelatedDescription":"Closed or merged PR \"Add \"generated by a tool\"-header\" (#1083)"},{"Id":"408526522","IsPullRequest":false,"CreatedAt":"2019-02-23T00:00:14","Actor":"jmroyb","Number":"1066","RawContent":null,"Title":"Will be supported System.Web.Services.Discovery and System.Web.Services.Description?","State":"closed","Body":"Hi folks,\r\n\r\nI need make portability from .NET FW 4.5 to .NET Standard. My lib uses System.Web.Services.Discovery and System.Web.Services.Description. Do you plan to migrate them to .NET Standard?\r\n\r\nCheers","Url":"https://github.com/dotnet/standard/issues/1066","RelatedDescription":"Closed issue \"Will be supported System.Web.Services.Discovery and System.Web.Services.Description?\" (#1066)"},{"Id":"413393938","IsPullRequest":true,"CreatedAt":"2019-02-22T13:10:47","Actor":"dotnet-maestro[bot]","Number":"1082","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19121.5\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1082","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1082)"},{"Id":"413086694","IsPullRequest":true,"CreatedAt":"2019-02-22T07:09:05","Actor":"terrajobst","Number":"1080","RawContent":null,"Title":"Add SwitchExpressionException","State":"closed","Body":"Fixes #1077\r\n\r\nThis adds `SwitchExpressionException` that was added for supporting C#'s [`switch` expression construct](https://github.com/dotnet/csharplang/blob/master/proposals/patterns.md#switch-expression). The exception type was discussed in CoreFX in [this API request](https://github.com/dotnet/corefx/issues/33284).","Url":"https://github.com/dotnet/standard/pull/1080","RelatedDescription":"Closed or merged PR \"Add SwitchExpressionException\" (#1080)"},{"Id":"412707494","IsPullRequest":false,"CreatedAt":"2019-02-22T07:09:05","Actor":"terrajobst","Number":"1077","RawContent":null,"Title":"Include SwitchExpression added for C# 8","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/issues/1077","RelatedDescription":"Closed issue \"Include SwitchExpression added for C# 8\" (#1077)"},{"Id":"413148623","IsPullRequest":false,"CreatedAt":"2019-02-21T22:14:20","Actor":"wtgodbe","Number":"1081","RawContent":null,"Title":"Use Arcade defaults for DebugType, etc","State":"open","Body":"https://github.com/dotnet/standard/blob/4a006e962fc5c5651b7712028e0e352b1e011a58/Directory.Build.props#L86-L104\r\n\r\nCC @tmat ","Url":"https://github.com/dotnet/standard/issues/1081","RelatedDescription":"Open issue \"Use Arcade defaults for DebugType, etc\" (#1081)"},{"Id":"412718646","IsPullRequest":true,"CreatedAt":"2019-02-21T22:12:16","Actor":"tmat","Number":"1078","RawContent":null,"Title":"Set copyright and package license","State":"closed","Body":"Prepares repo for change https://github.com/dotnet/arcade/pull/2003 by setting `Copyright` and `PackageLicenseExpression` properties. These values will be required to be set by each repository once https://github.com/dotnet/arcade/pull/2003 is merged.\r\n\r\nIn order to not break the current builds this change sets the properties conditionally. This condition can be removed once all repos switch to Arcade that has https://github.com/dotnet/arcade/pull/2003.\r\n\r\n@markwilkie\r\n","Url":"https://github.com/dotnet/standard/pull/1078","RelatedDescription":"Closed or merged PR \"Set copyright and package license\" (#1078)"},{"Id":"411583193","IsPullRequest":true,"CreatedAt":"2019-02-21T19:39:58","Actor":"akoeplinger","Number":"1074","RawContent":null,"Title":"Fix link to build logs in build status badge","State":"closed","Body":"The PR which added the build status badges used the status from the public project but linked to the internal project: https://github.com/dotnet/standard/pull/1062\r\nUpdated to link to point to the public project.\r\n\r\nFixes https://github.com/dotnet/standard/issues/1065\r\n\r\n/cc @wtgodbe ","Url":"https://github.com/dotnet/standard/pull/1074","RelatedDescription":"Closed or merged PR \"Fix link to build logs in build status badge\" (#1074)"},{"Id":"408429514","IsPullRequest":false,"CreatedAt":"2019-02-21T19:39:58","Actor":"kaby76","Number":"1065","RawContent":null,"Title":"CI build status log is not public","State":"closed","Body":"Readme.md now includes a CI build status (https://github.com/dotnet/standard/commit/1e445e1f69f0fe37a7562bc59c054e7d0e15761f#diff-04c6e90faac2675aa89e2176d2eec7d8). This is good, but when I click on it, I get a \"401\" page because I am not an MS employee. Status of the build should not be opaque, and generally, if you go around to other projects on the web, the links are to the output of the build, not to 401. The badge links in the .../standard/readme.md page should to a public build so I can understand what is going on here. Roslyn does it correctly (https://github.com/dotnet/roslyn/blob/master/README.md); others, such as Corefx do not. Coreclr doesn't even have a badge for build status. Mono's readme.md page has them, and the links work.","Url":"https://github.com/dotnet/standard/issues/1065","RelatedDescription":"Closed issue \"CI build status log is not public\" (#1065)"},{"Id":"412912955","IsPullRequest":true,"CreatedAt":"2019-02-21T13:10:49","Actor":"dotnet-maestro[bot]","Number":"1079","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19121.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19121.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1079","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1079)"},{"Id":"410901729","IsPullRequest":false,"CreatedAt":"2019-02-20T21:32:22","Actor":"mpetrinidev","Number":"1071","RawContent":null,"Title":"Cannot use linq in MatchCollection regex with .NET Standard 2.0","State":"closed","Body":"Hi everyone,\r\n\r\nI have the following problem with a .NET Standard 2.0 class library\r\n\r\n'MatchCollection' does not contain a definition for 'Select' and no accessible extension method 'Select' accepting a first argument of type 'MatchCollection' could be found (are you missing a using directive or an assembly reference?)\r\n\r\n**Code**\r\n\r\n`IEnumerable<string> words = Regex.Matches(text, @\"([\\w]+\\.)+[\\w]+(?=[\\s]|$)\").Select(p => p.Value);`\r\n\r\nI had to move this code from a project that is develope with .NET Core 2.1.\r\n\r\nHow do I solve this problem? I read [https://docs.microsoft.com/en-us/dotnet/api/system.text.regularexpressions.matchcollection?view=netstandard-2.0](url) but I cannot find what the problem is\r\n\r\nThanks in advance","Url":"https://github.com/dotnet/standard/issues/1071","RelatedDescription":"Closed issue \"Cannot use linq in MatchCollection regex with .NET Standard 2.0\" (#1071)"},{"Id":"412413302","IsPullRequest":true,"CreatedAt":"2019-02-20T13:10:57","Actor":"dotnet-maestro[bot]","Number":"1076","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19119.2\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19119.2\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19119.2\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19119.2\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19119.2\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1076","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1076)"},{"Id":"412032685","IsPullRequest":false,"CreatedAt":"2019-02-19T17:11:56","Actor":"YairHalberstadt","Number":"1075","RawContent":null,"Title":"A number of APIs still exist in both .NetCore and .NetFramework, but are missing in the .NetStandard 2.0 version of System.Reflection.Emit","State":"closed","Body":"I'm currently looking into targeting .Net Standard for Iron Python: https://github.com/IronLanguages/dlr/issues/175\r\n\r\nSome of the required Reflection.Emit APIs are missing from the System.Reflection.Emit nuget package when targeting .Net Standard 2.0, such as `DynamicMethod` and `TypeBuilder.CreateType()`. However they exist in both .Net Core and .Net Framework, and I believe it was decided in https://github.com/dotnet/corefx/issues/29365 (specifically from https://github.com/dotnet/corefx/issues/29365#issuecomment-398256162  and onwards) that such APIs should be included in the Nuget Package, and should throw when used from an AOT runtime.\r\n\r\nThe work to do that was completed in https://github.com/dotnet/corefx/pull/30741.\r\n\r\nIs there any reason why the Nuget package doesn't seem to reflect this?\r\n\r\nThanks","Url":"https://github.com/dotnet/standard/issues/1075","RelatedDescription":"Closed issue \"A number of APIs still exist in both .NetCore and .NetFramework, but are missing in the .NetStandard 2.0 version of System.Reflection.Emit\" (#1075)"},{"Id":"411518831","IsPullRequest":false,"CreatedAt":"2019-02-18T15:04:17","Actor":"kjpou1","Number":"1073","RawContent":null,"Title":".NET Standard for WebAssembly","State":"open","Body":"### Rationale and Usage\r\n\r\nAs WebAssembly support in Mono is being worked on there is a need to consider it as a platform for NS2.1.  `PlatformID.WebAssembly`\r\n \r\n### Proposed API\r\n\r\n#### PlatformID\r\n\r\nThis adds WebAssembly enum to `PlatformID`\r\n\r\n```\r\n    public enum PlatformID\r\n    {\r\n        [EditorBrowsable(EditorBrowsableState.Never)] Win32S = 0,\r\n        [EditorBrowsable(EditorBrowsableState.Never)] Win32Windows = 1,\r\n        Win32NT = 2,\r\n        [EditorBrowsable(EditorBrowsableState.Never)] WinCE = 3,\r\n        Unix = 4,\r\n        [EditorBrowsable(EditorBrowsableState.Never)] Xbox = 5,\r\n        [EditorBrowsable(EditorBrowsableState.Never)] MacOSX = 6\r\n        [EditorBrowsable(EditorBrowsableState.Never)] WebAssembly = 7\r\n    }\r\n```\r\n\r\n#### OSPlatform\r\n\r\nThis adds `OSPlatform.WebAssembly`.\r\n\r\n```\r\nnamespace System.Runtime.InteropServices\r\n{\r\n    public readonly struct OSPlatform : IEquatable<OSPlatform>\r\n    {\r\n        private readonly string _osPlatform;\r\n\r\n        public static OSPlatform WebAssembly { get; } = new OSPlatform(\"WEBASSEMBLY\");\r\n\r\n        public static OSPlatform FreeBSD { get; } = new OSPlatform(\"FREEBSD\");\r\n\r\n        public static OSPlatform Linux { get; } = new OSPlatform(\"LINUX\");\r\n\r\n        public static OSPlatform OSX { get; } = new OSPlatform(\"OSX\");\r\n\r\n        public static OSPlatform Windows { get; } = new OSPlatform(\"WINDOWS\");\r\n\r\n```\r\n\r\nIssue from Blazor: https://github.com/mono/mono/issues/13002\r\n\r\n@terrajobst @marek-safar @lewing\r\n","Url":"https://github.com/dotnet/standard/issues/1073","RelatedDescription":"Open issue \".NET Standard for WebAssembly\" (#1073)"},{"Id":"411070793","IsPullRequest":true,"CreatedAt":"2019-02-16T13:10:47","Actor":"dotnet-maestro[bot]","Number":"1072","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19115.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19115.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19115.1\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19115.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19115.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1072","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1072)"},{"Id":"410533703","IsPullRequest":true,"CreatedAt":"2019-02-15T20:32:52","Actor":"wtgodbe","Number":"1069","RawContent":null,"Title":"Label package as 'preview3'","State":"closed","Body":"Change label from `preview1` to `preview3` for upcoming release\r\n\r\nCC @danmosemsft @terrajobst","Url":"https://github.com/dotnet/standard/pull/1069","RelatedDescription":"Closed or merged PR \"Label package as 'preview3'\" (#1069)"},{"Id":"410527393","IsPullRequest":true,"CreatedAt":"2019-02-15T20:32:45","Actor":"wtgodbe","Number":"1067","RawContent":null,"Title":"Add netstandard.xml Intellisense file back to NetStandard.Library","State":"closed","Body":"The SDK expects `XmlDocFileRoot` to be defined by the repo so that it can find the intellisense file to binplace into the package - redefining this property makes it so we get `netstandard.xml` in the package again for 2.1.\r\n\r\nCC @dsplaisted @terrajobst ","Url":"https://github.com/dotnet/standard/pull/1067","RelatedDescription":"Closed or merged PR \"Add netstandard.xml Intellisense file back to NetStandard.Library\" (#1067)"},{"Id":"410759394","IsPullRequest":true,"CreatedAt":"2019-02-15T13:10:55","Actor":"dotnet-maestro[bot]","Number":"1070","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19114.4\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19114.4\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19114.4\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19114.4\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19114.4\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1070","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1070)"},{"Id":"410528981","IsPullRequest":true,"CreatedAt":"2019-02-14T23:12:42","Actor":"dotnet-maestro[bot]","Number":"1068","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.19113.4\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19113.4\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.19113.4\r\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.19113.4\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.19113.4\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1068","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#1068)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"417074563","IsPullRequest":true,"CreatedAt":"2019-03-05T03:28:25","Actor":"wfurt","Number":"35773","RawContent":null,"Title":"Disable AllHelperPortsAreInGetPortNames test on ARM Windows","State":"closed","Body":"related to #35722 \r\n","Url":"https://github.com/dotnet/corefx/pull/35773","RelatedDescription":"Closed or merged PR \"Disable AllHelperPortsAreInGetPortNames test on ARM Windows\" (#35773)"},{"Id":"417097020","IsPullRequest":true,"CreatedAt":"2019-03-05T03:20:38","Actor":"grant-d","Number":"35775","RawContent":null,"Title":"[WIP] Update BitOperations callsites","State":"open","Body":"Update known callsites in `CoreFX` to use `BitOperations`\r\nSee https://github.com/dotnet/corefx/pull/35606\r\nAnd https://github.com/dotnet/corefx/pull/34917\r\n\r\ncc @tannergooding, @jkotas ","Url":"https://github.com/dotnet/corefx/pull/35775","RelatedDescription":"Open PR \"[WIP] Update BitOperations callsites\" (#35775)"},{"Id":"417080585","IsPullRequest":false,"CreatedAt":"2019-03-05T02:13:18","Actor":"dotnet-mc-bot","Number":"35774","RawContent":null,"Title":"Test failure: System.Tests.ArgIteratorTests/ArgIterator_Throws_PlatformNotSupportedException","State":"open","Body":"Opened on behalf of @wfurt\n\nThe test `System.Tests.ArgIteratorTests/ArgIterator_Throws_PlatformNotSupportedException` has failed.\n\nFailure Message:\n```\nAssert.Throws() Failure\\r\nExpected: typeof(System.PlatformNotSupportedException)\\r\nActual:   typeof(System.ArgumentException): Handle is not initialized.\\r\n---- System.ArgumentException : Handle is not initialized.\n```\n\nStack Trace:\n```\n   at System.ArgIterator..ctor(IntPtr arglist)\n   at System.ArgIterator..ctor(RuntimeArgumentHandle arglist) in F:\\vsagent\\35\\s\\src\\System.Private.CoreLib\\src\\System\\ArgIterator.cs:line 37\n   at System.Tests.ArgIteratorTests.<>c.<ArgIterator_Throws_PlatformNotSupportedException>b__6_0() in F:\\vsagent\\21\\s\\src\\System.Runtime\\tests\\System\\ArgIteratorTests.netcoreapp.cs:line 94\n----- Inner Stack Trace -----\n   at System.ArgIterator..ctor(IntPtr arglist)\n   at System.ArgIterator..ctor(RuntimeArgumentHandle arglist) in F:\\vsagent\\35\\s\\src\\System.Private.CoreLib\\src\\System\\ArgIterator.cs:line 37\n   at System.Tests.ArgIteratorTests.<>c.<ArgIterator_Throws_PlatformNotSupportedException>b__6_0() in F:\\vsagent\\21\\s\\src\\System.Runtime\\tests\\System\\ArgIteratorTests.netcoreapp.cs:line 94\n```\n\nBuild : 3.0 - 20190304.7 (Core Tests)\nFailing configurations:\n- Windows.10.Arm64-arm64\n  - Release\n","Url":"https://github.com/dotnet/corefx/issues/35774","RelatedDescription":"Open issue \"Test failure: System.Tests.ArgIteratorTests/ArgIterator_Throws_PlatformNotSupportedException\" (#35774)"},{"Id":"417023763","IsPullRequest":true,"CreatedAt":"2019-03-05T00:41:38","Actor":"AaronRobinsonMSFT","Number":"35767","RawContent":null,"Title":"Update API for new RCW license impl in coreclr","State":"closed","Body":"cc @jkotas @ericstj ","Url":"https://github.com/dotnet/corefx/pull/35767","RelatedDescription":"Closed or merged PR \"Update API for new RCW license impl in coreclr\" (#35767)"},{"Id":"417053266","IsPullRequest":true,"CreatedAt":"2019-03-05T00:12:43","Actor":"ahoefling","Number":"35772","RawContent":null,"Title":"Added Range Manipulation APIs to Collection<T> and ObservableCollection<T>","State":"open","Body":"Added Range Manipulation APIs to `Collection<T>` and `ObservableCollection<T>`.\r\n\r\nFixes: #10752 \r\n\r\nAdded the following new API that was approved:\r\n\r\n```c#\r\n    // Adds a range to the end of the collection.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Add)\r\n    public void AddRange(IEnumerable<T> collection) => InsertItemsRange(0, collection);\r\n\r\n    // Inserts a range\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Add)\r\n    public void InsertRange(int index, IEnumerable<T> collection) => InsertItemsRange(index, collection);\r\n\r\n    // Removes a range.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Remove)\r\n    public void RemoveRange(int index, int count) => RemoveItemsRange(index, count);\r\n\r\n    // Will allow to replace a range with fewer, equal, or more items.\r\n    // Raises CollectionChanged (NotifyCollectionChangedAction.Replace)\r\n    public void ReplaceRange(int index, int count, IEnumerable<T> collection)\r\n    {\r\n         RemoveItemsRange(index, count);\r\n         InsertItemsRange(index, collection);\r\n    }\r\n\r\n    #region virtual methods\r\n    protected virtual void InsertItemsRange(int index, IEnumerable<T> collection);\r\n    protected virtual void RemoveItemsRange(int index, int count);\r\n    #endregion\r\n```\r\n\r\nAdded Unit Tests\r\n* `Collection<T>`\r\n* `ObservableCollection<T>`\r\n\r\nI have certified this code working using the newly added xUnit tests for both `ObservableCollection<T>` and `Collection<T>`.\r\n\r\nLooking forward to everyone's feedback on this","Url":"https://github.com/dotnet/corefx/pull/35772","RelatedDescription":"Open PR \"Added Range Manipulation APIs to Collection<T> and ObservableCollection<T>\" (#35772)"},{"Id":"417049466","IsPullRequest":false,"CreatedAt":"2019-03-04T23:57:45","Actor":"joshfree","Number":"35771","RawContent":null,"Title":"Problem with Assembly.LoadFile and Activator.CreateInstance in .net core 2.2","State":"open","Body":"_From @tamasVajda on March 1, 2019 13:47_\n\nProblem with Assembly.LoadFile and Activator.CreateInstance\r\n\r\n\r\n.net core version: 2.2 \r\ndll to load: .net framework 2.0\r\n\r\nWe tried to implement a kind of dependency injection in .net standard what could use out client from .net framework side and our server from .net core 2.0.\r\n\r\nThe location of class described in json configuration file, like following:\r\n\r\n```json\r\n\"Namspace1.SomeData\": {\r\n      \"class\": \"Namespace2.ClassName\",\r\n      \"Assembly\": \"MyAssambly.dll\"\r\n    }\r\n```\r\n\r\nour Factory class implemented in .net standard what can provide an instance from a required object:\r\n\r\n```c#\r\n               Assembly assembly = Assembly.LoadFile(\"assemplyPath/MyAssambly.dll\");\r\n\r\n                Type objtype = assembly.GetType(\"Namespace2.ClassName\");\r\n                var objectInstance = Activator.CreateInstance(objtype);\r\n                return objectInstance as IMyClassInterface;\r\n```\r\n\r\nOf coarse ClassName class implement IMyClassInterface interface.\r\n\r\nThe factory class works well, if called from .net framework side, create an instance from the loaded dll and can cast it to interface type.\r\n\r\nBUT can not work if it's called this factory method from .net core project: the assembly load success, there is all types according to configuration, but the cast fail, this function return null (or invalid cast if i try other way to cast it)!  It seems to not working a reflection in .net core properly, if the types are defined in .net standard dll? Why lost all instantiated classes his interfaces? \r\n\r\nWe tried some comvisibility attributes, without any result.\r\n\r\nHave you any idea how could we solve this issue?\n\n_Copied from original issue: dotnet/core#2352_","Url":"https://github.com/dotnet/corefx/issues/35771","RelatedDescription":"Open issue \"Problem with Assembly.LoadFile and Activator.CreateInstance in .net core 2.2\" (#35771)"},{"Id":"416792586","IsPullRequest":true,"CreatedAt":"2019-03-04T23:51:43","Actor":"dotnet-maestro[bot]","Number":"35749","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/coreclr\r\n\r\n- Microsoft.NET.Sdk.IL - 3.0.0-preview4-27503-72\r\n- Microsoft.NETCore.ILAsm - 3.0.0-preview4-27503-72\r\n- Microsoft.NETCore.Runtime.CoreCLR - 3.0.0-preview4-27503-72\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/35749","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#35749)"},{"Id":"416979210","IsPullRequest":true,"CreatedAt":"2019-03-04T23:30:57","Actor":"am11","Number":"35760","RawContent":null,"Title":"Adhere to desktop implementation of [Can]ConvertFrom","State":"closed","Body":"fix #35753\r\n\r\ncc @ericstj ","Url":"https://github.com/dotnet/corefx/pull/35760","RelatedDescription":"Closed or merged PR \"Adhere to desktop implementation of [Can]ConvertFrom\" (#35760)"},{"Id":"416864421","IsPullRequest":false,"CreatedAt":"2019-03-04T23:30:57","Actor":"pavelovcharov","Number":"35753","RawContent":null,"Title":"TypeConverter.CanConvertFrom method has been changed","State":"closed","Body":"While porting our app to NetCore3, we've noticed that the TypeConverter's CanConvertFrom and ConvertFrom methods work diffrently in Net Core 3 and Net Framework 4.7.2\r\n\r\nhttps://referencesource.microsoft.com/#System/compmod/system/componentmodel/TypeConverter.cs\r\n```\r\n        public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) {\r\n            if (sourceType == typeof(InstanceDescriptor)) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\npublic virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) {\r\n            InstanceDescriptor id = value as InstanceDescriptor;\r\n            if (id != null) {\r\n                return id.Invoke();\r\n            }\r\n            throw GetConvertFromException(value);\r\n        }\r\n```\r\n\r\nhttps://github.com/dotnet/corefx/blob/release/3.0/src/System.ComponentModel.TypeConverter/src/System/ComponentModel/TypeConverter.cs\r\n```\r\n       public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) => false;\r\n       public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value)\r\n        {\r\n            throw GetConvertFromException(value);\r\n        }\r\n```\r\n\r\nIs this an intentional change?","Url":"https://github.com/dotnet/corefx/issues/35753","RelatedDescription":"Closed issue \"TypeConverter.CanConvertFrom method has been changed\" (#35753)"},{"Id":"417039221","IsPullRequest":true,"CreatedAt":"2019-03-04T23:27:21","Actor":"wfurt","Number":"35770","RawContent":null,"Title":"Disable alpine39","State":"closed","Body":"until https://github.com/dotnet/core-eng/issues/5413 and https://github.com/dotnet/core-eng/issues/5406 are resolved.\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/35770","RelatedDescription":"Closed or merged PR \"Disable alpine39\" (#35770)"},{"Id":"417029711","IsPullRequest":false,"CreatedAt":"2019-03-04T22:51:51","Actor":"caesar1995","Number":"35769","RawContent":null,"Title":"Consider adding folded trailing header support","State":"open","Body":"In RFC 2616, HTTP/1.1 header field values can be folded onto multiple lines. Later in RFC 7230, folded header is obsoleted.\r\n\r\nSince our code supports folded headers (`Header` property) for compat reason - there are some servers still use it. We may want to add folded header support to `TrailingHeaders` property as well.\r\n\r\nAlso notice that:\r\n1. In RFC 7230, folded header is obsoleted.\r\n2. HTTP/2 doesn't have folded header concept.\r\n\r\nWe need to think if this is really needed.\r\n\r\n/cc: @dotnet/ncl ","Url":"https://github.com/dotnet/corefx/issues/35769","RelatedDescription":"Open issue \"Consider adding folded trailing header support\" (#35769)"},{"Id":"417028714","IsPullRequest":false,"CreatedAt":"2019-03-04T22:48:35","Actor":"saucecontrol","Number":"35768","RawContent":null,"Title":"HWIntrinsics API Proposal: VPMOVZXBD and friends need pointer-based overloads","State":"open","Body":"Currently, the `[V?]PMOV[SZ]X[BWD][WDQ]` HWIntrinsics methods define only `Vector128<T>` arguments, but most of these instructions use less than the full vector.  These instructions also support both `[xy]mm,xmm` or `[xy]mm,mem` encoding.  In order to use the mem-encoded version of the instruction, we must currently write something like\r\n\r\n```C#\r\nAvx2.ConvertToVector256UInt32(Sse2.LoadVector128(byte*))\r\n```\r\n\r\nAnd the JIT folds the load, emitting the correct\r\n\r\n```asm\r\nvpmovzxbd ymm1,mmword ptr [rsi]\r\n```\r\n\r\nHowever, this gives `Sse2.LoadVector128` non-deterministic behavior, as in this case only 64 bits are read.  We should expose pointer variants of these methods so the behavior can be explicitly defined.\r\n\r\nAdditionally, the SSE4.1 and AVX2 versions of these intrinsics are not symmetrical.  For example, `_mm_cvtepu8_epi32` is mapped to `Sse41.ConvertToVector128Int32` while `_mm256_cvtepu8_epi32` is mapped to `Avx2.ConvertToVector256UInt32`.  The distinction there being that in `Sse41` we return a signed result and in `Avx2`, we return unsigned.\r\n\r\nI propose we do the following:\r\n\r\nChange the existing SSE4.1 methods to return unsigned types for unsigned arguments\r\n\r\n```diff\r\npublic abstract class Sse41\r\n{\r\n-    public static Vector128<short> ConvertToVector128Int16(Vector128<byte> value) => ConvertToVector128Int16(value);\r\n+    public static Vector128<ushort> ConvertToVector128UInt16(Vector128<byte> value) => ConvertToVector128UInt16(value);\r\n-    public static Vector128<int> ConvertToVector128Int32(Vector128<byte> value) => ConvertToVector128Int32(value);\r\n+    public static Vector128<uint> ConvertToVector128UInt32(Vector128<byte> value) => ConvertToVector128UInt32(value);\r\n-    public static Vector128<int> ConvertToVector128Int32(Vector128<ushort> value) => ConvertToVector128Int32(value);\r\n+    public static Vector128<uint> ConvertToVector128UInt32(Vector128<ushort> value) => ConvertToVector128UInt32(value);\r\n-    public static Vector128<long> ConvertToVector128Int64(Vector128<byte> value) => ConvertToVector128Int64(value);\r\n+    public static Vector128<ulong> ConvertToVector128UInt64(Vector128<byte> value) => ConvertToVector128UInt64(value);\r\n-    public static Vector128<long> ConvertToVector128Int64(Vector128<ushort> value) => ConvertToVector128Int64(value);\r\n+    public static Vector128<ulong> ConvertToVector128UInt64(Vector128<ushort> value) => ConvertToVector128UInt64(value);\r\n-    public static Vector128<long> ConvertToVector128Int64(Vector128<uint> value) => ConvertToVector128Int64(value);\r\n+    public static Vector128<ulong> ConvertToVector128UInt64(Vector128<uint> value) => ConvertToVector128UInt64(value);\r\n}\r\n```\r\n\r\nAdd pointer overloads to both the SSE4.1 and AVX2 versions of the methods.\r\n\r\n```C#\r\npublic abstract class Sse41\r\n{\r\n    /// <summary>\r\n    /// __m128i _mm_cvtepi8_epi16 (__m128i a)\r\n    ///   PMOVSXBW xmm, xmm/m64\r\n    /// </summary>\r\n    public static Vector128<short> ConvertToVector128Int16(sbyte* address) => ConvertToVector128Int16(address);\r\n    /// <summary>\r\n    /// __m128i _mm_cvtepu8_epi16 (__m128i a)\r\n    ///   PMOVZXBW xmm, xmm/m64\r\n    /// </summary>\r\n    public static Vector128<ushort> ConvertToVector128UInt16(byte* address) => ConvertToVector128UInt16(address);\r\n    /// <summary>\r\n    /// __m128i _mm_cvtepi8_epi32 (__m128i a)\r\n    ///   PMOVSXBD xmm, xmm/m32\r\n    /// </summary>\r\n    public static Vector128<int> ConvertToVector128Int32(sbyte* address) => ConvertToVector128Int32(address);\r\n    /// <summary>\r\n    /// __m128i _mm_cvtepu8_epi32 (__m128i a)\r\n    ///   PMOVZXBD xmm, xmm/m32\r\n    /// </summary>\r\n    public static Vector128<uint> ConvertToVector128UInt32(byte* address) => ConvertToVector128UInt32(address);\r\n    /// <summary>\r\n    /// __m128i _mm_cvtepi16_epi32 (__m128i a)\r\n    ///   PMOVSXWD xmm, xmm/m64\r\n    /// </summary>\r\n    public static Vector128<int> ConvertToVector128Int32(short* address) => ConvertToVector128Int32(value);\r\n    /// <summary>\r\n    /// __m128i _mm_cvtepu16_epi32 (__m128i a)\r\n    ///   PMOVZXWD xmm, xmm/m64\r\n    /// </summary>\r\n    public static Vector128<uint> ConvertToVector128UInt32(ushort* address) => ConvertToVector128UInt32(address);\r\n    /// <summary>\r\n    /// __m128i _mm_cvtepi8_epi64 (__m128i a)\r\n    ///   PMOVSXBQ xmm, xmm/m16\r\n    /// </summary>\r\n    public static Vector128<long> ConvertToVector128Int64(sbyte* address) => ConvertToVector128Int64(address);\r\n    /// <summary>\r\n    /// __m128i _mm_cvtepu8_epi64 (__m128i a)\r\n    ///   PMOVZXBQ xmm, xmm/m16\r\n    /// </summary>\r\n    public static Vector128<ulong> ConvertToVector128UInt64(byte* address) => ConvertToVector128UInt64(address);\r\n    /// <summary>\r\n    /// __m128i _mm_cvtepi16_epi64 (__m128i a)\r\n    ///   PMOVSXWQ xmm, xmm/m32\r\n    /// </summary>\r\n    public static Vector128<long> ConvertToVector128Int64(short* address) => ConvertToVector128Int64(address);\r\n    /// <summary>\r\n    /// __m128i _mm_cvtepu16_epi64 (__m128i a)\r\n    ///   PMOVZXWQ xmm, xmm/m32\r\n    /// </summary>\r\n    public static Vector128<ulong> ConvertToVector128UInt64(ushort* address) => ConvertToVector128UInt64(address);\r\n    /// <summary>\r\n    /// __m128i _mm_cvtepi32_epi64 (__m128i a)\r\n    ///   PMOVSXDQ xmm, xmm/m64\r\n    /// </summary>\r\n    public static Vector128<long> ConvertToVector128Int64(int* address) => ConvertToVector128Int64(address);\r\n    /// <summary>\r\n    /// __m128i _mm_cvtepu32_epi64 (__m128i a)\r\n    ///   PMOVZXDQ xmm, xmm/m64\r\n    /// </summary>\r\n    public static Vector128<ulong> ConvertToVector128UInt64(uint* address) => ConvertToVector128UInt64(address);\r\n}\r\n\r\npublic abstract class Avx2\r\n{\r\n    /// <summary>\r\n    /// __m256i _mm256_cvtepi8_epi16 (__m128i a)\r\n    ///   VPMOVSXBW ymm, xmm/m128\r\n    /// </summary>\r\n    public static Vector256<short> ConvertToVector256Int16(sbyte* address) => ConvertToVector256Int16(address);\r\n    /// <summary>\r\n    /// __m256i _mm256_cvtepu8_epi16 (__m128i a)\r\n    ///   VPMOVZXBW ymm, xmm/m128\r\n    /// </summary>\r\n    public static Vector256<ushort> ConvertToVector256UInt16(byte* address) => ConvertToVector256UInt16(address);\r\n    /// <summary>\r\n    /// __m256i _mm256_cvtepi8_epi32 (__m128i a)\r\n    ///   VPMOVSXBD ymm, xmm/m64\r\n    /// </summary>\r\n    public static Vector256<int> ConvertToVector256Int32(sbyte* address) => ConvertToVector256Int32(address);\r\n    /// <summary>\r\n    /// __m256i _mm256_cvtepu8_epi32 (__m128i a)\r\n    ///   VPMOVZXBD ymm, xmm/m64\r\n    /// </summary>\r\n    public static Vector256<uint> ConvertToVector256UInt32(byte* address) => ConvertToVector256UInt32(address);\r\n    /// <summary>\r\n    /// __m256i _mm256_cvtepi16_epi32 (__m128i a)\r\n    ///   VPMOVSXWD ymm, xmm/m128\r\n    /// </summary>\r\n    public static Vector256<int> ConvertToVector256Int32(short* address) => ConvertToVector256Int32(address);\r\n    /// <summary>\r\n    /// __m256i _mm256_cvtepu16_epi32 (__m128i a)\r\n    ///   VPMOVZXWD ymm, xmm/m128\r\n    /// </summary>\r\n    public static Vector256<uint> ConvertToVector256UInt32(ushort* address) => ConvertToVector256UInt32(address);\r\n    /// <summary>\r\n    /// __m256i _mm256_cvtepi8_epi64 (__m128i a)\r\n    ///   VPMOVSXBQ ymm, xmm/m32\r\n    /// </summary>\r\n    public static Vector256<long> ConvertToVector256Int64(sbyte* address) => ConvertToVector256Int64(address);\r\n    /// <summary>\r\n    /// __m256i _mm256_cvtepu8_epi64 (__m128i a)\r\n    ///   VPMOVZXBQ ymm, xmm/m32\r\n    /// </summary>\r\n    public static Vector256<ulong> ConvertToVector256UInt64(byte* address) => ConvertToVector256UInt64(address);\r\n    /// <summary>\r\n    /// __m256i _mm256_cvtepi16_epi64 (__m128i a)\r\n    ///   VPMOVSXWQ ymm, xmm/m64\r\n    /// </summary>\r\n    public static Vector256<long> ConvertToVector256Int64(short* address) => ConvertToVector256Int64(address);\r\n    /// <summary>\r\n    /// __m256i _mm256_cvtepu16_epi64 (__m128i a)\r\n    ///   VPMOVZXWQ ymm, xmm/m64\r\n    /// </summary>\r\n    public static Vector256<ulong> ConvertToVector256UInt64(ushort* address) => ConvertToVector256UInt64(address);\r\n    /// <summary>\r\n    /// __m256i _mm256_cvtepi32_epi64 (__m128i a)\r\n    ///   VPMOVSXDQ ymm, xmm/m128\r\n    /// </summary>\r\n    public static Vector256<long> ConvertToVector256Int64(int* address) => ConvertToVector256Int64(address);\r\n    /// <summary>\r\n    /// __m256i _mm256_cvtepu32_epi64 (__m128i a)\r\n    ///   VPMOVZXDQ ymm, xmm/m128\r\n    /// </summary>\r\n    public static Vector256<ulong> ConvertToVector256UInt64(uint* address) => ConvertToVector256UInt64(address);\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/35768","RelatedDescription":"Open issue \"HWIntrinsics API Proposal: VPMOVZXBD and friends need pointer-based overloads\" (#35768)"},{"Id":"417017300","IsPullRequest":true,"CreatedAt":"2019-03-04T22:14:29","Actor":"devsko","Number":"35766","RawContent":null,"Title":"Allow default(SequencePosition) in ROS.Slice()","State":"open","Body":"Fixes #35254\r\n`ReadOnlySequence<T>.Slice()` accepts `default(SequencePosition)` as parameter.\r\n- when `default` is used as start, the result begins at position 0\r\n- when `default` is used as end, the result ends at the end the sequence (this matches the overloads without end parameter)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/35766","RelatedDescription":"Open PR \"Allow default(SequencePosition) in ROS.Slice()\" (#35766)"},{"Id":"417015770","IsPullRequest":false,"CreatedAt":"2019-03-04T22:10:17","Actor":"tannergooding","Number":"35765","RawContent":null,"Title":"Expose the System.Numerics.Tensors interchange types as interfaces","State":"open","Body":"### Rationale\r\n\r\nWe would like to expose a set of types that  allow exchange and interop between the various tensor frameworks. Today, the types that enable this are a set of classes with an abstract base and were taken from the initial investigations in corefxlab. However, these types put an unnecessary burden on each framework exposing a Tensor type in that they either need to extend these types themselves or they need to expose additional APIs that accept this type for interop/exchange to happen. It also requires that these types be implemented as classes, which may cause a performance hit as the common case is that the frameworks instead often implement these types as structs wrapping some backing memory.\r\n\r\nAfter a number of discussions, it was determined that we should move forward with exposing these types as a set of interfaces instead. This allows the existing frameworks to easily extend their existing types (whether they are classes or structs) to be compatible with the new interface types. It also allows library authors to easily support any tensor type will still allowing them to easily get the framework specific type or to efficiently specialize the handling for specific input types.\r\n\r\n\r\n### Proposed APIs\r\n\r\nThe following is the new proposed surface area. The existing types (which are not listed, for simplicity) would be removed and would no longer be available.\r\n\r\n```csharp\r\n\r\nnamespace System.Numerics.Tensors\r\n{\r\n    public interface ITensor<T>\r\n    {\r\n        ReadOnlySpan<int> Dimensions { get; }\r\n        int Rank { get; }\r\n\r\n        T this[params int[] indices] { get; set; }\r\n        T this[ReadOnlySpan<int> indices] { get; set; }\r\n\r\n        ITensor<T> Slice(int[] startIndices, int[] lengths);\r\n\r\n        ITensor<T> Reshape(ReadOnlySpan<int> dimensions);\r\n    }\r\n\r\n    public interface IDenseTensor<T> : ITensor<T>\r\n    {\r\n        Span<T> Buffer { get; }\r\n        int ElementCount { get; }\r\n        bool IsColumnMajor { get; }\r\n        ReadOnlySpan<int> Strides { get; }\r\n\r\n        void Fill(T value);\r\n        ISparseTensor<T> ToSparseTensor();\r\n    }\r\n\r\n    public interface ISparseTensor<T> : ITensor<T>\r\n    {\r\n        int NonZeroCount { get; }\r\n\r\n        Span<T> GetNonZeroValues();\r\n        Span<int> GetNonZeroIndices();\r\n        IDenseTensor<T> ToDenseTensor();\r\n    }\r\n}\r\n```\r\n\r\n### Additional Details\r\n\r\nSome generale notes:\r\n* We decided that compressed sparse tensors were not worth exposing at this time.\r\n* We are not going to be exposing the `Clone` or `CloneEmpty` methods. This will require users to make clones are create new instances using concrete types.\r\n* We may consider also exposing a primitive struct implementation for these interfaces, but that is a separate proposal.\r\n\r\nSome notes about `ITensor<T>`:\r\n* We determined `ITensor<T>` should not implement `IList<T>` or `ICollection<T>` as they do not properly expose the multi-dimensional concept of a tensor.\r\n* `Rank` is a convenience overload for `Dimensions.Length`. However, many frameworks expose this as a specific concept.\r\n* The indexer that takes a `ROSpan<int>` could be made `params` with the proposed C# Language Feature: https://github.com/dotnet/csharplang/pull/2293\r\n* `Reshape` is exposed here as many other frameworks also expose it as a base method due to it also being applicable to sparse tensors.\r\n\r\nSome notes about `IDenseTensor<T>`:\r\n* `IsColumnMajor` is not the best name since it doesn't necessarily map cleanly to multiple dimensions. However, `System.Array` already uses the same name.","Url":"https://github.com/dotnet/corefx/issues/35765","RelatedDescription":"Open issue \"Expose the System.Numerics.Tensors interchange types as interfaces\" (#35765)"},{"Id":"417012714","IsPullRequest":true,"CreatedAt":"2019-03-04T22:01:38","Actor":"vancem","Number":"35764","RawContent":null,"Title":"Fix a race and inefficiency in Microsoft-Diagnostics-DiagnosticSource","State":"open","Body":"There is a bridge from DiagnosticSource to EventSoruce called Microsoft-Diagnostics-DiagnosticSource.\r\nThis bridge take the data object payload and derializes it int EventSource events.\r\nThere was a cache that kept  the type and it cooresponding serialization transform of the last object, which were not atomic and thus could be confused if code was executed concurrently.\r\n\r\nIn this cache is per EXPLICITLY filtered events, and works well for that case.  If however the transform is implicit, many events can share the same cache slot, and the cache becomes very ineffective.\r\n\r\nTo fix this we keep the existing one element cache, but we only set it once (which keeps things simple but avoids races and covers the explicitly filtered case), and add a lazily created ConcurrentDictionary for the 'many envent' case.\r\n\r\nAlso fixes some unrelate test issues (avoided using the same DiagnosticListner names so that tests don't interact when run concurrently),   Fixed issue were a test fails under the debugger (because the debugger turns on Microsoft-Diagnostics-DiagnosticSource which interfers with the test).\r\n\r\nI did walk new code to insure that we at least had code coverage for the new code over our set of tests.\r\n\r\nThis fixes issue #35302 and #35303","Url":"https://github.com/dotnet/corefx/pull/35764","RelatedDescription":"Open PR \"Fix a race and inefficiency in Microsoft-Diagnostics-DiagnosticSource\" (#35764)"},{"Id":"416995907","IsPullRequest":true,"CreatedAt":"2019-03-04T21:15:21","Actor":"ericstj","Number":"35763","RawContent":null,"Title":"Allow CreateRelationship to work with FileAccess.Write","State":"open","Body":"When adding a relationship InternalRelationshipCollection was creating a part\r\nbut not writing anything to it.  This caused an empty entry to be created in\r\nthe zip archive which later needed to be rewritten.  That's disallowed with\r\nFileAccess.Write.  Instead, avoid creating the entry until it's content is\r\nwritten.\r\n\r\nWhen writing a relationship file InternalRelationshipCollection was attempting\r\nto truncate any existing content.  This throws when the package is open  with\r\nFileAccess.Write since the part stream is not seekable.  Don't do the seek\r\nwhen package is open for FileAccess.Write since no pre-existing content is\r\npossible.\r\n\r\nIn Package.PartExists don't attempt to get the part.  PartExists on .NETCore\r\nonly needs to query its local list of parts.  Since it isn't returning a\r\nmutable part, it doesn't need to throw for packages opened with FileAccess.Write.\r\n\r\nAvoid out of bounds exception when enumerating part keys. The fix that delays\r\ncreating the relationship part until its content exposed an issue in\r\nDoOperationOnEachPart.  This was creating a copy of the part keys, but then\r\nenumerating over the length of original list instead of the copy.  Since I\r\ndelayed the creating of a part until it was flushed this made the length change\r\nwhile iterating the loop.  Since this code was using its copied list of keys\r\nit should have never been using the original bounds.\r\n\r\n/cc @pensivebrian @twsouthwick \r\n\r\nRelated #24457.  My previous fix enabled FileAccess.Write for creating Packages with large files but creation of relationships still wasn't working with FileAccess.Write.  This enables CreateRelationship.","Url":"https://github.com/dotnet/corefx/pull/35763","RelatedDescription":"Open PR \"Allow CreateRelationship to work with FileAccess.Write\" (#35763)"},{"Id":"416988237","IsPullRequest":true,"CreatedAt":"2019-03-04T20:54:31","Actor":"eanova","Number":"35762","RawContent":null,"Title":"Change System.IO.Compression Interop references","State":"open","Body":"One effect of this change is to create a new directory Windows/ZLib.  I chose uppercase to match the rest of the Windows directory.","Url":"https://github.com/dotnet/corefx/pull/35762","RelatedDescription":"Open PR \"Change System.IO.Compression Interop references\" (#35762)"},{"Id":"416981302","IsPullRequest":false,"CreatedAt":"2019-03-04T20:34:55","Actor":"ViktorHofer","Number":"35761","RawContent":null,"Title":"Consider moving RemoteExecutorConsoleApp to arcade","State":"open","Body":"Currently we live build the RemoteExecutorConsoleApp even though it never changes. Building test projects inside VS often fail with an error that VS can't find the `RemoteExecutorConsoleApp.dll` assembly. VS doesn't build ProjectReferences outside of the solution (https://github.com/dotnet/corefx/issues/35681#issuecomment-469393454).\r\n\r\nAs the RemoteExecutorConsoleApp is a netstandard application without any dependencies on corefx we should consider moving it to arcade and consume it as a nuget package instead. It's general goodness that should be shared with other repositories (i.e. Mono).\r\n\r\nAnother case where I noticed an out-of-solution dependency is the `PerfRunner` which is used to run performance tests. As performance tests inside corefx will probably go away soon we can ignore it.\r\n\r\ncc @safern @ericstj @danmosemsft","Url":"https://github.com/dotnet/corefx/issues/35761","RelatedDescription":"Open issue \"Consider moving RemoteExecutorConsoleApp to arcade\" (#35761)"},{"Id":"416972849","IsPullRequest":true,"CreatedAt":"2019-03-04T20:12:02","Actor":"stephentoub","Number":"35759","RawContent":null,"Title":"Tweak ImmutableDictionary.TryGetValue to improve throughput","State":"open","Body":"A few tweaks to ImmutableDictionary to reduce the costs of lookups:\r\n- Changed SortedInt32KeyNode to no longer be recursive, and then inlined it into its two call sites to avoid additional indirection and duplicative branches\r\n- Avoid wrapping and unwrapping key value pairs when comparing the first item in a HashBucket\r\n\r\ncc: @AArnott, @agocke \r\n\r\nBenchmark on my machine...\r\n\r\n| Name              | Before (us) | After (us) | Improvement | \r\n|-------------------|-------------|------------|-------------| \r\n|        Lookup1Int | 175         | 117.7      | 32.74%      | \r\n|      Lookup100Int | 214.3       | 172.7      | 19.41%      | \r\n|    Lookup10000Int | 525.6       | 507.7      | 3.41%       | \r\n|     Lookup1String | 563.6       | 441.9      | 21.59%      | \r\n|   Lookup100String | 632.3       | 530.7      | 16.07%      | \r\n| Lookup10000String | 1,477.10  | 1,318.00 | 10.77%      | \r\n\r\n```C#\r\nusing BenchmarkDotNet.Attributes;\r\nusing BenchmarkDotNet.Attributes.Jobs;\r\nusing BenchmarkDotNet.Running;\r\nusing System;\r\nusing System.Collections.Immutable;\r\nusing System.Runtime.CompilerServices;\r\n\r\n[MemoryDiagnoser]\r\n[InProcess]\r\npublic class Benchmark\r\n{\r\n    private static void Main() => BenchmarkRunner.Run<Benchmark>();\r\n\r\n    private ImmutableDictionary<int, int> _oneInt;\r\n    private ImmutableDictionary<int, int> _hundredInts;\r\n    private ImmutableDictionary<int, int> _tenThousandInts;\r\n\r\n    private ImmutableDictionary<string, string> _oneString;\r\n    private ImmutableDictionary<string, string> _hundredStrings;\r\n    private ImmutableDictionary<string, string> _tenThousandStrings;\r\n\r\n    private string[] _strings;\r\n\r\n    [GlobalSetup]\r\n    public void Setup()\r\n    {\r\n        _strings = new string[10_000];\r\n        for (int i = 0; i < _strings.Length; i++) _strings[i] = i.ToString();\r\n\r\n        _oneInt = ImmutableDictionary.Create<int, int>().Add(0, 0);\r\n        _oneString = ImmutableDictionary.Create<string, string>().Add(_strings[0], _strings[0]);\r\n\r\n        _hundredInts = ImmutableDictionary.Create<int, int>();\r\n        _hundredStrings = ImmutableDictionary.Create<string, string>();\r\n        for (int i = 0; i < 100; i++)\r\n        {\r\n            _hundredInts = _hundredInts.Add(i, i);\r\n            _hundredStrings = _hundredStrings.Add(_strings[i], _strings[i]);\r\n        }\r\n\r\n        _tenThousandInts = ImmutableDictionary.Create<int, int>();\r\n        _tenThousandStrings = ImmutableDictionary.Create<string, string>();\r\n        for (int i = 0; i < 10000; i++)\r\n        {\r\n            _tenThousandInts = _tenThousandInts.Add(i, i);\r\n            _tenThousandStrings = _tenThousandStrings.Add(_strings[i], _strings[i]);\r\n        }\r\n    }\r\n\r\n    [Benchmark]\r\n    public int Lookup1Int()\r\n    {\r\n        int count = 0;\r\n        for (int i = 0; i < 10000; i++)\r\n        {\r\n            for (int j = 0; j < 1; j++)\r\n            {\r\n                if (_oneInt.TryGetValue(j, out _))\r\n                {\r\n                    count++;\r\n                }\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    [Benchmark]\r\n    public int Lookup100Int()\r\n    {\r\n        int count = 0;\r\n        {\r\n            for (int i = 0; i < 100; i++)\r\n            {\r\n                for (int j = 0; j < 100; j++)\r\n                {\r\n                    if (_hundredInts.TryGetValue(j, out _))\r\n                    {\r\n                        count++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    [Benchmark]\r\n    public int Lookup10000Int()\r\n    {\r\n        int count = 0;\r\n        for (int i = 0; i < 1; i++)\r\n        {\r\n            for (int j = 0; j < 10000; j++)\r\n            {\r\n                if (_tenThousandInts.TryGetValue(j, out _))\r\n                {\r\n                    count++;\r\n                }\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    [Benchmark]\r\n    public int Lookup1String()\r\n    {\r\n        string[] strings = _strings;\r\n\r\n        int count = 0;\r\n        {\r\n            for (int i = 0; i < 10000; i++)\r\n            {\r\n                for (int j = 0; j < 1; j++)\r\n                {\r\n                    if (_oneString.TryGetValue(strings[j], out _))\r\n                    {\r\n                        count++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    [Benchmark]\r\n    public int Lookup100String()\r\n    {\r\n        string[] strings = _strings;\r\n\r\n        int count = 0;\r\n        for (int i = 0; i < 100; i++)\r\n        {\r\n            for (int j = 0; j < 100; j++)\r\n            {\r\n                if (_hundredStrings.TryGetValue(strings[j], out _))\r\n                {\r\n                    count++;\r\n                }\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    [Benchmark]\r\n    public int Lookup10000String()\r\n    {\r\n        string[] strings = _strings;\r\n\r\n        int count = 0;\r\n        for (int i = 0; i < 1; i++)\r\n        {\r\n            for (int j = 0; j < 10000; j++)\r\n            {\r\n                if (_tenThousandStrings.TryGetValue(strings[j], out _))\r\n                {\r\n                    count++;\r\n                }\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/pull/35759","RelatedDescription":"Open PR \"Tweak ImmutableDictionary.TryGetValue to improve throughput\" (#35759)"},{"Id":"416966316","IsPullRequest":false,"CreatedAt":"2019-03-04T19:54:30","Actor":"osman-turan","Number":"35758","RawContent":null,"Title":".NET Core runtime refuses to load assemblies serialized with PEHeaderBuilder.CreateLibraryHeader","State":"open","Body":"`PEHeaderBuilder.CreateLibraryHeader()` method does not set `Characteristics.ExecutableImage` bit of image characteristics.\r\n\r\nhttps://github.com/dotnet/corefx/blob/5419ecd858d11f08938019ba49477039de93ec3f/src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/PEHeaderBuilder.cs#L104-L107\r\n\r\nAs a result, .NET runtime refuses to load assemblies which were serialized by using `PEHeaderBuilder.CreateLibraryHeader()`. A workaround is explicitly setting this bit by calling `PEHeaderBuilder` constructor like following:\r\n\r\n```c#\r\nvar peHeaderBuilder = new PEHeaderBuilder(\r\n    imageCharacteristics: Characteristics.ExecutableImage | Characteristics.Dll);\r\n```\r\n\r\nI've created a minimal repository to fiddle with it (see: https://github.com/osman-turan/Minimal-Metadata-Serialization). Relevant section is https://github.com/osman-turan/Minimal-Metadata-Serialization/blob/b0447e11b52c384b900970bfc1b2a44d95814c41/MinimalMetadataSerialization/Program.cs#L42-L48","Url":"https://github.com/dotnet/corefx/issues/35758","RelatedDescription":"Open issue \".NET Core runtime refuses to load assemblies serialized with PEHeaderBuilder.CreateLibraryHeader\" (#35758)"},{"Id":"416954459","IsPullRequest":true,"CreatedAt":"2019-03-04T19:22:31","Actor":"bartonjs","Number":"35757","RawContent":null,"Title":"Fix Linux chain.ChainStatus when multiple layers have errors","State":"open","Body":"The recent chain rewrite caused only the last layer with errors to be reported.","Url":"https://github.com/dotnet/corefx/pull/35757","RelatedDescription":"Open PR \"Fix Linux chain.ChainStatus when multiple layers have errors\" (#35757)"},{"Id":"416945335","IsPullRequest":true,"CreatedAt":"2019-03-04T18:57:29","Actor":"layomia","Number":"35756","RawContent":null,"Title":"Add tests for new Utf8 Date \"J\" parser in #22999","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/35756","RelatedDescription":"Open PR \"Add tests for new Utf8 Date \"J\" parser in #22999\" (#35756)"},{"Id":"416939523","IsPullRequest":false,"CreatedAt":"2019-03-04T18:43:04","Actor":"DanielS4n","Number":"35755","RawContent":null,"Title":"Dynamic loading of Razor Components with MVC and CustomAttribute support","State":"open","Body":"It is important to be able to dynamically load razor component libraries to make modular asp applications. I've managed to use MetadataLoadContext to load multiple DLLs but the MVC service can not function without the GetCustomAttributes implementation.\r\n\r\n**When will it be possible to use them?**\r\n\r\nsee :\r\n...\r\n// Operations that are invalid for ReflectionOnly objects.\r\n        public sealed override object[] GetCustomAttributes(bool inherit) => **throw new InvalidOperationException(SR.Arg_ReflectionOnlyCA);**\r\n        public sealed override object[] GetCustomAttributes(Type attributeType, bool inherit) => **throw new InvalidOperationException(SR.Arg_ReflectionOnlyCA);**\r\n","Url":"https://github.com/dotnet/corefx/issues/35755","RelatedDescription":"Open issue \"Dynamic loading of Razor Components with MVC and CustomAttribute support\" (#35755)"},{"Id":"416720061","IsPullRequest":true,"CreatedAt":"2019-03-04T17:44:26","Actor":"ViktorHofer","Number":"35747","RawContent":null,"Title":"Remove SharedFrameworkValidation","State":"closed","Body":"Fixes https://github.com/dotnet/corefx/projects/3#card-16514556\r\n\r\nThe shared framework validation logic is outdated and depends on old repo conventions. Additionally it depends on buildtools which we don't have anymore in corefx. Even though I remove it here we can bring it back in a revised form if we need it again.","Url":"https://github.com/dotnet/corefx/pull/35747","RelatedDescription":"Closed or merged PR \"Remove SharedFrameworkValidation\" (#35747)"},{"Id":"416872176","IsPullRequest":true,"CreatedAt":"2019-03-04T16:03:03","Actor":"TylerBrinkley","Number":"35754","RawContent":null,"Title":"Removed need for Nullable converters in Json serialization","State":"open","Body":"Added support for Nullable<T> properties where a Nullable converter is no longer required.\r\n\r\nAdded a generic and non-generic enum converter.\r\n\r\nSimplified default converters.\r\n\r\nExpands on #35609.","Url":"https://github.com/dotnet/corefx/pull/35754","RelatedDescription":"Open PR \"Removed need for Nullable converters in Json serialization\" (#35754)"},{"Id":"416814012","IsPullRequest":true,"CreatedAt":"2019-03-04T15:19:44","Actor":"dotnet-maestro[bot]","Number":"35752","RawContent":null,"Title":"[master] Update dependencies from  1 repositories","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://dnceng@dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n\r\n- optimization.windows_nt-x64.IBC.CoreFx - 99.99.99-master-20190304.1\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/35752","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from  1 repositories\" (#35752)"},{"Id":"416806765","IsPullRequest":true,"CreatedAt":"2019-03-04T15:07:31","Actor":"dotnet-maestro[bot]","Number":"35750","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- Microsoft.NETCore.Platforms - 3.0.0-preview4.19153.8\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/35750","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#35750)"},{"Id":"416812614","IsPullRequest":false,"CreatedAt":"2019-03-04T13:55:43","Actor":"jeremyVignelles","Number":"35751","RawContent":null,"Title":"Support for ISO8601 durations in TimeSpan","State":"open","Body":"# Rationale\r\nAs far as I know, there is currently no support for ISO8601 durations for `TimeSpan.Parse` and `TimeSpan.ToString`.\r\n\r\nPer [wikipedia's definition](https://en.wikipedia.org/wiki/ISO_8601#Durations) , it would allow to write durations like `P10M1D` for a duration of ten month and one day, `P1DT2H10M` for 1 day, 2 hours and 10 minutes, or `PT0,5M` for 30 seconds.\r\n\r\n# Proposition\r\n\r\n- Make `TimeSpan.Parse()` accept arguments like the values quoted above\r\n- Create a new `ToString()` format specifier to output values like `P1DT2H` or, if it is not possible for compatibility reasons, add a new `.ToISOString()` method.\r\n\r\n# Use cases\r\n\r\n- Interoperability with other language and tools by using a standard for representing durations.\r\n   - [PHP's DateInterval](http://php.net/manual/fr/dateinterval.construct.php)\r\n   - [Java's Duration.parse](https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html#parse-java.lang.CharSequence-)\r\n   - [moment.js](https://momentjs.com/docs/#/durations/creating/)\r\n- Allows to fix a [JSON deserialization issue](https://github.com/JamesNK/Newtonsoft.Json/issues/863) in the popular's JSON.net library\r\n- Avoids a reference to `XmlConvert.ToString()` to convert this, as suggested [here](https://stackoverflow.com/questions/12466188/how-do-i-convert-an-iso8601-timespan-to-a-c-sharp-timespan)","Url":"https://github.com/dotnet/corefx/issues/35751","RelatedDescription":"Open issue \"Support for ISO8601 durations in TimeSpan\" (#35751)"},{"Id":"416783253","IsPullRequest":false,"CreatedAt":"2019-03-04T12:41:17","Actor":"ViktorHofer","Number":"35748","RawContent":null,"Title":"Make sure that all throwing exception types are serializable ","State":"open","Body":"I think I saw at least one which wasn't serializable.","Url":"https://github.com/dotnet/corefx/issues/35748","RelatedDescription":"Open issue \"Make sure that all throwing exception types are serializable \" (#35748)"},{"Id":"416670500","IsPullRequest":false,"CreatedAt":"2019-03-04T07:44:10","Actor":"shadow-cs","Number":"35746","RawContent":null,"Title":"Call to ValueStringBuilder.EnsureCapacity may result in unexpected (smaller) size of the buffer","State":"open","Body":"`ValueStringBuilder.EnsureCapacity` calls `Grow` with `requiredAdditionalCapacity` argument se to `capacity - _chars.Length` but `Grow` calculates the new buffer size by adding `requiredAdditionalCapacity` to `_pos`.\r\n\r\nFollowing test demonstrates the issue:\r\n\r\n```csharp\r\n        [Fact]\r\n        public void EnsureCapacity_IfRequestedCapacityWins()\r\n        {\r\n            // Note: constants used here may be dependent on minimal buffer size\r\n            // the ArrayPool is able to return.\r\n            Span<char> initialBuffer = stackalloc char[32];\r\n            var builder = new ValueStringBuilder(initialBuffer);\r\n\r\n            builder.EnsureCapacity(65);\r\n\r\n            Assert.Equal(128, builder.Capacity);\r\n        }\r\n```\r\n\r\nCurrently the `_chars` buffer will be allocated to `64` chars not `128` chars as expected.\r\n\r\nTo fix this `EnsureCapacity` should call `Grow(capacity - _pos)`.","Url":"https://github.com/dotnet/corefx/issues/35746","RelatedDescription":"Open issue \"Call to ValueStringBuilder.EnsureCapacity may result in unexpected (smaller) size of the buffer\" (#35746)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"417088055","IsPullRequest":false,"CreatedAt":"2019-03-05T02:45:32","Actor":"ivanbasov","Number":"33864","RawContent":null,"Title":"provide a unit test for \"Fix completion at the start of readonly documents\"","State":"open","Body":"Here is a scenario:\r\n\r\n1. Create a solution of two independent console applications.\r\n2. Do not build application 1\r\n3. Start debugging application 2 and stop at a break point\r\n4. Go to application 1 in editor and set cursor at position = 0\r\n5. Try to type anything.\r\n6. Get \"Changes are not allowed if the project wan't built when debugging started\"\r\n7. Hit Enter many times: once to close the dialog and the next one to attempt editing again (the cursor must be in the beginning of the file) , again and again.\r\n\r\nHere is the fix: https://github.com/dotnet/roslyn/pull/33830\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/809690 should fix the issue on the Editor side as well","Url":"https://github.com/dotnet/roslyn/issues/33864","RelatedDescription":"Open issue \"provide a unit test for \"Fix completion at the start of readonly documents\"\" (#33864)"},{"Id":"417083354","IsPullRequest":false,"CreatedAt":"2019-03-05T02:24:45","Actor":"ivanbasov","Number":"33863","RawContent":null,"Title":"Provide a unit test for \"Restore original behavior of Shift+Enter during completion\"","State":"open","Body":"#33823 enables an integration test. It would be great to provide a unit test as well","Url":"https://github.com/dotnet/roslyn/issues/33863","RelatedDescription":"Open issue \"Provide a unit test for \"Restore original behavior of Shift+Enter during completion\"\" (#33863)"},{"Id":"417082884","IsPullRequest":false,"CreatedAt":"2019-03-05T02:22:43","Actor":"ivanbasov","Number":"33862","RawContent":null,"Title":"Revert workaround for \"Restore original behavior of Shift+Enter during completion\" when fix available","State":"open","Body":"Revert #33828 when  https://devdiv.visualstudio.com/DevDiv/_workitems/edit/809579 will be available on the Editor side","Url":"https://github.com/dotnet/roslyn/issues/33862","RelatedDescription":"Open issue \"Revert workaround for \"Restore original behavior of Shift+Enter during completion\" when fix available\" (#33862)"},{"Id":"417079702","IsPullRequest":false,"CreatedAt":"2019-03-05T02:09:04","Actor":"ivanbasov","Number":"33861","RawContent":null,"Title":"Add a unit test for Async completion fails to scroll the caret into view","State":"open","Body":"There is an integration test enabled with #33827 \r\nIt would be great to have a unit test as well.","Url":"https://github.com/dotnet/roslyn/issues/33861","RelatedDescription":"Open issue \"Add a unit test for Async completion fails to scroll the caret into view\" (#33861)"},{"Id":"417075361","IsPullRequest":false,"CreatedAt":"2019-03-05T01:48:58","Actor":"shyamnamboodiripad","Number":"33860","RawContent":null,"Title":"Move service hub code over to StreamJsonRpc v2.0","State":"open","Body":"This would help derived unit testing services (live unit testing, source based discovery) to consume StreamJsonRpc v2.0.","Url":"https://github.com/dotnet/roslyn/issues/33860","RelatedDescription":"Open issue \"Move service hub code over to StreamJsonRpc v2.0\" (#33860)"},{"Id":"417072542","IsPullRequest":true,"CreatedAt":"2019-03-05T01:36:33","Actor":"jaredpar","Number":"33859","RawContent":null,"Title":"Move ILASMDeploy to netcoreapp3.0","State":"open","Body":"The deploy project must match the target framework of the binary that is\r\nreferenced otherwise `ilasm` on startup will crash with the following\r\nerror message:\r\n\r\n```\r\nError: Fail to initialize CoreCLR\r\nFailed to initialize Assembler\r\n```","Url":"https://github.com/dotnet/roslyn/pull/33859","RelatedDescription":"Open PR \"Move ILASMDeploy to netcoreapp3.0\" (#33859)"},{"Id":"417070619","IsPullRequest":false,"CreatedAt":"2019-03-05T01:27:47","Actor":"tmat","Number":"33858","RawContent":null,"Title":"Move wrap/unwrap parameter to a sub-menu in the context menu","State":"open","Body":"**Version Used**: \r\n![image](https://user-images.githubusercontent.com/41759/53774177-4ed95200-3ea2-11e9-9bc3-fdc843540b3f.png)\r\n\r\nI don't think these fixes are important enough to be the ordered first in the context menu.\r\n\r\n![image](https://user-images.githubusercontent.com/41759/53774157-4254f980-3ea2-11e9-9359-65c349a91ae2.png)\r\n\r\nI'd rather see them moved to `Change formatting` sub-menu, which should itself be the last item of the context menu.\r\n","Url":"https://github.com/dotnet/roslyn/issues/33858","RelatedDescription":"Open issue \"Move wrap/unwrap parameter to a sub-menu in the context menu\" (#33858)"},{"Id":"417050190","IsPullRequest":true,"CreatedAt":"2019-03-05T01:00:08","Actor":"dotnet-bot","Number":"33855","RawContent":null,"Title":"Merge master to features/readonly-members","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/readonly-members.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/readonly-members\ngit reset --hard upstream/features/readonly-members\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/readonly-members --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33855","RelatedDescription":"Closed or merged PR \"Merge master to features/readonly-members\" (#33855)"},{"Id":"417062295","IsPullRequest":false,"CreatedAt":"2019-03-05T00:51:38","Actor":"AmadeusW","Number":"33857","RawContent":null,"Title":"Integration tests cannot run from Test Explorer due to build error","State":"open","Body":"**Version Used**: VS 16.0.0 Preview 4.1- 28701.123.d16.0\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. ./Restore.cmd\r\n2. ./Build.cmd\r\n3. Open Roslyn.sln\r\n4. Run CSharpIntelliSense tests in Test Explorer\r\n\r\n**Expected Behavior**:\r\nTests run\r\n\r\n**Actual Behavior**:\r\n\r\nCommand line build succeeds.\r\n```\r\n64>------ Build started: Project: Roslyn.VisualStudio.Next.UnitTests, Configuration: Debug Any CPU ------\r\n63>C:\\Users\\amwieczo\\.nuget\\packages\\microsoft.vssdk.buildtools\\15.8.68-develop-g109a00ff\\tools\\vssdk\\Microsoft.VsSDK.targets(80,5): warning VSSDK1018: Targets version (1.0.428.39440) and build task version (1.0.453.22492) do not match.  Restarting Visual Studio could help fix this issue.\r\n63>C:\\Users\\amwieczo\\.nuget\\packages\\microsoft.vssdk.buildtools\\15.8.68-develop-g109a00ff\\tools\\vssdk\\Microsoft.VsSDK.targets(84,5): warning VSSDK1018: Targets version (15.8.68.39440) and build task version (15.7.104.22492) do not match.  Restarting Visual Studio could help fix this issue.\r\n63>Roslyn.VisualStudio.RemoteHostClientMock -> D:\\src\\roslyn\\artifacts\\bin\\Roslyn.VisualStudio.RemoteHostClientMock\\Debug\\net472\\Roslyn.VisualStudio.RemoteHostClientMock.dll\r\n63>C:\\Users\\amwieczo\\.nuget\\packages\\microsoft.vssdk.buildtools\\15.8.68-develop-g109a00ff\\tools\\vssdk\\Microsoft.VsSDK.targets(625,5): error MSB4062: The \"GenerateFileManifest\" task could not be loaded from the assembly C:\\Users\\amwieczo\\.nuget\\packages\\microsoft.vssdk.buildtools\\15.8.68-develop-g109a00ff\\tools\\vssdk\\Microsoft.VisualStudio.Sdk.BuildTasks.dll.  Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask.\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/33857","RelatedDescription":"Open issue \"Integration tests cannot run from Test Explorer due to build error\" (#33857)"},{"Id":"417050317","IsPullRequest":false,"CreatedAt":"2019-03-05T00:01:01","Actor":"sharwell","Number":"33856","RawContent":null,"Title":"FailFast in integration tests (ProjectId.ReadFrom)","State":"open","Body":"**Version Used**: Occurred in integration test build for #33834\r\n\r\n**Steps to Reproduce**:\r\n\r\n```\r\nEvent Time (UTC): 3/4/2019 10:39:49 PM\r\nEvent ID: 1025\r\nData: Application: devenv.exe\r\nFramework Version: v4.0.30319\r\nDescription: The application requested process termination through System.Environment.FailFast(string message).\r\nMessage: System.Exception: Unexpected value 'UInt16' of type 'Roslyn.Utilities.ObjectWriter+EncodingKind'\r\nStack:\r\n   at System.Environment.FailFast(System.String, System.Exception)\r\n   at Microsoft.CodeAnalysis.FailFast.OnFatalException(System.Exception)\r\n   at Microsoft.CodeAnalysis.ErrorReporting.FatalError.Report(System.Exception, System.Action`1<System.Exception>)\r\n   at Microsoft.CodeAnalysis.ErrorReporting.FatalError.Report(System.Exception)\r\n   at Microsoft.VisualStudio.IntegrationTest.Setup.IntegrationTestTraceListener.Exit(System.String)\r\n   at Microsoft.VisualStudio.IntegrationTest.Setup.IntegrationTestTraceListener.Fail(System.String, System.String)\r\n   at System.Diagnostics.TraceListener.Fail(System.String)\r\n   at System.Diagnostics.TraceInternal.Fail(System.String)\r\n   at System.Diagnostics.Debug.Assert(Boolean, System.String)\r\n   at Roslyn.Utilities.ExceptionUtilities.UnexpectedValue(System.Object)\r\n   at Roslyn.Utilities.ObjectReader.ReadStringValue(EncodingKind)\r\n   at Roslyn.Utilities.ObjectReader.ReadStringValue()\r\n   at Roslyn.Utilities.ObjectReader.ReadString()\r\n   at Microsoft.CodeAnalysis.ProjectId.ReadFrom(Roslyn.Utilities.ObjectReader)\r\n   at Microsoft.CodeAnalysis.DocumentId.ReadFrom(Roslyn.Utilities.ObjectReader)\r\n   at Microsoft.CodeAnalysis.Diagnostics.DiagnosticResultSerializer.Deserialize(Roslyn.Utilities.ObjectReader, Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticDataSerializer, Microsoft.CodeAnalysis.Project, System.Threading.CancellationToken)\r\n   at Microsoft.CodeAnalysis.Diagnostics.DiagnosticResultSerializer.Deserialize(Roslyn.Utilities.ObjectReader, System.Collections.Generic.IDictionary`2<System.String,Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer>, Microsoft.CodeAnalysis.Project, Microsoft.CodeAnalysis.VersionStamp, System.Threading.CancellationToken)\r\n   at Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer+InProcOrRemoteHostAnalyzerRunner+<GetCompilerAnalysisResultAsync>d__11.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultMap`2[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResult, Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]], Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].Start[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.__Canon ByRef)\r\n   at Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer+InProcOrRemoteHostAnalyzerRunner.GetCompilerAnalysisResultAsync(System.IO.Stream, System.Collections.Generic.Dictionary`2<System.String,Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer>, Microsoft.CodeAnalysis.Project, System.Threading.CancellationToken)\r\n   at Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer+InProcOrRemoteHostAnalyzerRunner+<>c__DisplayClass8_1.<AnalyzeOutOfProcAsync>b__1(System.IO.Stream, System.Threading.CancellationToken)\r\n   at Microsoft.CodeAnalysis.Remote.Extensions+<InvokeAsync>d__1`1[[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultMap`2[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResult, Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]], Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.Threading.Tasks.VoidTaskResult)\r\n   at System.Threading.Tasks.TaskFactory`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].FromAsyncCoreLogic(System.IAsyncResult, System.Func`2<System.IAsyncResult,System.Threading.Tasks.VoidTaskResult>, System.Action`1<System.IAsyncResult>, System.Threading.Tasks.Task`1<System.Threading.Tasks.VoidTaskResult>, Boolean)\r\n   at System.Threading.Tasks.TaskFactory`1+<>c__DisplayClass35_0[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].<FromAsyncImpl>b__0(System.IAsyncResult)\r\n   at System.IO.Pipes.NamedPipeServerStream.AsyncWaitForConnectionCallback(UInt32, UInt32, System.Threading.NativeOverlapped*)\r\n   at System.Threading._IOCompletionCallback.PerformIOCompletionCallback(UInt32, UInt32, System.Threading.NativeOverlapped*)\r\n```","Url":"https://github.com/dotnet/roslyn/issues/33856","RelatedDescription":"Open issue \"FailFast in integration tests (ProjectId.ReadFrom)\" (#33856)"},{"Id":"417045213","IsPullRequest":false,"CreatedAt":"2019-03-04T23:41:17","Actor":"davkean","Number":"33854","RawContent":null,"Title":"DesignerAttributeIncrementalAnalyzer needs to consume the new mechanism for registering \"sub type\" for CPS projects","State":"open","Body":"For performance reasons we opt'd DesignerAttributeIncrementalAnalyzer out of running for CPS projects: https://github.com/dotnet/roslyn/blob/5abb8f9480ade51baf5011d3e525340d933744c8/src/VisualStudio/Core/Def/Implementation/DesignerAttribute/DesignerAttributeIncrementalAnalyzer.cs#L82.\r\n\r\nIn https://devdiv.visualstudio.com/DevDiv/_git/CPS/pullrequest/167537, we've added a new mechanism for registering these attributes on a background thread and in a batch. This avoids CPS from evaluating and running design-time builds constantly while the analyzer is running. Roslyn needs to consume this new API so that our end-to-end for Windows Forms works.\r\n\r\n@jinujoseph @heejaechang \r\n\r\n@lifengl @heejaechang What agreement did we come to for Rolsyn to actually consume the API? They don't have a dependency on CPS yet.","Url":"https://github.com/dotnet/roslyn/issues/33854","RelatedDescription":"Open issue \"DesignerAttributeIncrementalAnalyzer needs to consume the new mechanism for registering \"sub type\" for CPS projects\" (#33854)"},{"Id":"417027888","IsPullRequest":true,"CreatedAt":"2019-03-04T22:46:04","Actor":"333fred","Number":"33853","RawContent":null,"Title":"Merge master","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/33853","RelatedDescription":"Open PR \"Merge master\" (#33853)"},{"Id":"417020935","IsPullRequest":false,"CreatedAt":"2019-03-04T22:25:01","Actor":"dpoeschl","Number":"33852","RawContent":null,"Title":"Regex Completion + Async Completion = Failure to trigger on `[` in VB","State":"open","Body":"**Version Used**: Visual Studio 2019 Preview 4\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Paste VB code:\r\n\r\n```VB\r\nImports System.Text.RegularExpressions\r\nClass C\r\n    Sub M()\r\n        Dim r = New Regex(\"$$\")\r\n    End Sub\r\nEnd Class\r\n```\r\n\r\n2. Remove the `$$` and type `[` at that location\r\n\r\n**Expected Behavior**: Completion should show\r\n**Actual Behavior**: Completion does not show\r\n\r\n**Notes**:\r\n\r\nThis is related to a couple test failures for VB, including `TestCaretPlacement` and `OnlyClasses`.\r\n\r\nCompletion does work, but just not when triggered on `[`. For example, try triggering with `\\` instead. In Old Completion, it correctly triggers on `[`.\r\n\r\nI commented out the following line, and completion started triggering on `[` (but I don't know what else would go wrong as a result):\r\nhttps://github.com/dotnet/roslyn/blob/6752c0f7c544b36ff574603d43d04a8c4b217cf2/src/Features/Core/Portable/EmbeddedLanguages/RegularExpressions/RegexEmbeddedCompletionProvider.cs#L32\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/33852","RelatedDescription":"Open issue \"Regex Completion + Async Completion = Failure to trigger on `[` in VB\" (#33852)"},{"Id":"417006855","IsPullRequest":false,"CreatedAt":"2019-03-04T21:45:27","Actor":"dpoeschl","Number":"33851","RawContent":null,"Title":"Semicolon typed mid-expression goes to an unexpected location","State":"open","Body":"**Version Used**: Visual Studio 2019 Preview 4 Build 28701.123.d16.0\r\n\r\n**Repro**: \r\nI hit <kbd>;</kbd> between the two invocations in this declaration:\r\n\r\n![semicolonweirdlocation](https://user-images.githubusercontent.com/235241/53765071-d794c580-3e83-11e9-8175-361e64f25bc0.gif)\r\n\r\n**Expected**: The semicolon is inserted at that location. In my scenario, I could then continue typing a down arrow and then comment current line, thus reducing the declaration to just the first call.\r\n\r\n**Actual**: The semicolon goes to the end of the entire declaration. Also, it's not done in a two-step undo, so ctrl+z doesn't put the semicolon back where I typed it.","Url":"https://github.com/dotnet/roslyn/issues/33851","RelatedDescription":"Open issue \"Semicolon typed mid-expression goes to an unexpected location\" (#33851)"},{"Id":"416967446","IsPullRequest":true,"CreatedAt":"2019-03-04T19:57:17","Actor":"sharwell","Number":"33850","RawContent":null,"Title":"Close the Find Source window in case it's open","State":"open","Body":"See #33785\r\n\r\nThis change changes the problematic case from a *test hang* to a *flaky test*, which is a slight improvement.","Url":"https://github.com/dotnet/roslyn/pull/33850","RelatedDescription":"Open PR \"Close the Find Source window in case it's open\" (#33850)"},{"Id":"416952764","IsPullRequest":false,"CreatedAt":"2019-03-04T19:18:01","Actor":"sharwell","Number":"33849","RawContent":null,"Title":"Failed tests in ADO do not render newlines correctly","State":"open","Body":"The rendering works for stack traces but not for the test output.\r\n\r\n![image](https://user-images.githubusercontent.com/1408396/53756875-e37e8880-3e7f-11e9-8f2f-4cea4a07b274.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/33849","RelatedDescription":"Open issue \"Failed tests in ADO do not render newlines correctly\" (#33849)"},{"Id":"416935775","IsPullRequest":true,"CreatedAt":"2019-03-04T18:33:39","Actor":"NRKirby","Number":"33848","RawContent":null,"Title":"Update PowerShell version","State":"open","Body":"Update the PowerShell version in the [Building, Debugging, and Testing on Windows](https://github.com/dotnet/roslyn/blob/e8f03e407226a43c122ce004c66e1795883f564b/docs/contributing/Building%2C%20Debugging%2C%20and%20Testing%20on%20Windows.md) docs to 5.0 as per issue #32241\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/33848","RelatedDescription":"Open PR \"Update PowerShell version\" (#33848)"},{"Id":"416923509","IsPullRequest":false,"CreatedAt":"2019-03-04T18:00:22","Actor":"cston","Number":"33847","RawContent":null,"Title":"Use distinct warning message for using `default` for unconstrained type parameter","State":"open","Body":"The existing warning is used for `null` plus `default` and reference types plus unconstrained type parameters. We should use distinct warnings to reduce confusion.\r\n```C#\r\nclass Program\r\n{\r\n    static void F<T>(T t)\r\n    {\r\n    }\r\n    static void G<T>()\r\n    {\r\n        F<T>(default);\r\n    }\r\n}\r\n```\r\n```\r\nwarning CS8625: Cannot convert null literal to non-nullable reference or\r\n    unconstrained type parameter.\r\n```","Url":"https://github.com/dotnet/roslyn/issues/33847","RelatedDescription":"Open issue \"Use distinct warning message for using `default` for unconstrained type parameter\" (#33847)"},{"Id":"416901357","IsPullRequest":false,"CreatedAt":"2019-03-04T17:06:08","Actor":"sharwell","Number":"33846","RawContent":null,"Title":"Heavy allocations in UnboundLambdaState.CanonicallyCompareDiagnostics","State":"open","Body":"**Version Used**: 15.9.7\r\n\r\n:link: Originally filed as https://developercommunity.visualstudio.com/content/problem/463943/significant-wait-dialogs-all-projects.html\r\n\r\n`UnboundLambdaState.CanonicallyCompareDiagnostics` is responsible for nearly 8GB of allocations (14% of total) in this trace. Nearly all of this number comes from `CSDiagnostic.ToString()` calling `DiagnosticFormatter.Format`. Nested within those we find:\r\n\r\n* `CSharp.ErrorFacts.GetMessage` calls `Enum.ToString` (4.5GB)\r\n* `DiagnosticFormatter.Format` calls `string.Format` (1.6GB)\r\n* `DiagnosticInfo.GetMessage` calls `string.Format` (0.64GB)\r\n* `DiagnosticFormatter.Format` calls `DiagnosticFormatter.FormatSourceSpan` (0.4GB)\r\n* `DiagnosticFormatter.Format` calls `DiagnosticFormatter.GetMessagePrefix` (0.4GB)\r\n","Url":"https://github.com/dotnet/roslyn/issues/33846","RelatedDescription":"Open issue \"Heavy allocations in UnboundLambdaState.CanonicallyCompareDiagnostics\" (#33846)"},{"Id":"416833046","IsPullRequest":false,"CreatedAt":"2019-03-04T14:41:04","Actor":"gabirx","Number":"33845","RawContent":null,"Title":"Renamer.RenameSymbolAsync should not rename the use of a delegate with a different number of type parameters.","State":"open","Body":"**Version Used**: \r\n2.10.0\r\n**Steps to Reproduce**:\r\n       string originalCode = @\"\r\n         delegate void Action<T1, T2>(T1 t1, T2 t2);\r\n    class Class1<T> \r\n    { \r\n        public static readonly Action<Exception> Throw = delegate(Exception ex) { throw ex; };\r\n        private Action<T> _onNext;\r\n        Class1(Action<T> onNext, Action<Exception> onError)\r\n        {\r\n            this._onNext = onNext;\r\n        }\r\n    }\r\n        \";\r\n            var expectedCode = @\"\r\n         delegate void Action2<T1, T2>(T1 t1, T2 t2);\r\n    class Class1<T> \r\n    { \r\n        public static readonly Action<Exception> Throw = delegate(Exception ex) { throw ex; };\r\n        private Action<T> _onNext;\r\n        Class1(Action<T> onNext, Action<Exception> onError)\r\n        {\r\n            this._onNext = onNext;\r\n        }\r\n    }\r\n        \";\r\n            var workspace = new AdhocWorkspace();\r\n            string projName = \"NewProject\";\r\n            var projectId = ProjectId.CreateNewId();\r\n            var versionStamp = VersionStamp.Create();\r\n            var projectInfo = ProjectInfo.Create(projectId, versionStamp, projName, projName, LanguageNames.CSharp);\r\n            var newProject = workspace.AddProject(projectInfo);\r\n            var sourceText = SourceText.From(originalCode);\r\n\r\n            var newDocument = workspace.AddDocument(newProject.Id, \"NewFile.cs\", sourceText);\r\n            \r\n            Document doc = newDocument;\r\n\r\n            DelegateDeclarationSyntax decl = doc.GetSyntaxRootAsync().Result.\r\n                DescendantNodes().\r\n                OfType<DelegateDeclarationSyntax>().First(x => x.Identifier.Text == \"Action\");\r\n            var semanticModel = doc.GetSemanticModelAsync().Result;\r\n            var typeSymbol = semanticModel.GetDeclaredSymbol(decl);\r\n\r\n            string oldName = typeSymbol.Name;\r\n            string newName = oldName + \"2\";\r\n\r\n\r\n            var newSolution = Renamer.RenameSymbolAsync(doc.Project.Solution, typeSymbol, newName, null).Result;\r\n            var modifiedDoc = newSolution.Projects.First().Documents.First();\r\n\r\n            ;\r\n            Assert.Equal(expectedCode, modifiedDoc.GetTextAsync().Result.ToString());\r\n        }\r\n\r\n**Expected Behavior**:\r\nTo rename only the definition of the delegate \"delegate void Action<T1, T2>(T1 t1, T2 t2);\" . The use of the action<T> delegate remains unchanged.\r\n**Actual Behavior**:\r\nThe delegate definition is renamed to Action2<T1, T2>. And the references to the action<T> delegate to Action2<T> are renamed","Url":"https://github.com/dotnet/roslyn/issues/33845","RelatedDescription":"Open issue \"Renamer.RenameSymbolAsync should not rename the use of a delegate with a different number of type parameters.\" (#33845)"},{"Id":"416768510","IsPullRequest":true,"CreatedAt":"2019-03-04T13:30:07","Actor":"dotnet-bot","Number":"33844","RawContent":null,"Title":"Merge master to features/readonly-members","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/readonly-members.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/readonly-members\ngit reset --hard upstream/features/readonly-members\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/readonly-members --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33844","RelatedDescription":"Closed or merged PR \"Merge master to features/readonly-members\" (#33844)"},{"Id":"416733438","IsPullRequest":false,"CreatedAt":"2019-03-04T10:29:44","Actor":"Tragetaschen","Number":"33843","RawContent":null,"Title":"Invalid IDE0059 (value never used) with using and local function capture","State":"open","Body":"**Version Used**: \r\n16.0.0 RC\r\n\r\n**Steps to Reproduce**:\r\n\r\n```csharp\r\nprivate class Disposable: IDisposable { public void Dispose() { } }\r\npublic int M()\r\n{\r\n    var result = 0;\r\n    void append() => result += 1; // IDE0059 for 'result'\r\n    using (var a = new Disposable())\r\n        append();\r\n    return result;\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nNo message, everything is used as expected.\r\n\r\n**Actual Behavior**:\r\nIDE0059 is triggered within the local function. Applying the code fix changes the local function to the invalid\r\n```csharp\r\nvoid append() => 1;\r\n```\r\n\r\nNot only the using is required, but also the assignment within. Removing `var a = ` from the sample also removes IDE0059.","Url":"https://github.com/dotnet/roslyn/issues/33843","RelatedDescription":"Open issue \"Invalid IDE0059 (value never used) with using and local function capture\" (#33843)"},{"Id":"416652941","IsPullRequest":true,"CreatedAt":"2019-03-04T06:38:03","Actor":"sharwell","Number":"33842","RawContent":null,"Title":"Use vs-threading for designer manipulation in integration tests","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/33842","RelatedDescription":"Open PR \"Use vs-threading for designer manipulation in integration tests\" (#33842)"},{"Id":"416649224","IsPullRequest":false,"CreatedAt":"2019-03-04T06:22:21","Actor":"pCYSl5EDgo","Number":"33841","RawContent":null,"Title":"Roslyn cannot interpret some kinds of assembly written in IL","State":"open","Body":"I tried to define a struct which inherits another struct in IL.\r\nRoslyn shows very strange behaviour when interpreting that .dll file.\r\n\r\n**Version Used**: \r\nRoslyn 3.0.0-beta4-19126-05\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Write IL code and compile it with ilasm.exe.\r\n https://gist.github.com/pCYSl5EDgo/a271e7f713926117989970a6f712dafa\r\n2.  Set the appropriate reference to the DLL from any project.\r\n3.  Read metadata of A0.\r\n\r\n**Expected Behavior**:\r\n`public struct A0\r\n{\r\n    public static A0 GetDefaultA0();\r\n}`\r\n\r\n**Actual Behavior**:\r\n`public static struct A0\r\n{\r\n    public static A0 GetDefaultA0();\r\n}`\r\n\r\n![d0yyuujuyaekhhq](https://user-images.githubusercontent.com/31692496/53714103-85a66c80-3e90-11e9-90ce-3fa6ba15f8b4.jpg)\r\n","Url":"https://github.com/dotnet/roslyn/issues/33841","RelatedDescription":"Open issue \"Roslyn cannot interpret some kinds of assembly written in IL\" (#33841)"},{"Id":"416596933","IsPullRequest":true,"CreatedAt":"2019-03-04T01:51:38","Actor":"agocke","Number":"33840","RawContent":null,"Title":"Replace Stack with ArrayBuilder in GreenNode walker","State":"open","Body":"This has shown up as a hot allocation path in a few different traces.\r\nThis change amortizes the allocations by using a pooled ArrayBuilder\r\ninstead of allocating a new Stack every time.\r\n\r\nThe following benchmarks seem to support the hypothesis:\r\n\r\nBefore change:\r\n\r\n```\r\nBenchmarkDotNet=v0.11.1, OS=Windows 10.0.17134.590 (1803/April2018Update/Redstone4)\r\nAMD Ryzen 7 1800X Eight-Core Processor (Max: 3.60GHz), 1 CPU, 16 logical and 8 physical cores\r\n.NET Core SDK=2.2.103\r\n  [Host] : .NET Core 2.1.8 (CoreCLR 4.6.27317.03, CoreFX 4.6.27317.03), 64bit RyuJIT\r\n  Core   : .NET Core 2.1.8 (CoreCLR 4.6.27317.03, CoreFX 4.6.27317.03), 64bit RyuJIT\r\n\r\nJob=Core  Runtime=Core  Server=True\r\n\r\n                Method |      Mean |     Error |    StdDev |     Gen 0 | Allocated |\r\n---------------------- |----------:|----------:|----------:|----------:|----------:|\r\n               Parsing |  65.25 ms |  1.301 ms |  2.568 ms |         - |   6.57 MB |\r\n CompileMethodsAndEmit | 634.00 ms | 12.640 ms | 22.468 ms | 1000.0000 |  40.29 MB |\r\n     SerializeMetadata | 200.52 ms |  3.656 ms |  3.241 ms | 1000.0000 |  17.39 MB |\r\n```\r\n\r\nAfter change:\r\n\r\n```\r\nBenchmarkDotNet=v0.11.1, OS=Windows 10.0.17134.590 (1803/April2018Update/Redstone4)\r\nAMD Ryzen 7 1800X Eight-Core Processor (Max: 3.60GHz), 1 CPU, 16 logical and 8 physical cores\r\n.NET Core SDK=2.2.103\r\n  [Host] : .NET Core 2.1.8 (CoreCLR 4.6.27317.03, CoreFX 4.6.27317.03), 64bit RyuJIT\r\n  Core   : .NET Core 2.1.8 (CoreCLR 4.6.27317.03, CoreFX 4.6.27317.03), 64bit RyuJIT\r\n\r\nJob=Core  Runtime=Core  Server=True\r\n\r\n                Method |      Mean |     Error |    StdDev |     Gen 0 | Allocated |\r\n---------------------- |----------:|----------:|----------:|----------:|----------:|\r\n               Parsing |  67.26 ms |  1.344 ms |  3.321 ms |         - |   2.59 MB |\r\n CompileMethodsAndEmit | 627.23 ms | 13.307 ms | 23.995 ms | 1000.0000 |  28.85 MB |\r\n     SerializeMetadata | 206.02 ms |  4.087 ms |  5.991 ms | 1000.0000 |  17.39 MB |\r\n```","Url":"https://github.com/dotnet/roslyn/pull/33840","RelatedDescription":"Open PR \"Replace Stack with ArrayBuilder in GreenNode walker\" (#33840)"},{"Id":"416583245","IsPullRequest":true,"CreatedAt":"2019-03-04T01:30:05","Actor":"dotnet-bot","Number":"33838","RawContent":null,"Title":"Merge dev16.0-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.0-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/dev16.0-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33838","RelatedDescription":"Closed or merged PR \"Merge dev16.0-vs-deps to master-vs-deps\" (#33838)"},{"Id":"416583732","IsPullRequest":false,"CreatedAt":"2019-03-04T00:04:27","Actor":"huoyaoyuan","Number":"33839","RawContent":null,"Title":"Intendation for switch expression is not good in expression bodied method","State":"open","Body":"**Version Used**: \r\nVS 2019 RC\r\n![image](https://user-images.githubusercontent.com/5644458/53704071-b3b98b80-3e53-11e9-8187-a382808d578c.png)\r\n![image](https://user-images.githubusercontent.com/5644458/53704073-c2a03e00-3e53-11e9-942c-e4bcbf396cc6.png)\r\n![image](https://user-images.githubusercontent.com/5644458/53704077-d350b400-3e53-11e9-9810-2b2c682df721.png)\r\nThe first case should be considered mis-aligned, comparing to object initializer.","Url":"https://github.com/dotnet/roslyn/issues/33839","RelatedDescription":"Open issue \"Intendation for switch expression is not good in expression bodied method\" (#33839)"},{"Id":"416458413","IsPullRequest":false,"CreatedAt":"2019-03-03T07:46:30","Actor":"ilopez","Number":"33837","RawContent":null,"Title":"Missing \"Analyzer with Code Fix\" project template in VS 2017 (15.9.7)","State":"closed","Body":"Visual Studio 2017 version 15.9.7: \r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Clean Visual Studio 2017 Install\r\n2. Install \"Visual Studio extension development\" and \".NET Core cross-platform development\" workloads\r\n3. Launch VS2017 and navigate to new project wizard, extensibility folder, no projects for \"Code Analyzer with Code Fix (.NET Standard)\"\r\n\r\n**Expected Behavior**: Code Analyzer project should be available to create a project.\r\n\r\n**Actual Behavior**: Option missing.\r\n\r\nReferencing:\r\nhttps://github.com/dotnet/roslyn/issues/21012\r\n\r\nInstall Settings\r\n`Microsoft Visual Studio Professional 2017 \r\nVersion 15.9.7\r\nVisualStudio.15.Release/15.9.7+28307.423\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Professional\r\n\r\nApplication Insights Tools for Visual Studio Package   8.14.20131.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Functions and Web Jobs Tools   15.9.02046.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.0.0\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61901.24070\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.9.20918.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers`\r\n","Url":"https://github.com/dotnet/roslyn/issues/33837","RelatedDescription":"Closed issue \"Missing \"Analyzer with Code Fix\" project template in VS 2017 (15.9.7)\" (#33837)"},{"Id":"416455925","IsPullRequest":true,"CreatedAt":"2019-03-03T01:30:10","Actor":"dotnet-bot","Number":"33835","RawContent":null,"Title":"Merge dev16.0-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.0-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/dev16.0-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33835","RelatedDescription":"Closed or merged PR \"Merge dev16.0-vs-deps to master-vs-deps\" (#33835)"},{"Id":"416455951","IsPullRequest":true,"CreatedAt":"2019-03-03T01:30:05","Actor":"dotnet-bot","Number":"33836","RawContent":null,"Title":"Merge master to features/readonly-members","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/readonly-members.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/readonly-members\ngit reset --hard upstream/features/readonly-members\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/readonly-members --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33836","RelatedDescription":"Closed or merged PR \"Merge master to features/readonly-members\" (#33836)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"417111320","IsPullRequest":false,"CreatedAt":"2019-03-05T04:28:23","Actor":"trampster","Number":"7121","RawContent":null,"Title":"linux-arm not supported yet.","State":"open","Body":"I'm building with the following command:\r\n\r\n    dotnet publish -c Release -r linux-arm --self-contained true\r\n\r\nI'm getting the follow message when trying to build for linux arm:\r\n\r\n    /.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27505-01/build/Microsoft.NETCore.Native.Publish.targets(65,5): error : linux-arm not supported yet. https://github.com/dotnet/corert/issues/4589\r\n\r\nThat issue link is about x86....\r\n\r\nThe readme says that Linux ARM is supported w/ RyuJIT codegen\r\n\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7121","RelatedDescription":"Open issue \"linux-arm not supported yet.\" (#7121)"},{"Id":"417104642","IsPullRequest":true,"CreatedAt":"2019-03-05T03:55:04","Actor":"sergiy-k","Number":"7120","RawContent":null,"Title":"Add scripts to set up CI with Azure Pipelines for OSX","State":"open","Body":"This adds support for OSX. To enable CI for Linux I still need to figure out the name of docker containers (or a machine pool) to use. \r\nThe eng/install-native-dependencies.sh file has been copied from the CoreCLR repo.","Url":"https://github.com/dotnet/corert/pull/7120","RelatedDescription":"Open PR \"Add scripts to set up CI with Azure Pipelines for OSX\" (#7120)"},{"Id":"417064429","IsPullRequest":false,"CreatedAt":"2019-03-05T01:47:28","Actor":"DoCode","Number":"7119","RawContent":null,"Title":"No assembly metadata is written in native output","State":"closed","Body":"It's no assembly metadata like file versions, languages, company names, product name etc.\r\n\r\nHow can this be included when compiling?","Url":"https://github.com/dotnet/corert/issues/7119","RelatedDescription":"Closed issue \"No assembly metadata is written in native output\" (#7119)"},{"Id":"416784344","IsPullRequest":true,"CreatedAt":"2019-03-04T17:41:37","Actor":"MichalStrehovsky","Number":"7115","RawContent":null,"Title":"Fix ProjectN build breaks","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7115","RelatedDescription":"Closed or merged PR \"Fix ProjectN build breaks\" (#7115)"},{"Id":"416849166","IsPullRequest":true,"CreatedAt":"2019-03-04T17:31:33","Actor":"MichalStrehovsky","Number":"7117","RawContent":null,"Title":"Remove TypeConverter entries in WebApi sample","State":"closed","Body":"These didn't appear to be needed last time I was playing with this.\r\n\r\nWe are basically down to one entry. This entry is especially annoying because it shows up every time someone wants to use LINQ expressions. Couple options:\r\n\r\n* Add a really dumb peephole IL scanner to `UsageBasedMetadataManager` a la mono/linker#223\r\n* Decide that we want an actual RD.XML parser. The embedded RD.XML manifest in System.Linq.Expressions has a line that covers this scenario. BUT: RD.XML has the unfortunate property of: not requiring types to be assembly-qualified, and requiring a whole program analysis for a bunch of constructs. Plus my motivation to write yet another type name parser is pretty low.","Url":"https://github.com/dotnet/corert/pull/7117","RelatedDescription":"Closed or merged PR \"Remove TypeConverter entries in WebApi sample\" (#7117)"},{"Id":"416882637","IsPullRequest":false,"CreatedAt":"2019-03-04T16:25:13","Actor":"filipnavara","Number":"7118","RawContent":null,"Title":"Abort trap: 6 on CoreFX / macOS","State":"open","Body":"There is recurring problem with macOS / CoreFX test builds on the CI:\r\n\r\n```\r\n07:35:02 Discovering: System.Collections.Tests\r\n07:35:03 Discovered:  System.Collections.Tests\r\n07:35:08 Starting:    System.Collections.Tests\r\n07:35:09    System.Collections.Tests.Dictionary_IDictionary_NonGeneric_Tests.ICollection_NonGeneric_CopyTo_NonZeroLowerBound [SKIP]\r\n07:35:09       Condition(s) not met: \\\"IsNonZeroLowerBoundArraySupported\\\"\r\n07:35:13    System.Collections.Tests.SortedList_Generic_Tests_Keys_AsICollection.ICollection_NonGeneric_CopyTo_NonZeroLowerBound [SKIP]\r\n07:35:13       Condition(s) not met: \\\"IsNonZeroLowerBoundArraySupported\\\"\r\n07:35:21    System.Collections.Tests.Queue_ICollection_NonGeneric_Tests.ICollection_NonGeneric_CopyTo_NonZeroLowerBound [SKIP]\r\n07:35:21       Condition(s) not met: \\\"IsNonZeroLowerBoundArraySupported\\\"\r\n07:35:30    System.Collections.Tests.SortedDictionary_Generic_Tests_Keys_AsICollection.ICollection_NonGeneric_CopyTo_NonZeroLowerBound [SKIP]\r\n07:35:30       Condition(s) not met: \\\"IsNonZeroLowerBoundArraySupported\\\"\r\n07:37:36 /Users/dotnet-bot/j/workspace/dotnet_corert/master/debug_osx10.12_corefx_prtest/tests/CoreFX/corerun: line 75: 88337 Abort trap: 6           ${TestFolderName}/native/${TestExecutable} ${TestFolderName}/${TestFileName}.dll @${TestFolderName}/${TestFileName}.rsp -xml ${LogDir}/${TestFileName}/testResults.xml -notrait category=nonnetcoreapptests -notrait category=${OSCategory} -notrait category=failing\r\n```\r\n\r\nPRs: \r\n#7115 (https://ci.dot.net/job/dotnet_corert/job/master/job/debug_osx10.12_corefx_prtest/1578/consoleFull#-8536224876a086b3e-df04-41d2-bc4d-43e8f9406d07)\r\n#7116 (https://ci.dot.net/job/dotnet_corert/job/master/job/debug_osx10.12_corefx_prtest/1576/consoleFull#-8536224876a086b3e-df04-41d2-bc4d-43e8f9406d07)\r\n#7089\r\n(https://ci.dot.net/job/dotnet_corert/job/master/job/debug_osx10.12_corefx_prtest/1539/consoleFull#-8536224876a086b3e-df04-41d2-bc4d-43e8f9406d07)\r\n","Url":"https://github.com/dotnet/corert/issues/7118","RelatedDescription":"Open issue \"Abort trap: 6 on CoreFX / macOS\" (#7118)"},{"Id":"414927790","IsPullRequest":false,"CreatedAt":"2019-03-04T14:58:27","Actor":"rainbowlee","Number":"7092","RawContent":null,"Title":"Oracle Mysql.Data System.TypeInitializationException:","State":"closed","Body":"I wrote a test Project\r\n\r\nPackage Mysql.Data\r\n\r\n### code:\r\nusing System;\r\nusing MySql;\r\n\r\nnamespace TestMysql\r\n{\r\n  class Program\r\n  {\r\n    internal static string MySqlConnectString\r\n    {\r\n      get\r\n      {\r\n        string mysqlConnString = string.Format(\"SERVER={0};UID={1};PWD={2};DATABASE={3};CHARSET=utf8;Pooling=true;Min Pool Size=10;Max Pool Size={4};\",\r\n                                    \"127.0.0.1\", \"dfds\", \"dfds\" , \"dsnode\", 10);\r\n\r\n        return mysqlConnString;\r\n      }\r\n    }\r\n\r\n    static void Main(string[] args)\r\n    {\r\n      for ( int i = 0; i < 10; i++)\r\n      {\r\n        Console.WriteLine(\"count{0}\", i);\r\n        try\r\n        {\r\n          MySql.Data.MySqlClient.MySqlConnection conn = new MySql.Data.MySqlClient.MySqlConnection(MySqlConnectString);\r\n          Console.WriteLine(\"open\");\r\n          conn.Open();\r\n          Console.WriteLine(\"close\");\r\n          conn.Close();\r\n        }\r\n\r\n        catch(Exception ex)\r\n        {\r\n          Console.WriteLine(\"MySql Connection ERROR :{0}\", ex);\r\n        }\r\n      }\r\n      Console.WriteLine(\"Hello World!\");\r\n    }\r\n  }\r\n}\r\n\r\nwhen ran , exception as follows:\r\n\r\nMySql Connection ERROR :System.TypeInitializationException: A type initializer threw an exception. To determine which type, inspect the InnerException's StackTrace property. ---> System.TypeInitializationException: A type initializer threw an exception. To determine which type, inspect the InnerException's StackTrace property. ---> System.Configuration.ConfigurationErrorsException: Configuration system failed to initialize ---> System.MissingMethodException: No parameterless constructor defined for this object.\r\n   at System.ActivatorImplementation.CreateInstance(Type, Boolean) + 0xfe\r\n   at System.Configuration.Internal.ConfigSystem.System.Configuration.Internal.IConfigSystem.Init(Type, Object[]) + 0x40\r\n   at System.Configuration.ClientConfigurationSystem..ctor() + 0x47\r\n   at System.Configuration.ConfigurationManager.EnsureConfigurationSystem() + 0x5f\r\n\r\n   --- End of inner exception stack trace ---\r\n   at System.Configuration.ConfigurationManager.EnsureConfigurationSystem() + 0xfa\r\n   at System.Configuration.ConfigurationManager.PrepareConfigSystem() + 0x13\r\n   at System.Configuration.ConfigurationManager.GetSection(String) + 0x25\r\n   at MySql.Data.MySqlClient.MySqlConfiguration..cctor() + 0x11\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0xd5\r\n\r\n   --- End of inner exception stack trace ---\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0x18d\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.CheckStaticClassConstructionReturnGCStaticBase(StaticClassConstructionContext*, Object) + 0xd\r\n   at MySql.Data.MySqlClient.Replication.ReplicationManager..cctor() + 0x6a\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0xd5\r\n\r\n   --- End of inner exception stack trace ---\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0x18d\r\n   at System.Runtime.CompilerServices.ClassConstructorRunner.CheckStaticClassConstructionReturnNonGCStaticBase(StaticClassConstructionContext*, IntPtr) + 0xd\r\n   at MySql.Data.MySqlClient.Replication.ReplicationManager.IsReplicationGroup(String) + 0x22\r\n   at MySql.Data.MySqlClient.MySqlConnection.Open() + 0x422\r\n   at TestMysql.Program.Main(String[]) + 0x71\r\n\r\nIs there any idea for this problem? \r\n\r\n","Url":"https://github.com/dotnet/corert/issues/7092","RelatedDescription":"Closed issue \"Oracle Mysql.Data System.TypeInitializationException:\" (#7092)"},{"Id":"416834880","IsPullRequest":true,"CreatedAt":"2019-03-04T14:44:53","Actor":"MichalStrehovsky","Number":"7116","RawContent":null,"Title":" Fix native includes ","State":"open","Body":"Redoes #7057 in a way that doesn't break the closed source world.","Url":"https://github.com/dotnet/corert/pull/7116","RelatedDescription":"Open PR \" Fix native includes \" (#7116)"},{"Id":"416440240","IsPullRequest":true,"CreatedAt":"2019-03-03T14:27:45","Actor":"marek-safar","Number":"7111","RawContent":null,"Title":"Move fully managed TimerQueue implementation to shared partition","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7111","RelatedDescription":"Closed or merged PR \"Move fully managed TimerQueue implementation to shared partition\" (#7111)"},{"Id":"416503419","IsPullRequest":true,"CreatedAt":"2019-03-03T14:25:19","Actor":"Dotnet-GitSync-Bot","Number":"7114","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7114","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7114)"},{"Id":"416462154","IsPullRequest":true,"CreatedAt":"2019-03-03T05:39:41","Actor":"Dotnet-GitSync-Bot","Number":"7113","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/7113","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7113)"},{"Id":"416446656","IsPullRequest":true,"CreatedAt":"2019-03-02T23:48:21","Actor":"Dotnet-GitSync-Bot","Number":"7112","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @grant-d","Url":"https://github.com/dotnet/corert/pull/7112","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7112)"},{"Id":"416433266","IsPullRequest":true,"CreatedAt":"2019-03-02T21:09:54","Actor":"Dotnet-GitSync-Bot","Number":"7110","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/7110","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7110)"},{"Id":"416378646","IsPullRequest":true,"CreatedAt":"2019-03-02T13:24:42","Actor":"Dotnet-GitSync-Bot","Number":"7109","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7109","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7109)"},{"Id":"416322845","IsPullRequest":true,"CreatedAt":"2019-03-02T03:30:03","Actor":"Dotnet-GitSync-Bot","Number":"7108","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7108","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7108)"},{"Id":"416306984","IsPullRequest":true,"CreatedAt":"2019-03-01T23:19:54","Actor":"Dotnet-GitSync-Bot","Number":"7106","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @Foxtrek64 @marek-safar","Url":"https://github.com/dotnet/corert/pull/7106","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7106)"},{"Id":"416309160","IsPullRequest":true,"CreatedAt":"2019-03-01T22:44:49","Actor":"nattress","Number":"7107","RawContent":null,"Title":"Re-init tools when init-tools.cmd is updated","State":"open","Body":"Recent Roslyn compiler version upgrades cause build breaks on existing repos because init-tools will not run if the semaphore file is present.\r\n\r\nEmit the most recent git commit hash of init-tools.cmd to the semaphore and compare the two whenever init-tools.cmd is run. This will catch updates and re-init the tools automatically.\r\n\r\nI can implement a similar change to init-tools.sh if folks don't see a problem with this direction. These build tools are nearing end of life as I understand - it would be nice to also include updates to the CLI and build tools version text files in this logic, too, but this fixes the immediate breaks we've been seeing.","Url":"https://github.com/dotnet/corert/pull/7107","RelatedDescription":"Open PR \"Re-init tools when init-tools.cmd is updated\" (#7107)"},{"Id":"416188816","IsPullRequest":true,"CreatedAt":"2019-03-01T19:13:09","Actor":"Dotnet-GitSync-Bot","Number":"7105","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @morganbr","Url":"https://github.com/dotnet/corert/pull/7105","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7105)"},{"Id":"415951984","IsPullRequest":true,"CreatedAt":"2019-03-01T06:57:37","Actor":"Dotnet-GitSync-Bot","Number":"7104","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corert/pull/7104","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7104)"},{"Id":"415926456","IsPullRequest":true,"CreatedAt":"2019-03-01T03:40:12","Actor":"Dotnet-GitSync-Bot","Number":"7103","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @AaronRobinsonMSFT","Url":"https://github.com/dotnet/corert/pull/7103","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7103)"},{"Id":"415698046","IsPullRequest":true,"CreatedAt":"2019-03-01T03:31:32","Actor":"trylek","Number":"7099","RawContent":null,"Title":"Fix two errors in CPAOT release build of CoreCLR framework","State":"closed","Body":"1) GetClosestDefType should return Array, not Array`1, in CPAOT,\r\nas there's no Array`1 in CoreCLR CoreLib.\r\n\r\n2) We cannot resolve calls from within non-versionable inlined\r\nmethods outside the version bubble because their callee tokens\r\nare relative to the external module and cannot be encoded in the\r\nR2R image. We hit this for string.IsNullOrEmpty -> string.get_Length.\r\n\r\nI have also fixed the token context for some tokens; the context\r\nis generally specified by the calling method, not by the module\r\nbeing compiled, in the presence of inlining.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7099","RelatedDescription":"Closed or merged PR \"Fix two errors in CPAOT release build of CoreCLR framework\" (#7099)"},{"Id":"415886006","IsPullRequest":true,"CreatedAt":"2019-03-01T03:31:00","Actor":"Dotnet-GitSync-Bot","Number":"7102","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7102","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7102)"},{"Id":"415870437","IsPullRequest":true,"CreatedAt":"2019-02-28T23:29:29","Actor":"Dotnet-GitSync-Bot","Number":"7101","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @AaronRobinsonMSFT","Url":"https://github.com/dotnet/corert/pull/7101","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7101)"},{"Id":"415838861","IsPullRequest":true,"CreatedAt":"2019-02-28T22:49:30","Actor":"Dotnet-GitSync-Bot","Number":"7100","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7100","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7100)"},{"Id":"415600490","IsPullRequest":true,"CreatedAt":"2019-02-28T17:16:33","Actor":"Dotnet-GitSync-Bot","Number":"7098","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @stephentoub","Url":"https://github.com/dotnet/corert/pull/7098","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7098)"},{"Id":"415437656","IsPullRequest":false,"CreatedAt":"2019-02-28T12:31:45","Actor":"rainbowlee","Number":"7096","RawContent":null,"Title":"Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory ","State":"closed","Body":"I compie project.\r\n\r\nerror on ubantu , bu window is normal\r\n\r\n1.0.0-alpha-27427-02\r\nEXEC : error : Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory [/home/lihy/project/Server/Server/src/GameServer_dotnet.csproj]\r\n  System.DllNotFoundException: Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.InitObjWriter(String objectFilePath, String triple)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter..ctor(String objectFilePath, NodeFactory factory)\r\n     at ILCompiler.DependencyAnalysis.ObjectWriter.EmitObject(String objectFilePath, IEnumerable`1 nodes, NodeFactory factory, IObjectDumper dumper)\r\n     at ILCompiler.RyuJitCompilation.CompileInternal(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Compilation.ILCompiler.ICompilation.Compile(String outputFile, ObjectDumper dumper)\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\n/home/lihy/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-27427-02/build/Microsoft.NETCore.Native.targets(235,5): error MSB3073: The command \"\"/home/lihy/.nuget/packages/runtime.linux-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-27427-02/tools/ilc\" @\"obj/release/netcoreapp2.0/linux-x64/native/GameServer.ilc.rsp\"\" exited with code 1. [/home/lihy/project/Server/Server/src/GameServer_dotnet.csproj]\r\n","Url":"https://github.com/dotnet/corert/issues/7096","RelatedDescription":"Closed issue \"Unable to load shared library 'objwriter' or one of its dependencies. In order to help diagnose loading problems, consider setting the LD_DEBUG environment variable: libobjwriter: cannot open shared object file: No such file or directory \" (#7096)"},{"Id":"415304269","IsPullRequest":true,"CreatedAt":"2019-02-28T12:29:25","Actor":"Dotnet-GitSync-Bot","Number":"7094","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara @jkotas @jkotas @stephentoub @stephentoub","Url":"https://github.com/dotnet/corert/pull/7094","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7094)"},{"Id":"415474026","IsPullRequest":true,"CreatedAt":"2019-02-28T08:03:55","Actor":"nattress","Number":"7097","RawContent":null,"Title":"Treat enums as primitives in auto layout","State":"closed","Body":"CoreCLR removes the value type designation for enums when doing type layout. They are treated as a primitive of the enum's underlying type (the default being `System.Int32`). Since value types are placed last in auto layout, this moves enum fields up earlier in the layout.\r\n\r\nMatch this behavior for CoreRT's auto layout algorithm so that generated code refers to the same offets that will be used at runtime in CPAOT.","Url":"https://github.com/dotnet/corert/pull/7097","RelatedDescription":"Closed or merged PR \"Treat enums as primitives in auto layout\" (#7097)"},{"Id":"415372387","IsPullRequest":true,"CreatedAt":"2019-02-28T06:02:38","Actor":"tannergooding","Number":"7095","RawContent":null,"Title":"Updating the Roslyn toolset to 3.0.0-beta4 and setting LangVersion=preview","State":"closed","Body":"CC. @jaredpar, @agocke, @jkotas, @danmosemsft, @eerhardt, @safern\r\n\r\nThe beta4 package was published today. This is still required for CoreRT until it can update the associated BuildTools version (https://github.com/dotnet/corert/issues/7032).","Url":"https://github.com/dotnet/corert/pull/7095","RelatedDescription":"Closed or merged PR \"Updating the Roslyn toolset to 3.0.0-beta4 and setting LangVersion=preview\" (#7095)"},{"Id":"414947522","IsPullRequest":true,"CreatedAt":"2019-02-27T06:04:39","Actor":"Dotnet-GitSync-Bot","Number":"7093","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @grant-d","Url":"https://github.com/dotnet/corert/pull/7093","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7093)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"416947647","IsPullRequest":true,"CreatedAt":"2019-03-05T00:27:04","Actor":"nugetlurker","Number":"3005","RawContent":null,"Title":"Insert NuGet Build 5.0.0-rtm.5867 into sdk","State":"closed","Body":"Insert NuGet Build 5.0.0-rtm.5867 into sdk release/2.2.2xx branch","Url":"https://github.com/dotnet/sdk/pull/3005","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-rtm.5867 into sdk\" (#3005)"},{"Id":"417040414","IsPullRequest":false,"CreatedAt":"2019-03-04T23:24:46","Actor":"sbomer","Number":"3007","RawContent":null,"Title":"Duplicate items in _ResolvedCopyLocalPublishAssets","State":"open","Body":"- When `ResolveCopyLocalAssets` runs during self-contained publish (`_UseBuildDependencyFile` is false), it outputs `_ResolvedCopyLocalPublishAssets`.\r\n- When `_ComputeResolvedCopyLocalPublishAssets` runs, it adds to `_ResolvedCopyLocalPublishAssets` the contents of (`ReferenceCopyLocalPaths` \\ `_ResolvedCopyLocalBuildAssets`):\r\nhttps://github.com/dotnet/sdk/blob/c60af5f303fa67d25550ecfa54975caef0f5c828/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Publish.targets#L398-L399\r\n\r\n`_ResolvedCopyLocalBuildAssets` is empty, so it gets a duplicate copy of items in `ReferenceCopyLocalPaths` (which comes from `RuntimePackAsset`), for example `System.Private.CoreLib.dll`.\r\n\r\nBefore https://github.com/dotnet/sdk/pull/2646, `ResolvedAssembliesToPublish` only had one Item for System.Private.CoreLib.dll. I noticed this while trying to update https://github.com/mono/linker/blob/master/src/ILLink.Tasks/ILLink.Tasks.targets#L451 to work with the newest SDK. `_ManagedAssembliesToLink` was computed from `ResolvedAssembliesToPublish`, but that line breaks when there are multiple files with the same Filename in the input:\r\n```\r\nC:\\Users\\svbomer\\.nuget\\packages\\illink.tasks\\0.1.6\\build\\ILLink.Tasks.targets(451,34): error MSB4094: \"C:\\Users\\svbomer\\.nuget\\packages\\runtime.win-x64.microsoft.netcore.app\\3.0.0-preview-27324-5\\runtimes\\win-x64\\native\\System.Private.CoreLib.dll;C:\\Users\\svbomer\\.nuget\\packages\\runtime.win-x64.microsoft.netcore.app\\3.0.0-preview-27324-5\\runtimes\\win-x64\\native\\System.Private.CoreLib.dll\" is an invalid value for the \"AssemblyPath\" parameter of the \"CheckEmbeddedRootDescriptor\" task. Multiple items cannot be passed into a parameter of type \"Microsoft.Build.Framework.ITaskItem\". [D:\\linker\\test\\ILLink.Tasks.Tests\\bin\\debug\\netcoreapp3.0\\helloworld\\helloworld.csproj]\r\n```\r\n\r\nhttps://github.com/dotnet/sdk/pull/2666 may be relevant.\r\n\r\n/cc @peterhuene @nguerrera ","Url":"https://github.com/dotnet/sdk/issues/3007","RelatedDescription":"Open issue \"Duplicate items in _ResolvedCopyLocalPublishAssets\" (#3007)"},{"Id":"416947669","IsPullRequest":true,"CreatedAt":"2019-03-04T19:04:03","Actor":"nugetlurker","Number":"3006","RawContent":null,"Title":"Insert NuGet Build 5.0.0-rtm.5867 into sdk","State":"open","Body":"Insert NuGet Build 5.0.0-rtm.5867 into sdk release/2.1.6xx branch","Url":"https://github.com/dotnet/sdk/pull/3006","RelatedDescription":"Open PR \"Insert NuGet Build 5.0.0-rtm.5867 into sdk\" (#3006)"},{"Id":"416793797","IsPullRequest":false,"CreatedAt":"2019-03-04T13:09:35","Actor":"SomeAnon42","Number":"3004","RawContent":null,"Title":"ResolvePackageAssets fails when targeting Core 3.0","State":"open","Body":"```\r\nError\tMSB4018\tThe \"ResolvePackageAssets\" task failed unexpectedly.\r\nSystem.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.\r\n   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)\r\n   at Microsoft.NET.Build.Tasks.LockFileExtensions.CollectDependencies(IDictionary`2 libraryLookup, IEnumerable`1 dependencies, HashSet`1 exclusionList) in /_/src/Tasks/Microsoft.NET.Build.Tasks/LockFileExtensions.cs:line 193\r\n   at Microsoft.NET.Build.Tasks.LockFileExtensions.CollectDependencies(IDictionary`2 libraryLookup, IEnumerable`1 dependencies, HashSet`1 exclusionList) in /_/src/Tasks/Microsoft.NET.Build.Tasks/LockFileExtensions.cs:line 180\r\n   at Microsoft.NET.Build.Tasks.LockFileExtensions.GetPlatformExclusionList(LockFileTarget lockFileTarget, LockFileTargetLibrary platformLibrary, IDictionary`2 libraryLookup) in /_/src/Tasks/Microsoft.NET.Build.Tasks/LockFileExtensions.cs:line 153\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheWriter.GetPlatformPackageExclusions() in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets.cs:line 1191\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheWriter..ctor(ResolvePackageAssets task, Stream stream) in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets.cs:line 610\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader.CreateReaderFromDisk(ResolvePackageAssets task, Byte[] settingsHash) in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets.cs:line 483\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.CacheReader..ctor(ResolvePackageAssets task) in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets.cs:line 434\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ReadItemGroups() in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets.cs:line 279\r\n   at Microsoft.NET.Build.Tasks.ResolvePackageAssets.ExecuteCore() in /_/src/Tasks/Microsoft.NET.Build.Tasks/ResolvePackageAssets.cs:line 271\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute() in /_/src/Tasks/Common/TaskBase.cs:line 35\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\tNitroSharpDbg\tC:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-010582\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets\t228\t\r\n```\r\n\r\nSteps to reproduce:\r\n1. Create a new console netcoreapp3.0 project\r\n2. Clone https://github.com/mellinoe/veldrid.git\r\n3. Add a reference Veldrid.ImGui.csproj\r\n```xml\r\n<ItemGroup>\r\n  <ProjectReference Include=\"..\\veldrid\\src\\Veldrid.ImGui\\Veldrid.ImGui.csproj\" />\r\n</ItemGroup>\r\n```\r\n4. Build the project. \r\n\r\nThe build should fail. However, there's no issues when targeting netcoreapp2.2 or when using [the NuGet package](https://www.nuget.org/packages/ImGui.NET) instead of referencing the project.\r\n\r\n``dotnet --info`` output:\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview4-010582\r\n Commit:    a643588b29\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-010582\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview4-27502-7\r\n  Commit:  12aa3da961\r\n\r\n.NET Core SDKs installed:\r\n  2.2.104 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview4-010582 [C:\\Program Files\\dotnet\\sdk]\r\n```\r\n","Url":"https://github.com/dotnet/sdk/issues/3004","RelatedDescription":"Open issue \"ResolvePackageAssets fails when targeting Core 3.0\" (#3004)"},{"Id":"416329826","IsPullRequest":true,"CreatedAt":"2019-03-03T18:14:52","Actor":"dsplaisted","Number":"3002","RawContent":null,"Title":"Fix publishing self-contained ASP.NET apps","State":"closed","Body":"- Ignore .json files in runtime packs.  Fixes self-contained ASP.NET apps failing to launch with new runtime packs. @pakrym \r\n- Remove UseRefTargetingPacks property.  Fixes #2962","Url":"https://github.com/dotnet/sdk/pull/3002","RelatedDescription":"Closed or merged PR \"Fix publishing self-contained ASP.NET apps\" (#3002)"},{"Id":"416394963","IsPullRequest":true,"CreatedAt":"2019-03-02T14:26:05","Actor":"dotnet-maestro[bot]","Number":"3003","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19151.5\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19151.5\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3003","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3003)"},{"Id":"416305439","IsPullRequest":false,"CreatedAt":"2019-03-01T22:30:54","Actor":"JoeRobich","Number":"3001","RawContent":null,"Title":"error NETSDK1085 during Roslyn builds with 3.0.100 preview 4 sdk","State":"open","Body":"When building Roslyn with 3.0.100-preview4-010381 installed, I get the following error on every solution build.\r\n\r\n```\r\n8>------ Build started: Project: VS.Tools.Roslyn.Package, Configuration: Debug Any CPU ------\r\n2>C:\\Program Files\\dotnet\\sdk\\3.0.100-preview4-010381\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(112,5): error NETSDK1085: The 'NoBuild' property was set to true but the 'Build' target was invoked.\r\n2>Done building project \"IlAsmDeploy.csproj\" -- FAILED.\r\n```","Url":"https://github.com/dotnet/sdk/issues/3001","RelatedDescription":"Open issue \"error NETSDK1085 during Roslyn builds with 3.0.100 preview 4 sdk\" (#3001)"},{"Id":"416214091","IsPullRequest":true,"CreatedAt":"2019-03-01T17:55:17","Actor":"JoeRobich","Number":"3000","RawContent":null,"Title":"Update the json manifest for the Dotfuscator Vsix","State":"closed","Body":"@livarcocc This is to update the dotfuscator manifest for a new build (in dotfuscator branch, which unfortunately still exists in this repo...)","Url":"https://github.com/dotnet/sdk/pull/3000","RelatedDescription":"Closed or merged PR \"Update the json manifest for the Dotfuscator Vsix\" (#3000)"},{"Id":"416092757","IsPullRequest":true,"CreatedAt":"2019-03-01T14:21:16","Actor":"dotnet-maestro[bot]","Number":"2999","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19128.3\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19128.3\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2999","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2999)"},{"Id":"415919082","IsPullRequest":false,"CreatedAt":"2019-03-01T03:00:55","Actor":"sayedihashimi","Number":"2998","RawContent":null,"Title":"Unable to run global tools in PowerShell running on macOS","State":"open","Body":"I tried to execute a global tool from PowerShell running on macOS and the tool was not located. When I run `dotnet tool list --global` it does show up. When I exit out of PowerShell, and get back into a normal bash prompt, the global tool works fine.\r\n\r\nmacOS version = 10.14.2\r\n\r\n![global-tool](https://user-images.githubusercontent.com/1283154/53613386-f3f2e280-3ba3-11e9-90de-4669536bc35e.jpg)\r\n\r\nHere are the runtime/sdks that I have installed.\r\n![image](https://user-images.githubusercontent.com/1283154/53613512-2e5c7f80-3ba4-11e9-9073-9f4d0a32e6c1.png)\r\n","Url":"https://github.com/dotnet/sdk/issues/2998","RelatedDescription":"Open issue \"Unable to run global tools in PowerShell running on macOS\" (#2998)"},{"Id":"415882721","IsPullRequest":true,"CreatedAt":"2019-03-01T00:15:02","Actor":"fadimounir","Number":"2997","RawContent":null,"Title":"Crossgen Task","State":"open","Body":"Intitial implementation of the crossgen task, and plumbing in the SDK targets to invoke the task. The crossgen task invokes crossgen from the runtime pack.\r\n\r\n- Task triggered when <ReadyToRun> is set to true in the main app's project file (opt-in feature)\r\n- Added new condition to download runtime packs: when the ReadyToRun property is set.\r\n- Adding R2R exclusion list capability\r\n- Symbol emission is optional (opt-in, when ReadyToRunEmitSymbols is set to true)","Url":"https://github.com/dotnet/sdk/pull/2997","RelatedDescription":"Open PR \"Crossgen Task\" (#2997)"},{"Id":"415838644","IsPullRequest":false,"CreatedAt":"2019-02-28T21:47:43","Actor":"nguerrera","Number":"2996","RawContent":null,"Title":"ReferenceManagerAssemblies is hidden from .NETCoreApp but not .NETStandard","State":"open","Body":"See https://github.com/dotnet/sdk/pull/2994#discussion_r261372831\r\n\r\nIs this by design? ","Url":"https://github.com/dotnet/sdk/issues/2996","RelatedDescription":"Open issue \"ReferenceManagerAssemblies is hidden from .NETCoreApp but not .NETStandard\" (#2996)"},{"Id":"415612168","IsPullRequest":true,"CreatedAt":"2019-02-28T14:26:25","Actor":"dotnet-maestro[bot]","Number":"2995","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19127.8\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19127.8\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2995","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2995)"},{"Id":"415365956","IsPullRequest":true,"CreatedAt":"2019-02-27T22:56:37","Actor":"etbyrd","Number":"2994","RawContent":null,"Title":"Remove opt-out of COM Reference Manager Tab","State":"open","Body":"This is a fix for: https://github.com/dotnet/project-system/issues/4355\r\nI tested this locally and ensured that projects built with COM references but I am not sure if anything is blocking this on the SDK side. ","Url":"https://github.com/dotnet/sdk/pull/2994","RelatedDescription":"Open PR \"Remove opt-out of COM Reference Manager Tab\" (#2994)"},{"Id":"415112893","IsPullRequest":true,"CreatedAt":"2019-02-27T14:21:22","Actor":"dotnet-maestro[bot]","Number":"2993","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19126.6\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19126.6\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2993","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2993)"},{"Id":"415027102","IsPullRequest":false,"CreatedAt":"2019-02-27T09:35:47","Actor":"Lily721","Number":"2992","RawContent":null,"Title":"issues occurred when .Net core console project reference .net framework class library","State":"closed","Body":"I got a .NET Core console project which use .NET Core 3.0 preview, and other class library with .NET Framework 4 Client Profile, and this framework class library got a reference from System.Security which using PermissionSet like following:\r\n\r\n`using System.Security;`\r\n`......................................`\r\n`new PermissionSet(PermissionState.Unrestricted).Demand();`\r\n\r\nWhen I add this class library to NetCore console project, everything is fine when build, but got an issue during debug:\r\n`System.TypeLoadException: 'Could not load type 'System.Security.PermissionSet' from assembly 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.'`\r\n\r\nThen I checked the mscorlib.dll in local folder:(C:\\Users\\*****\\.nuget\\packages\\microsoft.netcore.app\\3.0.0-preview-27117-01\\ref\\netcoreapp3.0)\r\nand reflector it but without any system.Security namespace in it.\r\n\r\nSwitch to net core 2.0, got same issue.\r\n\r\nAnyone can help? thanks a lot.","Url":"https://github.com/dotnet/sdk/issues/2992","RelatedDescription":"Closed issue \"issues occurred when .Net core console project reference .net framework class library\" (#2992)"},{"Id":"414342537","IsPullRequest":true,"CreatedAt":"2019-02-27T01:24:23","Actor":"nguerrera","Number":"2990","RawContent":null,"Title":"Add hook to redirect common props, only ref m.nc.platforms when necessary","State":"closed","Body":"1. Introduce $(AlternateCommonProps) to redirect the Sdk common props import to a user-defined location. This is morally equivalent to $(LanguageTargets) being customizable on the targets side. Having full control over both of these imports makes it much easier to integrate the SDK into existing heavily-customized builds. The current use case is to get some internal builds over to netcoreapp3.0\r\n\r\n2. Getting an intermittent error about 'vs' not being found from dogfood script. Removing unnecessary setting of msbuildEngine seems to have fixed it.\r\n\r\n3. With https://github.com/dotnet/core-sdk/pull/698, microsoft.netcore.platforms becomes the only package that cannot be resolved from packs. Make it so that we only pull it in when there are other package references. Otherwise, nuget doesn't need to see it as a package reference. This is just moving the temporary solution around, but means that we can get a working offline experience before we figure out how to adress the runtime graph going into to nuget (or sdk taking over for nuget).","Url":"https://github.com/dotnet/sdk/pull/2990","RelatedDescription":"Closed or merged PR \"Add hook to redirect common props, only ref m.nc.platforms when necessary\" (#2990)"},{"Id":"414599677","IsPullRequest":true,"CreatedAt":"2019-02-26T14:21:42","Actor":"dotnet-maestro[bot]","Number":"2991","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19125.2\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19125.2\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2991","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2991)"},{"Id":"414093522","IsPullRequest":true,"CreatedAt":"2019-02-25T14:21:40","Actor":"dotnet-maestro[bot]","Number":"2988","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19124.1\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19124.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2988","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2988)"},{"Id":"414119637","IsPullRequest":false,"CreatedAt":"2019-02-25T14:02:53","Actor":"loop-evgeny","Number":"2989","RawContent":null,"Title":"Error running self-contained Linux EXE: \"This executable is not bound to a managed DLL to execute. The binding value is: 'c3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2'\"","State":"open","Body":"I created a new console application in VS 2017 using .NET Core 2.1. Published it as a self-contained linux-x64 app without any changes and tried to run it on an Ubuntu 18.04 VM. Got this error:\r\n\r\n```\r\n ./LinuxTest \r\nThis executable is not bound to a managed DLL to execute. The binding value is: 'c3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2'\r\nA fatal error was encountered. This executable was not bound to load a managed DLL.\r\n```\r\n\r\nc3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2 is apparently the SHA256 hash of \"foobar\", so whatever the real problem is, this is a very weird error message, too!\r\n\r\nLinuxTest.csproj:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\nProgram.cs:\r\n```\r\nusing System;\r\n\r\nnamespace LinuxTest\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nResulting self-contained binary: [LinuxTest.zip](https://github.com/dotnet/sdk/files/2900841/LinuxTest.zip)\r\n\r\nIf I install dotnet-runtime-2.1 on the Linux VM and run `dotnet LinuxTest.dll` it works.","Url":"https://github.com/dotnet/sdk/issues/2989","RelatedDescription":"Open issue \"Error running self-contained Linux EXE: \"This executable is not bound to a managed DLL to execute. The binding value is: 'c3ab8ff13720e8ad9047dd39466b3c8974e592c2fa383d4a3960714caef0c4f2'\"\" (#2989)"},{"Id":"413818973","IsPullRequest":true,"CreatedAt":"2019-02-25T13:00:49","Actor":"dotnet-maestro[bot]","Number":"2985","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19123.1\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19123.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2985","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2985)"},{"Id":"413886149","IsPullRequest":true,"CreatedAt":"2019-02-25T02:30:21","Actor":"dotnet-bot","Number":"2987","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2987","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#2987)"},{"Id":"413843026","IsPullRequest":true,"CreatedAt":"2019-02-24T21:53:25","Actor":"dsplaisted","Number":"2986","RawContent":null,"Title":"Mark implicit platforms package reference as PrivateAssets","State":"closed","Body":"Fixes #2976","Url":"https://github.com/dotnet/sdk/pull/2986","RelatedDescription":"Closed or merged PR \"Mark implicit platforms package reference as PrivateAssets\" (#2986)"},{"Id":"413641877","IsPullRequest":false,"CreatedAt":"2019-02-24T18:29:59","Actor":"SergeyKhutornoy","Number":"2982","RawContent":null,"Title":"donet publish always publishes web.Release.config","State":"closed","Body":"When you run dotnet publish command for a Microsoft.NET.Sdk.Web project targeting **net462**, the tool always publishes web.*.config files (web.debug.config and web.release.config in addition to the transformed web.config).\r\n\r\nProject file (.csproj):\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <ProductVersion>8.0.30703</ProductVersion>\r\n    <ProjectGuid>{842f247f-8658-4b47-b9cf-5582f7c1e26e}</ProjectGuid>\r\n    <RootNamespace>Service</RootNamespace>\r\n    <AssemblyName>Service</AssemblyName>\r\n    <TargetFramework>net462</TargetFramework>\r\n    <AssemblyTitle>Service</AssemblyTitle>\r\n    <OutputPath>bin\\$(Configuration)\\</OutputPath>\r\n    <ProjectTypeGuids>{349c5851-65df-11da-9384-00065b846f21};{fae04ec0-301f-11d3-bf4b-00c04f79efbc}</ProjectTypeGuids>\r\n    <OutputType>Library</OutputType>\r\n    <AppDesignerFolder>Properties</AppDesignerFolder>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \">\r\n    <DebugSymbols>true</DebugSymbols>\r\n    <DebugType>full</DebugType>\r\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\r\n  </PropertyGroup>\r\n  <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \">\r\n    <DebugType>pdbonly</DebugType>\r\n    <Optimize>true</Optimize>\r\n    <DefineConstants>TRACE</DefineConstants>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Reference Include=\"System.configuration\" />\r\n    <Reference Include=\"System.Runtime.Serialization\" />\r\n    <Reference Include=\"System.ServiceModel\" />\r\n    <Reference Include=\"System\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n## Steps to reproduce\r\n1. Create web.config, web.Debug.config, web.Release.config files in the project root folder.\r\n2. Run `dotnet publish /p:Configuration=Release`\r\n\r\nor\r\n\r\n1. Create web.config, web.Debug.config, web.Release.config files in the project root folder.\r\n2. Run `msbuild Service.csproj /p:DeployOnBuild=true /p:Configuration=Release /p:PublishProfile=FolderProfile`\r\n\r\n## Expected behavior\r\nThere is only transformed web.config file in the publish folder.\r\n\r\n## Actual behavior\r\nweb.config, web.release.config, web.debug.config files are in the publish folder.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.103\r\n Commit:    8edbc2570a\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.103\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.1\r\n  Commit:  878dd11e62\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview2-003131 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]","Url":"https://github.com/dotnet/sdk/issues/2982","RelatedDescription":"Closed issue \"donet publish always publishes web.Release.config\" (#2982)"},{"Id":"413639072","IsPullRequest":false,"CreatedAt":"2019-02-24T18:29:13","Actor":"YankdaCode","Number":"2981","RawContent":null,"Title":"Error on implementing custom FileProvider - Cannot find compilation library location for package 'projectCLB'","State":"closed","Body":"So, I am designing a very customized solution from scratch wherein I have asp.net mvc core app as the main web app. Then I create separate class libraries and update the SDK to Microsoft.NET.Sdk.Razor and use:\r\n    `<PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.2.0\" />`\r\nThis allows me to create MVC type class library, lets say \"projectCLB\" and then at startup I scan the folder that is located outside of the project main directory and load the assemblies for my project:\r\nprojectCLB.dll\r\nprojectCLB.Views.dll\r\n\r\nThis was working fine by the following code:\r\n`\r\n```\r\nAssembly assembly;\r\n                try\r\n                {\r\n                    assembly = AssemblyLoadContext.Default.LoadFromAssemblyPath(file.FullName);\r\n                }\r\n                catch (FileLoadException ex)\r\n                {\r\n                    // If assembly is already loaded, we'll just catch it and continue to the next one, plugins can have same dependencies:\r\n                    if (ex.Message == \"Assembly with same name is already loaded\")\r\n                    {\r\n                        continue;\r\n                    }\r\n                    throw;\r\n                }\r\n\r\n// Check if the assembly has already been loaded:\r\n                if (!(mvcBuilder.PartManager.ApplicationParts.Any(x => x.Name == assembly.GetName().Name)))\r\n                {\r\n                    //Load the pre-compiled Views:\r\n                    if (assembly.ManifestModule.Name.Contains(\".Views.dll\"))\r\n                    {\r\n                        mvcBuilder.ConfigureApplicationPartManager(mgr =>\r\n                        {\r\n                            foreach (var b in CompiledRazorAssemblyApplicationPartFactory.GetDefaultApplicationParts(assembly))\r\n                            {\r\n                                mvcBuilder.ConfigureApplicationPartManager(apm => apm.ApplicationParts.Add(b));\r\n                            }\r\n\r\n                        });\r\n\r\n                    }\r\n                    // Load the plug in assemblies:\r\n                    else\r\n                    {\r\n                        \r\n                        mvcBuilder.AddApplicationPart(assembly);\r\n                     \r\n                       \r\n\r\n                    }\r\n\r\n                }\r\n```\r\n`\r\n\r\n\r\nThis is how my class library project file looks:\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Razor\">\r\n\r\n\r\n  <PropertyGroup Label=\"Globals\">\r\n    <SccProjectName>SAK</SccProjectName>\r\n    <SccProvider>SAK</SccProvider>\r\n    <SccAuxPath>SAK</SccAuxPath>\r\n    <SccLocalPath>SAK</SccLocalPath>\r\n  </PropertyGroup>\r\n\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n\r\n  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\">\r\n    \r\n  </PropertyGroup>\r\n\r\n\r\n  <ItemGroup>\r\n    \r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.2.0\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"2.2.1\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Design\" Version=\"2.2.1\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Relational\" Version=\"2.2.1\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer\" Version=\"2.2.1\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"2.2.1\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <Folder Include=\"Content\\\" />\r\n    <Folder Include=\"Infrastructure\\Data\\\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n\r\n    <ProjectReference Include=\"..\\..\\<baseapp project>.Common\\baseapp project.Common.csproj\" />\r\n\r\n    <ProjectReference Include=\"..\\..\\baseapp project.Data\\baseapp project.Data.csproj\" />\r\n    <ProjectReference Include=\"..\\..\\baseapp project.Repositories\\baseapp project.Repositories.csproj\" />\r\n  </ItemGroup>\r\n  <Target Name=\"UpdateTargetPath\" BeforeTargets=\"AssignRazorGenerateTargetPaths\">\r\n    <ItemGroup>\r\n      <RazorGenerate Include=\"@(RazorGenerate)\" Link=\"$(TargetName)\\plugin\\%(RazorGenerate.RelativeDir)%(RazorGenerate.FileName)%(RazorGenerate.Extension)\" />\r\n\r\n    </ItemGroup>\r\n  </Target>\r\n \r\n\r\n</Project>\r\n\r\n```\r\n\r\nIt was working all fine until I implemented a File Provider so that we can use cshtml files at development time instead of precompiled views since I was having to copy the dlls/ rebuild after a cshtml change. \r\nReason being that PhysicalFileProvider doesn't look outside of the webroot. Now I get this error and there are other posts that I saw but none of the workarounds actually work for me.\r\n\r\n\r\n`System.InvalidOperationException: Cannot find compilation library location for package 'projectCLB'\r\n   at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths(ICompilationAssemblyResolver resolver, List`1 assemblies)\r\n   at Microsoft.Extensions.DependencyModel.CompilationLibrary.ResolveReferencePaths()\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart.<>c.<GetReferencePaths>b__8_0(CompilationLibrary library)\r\n   at System.Linq.Enumerable.SelectManySingleSelectorIterator`2.MoveNext()\r\n   at Microsoft.AspNetCore.Mvc.Razor.Compilation.MetadataReferenceFeatureProvider.PopulateFeature(IEnumerable`1 parts, MetadataReferenceFeature feature)\r\n   at Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.PopulateFeature[TFeature](TFeature feature)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.GetCompilationReferences()\r\n   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorReferenceManager.get_CompilationReferences()\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.LazyMetadataReferenceFeature.get_References()\r\n   at Microsoft.CodeAnalysis.Razor.CompilationTagHelperFeature.GetDescriptors()\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorTagHelperBinderPhase.ExecuteCore(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorEnginePhaseBase.Execute(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorEngine.Process(RazorCodeDocument document)\r\n   at Microsoft.AspNetCore.Razor.Language.DefaultRazorProjectEngine.ProcessCore(RazorCodeDocument codeDocument)\r\n   at Microsoft.AspNetCore.Razor.Language.RazorProjectEngine.Process(RazorProjectItem projectItem)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(String relativePath)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.OnCacheMiss(String normalizedPath)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorPageFactoryProvider.CreateFactory(String relativePath)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.CreateCacheResult(HashSet`1 expirationTokens, String relativePath, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.OnCacheMiss(ViewLocationExpanderContext expanderContext, ViewLocationCacheKey cacheKey)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.LocatePageFromViewLocations(ActionContext actionContext, String pageName, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.FindView(ActionContext context, String viewName, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.FindView(ActionContext context, String viewName, Boolean isMainPage)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.FindView(ActionContext actionContext, ViewResult viewResult)\r\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)\r\n   at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()\r\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()\r\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)`","Url":"https://github.com/dotnet/sdk/issues/2981","RelatedDescription":"Closed issue \"Error on implementing custom FileProvider - Cannot find compilation library location for package 'projectCLB'\" (#2981)"},{"Id":"413780813","IsPullRequest":true,"CreatedAt":"2019-02-24T04:32:29","Actor":"dsplaisted","Number":"2984","RawContent":null,"Title":"Add CI legs to run tests as tools","State":"open","Body":"Eventually I'd like to use the tests from this repo in other repos such as dotnet/core-sdk.  This PR adds CI legs which runs the tests as tools, in order to make sure they run correctly as tools.","Url":"https://github.com/dotnet/sdk/pull/2984","RelatedDescription":"Open PR \"Add CI legs to run tests as tools\" (#2984)"},{"Id":"413693389","IsPullRequest":true,"CreatedAt":"2019-02-23T14:21:28","Actor":"dotnet-maestro[bot]","Number":"2983","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19122.3\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19122.3\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2983","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2983)"},{"Id":"413638871","IsPullRequest":true,"CreatedAt":"2019-02-23T01:33:35","Actor":"natemcmaster","Number":"2980","RawContent":null,"Title":"Change publish feed to workaround 'Waiting to obtain an exclusive lock on the feed.'","State":"open","Body":"We're getting consistent build timeouts. Changing to a unique feed instead. \n\nNote!!! Each upstream repo will need to add this to restore sources.","Url":"https://github.com/dotnet/sdk/pull/2980","RelatedDescription":"Open PR \"Change publish feed to workaround 'Waiting to obtain an exclusive lock on the feed.'\" (#2980)"},{"Id":"413617702","IsPullRequest":true,"CreatedAt":"2019-02-22T23:24:14","Actor":"wli3","Number":"2979","RawContent":null,"Title":"Fix 1.0 project tools missing dll in runtime","State":"open","Body":"By Disabling targeting pack reference in generate deps.json\r\n\r\nIn short, since generating deps.json in 2.x.xxx SDK does not have Microsoft.NETCore.App reference. We need to do the same for 2.x.xxx.\r\n\r\nDetail:\r\n\r\nProject Tools deps.json generator is not ideal. When restore, since we don’t know what is the tool’s TFM before restoring it, we will always restore with SDK’s TFM, which is netcoreapp3.0.\r\n\r\nIn 2.x.xxx time due to special restore logic, there is no reference to Microsoft.NETCore.App in asset.json file. So when generate deps.son, assets from the packages will be in deps.json instead of being removed by conflict resolution. This is important since when invoke the command, 1.0 runtime will be used (due to the tool is targeting 1.0), and 1.0 runtime will not have all the dlls restored in netcoreapp2.0 TFM available to load these dll need dep.json.\r\n\r\nAnd now in 3.0, ImplicitFrameworkReferences need to be disabled to match existing “no reference to Microsoft.NETCore.App” behavior.","Url":"https://github.com/dotnet/sdk/pull/2979","RelatedDescription":"Open PR \"Fix 1.0 project tools missing dll in runtime\" (#2979)"},{"Id":"413394061","IsPullRequest":true,"CreatedAt":"2019-02-22T14:46:46","Actor":"dotnet-maestro[bot]","Number":"2978","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19121.5\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19121.5\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2978","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2978)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"1015450578","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"},{"Id":"359151445","IsPullRequest":false,"CreatedAt":"2018-09-11T17:44:50","Actor":"leecow","Number":"84","RawContent":null,"Title":"September 2018 .NET Updates","State":"open","Body":"# September 2018 .NET Updates\r\n\r\nThe following .NET updates were released in September 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework September 2018 Security and Quality Rollup - September 11, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core September 2018 Update - September 11, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.4/2.1.4.md)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/84","RelatedDescription":"Open issue \"September 2018 .NET Updates\" (#84)"},{"Id":"359136325","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:55","Actor":"blowdart","Number":"83","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](https://github.com/aspnet/Announcements/issues/316).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32228\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83)"},{"Id":"357399856","IsPullRequest":false,"CreatedAt":"2018-09-05T20:56:25","Actor":"richlander","Number":"82","RawContent":null,"Title":".NET Core Runtime ARM64 Status","State":"open","Body":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\n[.NET Core 3.0 Preview 1](https://github.com/dotnet/core/issues/2099) includes support for Linux ARM64. Please try this build and provide support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/coreclr #19843](https://github.com/dotnet/coreclr/issues/19843)\r\n\r\n## Current Status\r\n\r\nARM64 builds are functional, for console and ASP.NET Core apps.\r\n\r\n## Details\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\nSee [Installing .NET Core 3.0 on Linux ARM64](https://gist.github.com/richlander/467813274cea8abc624553ee72b28213) to install .NET Core on your ARM64 machine. Builds are available from the [daily builds page](https://github.com/dotnet/core/blob/master/daily-builds.md).\r\n\r\n## Bug Queries\r\n\r\nthe following bugs queries are available for ARM64:\r\n\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds are tested on the following operating systems:\r\n\r\n* Ubuntu 16.04 and 18.04\r\n* Debian 9\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)","Url":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Open issue \".NET Core Runtime ARM64 Status\" (#82)"},{"Id":"349693735","IsPullRequest":false,"CreatedAt":"2018-08-22T18:23:01","Actor":"richlander","Number":"80","RawContent":null,"Title":"Improving Performance of ARM32 Docker Images with .NET Core Package Cache","State":"closed","Body":"# Improving Performance of ARM32 Docker Images with .NET Core Package Cache\r\n\r\n.NET Core SDK distributions include a compressed copy of NuGet packages for .NET Core, ASP.NET Core and EF Core. These packages are decompressed upon installation of the .NET Core SDK. The packages are not currently included in ARM32 distributions due to the time and space cost to decompress the packages. Instead, they will be added to [.NET Core ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/), where these costs can be paid as part of image creation.\r\n\r\nThese NuGet packages include content for two purposes:\r\n\r\n- Reference assemblies for .NET Core, for code compilation.\r\n- Pre-compiled assemblies (compiled with [crossgen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md)) for .NET Core, for use in self-contained applications.\r\n\r\nIn both cases, the presence of these packages avoid the need to access remote NuGet feeds for .NET Core assemblies as part of package restore.\r\n\r\nThis change only affects [.NET Core 2.1 SDK ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/). This change will be made in August 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #653](https://github.com/dotnet/dotnet-docker/issues/653)\r\n\r\n## .NET Core SDK NugetFallbackFolder\r\n\r\nThe .NET Core SDK includes a compressed copy of all NuGet package, in LZMA format. It exists at the following version-specific location:\r\n\r\n```\r\nroot@3778032bc43d:/# ls -l /usr/share/dotnet/sdk/2.1.302/*.lzma\r\n-rw-r--r-- 1 1004 sudo 35995936 Jul  2 22:51 /usr/share/dotnet/sdk/2.1.302/nuGetPackagesArchive.lzma\r\n```\r\n\r\nThis file is decompressed to the following location: `/usr/share/dotnet/sdk/NuGetFallbackFolder/`\r\n\r\nA package restore for a .NET Core assembly will restore the assembly from the NuGetFallbackFolder location and copy it to the user NuGet cache. At that point, regular NuGet behavior is used.\r\n\r\n## Impact of this change\r\n\r\nThere should be no functional difference in behavior after this change. .NET SDK commands should complete faster and require fewer package restore network requests.\r\n\r\nThe following examples demonstrates the benefit of this change. The improvement can be observed with package restore. Build times (assuming no restore) are not affected.\r\n\r\n### .NET Core 2.1 SDK image after this change\r\n\r\n> The change has already been made in the `microsoft/dotnet-nightly` repo, as you can see in the example below. In August, this same change will be made available in the `microsoft/dotnet` repo.\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet-nightly:2.1-sdk\r\nroot@416731f24915:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 6.68 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m32.496s\r\nuser    0m35.820s\r\nsys     0m4.280s\r\nroot@416731f24915:/# cd mvcapp/\r\nroot@416731f24915:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.8.138-preview+ge0cd4f1c1f for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 524.78 ms for /mvcapp/mvcapp.csproj.\r\n/usr/share/dotnet/sdk/2.1.401-preview-009081/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(143,5): message NETSDK1057: You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452 [/mvcapp/mvcapp.csproj]\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:09.15\r\n\r\nreal    2m13.377s\r\nuser    1m25.260s\r\nsys     0m9.420s\r\nroot@416731f24915:/mvcapp#\r\n```\r\n\r\n### .NET Core 2.1 SDK image before this change\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet:2.1-sdk\r\nroot@9d1d5e45df6a:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Private.DataContractSerialization 4.3.0.\r\n  Installing System.Security.Principal 4.3.0.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.App 2.1.1.\r\n  Installing runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.AspNetCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Antiforgery 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Session 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.KeyPerFile 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Embedded 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Physical 2.1.1.\r\n  Installing Microsoft.Extensions.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Cookies 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Core 2.1.1.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.Authentication.Google 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Facebook 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting.Abstractions 2.1.1.\r\n  Installing runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.HttpsPolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.MicrosoftAccount 2.1.1.\r\n  Installing Microsoft.Extensions.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.MiddlewareAnalysis 2.1.1.\r\n  Installing Microsoft.Extensions.FileSystemGlobbing 2.1.1.\r\n  Installing Microsoft.Extensions.DiagnosticAdapter 2.1.0.\r\n  Installing Microsoft.Extensions.Identity.Core 2.1.1.\r\n  Installing Microsoft.Extensions.Identity.Stores 2.1.1.\r\n  Installing Microsoft.Extensions.Options.ConfigurationExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Localization.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Abstractions 2.1.1.\r\n  Installing runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Options 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Composite 2.1.1.\r\n  Installing Microsoft.Extensions.Logging 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.TraceSource 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.UserSecrets 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Debug 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Console 2.1.1.\r\n  Installing Microsoft.Extensions.DependencyInjection 2.1.1.\r\n  Installing Microsoft.Extensions.ObjectPool 2.1.1.\r\n  Installing runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Binder 2.1.1.\r\n  Installing runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.FileExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Memory 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.CommandLine 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Abstractions 2.1.1.\r\n  Installing Microsoft.Net.Http.Headers 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.InMemory 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Ini 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.StaticFiles 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Relational 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Https 2.1.1.\r\n  Installing Microsoft.Extensions.Primitives 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel 2.1.1.\r\n  Installing Microsoft.Extensions.WebEncoders 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebUtilities 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR 1.0.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Tools 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Rewrite 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCompression 2.1.1.\r\n  Installing System.Globalization.Extensions 4.3.0.\r\n  Installing Microsoft.AspNetCore.Razor.Language 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.TagHelpers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Runtime 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.RazorPages 2.1.1.\r\n  Installing Microsoft.AspNetCore.Owin 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.ViewCompilation 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Json 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebSockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Cors 2.1.1.\r\n  Installing System.Diagnostics.DiagnosticSource 4.3.0.\r\n  Installing Microsoft.AspNetCore.Mvc.DataAnnotations 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ApiExplorer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.EventSource 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OAuth 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Json 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Protocols.Json 1.0.1.\r\n  Installing Microsoft.AspNetCore.NodeServices 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.JsonPatch 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization.Routing 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.IISIntegration 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.UI 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HttpOverrides 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Features 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cors 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.Internal 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.KeyDerivation 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HostFiltering 2.1.1.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing Microsoft.AspNetCore.CookiePolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1.\r\n  Installing Microsoft.AspNetCore.Html.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Twitter 2.1.1.\r\n  Installing Microsoft.AspNetCore.Connections.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization.Policy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.HttpSys 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.SqlServer 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.SqlServer 2.1.1.\r\n  Installing Microsoft.AspNet.WebApi.Client 5.2.6.\r\n  Installing Microsoft.AspNetCore.SignalR.Core 1.0.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ViewFeatures 2.1.1.\r\n  Installing Microsoft.CodeAnalysis.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.JwtBearer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OpenIdConnect 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.WsFederation 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore 2.1.1.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Core 2.1.1.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.5.0.\r\n  Installing System.ComponentModel.Annotations 4.5.0.\r\n  Installing System.Buffers 4.5.0.\r\n  Installing System.Memory 4.5.1.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.1.\r\n  Installing System.Text.Encodings.Web 4.5.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Net.WebSockets.WebSocketProtocol 4.5.1.\r\n  Installing Newtonsoft.Json 11.0.2.\r\n  Installing System.IO.Pipelines 4.5.0.\r\n  Installing System.Numerics.Vectors 4.5.0.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Threading.Tasks.Extensions 4.5.1.\r\n  Installing System.Security.Cryptography.Cng 4.5.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Xml 4.5.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing System.Reflection.Metadata 1.6.0.\r\n  Installing System.Data.SqlClient 4.5.1.\r\n  Installing Newtonsoft.Json.Bson 1.0.1.\r\n  Installing Newtonsoft.Json 10.0.1.\r\n  Installing System.Threading.Channels 4.5.0.\r\n  Installing System.Reflection.Emit 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.OpenIdConnect 5.2.0.\r\n  Installing System.IdentityModel.Tokens.Jwt 5.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.WsFederation 5.2.0.\r\n  Installing System.Collections.Immutable 1.5.0.\r\n  Installing Remotion.Linq 2.2.0.\r\n  Installing System.Interactive.Async 3.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing System.Security.Cryptography.Pkcs 4.5.0.\r\n  Installing System.Security.Permissions 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing NETStandard.Library 1.6.1.\r\n  Installing System.Text.Encoding.CodePages 4.5.0.\r\n  Installing System.Linq 4.3.0.\r\n  Installing runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing System.Diagnostics.Debug 4.3.0.\r\n  Installing System.Globalization 4.3.0.\r\n  Installing System.IO 4.3.0.\r\n  Installing System.Collections 4.3.0.\r\n  Installing System.Runtime.Serialization.Primitives 4.3.0.\r\n  Installing System.Runtime.Serialization.Formatters 4.3.0.\r\n  Installing System.Xml.XmlDocument 4.3.0.\r\n  Installing System.Threading 4.3.0.\r\n  Installing System.Resources.ResourceManager 4.3.0.\r\n  Installing System.Text.Encoding.Extensions 4.3.0.\r\n  Installing System.Xml.XDocument 4.3.0.\r\n  Installing System.Threading.Tasks 4.3.0.\r\n  Installing System.Linq.Expressions 4.3.0.\r\n  Installing System.Runtime.Numerics 4.3.0.\r\n  Installing System.Text.Encoding 4.3.0.\r\n  Installing System.Reflection.Extensions 4.3.0.\r\n  Installing System.Text.RegularExpressions 4.3.0.\r\n  Installing System.Runtime.Extensions 4.3.0.\r\n  Installing System.Reflection 4.3.0.\r\n  Installing System.ObjectModel 4.3.0.\r\n  Installing System.Dynamic.Runtime 4.3.0.\r\n  Installing System.Xml.ReaderWriter 4.3.0.\r\n  Installing Microsoft.CSharp 4.3.0.\r\n  Installing System.ComponentModel.TypeConverter 4.3.0.\r\n  Installing System.Runtime 4.3.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.3.0.\r\n  Installing System.Reflection.Primitives 4.3.0.\r\n  Installing System.AppContext 4.3.0.\r\n  Installing System.Console 4.3.0.\r\n  Installing System.Collections.Concurrent 4.3.0.\r\n  Installing System.Diagnostics.Tools 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.3.0.\r\n  Installing System.IO.FileSystem 4.3.0.\r\n  Installing System.IO.FileSystem.Primitives 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.3.0.\r\n  Installing System.Collections.Immutable 1.3.1.\r\n  Installing System.Runtime.InteropServices 4.3.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Diagnostics.StackTrace 4.3.0.\r\n  Installing System.Reflection.Metadata 1.4.2.\r\n  Installing System.Threading.Thread 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.Analyzers 1.1.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.3.0.\r\n  Installing System.ValueTuple 4.3.0.\r\n  Installing System.Diagnostics.FileVersionInfo 4.3.0.\r\n  Installing System.Threading.Tasks.Parallel 4.3.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.3.0.\r\n  Installing System.Xml.XPath.XDocument 4.3.0.\r\n  Installing System.Text.Encoding.CodePages 4.3.0.\r\n  Installing System.Runtime.InteropServices 4.1.0.\r\n  Installing Microsoft.IdentityModel.Protocols 5.2.0.\r\n  Installing Microsoft.IdentityModel.Tokens 5.2.0.\r\n  Installing Microsoft.IdentityModel.Xml 5.2.0.\r\n  Installing System.Diagnostics.Debug 4.0.11.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing Microsoft.IdentityModel.Tokens.Saml 5.2.0.\r\n  Installing System.Runtime.Extensions 4.1.0.\r\n  Installing System.Threading 4.0.11.\r\n  Installing System.Collections 4.0.11.\r\n  Installing System.Reflection 4.1.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.Linq.Queryable 4.0.1.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Runtime 4.1.0.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 2.1.0.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.0.\r\n  Installing runtime.win-x64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-x86.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-arm64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing Microsoft.NETCore.Platforms 1.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.3.0.\r\n  Installing System.Net.Sockets 4.3.0.\r\n  Installing System.Diagnostics.Tracing 4.3.0.\r\n  Installing System.IO.Compression.ZipFile 4.3.0.\r\n  Installing System.Globalization.Calendars 4.3.0.\r\n  Installing System.Threading.Timer 4.3.0.\r\n  Installing System.Security.Cryptography.Primitives 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing System.Runtime.Handles 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.3.0.\r\n  Installing System.Net.Http 4.3.0.\r\n  Installing Microsoft.NETCore.Targets 1.1.0.\r\n  Installing System.Net.Primitives 4.3.0.\r\n  Installing System.Reflection.Emit.Lightweight 4.3.0.\r\n  Installing System.Reflection.TypeExtensions 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.3.0.\r\n  Installing System.ComponentModel 4.3.0.\r\n  Installing System.ComponentModel.Primitives 4.3.0.\r\n  Installing System.Collections.NonGeneric 4.3.0.\r\n  Installing System.Collections.Specialized 4.3.0.\r\n  Installing runtime.native.System 4.3.0.\r\n  Installing runtime.native.System.IO.Compression 4.3.0.\r\n  Installing System.Buffers 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.native.System.Net.Http 4.3.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing System.Security.Cryptography.Cng 4.3.0.\r\n  Installing System.Security.Cryptography.Csp 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing System.Xml.XPath 4.3.0.\r\n  Installing Microsoft.IdentityModel.Logging 5.2.0.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Runtime.Serialization.Xml 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 1.0.1.\r\n  Installing Microsoft.NETCore.Targets 1.0.1.\r\n  Installing System.Security.Claims 4.3.0.\r\n  Installing System.Reflection.Primitives 4.0.1.\r\n  Installing System.IO 4.1.0.\r\n  Installing System.Globalization 4.0.11.\r\n  Installing System.Threading.Tasks 4.0.11.\r\n  Installing System.Resources.ResourceManager 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing System.IO.FileSystem.Primitives 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.IO.FileSystem 4.0.1.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Text.Encoding 4.0.11.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Runtime.Handles 4.0.1.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 44.04 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    1m8.386s\r\nuser    1m8.010s\r\nsys     0m18.190s\r\nroot@9d1d5e45df6a:/# cd mvcapp/\r\nroot@9d1d5e45df6a:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 557.76 ms for /mvcapp/mvcapp.csproj.\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:07.34\r\n\r\nreal    2m11.716s\r\nuser    1m22.990s\r\nsys     0m8.880s\r\nroot@9d1d5e45df6a:/mvcapp#\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/80","RelatedDescription":"Closed issue \"Improving Performance of ARM32 Docker Images with .NET Core Package Cache\" (#80)"},{"Id":"350233220","IsPullRequest":false,"CreatedAt":"2018-08-13T23:50:57","Actor":"richlander","Number":"81","RawContent":null,"Title":"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+","State":"open","Body":"# Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\r\n\r\nAn [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md) was discovered with [.NET Framework 4.7.1](https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/). This issue was resolved earlier this year, with the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/). We recently learned that some applications, including Johnson Controls’ C-CURE 9000 Software, were negatively impacted by this change as this update requires all client and server workstations to be updated simultaneously with the appropriate Microsoft updates. The changes made to .NET Framework 4.7.1 were also integrated into .NET Framework 4.6 and later servicing releases. As a result, this advisory applies to .NET Framework 4.6 and later versions.\r\n\r\nThis advisory is provided so that developers can correctly diagnose this issue and be aware of our guidance. We will continue to update this issue as we have new information to share.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #832](https://github.com/Microsoft/dotnet/issues/832)\r\n\r\n## Guidance\r\n\r\nThis guidance only applies to customers that have experienced this issue.\r\n\r\nWe have released [an update for .NET Framework 4.6](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/) and later that resolves the issue. **You must deploy the .NET Framework update for this issue to all .NET Framework 4.6+ machines that communicate via serialized objects**. After doing that, cross-machine serialization will work as expected. \r\n \r\nPlease consult your software vendor to understand if this impacts the software you are using.\r\n\r\n## Technical Context\r\n\r\nIn the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/), we made a change to the internal type CultureAwareComparer to implement ISerializable. We made the change in order to address [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md).\r\n\r\nThe issue reported was that a type that contains an instance of CultureAwareComparer was not able to correctly serialize and deserialize across different versions of the .NET Framework. There are a few types in .NET Framework that do this, the most commonly impacted one being the Dictionary<TKey, TValue> type.\r\n \r\nThe change to implement the ISerializable interface had unintended side effects when exchanging this type across different machines. We have had a small number of reports from customers who have been affected.\r\n\r\nA common, but not unique way, of exchanging objects across machines is to use WCF in conjunction with a serializer. One of the common serializers being DataContractSerializer. The side-effect of the change prevented data serialized on systems where the type implements ISerializable to correctly deserialize of systems where the type does NOT implement ISerializable. The same is true of the opposite case, that systems where the type does not implement ISerializable will not correctly deserialize data from systems where the type does implement ISerializable.\r\n\r\nWe have an updated fix that we intend to release within the next month that will remove the implementation of the ISerializable interface on the type and use a different internal mechanism for ensuring the cross-version serialization continues to work as expected. This change addresses the break experienced with WCF.\r\n\r\nThe upcoming fix will remove the implementation of the ISerializable interface on the type and use a different mechanism for ensuring the cross-version serialization of that type continues to work. This change addresses the break experienced with WCF.\r\n\r\n## Symptoms\r\n\r\nAn application that is affected by this issue will most likely crash when trying to deserialize an object. It may print or log an error message similar to the following one:\r\n\r\n```\r\nThe formatter threw an exception while trying to deserialize the message: \r\nThere was an error while trying to deserialize parameter . The InnerException message was ''EndElement' 'Comparer' from namespace '' is not expected. Expecting element '_compareInfo'.'.  Please see InnerException for more details.\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/81","RelatedDescription":"Open issue \"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\" (#81)"},{"Id":"348162872","IsPullRequest":false,"CreatedAt":"2018-08-07T04:26:40","Actor":"richlander","Number":"79","RawContent":null,"Title":"August 2018 .NET Updates","State":"open","Body":"# August 2018 .NET Updates\r\n\r\nThe following .NET updates were released in August 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [August 2018 .NET Framework Security and Quality Rollup - August 14, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/)\r\n* [Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+](https://github.com/dotnet/announcements/issues/81)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [August 2018 Preview of Quality Rollup - August 30, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core August 2018 Update - August 21, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.3/2.1.3.md)\r\n* [.NET Core 2.1.400 SDK Update - August 14, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.400-SDK/2.1.400-sdk.md)\r\n\r\n## End of Support for Operating System Versions\r\n\r\n.NET Core does not support systems that are out of support. The following operating systems are now out of support. To stay supported, move to a [later version of the given operating system](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md).\r\n\r\n* [Debian 8 -- Jessie](https://lists.debian.org/debian-security-announce/2018/msg00132.html)\r\n* [Ubuntu 17.10 -- Artful Aardvark](https://lists.ubuntu.com/archives/ubuntu-announce/2018-July/000232.html)\r\n\r\nSee [Debian Jessie End of Life -- Impact on .NET Core Docker Images](https://github.com/dotnet/announcements/issues/78)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/79","RelatedDescription":"Open issue \"August 2018 .NET Updates\" (#79)"},{"Id":"348161534","IsPullRequest":false,"CreatedAt":"2018-08-07T04:18:01","Actor":"richlander","Number":"78","RawContent":null,"Title":"Debian Jessie End of Life -- Impact on .NET Core Docker Images","State":"open","Body":"# Debian Jessie End of Life -- Impact on .NET Core Docker Images\r\n\r\nDebian Jessie (AKA Debian 8) is now [out of support](https://lists.debian.org/debian-security-announce/2018/msg00132.html). Debian Jessie is no longer a supported operating system for .NET Core. Docker users need to switch to Debian Stretch-based (AKA Debian 9) images to stay in support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #647](https://github.com/dotnet/dotnet-docker/issues/647)\r\n\r\n## Context\r\n\r\nJessie-based images are currently provided for .NET Core 1.0, 1.1 and 2.0. .NET Core 1.0 and 1.1 expose multi-arch tags, such as `1.0-runtime` and `1.1-sdk`, that support Debian Jessie. When pulled for a Linux Docker daemon (on Linux or Windows), these tags pull Jessie-based images. .NET Core 2.0 supports Jessie, but it is not the default. .NET Core 2.0 multi-arch tags, such as `2.0-runtime` and `2.0-sdk`, pull Debian Stretch-based images, when pulled for a Linux Docker daemon. We made a conscious decision with .NET Core 2.0 to move off of Jessie as the default to avoid this problem, based the Jessie 2018 EOL date. .NET Core 2.1 does not support Jessie, only Stretch.\r\n\r\nWe recently posted about our policy for underlying operating system dependencies with Docker:\r\n\r\n> For each major and minor .NET version, we may take a new major operating system version dependency. As I mentioned earlier, we adopted Debian 9 as the base image for .NET Core 2.0. We stayed with Debian 9 for .NET Core 2.1, since Debian 10 (AKA “Buster”) has not been released. Debian 9 will remain the default base image for .NET Core 2.1 for the life of .NET Core 2.1. **Once we adopt an underlying operating system major version, we will not change it for the life of that given .NET release.**\r\n\r\nSource: https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/\r\n\r\n## Plan\r\n\r\nWe will continue to re-build .NET Core 1.0 and 1.1 multi-arch tags on top of Jessie for the remaining [supported lifetime of .NET Core 1.0 and 1.1](https://github.com/dotnet/core/blob/master/microsoft-support.md). We will also provide a Stretch-based image for .NET Core 1.1. This tag will look like the following: `1.1-runtime-stretch` or `1.1.9-sdk-stretch`. This is same format that Jessie has used.\r\n\r\nWe will produce Jessie-based images for NET Core 2.0 until October 2018, which is when [.NET Core 2.0 support ends](https://github.com/dotnet/core/blob/master/microsoft-support.md). .NET Core 2.0 multi-arch tags support Debian Stretch, not Jessie, as described above.\r\n\r\nIn summary, .NET Core is no longer supported on Debian Jessie, with Docker or otherwise. We will produce Docker images for Jessie until .NET Core 1.0, 1.1 and 2.0 support ends, respectively, to avoid breaking applications. This aligns with the policy defined above, per [Staying up-to-date with .NET Container Images](https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/).\r\n\r\n## Affected Repos\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)","Url":"https://github.com/dotnet/announcements/issues/78","RelatedDescription":"Open issue \"Debian Jessie End of Life -- Impact on .NET Core Docker Images\" (#78)"},{"Id":"345028102","IsPullRequest":false,"CreatedAt":"2018-07-26T22:31:32","Actor":"leecow","Number":"77","RawContent":null,"Title":"https://dot.net now using TLS 1.2-only","State":"open","Body":"Earlier today, https://dot.net switched to using TLS 1.2-only. Most Windows Powershell instances default to TLS 1.1 and will thus fail with `wget : The underlying connection was closed: An unexpected error occurred on a send. trying to run the previous command.`\r\n\r\nAn example of a PowerShell script fix can be seen in https://github.com/dotnet/docs/pull/6689","Url":"https://github.com/dotnet/announcements/issues/77","RelatedDescription":"Open issue \"https://dot.net now using TLS 1.2-only\" (#77)"},{"Id":"343360319","IsPullRequest":false,"CreatedAt":"2018-07-21T22:29:05","Actor":"richlander","Number":"76","RawContent":null,"Title":"July 2018 .NET Updates","State":"open","Body":"# July 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework 4.7.2 is available on Windows Update, WSUS and MU Catalog](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-framework-4-7-2-is-available-on-windows-update-wsus-and-mu-catalog/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3632](https://blogs.msdn.microsoft.com/dotnet/2018/07/18/announcing-net-framework-4-8-early-access-build-3632/)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-core-july-2018-update/)\r\n\r\n## .NET Core Support Policies\r\n\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core Supported OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n","Url":"https://github.com/dotnet/announcements/issues/76","RelatedDescription":"Open issue \"July 2018 .NET Updates\" (#76)"},{"Id":"343360017","IsPullRequest":false,"CreatedAt":"2018-07-21T22:22:25","Actor":"richlander","Number":"75","RawContent":null,"Title":"June 2018 .NET Updates","State":"open","Body":"# June 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework June 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/06/13/net-framework-june-2018-security-and-quality-rollup/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3621!](https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core 2.1 June Update](https://blogs.msdn.microsoft.com/dotnet/2018/06/22/net-core-2-1-june-update/)\r\n* [.NET Core 2.0 will reach End of Life on October 1, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core 1.0 and 1.1 EOL Dates Documented](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n\r\n## Previous Updates\r\n\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/75","RelatedDescription":"Open issue \"June 2018 .NET Updates\" (#75)"},{"Id":"343283437","IsPullRequest":false,"CreatedAt":"2018-07-21T00:56:48","Actor":"richlander","Number":"74","RawContent":null,"Title":"Advisory on July 2018 .NET Framework Updates","State":"open","Body":"# Advisory on July 2018 .NET Framework Updates\r\n\r\nUpdated: 08/14/2018\r\n\r\n> A new [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/) has been released that **resolves this advisory for all supported Windows versions**.\r\n\r\n~~A new [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) has been released that resolves this advisory. See Guidance section.~~\r\n\r\n~~Guidance has changed for Windows 7, Windows Server 2008 and Windows Server 2008 R2. See Guidance section.~~\r\n\r\nThe [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) was released earlier this month. We have received multiple customer reports of [applications that fail to start or don't run correctly](https://support.microsoft.com/en-us/help/4345913) after installing the July 2018 update. These reports are specific to applications that initialize a COM component and run with restricted permissions.\r\n\r\nWe have stopped distributing the .NET Framework July 2018 updates on Windows Update and are actively working on fixing and re-shipping this month's updates. If you installed the July 2018 update and have not yet seen any negative behavior, we recommend that you leave your systems as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We discovered while investigating this issue that we have a test hole for the specific combination of COM activation and restricted permissions, including impersonation. We will be mitigating that gap going forward. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this issue and [post](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/) as we have new information.\r\n\r\n## Discussion\r\nPlease share your thoughts/experience on this advisory and see what others are saying at:\r\n\r\n* [microsoft/dotnet #811](https://github.com/Microsoft/dotnet/issues/811)\r\n\r\n## Guidance\r\n\r\nWe strongly recommend that you install [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/).\r\n\r\n~~We recommend that you install [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) on your systems if you experienced the symptoms described in this advisory. If you did not experience these symptoms, we recommend you wait to update your machines until the next regular update, in August.~~\r\n\r\n~~On Windows 7, Windows Server 2008, and Windows Server 2008 R2, we have found that the combination of [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) and  [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) do not resolve all symptoms. On these Windows versions, if you are experiencing these symptoms after installing this combination of patches, we recommend that you uninstall (only) the Monthly Rollup patch and then install the appropriate Security Only patch listed at [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356).~~\r\n\r\n## Technical Context\r\n\r\nThe .NET Framework runtime uses the process token to determine whether the process is being run within an elevated context. These system calls can fail if the required process inspection permissions are not present. This causes an “access denied\" error.\r\n\r\n## Symptoms\r\n\r\nA COM component fails to load because of “access denied,” “class not registered,” or “internal failure occurred for unknown reasons” errors. \r\n\r\nThe most commonly reported failure results in the following error message:\r\n\r\n```console\r\nException type: System.UnauthorizedAccessException\r\nMessage: Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\n### Sharepoint\r\n\r\nWhen users browse to a SharePoint site they may see the following HTTP 403 message:\r\n\r\n```console\r\n\"The Web Site declined to show this webpage\"\r\n```\r\n\r\nThe SharePoint ULS Logs will contain a message like the following:  \r\n\r\n```console\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 0000       High                UnauthorizedAccessException for the request. 403 Forbidden will be returned. Error=An error occurred creating the configuration section handler for system.serviceModel/extensions: Could not load file or assembly <AssemblySignature>  or one of its dependencies. Access is denied. (C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\Config\\machine.config line 180)    \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General b6p2      VerboseEx                Sending HTTP response 403:403 FORBIDDEN.      \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 8nca       Verbose                Application error when access /, Error=Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\nWhen crawling a people content source, the request may fail with the following entry logged to the SharePoint ULS Log: \r\n\r\n```console\r\nmssearch.exe (0x118C) 0x203C SharePoint Server Search Crawler:Gatherer Plugin cd11 Warning The start address sps3s://<URLtoSite> cannot be crawled.  Context: Application 'Search_Service_Application', Catalog 'Portal_Content'  Details:  Class not registered   (0x80040154)  \r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive error \"ActiveX component can't create object\" \r\n\r\n.NET Application creates instance of .NET COM application within an Impersonation Context may receive error \"0x80040154 (REGDB_E_CLASSNOTREG)\"\r\n```\r\n\r\n### BizTalk Server Administration Console\r\n\r\nBizTalk Server Administration Console fails to launch properly with the following errors: \r\n\r\n```console\r\nAn internal failure occurred for unknown reasons. (WinMgmt) \r\n\r\nProgram Location:  \r\n\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode, IntPtr errorInfo) \r\n\r\n   at System.Management.ManagementObject.Get() \r\n\r\n   at Microsoft.BizTalk.SnapIn.Framework.WmiProvider.SelectInstance\r\n```\r\n\r\n> Warning: The following workarounds may make a computer or a network more vulnerable to attack by malicious users or by malicious software such as viruses. We do not recommend these workarounds but are providing this information so that you can implement the workarounds at your own discretion. Use these workarounds at your own risk.\r\n\r\nUse the following guidance as a workaround:\r\n\r\n* Add “NETWORK SERVICE” to the local Administrators group. \r\n\r\n### IIS with Classic ASP\r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive the following error: \"ActiveX component can't create object\". Use the following guidance as a workaround.\r\n\r\n* If your web site uses Anonymous Authentication, change the Web Site Anonymous Authentication credentials to use the \"Application pool identity\"\r\n* If your site uses Basic Authentication, log into the application once as the application pool identity and then create an instance of the .NET COM component. All subsequent activations for that .NET COM component should succeed, for any user.\r\n\r\n### .NET applications using COM and impersonation\r\n\r\n.NET Applications that creates instances of .NET COM application within an Impersonation Context may receive the following error: \"0x80040154 (REGDB_E_CLASSNOTREG)\". Use the following guidance as a workaround.\r\n\r\n* Create an instance of the .NET COM component prior to the impersonation context call. Later impersonated create instance calls should work as expected.\r\n* Run the .NET Application in the context of the impersonated user\r\n* Avoid using Impersonation when creating the .NET COM object","Url":"https://github.com/dotnet/announcements/issues/74","RelatedDescription":"Open issue \"Advisory on July 2018 .NET Framework Updates\" (#74)"},{"Id":"339929129","IsPullRequest":false,"CreatedAt":"2018-07-10T17:00:37","Actor":"blowdart","Number":"73","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core does not correctly validate certificates. An attacker who successfully exploited this vulnerability could present an expired certificate when challenged.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle certificate validation.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wcf/issues/3009\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not use Windows Communication Foundation you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, or ASP.NET Core based application that uses System.Private.ServiceModel with a version of 4.5.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Private.ServiceModel | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 |  4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Duplex | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.443 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Http | 4.0.0, 4.0.10, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.NetTcp | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Primitives | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.2 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Security | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n### <a name=\"project-format\"></a>.NET Core Project formats\r\n\r\n.NET Core has two different project file formats, depending on what software created the project.\r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1, .NET Core 2.0 and Microsoft Visual Studio 2017.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file or your `project.json` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n The `System.Private.ServiceModel` package is not meant to be directly depended on and will not appear in your direct dependency list.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects *OR*.\r\n* By examining the `project.lock.json` file contained in the root directory of your project for `project.json` based projects.\r\n\r\nThe `project.assets.json` and `project.lock.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in a csproj based project / Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.ServiceModel.Http` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.3\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"direct-dependencies-vs2015\"></a> Fixing Direct Dependencies in project.json based project / Visual Studio 2015\r\n\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n     \"System.ServiceModel.Http\" : \"4.0.0\"\r\n    }\r\n```\r\n\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Mvc.Core` and `System.ServiceModel.Http`.\r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on a vulnerable package, `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `System.ServiceModel.Http` to 4.4.3.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n    \"System.ServiceModel.Http \": \"4.4.3\"\r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) or the [the `project.lock.json` file](#project-lock-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json (csproj/VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.ServiceModel.Http/4.3.0` is a reference to version 4.3.0 of `System.ServiceModel.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.3.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### <a name=\"project-lock-json\"></a> Manually reviewing project.lock.json (project.json/VS2015)\r\n\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `System.ServiceModel.Http/4.0.1` is a reference to v4.0.1 of `System.ServiceModel.Http`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to a vulnerable version of `System.ServiceModel.Http` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `System.ServiceModel.Http` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"System.ServiceModel.Http\": \"4.1.2\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8356](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8356)\r\n\r\n### Revisions\r\n\r\nV1.1 (July 23, 2018): Updated package versions, as some assemblies were released unsigned.\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2018-07-23_\r\n","Url":"https://github.com/dotnet/announcements/issues/73","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\" (#73)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1102725890788667394","CreatedAt":"2019-03-05T00:21:54+00:00","UserScreenname":"dotnet","Text":".NET Framework March 1, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019\n\nhttps://t.co/QdpE4oYqOM","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":5,"RawContent":null},{"Id":"1101095169120747523","CreatedAt":"2019-02-28T12:22:00+00:00","UserScreenname":"dotnet","Text":"Subscribe to the On .NET on @ch9 to keep up with the latest episodes as we explore the world of .NET… https://t.co/1IClAyi1yE","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":8,"RawContent":null},{"Id":"1098610296367841282","CreatedAt":"2019-02-21T15:48:00+00:00","UserScreenname":"dotnet","Text":"The #dotnet blog just got a makeover!\n\nDiscover and share great content while enjoying the modern, clean design of… https://t.co/b0rdirHuPF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":49,"FavoriteCount":16,"RawContent":null},{"Id":"1098594189313363968","CreatedAt":"2019-02-21T14:44:00+00:00","UserScreenname":"dotnet","Text":". @ChristosMatskas joins #OnDotNet to share the story of an application he built using the Azure SDKs for .NET and… https://t.co/TR4ua9BnvV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":10,"RawContent":null},{"Id":"1098337450924040194","CreatedAt":"2019-02-20T21:43:49+00:00","UserScreenname":"dotnet","Text":"Check out the February updates for .NET. https://t.co/8Fz51sPyod","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":9,"RawContent":null},{"Id":"1097924819415326720","CreatedAt":"2019-02-19T18:24:10+00:00","UserScreenname":"dotnet","Text":".NET Core 1.0 and 1.1 will reach End of Life on June 27, 2019 https://t.co/45GssRCrZk","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":128,"FavoriteCount":133,"RawContent":null}]}},"RunOn":"2019-03-05T05:30:31.4394093Z","RunDurationInMilliseconds":8367}