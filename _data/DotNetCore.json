{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework February 2019 Preview of Quality Rollup","PublishedOn":"2019-02-19T23:42:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we released the February 2019 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Addresses an issue in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core 1.0 and 1.1 will reach End of Life on June 27, 2019","PublishedOn":"2019-02-19T18:22:20+00:00","CommentsCount":2,"FacebookCount":0,"Summary":".NET Core 1.0 was released on June 27, 2016 and .NET Core 1.1 was released on November 16, 2016. As an LTS release, .NET Core 1.0 is supported for three years. .NET Core 1.1 fits into the same support...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-core-1-0-and-1-1-will-reach-end-of-life-on-june-27-2019/","RawContent":null},{"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","PublishedOn":"2019-02-15T14:03:53+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Final Update 2/19/19 @1:30 PM (PST): This advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/15/advisory-on-february-2019-security-update-for-windows-10-update-1809/","RawContent":null},{"Title":"Microsoft’s Developer Blogs are Getting an Update","PublishedOn":"2019-02-13T19:49:42+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"In the coming days, we’ll be moving our developer blogs to a new platform with a modern, clean design and powerful features that will make it easy for you to discover and share great content. This...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/microsofts-developer-blogs-are-getting-an-update/","RawContent":null},{"Title":"Help us make the .NET Architecture guides better for you!","PublishedOn":"2019-02-13T15:47:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Over the last couple of years, we worked with experts to create some incredible architecture guides &#38; reference samples for .NET developers. We focused on Microservices Architecture, Modernizing...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/help-us-make-the-net-architecture-guides-better-for-you/","RawContent":null},{"Title":".NET Framework February 2019 Security and Quality Rollup","PublishedOn":"2019-02-13T14:45:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Updated: February 19, 2019 The advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/","RawContent":null},{"Title":".NET Core February 2019 Updates – 1.0.14, 1.1.11, 2.1.8 and 2.2.2","PublishedOn":"2019-02-12T18:30:20+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core February 2019 Update. These updates contain security and reliability fixes. See the individual release notes for details on included reliability fixes. .NET Core...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/12/net-core-february-2019/","RawContent":null},{"Title":"Announcing ML.NET 0.10 – Machine Learning for .NET","PublishedOn":"2019-02-08T07:07:18+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers. Using ML.NET, developers can leverage their existing tools and skillsets to develop...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/07/announcing-ml-net-0-10-machine-learning-for-net/","RawContent":null},{"Title":"Submit to the Applied F# Challenge!","PublishedOn":"2019-02-05T16:17:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written by Lena Hall, a Senior Cloud Developer Advocate at Microsoft. F# Software Foundation has recently announced their new initiative — Applied F# Challenge! We encourage you to...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/02/05/submit-to-the-applied-f-challenge/","RawContent":null},{"Title":"Announcing .NET Core 3 Preview 2","PublishedOn":"2019-01-29T17:57:06+00:00","CommentsCount":52,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3 Preview 2. It includes new features in .NET Core 3.0 and C# 8, in addition to the large number of new features in Preview 1. ASP.NET Core 3.0 Preview 2  is...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/29/announcing-net-core-3-preview-2/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10537155256","Type":"PullRequestEvent","CreatedAt":"2019-10-01T20:30:21","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Opened pull request \"Add new Cake Maintainer\" (#150) at dotnet/foundation","RelatedBody":""},{"Id":"10530380699","Type":"PullRequestEvent","CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Opened pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10780907118","Type":"IssuesEvent","CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 2\" (#134) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/XXXX has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/XXXX, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues"},{"Id":"10748742804","Type":"IssuesEvent","CreatedAt":"2019-10-30T15:14:54","Actor":"jaredpar","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Opened issue \"Repository Consolidation Timeline\" (#133) at dotnet/announcements","RelatedBody":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository."},{"Id":"10738283611","Type":"IssuesEvent","CreatedAt":"2019-10-29T14:32:57","Actor":"mthalman","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Opened issue \"Release of Alpine 3.10 Docker images\" (#132) at dotnet/announcements","RelatedBody":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)"},{"Id":"10647641262","Type":"IssuesEvent","CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 1\" (#131) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"10786110532","Type":"IssuesEvent","CreatedAt":"2019-11-05T02:12:06","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27678","RelatedDescription":"Opened issue \"Test failed: JIT\\jit64\\mcc\\interop\\mcc_i77\\mcc_i77.cmd\" (#27678) at dotnet/coreclr","RelatedBody":"**Job:**\r\n[coreclr-jitstress #20191103.1 Run Test Pri1 Windows_NT arm checked](https://dev.azure.com/dnceng/public/_build/results?buildId=414346)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/1ca29d75-a0c4-4521-aa41-69d31d4ae5f7/workitems/JIT.jit64.mcc/console\r\n\r\n**OS & Arch:**\r\nwindows arm\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_JitStress=2\r\n\r\n**Log:**\r\n```\r\nJIT\\jit64\\mcc\\interop\\mcc_i77\\mcc_i77.cmd [FAIL]\r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\1ca29d75-a0c4-4521-aa41-69d31d4ae5f7\\Work\\30be2e7c-f138-41e6-8a1f-9edffbe565ef\\Exec\\JIT\\jit64\\Reports\\JIT.jit64\\mcc\\interop\\mcc_i77\\mcc_i77.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n       \"C:\\dotnetbuild\\work\\1ca29d75-a0c4-4521-aa41-69d31d4ae5f7\\Payload\\corerun.exe\" mcc_i77.dll \r\n      FAILED: [field f1] => expected = 12, actual = 0\r\n      FAILED\r\n      ERROR! Parameter c1 => expected 1, actual 1.\r\n      Expected: 100\r\n      Actual: 1\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```"},{"Id":"10786099595","Type":"IssuesEvent","CreatedAt":"2019-11-05T02:09:33","Actor":"VincentBu","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27677","RelatedDescription":"Opened issue \"Test failed: JIT\\Methodical\\tailcall\\_il_dbgdeep_virt\\_il_dbgdeep_virt.cmd\" (#27677) at dotnet/coreclr","RelatedBody":"**Job:**\r\n[coreclr-jitstress #20191103.1 Run Test Pri1 Windows_NT arm checked](https://dev.azure.com/dnceng/public/_build/results?buildId=414346)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/ffa380b5-7806-4bef-abfe-f0baad1e37e5/workitems/JIT.Methodical/console\r\n\r\n**OS & Arch:**\r\nwindows arm\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=1\r\nCOMPlus_JitStress=1\r\n\r\n**Log:**\r\n```\r\nJIT\\Methodical\\tailcall\\_il_dbgdeep_virt\\_il_dbgdeep_virt.cmd [FAIL]\r\n      \r\n      Assert failure(PID 88 [0x00000058], Thread: 16224 [0x3f60]): !CREATE_CHECK_STRING(!\"Detected use of a corrupted OBJECTREF. Possible GC hole.\")\r\n      \r\n      <no module>! <no symbol> + 0x0 (0x00000000)\r\n          File: F:\\workspace\\_work\\1\\s\\src\\vm\\object.cpp Line: 669\r\n          Image: C:\\dotnetbuild\\work\\ffa380b5-7806-4bef-abfe-f0baad1e37e5\\Payload\\CoreRun.exe\r\n      \r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\ffa380b5-7806-4bef-abfe-f0baad1e37e5\\Work\\ce8f33bf-15b1-4a5b-9406-fcfe6c76d310\\Exec\\JIT\\Methodical\\Reports\\JIT.Methodical\\tailcall\\_il_dbgdeep_virt\\_il_dbgdeep_virt.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n       \"C:\\dotnetbuild\\work\\ffa380b5-7806-4bef-abfe-f0baad1e37e5\\Payload\\corerun.exe\" _il_dbgdeep_virt.dll \r\n      Expected: 100\r\n      Actual: -1073740286\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```"},{"Id":"10785905614","Type":"PullRequestEvent","CreatedAt":"2019-11-05T01:24:38","Actor":"echesakovMSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27358","RelatedDescription":"Closed pull request \"Disable JIT\\Directed\\VectorABI\\VectorMgdMgdStatic_r under JitStress modes\" (#27358) at dotnet/coreclr","RelatedBody":"Same assertion as in https://github.com/dotnet/coreclr/pull/27291\r\nFails in https://dev.azure.com/dnceng/public/_build/results?buildId=392704\r\n\r\nRe-enable when #26491 is fixed\r\n\r\ncc @dotnet/jit-contrib "},{"Id":"10785884336","Type":"PullRequestEvent","CreatedAt":"2019-11-05T01:20:00","Actor":"cshung","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27676","RelatedDescription":"Opened pull request \"[WIP] Support custom modifier for method signature\" (#27676) at dotnet/coreclr","RelatedBody":"WIP"},{"Id":"10785872983","Type":"IssuesEvent","CreatedAt":"2019-11-05T01:17:22","Actor":"EgorBo","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27675","RelatedDescription":"Opened issue \"JIT: dead stores are not eliminated\" (#27675) at dotnet/coreclr","RelatedBody":"Couldn't find any related issue and decided to file it:\r\n```csharp\r\nunsafe void DeadStore1(int* array)\r\n{\r\n    *array = 1;\r\n    *array = 2;\r\n    *array = 3;\r\n}\r\n\r\nvoid DeadStore2(ref int x)\r\n{\r\n    x = 1;\r\n    x = 2;\r\n    x = 3;\r\n}\r\n\r\nvoid DeadStore3(int[] array)\r\n{\r\n    if (0 < (uint)array.Length)\r\n    {\r\n        array[0] = 1;\r\n        array[0] = 2;\r\n        array[0] = 3;\r\n    }\r\n}\r\n```\r\nCodegen:\r\n```asm\r\n; DeadStore1(long):this\r\nG_M36731_IG01:\r\nG_M36731_IG02:\r\n       mov      dword ptr [rdx], 1\r\n       mov      dword ptr [rdx], 2\r\n       mov      dword ptr [rdx], 3\r\nG_M36731_IG03:\r\n       ret      \r\n; Total bytes of code: 19\r\n\r\n\r\n; DeadStore2(byref):this\r\nG_M42680_IG01:\r\nG_M42680_IG02:\r\n       mov      dword ptr [rdx], 1\r\n       mov      dword ptr [rdx], 2\r\n       mov      dword ptr [rdx], 3\r\nG_M42680_IG03:\r\n       ret      \r\n; Total bytes of code: 19\r\n\r\n\r\n; DeadStore3(System.Int32[]):this\r\nG_M18892_IG01:\r\nG_M18892_IG02:\r\n       mov      eax, dword ptr [rdx+8]\r\n       test     eax, eax\r\n       je       SHORT G_M18892_IG04\r\nG_M18892_IG03:\t\t;; bbWeight=0.50\r\n       mov      dword ptr [rdx+16], 1\r\n       mov      dword ptr [rdx+16], 2\r\n       mov      dword ptr [rdx+16], 3\r\nG_M18892_IG04:\r\n       ret      \r\n; Total bytes of code: 29\r\n```\r\nIn none of these cases dead stores were eliminated.\r\nIs it a known Value Numbering limitation?"},{"Id":"10785839376","Type":"PullRequestEvent","CreatedAt":"2019-11-05T01:10:07","Actor":"safern","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27674","RelatedDescription":"Opened pull request \"Update tryrun.cmake in order to be able to build corefx in consolidated repo\" (#27674) at dotnet/coreclr","RelatedBody":"We need this cache values for try run when cross compiling for arm. Since coreclr is the source of the cross folder that we're using in the consolidated repo we need to add them here in order to be able to build the libraries partition with the shared cross folder.\r\n\r\ncc: @jkoritzinsky @ViktorHofer @danmosemsft "},{"Id":"10785601451","Type":"PullRequestEvent","CreatedAt":"2019-11-05T00:17:27","Actor":"fadimounir","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27585","RelatedDescription":"Closed pull request \"Move p/invoke pregeneration out of single-exe branch\" (#27585) at dotnet/coreclr","RelatedBody":"Brings over p/invoke pregeneration from CoreRT into crossgen2.\r\n\r\nThis is just xcopy of the src/tools/crossgen2 directory in the single-exe branch with David's profile data changes omitted. I had to fix a `using` directive in one of the files because a `using` keyword the branch was using got deleted in master.\r\n\r\nThis is basically all that I've done in #26767, #27036, #27109, #27286, #27389, #27436.\r\n\r\nI don't know if there's a way to do this kind of selective merge in git, but I didn't particularly care - most of the interesting history for these files is on the CoreRT side anyway.\r\n\r\nAlso including the change to prestub.cpp that unlocks using the generated p/invokes.\r\n\r\nSeems like getting rid of these being IL stubs will require RyuJIT changes and possibly R2R file format changes and I don't want to do those in a branch that has broken CI.\r\n\r\nCc @dotnet/crossgen-contrib "}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"10785305208","Type":"PullRequestEvent","CreatedAt":"2019-11-04T23:15:12","Actor":"dsplaisted","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13029","RelatedDescription":"Opened pull request \"Enable SDL validation\" (#13029) at dotnet/cli","RelatedBody":"Sample build: https://dev.azure.com/dnceng/internal/_build/results?buildId=415456&view=results\r\n\r\n@sunandabalu for review\r\n"},{"Id":"10785247420","Type":"PullRequestEvent","CreatedAt":"2019-11-04T23:04:08","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13028","RelatedDescription":"Opened pull request \"Merge release/2.1.5xxto2.1.6xx to get mac 10.15 signing change\" (#13028) at dotnet/cli","RelatedBody":""},{"Id":"10785230044","Type":"PullRequestEvent","CreatedAt":"2019-11-04T23:01:02","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13027","RelatedDescription":"Opened pull request \"Update SDK with mac10.15 signing fix\" (#13027) at dotnet/cli","RelatedBody":""},{"Id":"10785112989","Type":"PullRequestEvent","CreatedAt":"2019-11-04T22:40:30","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13026","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13026) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191104.4\r\n- **Date Produced**: 11/4/2019 8:47 PM\r\n- **Commit**: e3b971a75e2512d267605aa190122b874d9d948d\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19554.4\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"},{"Id":"10785082878","Type":"PullRequestEvent","CreatedAt":"2019-11-04T22:35:20","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13018","RelatedDescription":"Merged pull request \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#13018) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191101.9\r\n- **Date Produced**: 11/1/2019 11:10 PM\r\n- **Commit**: 0f54cd75536340715c02e9913aa5a8d435e76518\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.1-servicing.19551.9\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n"},{"Id":"10784887364","Type":"PullRequestEvent","CreatedAt":"2019-11-04T22:05:12","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13026","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13026) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191104.4\r\n- **Date Produced**: 11/4/2019 8:47 PM\r\n- **Commit**: e3b971a75e2512d267605aa190122b874d9d948d\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19554.4\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10781240793","Type":"IssuesEvent","CreatedAt":"2019-11-04T14:33:57","Actor":"peni4142","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1641","RelatedDescription":"Opened issue \"Regex Bug\" (#1641) at dotnet/standard","RelatedBody":"Hi guys,\r\nI have a test for you\r\n\r\n[x] Bug Report\r\n\r\nThe following regex test will return an empty string in the group[0], which in my opinion can't be true.\r\n\r\n\r\n```C#\r\n        [TestMethod()]\r\n        public void BugTest()\r\n        {\r\n            Match matchEnsureObject = new Regex(\"^\\\\[MERGE-CMD: ENSURE OBJECT\\\\(([^)]+)\\\\)\\\\]$\").Match(\"[MERGE-CMD: ENSURE OBJECT(aLong) AT 1]\");\r\n            if(matchEnsureObject.Groups[0].Value == \"\")\r\n            {\r\n                throw new Exception(\"Match can't be an empty value\");\r\n            }\r\n        }\r\n```\r\n"},{"Id":"10780609696","Type":"PullRequestEvent","CreatedAt":"2019-11-04T13:21:48","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1640","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1640) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191103.8\r\n- **Date Produced**: 11/4/2019 8:18 AM\r\n- **Commit**: 15e7e1569a8c3a5502c476c31b60e06d633b3efa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19553.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19553.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19553.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10780530666","Type":"PullRequestEvent","CreatedAt":"2019-11-04T13:11:42","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1640","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1640) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191103.8\r\n- **Date Produced**: 11/4/2019 8:18 AM\r\n- **Commit**: 15e7e1569a8c3a5502c476c31b60e06d633b3efa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19553.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19553.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19553.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10775337562","Type":"PullRequestEvent","CreatedAt":"2019-11-03T13:44:18","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1639","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/corefx\" (#1639) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191102.6\r\n- **Date Produced**: 11/3/2019 4:48 AM\r\n- **Commit**: bfaed4d48a921a339f9691c74425bec9d2f760a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19552.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19552.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19552.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10775277816","Type":"PullRequestEvent","CreatedAt":"2019-11-03T13:19:10","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1639","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/corefx\" (#1639) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191102.6\r\n- **Date Produced**: 11/3/2019 4:48 AM\r\n- **Commit**: bfaed4d48a921a339f9691c74425bec9d2f760a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19552.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19552.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19552.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n"},{"Id":"10772453622","Type":"IssuesEvent","CreatedAt":"2019-11-02T14:52:31","Actor":"stephentoub","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1638","RelatedDescription":"Closed issue \"_dummy and _dummyPrimitive in System.Span\" (#1638) at dotnet/standard","RelatedBody":"Why is it required that all net standard compliant implementations need a private field _dummy and _dummyPrimitive to provide a standard Span<T>?\r\n\r\nShould it be really part of the standard? Isn't it just an implementation detail?"},{"Id":"10772426753","Type":"IssuesEvent","CreatedAt":"2019-11-02T14:43:20","Actor":"bernd5","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1638","RelatedDescription":"Opened issue \"_dummy and _dummyPrimitive in System.Span\" (#1638) at dotnet/standard","RelatedBody":"Why is it required that all net standard compliant implementations need a private field _dummy and _dummyPrimitive to provide a standard Span<T>?\r\n\r\nShould it be really part of the standard? Isn't it just an implementation detail?"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"10786722820","Type":"PullRequestEvent","CreatedAt":"2019-11-05T04:47:15","Actor":"safern","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42376","RelatedDescription":"Merged pull request \"Update linux containers to match coreclr's and use latest toolchain\" (#42376) at dotnet/corefx","RelatedBody":"This is needed in order to consolidate the cross folder for the repo consolidation since coreclr is now using clang-9 and cmake 3.15.\r\n\r\ncc: @ViktorHofer @jkoritzinsky @wfurt "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"10785972516","Type":"IssuesEvent","CreatedAt":"2019-11-05T01:39:51","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39690","RelatedDescription":"Opened issue \"ExtractMethod does not work on parts of a switch expression\" (#39690) at dotnet/roslyn","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/751819/extractmethod-does-not-work-on-parts-of-a-switch-e.html)._\n\n---\nIf you have a C# 8 switch expression such as below:\n\nint Foo(int x) =&gt; x switch\n        {\n            1 =&gt; 1,\n            _ =&gt; 1 + x\n        };\n\nIf you highlight 1 + x and choose extract method from the context menu, it should create:\n\nint Foo(int x) =&gt; x switch\n        {\n            1 =&gt; 1,\n            _ =&gt; NewMethod(x)\n        };\n\nprivate static int NewMethod(x) =&gt; x+1;\n\nWhat it actually creates is:\n\nint Foo(int x) =&gt; NewMethod(x);\n\nprivate static int NewMethod(int x)\n        {\n            return x switch\n            {\n                1 =&gt; 1,\n                _ =&gt; 1 + x\n            };\n        }\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 9/28/2019, 07:47 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 9/30/2019, 00:01 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"10785965229","Type":"IssuesEvent","CreatedAt":"2019-11-05T01:38:04","Actor":"pakrym","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39689","RelatedDescription":"Opened issue \"Completion sugests items that do not satisfy generic constraint\" (#39689) at dotnet/roslyn","RelatedBody":"**Version Used**: Version 16.5.0 Preview 1.0 [29501.166.master]\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create Console app\r\n2. Add `Azure.Storage.Blobs` Nuget package\r\n3. Open intellisense on `args.`\r\n\r\n**Expected Behavior**:\r\n\r\nExtension methods that don't satisfy the generic constraint are not shown.\r\n\r\n**Actual Behavior**:\r\n\r\nAddBlobServiceClient is shown\r\n\r\n![image](https://user-images.githubusercontent.com/1697911/68171664-8dd80f80-ff29-11e9-8e3c-b32ce11ed795.png)\r\n\r\n\r\n``` C#\r\n\r\n        /// <summary>\r\n        /// Registers a <see cref=\"BlobServiceClient\"/> instance with connection options loaded from the provided <paramref name=\"configuration\"/> instance.\r\n        /// </summary>\r\n        public static IAzureClientBuilder<BlobServiceClient, BlobClientOptions> AddBlobServiceClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)\r\n            where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>\r\n        {\r\n            return builder.RegisterClientFactory<BlobServiceClient, BlobClientOptions>(configuration);\r\n        }\r\n```"},{"Id":"10785919296","Type":"IssuesEvent","CreatedAt":"2019-11-05T01:27:36","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39688","RelatedDescription":"Opened issue \"Refactoring several class definitions\" (#39688) at dotnet/roslyn","RelatedBody":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/712365/refactoring-several-class-definitions.html)._\n\n---\nWhat steps will reproduce the problem?\n1. In a code file, declare several interfaces or classes. For example by copy-pasting an existing defininition into several with different names.\n2. Select all the new class or interface definitions and click &quot;Ctrl&quot; + &quot;.&quot; (for refactoring menu).\n3. Not able to move the new classes into own files.\n\nWhat is the expected output? What do you see instead?\nI would like to have a refactoring command that would factor out the selected classes to files with names based on the individual class names. Having 10 classes/interfaces selected should then generate 10 new code files with the respective interfaces or classes.\n\nPlease provide any additional information below.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 8/27/2019, 01:31 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 9/26/2019, 03:56 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)"},{"Id":"10785899951","Type":"PullRequestEvent","CreatedAt":"2019-11-05T01:23:24","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39685","RelatedDescription":"Merged pull request \"Merge release/dev16.4 to release/dev16.4-vs-deps\" (#39685) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.4 into release/dev16.4-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-to-release/dev16.4-vs-deps\ngit reset --hard upstream/release/dev16.4-vs-deps\ngit merge upstream/release/dev16.4\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-to-release/dev16.4-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"10785803733","Type":"IssuesEvent","CreatedAt":"2019-11-05T01:02:02","Actor":"RikkiGibson","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39687","RelatedDescription":"Opened issue \"Symbol publishing checks are failing\" (#39687) at dotnet/roslyn","RelatedBody":"We have been failing symbol checks when trying to insert into VS for the past day or so. There might be a problem with our symbol publishing, or there might be a problem with the check that decides if all the symbols are present."},{"Id":"10785729168","Type":"PullRequestEvent","CreatedAt":"2019-11-05T00:45:16","Actor":"JoeRobich","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39645","RelatedDescription":null,"RelatedBody":"Overwrite the default .NET Core TFM."},{"Id":"10785728718","Type":"PullRequestEvent","CreatedAt":"2019-11-05T00:45:10","Actor":"JoeRobich","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39645","RelatedDescription":"Closed pull request \"Set TFM for Net Core integration tests\" (#39645) at dotnet/roslyn","RelatedBody":"Overwrite the default .NET Core TFM."},{"Id":"10785700982","Type":"IssuesEvent","CreatedAt":"2019-11-05T00:38:57","Actor":"AmadeusW","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/39671","RelatedDescription":"Closed issue \"IntelliSense does not use pattern matcher when capital letters are present\" (#39671) at dotnet/roslyn","RelatedBody":"**Version Used**: 16.5.0 preview 1.0 [29429.30.master]\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create class PooledStringBuilder which has two methods: `ToString` and `ToStringAndFree`\r\n2. Write code which calls `ToString` on the instance\r\n3. I want to make this `ToStringAndFree`. I will type place caret after `ToString`, type `af` and hit Ctrl+Space.\r\n\r\n**Expected Behavior**:\r\n`ToStringAndFree` is selected and inserted\r\n**Actual Behavior**:\r\nIntelliSense has `no items` \r\n![image](https://user-images.githubusercontent.com/1673956/68146388-ba216b00-feec-11e9-9359-dc8fc8dfad42.png)\r\n\r\n\r\nLet's take a closer look at what's going on.\r\n\r\n4. Place caret at `ToString$$()` and hit Ctrl+Space to see what's happening inside IntelliSense:\r\n5. Type `a` and observe correct intellisense selection\r\n![image](https://user-images.githubusercontent.com/1673956/68146311-952cf800-feec-11e9-8e75-0fd0bcaa3dc6.png)\r\n\r\n6. Type `f` and see that IntelliSense did not select the desired item\r\n![image](https://user-images.githubusercontent.com/1673956/68146116-22238180-feec-11e9-8b03-863772a9b099.png)\r\n"},{"Id":"10785626926","Type":"PullRequestEvent","CreatedAt":"2019-11-05T00:22:55","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/39612","RelatedDescription":"Merged pull request \"Fix SkipLocalsInit with stackalloc\" (#39612) at dotnet/roslyn","RelatedBody":"stackalloc is affected by the locals init flag, but the locals init\r\nflag is only present if the fat IL header is used, which is not\r\npreferred if the method is small and has no locals. S.R.M added\r\na parameter to allow callers to indicate that stackalloc is present\r\nand thus localsinit should be respected when deciding to use the\r\nfat or tiny IL header. This change tracks whether there is a stackalloc\r\nwhile doing codegen and plumbs the result into S.R.M."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"10782517365","Type":"PullRequestEvent","CreatedAt":"2019-11-04T16:49:44","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7865","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7865) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10776630403","Type":"PullRequestEvent","CreatedAt":"2019-11-03T22:07:03","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7864","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7864) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh"},{"Id":"10776353602","Type":"PullRequestEvent","CreatedAt":"2019-11-03T20:15:32","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7864","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7864) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"10776351656","Type":"PullRequestEvent","CreatedAt":"2019-11-03T20:14:50","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7863","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7863) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas"},{"Id":"10776087099","Type":"PullRequestEvent","CreatedAt":"2019-11-03T18:28:09","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7863","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx,coreclr\" (#7863) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10776070457","Type":"PullRequestEvent","CreatedAt":"2019-11-03T18:21:29","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7862","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7862) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas"},{"Id":"10775468790","Type":"IssuesEvent","CreatedAt":"2019-11-03T14:35:22","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7860","RelatedDescription":"Closed issue \"Error compilling console app with System.Data.SqlClient on Linux\" (#7860) at dotnet/corert","RelatedBody":"I'm getting the following error when I'm trying to compile a simple console app which connects to a Sql Server database in Ubuntu 19.10.\r\n\r\n`  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/Proj.o: in function `System_Data_SqlClient_Interop_NetSecurityNative__ImportPrincipalName':\r\n  /__w/1/s/src/System.Data.Common/src/System/Data/Common/BooleanStorage.cs:180: undefined reference to `NetSecurityNative_ImportPrincipalName'\r\n  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/Proj.o: in function `System_Data_SqlClient_Interop_NetSecurityNative__InitSecContext_0':\r\n  /__w/1/s/src/System.Data.Common/src/System/Data/Common/ByteStorage.cs:162: undefined reference to `NetSecurityNative_InitSecContextEx'`"},{"Id":"10775325292","Type":"PullRequestEvent","CreatedAt":"2019-11-03T13:39:12","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7862","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7862) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10775312970","Type":"PullRequestEvent","CreatedAt":"2019-11-03T13:34:03","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7861","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7861) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas"},{"Id":"10775103291","Type":"PullRequestEvent","CreatedAt":"2019-11-03T12:02:17","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7861","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7861) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10774360552","Type":"IssuesEvent","CreatedAt":"2019-11-03T04:58:22","Actor":"josephmoresena","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7860","RelatedDescription":"Opened issue \"Error compilling console app with System.Data.SqlClient on Linux\" (#7860) at dotnet/corert","RelatedBody":"I'm getting the following error when I'm trying to compile a simple console app which connects to a Sql Server database in Ubuntu 19.10.\r\n\r\n  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/Proj.o: in function `System_Data_SqlClient_Interop_NetSecurityNative__ImportPrincipalName':\r\n  /__w/1/s/src/System.Data.Common/src/System/Data/Common/BooleanStorage.cs:180: undefined reference to `NetSecurityNative_ImportPrincipalName'\r\n  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/Proj.o: in function `System_Data_SqlClient_Interop_NetSecurityNative__InitSecContext_0':\r\n  /__w/1/s/src/System.Data.Common/src/System/Data/Common/ByteStorage.cs:162: undefined reference to `NetSecurityNative_InitSecContextEx'"},{"Id":"10773975079","Type":"PullRequestEvent","CreatedAt":"2019-11-03T00:42:37","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7859","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7859) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks"},{"Id":"10773958853","Type":"PullRequestEvent","CreatedAt":"2019-11-03T00:32:21","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7859","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7859) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"10772306425","Type":"PullRequestEvent","CreatedAt":"2019-11-02T14:00:47","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7858","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7858) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas"},{"Id":"10772250807","Type":"PullRequestEvent","CreatedAt":"2019-11-02T13:41:10","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7858","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7858) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"10786037912","Type":"PullRequestEvent","CreatedAt":"2019-11-05T01:55:36","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3847","RelatedDescription":"Merged pull request \"[automated] Merge branch 'release/3.1.1xx' => 'master'\" (#3847) at dotnet/sdk","RelatedBody":"I detected changes in the release/3.1.1xx branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* mmitche\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"10785261217","Type":"PullRequestEvent","CreatedAt":"2019-11-04T23:06:43","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3861","RelatedDescription":"Opened pull request \"Merge release/2.1.5xx to release/2.1.6xx to get mac 10.15 signing change\" (#3861) at dotnet/sdk","RelatedBody":""},{"Id":"10785059707","Type":"PullRequestEvent","CreatedAt":"2019-11-04T22:31:32","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3860","RelatedDescription":"Opened pull request \"Collect more MSBuild properties\" (#3860) at dotnet/sdk","RelatedBody":""},{"Id":"10785043995","Type":"PullRequestEvent","CreatedAt":"2019-11-04T22:29:02","Actor":"vitek-karas","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3859","RelatedDescription":"Opened pull request \"Fix NullRef generating runtime config for NET Framework TFM\" (#3859) at dotnet/sdk","RelatedBody":"#### Scenario\r\nBuilding `net472` project with `<GenerateRuntimeConfigFiles>true</GenerateRuntimeConfigFiles>` fails with a NullRef.\r\nSee #3857 for a real-world repro project.\r\n\r\nThis is a regression in 3.1.1xx - caused by #3697.\r\n\r\n#### Fix\r\nIf the TFM is net472 (or any other non .NET Core TFM) but something still forces the GenerateRuntimeConfigurationFiles target to run (can be done by setting the same property explicitely to true), there will be no PlatformLibrary available, but the project will otherwise look just like self-contained app (other than the TFM).\r\n\r\nBefore #3697 the frameworks processing would simply be skipped due to the project not being framework dependent. After that change we still try to process frameworks. The fix is to check for availability of any PlatformLibrary, and if not available treat it as if there are no frameworks (just like before #3697.\r\n\r\n#### Risk\r\nLow - simply avoid the NullRef and get the code to the same position it was before #3697 with these projects.\r\n\r\n#### Customer impact\r\nRegression in 3.1.1xxx - project built before, now it doesn't.\r\nThere's a \"workaround\" - the project should never set `GenerateRuntimeConfigFiles` for anything but `.NET Core` TFMs - modify the project to only set it for .NET Core TFMs and everything works."},{"Id":"10784076988","Type":"IssuesEvent","CreatedAt":"2019-11-04T20:12:43","Actor":"yhnavein","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3858","RelatedDescription":"Opened issue \"Configuration param ignored in dotnet publish tool\" (#3858) at dotnet/sdk","RelatedBody":"I stumbled upon a strange issue in the latest .net core 3.0. It looks like `--configuration` parameter is being ignored by the publish command.\r\n\r\nHere is the issue:\r\n```\r\n$ dotnet publish -c prod\r\nMicrosoft (R) Build Engine 16.3.0+0f4c62fea dla platformy .NET Core\r\nCopyright (C) Microsoft Corporation. bla bla bla\r\n\r\n  Ukończono przywracanie w elemencie 23,91 ms (PATH\\PROJECT.csproj).\r\n  IntegrationLayer -> PATH\\PROJECT\\bin\\Debug\\netcoreapp3.0\\PROJECT.dll\r\n  IntegrationLayer -> PATH\\PROJECT\\bin\\Debug\\netcoreapp3.0\\publish\\\r\n```\r\n\r\nI've specified `prod` configuration and as you can see in the output publish was made to the `Debug` directory. This is wrong.\r\n\r\nI am using the same command for my other projects in dotnet core 2.2 and it was working fine.\r\n\r\n*Observed behaviour*\r\nFiles are published to `bin\\Debug\\netcoreapp3.0`\r\n\r\n*Expected behaviour*\r\nFiles are published to `bin\\prod\\netcoreapp3.0`\r\n\r\n```\r\n$ dotnet --version\r\n3.0.100\r\n```"},{"Id":"10782656643","Type":"IssuesEvent","CreatedAt":"2019-11-04T17:05:38","Actor":"sharwell","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/3857","RelatedDescription":"Opened issue \"Cannot build xunit.analyzers with VS 16.4 Preview 3\" (#3857) at dotnet/sdk","RelatedBody":"I'm not sure what the issue here is, but it seems possibly related to #3697.\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.1.100-preview2-014569\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(255,5): error MSB4018: The \"GenerateRuntimeConfigurationFiles\" task failed unexpectedly. [C:\\dev\\github\\xunit.analyzers\\test\\xunit.analyzers.tests\\xunit.analyzers.tests.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.100-preview2-014569\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(255,5): error MSB4018: System.NullReferenceException: Object reference not set to an instance of an object. [C:\\dev\\github\\xunit.analyzers\\test\\xunit.analyzers.tests\\xunit.analyzers.tests.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.100-preview2-014569\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(255,5): error MSB4018:    at Microsoft.NET.Build.Tasks.GenerateRuntimeConfigurationFiles.AddFrameworks(RuntimeOptions runtimeOptions, ProjectContext projectContext) [C:\\dev\\github\\xunit.analyzers\\test\\xunit.analyzers.tests\\xunit.analyzers.tests.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.100-preview2-014569\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(255,5): error MSB4018:    at Microsoft.NET.Build.Tasks.GenerateRuntimeConfigurationFiles.WriteRuntimeConfig(ProjectContext projectContext) [C:\\dev\\github\\xunit.analyzers\\test\\xunit.analyzers.tests\\xunit.analyzers.tests.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.100-preview2-014569\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(255,5): error MSB4018:    at Microsoft.NET.Build.Tasks.GenerateRuntimeConfigurationFiles.ExecuteCore() [C:\\dev\\github\\xunit.analyzers\\test\\xunit.analyzers.tests\\xunit.analyzers.tests.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.100-preview2-014569\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(255,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() [C:\\dev\\github\\xunit.analyzers\\test\\xunit.analyzers.tests\\xunit.analyzers.tests.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.100-preview2-014569\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(255,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\dev\\github\\xunit.analyzers\\test\\xunit.analyzers.tests\\xunit.analyzers.tests.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.100-preview2-014569\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(255,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\dev\\github\\xunit.analyzers\\test\\xunit.analyzers.tests\\xunit.analyzers.tests.csproj]\r\n```"}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-10-01T20:30:20","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Open PR \"Add new Cake Maintainer\" (#150)"},{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Open PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"517508151","IsPullRequest":false,"CreatedAt":"2019-11-05T02:12:05","Actor":"VincentBu","Number":"27678","RawContent":null,"Title":"Test failed: JIT\\jit64\\mcc\\interop\\mcc_i77\\mcc_i77.cmd","State":"open","Body":"**Job:**\r\n[coreclr-jitstress #20191103.1 Run Test Pri1 Windows_NT arm checked](https://dev.azure.com/dnceng/public/_build/results?buildId=414346)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/1ca29d75-a0c4-4521-aa41-69d31d4ae5f7/workitems/JIT.jit64.mcc/console\r\n\r\n**OS & Arch:**\r\nwindows arm\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_JitStress=2\r\n\r\n**Log:**\r\n```\r\nJIT\\jit64\\mcc\\interop\\mcc_i77\\mcc_i77.cmd [FAIL]\r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\1ca29d75-a0c4-4521-aa41-69d31d4ae5f7\\Work\\30be2e7c-f138-41e6-8a1f-9edffbe565ef\\Exec\\JIT\\jit64\\Reports\\JIT.jit64\\mcc\\interop\\mcc_i77\\mcc_i77.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n       \"C:\\dotnetbuild\\work\\1ca29d75-a0c4-4521-aa41-69d31d4ae5f7\\Payload\\corerun.exe\" mcc_i77.dll \r\n      FAILED: [field f1] => expected = 12, actual = 0\r\n      FAILED\r\n      ERROR! Parameter c1 => expected 1, actual 1.\r\n      Expected: 100\r\n      Actual: 1\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27678","RelatedDescription":"Open issue \"Test failed: JIT\\jit64\\mcc\\interop\\mcc_i77\\mcc_i77.cmd\" (#27678)"},{"Id":"517507484","IsPullRequest":false,"CreatedAt":"2019-11-05T02:09:33","Actor":"VincentBu","Number":"27677","RawContent":null,"Title":"Test failed: JIT\\Methodical\\tailcall\\_il_dbgdeep_virt\\_il_dbgdeep_virt.cmd","State":"open","Body":"**Job:**\r\n[coreclr-jitstress #20191103.1 Run Test Pri1 Windows_NT arm checked](https://dev.azure.com/dnceng/public/_build/results?buildId=414346)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/ffa380b5-7806-4bef-abfe-f0baad1e37e5/workitems/JIT.Methodical/console\r\n\r\n**OS & Arch:**\r\nwindows arm\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=1\r\nCOMPlus_JitStress=1\r\n\r\n**Log:**\r\n```\r\nJIT\\Methodical\\tailcall\\_il_dbgdeep_virt\\_il_dbgdeep_virt.cmd [FAIL]\r\n      \r\n      Assert failure(PID 88 [0x00000058], Thread: 16224 [0x3f60]): !CREATE_CHECK_STRING(!\"Detected use of a corrupted OBJECTREF. Possible GC hole.\")\r\n      \r\n      <no module>! <no symbol> + 0x0 (0x00000000)\r\n          File: F:\\workspace\\_work\\1\\s\\src\\vm\\object.cpp Line: 669\r\n          Image: C:\\dotnetbuild\\work\\ffa380b5-7806-4bef-abfe-f0baad1e37e5\\Payload\\CoreRun.exe\r\n      \r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\ffa380b5-7806-4bef-abfe-f0baad1e37e5\\Work\\ce8f33bf-15b1-4a5b-9406-fcfe6c76d310\\Exec\\JIT\\Methodical\\Reports\\JIT.Methodical\\tailcall\\_il_dbgdeep_virt\\_il_dbgdeep_virt.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n       \"C:\\dotnetbuild\\work\\ffa380b5-7806-4bef-abfe-f0baad1e37e5\\Payload\\corerun.exe\" _il_dbgdeep_virt.dll \r\n      Expected: 100\r\n      Actual: -1073740286\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27677","RelatedDescription":"Open issue \"Test failed: JIT\\Methodical\\tailcall\\_il_dbgdeep_virt\\_il_dbgdeep_virt.cmd\" (#27677)"},{"Id":"517494749","IsPullRequest":true,"CreatedAt":"2019-11-05T01:19:59","Actor":"cshung","Number":"27676","RawContent":null,"Title":"[WIP] Support custom modifier for method signature","State":"open","Body":"WIP","Url":"https://github.com/dotnet/coreclr/pull/27676","RelatedDescription":"Open PR \"[WIP] Support custom modifier for method signature\" (#27676)"},{"Id":"517494022","IsPullRequest":false,"CreatedAt":"2019-11-05T01:17:21","Actor":"EgorBo","Number":"27675","RawContent":null,"Title":"JIT: dead stores are not eliminated","State":"open","Body":"Couldn't find any related issue and decided to file it:\r\n```csharp\r\nunsafe void DeadStore1(int* array)\r\n{\r\n    *array = 1;\r\n    *array = 2;\r\n    *array = 3;\r\n}\r\n\r\nvoid DeadStore2(ref int x)\r\n{\r\n    x = 1;\r\n    x = 2;\r\n    x = 3;\r\n}\r\n\r\nvoid DeadStore3(int[] array)\r\n{\r\n    if (0 < (uint)array.Length)\r\n    {\r\n        array[0] = 1;\r\n        array[0] = 2;\r\n        array[0] = 3;\r\n    }\r\n}\r\n```\r\nCodegen:\r\n```asm\r\n; DeadStore1(long):this\r\nG_M36731_IG01:\r\nG_M36731_IG02:\r\n       mov      dword ptr [rdx], 1\r\n       mov      dword ptr [rdx], 2\r\n       mov      dword ptr [rdx], 3\r\nG_M36731_IG03:\r\n       ret      \r\n; Total bytes of code: 19\r\n\r\n\r\n; DeadStore2(byref):this\r\nG_M42680_IG01:\r\nG_M42680_IG02:\r\n       mov      dword ptr [rdx], 1\r\n       mov      dword ptr [rdx], 2\r\n       mov      dword ptr [rdx], 3\r\nG_M42680_IG03:\r\n       ret      \r\n; Total bytes of code: 19\r\n\r\n\r\n; DeadStore3(System.Int32[]):this\r\nG_M18892_IG01:\r\nG_M18892_IG02:\r\n       mov      eax, dword ptr [rdx+8]\r\n       test     eax, eax\r\n       je       SHORT G_M18892_IG04\r\nG_M18892_IG03:\t\t;; bbWeight=0.50\r\n       mov      dword ptr [rdx+16], 1\r\n       mov      dword ptr [rdx+16], 2\r\n       mov      dword ptr [rdx+16], 3\r\nG_M18892_IG04:\r\n       ret      \r\n; Total bytes of code: 29\r\n```\r\n\r\nIn none of these cases dead stores were eliminated.\r\nIs it a known Value Numbering limitation?\r\n\r\n\r\nMono-LLVM:\r\n```asm\r\n00000000000b10 <Program_DeadStore1_int_>:\r\n b10:   c7 06 03 00 00 00       mov    DWORD PTR [rsi],0x3\r\n b16:   c3                      ret\r\n\r\n0000000000000b20 <Program_DeadStore2_int_>:\r\n b20:   c7 06 03 00 00 00       mov    DWORD PTR [rsi],0x3\r\n b26:   c3                      ret\r\n\r\n0000000000000b30 <Program_DeadStore3_int__>:\r\n b30:   83 7e 18 00             cmp    DWORD PTR [rsi+0x18],0x0\r\n b34:   74 07                   je     b3d <Program_DeadStore3_int__+0xd>\r\n b36:   c7 46 20 03 00 00 00    mov    DWORD PTR [rsi+0x20],0x3\r\n b3d:   c3                      ret\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27675","RelatedDescription":"Open issue \"JIT: dead stores are not eliminated\" (#27675)"},{"Id":"517491961","IsPullRequest":true,"CreatedAt":"2019-11-05T01:10:06","Actor":"safern","Number":"27674","RawContent":null,"Title":"Update tryrun.cmake in order to be able to build corefx in consolidated repo","State":"open","Body":"We need this cache values for try run when cross compiling for arm. Since coreclr is the source of the cross folder that we're using in the consolidated repo we need to add them here in order to be able to build the libraries partition with the shared cross folder.\r\n\r\ncc: @jkoritzinsky @ViktorHofer @danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/27674","RelatedDescription":"Open PR \"Update tryrun.cmake in order to be able to build corefx in consolidated repo\" (#27674)"},{"Id":"517476806","IsPullRequest":true,"CreatedAt":"2019-11-05T00:16:27","Actor":"fadimounir","Number":"27673","RawContent":null,"Title":"Move p/invoke pregeneration out of single-exe branch","State":"open","Body":"Taking PR #27585 on behalf of @MichalStrehovsky, but without the prestub.cpp changes, and without the changes to emit the IL stubs.\r\n\r\nThis is a first step into getting the changes, and the ILStubs will be enabled in a separate PR once they get fixed to be non-shared.\r\n\r\ncc @MichalStrehovsky @jkotas @sergiy-k @dotnet/crossgen-contrib","Url":"https://github.com/dotnet/coreclr/pull/27673","RelatedDescription":"Open PR \"Move p/invoke pregeneration out of single-exe branch\" (#27673)"},{"Id":"517436513","IsPullRequest":true,"CreatedAt":"2019-11-05T00:07:34","Actor":"jkoritzinsky","Number":"27669","RawContent":null,"Title":"Reword comments for policheck","State":"closed","Body":"Policheck was letting out some warnings on some of our comments. This PR cleans up those warnings by re-wording the various comments. There are no functional changes in this PR.","Url":"https://github.com/dotnet/coreclr/pull/27669","RelatedDescription":"Closed or merged PR \"Reword comments for policheck\" (#27669)"},{"Id":"517467084","IsPullRequest":true,"CreatedAt":"2019-11-04T23:44:08","Actor":"tannergooding","Number":"27672","RawContent":null,"Title":"Fixing the return type of the ArmBase.ReverseElementBits methods in the PlatformNotSupported file","State":"open","Body":"This was a bug in https://github.com/dotnet/coreclr/pull/27582","Url":"https://github.com/dotnet/coreclr/pull/27672","RelatedDescription":"Open PR \"Fixing the return type of the ArmBase.ReverseElementBits methods in the PlatformNotSupported file\" (#27672)"},{"Id":"517439969","IsPullRequest":false,"CreatedAt":"2019-11-04T22:26:19","Actor":"cshung","Number":"27671","RawContent":null,"Title":"[crossgen2] Support custom modifier","State":"open","Body":"In various places in the type system code, there are comments like this:\r\n\r\nhttps://github.com/dotnet/coreclr/blob/5a381e7c8507777f71746ec564a6b75e38ebe089/src/tools/crossgen2/Common/TypeSystem/Ecma/EcmaSignatureParser.cs#L126\r\n\r\nor this:\r\n\r\nhttps://github.com/dotnet/coreclr/blob/5a381e7c8507777f71746ec564a6b75e38ebe089/src/tools/crossgen2/Common/TypeSystem/Common/InstantiatedType.cs#L148\r\n\r\nWe need to actually support custom modifier.","Url":"https://github.com/dotnet/coreclr/issues/27671","RelatedDescription":"Open issue \"[crossgen2] Support custom modifier\" (#27671)"},{"Id":"517438173","IsPullRequest":true,"CreatedAt":"2019-11-04T22:22:06","Actor":"jkoritzinsky","Number":"27670","RawContent":null,"Title":"[release/3.1] Reword comments for policheck","State":"open","Body":"Policheck was letting out some warnings on some of our comments. This PR cleans up those warnings by re-wording the various comments. There are no functional changes in this PR.\r\n\r\nThis is the 3.1 PR of #27669","Url":"https://github.com/dotnet/coreclr/pull/27670","RelatedDescription":"Open PR \"[release/3.1] Reword comments for policheck\" (#27670)"},{"Id":"517382887","IsPullRequest":true,"CreatedAt":"2019-11-04T20:27:53","Actor":"jkotas","Number":"27668","RawContent":null,"Title":"Fix Array.Copy regressions for large multidimensional arrays","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27668","RelatedDescription":"Open PR \"Fix Array.Copy regressions for large multidimensional arrays\" (#27668)"},{"Id":"517139333","IsPullRequest":true,"CreatedAt":"2019-11-04T19:30:09","Actor":"dotnet-maestro[bot]","Number":"27661","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191103.8\r\n- **Date Produced**: 11/4/2019 8:18 AM\r\n- **Commit**: 15e7e1569a8c3a5502c476c31b60e06d633b3efa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha.1.19553.8\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 5.0.0-alpha.1.19553.8\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/27661","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#27661)"},{"Id":"517341847","IsPullRequest":true,"CreatedAt":"2019-11-04T19:03:34","Actor":"cshung","Number":"27667","RawContent":null,"Title":"Handling generic attribute in AttributePresenceFilterNode","State":"open","Body":"Fixes https://github.com/dotnet/coreclr/issues/27187\r\n\r\nThe code handle the case where the `CustomAttribute.Constructor` is a `MemberRef` and the Parent of the `MemberRef` is a `TypeSpec`. This is currently not possible with C#, but it will be after https://github.com/dotnet/csharplang/issues/124.\r\n\r\n@dotnet/crossgen-contrib ","Url":"https://github.com/dotnet/coreclr/pull/27667","RelatedDescription":"Open PR \"Handling generic attribute in AttributePresenceFilterNode\" (#27667)"},{"Id":"517295239","IsPullRequest":false,"CreatedAt":"2019-11-04T17:24:45","Actor":"BruceForstall","Number":"27666","RawContent":null,"Title":"CI configuration problem: job dependencies","State":"open","Body":"Two jobs are failing with missing/bad dependencies:\r\n\r\ncoreclr-jitstressregs-x86 fails:\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=414022&view=results\r\n```\r\nJob run_test_p1__Linux_x64_checked depends on unknown job build_test_p1_OSX_x64_checked.\r\n```\r\n\r\ncoreclr-runincontext fails:\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=413640&view=results\r\n```\r\nJob run_test_p1_RunInContext_Linux_x64_checked depends on unknown job build_test_p1_OSX_x64_checked.\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/27666","RelatedDescription":"Open issue \"CI configuration problem: job dependencies\" (#27666)"},{"Id":"517292249","IsPullRequest":false,"CreatedAt":"2019-11-04T17:19:01","Actor":"BruceForstall","Number":"27665","RawContent":null,"Title":"CI R2R test configuration problem","State":"open","Body":"Some R2R tests jobs are failing with:\r\n\r\n```\r\ntests\\src\\helixpublishwitharcade.proj(37,5): error : _Scenarios not set\r\n```\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=413433","Url":"https://github.com/dotnet/coreclr/issues/27665","RelatedDescription":"Open issue \"CI R2R test configuration problem\" (#27665)"},{"Id":"516940563","IsPullRequest":true,"CreatedAt":"2019-11-04T16:37:09","Actor":"franksinankaya","Number":"27654","RawContent":null,"Title":"Several GCC fixes","State":"closed","Body":"@am11 @jkotas @janvorli ","Url":"https://github.com/dotnet/coreclr/pull/27654","RelatedDescription":"Closed or merged PR \"Several GCC fixes\" (#27654)"},{"Id":"517139599","IsPullRequest":true,"CreatedAt":"2019-11-04T15:53:21","Actor":"dotnet-maestro[bot]","Number":"27662","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191104.1\r\n- **Date Produced**: 11/4/2019 10:49 AM\r\n- **Commit**: 59b0c432ab3622cde2d2e1fe35150b7ff64e5f96\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha.1.19554.1\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/27662","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#27662)"},{"Id":"517237581","IsPullRequest":true,"CreatedAt":"2019-11-04T15:45:58","Actor":"TamarChristinaArm","Number":"27663","RawContent":null,"Title":"Arm64: Add S.P.CoreLib instrinsics for AddAcross","State":"open","Body":"This implements the AddAcross intrinsics for Arm64.\r\n\r\n`AddAcross` is a sum reduction operation.\r\n\r\nSee dotnet/corefx#26581 and is split of #26769\r\nCoreFX reference assembly update at https://github.com/dotnet/corefx/pull/42359\r\n\r\n/CC @tannergooding @CarolEidt @echesakovMSFT\r\n\r\nThanks,\r\nTamar","Url":"https://github.com/dotnet/coreclr/pull/27663","RelatedDescription":"Open PR \"Arm64: Add S.P.CoreLib instrinsics for AddAcross\" (#27663)"},{"Id":"517281106","IsPullRequest":false,"CreatedAt":"2019-11-04T15:09:13","Actor":"zgabi","Number":"27664","RawContent":null,"Title":"Type object in assembly loaded with Assembly.LoadFile is different from the same type which is directly referenced","State":"open","Body":"Hi,\r\n\r\nI have a problem with migrating our application to .net core 3.0.\r\n\r\nI've created a small example which shows the same problem as I have in my application:\r\n\r\nClassLibrary1, netstandard2.0 has the following class:\r\n```\r\n    public class MyTestClass\r\n    {\r\n    }\r\n\r\n```\r\n\r\nConsoleApp1 has a reference to ClassLibrary1, netcoreapp3.0\r\n```\r\n            string path = System.IO.Path.Combine(AppDomain.CurrentDomain.BaseDirectory, \"ClassLibrary1.dll\");\r\n            var types = Assembly.LoadFile(path).DefinedTypes.Select(x => x.AsType());\r\n            var ok = types.Contains(typeof(MyTestClass));\r\n\r\n```\r\n\r\nWhen the ConsoleApp1 targets .NET 4.7.2 the value of the `ok` variable is `true`. In .NET Core 3.0 it is `false`. Why?","Url":"https://github.com/dotnet/coreclr/issues/27664","RelatedDescription":"Open issue \"Type object in assembly loaded with Assembly.LoadFile is different from the same type which is directly referenced\" (#27664)"},{"Id":"517103274","IsPullRequest":true,"CreatedAt":"2019-11-04T11:52:12","Actor":"trylek","Number":"27660","RawContent":null,"Title":"Move helper pipeline scripts under eng/pipeline/scripts","State":"open","Body":"To clean up contents of the eng folder, I'm moving all YAML scripts\r\nused by Azure pipelines under eng/pipeline/scripts. Most of the rest\r\nof the eng folder will get merged into a common eng folder in the\r\ncomposite repo.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/coreclr/pull/27660","RelatedDescription":"Open PR \"Move helper pipeline scripts under eng/pipeline/scripts\" (#27660)"},{"Id":"516888285","IsPullRequest":true,"CreatedAt":"2019-11-04T10:57:32","Actor":"trylek","Number":"27649","RawContent":null,"Title":"YAML consolidation changes part 2","State":"closed","Body":"After finally getting a more or less green run in the runtime repo\r\nI have prepared another batch of changes aimed at simplifying\r\nthe oncoming repo integration:\r\n\r\n1) Use relative paths for script references;\r\n\r\n2) Add new variable coreClrRepoRootDir with the appended path\r\nseparator so that we don't need to fork that everywhere;\r\n\r\n3) Actually unify the first pair of build-test executions that\r\nhas become identical after the change;\r\n\r\n4) Fixed several previously unseen repo root-relative paths;\r\n\r\n5) Fixed missing propagation of testGroup in build-job;\r\n\r\n6) Fixed run logs to include R2R in the name (Matt Mitchell pointed\r\nout the other day this prevents us from analyzing both sets of logs);\r\n\r\n7) Move job.yml to eng to enable using relative template paths;\r\n\r\n8) Delete unused jobs.yml.\r\n\r\n9) Move performance.yml to eng as run-performance-test.yml to\r\nderive it from xplat-pipeline-job and avoid duplicating variables.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/coreclr/pull/27649","RelatedDescription":"Closed or merged PR \"YAML consolidation changes part 2\" (#27649)"},{"Id":"516969098","IsPullRequest":false,"CreatedAt":"2019-11-04T05:51:35","Actor":"VincentBu","Number":"27659","RawContent":null,"Title":"Test failed: GC\\LargeMemory\\API\\gc\\gettotalmemory\\gettotalmemory.cmd","State":"open","Body":"**Job:**\r\n[coreclr-outerloop #20191103.8 Run Test Pri1 Windows_NT x64 checked](https://dev.azure.com/dnceng/public/_build/results?buildId=414072)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/dd798cf9-2411-4416-b770-49fd6952f343/workitems/PayloadGroup0/console\r\n\r\n**OS & Arch:**\r\nwindows x64\r\n\r\n**Mode:**\r\nnot set\r\n\r\n**Note:**\r\nThis failure **doesn't repro** on our windows x64 machine\r\n\r\n**Log:**\r\n```\r\nGC\\LargeMemory\\API\\gc\\gettotalmemory\\gettotalmemory.cmd [FAIL]\r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\dd798cf9-2411-4416-b770-49fd6952f343\\Work\\5e170a39-dbea-4b83-8c6f-c75044f3fe3f\\Exec\\GC\\LargeMemory\\Reports\\GC.LargeMemory\\API\\gc\\gettotalmemory\\gettotalmemory.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n       \"C:\\dotnetbuild\\work\\dd798cf9-2411-4416-b770-49fd6952f343\\Payload\\corerun.exe\" gettotalmemory.dll 2048 \r\n      Large Memory Machine required\r\n      Test failed\r\n      Expected: 100\r\n      Actual: 0\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27659","RelatedDescription":"Open issue \"Test failed: GC\\LargeMemory\\API\\gc\\gettotalmemory\\gettotalmemory.cmd\" (#27659)"},{"Id":"516953284","IsPullRequest":false,"CreatedAt":"2019-11-04T04:22:29","Actor":"VincentBu","Number":"27658","RawContent":null,"Title":"Test failed: JIT\\Directed\\tailcall\\tailcall\\tailcall.cmd","State":"open","Body":"**Job:**\r\n[coreclr-jitstress #20191102.1](https://dev.azure.com/dnceng/public/_build/results?buildId=413500)\r\n\r\n**One of detail links:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/ebc8aed0-f278-403d-9172-a61305a4aa29/workitems/JIT.Directed/console\r\n\r\n**OS & Arch:**\r\nwindows x64\r\nlinux x64\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_JitStress=2\r\n\r\n**Note:**\r\nI try to repro this failure, but failed due to stack overflow:\r\n```\r\nBEGIN EXECUTION                                                                                                          \"C:\\Users\\vbibu\\Tests_Windows_NT_x64_checked\\Tests\\Core_Root\\corerun.exe\" tailcall.dll                                 Test Start                                                                                                              \r\nStack overflow.                                                                                                         \r\nExpected: 100                                                                                                           \r\nActual: -1073741571                                                                                                    \r\n END EXECUTION - FAILED                                                                                                  \r\nFAILED\r\n```\r\n\r\n**Log:**\r\n```\r\nJIT\\Directed\\tailcall\\tailcall\\tailcall.cmd [FAIL]\r\n      Stack overflow.\r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\ebc8aed0-f278-403d-9172-a61305a4aa29\\Work\\3bf09038-d5ab-4b3f-93c9-dc59f6bb0f53\\Exec\\JIT\\Directed\\Reports\\JIT.Directed\\tailcall\\tailcall\\tailcall.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n       \"C:\\dotnetbuild\\work\\ebc8aed0-f278-403d-9172-a61305a4aa29\\Payload\\corerun.exe\" tailcall.dll \r\n      Test Start\r\n      Expected: 100\r\n      Actual: -1073741571\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27658","RelatedDescription":"Open issue \"Test failed: JIT\\Directed\\tailcall\\tailcall\\tailcall.cmd\" (#27658)"},{"Id":"516944589","IsPullRequest":false,"CreatedAt":"2019-11-04T03:32:52","Actor":"VincentBu","Number":"27657","RawContent":null,"Title":"Test failed: JIT\\Performance\\CodeQuality\\BenchmarksGame\\pidigits\\pidigits-3\\pidigits-3.cmd","State":"open","Body":"**Job:**\r\n[coreclr-gcstress-extra #20191102.1](https://dev.azure.com/dnceng/public/_build/results?buildId=413324)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/684cbdca-f557-48d4-8a7d-b9d9c506a4cf/workitems/JIT/console\r\n\r\n**OS & Arch:**\r\nwindows x64\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_GCStress=0xC\r\nCOMPlus_JitStress=2\r\n\r\n**Note:**\r\nThis failure **repros** on our windows x64 machine.\r\n\r\n**Log:**\r\n```\r\nJIT\\Performance\\CodeQuality\\BenchmarksGame\\pidigits\\pidigits-3\\pidigits-3.cmd [FAIL]\r\n      \r\n      Assert failure(PID 5464 [0x00001558], Thread: 2764 [0x0acc]): SanityCheck()\r\n      \r\n      CORECLR! MethodTable::Validate + 0x3F (0x00007ffa`13215013)\r\n      CORECLR! Object::ValidateInner + 0x127 (0x00007ffa`13136f77)\r\n      CORECLR! Object::Validate + 0x131 (0x00007ffa`13136e11)\r\n      CORECLR! WKS::GCHeap::Promote + 0x9F (0x00007ffa`1356afcf)\r\n      CORECLR! PromoteCarefully + 0xAB (0x00007ffa`1316225b)\r\n      CORECLR! GcEnumObject + 0x61 (0x00007ffa`13476c71)\r\n      CORECLR! GcInfoDecoder::ReportSlotToGC + 0xCD (0x00007ffa`1353e175)\r\n      CORECLR! GcInfoDecoder::EnumerateLiveSlots + 0xCA1 (0x00007ffa`1353d399)\r\n      CORECLR! EECodeManager::EnumGcRefs + 0x39B (0x00007ffa`131a9c6b)\r\n      CORECLR! GcStackCrawlCallBack + 0x2CD (0x00007ffa`1347711d)\r\n          File: F:\\workspace\\_work\\1\\s\\src\\vm\\methodtable.cpp Line: 9907\r\n          Image: C:\\dotnetbuild\\work\\684cbdca-f557-48d4-8a7d-b9d9c506a4cf\\Payload\\CoreRun.exe\r\n      \r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\684cbdca-f557-48d4-8a7d-b9d9c506a4cf\\Work\\f0773ebb-06b1-46fb-8104-1bbf4458304f\\Exec\\JIT\\Performance\\Reports\\JIT.Performance\\CodeQuality\\BenchmarksGame\\pidigits\\pidigits-3\\pidigits-3.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n       \"C:\\dotnetbuild\\work\\684cbdca-f557-48d4-8a7d-b9d9c506a4cf\\Payload\\corerun.exe\" pidigits-3.dll \r\n      Expected: 100\r\n      Actual: -1073740286\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27657","RelatedDescription":"Open issue \"Test failed: JIT\\Performance\\CodeQuality\\BenchmarksGame\\pidigits\\pidigits-3\\pidigits-3.cmd\" (#27657)"},{"Id":"516943987","IsPullRequest":false,"CreatedAt":"2019-11-04T03:29:34","Actor":"VincentBu","Number":"27656","RawContent":null,"Title":"Test failed: JIT\\HardwareIntrinsics\\General\\Vector128_1\\Vector128_1_ro\\Vector128_1_ro.cmd","State":"open","Body":"**Job:**\r\n[coreclr-gcstress-extra #20191102.1](https://dev.azure.com/dnceng/public/_build/results?buildId=413324)\r\n\r\n**Detail:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/0bbd68a6-cf53-4566-a76c-f93c7d0223fc/workitems/JIT.HardwareIntrinsics/console\r\n\r\n**OS & Arch:**\r\nwindows x64\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_GCStress=0xC\r\nCOMPlus_JitStress=1\r\n\r\n**Note:**\r\nThis failure **repro** on our windows x64 machine.\r\n\r\n**Log:**\r\n```\r\nJIT\\HardwareIntrinsics\\General\\Vector128_1\\Vector128_1_ro\\Vector128_1_ro.cmd [FAIL]\r\n      \r\n      Assert failure(PID 5408 [0x00001520], Thread: 2336 [0x0920]): SanityCheck()\r\n      \r\n      CORECLR! MethodTable::Validate + 0x3F (0x00007ffc`b3065013)\r\n      CORECLR! Object::ValidateInner + 0x127 (0x00007ffc`b2f86f77)\r\n      CORECLR! Object::Validate + 0x131 (0x00007ffc`b2f86e11)\r\n      CORECLR! WKS::GCHeap::Promote + 0x9F (0x00007ffc`b33bafcf)\r\n      CORECLR! PromoteCarefully + 0xAB (0x00007ffc`b2fb225b)\r\n      CORECLR! GcEnumObject + 0x61 (0x00007ffc`b32c6c71)\r\n      CORECLR! GcInfoDecoder::ReportSlotToGC + 0xCD (0x00007ffc`b338e175)\r\n      CORECLR! GcInfoDecoder::EnumerateLiveSlots + 0xCA1 (0x00007ffc`b338d399)\r\n      CORECLR! EECodeManager::EnumGcRefs + 0x39B (0x00007ffc`b2ff9c6b)\r\n      CORECLR! GcStackCrawlCallBack + 0x2CD (0x00007ffc`b32c711d)\r\n          File: F:\\workspace\\_work\\1\\s\\src\\vm\\methodtable.cpp Line: 9907\r\n          Image: C:\\dotnetbuild\\work\\0bbd68a6-cf53-4566-a76c-f93c7d0223fc\\Payload\\CoreRun.exe\r\n      \r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\0bbd68a6-cf53-4566-a76c-f93c7d0223fc\\Work\\3df5cc38-2aa4-40be-be8d-3d9ba25346eb\\Exec\\JIT\\HardwareIntrinsics\\Reports\\JIT.HardwareIntrinsics\\General\\Vector128_1\\Vector128_1_ro\\Vector128_1_ro.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n       \"C:\\dotnetbuild\\work\\0bbd68a6-cf53-4566-a76c-f93c7d0223fc\\Payload\\corerun.exe\" Vector128_1_ro.dll \r\n      Beginning test case Zero.Byte at 11/3/2019 12:06:35 AM\r\n      Random seed: 20010415; set environment variable CORECLR_SEED to this value to repro\r\n      \r\n      Beginning scenario: RunBasicScenario\r\n      Beginning scenario: RunReflectionScenario\r\n      \r\n      Ending test case at 11/3/2019 12:06:36 AM\r\n      Beginning test case Zero.Double at 11/3/2019 12:06:36 AM\r\n      Random seed: 20010415; set environment variable CORECLR_SEED to this value to repro\r\n      \r\n      Beginning scenario: RunBasicScenario\r\n      Beginning scenario: RunReflectionScenario\r\n      \r\n      Ending test case at 11/3/2019 12:06:36 AM\r\n      Beginning test case Zero.Int16 at 11/3/2019 12:06:36 AM\r\n      Random seed: 20010415; set environment variable CORECLR_SEED to this value to repro\r\n      \r\n      Beginning scenario: RunBasicScenario\r\n      Beginning scenario: RunReflectionScenario\r\n      \r\n      Ending test case at 11/3/2019 12:06:36 AM\r\n      Beginning test case Zero.Int32 at 11/3/2019 12:06:36 AM\r\n      Random seed: 20010415; set environment variable CORECLR_SEED to this value to repro\r\n      \r\n      Beginning scenario: RunBasicScenario\r\n      Beginning scenario: RunReflectionScenario\r\n      \r\n      Ending test case at 11/3/2019 12:06:36 AM\r\n      Beginning test case Zero.Int64 at 11/3/2019 12:06:36 AM\r\n      Random seed: 20010415; set environment variable CORECLR_SEED to this value to repro\r\n      \r\n      Beginning scenario: RunBasicScenario\r\n      Beginning scenario: RunReflectionScenario\r\n      \r\n      Ending test case at 11/3/2019 12:06:36 AM\r\n      Beginning test case Zero.SByte at 11/3/2019 12:06:36 AM\r\n      Random seed: 20010415; set environment variable CORECLR_SEED to this value to repro\r\n      \r\n      Beginning scenario: RunBasicScenario\r\n      Beginning scenario: RunReflectionScenario\r\n      \r\n      Ending test case at 11/3/2019 12:06:36 AM\r\n      Beginning test case Zero.Single at 11/3/2019 12:06:36 AM\r\n      Random seed: 20010415; set environment variable CORECLR_SEED to this value to repro\r\n      \r\n      Beginning scenario: RunBasicScenario\r\n      Beginning scenario: RunReflectionScenario\r\n      \r\n      Ending test case at 11/3/2019 12:06:37 AM\r\n      Beginning test case Zero.UInt16 at 11/3/2019 12:06:37 AM\r\n      Random seed: 20010415; set environment variable CORECLR_SEED to this value to repro\r\n      \r\n      Beginning scenario: RunBasicScenario\r\n      Beginning scenario: RunReflectionScenario\r\n      \r\n      Ending test case at 11/3/2019 12:06:37 AM\r\n      Beginning test case Zero.UInt32 at 11/3/2019 12:06:37 AM\r\n      Random seed: 20010415; set environment variable CORECLR_SEED to this value to repro\r\n      \r\n      Beginning scenario: RunBasicScenario\r\n      Beginning scenario: RunReflectionScenario\r\n      \r\n      Ending test case at 11/3/2019 12:06:37 AM\r\n      Beginning test case Zero.UInt64 at 11/3/2019 12:06:37 AM\r\n      Random seed: 20010415; set environment variable CORECLR_SEED to this value to repro\r\n      \r\n      Beginning scenario: RunBasicScenario\r\n      Beginning scenario: RunReflectionScenario\r\n      \r\n      Ending test case at 11/3/2019 12:06:37 AM\r\n      Beginning test case As.Byte at 11/3/2019 12:06:37 AM\r\n      Random seed: 20010415; set environment variable CORECLR_SEED to this value to repro\r\n      \r\n      Beginning scenario: RunBasicScenario\r\n      Beginning scenario: RunGenericScenario\r\n      Beginning scenario: RunReflectionScenario\r\n      \r\n      Ending test case at 11/3/2019 12:06:37 AM\r\n      Beginning test case As.Double at 11/3/2019 12:06:37 AM\r\n      Random seed: 20010415; set environment variable CORECLR_SEED to this value to repro\r\n      \r\n      Beginning scenario: RunBasicScenario\r\n      Beginning scenario: RunGenericScenario\r\n      Beginning scenario: RunReflectionScenario\r\n      Expected: 100\r\n      Actual: -1073740286\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/27656","RelatedDescription":"Open issue \"Test failed: JIT\\HardwareIntrinsics\\General\\Vector128_1\\Vector128_1_ro\\Vector128_1_ro.cmd\" (#27656)"},{"Id":"516943175","IsPullRequest":false,"CreatedAt":"2019-11-04T03:25:39","Actor":"VincentBu","Number":"27655","RawContent":null,"Title":"Test failed: Interop\\BestFitMapping\\BestFitMapping\\BestFitMapping.cmd","State":"open","Body":"**Job:**\r\n[coreclr-gcstress-extra #20191102.1](https://dev.azure.com/dnceng/public/_build/results?buildId=413324)\r\n\r\n**Detail:**\r\nwindows x64:\r\nhttps://helix.dot.net/api/2019-06-17/jobs/43878d92-c298-4791-ac50-bb5922f9acda/workitems/Interop/console\r\nwindows x86:\r\nhttps://helix.dot.net/api/2019-06-17/jobs/2e54b859-b523-4dfb-a261-b11f9f429f66/workitems/Interop/console\r\n\r\n**OS & Arch:**\r\nwindows x64/x86\r\n\r\n**Mode:**\r\nCOMPlus_TieredCompilation=0\r\nCOMPlus_GCStress=0xC\r\nCOMPlus_JitStress=2\r\nCOMPlus_ReadyToRun=0\r\nCOMPlus_ZapDisable=1\r\n\r\n**Note:**\r\nI try to repro this failure, but get the following output:\r\n```\r\nBEGIN EXECUTION\r\n \"C:\\Users\\vbibu\\Tests_Windows_NT_x64_checked\\Tests\\Core_Root\\corerun.exe\" BestFitMapping.dll\r\nBeginning scenario: Cdecl,LPStr,In\r\nERROR!!!-e01: TestMethod_CLPStr_In:Unexpected Exception Occured:System.DllNotFoundException: Unable to load DLL 'BestFitMappingNative' or one of its dependencies: The specified module could not be found. (0x8007007E)\r\n   at BestFitMapping.CLPStr_In(String str)\r\n   at BestFitMapping.TestMethod_CLPStr_In() in F:\\workspace\\_work\\1\\s\\tests\\src\\Interop\\BestFitMapping\\BestFitMapping.cs:line 288\r\nBeginning scenario: Cdecl,LPStr,Out\r\nERROR!!!-e02: TestMethod_CLPStr_Out:Unexpected Exception Occured:System.DllNotFoundException: Unable to load DLL 'BestFitMappingNative' or one of its dependencies: The specified module could not be found. (0x8007007E)\r\n   at BestFitMapping.CLPStr_Out(StringBuilder str)\r\n   at BestFitMapping.TestMethod_CLPStr_Out() in F:\\workspace\\_work\\1\\s\\tests\\src\\Interop\\BestFitMapping\\BestFitMapping.cs:line 319\r\nBeginning scenario: Cdecl,LPStr,InOut\r\nERROR!!!-e03: TestMethod_CLPStr_InOut:Unexpected Exception Occured:System.DllNotFoundException: Unable to load DLL 'BestFitMappingNative' or one of its dependencies: The specified module could not be found. (0x8007007E)\r\n   at BestFitMapping.CLPStr_InOut(StringBuilder str)\r\n   at BestFitMapping.TestMethod_CLPStr_InOut() in F:\\workspace\\_work\\1\\s\\tests\\src\\Interop\\BestFitMapping\\BestFitMapping.cs:line 350\r\nBeginning scenario: Cdecl,LPStr,InRef\r\nERROR!!!-e04: TestMethod_CLPStr_InRef:Unexpected Exception Occured:System.DllNotFoundException: Unable to load DLL 'BestFitMappingNative' or one of its dependencies: The specified module could not be found. (0x8007007E)\r\n   at BestFitMapping.CLPStr_InByRef(StringBuilder& str)\r\n   at BestFitMapping.TestMethod_CLPStr_InRef() in F:\\workspace\\_work\\1\\s\\tests\\src\\Interop\\BestFitMapping\\BestFitMapping.cs:line 380\r\nBeginning scenario: Cdecl,LPStr,OutRef\r\nERROR!!!-e05: TestMethod_CLPStr_OutRef:Unexpected Exception Occured:System.DllNotFoundException: Unable to load DLL 'BestFitMappingNative' or one of its dependencies: The specified module could not be found. (0x8007007E)\r\n   at BestFitMapping.CLPStr_OutByRef(StringBuilder& str)\r\n   at BestFitMapping.TestMethod_CLPStr_OutRef() in F:\\workspace\\_work\\1\\s\\tests\\src\\Interop\\BestFitMapping\\BestFitMapping.cs:line 410\r\nBeginning scenario: Cdecl,LPStr,InOutRef\r\nERROR!!!-e06: TestMethod_CLPStr_InOutRef:Unexpected Exception Occured:System.DllNotFoundException: Unable to load DLL 'BestFitMappingNative' or one of its dependencies: The specified module could not be found. (0x8007007E)\r\n   at BestFitMapping.CLPStr_InOutByRef(StringBuilder& str)\r\n   at BestFitMapping.TestMethod_CLPStr_InOutRef() in F:\\workspace\\_work\\1\\s\\tests\\src\\Interop\\BestFitMapping\\BestFitMapping.cs:line 442\r\nBeginning scenario: Cdecl,LPStr,DelegatePInvoke\r\nERROR!!!-e07: TestMethod_CLPStr_DelegatePInvoke:Unexpected Exception Occured:System.DllNotFoundException: Unable to load DLL 'BestFitMappingNative' or one of its dependencies: The specified module could not be found. (0x8007007E)\r\n   at BestFitMapping.CLPStr_DelegatePInvoke()\r\n   at BestFitMapping.TestMethod_CLPStr_DelegatePInvoke() in F:\\workspace\\_work\\1\\s\\tests\\src\\Interop\\BestFitMapping\\BestFitMapping.cs:line 472\r\nBeginning scenario: StdCall,LPStr,In\r\nERROR!!!-e08: TestMethod_SLPStr_In:Unexpected Exception Occured:System.DllNotFoundException: Unable to load DLL 'BestFitMappingNative' or one of its dependencies: The specified module could not be found. (0x8007007E)\r\n   at BestFitMapping.SLPStr_In(String str)\r\n   at BestFitMapping.TestMethod_SLPStr_In() in F:\\workspace\\_work\\1\\s\\tests\\src\\Interop\\BestFitMapping\\BestFitMapping.cs:line 506\r\nBeginning scenario: StdCall,LPStr,Out\r\nERROR!!!-e09: TestMethod_SLPStr_Out:Unexpected Exception Occured:System.DllNotFoundException: Unable to load DLL 'BestFitMappingNative' or one of its dependencies: The specified module could not be found. (0x8007007E)\r\n   at BestFitMapping.SLPStr_Out(StringBuilder str)\r\n   at BestFitMapping.TestMethod_SLPStr_Out() in F:\\workspace\\_work\\1\\s\\tests\\src\\Interop\\BestFitMapping\\BestFitMapping.cs:line 536\r\nBeginning scenario: StdCall,LPStr,InOut\r\nERROR!!!-e10: TestMethod_SLPStr_InOut:Unexpected Exception Occured:System.DllNotFoundException: Unable to load DLL 'BestFitMappingNative' or one of its dependencies: The specified module could not be found. (0x8007007E)\r\n   at BestFitMapping.SLPStr_InOut(StringBuilder str)\r\n   at BestFitMapping.TestMethod_SLPStr_InOut() in F:\\workspace\\_work\\1\\s\\tests\\src\\Interop\\BestFitMapping\\BestFitMapping.cs:line 566\r\nBeginning scenario: StdCall,LPStr,InRef\r\nERROR!!!-e11: TestMethod_SLPStr_InRef:Unexpected Exception Occured:System.DllNotFoundException: Unable to load DLL 'BestFitMappingNative' or one of its dependencies: The specified module could not be found. (0x8007007E)\r\n   at BestFitMapping.SLPStr_InByRef(StringBuilder& str)\r\n   at BestFitMapping.TestMethod_SLPStr_InRef() in F:\\workspace\\_work\\1\\s\\tests\\src\\Interop\\BestFitMapping\\BestFitMapping.cs:line 598\r\nBeginning scenario: StdCall,LPStr,OutRef\r\nERROR!!!-e12: TestMethod_SLPStr_OutRef:Unexpected Exception Occured:System.DllNotFoundException: Unable to load DLL 'BestFitMappingNative' or one of its dependencies: The specified module could not be found. (0x8007007E)\r\n   at BestFitMapping.SLPStr_OutByRef(StringBuilder& str)\r\n   at BestFitMapping.TestMethod_SLPStr_OutRef() in F:\\workspace\\_work\\1\\s\\tests\\src\\Interop\\BestFitMapping\\BestFitMapping.cs:line 630\r\nBeginning scenario: StdCall,LPStr,InOutRef\r\nERROR!!!-e13: TestMethod_SLPStr_InOutRef:Unexpected Exception Occured:System.DllNotFoundException: Unable to load DLL 'BestFitMappingNative' or one of its dependencies: The specified module could not be found. (0x8007007E)\r\n   at BestFitMapping.SLPStr_InOutByRef(StringBuilder& str)\r\n   at BestFitMapping.TestMethod_SLPStr_InOutRef() in F:\\workspace\\_work\\1\\s\\tests\\src\\Interop\\BestFitMapping\\BestFitMapping.cs:line 663\r\nBeginning scenario: StdCall,LPStr,DelegatePInvoke\r\nERROR!!!-e14: TestMethod_SLPStr_DelegatePInvoke:Unexpected Exception Occured:System.DllNotFoundException: Unable to load DLL 'BestFitMappingNative' or one of its dependencies: The specified module could not be found. (0x8007007E)\r\n   at BestFitMapping.SLPStr_DelegatePInvoke()\r\n   at BestFitMapping.TestMethod_SLPStr_DelegatePInvoke() in F:\\workspace\\_work\\1\\s\\tests\\src\\Interop\\BestFitMapping\\BestFitMapping.cs:line 692\r\nUnhandled exception. System.DllNotFoundException: Unable to load DLL 'BestFitMappingNative' or one of its dependencies: The specified module could not be found. (0x8007007E)\r\n   at BestFitMapping.DoCCallBack_LPSTR_In(CCallBackIn callback)\r\n   at BestFitMapping.Main() in F:\\workspace\\_work\\1\\s\\tests\\src\\Interop\\BestFitMapping\\BestFitMapping.cs:line 913\r\nExpected: 100\r\nActual: -532462766\r\nEND EXECUTION - FAILED\r\nFAILED\r\n```\r\n**Log:**\r\n```\r\nInterop\\BestFitMapping\\BestFitMapping\\BestFitMapping.cmd [FAIL]\r\n      \r\n      Assert failure(PID 2032 [0x000007f0], Thread: 1336 [0x0538]): Consistency check failed: AV in clr at this callstack:\r\n      ------\r\n      CORECLR! WKS::gc_heap::mark_object_simple + 0x2A3 (0x00007fff`e7067253)\r\n      CORECLR! WKS::GCHeap::Promote + 0x12B (0x00007fff`e704b05b)\r\n      CORECLR! GcEnumObject + 0x72 (0x00007fff`e6f56c82)\r\n      CORECLR! GcInfoDecoder::ReportSlotToGC + 0xCD (0x00007fff`e701e175)\r\n      CORECLR! GcInfoDecoder::EnumerateLiveSlots + 0xCA1 (0x00007fff`e701d399)\r\n      CORECLR! EECodeManager::EnumGcRefs + 0x39B (0x00007fff`e6c89c6b)\r\n      CORECLR! GcStackCrawlCallBack + 0x2CD (0x00007fff`e6f5711d)\r\n      CORECLR! Thread::MakeStackwalkerCallback + 0x52 (0x00007fff`e69bfe02)\r\n      CORECLR! Thread::StackWalkFramesEx + 0x17A (0x00007fff`e69c1e4e)\r\n      CORECLR! Thread::StackWalkFrames + 0x184 (0x00007fff`e69c1c34)\r\n      CORECLR! ScanStackRoots + 0x280 (0x00007fff`e70d4914)\r\n      CORECLR! GCToEEInterface::GcScanRoots + 0x1DA (0x00007fff`e70d353e)\r\n      CORECLR! WKS::gc_heap::mark_phase + 0x22D (0x00007fff`e7067605)\r\n      CORECLR! WKS::gc_heap::gc1 + 0x28B (0x00007fff`e705f12f)\r\n      CORECLR! WKS::gc_heap::garbage_collect + 0x63A (0x00007fff`e705edf2)\r\n      CORECLR! WKS::GCHeap::GarbageCollectGeneration + 0x28A (0x00007fff`e7049bda)\r\n      CORECLR! WKS::GCHeap::GarbageCollect + 0x102 (0x00007fff`e7049902)\r\n      CORECLR! WKS::GCHeap::StressHeap + 0x621 (0x00007fff`e704c5c1)\r\n      CORECLR! DoGcStress + 0x340 (0x00007fff`e6e7a7f4)\r\n      -----\r\n      .AV on tid=0x538 (1336), cxr=0000006E0177A7C0, exr=0000006E0177ACB0\r\n      FAILED: false\r\n      \r\n      CORECLR! CHECK::Trigger + 0x2C5 (0x00007fff`e688c76d)\r\n      CORECLR! CLRVectoredExceptionHandlerPhase3 + 0x364 (0x00007fff`e6a184d4)\r\n      CORECLR! CLRVectoredExceptionHandlerPhase2 + 0x69 (0x00007fff`e6a17f55)\r\n      CORECLR! CLRVectoredExceptionHandler + 0x1C6 (0x00007fff`e6a17ece)\r\n      CORECLR! CLRVectoredExceptionHandlerShim + 0x17A (0x00007fff`e6a1872a)\r\n      NTDLL! RtlInitializeCriticalSection + 0x190 (0x00007ff8`153a5e90)\r\n      NTDLL! RtlImageNtHeaderEx + 0x17B (0x00007ff8`1537fa1b)\r\n      NTDLL! KiUserExceptionDispatcher + 0x3A (0x00007ff8`153e96fa)\r\n      CORECLR! WKS::gc_heap::mark_object_simple + 0x2A3 (0x00007fff`e7067253)\r\n      CORECLR! WKS::GCHeap::Promote + 0x12B (0x00007fff`e704b05b)\r\n          File: F:\\workspace\\_work\\1\\s\\src\\vm\\excep.cpp Line: 7537\r\n          Image: C:\\dotnetbuild\\work\\43878d92-c298-4791-ac50-bb5922f9acda\\Payload\\CoreRun.exe\r\n      \r\n      \r\n      Return code:      1\r\n      Raw output file:      C:\\dotnetbuild\\work\\43878d92-c298-4791-ac50-bb5922f9acda\\Work\\04d8de67-1e27-4947-a068-e70cd33cf54a\\Exec\\Interop\\BestFitMapping\\Reports\\Interop.BestFitMapping\\BestFitMapping\\BestFitMapping.output.txt\r\n      Raw output:\r\n      BEGIN EXECUTION\r\n       \"C:\\dotnetbuild\\work\\43878d92-c298-4791-ac50-bb5922f9acda\\Payload\\corerun.exe\" BestFitMapping.dll \r\n      Beginning scenario: Cdecl,LPStr,In\r\n      Expected: 100\r\n      Actual: -1073740286\r\n      END EXECUTION - FAILED\r\n      FAILED\r\n      Test Harness Exitcode is : 1\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27655","RelatedDescription":"Open issue \"Test failed: Interop\\BestFitMapping\\BestFitMapping\\BestFitMapping.cmd\" (#27655)"},{"Id":"516938936","IsPullRequest":false,"CreatedAt":"2019-11-04T03:01:46","Actor":"AriNuer","Number":"27653","RawContent":null,"Title":"Test failure : System.Numerics.Tests.GenericVectorTests.NarrowDouble","State":"open","Body":"**Job:**\r\n[coreclr-corefx-jitstress:20191102.1](https://dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_build/results?buildId=413544)\r\n\r\n**Details:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/de349cd1-c3ec-445c-a10a-2edd3c5e1271/workitems/System.Numerics.Vectors.Tests/console\r\n\r\n**OS & Arch:**\r\nWindows x86\r\n\r\n**Mode:**\r\nset COMPlus_TieredCompilation=1\r\nset COMPlus_JitStress=1\r\n\r\n**Note:**\r\nThis failure **repro** on our windows x64 machine.\r\n\r\n**Log:**\r\n```\r\nC:\\dotnetbuild\\work\\de349cd1-c3ec-445c-a10a-2edd3c5e1271\\Work\\d23db661-2f18-4c7b-ac11-c8cac05ed2b3\\Exec>\"C:\\dotnetbuild\\work\\de349cd1-c3ec-445c-a10a-2edd3c5e1271\\Payload\\dotnet.exe\" exec --runtimeconfig System.Numerics.Vectors.Tests.runtimeconfig.json xunit.console.dll System.Numerics.Vectors.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonwindowstests -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing @C:\\dotnetbuild\\work\\de349cd1-c3ec-445c-a10a-2edd3c5e1271\\Payload\\CoreFX.issues.rsp \r\n  Discovering: System.Numerics.Vectors.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Numerics.Vectors.Tests (found 1190 test cases)\r\n  Starting:    System.Numerics.Vectors.Tests (parallel test collections = on, max threads = 2)\r\n    System.Numerics.Tests.GenericVectorTests.NarrowDouble [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: -1.4397407E+09\r\n      Actual:   -949178700\r\n      Stack Trace:\r\n        /_/src/System.Numerics.Vectors/tests/GenericVectorTests.cs(2595,0): at System.Numerics.Tests.GenericVectorTests.NarrowDouble()\r\n  Finished:    System.Numerics.Vectors.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Numerics.Vectors.Tests  Total: 1190, Errors: 0, Failed: 1, Skipped: 0, Time: 38.540s\r\n----- end Sun 11/03/2019  6:49:10.47 ----- exit code 1 ----------------------------------------------------------\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27653","RelatedDescription":"Open issue \"Test failure : System.Numerics.Tests.GenericVectorTests.NarrowDouble\" (#27653)"},{"Id":"516934715","IsPullRequest":false,"CreatedAt":"2019-11-04T02:38:16","Actor":"AriNuer","Number":"27652","RawContent":null,"Title":"System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException'","State":"open","Body":"**Job:**\r\n[coreclr-corefx-jitstress:20191102.1](https://dev.azure.com/dnceng/9ee6d478-d288-47f7-aacc-f6e6d082ae6d/_build/results?buildId=413544)\r\n\r\n**Details:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/6cb83813-60be-4f1f-9179-a0022ff7bebf/workitems/System.Net.HttpListener.Tests/console\r\n\r\n**OS & Arch:**\r\nWindows x64\r\n\r\n**Mode:**\r\nset COMPlus_TieredCompilation=0\r\nset COMPlus_TailcallStress=1\r\n\r\n**Note:**\r\nThis failure **repro** on our windows x64 machine.\r\n**Log:**\r\n```\r\nC:\\dotnetbuild\\work\\6cb83813-60be-4f1f-9179-a0022ff7bebf\\Work\\fd763422-0add-4fd3-912b-a82004ec8e7a\\Exec>\"C:\\dotnetbuild\\work\\6cb83813-60be-4f1f-9179-a0022ff7bebf\\Payload\\dotnet.exe\" exec --runtimeconfig System.Net.HttpListener.Tests.runtimeconfig.json xunit.console.dll System.Net.HttpListener.Tests.dll -xml testResults.xml -nologo -nocolor -notrait category=nonnetcoreapptests -notrait category=nonwindowstests -notrait category=IgnoreForCI -notrait category=OuterLoop -notrait category=failing @C:\\dotnetbuild\\work\\6cb83813-60be-4f1f-9179-a0022ff7bebf\\Payload\\CoreFX.issues.rsp \r\n  Discovering: System.Net.HttpListener.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Net.HttpListener.Tests (found 217 of 298 test cases)\r\n  Starting:    System.Net.HttpListener.Tests (parallel test collections = on, max threads = 2)\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:02:07\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:04:07\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:06:08\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:08:08\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:10:08\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:12:08\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:14:08\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:16:08\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:18:08\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:20:08\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:22:08\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:24:08\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:26:08\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:28:08\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:30:08\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:32:08\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:34:09\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:36:09\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:38:09\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:40:09\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:42:09\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:44:09\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:46:09\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:48:09\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:50:09\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:52:09\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:54:09\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:56:09\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 00:58:10\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:00:10\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:02:10\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:04:10\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:06:10\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:08:10\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:10:10\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:12:10\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:14:10\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:16:10\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:18:10\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:20:10\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:22:11\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:24:11\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:26:11\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:28:11\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:30:11\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:32:11\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:34:11\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:36:11\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:38:11\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:40:11\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:42:11\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:44:11\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:46:11\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:48:11\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:50:12\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:52:12\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:54:12\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:56:12\r\n   System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException', Elapsed: 01:58:12\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27652","RelatedDescription":"Open issue \"System.Net.HttpListener.Tests: [Long Running Test] 'System.Net.Tests.HttpListenerResponseHeadersTests.KeepAlive_SetDisposed_ThrowsObjectDisposedException'\" (#27652)"},{"Id":"516899481","IsPullRequest":true,"CreatedAt":"2019-11-03T22:29:18","Actor":"sandreenko","Number":"27651","RawContent":null,"Title":"[WIP] Test PR.","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27651","RelatedDescription":"Open PR \"[WIP] Test PR.\" (#27651)"},{"Id":"516889384","IsPullRequest":false,"CreatedAt":"2019-11-03T21:11:11","Actor":"filipnavara","Number":"27650","RawContent":null,"Title":"RuntimeHelpers.Equals difference between CoreCLR and Mono","State":"open","Body":"The following program:\r\n\r\n```csharp\r\nusing System;\r\nusing System.Text;\r\nusing System.Runtime.CompilerServices;\r\n\r\npublic class C {\r\n    struct S {\r\n        public int a;\r\n        public string b;\r\n    };\r\n    \r\n    public static void Main() {\r\n        var b1 = 42.ToString();\r\n        var b2 = 42.ToString();\r\n        var s1 = new S { a = 42, b = b1 };\r\n        var s2 = new S { a = 42, b = b2 };\r\n        Console.WriteLine(object.ReferenceEquals(b1, b2));\r\n        Console.WriteLine(s1.Equals(s2));\r\n        Console.WriteLine(RuntimeHelpers.Equals(s1, s2));\r\n    }\r\n}\r\n```\r\n\r\nprints\r\n```\r\nFalse\r\nTrue\r\nFalse\r\n```\r\non CoreCLR.\r\n\r\nOn Mono it prints\r\n```\r\nFalse\r\nTrue\r\nTrue\r\n```\r\n\r\nThe difference is in how ValueTypes are treated by `RuntimeHelpers.Equals`. CoreCLR does `memcmp` of the contents, Mono does field-by-field comparison. Which one is right and which one is wrong?","Url":"https://github.com/dotnet/coreclr/issues/27650","RelatedDescription":"Open issue \"RuntimeHelpers.Equals difference between CoreCLR and Mono\" (#27650)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"517457894","IsPullRequest":true,"CreatedAt":"2019-11-04T23:15:12","Actor":"dsplaisted","Number":"13029","RawContent":null,"Title":"Enable SDL validation","State":"open","Body":"Sample build: https://dev.azure.com/dnceng/internal/_build/results?buildId=415456&view=results\r\n\r\n@sunandabalu for review\r\n","Url":"https://github.com/dotnet/cli/pull/13029","RelatedDescription":"Open PR \"Enable SDL validation\" (#13029)"},{"Id":"517454328","IsPullRequest":true,"CreatedAt":"2019-11-04T23:04:08","Actor":"wli3","Number":"13028","RawContent":null,"Title":"Merge release/2.1.5xx to 2.1.6xx to get mac 10.15 signing change","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/13028","RelatedDescription":"Open PR \"Merge release/2.1.5xx to 2.1.6xx to get mac 10.15 signing change\" (#13028)"},{"Id":"517453146","IsPullRequest":true,"CreatedAt":"2019-11-04T23:01:02","Actor":"wli3","Number":"13027","RawContent":null,"Title":"Update SDK with mac10.15 signing fix","State":"open","Body":"part of https://github.com/dotnet/sdk/issues/3773","Url":"https://github.com/dotnet/cli/pull/13027","RelatedDescription":"Open PR \"Update SDK with mac10.15 signing fix\" (#13027)"},{"Id":"517431133","IsPullRequest":true,"CreatedAt":"2019-11-04T22:40:30","Actor":"dotnet-maestro[bot]","Number":"13026","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191104.4\r\n- **Date Produced**: 11/4/2019 8:47 PM\r\n- **Commit**: e3b971a75e2512d267605aa190122b874d9d948d\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19554.4\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13026","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13026)"},{"Id":"516405798","IsPullRequest":true,"CreatedAt":"2019-11-04T22:35:19","Actor":"dotnet-maestro[bot]","Number":"13018","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191101.9\r\n- **Date Produced**: 11/1/2019 11:10 PM\r\n- **Commit**: 0f54cd75536340715c02e9913aa5a8d435e76518\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.1-servicing.19551.9\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13018","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#13018)"},{"Id":"516902110","IsPullRequest":true,"CreatedAt":"2019-11-04T00:15:49","Actor":"dotnet-maestro[bot]","Number":"13025","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191103.2\r\n- **Date Produced**: 11/3/2019 9:09 PM\r\n- **Commit**: da20a1208694e8ed361a44d1225bd92d1ca1729a\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19553.2\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13025","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13025)"},{"Id":"516855393","IsPullRequest":true,"CreatedAt":"2019-11-03T17:10:27","Actor":"dotnet-maestro[bot]","Number":"13024","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191103.1\r\n- **Date Produced**: 11/3/2019 3:44 PM\r\n- **Commit**: cecb7196560c8b8b732ef9c07494cac7e0745c76\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview3.19553.1\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13024","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13024)"},{"Id":"516831600","IsPullRequest":true,"CreatedAt":"2019-11-03T15:03:51","Actor":"dotnet-maestro[bot]","Number":"13023","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191103.2\r\n- **Date Produced**: 11/3/2019 12:51 PM\r\n- **Commit**: 13f35c3d86a40ff811bfde0b64cfb86431c19d15\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview3.19553.2\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19553.2\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview3.19553.2\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview3.19553.2\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview3.19553.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview3.19553.2\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview3.19551.4 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13023","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13023)"},{"Id":"516763544","IsPullRequest":true,"CreatedAt":"2019-11-03T01:04:54","Actor":"dotnet-maestro[bot]","Number":"13022","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191102.5\r\n- **Date Produced**: 11/2/2019 11:07 PM\r\n- **Commit**: fe164cd7666a2398a7959d31b4c528f3e71c018a\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19552.5\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13022","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13022)"},{"Id":"515889929","IsPullRequest":true,"CreatedAt":"2019-11-03T01:03:09","Actor":"dotnet-maestro[bot]","Number":"13014","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191101.4\r\n- **Date Produced**: 11/1/2019 7:30 PM\r\n- **Commit**: 00491cd463dc0a17996b8ddb24cf9faf390f04fb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview3.19551.4\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19551.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview3.19551.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview3.19551.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview3.19551.4\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview3.19551.4\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview3.19551.2 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13014","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13014)"},{"Id":"516580784","IsPullRequest":true,"CreatedAt":"2019-11-02T13:15:26","Actor":"dotnet-maestro[bot]","Number":"13021","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191102.1\r\n- **Date Produced**: 11/2/2019 11:01 AM\r\n- **Commit**: 507379d642c0fb9b17913cfa3e316c52c1163373\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19552.1\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13021","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13021)"},{"Id":"516540666","IsPullRequest":true,"CreatedAt":"2019-11-02T09:55:33","Actor":"dotnet-maestro[bot]","Number":"13020","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191101.16\r\n- **Date Produced**: 11/2/2019 7:24 AM\r\n- **Commit**: 5709cd95b2db28ee2546be7797b913b129d97655\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19551.16\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13020","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13020)"},{"Id":"516443700","IsPullRequest":true,"CreatedAt":"2019-11-02T03:15:29","Actor":"dotnet-maestro[bot]","Number":"13019","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191101.11\r\n- **Date Produced**: 11/2/2019 1:08 AM\r\n- **Commit**: 4d3eccccf012d154a3c591964b0cb455014e2b7d\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19551.11\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13019","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13019)"},{"Id":"515305447","IsPullRequest":true,"CreatedAt":"2019-11-02T01:02:55","Actor":"v-zbsail","Number":"13007","RawContent":null,"Title":"LOC CHECKIN | dotnet/cli release/3.1.1xx | 20191031","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13007","RelatedDescription":"Closed or merged PR \"LOC CHECKIN | dotnet/cli release/3.1.1xx | 20191031\" (#13007)"},{"Id":"516397887","IsPullRequest":true,"CreatedAt":"2019-11-02T00:15:34","Actor":"dotnet-maestro[bot]","Number":"13017","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191101.3\r\n- **Date Produced**: 11/1/2019 10:41 PM\r\n- **Commit**: 6048f06be9dc82e688644debd2bdd66b88473429\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview3.19551.3\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13017","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13017)"},{"Id":"516258755","IsPullRequest":true,"CreatedAt":"2019-11-01T18:25:33","Actor":"dotnet-maestro[bot]","Number":"13016","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191101.2\r\n- **Date Produced**: 11/1/2019 5:00 PM\r\n- **Commit**: 0f41b3f4909ea5a1955fccf5a2125ca1a76b69c7\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview3.19551.2\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13016","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13016)"},{"Id":"516211090","IsPullRequest":true,"CreatedAt":"2019-11-01T16:29:57","Actor":"nguerrera","Number":"13015","RawContent":null,"Title":"Add clarification about interim state of repo consolidation","State":"closed","Body":"@MichaelSimons @livarcocc @dsplaisted ","Url":"https://github.com/dotnet/cli/pull/13015","RelatedDescription":"Closed or merged PR \"Add clarification about interim state of repo consolidation\" (#13015)"},{"Id":"515745548","IsPullRequest":true,"CreatedAt":"2019-11-01T07:29:51","Actor":"dotnet-maestro[bot]","Number":"13013","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191031.5\r\n- **Date Produced**: 11/1/2019 6:16 AM\r\n- **Commit**: 61f8ebe1b773d85117bcb64f48abcc8377c830c2\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19531.5\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13013","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13013)"},{"Id":"515691760","IsPullRequest":true,"CreatedAt":"2019-11-01T02:48:26","Actor":"dotnet-maestro[bot]","Number":"13010","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191031.7\r\n- **Date Produced**: 11/1/2019 1:04 AM\r\n- **Commit**: e89f2f450263f865f20c2c7b77f4e30daedc7c47\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19531.7\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13010","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13010)"},{"Id":"515716363","IsPullRequest":true,"CreatedAt":"2019-10-31T22:30:03","Actor":"mmitche","Number":"13011","RawContent":null,"Title":"Update branding to preview3","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13011","RelatedDescription":"Closed or merged PR \"Update branding to preview3\" (#13011)"},{"Id":"515056603","IsPullRequest":true,"CreatedAt":"2019-10-31T21:06:01","Actor":"wli3","Number":"13003","RawContent":null,"Title":"Remove signature on MAC host for dotnet tools","State":"closed","Body":"Part of https://github.com/dotnet/sdk/issues/3773\r\n\r\n@swaroop-sridhar","Url":"https://github.com/dotnet/cli/pull/13003","RelatedDescription":"Closed or merged PR \"Remove signature on MAC host for dotnet tools\" (#13003)"},{"Id":"515737459","IsPullRequest":true,"CreatedAt":"2019-10-31T20:52:03","Actor":"donnie-msft","Number":"13012","RawContent":null,"Title":"--skip-duplicate added to `dotnet nuget push` parsing","State":"open","Body":"Fix for https://github.com/NuGet/Home/issues/8778\r\n\r\nNew option --skip-duplicate needs to be added to the dotnet parser for `nuget push` to support <tab> auto-completion and telemetry.\r\n\r\nThe [NuGet code changes](https://github.com/NuGet/NuGet.Client/pull/3083) to add this command were inserted into dotnet/cli [release/3.1.1xx](https://github.com/dotnet/cli/pull/12965)\r\n\r\n//cc @livarcocc @rrelyea","Url":"https://github.com/dotnet/cli/pull/13012","RelatedDescription":"Open PR \"--skip-duplicate added to `dotnet nuget push` parsing\" (#13012)"},{"Id":"515690786","IsPullRequest":true,"CreatedAt":"2019-10-31T19:33:36","Actor":"crummel","Number":"13009","RawContent":null,"Title":"Source-build fixes for 3.0.x.","State":"open","Body":"Retargeted version of https://github.com/dotnet/cli/pull/12781.\r\n\r\n- Fixed PackageVersion property name.\r\n- Excluded a couple more projects from source-build.","Url":"https://github.com/dotnet/cli/pull/13009","RelatedDescription":"Open PR \"Source-build fixes for 3.0.x.\" (#13009)"},{"Id":"515027000","IsPullRequest":true,"CreatedAt":"2019-10-31T18:49:52","Actor":"dotnet-maestro[bot]","Number":"13001","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191031.6\r\n- **Date Produced**: 10/31/2019 4:30 PM\r\n- **Commit**: d992cb6bb8368a7f3161fbf1a863b073ec28c956\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.0-preview3.19531.6\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19531.6\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.0-preview3.19531.6\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.0-preview3.19531.6\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.0-preview3.19531.6\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.0-preview3.19531.6\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **System.Text.Json** -> 4.7.0-preview3.19530.2 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13001","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13001)"},{"Id":"515442387","IsPullRequest":true,"CreatedAt":"2019-10-31T14:20:34","Actor":"dotnet-maestro[bot]","Number":"13008","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191031.1\r\n- **Date Produced**: 10/31/2019 11:54 AM\r\n- **Commit**: 0faf33914345956525640464c854cf85da5a6573\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19531.1\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13008","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13008)"},{"Id":"515206602","IsPullRequest":true,"CreatedAt":"2019-10-31T07:25:29","Actor":"dotnet-maestro[bot]","Number":"13006","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191030.11\r\n- **Date Produced**: 10/31/2019 5:13 AM\r\n- **Commit**: 63c802bae20b3cd5e704d6dd3ed90bc8225bc60e\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19530.11\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13006","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13006)"},{"Id":"515138069","IsPullRequest":true,"CreatedAt":"2019-10-31T04:10:27","Actor":"dotnet-maestro[bot]","Number":"13005","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191030.9\r\n- **Date Produced**: 10/31/2019 2:01 AM\r\n- **Commit**: 11a84e25b49677b52b06768a7cba3619eb7e8cf1\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19530.9\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13005","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13005)"},{"Id":"515081226","IsPullRequest":true,"CreatedAt":"2019-10-31T01:35:28","Actor":"dotnet-maestro[bot]","Number":"13004","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191030.7\r\n- **Date Produced**: 10/31/2019 12:16 AM\r\n- **Commit**: fb710543566de826da30550e45bdbc60deb2cee0\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19530.7\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13004","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13004)"},{"Id":"514954030","IsPullRequest":true,"CreatedAt":"2019-10-31T01:02:27","Actor":"dotnet-maestro[bot]","Number":"13000","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191030.8\r\n- **Date Produced**: 10/30/2019 11:32 PM\r\n- **Commit**: 55c8dd25c3f337f9e7098ad787534bd04454b113\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-preview3.19530.8\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13000","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13000)"},{"Id":"515027110","IsPullRequest":true,"CreatedAt":"2019-10-30T23:25:48","Actor":"dotnet-maestro[bot]","Number":"13002","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20191030.6\r\n- **Date Produced**: 10/30/2019 9:55 PM\r\n- **Commit**: 958de2e07848f1a1ea808ba7999432b1e257d77e\r\n- **Branch**: refs/heads/release/3.1.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.1.100-preview2.19530.6\r\n\r\n[marker]: <> (End:3731cb06-cbf9-46bf-a883-08d7219800a1)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13002","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/sdk\" (#13002)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"517192004","IsPullRequest":false,"CreatedAt":"2019-11-04T14:33:56","Actor":"peni4142","Number":"1641","RawContent":null,"Title":"Regex Bug","State":"open","Body":"Hi guys,\r\nI have a test for you\r\n\r\n[x] Bug Report\r\n\r\nThe following regex test will return an empty string in the group[0], which in my opinion can't be true.\r\n\r\n\r\n```C#\r\n        [TestMethod()]\r\n        public void BugTest()\r\n        {\r\n            Match matchEnsureObject = new Regex(\"^\\\\[MERGE-CMD: ENSURE OBJECT\\\\(([^)]+)\\\\)\\\\]$\").Match(\"[MERGE-CMD: ENSURE OBJECT(aLong) AT 1]\");\r\n            if(matchEnsureObject.Groups[0].Value == \"\")\r\n            {\r\n                throw new Exception(\"Match can't be an empty value\");\r\n            }\r\n        }\r\n```\r\n","Url":"https://github.com/dotnet/standard/issues/1641","RelatedDescription":"Open issue \"Regex Bug\" (#1641)"},{"Id":"517142571","IsPullRequest":true,"CreatedAt":"2019-11-04T13:21:47","Actor":"dotnet-maestro[bot]","Number":"1640","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191103.8\r\n- **Date Produced**: 11/4/2019 8:18 AM\r\n- **Commit**: 15e7e1569a8c3a5502c476c31b60e06d633b3efa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19553.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19553.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19553.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1640","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1640)"},{"Id":"516826733","IsPullRequest":true,"CreatedAt":"2019-11-03T13:44:18","Actor":"dotnet-maestro[bot]","Number":"1639","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191102.6\r\n- **Date Produced**: 11/3/2019 4:48 AM\r\n- **Commit**: bfaed4d48a921a339f9691c74425bec9d2f760a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19552.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19552.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19552.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1639","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1639)"},{"Id":"516615712","IsPullRequest":false,"CreatedAt":"2019-11-02T14:52:31","Actor":"bernd5","Number":"1638","RawContent":null,"Title":"_dummy and _dummyPrimitive in System.Span","State":"closed","Body":"Why is it required that all net standard compliant implementations need a private field _dummy and _dummyPrimitive to provide a standard Span<T>?\r\n\r\nShould it be really part of the standard? Isn't it just an implementation detail?","Url":"https://github.com/dotnet/standard/issues/1638","RelatedDescription":"Closed issue \"_dummy and _dummyPrimitive in System.Span\" (#1638)"},{"Id":"516573954","IsPullRequest":true,"CreatedAt":"2019-11-02T12:25:00","Actor":"dotnet-maestro[bot]","Number":"1637","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191101.24\r\n- **Date Produced**: 11/2/2019 4:59 AM\r\n- **Commit**: eb41b7841f1d8edc499a8c0fbaec5e4d53187fa0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19551.24\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19551.24\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19551.24\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1637","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1637)"},{"Id":"516079198","IsPullRequest":true,"CreatedAt":"2019-11-01T12:30:54","Actor":"dotnet-maestro[bot]","Number":"1636","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191031.13\r\n- **Date Produced**: 11/1/2019 5:06 AM\r\n- **Commit**: a24db0ba5666f46f50649810fe698ad267b60331\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19531.13\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19531.13\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19531.13\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1636","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1636)"},{"Id":"515387745","IsPullRequest":true,"CreatedAt":"2019-10-31T12:31:11","Actor":"dotnet-maestro[bot]","Number":"1635","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191031.1\r\n- **Date Produced**: 10/31/2019 9:35 AM\r\n- **Commit**: 18e82cabc1d2cddad8ff07ae96edb7296d9fad9d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19531.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19531.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19531.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1635","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1635)"},{"Id":"507439996","IsPullRequest":true,"CreatedAt":"2019-10-30T20:46:03","Actor":"crummel","Number":"1612","RawContent":null,"Title":"Source-build improvements.","State":"closed","Body":"- Always restore, even in source-build.  This is required so we get NETStandard.Library netstandard2.0 reference bits for inclusion in the NETStandard.Library we are building.\r\n  - Also make this error out in source-build if it fails like it does in the standalone build.\r\n- Sourcelink is now supported in source-build.\r\n\r\nI'm still testing this out in source-build but does it look like what you were thinking of @ericstj?","Url":"https://github.com/dotnet/standard/pull/1612","RelatedDescription":"Closed or merged PR \"Source-build improvements.\" (#1612)"},{"Id":"514625134","IsPullRequest":true,"CreatedAt":"2019-10-30T12:31:21","Actor":"dotnet-maestro[bot]","Number":"1634","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191029.15\r\n- **Date Produced**: 10/30/2019 3:37 AM\r\n- **Commit**: 8ee61dd103ff55445f8baf3137bb768ed86370d9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19529.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1634","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1634)"},{"Id":"513879230","IsPullRequest":true,"CreatedAt":"2019-10-29T12:32:35","Actor":"dotnet-maestro[bot]","Number":"1633","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191028.12\r\n- **Date Produced**: 10/29/2019 2:19 AM\r\n- **Commit**: 15e1ea023d2818b6083a61c7447a720ff3779482\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19528.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1633","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1633)"},{"Id":"513668220","IsPullRequest":false,"CreatedAt":"2019-10-29T03:17:07","Actor":"2300070","Number":"1632","RawContent":null,"Title":"A bug while the 'TypeBuilder' class processing the value type generic argument for generic definition.","State":"open","Body":"I define a class to inherit existen generic type definition, however, the base type has one generic argument, the type I processing has two generic argument, and I want the second generic as the generic argument of base type, so I write the code below, but the strange thing is: if the first generic argument is class type(though it is not used by any place), it works fine, but if I change it to a value type, an exception will thrown('Unable to read memory'), is there any problem while the 'TypeBuilder' class processing the generic arguments?\r\n\r\n\t[TestClass]\r\n\tpublic class GeneralTest\r\n\t{\r\n\t\t[TestMethod]\r\n\t\tpublic void TestDefineGenericType()\r\n\t\t{\r\n\t\t\tAssemblyBuilder assembly = AssemblyBuilder.DefineDynamicAssembly(new AssemblyName(\"GeneralTest\"), AssemblyBuilderAccess.RunAndCollect);\r\n\t\t\tModuleBuilder module = assembly.DefineDynamicModule(\"GeneralTest.dll\");\r\n\r\n\t\t\t//define type\r\n\t\t\tTypeBuilder builder = module.DefineType(\"TestGenericClass\");\r\n\t\t\tGenericTypeParameterBuilder[] arguments = builder.DefineGenericParameters(\"TValue1\", \"TValue2\");\r\n\t\t\t\r\n\t\t\tbuilder.SetParent(typeof(TestClass<>).MakeGenericType(arguments[1]));\r\n\r\n\t\t\t//define constructor that invoke base constructor\r\n\t\t\tConstructorBuilder constructor = builder.DefineConstructor(MethodAttributes.Public, CallingConventions.Standard, new Type[] {arguments[1] });\r\n\t\t\tILGenerator generator = constructor.GetILGenerator();\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_0);\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_1);\r\n\t\t\tgenerator.Emit(OpCodes.Call, typeof(TestClass<>).GetConstructors(BindingFlags.Public | BindingFlags.Instance)[0]);\r\n\t\t\tgenerator.Emit(OpCodes.Ret);\r\n\t\t\t\r\n\t\t\tType builtType = builder.CreateType();\r\n\t\t\tType testType;\r\n\t\t\tTestClass<string> test;\r\n\r\n\t\t\t//this test is okay.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(object), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\r\n\t\t\t//change the first generic argument to value type, exception will be thrown.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(int), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\t//Assert.AreEqual(string.Empty, test.Value);//ERROR WHILE READ THE FIELD OF 'test'\r\n\r\n\t\t\t\r\n\t\t\t//change the first generic argument to class type back, exception disapear.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(string), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\t\t}\r\n\r\n\t\tpublic class TestClass<TValue>\r\n\t\t{\r\n\t\t\tpublic readonly TValue Value;\r\n\r\n\t\t\tpublic Type ValueType => typeof(TValue);\r\n\r\n\t\t\tpublic TestClass(TValue value)\r\n\t\t\t{\r\n\t\t\t\tthis.Value = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}","Url":"https://github.com/dotnet/standard/issues/1632","RelatedDescription":"Open issue \"A bug while the 'TypeBuilder' class processing the value type generic argument for generic definition.\" (#1632)"},{"Id":"513270667","IsPullRequest":true,"CreatedAt":"2019-10-28T12:31:05","Actor":"dotnet-maestro[bot]","Number":"1631","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191027.5\r\n- **Date Produced**: 10/28/2019 8:28 AM\r\n- **Commit**: 17c14aa2b50cfb5920d03ea8835c9a4932b5359c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19527.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1631","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1631)"},{"Id":"512958771","IsPullRequest":true,"CreatedAt":"2019-10-27T12:45:49","Actor":"dotnet-maestro[bot]","Number":"1630","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191026.6\r\n- **Date Produced**: 10/27/2019 2:42 AM\r\n- **Commit**: 0d0336cc9c3a04d7e23af38698b215a2955e965f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19526.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19526.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19526.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1630","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1630)"},{"Id":"512829066","IsPullRequest":true,"CreatedAt":"2019-10-26T12:30:59","Actor":"dotnet-maestro[bot]","Number":"1629","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191025.6\r\n- **Date Produced**: 10/26/2019 7:24 AM\r\n- **Commit**: 8245ee1e8f6063ccc7a3a60cafe821d29e85b02f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19525.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19525.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19525.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1629","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1629)"},{"Id":"512485574","IsPullRequest":true,"CreatedAt":"2019-10-25T12:31:13","Actor":"dotnet-maestro[bot]","Number":"1628","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191024.14\r\n- **Date Produced**: 10/25/2019 4:12 AM\r\n- **Commit**: 0954a975f972546314bd3ac4eb6e0a6380a85701\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19524.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19524.14\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19524.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1628","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1628)"},{"Id":"512430892","IsPullRequest":false,"CreatedAt":"2019-10-25T10:18:18","Actor":"lockeduan","Number":"1627","RawContent":null,"Title":"standard 2.1 DbParameter.DbType can never set to DbType.Time","State":"open","Body":"i'm trying to set parameter DbType to Time, but the result is that it wrongly set to DateTime instead\r\n\r\n```\r\ndbParameter.DbType = DbType.Time;\r\n```","Url":"https://github.com/dotnet/standard/issues/1627","RelatedDescription":"Open issue \"standard 2.1 DbParameter.DbType can never set to DbType.Time\" (#1627)"},{"Id":"511908253","IsPullRequest":true,"CreatedAt":"2019-10-24T12:36:46","Actor":"dotnet-maestro[bot]","Number":"1626","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191023.8\r\n- **Date Produced**: 10/23/2019 8:34 PM\r\n- **Commit**: be22fd85b2ceb377de87e6bda006f819569fec3a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19523.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19523.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19523.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1626","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1626)"},{"Id":"511790862","IsPullRequest":false,"CreatedAt":"2019-10-24T08:32:00","Actor":"jrahma","Number":"1625","RawContent":null,"Title":"Easier way to upload Images using PostAsync","State":"open","Body":"Hi,\r\n\r\nIt will be great if you provide an easier way to directly uplaod images using PosyAsync without having to use MediaTypeHeaderValue\r\n\r\nFor example:\r\n\r\n```\r\nvar content = new FormUrlEncodedContent(new[]\r\n{\r\n    new KeyValuePair<string, string>(\"channel\", TextBoxNewChannelName.Text),\r\n    new KeyValuePair<string, ImageStream>(\"logo\", channel_logo),\r\n});\r\n\r\n```","Url":"https://github.com/dotnet/standard/issues/1625","RelatedDescription":"Open issue \"Easier way to upload Images using PostAsync\" (#1625)"},{"Id":"511593656","IsPullRequest":false,"CreatedAt":"2019-10-23T21:58:36","Actor":"devon94","Number":"1624","RawContent":null,"Title":"Cannot serialize System.Globalization.NumberFormatInfo into binary stream","State":"open","Body":"Hey there,\r\n\r\nI was trying to serialize NumberFormatInfo into a binary stream using the following code:\r\n\r\n`\r\n\r\n            var locale = user?.Locale;\r\n            var cultureInfo = new System.Globalization.CultureInfo(locale);\r\n\r\n            using (var ms = new MemoryStream())\r\n            {\r\n                new BinaryFormatter().Serialize(ms, cultureInfo.NumberFormat);\r\n                return ms.ToArray();\r\n            }\r\n`\r\n\r\nIt worked when we were using mscorlib 4.0.0 but not after migrating to dotnet standard. It looks like it used to have the Serialization attribute in for that class but in dotnet standard those attributes seems to be missing. \r\n\r\nWas it intentional to make the NumberFormatInfo not serializable? Thanks!","Url":"https://github.com/dotnet/standard/issues/1624","RelatedDescription":"Open issue \"Cannot serialize System.Globalization.NumberFormatInfo into binary stream\" (#1624)"},{"Id":"511285257","IsPullRequest":true,"CreatedAt":"2019-10-23T12:30:19","Actor":"dotnet-maestro[bot]","Number":"1623","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191023.1\r\n- **Date Produced**: 10/23/2019 8:47 AM\r\n- **Commit**: b8cb521e83456bd81dc314c0625d6236d7955bd9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19523.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19523.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19523.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1623","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1623)"},{"Id":"510619350","IsPullRequest":true,"CreatedAt":"2019-10-22T12:32:26","Actor":"dotnet-maestro[bot]","Number":"1621","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191021.4\r\n- **Date Produced**: 10/21/2019 11:38 PM\r\n- **Commit**: 46299619e290936c495264162ede68354ced5b18\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19521.4\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19521.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1621","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1621)"},{"Id":"510968850","IsPullRequest":false,"CreatedAt":"2019-10-21T21:11:58","Actor":"TomasMorton","Number":"1622","RawContent":null,"Title":"Targeting netstandard2.1 conflicts with System.Data.DataSetExtensions","State":"open","Body":"I'm trying to upgrade my solution to DotNet Core 3.  I have references to Entity Framework, which has forced an upgrade to netstandard 2.1.\r\n\r\nHowever, my classes that were using the DataTableExtensions are now unable to compile due to the following error:\r\n`[CS0121] The call is ambiguous between the following methods or properties: 'System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)' and 'System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)'`\r\nand also\r\n`[CS0433] The type 'TypedTableBase<T>' exists in both 'System.Data.DataSetExtensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089' and 'netstandard, Version=2.1.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'`\r\n\r\nI have removed all Nuget packages for System.Data.DataSetExtensions, but I probably have a transitive dependency somewhere in the graph.\r\n\r\nThis problem seems to be the same as the previous one in https://github.com/dotnet/corefx/issues/37738.\r\n\r\nI would appreciate any workarounds to get my solution compiling as soon as possible.","Url":"https://github.com/dotnet/standard/issues/1622","RelatedDescription":"Open issue \"Targeting netstandard2.1 conflicts with System.Data.DataSetExtensions\" (#1622)"},{"Id":"509922429","IsPullRequest":true,"CreatedAt":"2019-10-21T12:23:01","Actor":"dotnet-maestro[bot]","Number":"1620","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191020.7\r\n- **Date Produced**: 10/21/2019 6:09 AM\r\n- **Commit**: 03453d9aae8e5d18e571699c5d2229b1ab5f4b9d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19520.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19520.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19520.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1620","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1620)"},{"Id":"509586833","IsPullRequest":true,"CreatedAt":"2019-10-20T12:22:06","Actor":"dotnet-maestro[bot]","Number":"1619","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191019.7\r\n- **Date Produced**: 10/20/2019 2:47 AM\r\n- **Commit**: 03dd803990dfb8f05db8d0ec1bc34268386c1d5b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19519.7\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19519.7\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19519.7\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1619","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1619)"},{"Id":"509442622","IsPullRequest":true,"CreatedAt":"2019-10-19T12:29:32","Actor":"dotnet-maestro[bot]","Number":"1618","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191018.10\r\n- **Date Produced**: 10/19/2019 7:13 AM\r\n- **Commit**: 5590d3896f012c1c9b7774774456331a36ba1d57\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19518.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19518.10\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19518.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1618","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1618)"},{"Id":"509155885","IsPullRequest":false,"CreatedAt":"2019-10-18T15:46:13","Actor":"0blu","Number":"1617","RawContent":null,"Title":"Why do I need special permission when using HttpListener?","State":"closed","Body":"Hey,\r\n\r\nthis issue is a little bit dot net bashing because some interfaces are design with assumptions that are too specific for most users, HttpListener is one of them.\r\n\r\nFirst of all, I already read about the [HTTP namespace system](https://docs.microsoft.com/en-us/windows/win32/http/routing-incoming-requests).\r\n\r\n`HttpListener` allows simple and high level creation of HTTP servers, but what if I want to create a HTTP server that can listen on all hosts, without requiring admin permissions or running arbitrary `netsh` commands?\r\n\r\nIf I would run this code as an unprivileged user the result would be an access exception.\r\n``` c#\r\nHttpListener listener = new HttpListener();\r\nlistener.Prefixes.Add(\"http://*:1234/\");\r\nlistener.Start();\r\n```\r\n\r\nHowever running the following code proves that an unprivileged user could potentially write his own HTTP server, that allows access from all interfaces.\r\n``` c#\r\nTcpListener server = new TcpListener(IPAddress.Any, 1234);\r\nserver.Start();\r\n```\r\n\r\nI wonder why there is no way to take all the benefits of the `HttpListener` and skipping the namespacing system. Other languages have such features.\r\n\r\nIs there any chance to request an API addition that allows such things?\r\nFor example allowing the constructor of `HttpListener` to take an `TcpListener`-Instance.\r\n","Url":"https://github.com/dotnet/standard/issues/1617","RelatedDescription":"Closed issue \"Why do I need special permission when using HttpListener?\" (#1617)"},{"Id":"509045354","IsPullRequest":true,"CreatedAt":"2019-10-18T12:30:25","Actor":"dotnet-maestro[bot]","Number":"1616","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191018.1\r\n- **Date Produced**: 10/18/2019 8:58 AM\r\n- **Commit**: 2b92fc0930b941cd0d9146971745cd717689434c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19518.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19518.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19518.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1616","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1616)"},{"Id":"508423360","IsPullRequest":true,"CreatedAt":"2019-10-17T23:53:53","Actor":"akoeplinger","Number":"1614","RawContent":null,"Title":"Update Xamarin APIs to latest Dev16.4 builds","State":"closed","Body":"- Xamarin.Android 10.1.0.1\r\n- Xamarin.iOS 13.8.1.1\r\n- Xamarin.Mac 6.8.1.1\r\n\r\nThis also uses a new GenAPI version so the diff is a little messy because of the enum value to name changes in attributes.\r\n\r\nI also had to introduce a System.Core.stubs.csproj to break a build cycle because System.dll references System.Security.Cryptography.ECDsa from System.Core.dll now.","Url":"https://github.com/dotnet/standard/pull/1614","RelatedDescription":"Closed or merged PR \"Update Xamarin APIs to latest Dev16.4 builds\" (#1614)"},{"Id":"508433927","IsPullRequest":true,"CreatedAt":"2019-10-17T12:24:28","Actor":"dotnet-maestro[bot]","Number":"1615","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191016.16\r\n- **Date Produced**: 10/17/2019 4:25 AM\r\n- **Commit**: b9186cfa3566ee24e5f16e45c542a3078e128dc6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19516.16\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19516.16\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19516.16\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1615","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1615)"},{"Id":"507816713","IsPullRequest":true,"CreatedAt":"2019-10-16T12:33:03","Actor":"dotnet-maestro[bot]","Number":"1613","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191015.14\r\n- **Date Produced**: 10/16/2019 5:58 AM\r\n- **Commit**: b50bd0a1d3f0326fc717706cb5c5950ab41cf437\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha1.19515.14\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha1.19515.14\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1613","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1613)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"517481096","IsPullRequest":true,"CreatedAt":"2019-11-05T04:47:15","Actor":"safern","Number":"42376","RawContent":null,"Title":"Update linux containers to match coreclr's and use latest toolchain","State":"closed","Body":"This is needed in order to consolidate the cross folder for the repo consolidation since coreclr is now using clang-9 and cmake 3.15.\r\n\r\ncc: @ViktorHofer @jkoritzinsky @wfurt ","Url":"https://github.com/dotnet/corefx/pull/42376","RelatedDescription":"Closed or merged PR \"Update linux containers to match coreclr's and use latest toolchain\" (#42376)"},{"Id":"517491946","IsPullRequest":true,"CreatedAt":"2019-11-05T01:10:02","Actor":"carlossanlop","Number":"42377","RawContent":null,"Title":"Add Semaphore creation extension methods that take an ACL","State":"open","Body":"Approved API Proposal: https://github.com/dotnet/corefx/issues/41662\r\nRelated PR for EventWaitHandle: https://github.com/dotnet/corefx/pull/42213\r\nRelated PR for Mutex: https://github.com/dotnet/corefx/pull/42281\r\n\r\n### Description\r\nWe don't currently have a way to create a Semaphore with a given ACL in .NET Core. We can modify the ACL, but it would be more secure to have the proper ACL on the object from the start.\r\n\r\n### Customer impact\r\nBefore this change, customers had to create a Semaphore, then set its ACLs. This presents a few problems:\r\n\r\n- Potential security hole as semaphores can be accessed between creation and modification.\r\n- Porting difficulties as there isn't a 1-1 API replacement\r\n\r\nThis change addresses those problems by adding a new extension method that allows creating a Semaphore and ensuring the provided ACLs are set during creation.\r\n\r\nWe will try to merge this to 3.1 if time permits it.","Url":"https://github.com/dotnet/corefx/pull/42377","RelatedDescription":"Open PR \"Add Semaphore creation extension methods that take an ACL\" (#42377)"},{"Id":"517407676","IsPullRequest":true,"CreatedAt":"2019-11-04T23:05:28","Actor":"jkotas","Number":"42373","RawContent":null,"Title":"Add Array.Copy test for very large arrays","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42373","RelatedDescription":"Closed or merged PR \"Add Array.Copy test for very large arrays\" (#42373)"},{"Id":"517437227","IsPullRequest":false,"CreatedAt":"2019-11-04T22:52:23","Actor":"maryamariyan","Number":"42375","RawContent":null,"Title":"Regex.IsMatch too long execution (like 5 minute)","State":"closed","Body":"Regex.IsMatch in the code snippet below executed for too long with one string, but very fast with another very similar string. The problem seems to be in substring \"++\":\r\n\r\n```c#\r\nusing System.Diagnostics;\r\nusing System.Text.RegularExpressions;\r\n\r\nnamespace test_app\r\n{\r\n    class Program\r\n    {\r\n        private static readonly Regex testRgx = new Regex(@\"^\\s*=\\s*((\\+|\\-|)?\\s*\\d{1,5}([.,]\\d{1,2})?\\s*)+$\", RegexOptions.IgnoreCase | RegexOptions.CultureInvariant | RegexOptions.ExplicitCapture);\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            string value = \"=145+20-105-145+180-10+22+40+22,5-37,5-160,5++86,5+42,5-64-75,16+53,34-1,53\";\r\n\r\n            Stopwatch stopwatch = new Stopwatch();\r\n            stopwatch.Start();\r\n            bool res = !testRgx.IsMatch(value);\r\n            stopwatch.Stop();\r\n\r\n            Trace.WriteLine($\"IsMatch for '{value}' - \" + stopwatch.ElapsedMilliseconds);\r\n\r\n            Stopwatch stopwatch1 = new Stopwatch();\r\n            stopwatch1.Start();\r\n            bool res1 = !testRgx.IsMatch(\"=\" + value);\r\n            stopwatch1.Stop();\r\n\r\n            Trace.WriteLine($\"IsMatch for '{\"=\" + value}' - \" + stopwatch1.ElapsedMilliseconds);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\ncc: @tarekgh ","Url":"https://github.com/dotnet/corefx/issues/42375","RelatedDescription":"Closed issue \"Regex.IsMatch too long execution (like 5 minute)\" (#42375)"},{"Id":"517414196","IsPullRequest":false,"CreatedAt":"2019-11-04T21:28:13","Actor":"ViktorHofer","Number":"42374","RawContent":null,"Title":"Support the runtime repository paths in the existing yml scripts","State":"open","Body":"As discussed offline, we need to add a mechanism so that our existing yml script automatically adapt to the paths in the new runtime repository.","Url":"https://github.com/dotnet/corefx/issues/42374","RelatedDescription":"Open issue \"Support the runtime repository paths in the existing yml scripts\" (#42374)"},{"Id":"517396927","IsPullRequest":false,"CreatedAt":"2019-11-04T20:57:00","Actor":"vcsjones","Number":"42372","RawContent":null,"Title":"One-shot AES CBC and ECB","State":"open","Body":".NET Core 3.0 has `AesCcm` and `AesGcm` type that are simple, one-shot APIs. I really like the API shape of these and would suggest that it might be worth adding `AesCbc` and `AesEcb` (sorry) types.\r\n\r\nThe one-shot (no streaming, no update / finalize) would give a few benefits.\r\n\r\n   * I like that the mode is part of the type. The modes aren't really interchangeable, and having them as part of the type helps suggest that. That is, as far as using a primitive goes, I can't really \"upgrade\" from one mode to another like it's some kind of configuration. It requires some thought and consideration as to how each mode behaves.\r\n\r\n   * Type-per-mode would allow the API shape to fit the mode better (no IV for ECB).\r\n\r\n   * One-shot usage would be hard to \"you're holding it wrong\". The API surface would be simple `Decrypt` and `Encrypt` methods. \r\n\r\n   * One-shot API would mean there is no state to carry between calls (like CNG updating the IV).\r\n      That might afford a few more opportunities to use CryptoPool or stack buffers instead of `new byte[]`.\r\n\r\n   * Do not support some less common types of block padding (PKCS#7 and no padding only). This can help developers make better choices security-wise and push handling down to the underlying implementation.\r\n\r\n/cc @GrabYourPitchforks @bartonjs ","Url":"https://github.com/dotnet/corefx/issues/42372","RelatedDescription":"Open issue \"One-shot AES CBC and ECB\" (#42372)"},{"Id":"517382637","IsPullRequest":false,"CreatedAt":"2019-11-04T20:27:21","Actor":"tarekgh","Number":"42371","RawContent":null,"Title":"Introduce Distributed Context API (distributed http context)","State":"open","Body":"This issue tracking the work as the part of the issue #42305\r\n\r\nDistributed context should support \r\n- string/string (key-value pairs)\r\n- Support scoping \r\n- Not attached to Activity","Url":"https://github.com/dotnet/corefx/issues/42371","RelatedDescription":"Open issue \"Introduce Distributed Context API (distributed http context)\" (#42371)"},{"Id":"517333769","IsPullRequest":true,"CreatedAt":"2019-11-04T18:45:55","Actor":"danmosemsft","Number":"42370","RawContent":null,"Title":"[release/3.1] Read values from /proc/[pid]/status (#41122)","State":"open","Body":"Port of https://github.com/dotnet/corefx/pull/41122\r\nFixed #23449\r\nFixed #36086\r\n\r\n### Summary\r\nAdds or improves results for several memory stats on Linux.\r\n\r\nAdd support for:\r\nProcess.PeakWorkingSet64\r\nProcess.PrivateMemorySize64\r\nProcess.PagedMemorySize64\r\nProcess.PagedSystemMemorySize64\r\nProcess.PeakVirtualMemorySize64\r\nImproves:\r\nProcess.VirtualMemorySize64\r\nProcess.WorkingSet64\r\n\r\n### Customer Impact\r\n\r\nThis prevents some profilers from providing full memory information for services running on Linux, eg.,\r\n* NewRelic ([per their documentation](https://docs.newrelic.com/docs/agents/net-agent/installation/compatibility-requirements-net-core-agent#unavailable-features))\r\n* Microsoft Application Insights (issue in [their repo here](https://github.com/microsoft/ApplicationInsights-dotnet-server/issues/1299))\r\n\r\nFixing this makes it easier for customers to monitor and diagnose issues on their services through telemetry. There is a desire to get this into an LTS release for this purpose.\r\n\r\n### Regression?\r\n\r\nNo, these have never worked on Linux.\r\n\r\n### Testing\r\n\r\nUnit tests have been modified to require non zero values on Linux. This change does not fix OSX.\r\n\r\n### Risk\r\n\r\nAffects reading of any process information on Linux (eg., GetProcessesByName). Previously it would read `/proc/<pid>/stat` and now it also reads `/proc/<pid>/status` to gather the other information. The risks include, slower performance from reading two files (although, Linux is already slower than Windows); bugs in reading the file could throw - although we catch IOException; bugs parsing the file could throw or produce garbage.\r\n\r\ncc @stephentoub does the text above seem reasonable? Could you please sign off on the port? I just did cherry pick.","Url":"https://github.com/dotnet/corefx/pull/42370","RelatedDescription":"Open PR \"[release/3.1] Read values from /proc/[pid]/status (#41122)\" (#42370)"},{"Id":"517298227","IsPullRequest":true,"CreatedAt":"2019-11-04T18:31:50","Actor":"MattGal","Number":"42367","RawContent":null,"Title":"Change Platform -> ArchGroup for timeout increase","State":"closed","Body":"From reviewing the binlogs of arm and arm64 builds, this property check should definitely be ArchGroup not Platform (which ends up being AnyCPU here)","Url":"https://github.com/dotnet/corefx/pull/42367","RelatedDescription":"Closed or merged PR \"Change Platform -> ArchGroup for timeout increase\" (#42367)"},{"Id":"517275964","IsPullRequest":true,"CreatedAt":"2019-11-04T18:02:30","Actor":"Dotnet-GitSync-Bot","Number":"42363","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @TamarChristinaArm","Url":"https://github.com/dotnet/corefx/pull/42363","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#42363)"},{"Id":"517285203","IsPullRequest":true,"CreatedAt":"2019-11-04T17:58:23","Actor":"stephentoub","Number":"42365","RawContent":null,"Title":"Reduce System.Text.Json test count from ~150K to ~11K","State":"closed","Body":"One theory was added in https://github.com/dotnet/corefx/pull/42254 with ~140K inputs and is causing our infrastructure to go haywire.\r\n\r\nFixes https://github.com/dotnet/core-eng/issues/8209\r\nFixes https://github.com/dotnet/corefx/issues/42350\r\n\r\ncc: @ViktorHofer, @MattGal, @ahsonkhan, @layomia \r\n\r\nBefore:\r\n```\r\n    Discovering: System.Text.Json.Tests (method display = ClassAndMethod, method display options = None)\r\n    Discovered:  System.Text.Json.Tests (found 1525 of 1552 test cases)\r\n    Starting:    System.Text.Json.Tests (parallel test collections = on, max threads = 12)\r\n    Finished:    System.Text.Json.Tests\r\n  === TEST EXECUTION SUMMARY ===\r\n     System.Text.Json.Tests  Total: 153880, Errors: 0, Failed: 0, Skipped: 0, Time: 26.452s\r\n```\r\n\r\nAfter:\r\n```\r\n    Discovering: System.Text.Json.Tests (method display = ClassAndMethod, method display options = None)\r\n    Discovered:  System.Text.Json.Tests (found 1525 of 1552 test cases)\r\n    Starting:    System.Text.Json.Tests (parallel test collections = on, max threads = 12)\r\n    Finished:    System.Text.Json.Tests\r\n  === TEST EXECUTION SUMMARY ===\r\n     System.Text.Json.Tests  Total: 11030, Errors: 0, Failed: 0, Skipped: 0, Time: 22.269s\r\n```","Url":"https://github.com/dotnet/corefx/pull/42365","RelatedDescription":"Closed or merged PR \"Reduce System.Text.Json test count from ~150K to ~11K\" (#42365)"},{"Id":"517033856","IsPullRequest":false,"CreatedAt":"2019-11-04T17:58:23","Actor":"AriNuer","Number":"42350","RawContent":null,"Title":"System.Text.Json.Tests Timed out with Exit Code:-3","State":"closed","Body":"**Build:**\r\n[20191103.46](https://dnceng.visualstudio.com/public/_build/results?buildId=414378)(Master)\r\n\r\n**Details:**\r\nhttps://helix.dot.net/api/2019-06-17/jobs/c5186878-c214-4c57-b446-c4666979f3b3/workitems/System.Text.Json.Tests/console\r\n\r\n**OS & Arch:**\r\nLinux arm\r\n\r\n**Queue name:**\r\nnetcoreapp-Linux-Release-arm-(Debian.9.Arm32.Open)Ubuntu.1604.Arm32.Open\r\n\r\n**Log:**\r\n```\r\n/root/helix/work/workitem /root/helix/work/workitem\r\n  Discovering: System.Text.Json.Tests (method display = ClassAndMethod, method display options = None)\r\n  Discovered:  System.Text.Json.Tests (found 1525 of 1552 test cases)\r\n  Starting:    System.Text.Json.Tests (parallel test collections = on, max threads = 4)\r\n  Finished:    System.Text.Json.Tests\r\n=== TEST EXECUTION SUMMARY ===\r\n   System.Text.Json.Tests  Total: 153880, Errors: 0, Failed: 0, Skipped: 0, Time: 318.127s\r\n/root/helix/work/workitem\r\n----- end Mon Nov 4 06:30:09 UTC 2019 ----- exit code 0 ----------------------------------------------------------\r\nexit code 0 means Exited Successfully\r\n+ export _commandExitCode=0\r\n+ /bin/sh /root/helix/work/correlation/reporter/run.sh https://dev.azure.com/dnceng/ public 13014098 eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Im9PdmN6NU1fN3AtSGpJS2xGWHo5M3VfVjBabyJ9.eyJuYW1laWQiOiJlNDI4NWM4Yy0zZmQ1LTQyNjctOWIxYy00MjE5NWM0N2E1NTMiLCJzY3AiOiJhcHBfdG9rZW4iLCJhdWkiOiI1NTg3NzM0OC04YzBhLTQwZWQtOGFhOC0wODRkZTI3YWY0ZDQiLCJzaWQiOiJiMDdiN2E0MS0xMjUwLTQyOTQtYmVjNy1iNWI2OGQ1MTZhNTkiLCJCdWlsZElkIjoiOWVlNmQ0NzgtZDI4OC00N2Y3LWFhY2MtZjZlNmQwODJhZTZkOzQxNDM3OCIsIm9yY2hpZCI6IjFmNjMyYTQ1LTRhM2YtNGIxZC05NzVlLTM0MDJjYjY1ZDZjNy5saW51eHN0YWdlLmxpbnV4dGVzdC5hcm1fcmVsZWFzZSIsImlzcyI6ImFwcC52c3Rva2VuLnZpc3VhbHN0dWRpby5jb20iLCJhdWQiOiJhcHAudnN0b2tlbi52aXN1YWxzdHVkaW8uY29tfHZzbzpiNTVkZTRlZC00YjVhLTQyMTUtYThlNC0wYTBhNWY3MWU3ZDgiLCJuYmYiOjE1NzI4NDYwNDUsImV4cCI6MTU3Mjg2MTY0NX0.erACwpyuMbLAmtyF98eUESNk5Nt3ugPl6F-ONB-g8t_9VZSdcQzkxtgmMob26jCCg9fg03sU86lz6F1fKIPlNOfGABlv2wm5rPAvl9W7KdXpGVkU4QjDpU7b0xcK6gDliVhHMrY7i2fUkEJKLQ-PxYxBVb9tZbtQjjcy3zpCGxOmNXAVGhCr888Dbab8-t18gLGxqSKLHkNczLRJbEQDnxH_EbLCX6zr7mP-FlcCN4sl0hRSM3oSIn6kaXyw1At3VZFsf-eBoMykapBUtILqHwzLpG0rYlBO04LcYCoKqUvke84Dkaw0xFWF5OjRzNd0UnI9UTJPrq0KevWgN7LoRA\r\n+ dirname -- /root/helix/work/correlation/reporter/run.sh\r\n+ CDPATH= cd -- /root/helix/work/correlation/reporter\r\n+ pwd\r\n+ script_path=/root/helix/work/correlation/reporter\r\n+ ENV_PATH=/home/helixbot/.vsts-env\r\n+ TMP_ENV_PATH=/home/helixbot/.vsts-env-tmp\r\n+ date -u +%FT%TZ\r\n2019-11-04T06:30:09Z\r\n+ [ ! -f /home/helixbot/.vsts-env/bin/python ]\r\n+ /home/helixbot/.vsts-env/bin/python -c import azure.devops\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nImportError: No module named 'azure'\r\n+ sudo /home/helixbot/.vsts-env/bin/python -m pip install azure-devops==5.0.0b9\r\nCollecting azure-devops==5.0.0b9\r\n  Downloading https://files.pythonhosted.org/packages/3d/e2/5e75a901aa79e8dc215c59b5beabce6d644d084fd8ec4b29f1584c29676e/azure_devops-5.0.0b9-py3-none-any.whl (1.3MB)\r\nRequirement already satisfied: msrest<0.7.0,>=0.6.0 in /home/helixbot/.vsts-env/lib/python3.5/site-packages (from azure-devops==5.0.0b9) (0.6.7)\r\nRequirement already satisfied: certifi>=2017.4.17 in /home/helixbot/.vsts-env/lib/python3.5/site-packages (from msrest<0.7.0,>=0.6.0->azure-devops==5.0.0b9) (2019.6.16)\r\nRequirement already satisfied: isodate>=0.6.0 in /home/helixbot/.vsts-env/lib/python3.5/site-packages (from msrest<0.7.0,>=0.6.0->azure-devops==5.0.0b9) (0.6.0)\r\nRequirement already satisfied: requests-oauthlib>=0.5.0 in /home/helixbot/.vsts-env/lib/python3.5/site-packages (from msrest<0.7.0,>=0.6.0->azure-devops==5.0.0b9) (1.2.0)\r\nRequirement already satisfied: requests~=2.16 in /home/helixbot/.vsts-env/lib/python3.5/site-packages (from msrest<0.7.0,>=0.6.0->azure-devops==5.0.0b9) (2.22.0)\r\nRequirement already satisfied: six in /home/helixbot/.vsts-env/lib/python3.5/site-packages (from isodate>=0.6.0->msrest<0.7.0,>=0.6.0->azure-devops==5.0.0b9) (1.12.0)\r\nRequirement already satisfied: oauthlib>=3.0.0 in /home/helixbot/.vsts-env/lib/python3.5/site-packages (from requests-oauthlib>=0.5.0->msrest<0.7.0,>=0.6.0->azure-devops==5.0.0b9) (3.0.1)\r\nRequirement already satisfied: chardet<3.1.0,>=3.0.2 in /home/helixbot/.vsts-env/lib/python3.5/site-packages (from requests~=2.16->msrest<0.7.0,>=0.6.0->azure-devops==5.0.0b9) (3.0.4)\r\nRequirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /home/helixbot/.vsts-env/lib/python3.5/site-packages (from requests~=2.16->msrest<0.7.0,>=0.6.0->azure-devops==5.0.0b9) (1.25.3)\r\nRequirement already satisfied: idna<2.9,>=2.5 in /home/helixbot/.vsts-env/lib/python3.5/site-packages (from requests~=2.16->msrest<0.7.0,>=0.6.0->azure-devops==5.0.0b9) (2.8)\r\nInstalling collected packages: azure-devops\r\nSuccessfully installed azure-devops-5.0.0b9\r\nWARNING: You are using pip version 19.1.1, however version 19.3.1 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n+ /home/helixbot/.vsts-env/bin/python -c import future\r\n+ echo future module already available\r\n+ date -u +%FT%TZ\r\nfuture module already available\r\n2019-11-04T06:30:15Z\r\n+ /home/helixbot/.vsts-env/bin/python /root/helix/work/correlation/reporter/run.py https://dev.azure.com/dnceng/ public 13014098 eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Im9PdmN6NU1fN3AtSGpJS2xGWHo5M3VfVjBabyJ9.eyJuYW1laWQiOiJlNDI4NWM4Yy0zZmQ1LTQyNjctOWIxYy00MjE5NWM0N2E1NTMiLCJzY3AiOiJhcHBfdG9rZW4iLCJhdWkiOiI1NTg3NzM0OC04YzBhLTQwZWQtOGFhOC0wODRkZTI3YWY0ZDQiLCJzaWQiOiJiMDdiN2E0MS0xMjUwLTQyOTQtYmVjNy1iNWI2OGQ1MTZhNTkiLCJCdWlsZElkIjoiOWVlNmQ0NzgtZDI4OC00N2Y3LWFhY2MtZjZlNmQwODJhZTZkOzQxNDM3OCIsIm9yY2hpZCI6IjFmNjMyYTQ1LTRhM2YtNGIxZC05NzVlLTM0MDJjYjY1ZDZjNy5saW51eHN0YWdlLmxpbnV4dGVzdC5hcm1fcmVsZWFzZSIsImlzcyI6ImFwcC52c3Rva2VuLnZpc3VhbHN0dWRpby5jb20iLCJhdWQiOiJhcHAudnN0b2tlbi52aXN1YWxzdHVkaW8uY29tfHZzbzpiNTVkZTRlZC00YjVhLTQyMTUtYThlNC0wYTBhNWY3MWU3ZDgiLCJuYmYiOjE1NzI4NDYwNDUsImV4cCI6MTU3Mjg2MTY0NX0.erACwpyuMbLAmtyF98eUESNk5Nt3ugPl6F-ONB-g8t_9VZSdcQzkxtgmMob26jCCg9fg03sU86lz6F1fKIPlNOfGABlv2wm5rPAvl9W7KdXpGVkU4QjDpU7b0xcK6gDliVhHMrY7i2fUkEJKLQ-PxYxBVb9tZbtQjjcy3zpCGxOmNXAVGhCr888Dbab8-t18gLGxqSKLHkNczLRJbEQDnxH_EbLCX6zr7mP-FlcCN4sl0hRSM3oSIn6kaXyw1At3VZFsf-eBoMykapBUtILqHwzLpG0rYlBO04LcYCoKqUvke84Dkaw0xFWF5OjRzNd0UnI9UTJPrq0KevWgN7LoRA\r\n2019-11-04 06:30:15,821: INFO: -143289840: run(82): main: Main thread starting 10 workers\r\nWorker 0: starting...\r\nWorker 1: starting...\r\nWorker 2: starting...\r\nWorker 3: starting...\r\nWorker 4: starting...\r\nWorker 5: starting...\r\nWorker 6: starting...\r\nWorker 7: starting...\r\nWorker 8: starting...\r\nWorker 9: starting...\r\n2019-11-04 06:30:15,825: INFO: -143289840: run(89): main: Beginning reading of test results.\r\n2019-11-04 06:30:15,825: INFO: -143289840: run(95): main: Uploading results in batches of size 1000\r\nSearching '/root/helix/work/workitem/..' for log files\r\nGenerated log list: <ul></ul>\r\nSearching '/root/helix/work/workitem' for test results files\r\nFound results file /root/helix/work/workitem/testResults.xml with format xunit\r\nWorker 1: uploaded 1000 results\r\nWorker 2: uploaded 1000 results\r\nWorker 8: uploaded 1000 results\r\nWorker 9: uploaded 1000 results\r\nWorker 3: uploaded 1000 results\r\nWorker 4: uploaded 1000 results\r\nWorker 5: uploaded 1000 results\r\nWorker 6: uploaded 1000 results\r\nWorker 7: uploaded 1000 results\r\n2019-11-04 06:32:15,833: WARNING: -160222096: azure_devops_result_publisher(95): publish_results: Returned subresults list length does not match expected. Attachments may not pair correctly.\r\nWorker 0: uploaded 1000 results\r\nWorker 1: uploaded 2000 results\r\nWorker 2: uploaded 2000 results\r\nWorker 9: uploaded 2000 results\r\nWorker 8: uploaded 2000 results\r\nWorker 4: uploaded 2000 results\r\nWorker 3: uploaded 2000 results\r\nWorker 5: uploaded 2000 results\r\nWorker 6: uploaded 2000 results\r\nWorker 7: uploaded 2000 results\r\nWorker 1: uploaded 3000 results\r\nWorker 0: uploaded 2000 results\r\nWorker 2: uploaded 3000 results\r\nWorker 8: uploaded 3000 results\r\nWorker 9: uploaded 3000 results\r\nWorker 4: uploaded 3000 results\r\nWorker 3: uploaded 3000 results\r\nWorker 5: uploaded 3000 results\r\nWorker 6: uploaded 3000 results\r\nWorker 7: uploaded 3000 results\r\nWorker 1: uploaded 4000 results\r\nWorker 8: uploaded 4000 results\r\nWorker 0: uploaded 3000 results\r\nWorker 2: uploaded 4000 results\r\nWorker 9: uploaded 4000 results\r\nWorker 4: uploaded 4000 results\r\nWorker 3: uploaded 4000 results\r\nWorker 5: uploaded 4000 results\r\nWorker 6: uploaded 4000 results\r\nWorker 7: uploaded 4000 results\r\nWorker 1: uploaded 5000 results\r\nWorker 8: uploaded 5000 results\r\nWorker 0: uploaded 4000 results\r\nWorker 9: uploaded 5000 results\r\nWorker 2: uploaded 5000 results\r\nWorker 4: uploaded 5000 results\r\nWorker 3: uploaded 5000 results\r\nWorker 5: uploaded 5000 results\r\nWorker 6: uploaded 5000 results\r\nWorker 7: uploaded 5000 results\r\nWorker 1: uploaded 6000 results\r\nWorker 0: uploaded 5000 results\r\nWorker 9: uploaded 6000 results\r\nWorker 2: uploaded 6000 results\r\nWorker 8: uploaded 6000 results\r\nWorker 4: uploaded 6000 results\r\nWorker 3: uploaded 6000 results\r\nWorker 5: uploaded 6000 results\r\nWorker 6: uploaded 6000 results\r\nWorker 7: uploaded 6000 results\r\nWorker 1: uploaded 7000 results\r\nWorker 0: uploaded 6000 results\r\nWorker 2: uploaded 7000 results\r\nWorker 9: uploaded 7000 results\r\nWorker 8: uploaded 7000 results\r\nWorker 4: uploaded 7000 results\r\nWorker 3: uploaded 7000 results\r\nWorker 5: uploaded 7000 results\r\nWorker 6: uploaded 7000 results\r\nWorker 7: uploaded 7000 results\r\nWorker 1: uploaded 8000 results\r\nWorker 8: uploaded 8000 results\r\nWorker 0: uploaded 7000 results\r\nWorker 9: uploaded 8000 results\r\nWorker 2: uploaded 8000 results\r\nWorker 4: uploaded 8000 results\r\nWorker 3: uploaded 8000 results\r\nWorker 5: uploaded 8000 results\r\n\r\n...\r\n[EXECUTION TIMED OUT]\r\nExit Code:-3Executor timed out after 900 seconds and was killed\r\n```","Url":"https://github.com/dotnet/corefx/issues/42350","RelatedDescription":"Closed issue \"System.Text.Json.Tests Timed out with Exit Code:-3\" (#42350)"},{"Id":"517304945","IsPullRequest":false,"CreatedAt":"2019-11-04T17:44:23","Actor":"tub5","Number":"42368","RawContent":null,"Title":"DI from Program.cs no longer working","State":"open","Body":"Since migrating to .NET Core 3.0 we are now unable to add services in `Program.cs` to be used in `Startup.cs` through dependency injection. Having followed the [official guide](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/startup?view=aspnetcore-3.0) in the section near the bottom `Extend Startup with startup filters`.\r\n\r\nException message\r\n```\r\nSystem.InvalidOperationException: 'Unable to resolve service for type 'Test.Interface' while attempting to activate 'Test.Startup'.'\r\n```\r\n\r\nProgram.cs\r\n```csharp\r\nprivate static IHostBuilder CreateWebHostBuilder(string[] args) =>\r\n            Host.CreateDefaultBuilder(args)\r\n                .ConfigureAppConfiguration((hostingContext, config) =>\r\n                {\r\n                    config = new ConfigurationBuilder().SetBasePath(Directory.GetCurrentDirectory())\r\n                        .AddJsonFile(\"appsettings.json\").AddJsonFile(\"appsettings.Production.json\", true)\r\n                        .AddEnvironmentVariables();\r\n                    config.Build();\r\n                })\r\n                .ConfigureWebHostDefaults(webBuilder => { webBuilder.UseStartup<Startup>(); })\r\n                .ConfigureServices(\r\n                    services =>\r\n                    {\r\n                        //Add the transient so we can use this across instances through DI\r\n                        services.AddTransient<Test.Interface, Test.Class>();\r\n                    });\r\n```\r\n\r\nStartup.cs\r\n```csharp\r\nprivate Test.Interface Interface { get; }\r\npublic Startup(IConfiguration configuration,\r\n            Test.Interface interf)\r\n        {\r\n            Configuration = configuration;\r\n            Interface = interf;\r\n        }\r\n```\r\n\r\nStackTrace:\r\n```\r\nException thrown: 'System.InvalidOperationException' in Microsoft.Extensions.DependencyInjection.Abstractions.dll\r\nAn unhandled exception of type 'System.InvalidOperationException' occurred in Microsoft.Extensions.DependencyInjection.Abstractions.dll: 'Unable to resolve service for type 'Test.Interface' while attempting to activate 'Test.Startup'.'\r\nStack trace:\r\n >   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)\r\n >   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)\r\n >   at Microsoft.AspNetCore.Hosting.GenericWebHostBuilder.UseStartup(Type startupType, HostBuilderContext context, IServiceCollection services)\r\n >   at Microsoft.AspNetCore.Hosting.GenericWebHostBuilder.<>c__DisplayClass12_0.<UseStartup>b__0(HostBuilderContext context, IServiceCollection services)\r\n >   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()\r\n >   at Microsoft.Extensions.Hosting.HostBuilder.Build()\r\n >   at Test.Program.Main(String[] args) in C:\\Test\\Program.cs:line 17\r\nLoaded '/usr/share/dotnet/shared/Microsoft.NETCore.App/3.0.0/System.Diagnostics.StackTrace.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\nLoaded '/usr/share/dotnet/shared/Microsoft.NETCore.App/3.0.0/System.Reflection.Metadata.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\nLoaded '/usr/share/dotnet/shared/Microsoft.NETCore.App/3.0.0/System.Collections.Immutable.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\nLoaded '/usr/share/dotnet/shared/Microsoft.NETCore.App/3.0.0/System.IO.MemoryMappedFiles.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled.\r\nUnhandled exception. System.InvalidOperationException: Unable to resolve service for type 'Test.Interface' while attempting to activate 'Test.Startup'.\r\n   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)\r\n   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)\r\n   at Microsoft.AspNetCore.Hosting.GenericWebHostBuilder.UseStartup(Type startupType, HostBuilderContext context, IServiceCollection services)\r\n   at Microsoft.AspNetCore.Hosting.GenericWebHostBuilder.<>c__DisplayClass12_0.<UseStartup>b__0(HostBuilderContext context, IServiceCollection services)\r\n   at Microsoft.Extensions.Hosting.HostBuilder.CreateServiceProvider()\r\n   at Microsoft.Extensions.Hosting.HostBuilder.Build()\r\n   at Test.Program.Main(String[] args) in C:\\Test\\Program.cs:line 17\r\nThe program 'dotnet' has exited with code 0 (0x0).\r\n```","Url":"https://github.com/dotnet/corefx/issues/42368","RelatedDescription":"Open issue \"DI from Program.cs no longer working\" (#42368)"},{"Id":"517292067","IsPullRequest":false,"CreatedAt":"2019-11-04T17:18:40","Actor":"AArnott","Number":"42366","RawContent":null,"Title":"Named pipes hang when written asynchronously w/o async flag","State":"open","Body":"When creating named pipes on .NET or .NET Core, unless I use `PipeOptions.Asynchronous`, async I/O operations done later end up hanging the I/O operations. Even if I pass in a `CancellationToken`, these async I/O methods do not cancel when demanded.\r\n\r\nIMO the async flag should be simply an optimization -- not something that if set incorrectly causes a hang.\r\nBut even if a hang is acceptable, surely the `CancellationToken` should be honored, no?\r\n\r\nMinimal repro: [XUnitTestProject5.zip](https://github.com/dotnet/corefx/files/3805221/XUnitTestProject5.zip)\r\nYou'll see the test passes, but if you change `PipeOptions` used in the repro to `None`, the test hangs.\r\n\r\nSource code: \r\n\r\n```cs\r\nusing System;\r\nusing System.IO;\r\nusing System.IO.Pipes;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\nusing Xunit;\r\n\r\n#nullable enable\r\n\r\npublic class UnitTest1\r\n{\r\n    private readonly CancellationToken TimeoutToken = new CancellationTokenSource(5000).Token;\r\n\r\n    private readonly string PipeName = Guid.NewGuid().ToString();\r\n    private const PipeOptions Options = PipeOptions.Asynchronous; // FAILS when set to None\r\n    private const PipeDirection Direction = PipeDirection.InOut;\r\n\r\n    [Fact]\r\n    public async Task Test1()\r\n    {\r\n        var serverTask = RunServer();\r\n        using var clientPipe = new NamedPipeClientStream(\".\", PipeName, Direction, Options);\r\n        await clientPipe.ConnectAsync(this.TimeoutToken);\r\n\r\n        Task readTask = ReadBlockAsync(clientPipe, 3, this.TimeoutToken);\r\n        await clientPipe.WriteAsync(new byte[] { 1, 2, 3 }, this.TimeoutToken);\r\n        await clientPipe.FlushAsync(this.TimeoutToken);\r\n        await Task.WhenAll(readTask, serverTask);\r\n    }\r\n\r\n    private async Task RunServer()\r\n    {\r\n        using var serverPipe = new NamedPipeServerStream(PipeName, Direction, maxNumberOfServerInstances: 1, PipeTransmissionMode.Byte, Options);\r\n        await serverPipe.WaitForConnectionAsync(this.TimeoutToken);\r\n\r\n        Task readTask = ReadBlockAsync(serverPipe, 3, this.TimeoutToken);\r\n        await serverPipe.WriteAsync(new byte[] { 4, 5, 6 }, this.TimeoutToken);\r\n        await serverPipe.FlushAsync(this.TimeoutToken);\r\n        await readTask;\r\n    }\r\n\r\n    private static async Task<ReadOnlyMemory<byte>> ReadBlockAsync(Stream stream, int length, CancellationToken cancellationToken)\r\n    {\r\n        byte[] buffer = new byte[length];\r\n        int bytesRead = 0;\r\n        while (bytesRead < length)\r\n        {\r\n            int bytesJustRead = await stream.ReadAsync(buffer.AsMemory(bytesRead), cancellationToken);\r\n            if (bytesJustRead == 0)\r\n            {\r\n                throw new Exception(\"Lost connection.\");\r\n            }\r\n\r\n            bytesRead += bytesJustRead;\r\n        }\r\n\r\n        return buffer;\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/corefx/issues/42366","RelatedDescription":"Open issue \"Named pipes hang when written asynchronously w/o async flag\" (#42366)"},{"Id":"516977785","IsPullRequest":false,"CreatedAt":"2019-11-04T17:07:16","Actor":"Gnbrkm41","Number":"42348","RawContent":null,"Title":"Reasons behind having duplicate type for S.R.CS.Unsafe and Internals.R.CS.Unsafe","State":"closed","Body":"All the members are identical, but it seems weird to have two separate types that have all the same members; is there a reason behind that? It doesn't feel quite right, and would be nice if it could be merged into S.R.CS one.","Url":"https://github.com/dotnet/corefx/issues/42348","RelatedDescription":"Closed issue \"Reasons behind having duplicate type for S.R.CS.Unsafe and Internals.R.CS.Unsafe\" (#42348)"},{"Id":"517278068","IsPullRequest":true,"CreatedAt":"2019-11-04T16:53:19","Actor":"MarcoRossignoli","Number":"42364","RawContent":null,"Title":"Implement trypeek offset","State":"open","Body":"Closes https://github.com/dotnet/corefx/issues/40845\r\n\r\ncc: @JeremyKuhne ","Url":"https://github.com/dotnet/corefx/pull/42364","RelatedDescription":"Open PR \"Implement trypeek offset\" (#42364)"},{"Id":"517256394","IsPullRequest":true,"CreatedAt":"2019-11-04T16:16:22","Actor":"eiriktsarpalis","Number":"42362","RawContent":null,"Title":"Annotate System.Text.Encodings.Web","State":"open","Body":"Contributes to: #40623","Url":"https://github.com/dotnet/corefx/pull/42362","RelatedDescription":"Open PR \"Annotate System.Text.Encodings.Web\" (#42362)"},{"Id":"517317566","IsPullRequest":false,"CreatedAt":"2019-11-04T16:08:57","Actor":"StephenLarkin","Number":"42369","RawContent":null,"Title":"System.IO.Path.Combine seems to work differently from .NET framework","State":"open","Body":"# General\r\n\r\nTested on .NET Core v2.1, 2.2, 3.0:\r\n\r\n```C#\r\nSystem.IO.Path.Combine(\"string\\nwith\", \"other\");\r\n```\r\n\r\nIn .NET Framework this throws an Argument Exception as documented:\r\n\r\n```C#\r\n        // Exceptions:\r\n        //   T:System.ArgumentException:\r\n        //     One of the strings in the array contains one or more of the invalid characters\r\n        //     defined in System.IO.Path.GetInvalidPathChars.\r\n```\r\n\r\nIn .NET Core it returns the string with the newline character.","Url":"https://github.com/dotnet/corefx/issues/42369","RelatedDescription":"Open issue \"System.IO.Path.Combine seems to work differently from .NET framework\" (#42369)"},{"Id":"517240902","IsPullRequest":true,"CreatedAt":"2019-11-04T15:53:14","Actor":"dotnet-maestro-bot","Number":"42361","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @mmitche\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42361","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#42361)"},{"Id":"517237907","IsPullRequest":true,"CreatedAt":"2019-11-04T15:47:08","Actor":"mmitche","Number":"42360","RawContent":null,"Title":"Remove OSX demands","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42360","RelatedDescription":"Closed or merged PR \"Remove OSX demands\" (#42360)"},{"Id":"517237354","IsPullRequest":true,"CreatedAt":"2019-11-04T15:45:36","Actor":"TamarChristinaArm","Number":"42359","RawContent":null,"Title":"Arm64: Update ref/System.Runtime.Intrinsics.Experimental.cs (AddAcross)","State":"open","Body":"dotnet/coreclr part of the changes in https://github.com/dotnet/coreclr/pull/27663\r\n\r\nSee also #26581\r\n\r\n/CC @tannergooding @echesakovMSFT ","Url":"https://github.com/dotnet/corefx/pull/42359","RelatedDescription":"Open PR \"Arm64: Update ref/System.Runtime.Intrinsics.Experimental.cs (AddAcross)\" (#42359)"},{"Id":"517236683","IsPullRequest":true,"CreatedAt":"2019-11-04T15:44:34","Actor":"TamarChristinaArm","Number":"42358","RawContent":null,"Title":"Arm64: Update ref/System.Runtime.Intrinsics.Experimental.cs (ReverseElementBits)","State":"open","Body":"dotnet/coreclr part of the changes in dotnet/coreclr#27582\r\n\r\nSee also #26581\r\n\r\n/CC @tannergooding @echesakovMSFT ","Url":"https://github.com/dotnet/corefx/pull/42358","RelatedDescription":"Open PR \"Arm64: Update ref/System.Runtime.Intrinsics.Experimental.cs (ReverseElementBits)\" (#42358)"},{"Id":"517194248","IsPullRequest":true,"CreatedAt":"2019-11-04T15:26:45","Actor":"dotnet-maestro[bot]","Number":"42356","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191103.8\r\n- **Date Produced**: 11/4/2019 8:18 AM\r\n- **Commit**: 15e7e1569a8c3a5502c476c31b60e06d633b3efa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 5.0.0-alpha.1.19553.8\r\n  - **Microsoft.NETCore.Platforms** -> 5.0.0-alpha.1.19553.8\r\n\r\n[marker]: <> (End:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n\r\n[marker]: <> (Begin:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20191103.1\r\n- **Date Produced**: 11/3/2019 1:59 PM\r\n- **Commit**: b1637de8653eb031a4d22ee68f6f018c7a07d8a9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.2.0-prerelease.19553.1\r\n\r\n[marker]: <> (End:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42356","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx dotnet/standard\" (#42356)"},{"Id":"517151913","IsPullRequest":true,"CreatedAt":"2019-11-04T14:51:44","Actor":"lukas-lansky","Number":"42355","RawContent":null,"Title":"ARM tests take over 15 minutes","State":"closed","Body":"Fixes #42350 ","Url":"https://github.com/dotnet/corefx/pull/42355","RelatedDescription":"Closed or merged PR \"ARM tests take over 15 minutes\" (#42355)"},{"Id":"517141326","IsPullRequest":true,"CreatedAt":"2019-11-04T14:45:12","Actor":"dotnet-maestro[bot]","Number":"42354","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191103.2\r\n- **Date Produced**: 11/4/2019 2:36 AM\r\n- **Commit**: cb99cd23960d88db89c51edba740848ef3c6e9b8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha1.19553.2\r\n  - **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha1.19553.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 5.0.0-alpha1.19553.2\r\n\r\n[marker]: <> (End:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42354","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#42354)"},{"Id":"517138550","IsPullRequest":true,"CreatedAt":"2019-11-04T14:35:48","Actor":"dotnet-maestro[bot]","Number":"42353","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191104.1\r\n- **Date Produced**: 11/4/2019 10:49 AM\r\n- **Commit**: 59b0c432ab3622cde2d2e1fe35150b7ff64e5f96\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha.1.19554.1\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 5.0.0-alpha.1.19554.1\r\n  - **Microsoft.NETCore.DotNetHost** -> 5.0.0-alpha.1.19554.1\r\n\r\n[marker]: <> (End:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42353","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#42353)"},{"Id":"517098208","IsPullRequest":false,"CreatedAt":"2019-11-04T11:41:29","Actor":"KalleOlaviNiemitalo","Number":"42352","RawContent":null,"Title":"OverflowException in ActivityTracker.ActivityInfo.AddIdToGuid ","State":"open","Body":"I got an OverflowException from the `Microsoft.Diagnostics.Tracing.ActivityTracker.ActivityInfo.AddIdToGuid(Guid* outPtr, int whereToAddId, uint id, bool overflow)` method in the [Microsoft.Diagnostics.Tracing.EventSource.Redist 2.1.0 NuGet package](https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource.Redist/2.1.0), in a program targeting .NET Framework 4.6.1 and running on .NET Framework 4.8. That NuGet package includes version.txt with the text \"4ac4c0367003fe3973a3648eb0715ddb0e3bbcea\", which appears to refer to commit 4ac4c0367003fe3973a3648eb0715ddb0e3bbcea in the dotnet/corefx repository.\r\n\r\nI am not sure where in the method the exception was thrown, but the IL code of the method includes:\r\n\r\n```\r\n  IL_00d6:  ldc.i4     0x599d99ad\r\n  IL_00db:  add.ovf.un\r\n````\r\n\r\nand the same constant is in the source code here: <https://github.com/dotnet/corefx/blob/4ac4c0367003fe3973a3648eb0715ddb0e3bbcea/src/Common/src/CoreLib/System/Diagnostics/Tracing/ActivityTracker.cs#L523-L527>\r\n\r\nThe `add.ovf.un` opcode indicates the NuGet package was built with overflow checking enabled. Perhaps there should be `unchecked(…)` around the checksum expression.","Url":"https://github.com/dotnet/corefx/issues/42352","RelatedDescription":"Open issue \"OverflowException in ActivityTracker.ActivityInfo.AddIdToGuid \" (#42352)"},{"Id":"517041207","IsPullRequest":true,"CreatedAt":"2019-11-04T11:23:44","Actor":"ViktorHofer","Number":"42351","RawContent":null,"Title":"Remove unused testdata version property","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42351","RelatedDescription":"Closed or merged PR \"Remove unused testdata version property\" (#42351)"},{"Id":"517028834","IsPullRequest":false,"CreatedAt":"2019-11-04T09:16:27","Actor":"lostmsu","Number":"42349","RawContent":null,"Title":"Uri.EscapeUriString should be deprecated","State":"open","Body":"Please, see the relevant [StackOveflow thread](https://stackoverflow.com/questions/4396598/whats-the-difference-between-escapeuristring-and-escapedatastring/34189188#34189188).\r\n\r\nFrom my understanding of the issue, there is no valid and/or safe use case for `EscapeUriString`. Either one wants to escape a URI component, in which case they should call `EscapeDataString`, or they construct URI incorrectly in the first place.","Url":"https://github.com/dotnet/corefx/issues/42349","RelatedDescription":"Open issue \"Uri.EscapeUriString should be deprecated\" (#42349)"},{"Id":"516952502","IsPullRequest":false,"CreatedAt":"2019-11-04T04:17:47","Actor":"reflectronic","Number":"42347","RawContent":null,"Title":"Proposal: SequenceReader<T>.TryReadAny","State":"open","Body":"### Rationale\r\n\r\n\r\nToday with `SequenceReader<T>` you can keep reading until you find a certain delimiter. However, I find that often I want to read until I *no longer find* certain characters.\r\n\r\nFor example, if I am implementing a parser and I am parsing out a number, I would like to keep reading until the next character is no longer one of `0123456789.` There is currently no such functionality to do this.\r\n\r\n### Proposed API\r\n```cs\r\npublic ref struct SequenceReader<T>\r\n{\r\n    public bool TryReadAny(out ReadOnlySequence<T> sequence, ReadOnlySpan<T> values, bool advancePastValue = true);\t\r\n    public bool TryReadAny(out ReadOnlySpan<T> span, ReadOnlySpan<T> values, bool advancePastValue = true);\r\n}\r\n```\r\n\r\nThe method will return false if the value it reads isn't any one of the specified values. This is arguably a bit of a stretch for a success condition (you can simply check the span length), but I think it is OK and not sticking with the `Try` pattern seems worse.\r\n\r\nSince these methods are a little complex, I have left out overloads for 1, 2, and 3 individual `T`s, but we can add them if it's a good idea.","Url":"https://github.com/dotnet/corefx/issues/42347","RelatedDescription":"Open issue \"Proposal: SequenceReader<T>.TryReadAny\" (#42347)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"517500181","IsPullRequest":false,"CreatedAt":"2019-11-05T01:39:51","Actor":"vsfeedback","Number":"39690","RawContent":null,"Title":"ExtractMethod does not work on parts of a switch expression","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/751819/extractmethod-does-not-work-on-parts-of-a-switch-e.html)._\n\n---\nIf you have a C# 8 switch expression such as below:\n\nint Foo(int x) =&gt; x switch\n        {\n            1 =&gt; 1,\n            _ =&gt; 1 + x\n        };\n\nIf you highlight 1 + x and choose extract method from the context menu, it should create:\n\nint Foo(int x) =&gt; x switch\n        {\n            1 =&gt; 1,\n            _ =&gt; NewMethod(x)\n        };\n\nprivate static int NewMethod(x) =&gt; x+1;\n\nWhat it actually creates is:\n\nint Foo(int x) =&gt; NewMethod(x);\n\nprivate static int NewMethod(int x)\n        {\n            return x switch\n            {\n                1 =&gt; 1,\n                _ =&gt; 1 + x\n            };\n        }\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 9/28/2019, 07:47 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 9/30/2019, 00:01 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39690","RelatedDescription":"Open issue \"ExtractMethod does not work on parts of a switch expression\" (#39690)"},{"Id":"517499736","IsPullRequest":false,"CreatedAt":"2019-11-05T01:38:04","Actor":"pakrym","Number":"39689","RawContent":null,"Title":"Completion sugests items that do not satisfy generic constraint","State":"open","Body":"**Version Used**: Version 16.5.0 Preview 1.0 [29501.166.master]\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create Console app\r\n2. Add `Azure.Storage.Blobs` Nuget package\r\n3. Open intellisense on `args.`\r\n\r\n**Expected Behavior**:\r\n\r\nExtension methods that don't satisfy the generic constraint are not shown.\r\n\r\n**Actual Behavior**:\r\n\r\nAddBlobServiceClient is shown\r\n\r\n![image](https://user-images.githubusercontent.com/1697911/68171664-8dd80f80-ff29-11e9-8e3c-b32ce11ed795.png)\r\n\r\n\r\n``` C#\r\n\r\n        /// <summary>\r\n        /// Registers a <see cref=\"BlobServiceClient\"/> instance with connection options loaded from the provided <paramref name=\"configuration\"/> instance.\r\n        /// </summary>\r\n        public static IAzureClientBuilder<BlobServiceClient, BlobClientOptions> AddBlobServiceClient<TBuilder, TConfiguration>(this TBuilder builder, TConfiguration configuration)\r\n            where TBuilder : IAzureClientFactoryBuilderWithConfiguration<TConfiguration>\r\n        {\r\n            return builder.RegisterClientFactory<BlobServiceClient, BlobClientOptions>(configuration);\r\n        }\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39689","RelatedDescription":"Open issue \"Completion sugests items that do not satisfy generic constraint\" (#39689)"},{"Id":"517496954","IsPullRequest":false,"CreatedAt":"2019-11-05T01:27:35","Actor":"vsfeedback","Number":"39688","RawContent":null,"Title":"Refactoring several class definitions","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/712365/refactoring-several-class-definitions.html)._\n\n---\nWhat steps will reproduce the problem?\n1. In a code file, declare several interfaces or classes. For example by copy-pasting an existing defininition into several with different names.\n2. Select all the new class or interface definitions and click &quot;Ctrl&quot; + &quot;.&quot; (for refactoring menu).\n3. Not able to move the new classes into own files.\n\nWhat is the expected output? What do you see instead?\nI would like to have a refactoring command that would factor out the selected classes to files with names based on the individual class names. Having 10 classes/interfaces selected should then generate 10 new code files with the respective interfaces or classes.\n\nPlease provide any additional information below.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 8/27/2019, 01:31 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 9/26/2019, 03:56 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39688","RelatedDescription":"Open issue \"Refactoring several class definitions\" (#39688)"},{"Id":"517473183","IsPullRequest":true,"CreatedAt":"2019-11-05T01:23:24","Actor":"dotnet-bot","Number":"39685","RawContent":null,"Title":"Merge release/dev16.4 to release/dev16.4-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.4 into release/dev16.4-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-to-release/dev16.4-vs-deps\ngit reset --hard upstream/release/dev16.4-vs-deps\ngit merge upstream/release/dev16.4\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-to-release/dev16.4-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39685","RelatedDescription":"Closed or merged PR \"Merge release/dev16.4 to release/dev16.4-vs-deps\" (#39685)"},{"Id":"517489639","IsPullRequest":false,"CreatedAt":"2019-11-05T01:02:02","Actor":"RikkiGibson","Number":"39687","RawContent":null,"Title":"Symbol publishing checks are failing","State":"open","Body":"We have been failing symbol checks when trying to insert into VS for the past day or so. There might be a problem with our symbol publishing, or there might be a problem with the check that decides if all the symbols are present.","Url":"https://github.com/dotnet/roslyn/issues/39687","RelatedDescription":"Open issue \"Symbol publishing checks are failing\" (#39687)"},{"Id":"517325857","IsPullRequest":false,"CreatedAt":"2019-11-05T00:38:56","Actor":"AmadeusW","Number":"39671","RawContent":null,"Title":"IntelliSense does not use pattern matcher when capital letters are present","State":"closed","Body":"**Version Used**: 16.5.0 preview 1.0 [29429.30.master]\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create class PooledStringBuilder which has two methods: `ToString` and `ToStringAndFree`\r\n2. Write code which calls `ToString` on the instance\r\n3. I want to make this `ToStringAndFree`. I will type place caret after `ToString`, type `af` and hit Ctrl+Space.\r\n\r\n**Expected Behavior**:\r\n`ToStringAndFree` is selected and inserted\r\n**Actual Behavior**:\r\nIntelliSense has `no items` \r\n![image](https://user-images.githubusercontent.com/1673956/68146388-ba216b00-feec-11e9-9359-dc8fc8dfad42.png)\r\n\r\n\r\nLet's take a closer look at what's going on.\r\n\r\n4. Place caret at `ToString$$()` and hit Ctrl+Space to see what's happening inside IntelliSense:\r\n5. Type `a` and observe correct intellisense selection\r\n![image](https://user-images.githubusercontent.com/1673956/68146311-952cf800-feec-11e9-8e75-0fd0bcaa3dc6.png)\r\n\r\n6. Type `f` and see that IntelliSense did not select the desired item\r\n![image](https://user-images.githubusercontent.com/1673956/68146116-22238180-feec-11e9-8b03-863772a9b099.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/39671","RelatedDescription":"Closed issue \"IntelliSense does not use pattern matcher when capital letters are present\" (#39671)"},{"Id":"517473220","IsPullRequest":true,"CreatedAt":"2019-11-05T00:04:33","Actor":"dotnet-bot","Number":"39686","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39686","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#39686)"},{"Id":"517392638","IsPullRequest":true,"CreatedAt":"2019-11-04T23:38:59","Actor":"JoeRobich","Number":"39680","RawContent":null,"Title":"Switch some calls to ThreadHelper.ThrowIfNotOnUIThread to something else","State":"closed","Body":"backport https://github.com/dotnet/roslyn/pull/39528 to dev16.4\r\n\r\nIt seems there's a flaky issue in our unit test setup where sometimes\r\nThrowIfNotOnUIThread will throw even if you're on the JTF main thread.\r\nIt appears the implementation relies on checking the Dispatcher object\r\nthat must sometimes not be set up right. We have a standard mechansim\r\nanyways for asserting that we are on the UI thread that consumes our\r\nIThreadingContext, so switching the helper we call should avoid this.","Url":"https://github.com/dotnet/roslyn/pull/39680","RelatedDescription":"Closed or merged PR \"Switch some calls to ThreadHelper.ThrowIfNotOnUIThread to something else\" (#39680)"},{"Id":"517465441","IsPullRequest":false,"CreatedAt":"2019-11-04T23:38:51","Actor":"vsfeedback","Number":"39684","RawContent":null,"Title":"C# Rename Refactoring misbehaves when multiple carets are active","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/753709/c-rename-refactoring-misbehaves-when-multiple-care.html)._\n\n---\nWhen multiple carets are active, rename refactoring can still be engaged, and presents an error message making no sense (f.ex. if you only see the first caret and it is on a renamable identifier).\n\nSuggestion: Disable rename refactoring when multiple carets are active.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 9/29/2019, 11:12 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 10/3/2019, 02:21 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/39684","RelatedDescription":"Open issue \"C# Rename Refactoring misbehaves when multiple carets are active\" (#39684)"},{"Id":"517441926","IsPullRequest":false,"CreatedAt":"2019-11-04T22:30:51","Actor":"JohanLarsson","Number":"39683","RawContent":null,"Title":"Snooze diagnostics","State":"open","Body":"![image](https://user-images.githubusercontent.com/1640096/68163342-9c8aea80-ff5a-11e9-8e2b-95010843a9aa.png)\r\n\r\nIn the picture above `IDE0009` is not yet fluent in c# 8. This happens with most analyzers when language features are added. The problem is that disabling the rule for this reason means one must remember to enable it again which means one will forget.\r\n\r\nThe snooze feature would suppress the diagnostic in `.ruleset` or in `#pragma` for the current version of the analyzer.","Url":"https://github.com/dotnet/roslyn/issues/39683","RelatedDescription":"Open issue \"Snooze diagnostics\" (#39683)"},{"Id":"517421872","IsPullRequest":false,"CreatedAt":"2019-11-04T21:44:32","Actor":"myblindy","Number":"39682","RawContent":null,"Title":"Deploying Code Analysis package as Nuget that depends on another Nuget","State":"open","Body":"**Version Used**: 16.3.5\r\n\r\nI have a code analysis package that works when run through the VSIX debugger, but when I try to publish the nuget and reference it, i get the following error:\r\n\r\n    Analyzer 'RIDAnalyzer.RIDAnalyzerAnalyzer' threw an exception of type 'System.IO.FileNotFoundException' with message 'Could not load file or assembly 'MoreLinq, Version=3.2.0.0, Culture=neutral, PublicKeyToken=384d532d7e88985d' or one of its dependencies. The system cannot find the file specified.'.\t\r\n\r\nMy .csproj file looks like this:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n    <IncludeBuildOutput>false</IncludeBuildOutput>\r\n    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <Compile Remove=\"bin\\**\" />\r\n    <EmbeddedResource Remove=\"bin\\**\" />\r\n    <None Remove=\"bin\\**\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.CodeAnalysis.Analyzers\" Version=\"2.9.7\" PrivateAssets=\"all\" />\r\n    <PackageReference Include=\"Microsoft.CodeAnalysis.CSharp.Workspaces\" Version=\"3.3.1\" PrivateAssets=\"all\" />\r\n    <PackageReference Include=\"morelinq\" Version=\"3.2.0\" />\r\n    <PackageReference Update=\"NETStandard.Library\" PrivateAssets=\"all\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <Compile Update=\"Resources.Designer.cs\" DesignTime=\"True\" AutoGen=\"True\" DependentUpon=\"Resources.resx\" />\r\n    <EmbeddedResource Update=\"Resources.resx\" Generator=\"ResXFileCodeGenerator\" LastGenOutput=\"Resources.Designer.cs\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <None Update=\"tools\\*.ps1\" CopyToOutputDirectory=\"Always\" Pack=\"true\" PackagePath=\"\" />\r\n    <None Include=\"$(OutputPath)\\$(AssemblyName).dll\" Pack=\"true\" PackagePath=\"analyzers/dotnet/cs\" Visible=\"false\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nAnd it only generates the executable and a reference on `morelinq`, the nuget dependency. I see the dependency in the Nuget package manager, and it installs fine (supposedly) -- including showing up in the \"analyzers\" tab in my project, but when I try to use the analyzer I get the warning above and nothing else happens. \r\n","Url":"https://github.com/dotnet/roslyn/issues/39682","RelatedDescription":"Open issue \"Deploying Code Analysis package as Nuget that depends on another Nuget\" (#39682)"},{"Id":"517353016","IsPullRequest":true,"CreatedAt":"2019-11-04T21:14:22","Actor":"agocke","Number":"39675","RawContent":null,"Title":"Update release/dev16.4 version to -beta4","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/39675","RelatedDescription":"Closed or merged PR \"Update release/dev16.4 version to -beta4\" (#39675)"},{"Id":"517396541","IsPullRequest":false,"CreatedAt":"2019-11-04T20:56:19","Actor":"johncrim","Number":"39681","RawContent":null,"Title":"Wrapping a call with [MaybeNullWhen] results in incorrect compiler warnings","State":"open","Body":"**Version Used**: \r\ndotnet sdk 3.0.100\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. `dotnet new console`\r\n2. Add `<Nullable>enable` to the .csproj file:\r\n```xml\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3</TargetFramework>\r\n    <Nullable>enable</Nullable>\r\n  </PropertyGroup>\r\n```\r\n3. Add a method with a `[MaybeNullWhen]` attribute that wraps a call to another method using a `[MaybeNullWhen]` attribute. Eg:\r\n\r\n```c#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Diagnostics;\r\nusing System.Diagnostics.CodeAnalysis;\r\n\r\nnamespace MaybeNullWhen_Propagation\r\n{\r\n    class Program\r\n    {\r\n        private Dictionary<int, Process> _processes = new Dictionary<int, Process>();\r\n\r\n        public bool TryGetProcessById(int processId, [MaybeNullWhen(false)] out Process process)\r\n        {\r\n            return _processes.TryGetValue(processId, out process);\r\n        }\r\n\r\n        public static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n        }\r\n    }\r\n}\r\n```\r\n4. `dotnet build`\r\n\r\n**Expected Behavior**:\r\nNo warnings\r\n\r\n**Actual Behavior**:\r\nReceived warning CS8601\r\n\r\n```\r\nProgram.cs(14,58): warning CS8601: Possible null reference assignment. [C:\\src\\cc\\test-cases\\MaybeNullWhen-Propagation\\MaybeNullWhen-Propagation.csproj]\r\n    1 Warning(s)\r\n    0 Error(s)\r\n```\r\n\r\nI'm not able to find a good workaround without disabling a warning. Using an additional local variable, and then assigning null to the `out` param when returning false, results in a different warning:\r\n\r\n```c#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Diagnostics;\r\nusing System.Diagnostics.CodeAnalysis;\r\n\r\nnamespace MaybeNullWhen_Propagation\r\n{\r\n    class Program\r\n    {\r\n        private Dictionary<int, Process> _processes = new Dictionary<int, Process>();\r\n\r\n        public bool TryGetProcessById(int processId, [MaybeNullWhen(false)] out Process process)\r\n        {\r\n            if (_processes.TryGetValue(processId, out Process? p))\r\n            {\r\n                process = p;\r\n                return true;\r\n            }\r\n            else\r\n            {\r\n                process = null;\r\n                return false;\r\n            }\r\n        }\r\n\r\n        public static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nResults in:\r\n```\r\nProgram.cs(21,27): warning CS8625: Cannot convert null literal to non-nullable reference type. [C:\\src\\cc\\test-cases\\MaybeNullWhen-Propagation\\MaybeNullWhen-Propagation.csproj]\r\n    1 Warning(s)\r\n    0 Error(s)\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/39681","RelatedDescription":"Open issue \"Wrapping a call with [MaybeNullWhen] results in incorrect compiler warnings\" (#39681)"},{"Id":"517313394","IsPullRequest":true,"CreatedAt":"2019-11-04T20:33:55","Actor":"dotnet-bot","Number":"39668","RawContent":null,"Title":"Merge release/dev16.4 to release/dev16.4-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.4 into release/dev16.4-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-to-release/dev16.4-vs-deps\ngit reset --hard upstream/release/dev16.4-vs-deps\ngit merge upstream/release/dev16.4\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-to-release/dev16.4-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39668","RelatedDescription":"Closed or merged PR \"Merge release/dev16.4 to release/dev16.4-vs-deps\" (#39668)"},{"Id":"517385186","IsPullRequest":true,"CreatedAt":"2019-11-04T20:32:49","Actor":"dpoeschl","Number":"39678","RawContent":null,"Title":"Reorder Suppression fixes to be above Configuration fixes in the lightbulb","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/38914\r\n\r\n![image](https://user-images.githubusercontent.com/235241/68155743-2016ee00-feff-11e9-91bd-0f99c770b8c3.png)\r\n","Url":"https://github.com/dotnet/roslyn/pull/39678","RelatedDescription":"Open PR \"Reorder Suppression fixes to be above Configuration fixes in the lightbulb\" (#39678)"},{"Id":"517368907","IsPullRequest":false,"CreatedAt":"2019-11-04T19:59:34","Actor":"educanjr","Number":"39676","RawContent":null,"Title":"Error CS8103 Combined length of user strings used by the program exceeds allowed limit. Try to decrease use of string literals.","State":"open","Body":"netCore 3.0, VS 2019 v.16.3.2\r\n\r\nHave a MVC netCore project, it have a huge ammount of partials views (1500), but this partials views only have html code (not razor code is needed). When I try to build the aplication VS showme the error: \r\n\"Severity Code Description Project File Line Suppression State Suppression State Error CS8103 Combined length of user strings used by the program exceeds allowed limit. Try to decrease use of string literals.\" \r\nWhat can I do to fix this??\r\n\r\nRegards\r\n","Url":"https://github.com/dotnet/roslyn/issues/39676","RelatedDescription":"Open issue \"Error CS8103 Combined length of user strings used by the program exceeds allowed limit. Try to decrease use of string literals.\" (#39676)"},{"Id":"517352778","IsPullRequest":false,"CreatedAt":"2019-11-04T19:27:03","Actor":"AlekseyTs","Number":"39674","RawContent":null,"Title":"Suspicious logic in NullableAnnotationExtensions.ToPublicAnnotation around nullable value types ","State":"open","Body":"```Oblivious``` annotation for nullable value types is getting mapped to ```CodeAnalysis.NullableAnnotation.NotAnnotated```. This feels strange. I would expect it to be mapped to ```CodeAnalysis.NullableAnnotation.None```, or perhaps to ```CodeAnalysis.NullableAnnotation.Annotated```.\r\n\r\n```\r\n        internal static CodeAnalysis.NullableAnnotation ToPublicAnnotation(TypeSymbol type, NullableAnnotation annotation) =>\r\n            annotation switch\r\n            {\r\n                CSharp.NullableAnnotation.Annotated => CodeAnalysis.NullableAnnotation.Annotated,\r\n                CSharp.NullableAnnotation.NotAnnotated => CodeAnalysis.NullableAnnotation.NotAnnotated,\r\n                // A value type may be oblivious or not annotated depending on whether the type reference\r\n                // is from source or metadata. (Binding using the #nullable context only when setting the annotation\r\n                // to avoid checking IsValueType early.) The annotation is normalized here in the public API.\r\n                CSharp.NullableAnnotation.Oblivious when type.IsValueType => CodeAnalysis.NullableAnnotation.NotAnnotated,\r\n                CSharp.NullableAnnotation.Oblivious => CodeAnalysis.NullableAnnotation.None,\r\n                _ => throw ExceptionUtilities.UnexpectedValue(annotation)\r\n            };\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39674","RelatedDescription":"Open issue \"Suspicious logic in NullableAnnotationExtensions.ToPublicAnnotation around nullable value types \" (#39674)"},{"Id":"517313178","IsPullRequest":true,"CreatedAt":"2019-11-04T19:19:55","Actor":"jasonmalinowski","Number":"39667","RawContent":null,"Title":"Fix crash where we are not always finding text snapshots","State":"closed","Body":"Backport of #39607 to Preview 3.","Url":"https://github.com/dotnet/roslyn/pull/39667","RelatedDescription":"Closed or merged PR \"Fix crash where we are not always finding text snapshots\" (#39667)"},{"Id":"517344706","IsPullRequest":true,"CreatedAt":"2019-11-04T19:09:43","Actor":"KirillOsenkov","Number":"39673","RawContent":null,"Title":"Add InternalsVisibleTo to the VSMac Razor assembly.","State":"open","Body":"@NTaylorMullen","Url":"https://github.com/dotnet/roslyn/pull/39673","RelatedDescription":"Open PR \"Add InternalsVisibleTo to the VSMac Razor assembly.\" (#39673)"},{"Id":"517342656","IsPullRequest":true,"CreatedAt":"2019-11-04T19:05:21","Actor":"RikkiGibson","Number":"39672","RawContent":null,"Title":"Tolerate empty assembly names","State":"open","Body":"Fixes #39647\r\n\r\n/cc @jaredpar","Url":"https://github.com/dotnet/roslyn/pull/39672","RelatedDescription":"Open PR \"Tolerate empty assembly names\" (#39672)"},{"Id":"517313544","IsPullRequest":true,"CreatedAt":"2019-11-04T18:02:03","Actor":"dotnet-bot","Number":"39670","RawContent":null,"Title":"Merge master to features/static-lambdas","State":"open","Body":"\nThis is an automatically generated pull request from master into features/static-lambdas.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/static-lambdas\ngit reset --hard upstream/features/static-lambdas\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/static-lambdas --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39670","RelatedDescription":"Open PR \"Merge master to features/static-lambdas\" (#39670)"},{"Id":"517313480","IsPullRequest":true,"CreatedAt":"2019-11-04T18:01:53","Actor":"dotnet-bot","Number":"39669","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"open","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/39669","RelatedDescription":"Open PR \"Merge master to features/local-function-attributes\" (#39669)"},{"Id":"517245990","IsPullRequest":false,"CreatedAt":"2019-11-04T15:59:12","Actor":"jnm2","Number":"39666","RawContent":null,"Title":"Incorrect nullability is inferred with generic out parameter","State":"open","Body":"**Version Used**: VS 16.3.7 and [Roslyn master](https://sharplab.io/#v2:EYLgtghgzgLgpgJwDQBMQGoA+BiAdgVwBtCJhC4ACOXU8gWAChGABAJgEYWAGC59gOgAiASwgBzXAHtYwgMZR+AYUko4AQRqEAnlGFQA3IxasKixgG9GFaxWCTJhCgFkAFHx5QkFANoA5STC+RIQA6gAW1C4wCPhwAJQAuhSS+DC87FwA/BQIcFBEMHFWNpYMNuUUAPSVpgDKABwAbFwmgohwAGbtuLKUkh0UEBQADtK6ZFoUBMQ5nd29/MUVVTXLaxSAyYRLFcwA7M4unhQAHhQAvAB8J/wAMtRiMGEUAKQUJmdnFFxeKWm5+YRCoYyjYAL5GEHWOwOZwAHgAKhcXPCKEdmABWBFeaGEK4dLzeJwQLTAOBBYjhSIdCCEKDxJK/Cgo/4FIqQiildbCAYuDqHOJs9ac9Y2FmA86o4Eimx7CjRWJStbgpjs8pitKfVTUgoAQkVy1l1NpcH1FGVyqAA).\r\n\r\nThere should be no need to suppress a warning:\r\n\r\n```cs\r\nclass C\r\n{\r\n    bool M(string s, [NotNullWhen(true)] out string? result)\r\n    {\r\n        // CS8602 Dereference of a possibly null reference.\r\n        //               ↓\r\n        return M(s, x => x.Length % 2 == 0, out result);\r\n    }\r\n\r\n    bool M<T>(T s, Func<T, bool> f, [MaybeNullWhen(false)] out T result)\r\n    {\r\n        if (f(s))\r\n        {\r\n            result = s;\r\n            return true;\r\n        }\r\n\r\n        result = default!;\r\n        return false;\r\n    }\r\n}\r\n```\r\n\r\nSpecifying `M<string>` explicitly is the workaround, but this shouldn't need to be explicit:\r\n\r\n```cs\r\nclass C\r\n{\r\n    bool M(string s, [NotNullWhen(true)] out string? result)\r\n    {\r\n        return M<string>(s, x => x.Length % 2 == 0, out result);\r\n    }\r\n\r\n    bool M<T>(T s, Func<T, bool> f, [MaybeNullWhen(false)] out T result)\r\n    {\r\n        if (f(s))\r\n        {\r\n            result = s;\r\n            return true;\r\n        }\r\n\r\n        result = default!;\r\n        return false;\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/39666","RelatedDescription":"Open issue \"Incorrect nullability is inferred with generic out parameter\" (#39666)"},{"Id":"517186174","IsPullRequest":false,"CreatedAt":"2019-11-04T14:25:00","Actor":"ymassad","Number":"39665","RawContent":null,"Title":"Possible bug related to local functions","State":"open","Body":"**Version Used**: \r\nNot sure about Roslyn version, but Visual Studio 2017 Enterprise version 15.9.17 is used.\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Create a C# console application targeting .NET framework 4.7.2. Not sure if the target framework matters, though.\r\n2. Add the following code:\r\n\r\n```\r\n    public class Tree<T>\r\n    {\r\n        public Tree(T value, Tree<T>[] toArray)\r\n        {\r\n            \r\n        }\r\n    }\r\n\r\n    public class LocationInTree\r\n    {\r\n        public LocationInTree CreateChild(int index)\r\n        {\r\n            throw new Exception(\"asd\");\r\n        }\r\n\r\n        public static LocationInTree Root { get; }\r\n    }\r\n\r\n    public static class TreeUtilities\r\n    {\r\n        public static Tree<T> CreateTreeFromDataInLocations<T>(IDictionary<LocationInTree, T> nodes)\r\n        {\r\n            Tree<T> CreateForLocation<T>(LocationInTree location, T value)\r\n            {\r\n                int chlidIndex = 0;\r\n\r\n                var subTrees = new List<Tree<T>>();\r\n\r\n                while (true)\r\n                {\r\n                    var childLocation = location.CreateChild(chlidIndex);\r\n\r\n                    if (!nodes.TryGetValue(childLocation, out var childValue))\r\n                    {\r\n                        break;\r\n                    }\r\n\r\n                    var subTree = CreateForLocation(childLocation, childValue);\r\n\r\n                    subTrees.Add(subTree);\r\n\r\n                    chlidIndex++;\r\n                }\r\n\r\n                return new Tree<T>(value, subTrees.ToArray());\r\n            }\r\n\r\n            var rootNode = LocationInTree.Root;\r\n\r\n            return CreateForLocation(rootNode, nodes[rootNode]);\r\n        }\r\n    }\r\n```\r\n3. Compile\r\n\r\n**Expected Behavior**:\r\n\r\nNo errors generated.\r\n\r\n**Actual Behavior**:\r\n\r\nThe following error is generated:\r\n\r\nError\tCS1503\tArgument 1: cannot convert from `ConsoleApp47.Tree<T>` to `ConsoleApp47.Tree<T>`\r\n\r\nOn this line:\r\n\r\n`subTrees.Add(subTree);`\r\n\r\nWhere ConsoleApp47 is the namespace.\r\n\r\n\r\nA similar error happens if I have the following code for the `TreeUtilities` class:\r\n```\r\n    public static class TreeUtilities\r\n    {\r\n        public static Tree<T> CreateTreeFromDataInLocations<T>(IDictionary<LocationInTree, T> nodes)\r\n        {\r\n            Tree<T> CreateForLocation<T>(LocationInTree location, T value)\r\n            {\r\n                return ForLocation<T>(nodes, location, value);\r\n            }\r\n\r\n            var rootNode = LocationInTree.Root;\r\n\r\n            return CreateForLocation(rootNode, nodes[rootNode]);\r\n        }\r\n\r\n        private static Tree<T> ForLocation<T>(IDictionary<LocationInTree, T> nodes, LocationInTree location, T value)\r\n        {\r\n            int chlidIndex = 0;\r\n\r\n            var subTrees = new List<Tree<T>>();\r\n\r\n            while (true)\r\n            {\r\n                var childLocation = location.CreateChild(chlidIndex);\r\n\r\n                if (!nodes.TryGetValue(childLocation, out var childValue))\r\n                {\r\n                    break;\r\n                }\r\n\r\n                var subTree = ForLocation(nodes, childLocation, childValue);\r\n\r\n                subTrees.Add(subTree);\r\n\r\n                chlidIndex++;\r\n            }\r\n\r\n            return new Tree<T>(value, subTrees.ToArray());\r\n        }\r\n    }\r\n```\r\nIf I get rid of the local function (convert it to a normal method), the error disappears.","Url":"https://github.com/dotnet/roslyn/issues/39665","RelatedDescription":"Open issue \"Possible bug related to local functions\" (#39665)"},{"Id":"516967396","IsPullRequest":false,"CreatedAt":"2019-11-04T05:43:19","Actor":"davkean","Number":"39664","RawContent":null,"Title":"Configuring code style for \"infer member names in anonymous types\" persists the wrong setting","State":"open","Body":"**Version Used**: \r\nVersion 16.5.0 Preview 1.0 [29429.152.master]\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. CTRL+. and navigate to Configure or Suppress Issues\r\n\r\n``` C# \r\n        static void Main(string[] args)\r\n        {\r\n            var foo = new Foo();\r\n\r\n            var bar = new { RuleName = foo.RuleName }; \r\n\r\n            Console.WriteLine(bar.RuleName);\r\n        }\r\n```\r\n\r\n\r\n**Expected Behavior**:\r\n```\r\ndotnet_style_prefer_inferred_anonymous_type_member_names = false:suggestion\r\n```\r\n\r\n**Actual Behavior**:\r\n![image](https://user-images.githubusercontent.com/1103906/68101486-f91de380-ff21-11e9-9b60-f684212fa796.png)\r\n\r\nAfter you apply the setting from the IDE, it does not apply and the analyzer still fires.","Url":"https://github.com/dotnet/roslyn/issues/39664","RelatedDescription":"Open issue \"Configuring code style for \"infer member names in anonymous types\" persists the wrong setting\" (#39664)"},{"Id":"516946970","IsPullRequest":false,"CreatedAt":"2019-11-04T03:45:45","Actor":"HobbsCode","Number":"39663","RawContent":null,"Title":"Compiler should allow assignment to discard - from ref-struct returning method.","State":"open","Body":"**Version Used**: \r\nC# 8 .NET Core 3.0\r\n**Steps to Reproduce**:\r\n\r\n        public int Foo()\r\n        {\r\n            var dummy = Bar(items: stackalloc int[5]); // Compiler happy.\r\n            _ = Bar(items: stackalloc int[5]); // Compiler sad.\r\n\r\n            return 0;\r\n        }\r\n\r\n        ReadOnlySpan<int> Bar(ReadOnlySpan<int> items)\r\n        {\r\n            return items;\r\n        }\r\n\r\n**Expected Behavior**:\r\nThe compiler should allow the assignment to discard because it allows the assignment to a variable.\r\n\r\n**Actual Behavior**:\r\nThe compiler complains about exposing the span outside its containing method.\r\n\r\nIt appears that the problem is due to the return of a ref-struct.","Url":"https://github.com/dotnet/roslyn/issues/39663","RelatedDescription":"Open issue \"Compiler should allow assignment to discard - from ref-struct returning method.\" (#39663)"},{"Id":"516937974","IsPullRequest":true,"CreatedAt":"2019-11-04T02:56:49","Actor":"20chan","Number":"39662","RawContent":null,"Title":"Non-localized key in naming styles in .editorconfig","State":"open","Body":"From https://github.com/dotnet/roslyn/issues/39602\r\n\r\nNaming styles parts in .editorconfig contains localized **key**.\r\n`serializedNameMap` should be English, not localized language.","Url":"https://github.com/dotnet/roslyn/pull/39662","RelatedDescription":"Open PR \"Non-localized key in naming styles in .editorconfig\" (#39662)"},{"Id":"516935196","IsPullRequest":false,"CreatedAt":"2019-11-04T02:41:13","Actor":"vsfeedback","Number":"39661","RawContent":null,"Title":"DebuggerDisplayAttribute implementation doesn't have means to check for the current display settings (such as hexadecimal base)","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/446351/hex-display-is-incorrect-for-data-structures.html)._\r\n\r\n---\r\nI'm using a bit pattern (a Uinteger) as a key in a Dictionary. I've switched the display to hex, but the values are still displayed in decimal. This is similar to an already reported problem, which has been solved in VS 15.8, but it's happening in VS 15.9.6.\r\n\r\nThe attached shows a dictionary whose count in in hex but the keys are in decimal.\r\n\r\nThis happens both when using the &quot;locals&quot; tab and when hovering over a value.\r\n\r\nWhether the item number shold be in hex or decimal is an interesting question.\r\n\r\n(private comment, text removed)\r\n![image](https://user-images.githubusercontent.com/41759/68097083-b00a5880-fe69-11e9-9eff-ff59f80e1ba7.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/39661","RelatedDescription":"Open issue \"DebuggerDisplayAttribute implementation doesn't have means to check for the current display settings (such as hexadecimal base)\" (#39661)"},{"Id":"516888659","IsPullRequest":true,"CreatedAt":"2019-11-03T21:04:57","Actor":"siegfriedpammer","Number":"39660","RawContent":null,"Title":"Upgrade ICSharpCode.Decompiler to 5.0.2.5153","State":"open","Body":"For more information about the changes in this release,\r\nsee https://github.com/icsharpcode/ILSpy/releases/tag/v5.0.","Url":"https://github.com/dotnet/roslyn/pull/39660","RelatedDescription":"Open PR \"Upgrade ICSharpCode.Decompiler to 5.0.2.5153\" (#39660)"},{"Id":"516888223","IsPullRequest":false,"CreatedAt":"2019-11-03T21:01:28","Actor":"ericwj","Number":"39659","RawContent":null,"Title":"Question: Fastest way to call non-generic method","State":"open","Body":"I have a generic method which obtains a value that I would like to be the public API - or as entry point for obtaining those values in generic enumerations and the like - for a quite sizeable number of types that in fact aren't being obtained in a generic way - there are different methods or let it be overloads that obtain the actual value.\r\n\r\nMy question is whether there is a really fast way to divert from a generic entry point to a non-generic implementation.\r\n\r\nSo for example let's say I have:\r\n```CS\r\nclass Reader<T> {\r\n    bool TryRead<T>(out T t);\r\n    bool TryRead(out U u);\r\n    ...\r\n}\r\n```\r\nWhere the first method is supposed to call the second method if `typeof(T) == typeof(U)`. It doesn't matter if the `<T>` appears on the type or the method, hence I put it in both places.\r\n\r\nThe binder will always pick a generic method, even if there is an overload with the actual type argument, so there is no automatic way of doing this.\r\n\r\nIt was a slight surprise to me that the runtime just doesn't understand the pattern of switching on the `typeof(T)`. For one, doing this with `switch` is impossible since `typeof(...)` is not constant, not even for primitive types. Would it be that `T t` is not `out` then pattern matching could be done with `switch (value) { U u => TryRead(ref u), ... }`, yet that produces a giant `if (isinst t, U)` series which is about 4 times slower than a straightforward cast which can't be done because the type is not known. Chaining a series of `if (typeof(T) == typeof(U))` etcetera (where only `T` is a generic argument) produces a very bulky and slow series of checks, even though the intuition is that this might be optimized away at runtime when the type of `T` is known.\r\n\r\nOne thing I know for sure is that if the types on which to switch are all simple `unmanaged` types, it is beautifully inlineable to chain a series of `if (Unsafe.SizeOf<T>() == 1/2/4/8)` checks. (Hence, bye bye bulky `System.Buffers.Binary.BinaryPrimitives` except the `ReverseEndianness` method)\r\n\r\nI'm sure it's quite okay performance-wise to just create an interface or an abstract class that is generic and implement them by deriving from that, such that the virtual dispatch does the work, but in this case it produces a very long list of classes which are tedious to write and I consider this approach a maintenance headache.\r\n\r\nPlease comment.","Url":"https://github.com/dotnet/roslyn/issues/39659","RelatedDescription":"Open issue \"Question: Fastest way to call non-generic method\" (#39659)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"517276028","IsPullRequest":true,"CreatedAt":"2019-11-04T16:49:43","Actor":"Dotnet-GitSync-Bot","Number":"7865","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @TamarChristinaArm","Url":"https://github.com/dotnet/corert/pull/7865","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#7865)"},{"Id":"516882257","IsPullRequest":true,"CreatedAt":"2019-11-03T22:07:03","Actor":"Dotnet-GitSync-Bot","Number":"7864","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tarekgh","Url":"https://github.com/dotnet/corert/pull/7864","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7864)"},{"Id":"516869037","IsPullRequest":true,"CreatedAt":"2019-11-03T20:14:49","Actor":"Dotnet-GitSync-Bot","Number":"7863","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7863","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7863)"},{"Id":"516829077","IsPullRequest":true,"CreatedAt":"2019-11-03T18:21:29","Actor":"Dotnet-GitSync-Bot","Number":"7862","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7862","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7862)"},{"Id":"516781561","IsPullRequest":false,"CreatedAt":"2019-11-03T14:35:21","Actor":"josephmoresena","Number":"7860","RawContent":null,"Title":"Error compilling console app with System.Data.SqlClient on Linux","State":"closed","Body":"I'm getting the following error when I'm trying to compile a simple console app which connects to a Sql Server database in Ubuntu 19.10.\r\n\r\n`  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/Proj.o: in function `System_Data_SqlClient_Interop_NetSecurityNative__ImportPrincipalName':\r\n  /__w/1/s/src/System.Data.Common/src/System/Data/Common/BooleanStorage.cs:180: undefined reference to `NetSecurityNative_ImportPrincipalName'\r\n  /usr/bin/ld: obj/Debug/netcoreapp3.0/linux-x64/native/Proj.o: in function `System_Data_SqlClient_Interop_NetSecurityNative__InitSecContext_0':\r\n  /__w/1/s/src/System.Data.Common/src/System/Data/Common/ByteStorage.cs:162: undefined reference to `NetSecurityNative_InitSecContextEx'`","Url":"https://github.com/dotnet/corert/issues/7860","RelatedDescription":"Closed issue \"Error compilling console app with System.Data.SqlClient on Linux\" (#7860)"},{"Id":"516817732","IsPullRequest":true,"CreatedAt":"2019-11-03T13:34:02","Actor":"Dotnet-GitSync-Bot","Number":"7861","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7861","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7861)"},{"Id":"516763323","IsPullRequest":true,"CreatedAt":"2019-11-03T00:42:36","Actor":"Dotnet-GitSync-Bot","Number":"7859","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks","Url":"https://github.com/dotnet/corert/pull/7859","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7859)"},{"Id":"516597160","IsPullRequest":true,"CreatedAt":"2019-11-02T14:00:46","Actor":"Dotnet-GitSync-Bot","Number":"7858","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/7858","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7858)"},{"Id":"515535621","IsPullRequest":true,"CreatedAt":"2019-11-01T00:19:13","Actor":"MichalStrehovsky","Number":"7855","RawContent":null,"Title":"Disable multithreaded compilation","State":"closed","Body":"I won't have time to look into the race condition anytime soon. Fingers crossed that crossgen2 hits it in CoreCLR repo and there will be paid time available to investigate.","Url":"https://github.com/dotnet/corert/pull/7855","RelatedDescription":"Closed or merged PR \"Disable multithreaded compilation\" (#7855)"},{"Id":"515738596","IsPullRequest":true,"CreatedAt":"2019-11-01T00:19:00","Actor":"Dotnet-GitSync-Bot","Number":"7857","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7857","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7857)"},{"Id":"515578359","IsPullRequest":true,"CreatedAt":"2019-10-31T20:49:12","Actor":"Dotnet-GitSync-Bot","Number":"7856","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @benaadams","Url":"https://github.com/dotnet/corert/pull/7856","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7856)"},{"Id":"515147260","IsPullRequest":true,"CreatedAt":"2019-10-31T16:26:56","Actor":"Dotnet-GitSync-Bot","Number":"7854","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @echesakovMSFT @stephentoub","Url":"https://github.com/dotnet/corert/pull/7854","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7854)"},{"Id":"514751933","IsPullRequest":true,"CreatedAt":"2019-10-31T04:03:03","Actor":"Dotnet-GitSync-Bot","Number":"7853","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @echesakovMSFT","Url":"https://github.com/dotnet/corert/pull/7853","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7853)"},{"Id":"514311437","IsPullRequest":true,"CreatedAt":"2019-10-30T15:11:24","Actor":"Dotnet-GitSync-Bot","Number":"7851","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @AaronRobinsonMSFT @carlossanlop","Url":"https://github.com/dotnet/corert/pull/7851","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7851)"},{"Id":"514701238","IsPullRequest":false,"CreatedAt":"2019-10-30T14:11:01","Actor":"jkotas","Number":"7852","RawContent":null,"Title":"AF: InstantiatedMethod.SetCachedCanonValue","State":"open","Body":"```\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\n  Assertion Failed\r\n  \r\n     at Internal.TypeSystem.InstantiatedMethod.SetCachedCanonValue(CanonicalFormKind kind, InstantiatedMethod value) in F:\\workspace.2\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\Canon\\InstantiatedMethod.Canon.cs:line 77\r\n     at Internal.TypeSystem.InstantiatedMethod.GetCanonMethodTarget(CanonicalFormKind kind) in F:\\workspace.2\\_work\\1\\s\\src\\Common\\src\\TypeSystem\\Canon\\InstantiatedMethod.Canon.cs:line 50\r\n     at Internal.JitInterface.CorInfoImpl.getCallInfo(CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\JitInterface\\CorInfoImpl.RyuJit.cs:line 1193\r\n     at Internal.JitInterface.CorInfoImpl._getCallInfo(IntPtr thisHandle, IntPtr* ppException, CORINFO_RESOLVED_TOKEN& pResolvedToken, CORINFO_RESOLVED_TOKEN* pConstrainedResolvedToken, CORINFO_METHOD_STRUCT_* callerHandle, CORINFO_CALLINFO_FLAGS flags, CORINFO_CALL_INFO* pResult) in F:\\workspace.2\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoBase.cs:line 2348\r\n     at Internal.JitInterface.CorInfoImpl.JitCompileMethod(IntPtr& exception, IntPtr jit, IntPtr thisHandle, IntPtr callbacks, CORINFO_METHOD_INFO& info, UInt32 flags, IntPtr& nativeEntry, UInt32& codeSize)\r\n     at Internal.JitInterface.CorInfoImpl.JitCompileMethod(IntPtr& exception, IntPtr jit, IntPtr thisHandle, IntPtr callbacks, CORINFO_METHOD_INFO& info, UInt32 flags, IntPtr& nativeEntry, UInt32& codeSize)\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethodInternal(IMethodNode methodCodeNodeNeedingCode, MethodIL methodIL) in F:\\workspace.2\\_work\\1\\s\\src\\JitInterface\\src\\CorInfoImpl.cs:line 168\r\n     at Internal.JitInterface.CorInfoImpl.CompileMethod(MethodCodeNode methodCodeNodeNeedingCode, MethodIL methodIL) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\JitInterface\\CorInfoImpl.RyuJit.cs:line 56\r\n     at ILCompiler.RyuJitCompilation.CompileSingleMethod(CorInfoImpl corInfo, MethodCodeNode methodCodeNodeNeedingCode) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\Compiler\\RyuJitCompilation.cs:line 139\r\n     at ILCompiler.RyuJitCompilation.<CompileMultiThreaded>b__8_0(Object m) in F:\\workspace.2\\_work\\1\\s\\src\\ILCompiler.RyuJit\\src\\Compiler\\RyuJitCompilation.cs:line 101\r\n     at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n     at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n  Assertion Failed\r\n```","Url":"https://github.com/dotnet/corert/issues/7852","RelatedDescription":"Open issue \"AF: InstantiatedMethod.SetCachedCanonValue\" (#7852)"},{"Id":"514191229","IsPullRequest":true,"CreatedAt":"2019-10-30T00:06:55","Actor":"Dotnet-GitSync-Bot","Number":"7850","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @danmosemsft @jkotas @stephentoub @elinor-fung @noahfalk","Url":"https://github.com/dotnet/corert/pull/7850","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7850)"},{"Id":"513004068","IsPullRequest":true,"CreatedAt":"2019-10-28T18:00:32","Actor":"MichalStrehovsky","Number":"7848","RawContent":null,"Title":"Port changes from CoreCLR","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7848","RelatedDescription":"Closed or merged PR \"Port changes from CoreCLR\" (#7848)"},{"Id":"513365041","IsPullRequest":true,"CreatedAt":"2019-10-28T17:14:45","Actor":"filipnavara","Number":"7849","RawContent":null,"Title":"Fix building portable thread pool on Windows","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7849","RelatedDescription":"Closed or merged PR \"Fix building portable thread pool on Windows\" (#7849)"},{"Id":"512879532","IsPullRequest":true,"CreatedAt":"2019-10-27T04:20:21","Actor":"MichalStrehovsky","Number":"7846","RawContent":null,"Title":"Fix thread safety issue in StructMarshallingThunk","State":"closed","Body":"The marshalling code generators are not thread safe. We should not cache them.\r\n\r\nHopefully fixes #7829.","Url":"https://github.com/dotnet/corert/pull/7846","RelatedDescription":"Closed or merged PR \"Fix thread safety issue in StructMarshallingThunk\" (#7846)"},{"Id":"512885160","IsPullRequest":true,"CreatedAt":"2019-10-26T22:46:14","Actor":"Dotnet-GitSync-Bot","Number":"7847","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @dotnet-maestro[bot]","Url":"https://github.com/dotnet/corert/pull/7847","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7847)"},{"Id":"512800635","IsPullRequest":true,"CreatedAt":"2019-10-26T17:45:27","Actor":"KodrAus","Number":"7843","RawContent":null,"Title":"Only set dependency package versions if they're empty","State":"closed","Body":"Hi! :wave:\r\n\r\nThis may not be a change you're interested in taking, but lately I've been playing with using local builds of various pieces of the .NET toolchain and have been having trouble finding a reasonable way to pull in my own build of `objwriter` based on a build of LLVM I've done previously.\r\n\r\nBy making these package versions conditionally set it becomes possible to specify them as environment variables when building `corert` without having to touch any of the other build scripts.","Url":"https://github.com/dotnet/corert/pull/7843","RelatedDescription":"Closed or merged PR \"Only set dependency package versions if they're empty\" (#7843)"},{"Id":"512839586","IsPullRequest":true,"CreatedAt":"2019-10-26T16:38:16","Actor":"Dotnet-GitSync-Bot","Number":"7845","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams","Url":"https://github.com/dotnet/corert/pull/7845","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7845)"},{"Id":"512828238","IsPullRequest":true,"CreatedAt":"2019-10-26T14:03:27","Actor":"Dotnet-GitSync-Bot","Number":"7844","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7844","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7844)"},{"Id":"512692626","IsPullRequest":true,"CreatedAt":"2019-10-26T12:10:19","Actor":"Dotnet-GitSync-Bot","Number":"7842","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @VSadov @stephentoub","Url":"https://github.com/dotnet/corert/pull/7842","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7842)"},{"Id":"512298382","IsPullRequest":true,"CreatedAt":"2019-10-25T06:32:29","Actor":"jkotas","Number":"7841","RawContent":null,"Title":"Port AllocateUninitializedArray changes","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7841","RelatedDescription":"Closed or merged PR \"Port AllocateUninitializedArray changes\" (#7841)"},{"Id":"512183999","IsPullRequest":true,"CreatedAt":"2019-10-24T22:42:39","Actor":"Dotnet-GitSync-Bot","Number":"7840","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @echesakovMSFT @tannergooding @adamsitnik @VSadov","Url":"https://github.com/dotnet/corert/pull/7840","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7840)"},{"Id":"511641265","IsPullRequest":true,"CreatedAt":"2019-10-24T21:08:56","Actor":"Dotnet-GitSync-Bot","Number":"7839","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/7839","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7839)"},{"Id":"511517701","IsPullRequest":true,"CreatedAt":"2019-10-23T23:09:44","Actor":"Dotnet-GitSync-Bot","Number":"7838","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @AaronRobinsonMSFT @marek-safar @tmds","Url":"https://github.com/dotnet/corert/pull/7838","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7838)"},{"Id":"510975732","IsPullRequest":true,"CreatedAt":"2019-10-23T16:07:26","Actor":"Dotnet-GitSync-Bot","Number":"7837","RawContent":null,"Title":"Mirror changes from dotnet/corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/7837","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx\" (#7837)"},{"Id":"510948047","IsPullRequest":true,"CreatedAt":"2019-10-22T22:07:19","Actor":"Dotnet-GitSync-Bot","Number":"7836","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @AaronRobinsonMSFT","Url":"https://github.com/dotnet/corert/pull/7836","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7836)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"516223118","IsPullRequest":true,"CreatedAt":"2019-11-05T01:55:36","Actor":"dotnet-maestro-bot","Number":"3847","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'master'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* mmitche\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/3847","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'master'\" (#3847)"},{"Id":"517455146","IsPullRequest":true,"CreatedAt":"2019-11-04T23:06:42","Actor":"wli3","Number":"3861","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.1.6xx to get mac 10.15 signing change","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3861","RelatedDescription":"Open PR \"Merge release/2.1.5xx to release/2.1.6xx to get mac 10.15 signing change\" (#3861)"},{"Id":"517442201","IsPullRequest":true,"CreatedAt":"2019-11-04T22:31:31","Actor":"wli3","Number":"3860","RawContent":null,"Title":"Collect more MSBuild properties","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3860","RelatedDescription":"Open PR \"Collect more MSBuild properties\" (#3860)"},{"Id":"517441095","IsPullRequest":true,"CreatedAt":"2019-11-04T22:29:01","Actor":"vitek-karas","Number":"3859","RawContent":null,"Title":"Fix NullRef generating runtime config for NET Framework TFM","State":"open","Body":"#### Scenario\r\nBuilding `net472` project with `<GenerateRuntimeConfigFiles>true</GenerateRuntimeConfigFiles>` fails with a NullRef.\r\nSee #3857 for a real-world repro project.\r\n\r\nThis is a regression in 3.1.1xx - caused by #3697.\r\n\r\n#### Fix\r\nIf the TFM is net472 (or any other non .NET Core TFM) but something still forces the GenerateRuntimeConfigurationFiles target to run (can be done by setting the same property explicitely to true), there will be no PlatformLibrary available, but the project will otherwise look just like self-contained app (other than the TFM).\r\n\r\nBefore #3697 the frameworks processing would simply be skipped due to the project not being framework dependent. After that change we still try to process frameworks. The fix is to check for availability of any PlatformLibrary, and if not available treat it as if there are no frameworks (just like before #3697.\r\n\r\n#### Risk\r\nLow - simply avoid the NullRef and get the code to the same position it was before #3697 with these projects.\r\n\r\n#### Customer impact\r\nRegression in 3.1.1xxx - project built before, now it doesn't.\r\nThere's a \"workaround\" - the project should never set `GenerateRuntimeConfigFiles` for anything but `.NET Core` TFMs - modify the project to only set it for .NET Core TFMs and everything works.","Url":"https://github.com/dotnet/sdk/pull/3859","RelatedDescription":"Open PR \"Fix NullRef generating runtime config for NET Framework TFM\" (#3859)"},{"Id":"517375640","IsPullRequest":false,"CreatedAt":"2019-11-04T20:12:43","Actor":"yhnavein","Number":"3858","RawContent":null,"Title":"Configuration param ignored in dotnet publish tool","State":"open","Body":"I stumbled upon a strange issue in the latest .net core 3.0. It looks like `--configuration` parameter is being ignored by the publish command.\r\n\r\nHere is the issue:\r\n```\r\n$ dotnet publish -c prod\r\nMicrosoft (R) Build Engine 16.3.0+0f4c62fea dla platformy .NET Core\r\nCopyright (C) Microsoft Corporation. bla bla bla\r\n\r\n  Ukończono przywracanie w elemencie 23,91 ms (PATH\\PROJECT.csproj).\r\n  IntegrationLayer -> PATH\\PROJECT\\bin\\Debug\\netcoreapp3.0\\PROJECT.dll\r\n  IntegrationLayer -> PATH\\PROJECT\\bin\\Debug\\netcoreapp3.0\\publish\\\r\n```\r\n\r\nI've specified `prod` configuration and as you can see in the output publish was made to the `Debug` directory. This is wrong.\r\n\r\nI am using the same command for my other projects in dotnet core 2.2 and it was working fine.\r\n\r\n*Observed behaviour*\r\nFiles are published to `bin\\Debug\\netcoreapp3.0`\r\n\r\n*Expected behaviour*\r\nFiles are published to `bin\\prod\\netcoreapp3.0`\r\n\r\n```\r\n$ dotnet --version\r\n3.0.100\r\n```","Url":"https://github.com/dotnet/sdk/issues/3858","RelatedDescription":"Open issue \"Configuration param ignored in dotnet publish tool\" (#3858)"},{"Id":"517285188","IsPullRequest":false,"CreatedAt":"2019-11-04T17:05:38","Actor":"sharwell","Number":"3857","RawContent":null,"Title":"NullReferenceException in GenerateRuntimeConfigurationFiles.AddFrameworks","State":"open","Body":"Error occurred building xunit/xunit.analyzers@74f6d366bd5a33f7ed966fd6f1fb7703452dac0d with VS 16.4 Preview 3.\r\n\r\nI'm not sure what the issue here is, but it seems possibly related to #3697.\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\3.1.100-preview2-014569\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(255,5): error MSB4018: The \"GenerateRuntimeConfigurationFiles\" task failed unexpectedly. [C:\\dev\\github\\xunit.analyzers\\test\\xunit.analyzers.tests\\xunit.analyzers.tests.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.100-preview2-014569\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(255,5): error MSB4018: System.NullReferenceException: Object reference not set to an instance of an object. [C:\\dev\\github\\xunit.analyzers\\test\\xunit.analyzers.tests\\xunit.analyzers.tests.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.100-preview2-014569\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(255,5): error MSB4018:    at Microsoft.NET.Build.Tasks.GenerateRuntimeConfigurationFiles.AddFrameworks(RuntimeOptions runtimeOptions, ProjectContext projectContext) [C:\\dev\\github\\xunit.analyzers\\test\\xunit.analyzers.tests\\xunit.analyzers.tests.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.100-preview2-014569\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(255,5): error MSB4018:    at Microsoft.NET.Build.Tasks.GenerateRuntimeConfigurationFiles.WriteRuntimeConfig(ProjectContext projectContext) [C:\\dev\\github\\xunit.analyzers\\test\\xunit.analyzers.tests\\xunit.analyzers.tests.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.100-preview2-014569\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(255,5): error MSB4018:    at Microsoft.NET.Build.Tasks.GenerateRuntimeConfigurationFiles.ExecuteCore() [C:\\dev\\github\\xunit.analyzers\\test\\xunit.analyzers.tests\\xunit.analyzers.tests.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.100-preview2-014569\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(255,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() [C:\\dev\\github\\xunit.analyzers\\test\\xunit.analyzers.tests\\xunit.analyzers.tests.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.100-preview2-014569\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(255,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\dev\\github\\xunit.analyzers\\test\\xunit.analyzers.tests\\xunit.analyzers.tests.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.1.100-preview2-014569\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(255,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\dev\\github\\xunit.analyzers\\test\\xunit.analyzers.tests\\xunit.analyzers.tests.csproj]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3857","RelatedDescription":"Open issue \"NullReferenceException in GenerateRuntimeConfigurationFiles.AddFrameworks\" (#3857)"},{"Id":"517145616","IsPullRequest":false,"CreatedAt":"2019-11-04T13:16:55","Actor":"imbsky","Number":"3856","RawContent":null,"Title":"We need a list of .NET Core SDK versions","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/issues/3856","RelatedDescription":"Open issue \"We need a list of .NET Core SDK versions\" (#3856)"},{"Id":"516824778","IsPullRequest":true,"CreatedAt":"2019-11-03T15:37:47","Actor":"dotnet-maestro[bot]","Number":"3854","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191102.1\r\n- **Date Produced**: 11/2/2019 12:43 PM\r\n- **Commit**: bfa46e9e624cc148bd5c6b7af63f52f6e1d48c8d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19552.1\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19552.1\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19552.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3854","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3854)"},{"Id":"516831596","IsPullRequest":true,"CreatedAt":"2019-11-03T15:25:49","Actor":"dotnet-maestro[bot]","Number":"3855","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191103.2\r\n- **Date Produced**: 11/3/2019 12:51 PM\r\n- **Commit**: 13f35c3d86a40ff811bfde0b64cfb86431c19d15\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19553.2\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3855","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3855)"},{"Id":"516732193","IsPullRequest":false,"CreatedAt":"2019-11-03T09:44:35","Actor":"johnkors","Number":"3853","RawContent":null,"Title":"`dotnet tool install/update` installs unlisted package","State":"closed","Body":"Hi,\r\n\r\nI unlisted a .NET Core global tool nuget package (latest version) I own on nuget.org, and when I run `dotnet tool install` or `dotnet tool update` it still installs the unlisted/deprecated latest version. Is this by design? I tried to mark it as deprecated as well, but no effect.","Url":"https://github.com/dotnet/sdk/issues/3853","RelatedDescription":"Closed issue \"`dotnet tool install/update` installs unlisted package\" (#3853)"},{"Id":"516571162","IsPullRequest":true,"CreatedAt":"2019-11-02T14:02:53","Actor":"dotnet-maestro[bot]","Number":"3851","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191101.3\r\n- **Date Produced**: 11/1/2019 4:57 PM\r\n- **Commit**: f757dab263c59ffa51717974ec9a5da76a7a3b6e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19551.3\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19551.3\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3851","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3851)"},{"Id":"516584593","IsPullRequest":false,"CreatedAt":"2019-11-02T12:58:24","Actor":"jbartlau","Number":"3852","RawContent":null,"Title":"Reading MSBuild registry properties from NuGet targets file fails in .NET Core CLI","State":"open","Body":"I'm trying to create a NuGet package in order to redistribute a component that uses both managed and unmanaged dependencies (`my.dll` and `mydotnetcore.dll`). To copy the additional (unmanaged) file from a local installation to the output directory, we use a targets file. We read a registry key to find the local installation:\r\n\r\n**my.targets file:**\r\n```XML\r\n<PropertyGroup>\r\n  <InstDir>$(registry:HKEY_CURRENT_USER\\SOFTWARE\\myapp@LocalDir)</InstDir>\r\n</PropertyGroup\r\n```\r\n\r\nThe local file is then copied as follows:\r\n\r\n```XML\r\n<None Include=\"$(InstDir)\\my.dll\">\r\n  <Visible>False</Visible>\r\n  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n</None>\r\n```\r\n\r\n**my.nuspec file:**\r\n```XML\r\n…\r\n<files>\r\n  <file src=\"..\\mydotnetcore.dll\" target=\"lib\\NetCoreApp30\\mydotnetcore.dll\"/>\r\n  <file src=\"build\\my.targets\" target=\"build\\my.targets\"/>                       \r\n</files>\r\n```\r\n\r\nIf I add this NuGet package to a .NET Core 3 (VS 2019) application and build it in the VS IDE, the application is built and both DLLs are copied to the output directory - all is well.\r\n\r\nHowever when building using the .NET Core command-line (CLI) tool like so:\r\n\r\n    dotnet build\r\n\r\nthe unmanaged dependency is _not_ copied. I've found out that in this case, the `InstDir` property\r\n\r\n```XML\r\n<InstDir>$(registry:HKEY_CURRENT_USER\\SOFTWARE\\myapp@LocalDir)</InstDir>\r\n```\r\n\r\nseems to be empty.  Monitoring the process with Sysinternals' Process Monitor shows that the registry is not accessed. Apparently the entry is ignored. If an absolute path is entered for the property <InstDir>, the dll will also be copied just fine. \r\n\r\nI've also tried to get this running using a property function (`[MSBuild]::GetRegistryValue`) but got the same result.\r\n","Url":"https://github.com/dotnet/sdk/issues/3852","RelatedDescription":"Open issue \"Reading MSBuild registry properties from NuGet targets file fails in .NET Core CLI\" (#3852)"},{"Id":"516383664","IsPullRequest":true,"CreatedAt":"2019-11-01T22:43:58","Actor":"sfoslund","Number":"3850","RawContent":null,"Title":"Removing Redundant NuGetPackageId and PackageName metadata","State":"open","Body":"Addressing #3499","Url":"https://github.com/dotnet/sdk/pull/3850","RelatedDescription":"Open PR \"Removing Redundant NuGetPackageId and PackageName metadata\" (#3850)"},{"Id":"516335435","IsPullRequest":true,"CreatedAt":"2019-11-01T22:20:56","Actor":"dotnet-maestro[bot]","Number":"3849","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191101.4\r\n- **Date Produced**: 11/1/2019 7:30 PM\r\n- **Commit**: 00491cd463dc0a17996b8ddb24cf9faf390f04fb\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19551.4\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3849","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3849)"},{"Id":"516234868","IsPullRequest":false,"CreatedAt":"2019-11-01T17:02:31","Actor":"JohanLarsson","Number":"3848","RawContent":null,"Title":"Pack library with analyzer","State":"open","Body":"It is common to have:\r\n\r\n```\r\nLib.csproj\r\nLib.Analyzers.csproj\r\n```\r\n\r\nWhere `Lib.csproj` does not have a project reference to `Lib.Analyzers.csproj` but we want `Lib.nupkg` to have package dependency to `Lib.Analyzers.nupkg`\r\n\r\nWhen using paket for packing it is just a matter of adding the following to `paket.template`:\r\n\r\n```\r\ndependencies\r\n  Lib.Analyzers\r\n```\r\n\r\nI tried adding a fake project reference as a hack\r\n```xml\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\Lib.Analyzers\\Lib.Analyzers.csproj\">\r\n      <!-- hack for packing with package dependency -->\r\n      <PrivateAssets>none</PrivateAssets>\r\n      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>\r\n      <SkipGetTargetFrameworkProperties>true</SkipGetTargetFrameworkProperties>\r\n      <UndefineProperties>TargetFramework</UndefineProperties>\r\n    </ProjectReference>\r\n  </ItemGroup>\r\n```\r\n\r\nBut it did not work and had issues when building.\r\n\r\nIs there support for this scenario and if so where is it documented?","Url":"https://github.com/dotnet/sdk/issues/3848","RelatedDescription":"Open issue \"Pack library with analyzer\" (#3848)"},{"Id":"515718629","IsPullRequest":true,"CreatedAt":"2019-11-01T16:37:36","Actor":"mmitche","Number":"3842","RawContent":null,"Title":"Update branding for preview3","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3842","RelatedDescription":"Closed or merged PR \"Update branding for preview3\" (#3842)"},{"Id":"516071608","IsPullRequest":true,"CreatedAt":"2019-11-01T13:27:47","Actor":"dotnet-maestro[bot]","Number":"3846","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191031.14\r\n- **Date Produced**: 10/31/2019 10:18 PM\r\n- **Commit**: db50c8d7378a7a81033a1b8fcfa5461694a891c3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19531.14\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19531.14\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19531.14\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3846","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3846)"},{"Id":"516053707","IsPullRequest":true,"CreatedAt":"2019-11-01T11:17:12","Actor":"v-zbsail","Number":"3845","RawContent":null,"Title":"LOC CHECKIN | dotnet/sdk  release/3.1.1xx | 20191101","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/3845","RelatedDescription":"Open PR \"LOC CHECKIN | dotnet/sdk  release/3.1.1xx | 20191101\" (#3845)"},{"Id":"515889920","IsPullRequest":true,"CreatedAt":"2019-11-01T05:56:15","Actor":"dotnet-maestro[bot]","Number":"3844","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191031.15\r\n- **Date Produced**: 11/1/2019 2:23 AM\r\n- **Commit**: 62ec98d1d1938dd0286d2a211d6856ee053aab9b\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19531.15\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3844","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3844)"},{"Id":"514985381","IsPullRequest":true,"CreatedAt":"2019-10-31T23:02:13","Actor":"wli3","Number":"3832","RawContent":null,"Title":"port remove signature on MAC host","State":"closed","Body":"Part of https://github.com/dotnet/sdk/issues/3773\r\n\r\n@swaroop-sridhar","Url":"https://github.com/dotnet/sdk/pull/3832","RelatedDescription":"Closed or merged PR \"port remove signature on MAC host\" (#3832)"},{"Id":"514992403","IsPullRequest":true,"CreatedAt":"2019-10-31T21:03:53","Actor":"dotnet-maestro-bot","Number":"3833","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'master'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to master. I'm a robot and am configured to help you automatically keep master up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* @wli3\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout master\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-master'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-master master\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-master\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-master\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/3833","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'master'\" (#3833)"},{"Id":"515731459","IsPullRequest":false,"CreatedAt":"2019-10-31T20:42:03","Actor":"CumpsD","Number":"3843","RawContent":null,"Title":"dotnet restore no longer supports multiple runtimes","State":"open","Body":"**Repo**\r\n```\r\ndotnet new console\r\ndotnet restore -r win-x64 -r linux-x64\r\n```\r\n\r\n**Result**\r\n```\r\nerror NETSDK1083: The specified RuntimeIdentifier 'win-x64;linux-x64' is not recognized.\r\n```\r\n\r\n**Speculation**\r\nIt seems the multiple runtimes are being passed in as RuntimeIdentifier instead of RuntimeIdentifiers?\r\n\r\nThis used to work on 2.2\r\n\r\nAs a workaround I can put `<RuntimeIdentifiers>....` in the csproj and exclude the `-r` switches, but I dont really want to do this, since it means updating *a lot* of csprojs.\r\n\r\nPS: I tried to find the cause for this, but got lost finding the source responsible for the `dotnet restore` command :(","Url":"https://github.com/dotnet/sdk/issues/3843","RelatedDescription":"Open issue \"dotnet restore no longer supports multiple runtimes\" (#3843)"},{"Id":"515644880","IsPullRequest":true,"CreatedAt":"2019-10-31T19:45:59","Actor":"dotnet-maestro[bot]","Number":"3840","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191031.6\r\n- **Date Produced**: 10/31/2019 4:30 PM\r\n- **Commit**: d992cb6bb8368a7f3161fbf1a863b073ec28c956\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19531.6\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3840","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3840)"},{"Id":"515649068","IsPullRequest":false,"CreatedAt":"2019-10-31T18:22:53","Actor":"sfoslund","Number":"3841","RawContent":null,"Title":"Run target does not take input to run .NET Core app","State":"open","Body":"**Steps to reproduce**\r\nCreate any .NET Core project (eg., with ``dotnet new console``)\r\nBuild it (eg., with ``dotnet build`` or ``msbuild /t:restore;build``)\r\nRun it with msbuild and any input (ie., ``msbuild /t:run input``)\r\n\r\n**Expected behavior**\r\nIt runs similar to running ``dotnet run`` or ``dotnet exec``\r\n\r\n**Actual behavior**\r\nMSBUILD : error MSB1009: Project file does not exist.\r\n\r\n**dotnet --version**\r\n3.1.100-preview1-014459\r\n\r\nThe MSBuild run target has been overridden to mirror ``dotnet run`` with no input: see #2283 and #3820\r\nOriginal issue: microsoft/msbuild#3355","Url":"https://github.com/dotnet/sdk/issues/3841","RelatedDescription":"Open issue \"Run target does not take input to run .NET Core app\" (#3841)"},{"Id":"515600362","IsPullRequest":false,"CreatedAt":"2019-10-31T17:07:46","Actor":"heaths","Number":"3839","RawContent":null,"Title":"dotnet add package --source downloads wrong nupkg","State":"open","Body":"We've been publishing prerelease packages to nuget.org, with our impending packages in a private repo in Azure Artifacts.\r\n\r\nPrior to release - apart from manually examining the packages I downloaded from our artifacts repo - I created a project via `dotnet new` and proceed to add our impending release packages via `dotnet add package <packageId> --source <private package repo>`. The packages were added; however, certain changes I made were not available - it was still the old code.\r\n\r\nWhen I examined the .csproj and project.assets.json, the version of the package was indeed a release version, i.e. \"4.0.0\" and not something like \"4.0.0-preview.5\". However, in project.assets.json, some of the dependencies were still prereleases, e.g. Azure.Core still referenced 1.0.0-preview.1.\r\n\r\nI took a look at my nuget cache ~\\.nuget\\packages and the \"4.0.0\" directory had today's date, but going deeper I found that the assemblies - the actually DLLs - had a date of 4 months ago. The .nuspec was also right, and had \"4.0.0\" with the right Azure.Core dependency (a released version, i.e. \"1.0.0\". The DLLs match those (both date and version) of our 4.0.0-preview.1 release back in June.\r\n\r\nIt seems that the package metadata was pulled from our private repo and even for extraction, but the binaries were actually from nuget.org - matching the lowest possible dependencies (as expected, were I actually wanting >= 4.0.0 *with* preview versions).\r\n\r\nAt the time, I didn't have a nuget.config that put our private feed first. Adding that fixed the issue, but the main concern here is that nuget / `dotnet add package` incorrectly extracted and used the wrong version of a package and was terribly misleading, calling the cache \"4.0.0\" when it should've been \"4.0.0-preview.1\". Besides, according to \"dotnet add package --help\",\r\n\r\n> -s, --source <SOURCE>               The NuGet package source to use during the restore.\r\n\r\nBut that doesn't seem to have been the case, given the metadata was correct but the binaries - everything within the package, it seems - was from nuget.org that only has prereleases right now.\r\n\r\n```\r\n$ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.100-preview1-014459\r\n Commit:    ac3b59712d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.100-preview1-014459\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0-preview1.19506.1\r\n  Commit:  bbf5542781\r\n\r\n.NET Core SDKs installed:\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview8-013437 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.100-preview1-014459 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview8.19374.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.0-preview1.19508.20 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview8-28373-17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.0-preview1.19506.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview8-28373-17 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.0-preview1.19506.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/sdk/issues/3839","RelatedDescription":"Open issue \"dotnet add package --source downloads wrong nupkg\" (#3839)"},{"Id":"515503102","IsPullRequest":false,"CreatedAt":"2019-10-31T15:01:30","Actor":"MichaelSimons","Number":"3838","RawContent":null,"Title":"dotnet global tools failing to uninstall or update on 2.1-sdk-alpine","State":"open","Body":"@RyanWhite25 commented on [Wed Oct 30 2019](https://github.com/dotnet/dotnet-docker/issues/1426)\n\n## Steps to reproduce the issue\r\n1. Create a basic dockerfile as below\r\n```\r\nFROM microsoft/dotnet:2.1-sdk-alpine\r\n\r\nRUN dotnet tool install -g Amazon.Lambda.Tools\r\n\r\nCMD [\"/bin/sh\"]\r\n```\r\n\r\n\r\n2. Build a Docker image and run a container \r\n\r\n```\r\ndocker build <dir>\r\ndocker container run -it <image id>\r\n```\r\n\r\n3. Attempt to uninstall or update the nuget package\r\n```\r\ndotnet tool update -g Amazon.Lambda.Tools\r\n```\r\n\r\n```\r\ndotnet tool uninstall -g Amazon.Lambda.Tools\r\n```\r\n\r\n## Expected behavior\r\n\r\nThe package is updated or uninstalled\r\n\r\n## Actual behavior\r\n\r\nAn error message is thrown:\r\n\r\n```\r\nTool 'amazon.lambda.tools' failed to update due to the following:\r\nFailed to uninstall tool package 'amazon.lambda.tools': Cross-device link\r\n```\r\n\r\n## Additional information (e.g. issue happens only occasionally)\r\n\r\nI've ran into an issue when uninstalling or updating nuget packages on microsoft/dotnet:2.1-sdk-alpine, when baked into a docker image via a dockerfile.\r\n\r\nI've been able to replicate on different host machines, and only seems to occur when the package has been pre-installed on the image. Running the base container interactively and installing allows me to update and uninstall the package as expected.\r\n\r\nI've used Amazon.Lambda.Tools as an example, but this seems to also occur on the several other packages I've tested.\r\n\r\nIt also seems to occur when using --tools-path instead of global.\r\n\r\nA seemingly similar issue has also been reported on StackOverflow here:\r\nhttps://stackoverflow.com/questions/57792546/docker-uninstall-dotnet-global-tool-installed-through-dockerfile\r\n\r\nI'm specifically seeing this issue when trying to build PowerShell Core AWS Lambda functions using New-AWSPowerShellLambdaPackage, which is failing when it can't update the existing installation of Amazon.Lambda.Tools:\r\nhttps://github.com/aws/aws-lambda-dotnet/blob/master/PowerShell/Module/Private/_DeploymentFunctions.ps1#L314\r\n\r\nThanks for any information or assistance you can provide with this.\r\n\r\n## Output of `docker version`\r\n\r\n```\r\nClient:\r\n Version:           18.06.1-ce\r\n API version:       1.38\r\n Go version:        go1.10.3\r\n Git commit:        e68fc7a215d7133c34aa18e3b72b4a21fd0c6136\r\n Built:             Mon Jul  1 18:51:44 2019\r\n OS/Arch:           linux/amd64\r\n Experimental:      false\r\n\r\nServer:\r\n Engine:\r\n  Version:          18.06.1-ce\r\n  API version:      1.38 (minimum version 1.12)\r\n  Go version:       go1.10.3\r\n  Git commit:       e68fc7a/18.06.1-ce\r\n  Built:            Mon Jul  1 18:53:20 2019\r\n  OS/Arch:          linux/amd64\r\n  Experimental:     false\r\n```\r\n\r\n## Output of `docker info`\r\n\r\n```\r\nContainers: 20\r\n Running: 1\r\n Paused: 0\r\n Stopped: 19\r\nImages: 28\r\nServer Version: 18.06.1-ce\r\nStorage Driver: overlay2\r\n Backing Filesystem: xfs\r\n Supports d_type: true\r\n Native Overlay Diff: true\r\nLogging Driver: json-file\r\nCgroup Driver: cgroupfs\r\nPlugins:\r\n Volume: local\r\n Network: bridge host macvlan null overlay\r\n Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog\r\nSwarm: inactive\r\nRuntimes: runc\r\nDefault Runtime: runc\r\nInit Binary: docker-init\r\ncontainerd version: 468a545b9edcd5932818eb9de8e72413e616e86e\r\nrunc version: 69663f0bd4b60df09991c08812a60108003fa340\r\ninit version: fec3683\r\nSecurity Options:\r\n seccomp\r\n  Profile: default\r\nKernel Version: 4.14.138-114.102.amzn2.x86_64\r\nOperating System: Amazon Linux 2\r\nOSType: linux\r\nArchitecture: x86_64\r\nCPUs: 1\r\nTotal Memory: 983.7MiB\r\nName: ip-172-31-11-191.eu-west-1.compute.internal\r\nID: J53Z:IZEG:YQT5:E2KR:SWNZ:JTHZ:QQCE:3ZWZ:VX4M:IDVJ:5W5B:6LG5\r\nDocker Root Dir: /var/lib/docker\r\nDebug Mode (client): false\r\nDebug Mode (server): false\r\nRegistry: https://index.docker.io/v1/\r\nLabels:\r\nExperimental: false\r\nInsecure Registries:\r\n 127.0.0.0/8\r\nLive Restore Enabled: false\r\n```\r\n\n\n---\n\n@mthalman commented on [Thu Oct 31 2019](https://github.com/dotnet/dotnet-docker/issues/1426#issuecomment-548403123)\n\nI've been able to repro this issue.  I've also confirmed that the same error occurs for both 2.2 and 3.0 SDKs.\r\n\r\n@RyanWhite25 - Although this is unrelated to the issue you encountered, we recommend that you update your .NET image references to use the [MCR Docker registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/).  In your case, `microsoft/dotnet:2.1-sdk-alpine` would be replaced with `mcr.microsoft.com/dotnet/core/sdk:2.1-alpine`. These new tags are all published on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\n\n---\n\n@MichaelSimons commented on [Thu Oct 31 2019](https://github.com/dotnet/dotnet-docker/issues/1426#issuecomment-548415206)\n\nThis issue is also not specific to the `alpine` images, you can reproduce it with Debian for example (e.g. `mcr.microsoft.com/dotnet/core/sdk:3.0`).  Given the `Cross-device link` error, I am speculating this is related to Docker layering and the overlay mount that is created that unions all of the image layers together.  For example if you install and uninstall the tool within a single layer everything works fine.  Does the `dotnet tool` infrastructure rely on hard links?  Moving to the SDK team to investigate.\n\n","Url":"https://github.com/dotnet/sdk/issues/3838","RelatedDescription":"Open issue \"dotnet global tools failing to uninstall or update on 2.1-sdk-alpine\" (#3838)"},{"Id":"515375804","IsPullRequest":true,"CreatedAt":"2019-10-31T14:23:15","Actor":"dotnet-maestro[bot]","Number":"3837","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191030.15\r\n- **Date Produced**: 10/31/2019 12:30 AM\r\n- **Commit**: 35c10b82920baacbb3945fd952a0e49c4caec708\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19530.15\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19530.15\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3837","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3837)"},{"Id":"515327523","IsPullRequest":false,"CreatedAt":"2019-10-31T10:39:19","Actor":"shaulbehr","Number":"3836","RawContent":null,"Title":"dotnet build appears to succeed, but returns error code","State":"open","Body":"Environment: Linux Ubuntu 18.04\r\nDotnet SDK 3.0.100\r\n\r\ncommand line: `dotnet build soln.sln -r linux-x64 -o outputdir`\r\n\r\nBuild logs show normal output (including lots of warnings, but no actual errors), then:\r\n```\r\n    Build FAILED.\r\n```\r\nfollowed by a bunch more build output, then at the end:\r\n```\r\n    387 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:03:52.15\r\nFailing task since return code of [/usr/bin/dotnet build soln.sln -r linux-x64] was 1 while expected 0\r\n```\r\nIf you would like access to our repo so you can repro, contact me privately (shaul at lightsailed dot com)\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3836","RelatedDescription":"Open issue \"dotnet build appears to succeed, but returns error code\" (#3836)"},{"Id":"515026974","IsPullRequest":true,"CreatedAt":"2019-10-30T23:50:44","Actor":"dotnet-maestro[bot]","Number":"3834","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191030.5\r\n- **Date Produced**: 10/30/2019 9:20 PM\r\n- **Commit**: 4950751278293d59898be799c0115e0ad895747e\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.HostModel** -> 3.1.0-preview3.19530.5\r\n\r\n[marker]: <> (End:e0b7e874-2dc6-462b-dd42-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3834","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#3834)"},{"Id":"515042011","IsPullRequest":false,"CreatedAt":"2019-10-30T23:15:02","Actor":"thomaslevesque","Number":"3835","RawContent":null,"Title":"dotnet new hangs for several seconds after it completes","State":"open","Body":"Whenever I use `dotnet new`, it seems to hang for several seconds after it completes.\r\nFor instance, if I do `dotnet new sln`, it prints _\"The template \"Solution file\" was created successfully.\"_ almost immediately, but doesn't return until several seconds later (sometimes up to 10 seconds). The same happens with other templates, I just picked this one because it's a very simple one.\r\n\r\nUsing .NET Core SDK 3.0.100\r\n\r\nUsing `--diagnostic` doesn't give any more detail, it just prints _\"Telemetry is: Enabled\"_","Url":"https://github.com/dotnet/sdk/issues/3835","RelatedDescription":"Open issue \"dotnet new hangs for several seconds after it completes\" (#3835)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"517169249","IsPullRequest":false,"CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Number":"134","RawContent":null,"Title":".NET Core 3.1.0 Preview 2","State":"open","Body":".NET Core 3.1.0 Preview 2 is available and https://github.com/dotnet/core/issues/3744 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 2, either responding to https://github.com/dotnet/core/issues/3744, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 2\" (#134)"},{"Id":"514753283","IsPullRequest":false,"CreatedAt":"2019-10-30T15:14:43","Actor":"jaredpar","Number":"133","RawContent":null,"Title":"Repository Consolidation Timeline","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Open issue \"Repository Consolidation Timeline\" (#133)"},{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"},{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Cumulative Update for Windows 10 version 1903 and version 1909](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/)\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework September 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/)\r\n* [.NET Framework September 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"},{"Id":"489344106","IsPullRequest":false,"CreatedAt":"2019-09-04T19:14:05","Actor":"leecow","Number":"120","RawContent":null,"Title":".NET Core 3.0 Preview 9","State":"open","Body":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Open issue \".NET Core 3.0 Preview 9\" (#120)"},{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1191356637019291648","CreatedAt":"2019-11-04T14:08:51+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 3.1 Preview 2 https://t.co/OUrP9wELXG","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":94,"FavoriteCount":51,"RawContent":null},{"Id":"1191356231392399360","CreatedAt":"2019-11-04T14:07:14+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9r53NV Core updates in .NET Core 3.1 Preview 2 https://t.co/38WB9vOfY3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":56,"FavoriteCount":35,"RawContent":null},{"Id":"1189954708062064640","CreatedAt":"2019-10-31T17:18:05+00:00","UserScreenname":"dotnet","Text":"Developing UWP, WPF, or Windows Forms apps? Now you can release them more quickly and simply while still gathering… https://t.co/aCE3B1jsEA","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":64,"FavoriteCount":25,"RawContent":null},{"Id":"1189639377346891777","CreatedAt":"2019-10-30T20:25:04+00:00","UserScreenname":"dotnet","Text":"PSA: Timeline for .NET Core Repository Consolidation https://t.co/O7KGEEbX2q","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":48,"FavoriteCount":22,"RawContent":null},{"Id":"1189638838492123137","CreatedAt":"2019-10-30T20:22:56+00:00","UserScreenname":"dotnet","Text":"Introducing Orleans 3.0 https://t.co/qgGUHW3w7m","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":233,"FavoriteCount":97,"RawContent":null},{"Id":"1189628658782265344","CreatedAt":"2019-10-30T19:42:29+00:00","UserScreenname":"dotnet","Text":"Find out what it takes to build with #dotNET for #ApacheSpark in just a few short video #tutorials! \n\nCheck 'em out… https://t.co/z0XjfksX8U","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":23,"FavoriteCount":11,"RawContent":null},{"Id":"1189245263258542080","CreatedAt":"2019-10-29T18:19:00+00:00","UserScreenname":"dotnet","Text":"Watch these #dotNET video tutorials for an introduction to #VisualStudio and #GetStarted in just 5 mins! Check it o… https://t.co/lYkmdY8uyR","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":19,"FavoriteCount":5,"RawContent":null},{"Id":"1189226825098190856","CreatedAt":"2019-10-29T17:05:44+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnK9Pxg","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":11,"FavoriteCount":6,"RawContent":null},{"Id":"1188904996751982592","CreatedAt":"2019-10-28T19:46:54+00:00","UserScreenname":"dotnet","Text":"Explore the world of #EntityFramework and #dotNET through these quick and easy 101 video #tutorials!… https://t.co/xEeBCG4KFk","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":54,"FavoriteCount":20,"RawContent":null},{"Id":"1187781254680403968","CreatedAt":"2019-10-25T17:21:33+00:00","UserScreenname":"dotnet","Text":"Discover what you can do with #Docker and #dotNET in just a few short video #tutorials! https://t.co/OUzFnxoat0 https://t.co/mX3ch9GLcs","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":63,"FavoriteCount":32,"RawContent":null},{"Id":"1187431317467729922","CreatedAt":"2019-10-24T18:11:02+00:00","UserScreenname":"dotnet","Text":"Create your first #WinForms or #WPF app with #dotNETCore in just a few minutes! Watch here: https://t.co/rTbIhRmAJD https://t.co/kkC5Pb5r2g","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":52,"FavoriteCount":21,"RawContent":null}]}},"RunOn":"2019-11-05T05:30:38.4517335Z","RunDurationInMilliseconds":16033}