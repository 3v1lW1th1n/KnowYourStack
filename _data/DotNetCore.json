{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework June 27, 2019 Cumulative Update for Windows 10 version 1903","PublishedOn":"2019-06-27T18:01:46+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we released the June 2019 Cumulative Update for .NET Framework 3.5 and 4.8 on Windows 10 version 1903.\nQuality and Reliability\nThis release contains the following quality and reliability...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-june-27-2019-cumulative-update-for-windows-10-version-1903/","RawContent":null},{"Title":"Help us shape the future of .NET for Apache Spark","PublishedOn":"2019-06-20T17:58:41+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Apache Spark™ is a general-purpose distributed processing engine for analytics over large data set typically terabytes or petabytes of data. Apache Spark can be used for processing batches of data,...","Href":"https://devblogs.microsoft.com/dotnet/help-us-shape-the-future-of-net-for-apache-spark/","RawContent":null},{"Title":"Create interactive documentation with the new Try .NET template","PublishedOn":"2019-06-20T16:05:37+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"In our previous post, we announced dotnet try a global tool which allows developers to create interactive workshops and documentation. Tutorials created with dotnet try let users start learning...","Href":"https://devblogs.microsoft.com/dotnet/create-interactive-documentation-with-the-new-try-net-template/","RawContent":null},{"Title":".NET Framework June 2019 Preview of Quality Rollup","PublishedOn":"2019-06-19T00:12:52+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"Today, we are releasing the June 2019 Preview of Quality Rollup.\nQuality and Reliability\nThis release contains the following quality and reliability improvements.\nWPF1\nAddresses an issue in which...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-june-2019-preview-of-quality-rollup/","RawContent":null},{"Title":"The Evolving Infrastructure of .NET Core","PublishedOn":"2019-06-18T18:11:59+00:00","CommentsCount":28,"FacebookCount":0,"Summary":"With .NET Core 3.0 Preview 6 out the door, we thought it would be useful to take a brief look at the history of our infrastructure systems and the significant improvements that have been made in the...","Href":"https://devblogs.microsoft.com/dotnet/the-evolving-infrastructure-of-net-core/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.0 Preview 6 and Entity Framework 6.3 Preview 6","PublishedOn":"2019-06-13T20:35:52+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"New previews of the next versions of EF Core and EF 6 are now available on NuGet.Org.\nWhat is new in EF Core 3.0 Preview 6\nIn recent months, a lot of our efforts have been focused on a new LINQ...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-0-preview-6-and-entity-framework-6-3-preview-6/","RawContent":null},{"Title":"Try the new System.Text.Json APIs","PublishedOn":"2019-06-13T17:39:05+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"For .NET Core 3.0, we&#8217;re shipping a brand new namespace called System.Text.Json with support for a reader/writer, a document object model (DOM), and a serializer. In this blog post, I&#8217;m...","Href":"https://devblogs.microsoft.com/dotnet/try-the-new-system-text-json-apis/","RawContent":null},{"Title":"Announcing .NET Core 3.0 Preview 6","PublishedOn":"2019-06-12T17:00:14+00:00","CommentsCount":41,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3.0 Preview 6. It includes updates for compiling assemblies for improved startup, optimizing applications for size with linker and EventPipe improvements....","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-6/","RawContent":null},{"Title":"Announcing ML.NET 1.1 and Model Builder updates (Machine Learning for .NET)","PublishedOn":"2019-06-11T17:16:17+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform machine learning framework (Windows, Linux, macOS) for .NET developers.\nML.NET offers Model Builder Model Builder (a simple UI tool for Visual Studio) and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-1-and-model-builder-updates-machine-learning-for-net/","RawContent":null},{"Title":"Migrating a Sample WPF App to .NET Core 3 (Part 2)","PublishedOn":"2019-06-10T15:23:35+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"In part 1 of this blog series, I began the process of porting a sample WPF app to .NET Core. In that post, I described the .NET Core migration process as having four steps:\nWe previously went through...","Href":"https://devblogs.microsoft.com/dotnet/migrating-a-sample-wpf-app-to-net-core-3-part-2/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9814702366","Type":"PullRequestEvent","CreatedAt":"2019-06-13T10:49:31","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Opened pull request \"(GH-111) Update SourceLink location\" (#147) at dotnet/foundation","RelatedBody":""},{"Id":"9812903344","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:28:59","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Merged pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."},{"Id":"9812878014","Type":"PullRequestEvent","CreatedAt":"2019-06-13T06:23:52","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Opened pull request \"Update Cake Project Contacts\" (#146) at dotnet/foundation","RelatedBody":"@jongalloway just noticed that this wasn't up to date."},{"Id":"9596433106","Type":"PullRequestEvent","CreatedAt":"2019-05-09T18:35:22","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Merged pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."},{"Id":"9583176004","Type":"PullRequestEvent","CreatedAt":"2019-05-08T04:08:41","Actor":"mitchelsellers","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Opened pull request \"Edits to DNN Platform Information\" (#145) at dotnet/foundation","RelatedBody":"Edits to reflect changes in repository structure with recent modifications to the overall project structure."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"9625371249","Type":"IssuesEvent","CreatedAt":"2019-05-14T19:27:47","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/115","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#115) at dotnet/announcements","RelatedBody":"The following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9625048568","Type":"IssuesEvent","CreatedAt":"2019-05-14T18:38:24","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Opened issue \"May 2019 .NET Updates\" (#114) at dotnet/announcements","RelatedBody":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"9624436763","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:06:25","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624425934","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"},{"Id":"9624413462","Type":"IssuesEvent","CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/Home/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://* dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9938937960","Type":"PullRequestEvent","CreatedAt":"2019-07-03T04:29:30","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25547","RelatedDescription":"Opened pull request \"Cleanup IL linker heuristic usage\" (#25547) at dotnet/coreclr","RelatedBody":"Prep-work for using mainstream IL linker"},{"Id":"9938281440","Type":"PullRequestEvent","CreatedAt":"2019-07-03T01:37:34","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25546","RelatedDescription":"Opened pull request \"Delete some dead code\" (#25546) at dotnet/coreclr","RelatedBody":""},{"Id":"9938256076","Type":"PullRequestEvent","CreatedAt":"2019-07-03T01:30:44","Actor":"davmason","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/25518","RelatedDescription":"Merged pull request \"Merge ReadyToRunInfo::GenericMethodIterator with ReadyToRunInfo::MethodIterator\" (#25518) at dotnet/coreclr","RelatedBody":""},{"Id":"9938055194","Type":"IssuesEvent","CreatedAt":"2019-07-03T00:31:03","Actor":"VSadov","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/22739","RelatedDescription":"Closed issue \"Test failure: GC_Scenarios._SingLinkList_singlinkstay_singlinkstay_/_SingLinkList_singlinkstay_singlinkstay_sh\" (#22739) at dotnet/coreclr","RelatedBody":"Opened on behalf of @AriNuer\n\nThe test `GC_Scenarios._SingLinkList_singlinkstay_singlinkstay_/_SingLinkList_singlinkstay_singlinkstay_sh` has failed.\n\nFailure Message:\n```\n/home/helixbot/dotnetbuild/work/11eecfa8-0bf4-4962-86f5-21abd5a43e05/Work/39c1a221-bd46-4b26-90aa-770810660a60/Exec/SingLinkList/singlinkstay/singlinkstay.sh: line 259:  4587 Aborted                 (core dumped) $LAUNCHER $ExePath \\\"${CLRTestExecutionArguments[@]}\\\"\n/n/nReturn code:      1/nRaw output file:      /home/helixbot/dotnetbuild/work/11eecfa8-0bf4-4962-86f5-21abd5a43e05/Work/39c1a221-bd46-4b26-90aa-770810660a60/Exec/Reports/GC.Scenarios/SingLinkList/singlinkstay/singlinkstay.output.txt/nRaw output:/nBEGIN EXECUTION\n/home/helixbot/dotnetbuild/work/11eecfa8-0bf4-4962-86f5-21abd5a43e05/Payload/corerun singlinkstay.exe ''\nTest should return with ExitCode 100 ...\nExpected: 100\nActual: 134\nEND EXECUTION - FAILED\nTest Harness Exitcode is : 1\n/nTo run the test:/n> set CORE_ROOT=/home/helixbot/dotnetbuild/work/11eecfa8-0bf4-4962-86f5-21abd5a43e05/Payload/n> /home/helixbot/dotnetbuild/work/11eecfa8-0bf4-4962-86f5-21abd5a43e05/Work/39c1a221-bd46-4b26-90aa-770810660a60/Exec/SingLinkList/singlinkstay/singlinkstay.sh/n\nExpected: True\nActual:   False\n```\n\nStack Trace:\n```\n   at GC_Scenarios._SingLinkList_singlinkstay_singlinkstay_._SingLinkList_singlinkstay_singlinkstay_sh() in /__w/1/s/bin/tests/Linux.arm64.Release/TestWrappers/GC.Scenarios/GC.Scenarios.XUnitWrapper.cs:line 33149\n```\n\nBuild : 3.0 - 20190220.73 (Core Tests)\nFailing configurations:\n- Debian.9.Arm64-arm64\n  - \nDetais:\nhttps://mc.dot.net/#/product/netcore/30/source/official~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/type/test~2Ffunctional~2Fcli~2F/build/20190220.73/workItem/GC.Scenarios/analysis/xunit/GC_Scenarios._SingLinkList_singlinkstay_singlinkstay_~2F_SingLinkList_singlinkstay_singlinkstay_sh"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9939117558","Type":"PullRequestEvent","CreatedAt":"2019-07-03T05:23:24","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11719","RelatedDescription":"Merged pull request \"[master] Update dependencies from aspnet/AspNetCore\" (#11719) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190702.6\r\n- **Date Produced**: 7/3/2019 4:52 AM\r\n- **Commit**: 3c0fb1a3f8609aae3165d43cb61fed10d9e1bf4f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19352.6\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n"},{"Id":"9939031879","Type":"PullRequestEvent","CreatedAt":"2019-07-03T04:58:32","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/11717","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/core-setup\" (#11717) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190702.18\r\n- **Date Produced**: 7/3/2019 4:26 AM\r\n- **Commit**: 12e23a26553790a3e4bf3565cf00a6d3e7e4146e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27902-18\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n"},{"Id":"9939015137","Type":"PullRequestEvent","CreatedAt":"2019-07-03T04:53:09","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11719","RelatedDescription":"Opened pull request \"[master] Update dependencies from aspnet/AspNetCore\" (#11719) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190702.6\r\n- **Date Produced**: 7/3/2019 4:52 AM\r\n- **Commit**: 3c0fb1a3f8609aae3165d43cb61fed10d9e1bf4f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19352.6\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n"},{"Id":"9939005380","Type":"PullRequestEvent","CreatedAt":"2019-07-03T04:50:10","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11718","RelatedDescription":"Opened pull request \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#11718) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190702.19\r\n- **Date Produced**: 7/3/2019 4:49 AM\r\n- **Commit**: fbe9466dddee8b3bbde6b706598d8f83802d08ce\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27902-19\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n"},{"Id":"9938867423","Type":"PullRequestEvent","CreatedAt":"2019-07-03T04:08:09","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11717","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/core-setup\" (#11717) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190702.17\r\n- **Date Produced**: 7/3/2019 4:07 AM\r\n- **Commit**: 12e23a26553790a3e4bf3565cf00a6d3e7e4146e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27902-17\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n"},{"Id":"9938778395","Type":"PullRequestEvent","CreatedAt":"2019-07-03T03:44:14","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/11716","RelatedDescription":"Opened pull request \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#11716) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190702.5\r\n- **Date Produced**: 7/3/2019 3:43 AM\r\n- **Commit**: c966fffb329d8261b762abd587d606f2ac80697c\r\n- **Branch**: refs/heads/release/3.0-preview7\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19352.5\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"9937845615","Type":"IssuesEvent","CreatedAt":"2019-07-02T23:31:20","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1295","RelatedDescription":"Closed issue \"Consider adding AesGcm to .NET Standard 2.1\" (#1295) at dotnet/standard","RelatedBody":""},{"Id":"9936537021","Type":"PullRequestEvent","CreatedAt":"2019-07-02T19:23:53","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1305","RelatedDescription":"Merged pull request \"Remove cancellation token from System.Data CloseAsync() methods\" (#1305) at dotnet/standard","RelatedBody":"Cherry-pick of https://github.com/dotnet/standard/pull/1304 for preview7\r\n\r\nCC @roji @terrajobst "},{"Id":"9936496971","Type":"PullRequestEvent","CreatedAt":"2019-07-02T19:17:19","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1305","RelatedDescription":"Opened pull request \"Remove cancellation token from System.Data CloseAsync() methods\" (#1305) at dotnet/standard","RelatedBody":"Cherry-pick of https://github.com/dotnet/standard/pull/1304 for preview7\r\n\r\nCC @roji @terrajobst "},{"Id":"9936477654","Type":"PullRequestEvent","CreatedAt":"2019-07-02T19:14:10","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1304","RelatedDescription":"Merged pull request \"Remove cancellation token from System.Data CloseAsync() methods\" (#1304) at dotnet/standard","RelatedBody":"Leftover from #1283, mirrors https://github.com/dotnet/corefx/pull/39070"},{"Id":"9936420668","Type":"PullRequestEvent","CreatedAt":"2019-07-02T19:04:50","Actor":"roji","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1304","RelatedDescription":"Opened pull request \"Remove cancellation token from System.Data CloseAsync() methods\" (#1304) at dotnet/standard","RelatedBody":"Leftover from #1283, mirrors https://github.com/dotnet/corefx/pull/39070"},{"Id":"9936420077","Type":"PullRequestEvent","CreatedAt":"2019-07-02T19:04:45","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1303","RelatedDescription":"Merged pull request \"Cherry pick changes to Standard for preview7\" (#1303) at dotnet/standard","RelatedBody":"Cherry picks https://github.com/dotnet/standard/pull/1283, https://github.com/dotnet/standard/pull/1300, and https://github.com/dotnet/standard/pull/1290 for preview7. CC @terrajobst @danmosemsft "},{"Id":"9936368313","Type":"PullRequestEvent","CreatedAt":"2019-07-02T18:56:33","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1303","RelatedDescription":"Opened pull request \"Cherry pick changes to Standard for preview7\" (#1303) at dotnet/standard","RelatedBody":"Cherry picks https://github.com/dotnet/standard/pull/1283, https://github.com/dotnet/standard/pull/1300, and https://github.com/dotnet/standard/pull/1290 for preview7. CC @terrajobst @danmosemsft "},{"Id":"9936323060","Type":"PullRequestEvent","CreatedAt":"2019-07-02T18:49:34","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1290","RelatedDescription":"Merged pull request \"Add string overloads to DbDataReader.Get*()\" (#1290) at dotnet/standard","RelatedBody":"See https://github.com/dotnet/corefx/issues/31595\r\n\r\nThis is the 3rd and last in this batch of System.Data changes.\r\n\r\nNote that for the naming and namespace for the new DataReaderExtensions class, see https://github.com/dotnet/corefx/pull/36123#issuecomment-475762481 and https://github.com/dotnet/corefx/pull/36123#discussion_r267625142."},{"Id":"9936231219","Type":"PullRequestEvent","CreatedAt":"2019-07-02T18:34:58","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1300","RelatedDescription":"Merged pull request \"Reduces System.Reflection.Emit to match CoreFX\" (#1300) at dotnet/standard","RelatedBody":"For .NET Standard 2.1 we planned to extend Reflection Emit match the .NET Framework API surface but we never got around adding those APIs in .NET Core 3.0. Given that these APIs are rarely used, the proposal is to remove them from the .NET Standard 2.1. Please note that this isn't a breaking change from .NET Standard 2.0 but it is a breaking change from earlier preview versions of .NET Standard 2.1.\r\n\r\nSee issue dotnet/corefx#36716 for details."},{"Id":"9935910256","Type":"PullRequestEvent","CreatedAt":"2019-07-02T17:45:20","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1283","RelatedDescription":"Merged pull request \"Add async methods in System.Data.Common, implement IAsyncDisposable\" (#1283) at dotnet/standard","RelatedBody":"***DO NOT MERGE until dotnet/corefx#39070 is merged***\r\n\r\n---\r\n\r\nThis brings over https://github.com/dotnet/corefx/issues/35012 (already merged for .NET Core 3.0) to .NET Standard 2.1.\r\n\r\nOne thing I noticed, is that in the corefx implementation the types have been updated to implement IAsyncDisposable, but in the ref they have not (although `DisposeAsync()` has been added). Can someone please confirm whether the interface should get added there?"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9939027617","Type":"PullRequestEvent","CreatedAt":"2019-07-03T04:57:10","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/39132","RelatedDescription":"Merged pull request \"Fix comments and ellipsis in code examples\" (#39132) at dotnet/corefx","RelatedBody":"Fix comments and ellipsis in code examples to make it copy-pasteable."},{"Id":"9938952270","Type":"PullRequestEvent","CreatedAt":"2019-07-03T04:33:58","Actor":"ericstj","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/39138","RelatedDescription":"Opened pull request \"Make System.Resources.Extensions use old System.Memory\" (#39138) at dotnet/corefx","RelatedBody":"System.Resources.Extensions needs to be loaded by Visual Studio and currently\r\nVS is still using an older copy of System.Memory and cannot upgrade.\r\n\r\n"},{"Id":"9938887135","Type":"PullRequestEvent","CreatedAt":"2019-07-03T04:13:58","Actor":"ericstj","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/39123","RelatedDescription":"Merged pull request \"Fix DateTimeOffsetConverterTests test\" (#39123) at dotnet/corefx","RelatedBody":"We're getting a sporadic failure in CI due from a DateTimeOffset TypeConverter test.  I believe the issue is that another test which changes the current culture to fr-FR runs before or concurrently and ends up affecting the test.  I've fixed that test to do the culture change in another process (as is done in every other such test), but just in case that doesn't fix it, I've also augmented the test helper class that represents a test case here to have a ToString that makes the xunit output more debuggable.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/39084 (hopefully)\r\n\r\ncc: @hughbe, @maryamariyan, @safern"},{"Id":"9938887125","Type":"IssuesEvent","CreatedAt":"2019-07-03T04:13:58","Actor":"ericstj","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/39084","RelatedDescription":"Closed issue \"ConvertTo_DestinationType_Success test failed in CI\" (#39084) at dotnet/corefx","RelatedBody":"https://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fpull~2F39078~2Fmerge/test~2Ffunctional~2Fcli~2Finnerloop~2F/20190701.19/workItem/System.ComponentModel.TypeConverter.Tests/analysis/xunit/System.ComponentModel.Tests.DateTimeOffsetConverterTests~2FConvertTo_DestinationType_Success\r\n```\r\nWindows.10.Amd64.ClientRS5.Open-x64-Debug\r\nGet Repro environment\r\nUnhandled Exception of Type Xunit.Sdk.AllException\r\nMessage :\r\nAssert.All() Failure: 1 out of 13 items in the collection did not pass.\r\n[3]: Item: System.ComponentModel.Tests.TypeConverterTestBase+ConvertTest\r\n     Xunit.Sdk.EqualException: Assert.Equal() Failure\r\n     Expected: 12/5/1998 10:30 PM +00:00\r\n     Actual:   05/12/1998 22:30 +00:00\r\n        at Xunit.Assert.Equal[T](T expected, T actual, IEqualityComparer`1 comparer) in C:\\\\projects\\\\xunit\\\\src\\\\xunit.assert\\\\Asserts\\\\EqualityAsserts.cs:line 41\r\n        at Xunit.Assert.Equal[T](T expected, T actual) in C:\\\\projects\\\\xunit\\\\src\\\\xunit.assert\\\\Asserts\\\\EqualityAsserts.cs:line 25\r\n        at System.ComponentModel.Tests.TypeConverterTestBase.AssertEqualInstanceDescriptor(Object expected, Object actual) in /_/src/System.ComponentModel.TypeConverter/tests/TypeConverterTestBase.cs:line 173\r\n        at System.ComponentModel.Tests.TypeConverterTestBase.<ConvertTo_DestinationType_Success>b__13_0(ConvertTest convertTest) in /_/src/System.ComponentModel.TypeConverter/tests/TypeConverterTestBase.cs:line 42\r\n        at Xunit.Assert.All[T](IEnumerable`1 collection, Action`1 action) in C:\\\\projects\\\\xunit\\\\src\\\\xunit.assert\\\\Asserts\\\\CollectionAsserts.cs:line 36\r\nStack Trace :\r\n   at System.ComponentModel.Tests.TypeConverterTestBase.ConvertTo_DestinationType_Success() in /_/src/System.ComponentModel.TypeConverter/tests/TypeConverterTestBase.cs:line 31\r\n```"},{"Id":"9938668274","Type":"PullRequestEvent","CreatedAt":"2019-07-03T03:17:09","Actor":"geoffkizer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/39107","RelatedDescription":"Merged pull request \"clean up HTTP2 protocol exception handling\" (#39107) at dotnet/corefx","RelatedBody":"(1) Distinguish between connection-level protocol exceptions and stream-level protocol exceptions\r\n(2) Ensure that Http2ConnectionException is only used for actual connection errors; use HttpRequestException in other situations\r\n(3) Fix a couple related test issues\r\n\r\nHopefully this helps with diagnosing issues in #38911 \r\n\r\n@dotnet/ncl "},{"Id":"9938575712","Type":"PullRequestEvent","CreatedAt":"2019-07-03T02:53:37","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/39045","RelatedDescription":"Merged pull request \"Avoid extra allocation and interface calls in Append\" (#39045) at dotnet/corefx","RelatedBody":"Small tweak to Enumerable.Append to avoid an unnecessary enumerator allocation, avoid iterating through that enumerator via an interface, and avoid an unnecessary method on a generic class.\r\n\r\nBefore\r\n\r\n|  Method |      Mean |     Error |    StdDev |  Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|-------- |----------:|----------:|----------:|-------:|------:|------:|----------:|\r\n|     One |  26.35 ns | 0.2571 ns | 0.2279 ns | 0.0102 |     - |     - |      64 B |\r\n|     Ten |  90.30 ns | 0.3271 ns | 0.2900 ns | 0.0305 |     - |     - |     192 B |\r\n| Hundred | 589.73 ns | 5.5760 ns | 5.2158 ns | 0.1450 |     - |     - |     912 B |\r\n\r\n\r\nAfter\r\n\r\n|  Method |      Mean |     Error |    StdDev |  Gen 0 |  Gen 1 | Gen 2 | Allocated |\r\n|-------- |----------:|----------:|----------:|-------:|-------:|------:|----------:|\r\n|     One |  25.85 ns | 0.2254 ns | 0.2108 ns | 0.0102 |      - |     - |      64 B |\r\n|     Ten |  66.58 ns | 0.6744 ns | 0.5979 ns | 0.0254 |      - |     - |     160 B |\r\n| Hundred | 209.70 ns | 1.0881 ns | 1.0178 ns | 0.1402 | 0.0005 |     - |     880 B |\r\n\r\n\r\nBenchmark\r\n```C#\r\nusing BenchmarkDotNet.Attributes;\r\nusing BenchmarkDotNet.Running;\r\nusing System.Linq;\r\nusing System.Collections.Generic;\r\n\r\n[MemoryDiagnoser]\r\npublic class Program\r\n{\r\n    static void Main(string[] args) => BenchmarkSwitcher.FromTypes(new[] { typeof(Program) }).Run(args);\r\n\r\n    private IEnumerable<int> _one;\r\n    private IEnumerable<int> _ten;\r\n    private IEnumerable<int> _hundred;\r\n\r\n    [GlobalSetup]\r\n    public void GlobalSetup()\r\n    {\r\n        _one = Enumerable.Empty<int>().Append(1);\r\n\r\n        _ten = Enumerable.Empty<int>();\r\n        for (int i = 0; i < 10; i++) _ten = _ten.Append(i);\r\n\r\n        _hundred = Enumerable.Empty<int>();\r\n        for (int i = 0; i < 100; i++) _hundred = _hundred.Append(i);\r\n    }\r\n\r\n    [Benchmark] public List<int> One() => _one.ToList();\r\n    [Benchmark] public List<int> Ten() => _ten.ToList();\r\n    [Benchmark] public List<int> Hundred() => _hundred.ToList();\r\n}\r\n```\r\n\r\nPer the discussion in https://github.com/dotnet/corefx/pull/38975#discussion_r298195901\r\ncc: @timandy, @maryamariyan "},{"Id":"9938497377","Type":"PullRequestEvent","CreatedAt":"2019-07-03T02:34:07","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/39135","RelatedDescription":"Merged pull request \"Stop using EDI.Throw for shared exception objects in HTTP/2\" (#39135) at dotnet/corefx","RelatedBody":"Contributes to https://github.com/dotnet/corefx/issues/38911.  Avoids corrupting a stack trace by having multiple unrelated stacks merged together.\r\ncc: @geoffkizer \r\n\r\n(This doesn't address the question asked in https://github.com/dotnet/corefx/issues/38911#issuecomment-507890180.)"},{"Id":"9938204356","Type":"PullRequestEvent","CreatedAt":"2019-07-03T01:16:00","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/39137","RelatedDescription":"Opened pull request \"Ensure HttpClient.Get*Async helpers wrap IOExceptions\" (#39137) at dotnet/corefx","RelatedBody":"IOExceptions may emerge from the underlying response streams, but GetString/ByteArrayAsync should throw a wrapper HttpRequestException in this case.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/39118\r\ncc: @davidsh, @geoffkizer, @scalablecory, @wfurt"},{"Id":"9938193292","Type":"IssuesEvent","CreatedAt":"2019-07-03T01:12:41","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/39136","RelatedDescription":"Opened issue \"WinHttpHandler succeeds erroneously when receiving partial content\" (#39136) at dotnet/corefx","RelatedBody":"In this example, the server says it has a Content-Length of 5 but then only sends 2 bytes.  The built-in handlers in .NET Framework and .NET Core both fail appropriately, but WinHttpHandler ignores the discrepancy and returns the 2 bytes without error.\r\n```C#\r\nusing System;\r\nusing System.IO;\r\nusing System.Net;\r\nusing System.Net.Http;\r\nusing System.Net.Sockets;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\n\r\nclass Program\r\n{\r\n    static async Task Main()\r\n    {\r\n        using (var listener = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp))\r\n        {\r\n            listener.Bind(new IPEndPoint(IPAddress.Loopback, 0));\r\n            listener.Listen(1);\r\n            string uri = \"http://localhost:\" + ((IPEndPoint)listener.LocalEndPoint).Port;\r\n\r\n            using (var client = new HttpClient(new WinHttpHandler()))\r\n            {\r\n                Task<string> t = client.GetStringAsync(uri);\r\n                using (Socket server = listener.Accept())\r\n                using (var reader = new StreamReader(new NetworkStream(server)))\r\n                {\r\n                    while (!string.IsNullOrEmpty(reader.ReadLine())) ;\r\n\r\n                    //server.Send(Encoding.UTF8.GetBytes(\"HTTP/1.1 200 OK\\r\\nContent-Length: 5\\r\\n\\r\\nhello\")); // 1\r\n                    //server.Send(Encoding.UTF8.GetBytes(\"HTTP/1.1 200 OK\\r\\nContent-Length: 5\\r\\n\"));        // 2\r\n                    server.Send(Encoding.UTF8.GetBytes(\"HTTP/1.1 200 OK\\r\\nContent-Length: 5\\r\\n\\r\\nhe\"));  // 3\r\n\r\n                    server.Dispose();\r\n                    Console.WriteLine(await t);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\ncc: @davidsh"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9938845262","Type":"PullRequestEvent","CreatedAt":"2019-07-03T04:01:46","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36940","RelatedDescription":"Merged pull request \"Hang on applying code action on a single unopened file\" (#36940) at dotnet/roslyn","RelatedBody":"Fixes https://github.com/dotnet/roslyn/issues/36938\r\n\r\n`Microsoft.CodeAnalysis.EditorFeatures.Wpf.dll!Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.InvokeWorker(System.Func<Microsoft.CodeAnalysis.Document> getFromDocument, Microsoft.CodeAnalysis.Shared.Utilities.IProgressTracker progressTracker, System.Threading.CancellationToken cancellationToken) `\r\ncalls\r\n`EditHandler.Apply(Async)`\r\n\r\nApplyAsync has the only asynchronous call to \r\n```\r\n// ConfigureAwait(true) so we come back to the same thread as \t                \r\n// we do all application on the UI thread.\r\nvar text = await singleChangedDocument.GetTextAsync(cancellationToken).ConfigureAwait(true);\r\n```\r\nwhich could lead to a deadlock with the caller.\r\n  "},{"Id":"9938845250","Type":"IssuesEvent","CreatedAt":"2019-07-03T04:01:46","Actor":"ivanbasov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/36938","RelatedDescription":"Closed issue \"Hang on applying code action on a single unopened file\" (#36938) at dotnet/roslyn","RelatedBody":"VSF_TYPE_MARKDOWNTrying to invoke a quick action or intellisense sometimes causes VS to freeze and needs to be force closed.\n\nNo specific repro steps, it happens seemingly randomly a couple of times a day.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/624919/ui-hang.html\nVSTS ticketId: 938306_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 6/27/2019, 01:15 AM (5 days ago): <markdown><p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n</markdown>\nVisual Studio Feedback System on 7/1/2019, 05:04 PM (23 hours ago): <markdown><p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n</markdown>\next.par.bjorklund on 7/1/2019, 10:11 PM (18 hours ago): <p>I got frustrated yesterday and uninstalled IntelliCode and things have been better since then. I wouldn't say completely gone but happening less often and shorter time periods</p>\n\nGunnar Skogsholm on 7/2/2019, 06:49 AM (9 hours ago): I have also been experiencing this at various times, since VS2015 days.  A couple of releases have been better than others, but it's back now with 16.1.4\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"9938725719","Type":"PullRequestEvent","CreatedAt":"2019-07-03T03:30:50","Actor":"daxianji007","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36949","RelatedDescription":"Closed pull request \"Update incorrect seealso link\" (#36949) at dotnet/roslyn","RelatedBody":"Seems the seealso link is incorrect (or maybe outdated)."},{"Id":"9938716054","Type":"PullRequestEvent","CreatedAt":"2019-07-03T03:28:30","Actor":"daxianji007","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36949","RelatedDescription":"Opened pull request \"Update incorrect seealso link\" (#36949) at dotnet/roslyn","RelatedBody":"Seems the seealso link is incorrect (or maybe outdated)."},{"Id":"9938347296","Type":"PullRequestEvent","CreatedAt":"2019-07-03T01:55:46","Actor":"mairaw","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/36948","RelatedDescription":"Opened pull request \"Fix broken See also links\" (#36948) at dotnet/roslyn","RelatedBody":""},{"Id":"9938151323","Type":"IssuesEvent","CreatedAt":"2019-07-03T01:00:17","Actor":"TessenR","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/36947","RelatedDescription":"Opened issue \"Incorrect warnings reported for deconstruction with user-defined conversions and cannot be suppressed\" (#36947) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n\r\n```\r\nBranch master (21 Jun 2019)\r\nLatest commit 898bed by Heejae Chang:\r\nadded NFW to get some data on incremental parsing bug where source si� (#36620)\r\n\r\n* added NFW to get some data on incremental parsing bug where source size and tree size is different\r\n\r\n* more comments\r\n```\r\n\r\n**Steps to Reproduce**:\r\n\r\nCompile the following code:\r\n```cs\r\n#nullable enable\r\nclass C\r\n{\r\n  static void Main()\r\n  {\r\n      (B b1, B b2) = new C();\r\n  }\r\n\r\n  public extern void Deconstruct(out A? a1, out A a2);\r\n}\r\n\r\nclass A { }\r\nclass B { public static extern implicit operator B(A a); }\r\n```\r\n\r\n**Expected Behavior**:\r\n`warning CS8600: Converting null literal or possible null value to non-nullable type.` reported for the deconstruction source i.e. `new C()`.\r\nI believe it would be possible to suppress the warning if it is reported for `new C()`\r\n\r\n**Actual Behavior**:\r\nThe following two warnings are reported for the declaration expression `B b1`\r\n```\r\nwarning CS8600: Converting null literal or possible null value to non-nullable type.\r\nwarning CS8624: Argument of type 'B' cannot be used as an output of type 'A' for parameter 'a1' in 'void C.Deconstruct(out A? a1, out A a2)' due to differences in the nullability of reference types.\r\n```\r\nThe following warning is reported for the declaration expression `B b2`\r\n```\r\nwarning CS8624: Argument of type 'B' cannot be used as an output of type 'A' for parameter 'a2' in 'void C.Deconstruct(out A? a1, out A a2)' due to differences in the nullability of reference types.\r\n```\r\n\r\nIt's impossible to suppress any of these warnings as placing the suppression operator `!` anywhere on the left side of the assignment results in compilation errors.\r\n\r\n**Notes** \r\nReporting  `CS8600: Converting null literal or possible null value to non-nullable type.` for the declaration expression `B b1` seems strange and misleading as it's a declaration of a variable and null value cannot be assigned to it according to the conversion operator signature.\r\nI'm pretty sure `CS8624` warnings shouldn't be reported at all as there's no nullability mismatch between these types - they just aren't equal regardless of nullability annotations. Note that this warning is **not** reported if the conversion/assignment happens outside of a deconstruction e.g. `B b = (A) null; // CS8600 only`.\r\nNote that current location for these warnings also makes it completely impossible to suppress them via the suppression operator `!`"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9937420127","Type":"PullRequestEvent","CreatedAt":"2019-07-02T21:51:41","Actor":"nattress","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7581","RelatedDescription":"Opened pull request \"SuperIlc support for compiling from Crossgen .rsps\" (#7581) at dotnet/corert","RelatedBody":"Adds `compile-crossgen-rsp` command to SuperIlc which takes a response file (or a folder full of them) from a Crossgen command and transposes the arguments so that SuperIlc can re-run Crossgen / CPAOT. If the response file came from another machine (build lab, partner), the --rewrite-old-path and --rewrite-new-path parameters allow switching out the beginnings of directory names.\r\n\r\nThe intent of this command is to allow compiling more complex workloads where dependencies are not conveniently in a single folder, and each response file may have different arguments it passes to crossgen. The set of crossgen parameters we parse is not complete and was enough for the scenario I needed this tool for.\r\n\r\nRefactored the `Command` classes into a folder. Also I was seeing frequent unhandled exceptions since TaskCanceledExceptions from tasks are wrapped in AggregateException objects. Fortunately filters make it easy to tell the difference and just eat the `TaskCanceledException`."},{"Id":"9936679609","Type":"PullRequestEvent","CreatedAt":"2019-07-02T19:46:55","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7578","RelatedDescription":"Merged pull request \"Port https://github.com/dotnet/coreclr/pull/25531\" (#7578) at dotnet/corert","RelatedBody":""},{"Id":"9935308877","Type":"PullRequestEvent","CreatedAt":"2019-07-02T16:14:11","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7580","RelatedDescription":"Merged pull request \"Update dependencies\" (#7580) at dotnet/corert","RelatedBody":""},{"Id":"9934693191","Type":"PullRequestEvent","CreatedAt":"2019-07-02T14:57:57","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7579","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#7579) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @MichalStrehovsky"},{"Id":"9934246302","Type":"PullRequestEvent","CreatedAt":"2019-07-02T14:06:08","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7580","RelatedDescription":"Opened pull request \"Update dependencies\" (#7580) at dotnet/corert","RelatedBody":""},{"Id":"9934009432","Type":"PullRequestEvent","CreatedAt":"2019-07-02T13:36:51","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7579","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#7579) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9933909603","Type":"PullRequestEvent","CreatedAt":"2019-07-02T13:24:31","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7578","RelatedDescription":"Opened pull request \"Port https://github.com/dotnet/coreclr/pull/25531\" (#7578) at dotnet/corert","RelatedBody":""},{"Id":"9932512509","Type":"IssuesEvent","CreatedAt":"2019-07-02T09:59:29","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7577","RelatedDescription":"Opened issue \"VectorArrayInit test fails intermittently\" (#7577) at dotnet/corert","RelatedBody":"```\r\n       F:\\workspace\\_work\\1\\s\\tests_downloaded\\CoreCLR\\JIT\\SIMD\\VectorArrayInit_r\\\\*.dll \r\n                0 file(s) copied.\r\n        Expected: 100\r\n        Actual: -1073741819\r\n        END EXECUTION - FAILED\r\n        FAILED\r\n        Test Harness Exitcode is : 1\r\n```\r\n\r\nSeen in #7574 and in one of the iterations of #7549 (I think).\r\n\r\nI tried to get a local repro, but wasn't successful so far."},{"Id":"9932480728","Type":"PullRequestEvent","CreatedAt":"2019-07-02T09:55:08","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7571","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr,corefx\" (#7571) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @safern @kouvel"},{"Id":"9931672627","Type":"PullRequestEvent","CreatedAt":"2019-07-02T08:04:13","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7576","RelatedDescription":"Merged pull request \"Account for target renames in .NET Core 3.0 SDK\" (#7576) at dotnet/corert","RelatedBody":"Fixes #7575"},{"Id":"9931672610","Type":"IssuesEvent","CreatedAt":"2019-07-02T08:04:12","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/7575","RelatedDescription":"Closed issue \"dotnet publish seems broken when using Core 3.0 Preview 6 SDK\" (#7575) at dotnet/corert","RelatedBody":"The behavior of ``dotnet publish -r %RID%`` (assuming the CoreRT package is referenced) has changed after upgrading to preview 6 of the SDK.\r\nHere's what the output looks like when using previous versions of the SDK (including the latest stable 2.2 SDK):\r\n```\r\n├── netcoreappX.X/\r\n    └── %RID%/\r\n        ├── <managed output>\r\n        └── publish/\r\n            ├── native/ \r\n            ├── App.exe (native)\r\n            ├── App.pdb (native)\r\n            ├── <app content>\r\n            └── <native dependencies>\r\n```\r\n↑ The ``publish`` directory contains the native executable, along with the app's content. No managed assemblies.\r\n\r\nAnd this is what the output looks like after installing preview 6:\r\n```\r\n├── netcoreappX.X/\r\n    ├── %RID%/\r\n    │   ├── publish/\r\n    │   |   ├── <managed publish> (incl. all of .NET runtime)\r\n    │   |   └── App.pdb (native, while App.exe is a CoreCLR runtime host)\r\n    │   └── <managed publish>\r\n    └── native/\r\n        ├── App.exe\r\n        └── App.pdb\r\n```\r\n↑ The managed *publish* output ends up in both ``%RID%`` and ``%RID%/publish`` (which seems like an SDK issue to me). The native binary is only found in the ``native`` directory, and the directory itself is in the wrong location. The native pdb ends up in both ``%framework%/%RID%/publish`` and ``%framework%/native``."},{"Id":"9931029995","Type":"PullRequestEvent","CreatedAt":"2019-07-02T06:13:54","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7576","RelatedDescription":"Opened pull request \"Account for target renames in .NET Core 3.0 SDK\" (#7576) at dotnet/corert","RelatedBody":"Fixes #7575"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9938161415","Type":"PullRequestEvent","CreatedAt":"2019-07-03T01:03:09","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3390","RelatedDescription":"Opened pull request \"Support automatic Link metadata for Page and Resource items\" (#3390) at dotnet/sdk","RelatedBody":"Fix #2697 \r\n"},{"Id":"9937848715","Type":"PullRequestEvent","CreatedAt":"2019-07-02T23:32:09","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/3389","RelatedDescription":"Opened pull request \"Fix NullReferenceException in ResolvePackageFileConflicts\" (#3389) at dotnet/sdk","RelatedBody":"Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/941481"},{"Id":"9936581888","Type":"IssuesEvent","CreatedAt":"2019-07-02T19:31:08","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/3098","RelatedDescription":"Closed issue \"Remove old deps file generation logic\" (#3098) at dotnet/sdk","RelatedBody":"In #3086, we are refactoring the deps file generation logic.  For now, we are leaving both the old and the new logic in, and by default comparing the results of the two methods in order to ensure that the new logic produces the same results.\r\n\r\nAfter we've shipped a few previews like this, we should remove the old logic and entirely switch over to the new logic."},{"Id":"9936579762","Type":"IssuesEvent","CreatedAt":"2019-07-02T19:30:47","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/3126","RelatedDescription":"Closed issue \"Warn if project is missing both Desktop SDK and UseWPF/UseWinForms\" (#3126) at dotnet/sdk","RelatedBody":"Even if we have cool tooling that adds the appropriate stuff to a project file based on various actions in the IDE, there will still be users who manually edit their WinForms/WPF project files.\r\n\r\nWe should emit a warning under the following conditions:\r\n\r\n* `Microsoft.NET.Sdk.WindowsDesktop` is specified but there is no `UseWPF` or `UseWinForms`\r\n* `UseWPF` or `UseWinForms` is specified but the SDK attribute is not `Microsoft.NET.Sdk.WindowsDesktop`\r\n\r\nIn the first case, it would be great if the warning could say something to the effect of:\r\n\r\n\"Microsoft.NET.Sdk.WindowsDesktop is specified, but no corresponding UseWPF or UseWinForms property was found.\"\r\n\r\nIn the latter case, using WPF as an example, something to the effect of:\r\n\r\n\"UseWPF was specified but the SDK attribute is not Microsoft.NET.Sdk.WindowsDesktop\"\r\n\r\nNot sure if this is an SDK concern or not, but I figured I'd log it somewhere."}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-06-13T10:49:30","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Open PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2019-03-08T19:00:06","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"closed","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Closed issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"closed","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Closed issue \"Missing logo for Umbraco\" (#124)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2019-02-18T17:45:44","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"closed","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Closed issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"463538802","IsPullRequest":true,"CreatedAt":"2019-07-03T04:29:29","Actor":"jkotas","Number":"25547","RawContent":null,"Title":"Cleanup IL linker heuristic usage","State":"open","Body":"Prep-work for using mainstream IL linker","Url":"https://github.com/dotnet/coreclr/pull/25547","RelatedDescription":"Open PR \"Cleanup IL linker heuristic usage\" (#25547)"},{"Id":"463503324","IsPullRequest":true,"CreatedAt":"2019-07-03T01:37:32","Actor":"jkotas","Number":"25546","RawContent":null,"Title":"Delete some dead code","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25546","RelatedDescription":"Open PR \"Delete some dead code\" (#25546)"},{"Id":"462864265","IsPullRequest":true,"CreatedAt":"2019-07-03T01:30:43","Actor":"davmason","Number":"25518","RawContent":null,"Title":"Merge ReadyToRunInfo::GenericMethodIterator with ReadyToRunInfo::MethodIterator","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25518","RelatedDescription":"Closed or merged PR \"Merge ReadyToRunInfo::GenericMethodIterator with ReadyToRunInfo::MethodIterator\" (#25518)"},{"Id":"463479028","IsPullRequest":true,"CreatedAt":"2019-07-02T23:33:15","Actor":"hoyosjs","Number":"25545","RawContent":null,"Title":"Fixes publishing to dotnet/versions","State":"open","Body":"Validation ~https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=2820350~\r\nhttps://devdiv.visualstudio.com/DefaultCollection/DevDiv/_build/results?buildId=2820681","Url":"https://github.com/dotnet/coreclr/pull/25545","RelatedDescription":"Open PR \"Fixes publishing to dotnet/versions\" (#25545)"},{"Id":"463463922","IsPullRequest":true,"CreatedAt":"2019-07-02T22:31:40","Actor":"brianrob","Number":"25544","RawContent":null,"Title":"Add a new CompilationVerbose ETW Keyword","State":"open","Body":"Add a new CompilationVerbose ETW keyword and move the R2RGetEntryPoint event under this keyword.  This allows us to continue enabling Verbose events on the .NET runtime provider (which we've done for a long time) without significantly perturbing the results with this very verbose event.\r\n\r\nThe R2RGetEntryPoint event as well as other verbose compilation events, such as a tiered compilation counter hit event, can be added to this keyword in the future.\r\n\r\nFixes #25492 ","Url":"https://github.com/dotnet/coreclr/pull/25544","RelatedDescription":"Open PR \"Add a new CompilationVerbose ETW Keyword\" (#25544)"},{"Id":"463343027","IsPullRequest":true,"CreatedAt":"2019-07-02T22:13:36","Actor":"MattGal","Number":"25540","RawContent":null,"Title":"Fix all remaining Python 2 Helix Docker images","State":"closed","Body":"This should finish off updating all of CoreCLR's images to versions supporting python 3 from https://github.com/dotnet/dotnet-buildtools-prereqs-docker (also saves some time by preinstalling virtualenv stuff)","Url":"https://github.com/dotnet/coreclr/pull/25540","RelatedDescription":"Closed or merged PR \"Fix all remaining Python 2 Helix Docker images\" (#25540)"},{"Id":"463432120","IsPullRequest":true,"CreatedAt":"2019-07-02T20:56:52","Actor":"adiaaida","Number":"25543","RawContent":null,"Title":"[wip] [no merge] Perf test","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25543","RelatedDescription":"Open PR \"[wip] [no merge] Perf test\" (#25543)"},{"Id":"463424346","IsPullRequest":true,"CreatedAt":"2019-07-02T20:47:29","Actor":"hoyosjs","Number":"25541","RawContent":null,"Title":"Sign debug DLL's with tool certs","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25541","RelatedDescription":"Closed or merged PR \"Sign debug DLL's with tool certs\" (#25541)"},{"Id":"463336487","IsPullRequest":true,"CreatedAt":"2019-07-02T16:56:12","Actor":"briansull","Number":"25539","RawContent":null,"Title":"Introduce a \"PerfScore\" rating in the JIT disassembly for each method","State":"open","Body":"This rating that estimated the execution costs of each instruction and also takes into\r\naccounts for the BasicBlock weights and yields a single score that can be used to judge the\r\noverall execution throughput and code quality of the generated code.\r\n\r\nThe inlining of methods will cause a score to increase, so this can't be used to directly compare\r\noptimized vs. non-optimized code quality.  We are not modeling instruction scheduling or the\r\nexact latency of memory reads feeding into their next use.  Instead we just model a simplistic\r\nfixed read latency, with a small benefit for reads from the stack.\r\n\r\nEstimates for the x64 instruction throughput are based upon data for the Intel Skylake architecture.","Url":"https://github.com/dotnet/coreclr/pull/25539","RelatedDescription":"Open PR \"Introduce a \"PerfScore\" rating in the JIT disassembly for each method\" (#25539)"},{"Id":"463429186","IsPullRequest":false,"CreatedAt":"2019-07-02T15:52:51","Actor":"SteamUpdate","Number":"25542","RawContent":null,"Title":"Optimization of Array.FindAll","State":"open","Body":"For `Array` in `dotnet framework` LINQ method chain `Where.ToArray` running\r\nslower than `Array.Find`.\r\n\r\n<details>\r\n    <summary>Benchmark for dotnet framework</summary>\r\n\r\n### Code\r\n```csharp\r\n[ClrJob]\r\n[MedianColumn, MemoryDiagnoser]\r\npublic class Default\r\n{\r\n    private Entity[] array;\r\n\r\n    [Params(10, 100, 1000)]\r\n    public int N { get; set; }\r\n\r\n    [GlobalSetup]\r\n    public void Setup()\r\n    {\r\n        array = new Entity[N];\r\n        for (var i = 0; i < N; i++)\r\n        {\r\n            var entity = new Entity\r\n            {\r\n                SomeInt = i,\r\n                SomeStr = i.ToString()\r\n            };\r\n            array[i] = entity;\r\n        }\r\n    }\r\n\r\n    [Benchmark]\r\n    public Entity[] Common()\r\n    {\r\n        return array.Where(q => q.SomeInt % 2 == 0).ToArray();\r\n    }\r\n\r\n    [Benchmark]\r\n    public Entity[] Optimized()\r\n    {\r\n        return Array.FindAll(array, q => q.SomeInt % 2 == 0);\r\n    }\r\n}\r\n```\r\n\r\n### Result\r\n``` ini\r\n\r\nBenchmarkDotNet=v0.11.5, OS=Windows 10.0.14393.3025 (1607/AnniversaryUpdate/Redstone1)\r\nIntel Core i5-8500 CPU 3.00GHz (Coffee Lake), 1 CPU, 6 logical and 6 physical cores\r\nFrequency=2929688 Hz, Resolution=341.3333 ns, Timer=TSC\r\n  [Host] : .NET Framework 4.7.2 (CLR 4.0.30319.42000), 64bit RyuJIT-v4.7.3416.0\r\n  Clr    : .NET Framework 4.7.2 (CLR 4.0.30319.42000), 64bit RyuJIT-v4.7.3416.0\r\n\r\nJob=Clr  Runtime=Clr  \r\n\r\n```\r\n|    Method |    N |        Mean |      Error |     StdDev |      Median |  Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|---------- |----- |------------:|-----------:|-----------:|------------:|-------:|------:|------:|----------:|\r\n|    **Common** |   **10** |    **225.8 ns** |  **1.6291 ns** |  **1.4441 ns** |    **225.4 ns** | **0.0558** |     **-** |     **-** |     **264 B** |\r\n| Optimized |   10 |    106.5 ns |  0.9207 ns |  0.8612 ns |    106.7 ns | 0.0525 |     - |     - |     248 B |\r\n|    **Common** |  **100** |  **1,286.9 ns** | **10.7707 ns** | **10.0749 ns** |  **1,283.6 ns** | **0.3357** |     **-** |     **-** |    **1592 B** |\r\n| Optimized |  100 |    652.3 ns |  5.0953 ns |  4.7662 ns |    651.3 ns | 0.3338 |     - |     - |    1576 B |\r\n|    **Common** | **1000** | **10,697.2 ns** | **86.2666 ns** | **80.6938 ns** | **10,686.0 ns** | **2.6245** |     **-** |     **-** |   **12435 B** |\r\n| Optimized | 1000 |  5,155.9 ns | 47.2275 ns | 44.1766 ns |  5,142.3 ns | 2.6245 |     - |     - |   12417 B |\r\n\r\n</details>\r\n\r\nIn `dotnet core` behaviour is different. LINQ methods still running slower, but consume less memory.\r\n\r\n<details>\r\n    <summary>Benchmark for .NET Core 2.2.3</summary>\r\n\r\n### Code\r\n```csharp\r\n[CoreJob]\r\n[MedianColumn, MemoryDiagnoser]\r\npublic class WithoutOptimization\r\n{\r\n    private Entity[] array;\r\n\r\n    [Params(10, 100, 1000)]\r\n    public int N { get; set; }\r\n\r\n    [GlobalSetup]\r\n    public void Setup()\r\n    {\r\n        array = new Entity[N];\r\n        for (var i = 0; i < N; i++)\r\n        {\r\n            var entity = new Entity\r\n            {\r\n                SomeInt = i,\r\n                SomeStr = i.ToString()\r\n            };\r\n            array[i] = entity;\r\n        }\r\n    }\r\n\r\n    [Benchmark]\r\n    public Entity[] Common()\r\n    {\r\n        return array.Where(q => q.SomeInt % 2 == 0).ToArray();\r\n    }\r\n\r\n    [Benchmark]\r\n    public Entity[] Optimized()\r\n    {\r\n        return Array.FindAll(array, q => q.SomeInt % 2 == 0);\r\n    }\r\n}\r\n```\r\n\r\n### Result\r\n``` ini\r\n\r\nBenchmarkDotNet=v0.11.5, OS=Windows 10.0.14393.3025 (1607/AnniversaryUpdate/Redstone1)\r\nIntel Core i5-8500 CPU 3.00GHz (Coffee Lake), 1 CPU, 6 logical and 6 physical cores\r\nFrequency=2929688 Hz, Resolution=341.3333 ns, Timer=TSC\r\n.NET Core SDK=2.2.105\r\n  [Host] : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT\r\n  Core   : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT\r\n\r\nJob=Core  Runtime=Core  \r\n\r\n```\r\n|    Method |    N |       Mean |      Error |     StdDev |     Median |  Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|---------- |----- |-----------:|-----------:|-----------:|-----------:|-------:|------:|------:|----------:|\r\n|    **Common** |   **10** |   **328.7 ns** |  **1.6330 ns** |  **1.4476 ns** |   **329.1 ns** | **0.0539** |     **-** |     **-** |     **256 B** |\r\n| Optimized |   10 |   113.8 ns |  0.3694 ns |  0.3084 ns |   113.9 ns | 0.0525 |     - |     - |     248 B |\r\n|    **Common** |  **100** | **1,103.7 ns** |  **5.8636 ns** |  **5.4848 ns** | **1,103.5 ns** | **0.2518** |     **-** |     **-** |    **1192 B** |\r\n| Optimized |  100 |   637.9 ns |  3.4570 ns |  3.2337 ns |   638.0 ns | 0.3338 |     - |     - |    1576 B |\r\n|    **Common** | **1000** | **6,251.6 ns** | **52.5366 ns** | **49.1428 ns** | **6,244.0 ns** | **1.8082** |     **-** |     **-** |    **8536 B** |\r\n| Optimized | 1000 | 4,767.0 ns | 37.9155 ns | 35.4662 ns | 4,755.5 ns | 2.6245 |     - |     - |   12416 B |\r\n\r\n</details>\r\n\r\nThis is due to the fact that the LINQ method `ToArray` uses the following structures:\r\n- [ArrayBuilder](https://github.com/dotnet/corefx/blob/master/src/Common/src/System/Collections/Generic/ArrayBuilder.cs)\r\n- [LargeArrayBuillder](https://github.com/dotnet/corefx/blob/master/src/Common/src/System/Collections/Generic/LargeArrayBuilder.SpeedOpt.cs)\r\n- [CopyPosition](https://github.com/dotnet/corefx/blob/master/src/Common/src/System/Collections/Generic/LargeArrayBuilder.cs)\r\n\r\nI copied code of those structures into my code and wrote next implementation\r\n\r\n```csharp\r\npublic static class ArrayMethods\r\n{\r\n    public static T[] FindAll<T>(T[] array, Predicate<T> match)\r\n    {\r\n        if (array == null)\r\n        {\r\n            throw new ArgumentNullException(nameof(array));\r\n        }\r\n\r\n        if (match == null)\r\n        {\r\n            throw new ArgumentNullException(nameof(match));\r\n        }\r\n        var builder = new LargeArrayBuilder<T>(true);\r\n        for (int index = 0; index < array.Length; ++index)\r\n        {\r\n            if (match(array[index]))\r\n                builder.Add(array[index]);\r\n        }\r\n        return builder.ToArray();\r\n    }\r\n}\r\n```\r\n\r\nNow `FindAll` consumes as much memory as LINQ `ToArray`\r\n\r\n<details>\r\n    <summary>Benchmark for .NET Core 2.2.3 with Array Optimization</summary>\r\n\r\n### Code\r\n```csharp\r\n[CoreJob]\r\n[MedianColumn, MemoryDiagnoser]\r\npublic class WithOptimization\r\n{\r\n    private Entity[] array;\r\n\r\n    [Params(10, 100, 1000)]\r\n    public int N { get; set; }\r\n\r\n    [GlobalSetup]\r\n    public void Setup()\r\n    {\r\n        array = new Entity[N];\r\n        for (var i = 0; i < N; i++)\r\n        {\r\n            var entity = new Entity\r\n            {\r\n                SomeInt = i,\r\n                SomeStr = i.ToString()\r\n            };\r\n            array[i] = entity;\r\n        }\r\n    }\r\n\r\n    [Benchmark]\r\n    public Entity[] Common()\r\n    {\r\n        return array.Where(q => q.SomeInt % 2 == 0).ToArray();\r\n    }\r\n\r\n    [Benchmark]\r\n    public Entity[] Optimized()\r\n    {\r\n        return ArrayMethods.FindAll(array, q => q.SomeInt % 2 == 0);\r\n    }\r\n}\r\n```\r\n\r\n### Result\r\n``` ini\r\n\r\nBenchmarkDotNet=v0.11.5, OS=Windows 10.0.14393.3025 (1607/AnniversaryUpdate/Redstone1)\r\nIntel Core i5-8500 CPU 3.00GHz (Coffee Lake), 1 CPU, 6 logical and 6 physical cores\r\nFrequency=2929688 Hz, Resolution=341.3333 ns, Timer=TSC\r\n.NET Core SDK=2.2.105\r\n  [Host] : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT\r\n  Core   : .NET Core 2.2.3 (CoreCLR 4.6.27414.05, CoreFX 4.6.27414.05), 64bit RyuJIT\r\n\r\nJob=Core  Runtime=Core  \r\n\r\n```\r\n|    Method |    N |       Mean |      Error |     StdDev |     Median |  Gen 0 | Gen 1 | Gen 2 | Allocated |\r\n|---------- |----- |-----------:|-----------:|-----------:|-----------:|-------:|------:|------:|----------:|\r\n|    **Common** |   **10** |   **336.4 ns** |  **0.5193 ns** |  **0.4858 ns** |   **336.2 ns** | **0.0539** |     **-** |     **-** |     **256 B** |\r\n| Optimized |   10 |   141.0 ns |  0.4939 ns |  0.4620 ns |   141.0 ns | 0.0439 |     - |     - |     208 B |\r\n|    **Common** |  **100** | **1,114.4 ns** |  **3.7460 ns** |  **3.5040 ns** | **1,113.1 ns** | **0.2518** |     **-** |     **-** |    **1192 B** |\r\n| Optimized |  100 |   701.0 ns |  9.9910 ns |  9.3456 ns |   704.6 ns | 0.2422 |     - |     - |    1144 B |\r\n|    **Common** | **1000** | **6,161.7 ns** | **57.5657 ns** | **51.0305 ns** | **6,153.6 ns** | **1.8082** |     **-** |     **-** |    **8536 B** |\r\n| Optimized | 1000 | 4,859.1 ns | 29.0823 ns | 27.2036 ns | 4,852.4 ns | 1.7929 |     - |     - |    8488 B |\r\n\r\n</details>\r\n\r\nCan you fix `Array.FindAll`? And maybe you will find other methods where this optimization can be used\r\n\r\nThank you in advance","Url":"https://github.com/dotnet/coreclr/issues/25542","RelatedDescription":"Open issue \"Optimization of Array.FindAll\" (#25542)"},{"Id":"463203307","IsPullRequest":true,"CreatedAt":"2019-07-02T14:48:23","Actor":"dotnet-maestro[bot]","Number":"25536","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190702.1\r\n- **Date Produced**: 7/2/2019 10:08 AM\r\n- **Commit**: ec138afba514ce9b53d931d66129e02e8be147a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19352.1\r\n  - **Microsoft.Private.CoreFx.NETCoreApp** -> 4.6.0-preview8.19352.1\r\n\r\n[marker]: <> (End:16d3c6aa-851a-4668-94d4-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25536","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#25536)"},{"Id":"463197119","IsPullRequest":true,"CreatedAt":"2019-07-02T14:48:10","Actor":"dotnet-maestro[bot]","Number":"25535","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190701.4\r\n- **Date Produced**: 7/1/2019 9:33 PM\r\n- **Commit**: 1fb1e240c889cd7f6e10cb1eacd129efa3ddb4b4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19351.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19351.4\r\n\r\n[marker]: <> (End:1cc0f2b0-7abd-45f0-cee6-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25535","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#25535)"},{"Id":"463070185","IsPullRequest":true,"CreatedAt":"2019-07-02T13:33:17","Actor":"MichalStrehovsky","Number":"25530","RawContent":null,"Title":"Use Array.MaxArrayLength in ArrayList","State":"closed","Body":"Now that `ArrayList` is in CoreLib, we don't need the copy.","Url":"https://github.com/dotnet/coreclr/pull/25530","RelatedDescription":"Closed or merged PR \"Use Array.MaxArrayLength in ArrayList\" (#25530)"},{"Id":"463116413","IsPullRequest":true,"CreatedAt":"2019-07-02T12:54:04","Actor":"iSazonov","Number":"25531","RawContent":null,"Title":"Reduce allocations in GetLocale()","State":"closed","Body":"Fix #25474\r\n\r\nBefore the fix every time we call Assembly.GetName().Name we allocate CultureInfo in GetLocale().","Url":"https://github.com/dotnet/coreclr/pull/25531","RelatedDescription":"Closed or merged PR \"Reduce allocations in GetLocale()\" (#25531)"},{"Id":"463210646","IsPullRequest":true,"CreatedAt":"2019-07-02T12:50:04","Actor":"dotnet-maestro[bot]","Number":"25538","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-optimization","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:22ff0de4-1e59-4ef0-4dd8-08d6bc676830)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190702.1\r\n- **Date Produced**: 7/2/2019 11:12 AM\r\n- **Commit**: 64ba400f7a97ce8d6f2c52ab0d3ae27379920502\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.IBC.CoreCLR** -> 99.99.99-master-20190702.1\r\n  - **optimization.PGO.CoreCLR** -> 99.99.99-master-20190702.1\r\n\r\n[marker]: <> (End:22ff0de4-1e59-4ef0-4dd8-08d6bc676830)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25538","RelatedDescription":"Open PR \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#25538)"},{"Id":"463205491","IsPullRequest":true,"CreatedAt":"2019-07-02T12:38:53","Actor":"dotnet-maestro[bot]","Number":"25537","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190701.11\r\n- **Date Produced**: 7/2/2019 8:12 AM\r\n- **Commit**: 389c9aa23e5f169c3473583a8b3dc2bc2c4734a8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27901-11\r\n\r\n[marker]: <> (End:d21e78e6-fa30-42ea-2807-08d690bc5860)\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/25537","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#25537)"},{"Id":"463190470","IsPullRequest":false,"CreatedAt":"2019-07-02T12:05:30","Actor":"walterlv","Number":"25534","RawContent":null,"Title":"App will crash when using the when keyword in a catch expression","State":"open","Body":"We know that we can add a when keyword after a catch filter. But if there is another exception happened in the when expression, the app will totally crash.\r\n\r\nThis happens in .NET Framework 4.8 but in .NET Core 3.0, it works correctly as the document says.\r\n\r\nMaybe this is a bug in the .NET Framework 4.8 CLR.\r\n\r\n---\r\n\r\n## The `when` in the official document\r\n\r\nYou can view the official document here:\r\n\r\n- [Using User-Filtered Exception Handlers - Microsoft Docs](https://docs.microsoft.com/en-us/dotnet/standard/exceptions/using-user-filtered-exception-handlers)\r\n\r\nThere is such a sentence here:\r\n\r\n> The expression of the user-filtered clause is not restricted in any way. If an exception occurs during execution of the user-filtered expression, that exception is discarded and the filter expression is considered to have evaluated to false. In this case, the common language runtime continues the search for a handler for the current exception.\r\n\r\nWhen there is an exception occurred in the when expression the exception will be ignored and the expression will return false.\r\n\r\n## A demo\r\n\r\nWe can write a demo to verify this behavior of the official document.\r\n\r\n```csharp\r\nusing System;\r\nusing System.IO;\r\n\r\nnamespace Walterlv.Demo.CatchWhenCrash\r\n{\r\n    internal class Program\r\n    {\r\n        private static void Main(string[] args)\r\n        {\r\n            try\r\n            {\r\n                try\r\n                {\r\n                    Console.WriteLine(\"Try\");\r\n                    throw new FileNotFoundException();\r\n                }\r\n                catch (FileNotFoundException ex) when (ex.FileName.EndsWith(\".png\"))\r\n                {\r\n                    Console.WriteLine(\"Catch 1\");\r\n                }\r\n                catch (FileNotFoundException)\r\n                {\r\n                    Console.WriteLine(\"Catch 2\");\r\n                }\r\n            }\r\n            catch (Exception)\r\n            {\r\n                Console.WriteLine(\"Catch 3\");\r\n            }\r\n            Console.WriteLine(\"End\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nObviously, the `FileName` property will keep `null` in the first when expression and will cause a `NullReferenceException`. It is not recommended to write such the code but it can help us verify the behavior of the `catch`-`when` blocks.\r\n\r\nIf the official document is correct then we can get the output as `Try`-`Catch 2`-`End` because the exception in the `when` will be ignored and the outer `catch` will not catch it and then the `when` expression returns false so that the exception handling goes into the second one.\r\n\r\n## In .NET Core 3.0 and in .NET Framework 4.8\r\n\r\nThe pictures below show the actual output of the demo code above in .NET Core 3.0 and in .NET Framework 4.8.\r\n\r\n![.NET Core 3.0](https://user-images.githubusercontent.com/9959623/60511400-729f8e00-9d04-11e9-8141-f0ef9b7a757b.png)\r\n\r\n![.NET Framework 4.8](https://user-images.githubusercontent.com/9959623/60511422-7d5a2300-9d04-11e9-8195-138dd379ff48.png)\r\n\r\nOnly in the .NET Core 3.0, the output behaves the same as the official document says. But in .NET Framework 4.8, the `End` even not appear in the output. We can definitely sure that the app crashes in .NET Framework 4.8.\r\n\r\nIf we run the app step by step in Visual Studio, we can see that a CLR exception happens.\r\n\r\n![CLR error](https://user-images.githubusercontent.com/9959623/60511439-88ad4e80-9d04-11e9-89f9-50725f9fa94a.png)\r\n\r\nThis animated picture below shows how the code goes step by step.\r\n\r\n![Step debugging](https://user-images.githubusercontent.com/9959623/60511487-b0041b80-9d04-11e9-9f9a-9aa7c6ba23f2.gif)","Url":"https://github.com/dotnet/coreclr/issues/25534","RelatedDescription":"Open issue \"App will crash when using the when keyword in a catch expression\" (#25534)"},{"Id":"463140778","IsPullRequest":true,"CreatedAt":"2019-07-02T10:09:12","Actor":"obligaron","Number":"25533","RawContent":null,"Title":"Improve logging for EventSource.WriteEvent parameter mismatch","State":"open","Body":"- Different Text for parameter count mismatch and type mismatch\r\n- Includes EventId and paramater name\r\n- Fix IndexOutOfRangeException in SerializeEventArgs when incorrect arguments count got passed\r\n- Reuses ReportOutOfBandMessage as in other places in EventSource.cs\r\n\r\nThis is my first PR in coreclr. So i hope you can guide me.\r\nIs the fix for the IndexOutOfRangeException in this PR okay? Do you want a test for this case?\r\nIs it okay to change the behavior of the logging (Use ReportOutOfBandMessage)?\r\n\r\nFix #24728","Url":"https://github.com/dotnet/coreclr/pull/25533","RelatedDescription":"Open PR \"Improve logging for EventSource.WriteEvent parameter mismatch\" (#25533)"},{"Id":"463117341","IsPullRequest":false,"CreatedAt":"2019-07-02T09:20:18","Actor":"jiangzeng01","Number":"25532","RawContent":null,"Title":"Crash happen when the netperf file path does not exist","State":"open","Body":"Repro change:\r\nLine 34 of file corecl\\tests\\src\\tracing\\common\\NetPerfFile.cs\r\nHard code the file path to any path which does not exist, example \"F:\\NotExistFolder\\\"\r\n\r\nRun Test:\r\ncoreclr\\tests\\src\\tracing\\eventsource\\eventsourcetrace\\EventSourceTrace.csproj\r\n\r\nActual:\r\nCrash happened.\r\nExpected:\r\nExit with error message instead of crash.\r\n","Url":"https://github.com/dotnet/coreclr/issues/25532","RelatedDescription":"Open issue \"Crash happen when the netperf file path does not exist\" (#25532)"},{"Id":"463050120","IsPullRequest":false,"CreatedAt":"2019-07-02T06:43:02","Actor":"xiangzhai","Number":"25529","RawContent":null,"Title":"[X86/Linux] GCC 4.9 compatibility","State":"open","Body":"Hi,\r\n\r\nLet `build.sh` to enable GCC 4.9:\r\n\r\n```\r\ndiff --git a/build.sh b/build.sh\r\nindex 962ebb7..26b9181 100755\r\n--- a/build.sh\r\n+++ b/build.sh\r\n@@ -796,6 +796,12 @@ while :; do\r\n             __ClangMinorVersion=0\r\n             ;;\r\n \r\n+        gcc4|-gcc4)\r\n+            __GccMajorVersion=4\r\n+            __GccMinorVersion=9\r\n+            __GccBuild=1\r\n+            ;;\r\n+\r\n         gcc5|-gcc5)\r\n             __GccMajorVersion=5\r\n             __GccMinorVersion=\r\n```\r\n\r\nThen `./build.sh -gcc4` thrown such error:\r\n\r\n```\r\n...\r\nScanning dependencies of target unixcoreruncommon\r\nScanning dependencies of target eventprovider\r\n[  1%] Building CXX object src/coreclr/hosts/unixcoreruncommon/CMakeFiles/unixcoreruncommon.dir/coreruncommon.cpp.o\r\n[  1%] Building CXX object src/pal/src/eventprovider/lttngprovider/CMakeFiles/coreclrtraceptprovider.dir/lttng/traceptprovdotnetruntime.cpp.o\r\n[  1%] Building CXX object src/pal/src/CMakeFiles/coreclrpal.dir/exception/seh.cpp.o\r\n[  1%] Building CXX object src/pal/src/eventprovider/lttngprovider/CMakeFiles/eventprovider.dir/lttng/eventprovdotnetruntime.cpp.o\r\nIn file included from /home/loongson/zhaixiang/coreclr-mips64-dev/src/pal/src/exception/seh.cpp:433:0:\r\n/home/loongson/zhaixiang/coreclr-mips64-dev/src/pal/src/exception/seh-unwind.cpp: In function 'BOOL PAL_VirtualUnwind(CONTEXT*, KNONVOLATILE_CONTEXT_POINTERS*)':\r\n/home/loongson/zhaixiang/coreclr-mips64-dev/src/pal/src/exception/seh-unwind.cpp:320:5: error: 'st' may be used uninitialized in this function [-Werror=maybe-uninitialized]\r\n     if (st < 0)\r\n     ^\r\nIn file included from /home/loongson/zhaixiang/coreclr-mips64-dev/bin/obj/Linux.mips64.Debug/src/pal/src/eventprovider/lttngprovider/lttng/eventprovdotnetruntime.cpp:20:0:\r\n/home/loongson/zhaixiang/coreclr-mips64-dev/src/pal/inc/pal.h:291:23: error: '<anonymous>' has incomplete type\r\n PAL_IsDebuggerPresent(VOID);\r\n                       ^\r\n/home/loongson/zhaixiang/coreclr-mips64-dev/src/pal/inc/pal.h:291:27: error: invalid use of 'VOID {aka void}'\r\n PAL_IsDebuggerPresent(VOID);\r\n                           ^\r\n...\r\n```\r\n\r\nWorkaround for GCC 4.9 compatibility:\r\n\r\n```\r\ndiff --git a/src/pal/inc/pal.h b/src/pal/inc/pal.h\r\nindex a408cd1..add5cf4 100644\r\n--- a/src/pal/inc/pal.h\r\n+++ b/src/pal/inc/pal.h\r\n@@ -288,7 +288,7 @@ typedef char * va_list;\r\n PALIMPORT\r\n BOOL\r\n PALAPI\r\n-PAL_IsDebuggerPresent(VOID);\r\n+PAL_IsDebuggerPresent();\r\n \r\n #define FLT_MAX 3.402823466e+38F\r\n #define DBL_MAX 1.7976931348623157e+308\r\n@@ -386,7 +386,7 @@ PALIMPORT\r\n int\r\n PALAPI\r\n PAL_InitializeDLL(\r\n-    VOID);\r\n+    );\r\n \r\n PALIMPORT\r\n void\r\n@@ -475,7 +475,7 @@ PAL_UnregisterForRuntimeStartup(\r\n PALIMPORT\r\n BOOL\r\n PALAPI\r\n-PAL_NotifyRuntimeStarted(VOID);\r\n+PAL_NotifyRuntimeStarted();\r\n \r\n #ifdef __APPLE__\r\n PALIMPORT\r\n@@ -1078,7 +1078,7 @@ PALIMPORT\r\n UINT\r\n PALAPI\r\n GetConsoleOutputCP(\r\n-           VOID);\r\n+           );\r\n \r\n PALIMPORT\r\n DWORD\r\n@@ -1329,31 +1329,31 @@ PALIMPORT\r\n DWORD\r\n PALAPI\r\n GetCurrentProcessId(\r\n-            VOID);\r\n+            );\r\n \r\n PALIMPORT\r\n DWORD\r\n PALAPI\r\n GetCurrentSessionId(\r\n-            VOID);\r\n+            );\r\n \r\n PALIMPORT\r\n HANDLE\r\n PALAPI\r\n GetCurrentProcess(\r\n-          VOID);\r\n+          );\r\n \r\n PALIMPORT\r\n DWORD\r\n PALAPI\r\n GetCurrentThreadId(\r\n-           VOID);\r\n+           );\r\n \r\n PALIMPORT\r\n size_t\r\n PALAPI\r\n PAL_GetCurrentOSThreadId(\r\n-           VOID);\r\n+           );\r\n \r\n // To work around multiply-defined symbols in the Carbon framework.\r\n #define GetCurrentThread PAL_GetCurrentThread\r\n@@ -1361,7 +1361,7 @@ PALIMPORT\r\n HANDLE\r\n PALAPI\r\n GetCurrentThread(\r\n-         VOID);\r\n+         );\r\n \r\n \r\n #define STARTF_USESTDHANDLES       0x00000100\r\n@@ -1570,7 +1570,7 @@ PALIMPORT\r\n BOOL\r\n PALAPI\r\n SwitchToThread(\r\n-    VOID);\r\n+    );\r\n \r\n #define DEBUG_PROCESS                     0x00000001\r\n #define DEBUG_ONLY_THIS_PROCESS           0x00000002\r\n@@ -2611,7 +2611,7 @@ PALIMPORT\r\n DWORD\r\n PALAPI\r\n TlsAlloc(\r\n-     VOID);\r\n+     );\r\n \r\n PALIMPORT\r\n LPVOID\r\n@@ -2635,27 +2635,27 @@ TlsFree(\r\n PALIMPORT\r\n PVOID\r\n PALAPI\r\n-PAL_GetStackBase(VOID);\r\n+PAL_GetStackBase();\r\n \r\n PALIMPORT\r\n PVOID\r\n PALAPI\r\n-PAL_GetStackLimit(VOID);\r\n+PAL_GetStackLimit();\r\n \r\n PALIMPORT\r\n DWORD\r\n PALAPI\r\n-PAL_GetLogicalCpuCountFromOS(VOID);\r\n+PAL_GetLogicalCpuCountFromOS();\r\n \r\n PALIMPORT\r\n DWORD\r\n PALAPI\r\n-PAL_GetTotalCpuCount(VOID);\r\n+PAL_GetTotalCpuCount();\r\n \r\n PALIMPORT\r\n size_t\r\n PALAPI\r\n-PAL_GetRestrictedPhysicalMemoryLimit(VOID);\r\n+PAL_GetRestrictedPhysicalMemoryLimit();\r\n \r\n PALIMPORT\r\n BOOL\r\n@@ -2670,7 +2670,7 @@ PAL_GetCpuLimit(UINT* val);\r\n PALIMPORT\r\n size_t\r\n PALAPI\r\n-PAL_GetLogicalProcessorCacheSizeFromOS(VOID);\r\n+PAL_GetLogicalProcessorCacheSizeFromOS();\r\n \r\n typedef BOOL(*UnwindReadMemoryCallback)(PVOID address, PVOID buffer, SIZE_T size);\r\n \r\n@@ -3061,7 +3061,7 @@ PALIMPORT\r\n HANDLE\r\n PALAPI\r\n GetProcessHeap(\r\n-           VOID);\r\n+           );\r\n \r\n #define HEAP_ZERO_MEMORY 0x00000008\r\n \r\n@@ -3369,7 +3369,7 @@ PALIMPORT\r\n VOID\r\n PALAPI\r\n DebugBreak(\r\n-       VOID);\r\n+       );\r\n \r\n PALIMPORT\r\n DWORD\r\n@@ -3402,7 +3402,7 @@ PALIMPORT\r\n LPWSTR\r\n PALAPI\r\n GetEnvironmentStringsW(\r\n-               VOID);\r\n+               );\r\n \r\n #ifdef UNICODE\r\n #define GetEnvironmentStrings GetEnvironmentStringsW\r\n@@ -3449,12 +3449,12 @@ PALIMPORT\r\n DWORD\r\n PALAPI\r\n GetTickCount(\r\n-         VOID);\r\n+         );\r\n \r\n PALIMPORT\r\n ULONGLONG\r\n PALAPI\r\n-GetTickCount64(VOID);\r\n+GetTickCount64();\r\n \r\n PALIMPORT\r\n BOOL\r\n@@ -3944,7 +3944,7 @@ inline\r\n VOID\r\n PALAPI\r\n MemoryBarrier(\r\n-    VOID)\r\n+    )\r\n {\r\n     __sync_synchronize();\r\n }\r\n@@ -3955,7 +3955,7 @@ inline\r\n VOID\r\n PALAPI\r\n YieldProcessor(\r\n-    VOID)\r\n+    )\r\n {\r\n #if defined(_X86_) || defined(_AMD64_)\r\n     __asm__ __volatile__(\r\n@@ -3972,7 +3972,7 @@ YieldProcessor(\r\n PALIMPORT\r\n DWORD\r\n PALAPI\r\n-GetCurrentProcessorNumber(VOID);\r\n+GetCurrentProcessorNumber();\r\n \r\n /*++\r\n Function:\r\n@@ -3984,7 +3984,7 @@ Checks if GetCurrentProcessorNumber is available in the current environment\r\n PALIMPORT\r\n BOOL\r\n PALAPI\r\n-PAL_HasGetCurrentProcessorNumber(VOID);\r\n+PAL_HasGetCurrentProcessorNumber();\r\n \r\n #define FORMAT_MESSAGE_ALLOCATE_BUFFER 0x00000100\r\n #define FORMAT_MESSAGE_IGNORE_INSERTS  0x00000200\r\n@@ -4014,7 +4014,7 @@ PALIMPORT\r\n DWORD\r\n PALAPI\r\n GetLastError(\r\n-         VOID);\r\n+         );\r\n \r\n PALIMPORT\r\n VOID\r\n@@ -4026,7 +4026,7 @@ PALIMPORT\r\n LPWSTR\r\n PALAPI\r\n GetCommandLineW(\r\n-        VOID);\r\n+        );\r\n \r\n #ifdef UNICODE\r\n #define GetCommandLine GetCommandLineW\r\n@@ -4070,7 +4070,7 @@ ResetWriteWatch(\r\n PALIMPORT\r\n VOID\r\n PALAPI\r\n-FlushProcessWriteBuffers(VOID);\r\n+FlushProcessWriteBuffers();\r\n \r\n typedef void (*PAL_ActivationFunction)(CONTEXT *context);\r\n typedef BOOL (*PAL_SafeActivationCheckFunction)(SIZE_T ip, BOOL checkingCurrentThread);\r\n@@ -4848,22 +4848,22 @@ PAL_GetCPUBusyTime(\r\n PALIMPORT\r\n VOID\r\n PALAPI\r\n-PAL_EnableProcessProfile(VOID);\r\n+PAL_EnableProcessProfile();\r\n \r\n PALAPI\r\n-PAL_DisableProcessProfile(VOID);\r\n+PAL_DisableProcessProfile();\r\n \r\n PALIMPORT\r\n BOOL\r\n PALAPI\r\n-PAL_IsProcessProfileEnabled(VOID);\r\n+PAL_IsProcessProfileEnabled();\r\n \r\n PALIMPORT\r\n INT64\r\n PALAPI\r\n-PAL_GetCpuTickCount(VOID);\r\n+PAL_GetCpuTickCount();\r\n #endif // PAL_PERF\r\n \r\n /******************* PAL functions for SIMD extensions *****************/\r\n@@ -4928,14 +4928,14 @@ PAL_Enter(PAL_Boundary boundary);\r\n PALIMPORT\r\n BOOL\r\n PALAPI\r\n-PAL_HasEntered(VOID);\r\n+PAL_HasEntered();\r\n \r\n // Equivalent to PAL_Enter(PAL_BoundaryTop) and is for stub\r\n // code generation use.\r\n PALIMPORT\r\n DWORD\r\n PALAPI\r\n-PAL_EnterTop(VOID);\r\n+PAL_EnterTop();\r\n \r\n // This function needs to be called on a thread when it enters\r\n // a region of code that depends on this instance of the PAL\r\n@@ -4955,7 +4955,7 @@ PAL_Reenter(PAL_Boundary boundary);\r\n PALIMPORT\r\n BOOL\r\n PALAPI\r\n-PAL_ReenterForEH(VOID);\r\n+PAL_ReenterForEH();\r\n \r\n // This function needs to be called on a thread when it leaves\r\n // a region of code that depends on this instance of the PAL\r\n@@ -4970,14 +4970,14 @@ PAL_Leave(PAL_Boundary boundary);\r\n PALIMPORT\r\n VOID\r\n PALAPI\r\n-PAL_LeaveBottom(VOID);\r\n+PAL_LeaveBottom();\r\n \r\n // This function is equivalent to PAL_Leave(PAL_BoundaryTop)\r\n // and is available to limit the creation of stub code.\r\n PALIMPORT\r\n VOID\r\n PALAPI\r\n-PAL_LeaveTop(VOID);\r\n+PAL_LeaveTop();\r\n \r\n #ifdef  __cplusplus\r\n //\r\n```\r\n\r\nThanks,\r\nLeslie Zhai","Url":"https://github.com/dotnet/coreclr/issues/25529","RelatedDescription":"Open issue \"[X86/Linux] GCC 4.9 compatibility\" (#25529)"},{"Id":"462974550","IsPullRequest":true,"CreatedAt":"2019-07-02T06:19:08","Actor":"sywhang","Number":"25526","RawContent":null,"Title":"Decrease EventListener buffer size","State":"closed","Body":"Decrease the default buffer size used by EventListener sessions from 1GB to 10MB","Url":"https://github.com/dotnet/coreclr/pull/25526","RelatedDescription":"Closed or merged PR \"Decrease EventListener buffer size\" (#25526)"},{"Id":"462969507","IsPullRequest":true,"CreatedAt":"2019-07-02T05:25:32","Actor":"sywhang","Number":"25525","RawContent":null,"Title":"test DisplayUnits/DisplayRateTimeScale properties","State":"closed","Body":"Checking more boxes for https://github.com/dotnet/coreclr/issues/23217...","Url":"https://github.com/dotnet/coreclr/pull/25525","RelatedDescription":"Closed or merged PR \"test DisplayUnits/DisplayRateTimeScale properties\" (#25525)"},{"Id":"462980201","IsPullRequest":false,"CreatedAt":"2019-07-02T01:43:10","Actor":"VincentBu","Number":"25528","RawContent":null,"Title":"Test failed: Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-corefx-jitstress2-jitstressregs/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcorefx~2F/20190701.1/workItem/System.Security.Cryptography.Csp.Tests/analysis/xunit/System.Security.Cryptography.Rsa.Tests.EncryptDecrypt_Span~2FRsaCryptRoundtrip_OaepSHA1\r\n\r\n**Log:**\r\n```\r\nInternal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : An internal error occurred\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25528","RelatedDescription":"Open issue \"Test failed: Internal.Cryptography.CryptoThrowHelper+WindowsCryptographicException\" (#25528)"},{"Id":"462979324","IsPullRequest":false,"CreatedAt":"2019-07-02T01:38:38","Actor":"VincentBu","Number":"25527","RawContent":null,"Title":"Test failed: System.IO.DirectoryNotFoundException","State":"open","Body":"**Job:**\r\nhttps://mc.dot.net/#/user/coreclr-corefx-jitstress/ci~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcorefx~2F/20190630.1/workItem/System.IO.FileSystem.Watcher.Tests/analysis/xunit/System.IO.Tests.FileSystemWatcherTests~2FFileSystemWatcher_Directory_Delete_MultipleFilters\r\n\r\n**Log:**\r\n```\r\nSystem.IO.DirectoryNotFoundException : Could not find a part of the path '/tmp/FileSystemWatcherTests_iisbyhb5.uga/FileSystemWatcher_Directory_Delete_MultipleFilters_1052_2ea7d60c/FileSystemWatcher_Directory_Delete_MultipleFilters_1053_85c8d3a6'.\r\n```","Url":"https://github.com/dotnet/coreclr/issues/25527","RelatedDescription":"Open issue \"Test failed: System.IO.DirectoryNotFoundException\" (#25527)"},{"Id":"462967802","IsPullRequest":false,"CreatedAt":"2019-07-02T00:39:13","Actor":"noahfalk","Number":"25524","RawContent":null,"Title":"Tracing and Counters Interest Group - Announcements","State":"open","Body":"I'm making this issue as an informal way to flag other issues and discussions that might be relevant to doing tracing, logging, and performance counters in the .Net runtime. This includes technologies such as EventSource, EventPipe, ETW, Lttng, EventCounter, EventListener, DiagnosticsSource, and Activity. This thread is likely to stay closer to the bleeding edge than release notes or docs on docs.microsoft.com, but in exchange it is likely be more informal. If this is something you are interested in, subscribe to this issue to follow along.\r\n\r\nPlease don't do discussion directly in this issue, just links or short announcements. Thanks!","Url":"https://github.com/dotnet/coreclr/issues/25524","RelatedDescription":"Open issue \"Tracing and Counters Interest Group - Announcements\" (#25524)"},{"Id":"462961693","IsPullRequest":true,"CreatedAt":"2019-07-02T00:07:01","Actor":"josalem","Number":"25523","RawContent":null,"Title":"Prevent EventPipe rundown from blocking on write","State":"open","Body":"Write all rundown events to the buffer manager to prevent the write from blocking while holding the CodeManager lock\r\n\r\nresolves #25095 \r\n\r\nCC @tommcdon ","Url":"https://github.com/dotnet/coreclr/pull/25523","RelatedDescription":"Open PR \"Prevent EventPipe rundown from blocking on write\" (#25523)"},{"Id":"462923234","IsPullRequest":false,"CreatedAt":"2019-07-01T21:39:22","Actor":"swaroop-sridhar","Number":"25522","RawContent":null,"Title":"PublishReadyToRun should not compile mscorlib","State":"open","Body":"ReadyToRun compilation of self-contained apps compiles mscorlib.dll to generate the native image. \r\n\r\nSee: https://github.com/dotnet/sdk/pull/3381 where an SDK test failed recently, because mscorlib.ni.pdbs started showing up in app publish directory (unexpectedly). \r\n\r\nThis issue tracks shipping the native image in the .net core runtime-pack.\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/25522","RelatedDescription":"Open issue \"PublishReadyToRun should not compile mscorlib\" (#25522)"},{"Id":"462904179","IsPullRequest":false,"CreatedAt":"2019-07-01T21:10:49","Actor":"lidgren","Number":"25521","RawContent":null,"Title":"Add Span<T>.AsReadOnly()","State":"closed","Body":"As far as I can tell; there's no way to convert an instance of `Span<T>` to a `ReadOnlySpan<T>` without having a reference to the underlying data. Adding the method `AsReadOnly()` to `Span<T>` or a constructor/implicit conversion to `ReadOnlySpan<T>` would be useful.","Url":"https://github.com/dotnet/coreclr/issues/25521","RelatedDescription":"Closed issue \"Add Span<T>.AsReadOnly()\" (#25521)"},{"Id":"462895384","IsPullRequest":true,"CreatedAt":"2019-07-01T20:25:23","Actor":"davmason","Number":"25520","RawContent":null,"Title":"Add check to prevent attaching a profiler when one is already present","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/25520","RelatedDescription":"Open PR \"Add check to prevent attaching a profiler when one is already present\" (#25520)"},{"Id":"462879130","IsPullRequest":false,"CreatedAt":"2019-07-01T19:42:38","Actor":"WardenGnaw","Number":"25519","RawContent":null,"Title":"ValueTuple<System.__Canon, System.__Canon> returned from funcEval of List<ValueTuple<string, string>>.get_Item(int)","State":"open","Body":"In VS, creating a dotnet 3.0 console app with:\r\n```\r\nvar list = new List<(string first, string second)>();\r\nlist.Add((\"first\", \"second\"));\r\n```\r\nAdding list[0].first in the watch window results in it being null.\r\n\r\nThis is due to funeval-ing `System.Collections.Generic.List'1[T].get_Item` with two arguments via `ICorDebugEval2.CallParameterizedFunction`.\r\nThe two arguments are:\r\n```\r\n[0]: \"System.Collections.Generic.List'1[[System.ValueTuple'2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]\"\r\n[1]: \"System.Int32\"\r\n```\r\n\r\nHowever, the CorValue of this call results in `\"System.ValueTuple'2[[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.__Canon, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]\"`\r\n","Url":"https://github.com/dotnet/coreclr/issues/25519","RelatedDescription":"Open issue \"ValueTuple<System.__Canon, System.__Canon> returned from funcEval of List<ValueTuple<string, string>>.get_Item(int)\" (#25519)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"463543912","IsPullRequest":true,"CreatedAt":"2019-07-03T05:23:23","Actor":"dotnet-maestro[bot]","Number":"11719","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190702.6\r\n- **Date Produced**: 7/3/2019 4:52 AM\r\n- **Commit**: 3c0fb1a3f8609aae3165d43cb61fed10d9e1bf4f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19352.6\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11719","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11719)"},{"Id":"463534114","IsPullRequest":true,"CreatedAt":"2019-07-03T04:58:31","Actor":"dotnet-maestro[bot]","Number":"11717","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190702.18\r\n- **Date Produced**: 7/3/2019 4:26 AM\r\n- **Commit**: 12e23a26553790a3e4bf3565cf00a6d3e7e4146e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27902-18\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11717","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11717)"},{"Id":"463543284","IsPullRequest":true,"CreatedAt":"2019-07-03T04:50:09","Actor":"dotnet-maestro[bot]","Number":"11718","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190702.19\r\n- **Date Produced**: 7/3/2019 4:49 AM\r\n- **Commit**: fbe9466dddee8b3bbde6b706598d8f83802d08ce\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27902-19\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11718","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#11718)"},{"Id":"463529169","IsPullRequest":true,"CreatedAt":"2019-07-03T03:44:14","Actor":"dotnet-maestro[bot]","Number":"11716","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190702.5\r\n- **Date Produced**: 7/3/2019 3:43 AM\r\n- **Commit**: c966fffb329d8261b762abd587d606f2ac80697c\r\n- **Branch**: refs/heads/release/3.0-preview7\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19352.5\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11716","RelatedDescription":"Open PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#11716)"},{"Id":"463522156","IsPullRequest":true,"CreatedAt":"2019-07-03T03:42:38","Actor":"dotnet-maestro[bot]","Number":"11715","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190702.16\r\n- **Date Produced**: 7/3/2019 3:10 AM\r\n- **Commit**: 207a304ed4a9a6d1da67b242fe3ebb897586da34\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27902-16\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11715","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#11715)"},{"Id":"463508272","IsPullRequest":true,"CreatedAt":"2019-07-03T02:37:40","Actor":"dotnet-maestro[bot]","Number":"11714","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190702.4\r\n- **Date Produced**: 7/3/2019 2:02 AM\r\n- **Commit**: 6b300c6baf10b8ee6aa092a29a992baebb6a6e69\r\n- **Branch**: refs/heads/release/3.0-preview7\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19352.4\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11714","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#11714)"},{"Id":"463473633","IsPullRequest":true,"CreatedAt":"2019-07-03T02:32:58","Actor":"dotnet-maestro[bot]","Number":"11711","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190702.12\r\n- **Date Produced**: 7/2/2019 11:09 PM\r\n- **Commit**: 1d808bfb7cacb5ad6234a2f658d3fcd7d1ec5229\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27902-12\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11711","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11711)"},{"Id":"463498946","IsPullRequest":false,"CreatedAt":"2019-07-03T01:15:29","Actor":"Kinematics","Number":"11713","RawContent":null,"Title":"Unable to specify a subdirectory for assembly loading","State":"open","Body":"## Steps to reproduce\r\nBuild a project for .NET Core 3.  Add some nuget package.\r\nCreate a \"lib\" subdirectory in the output folder.\r\nMove some/all of the .dll files into \"lib\".\r\nProgram will fail to run, as it is unable to locate the moved assemblies.\r\n\r\n## Details\r\nWhen building a program using the standard framework, which used `app.exe.config` for its runtime configuration, you could specify private subdirectories that would be searched when resolving assembly loading:\r\n```\r\n  <runtime>\r\n    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n      <probing privatePath=\"lib\" />\r\n    </assemblyBinding>\r\n  </runtime>\r\n```\r\n\r\nI have been unable to find any directives that would reproduce that behavior in the new `app.runtimeconfig.json` configuration. The [runtime spec documentation](https://github.com/dotnet/cli/blob/v2.0.0/Documentation/specs/corehost.md) only mentions searching the root application directory, and doesn't indicate any means of getting the runtime to search alternate directories (even with the presumed restriction of only being allowed to search private subdirectories).\r\n\r\nUse of `additionalProbingPaths` in `app.runtimeconfig.json` and `app.runtimeconfig.dev.json` does not seem to work.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview6-012264\r\n Commit:    be3f0c1a03\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  6.1.7601\r\n OS Platform: Windows\r\n RID:         win7-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview6-27804-01\r\n  Commit:  fdf81c6faf\r\n\r\n.NET Core SDKs installed:\r\n  1.1.14 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.204 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.400-preview-010219 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview6.19307.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11713","RelatedDescription":"Open issue \"Unable to specify a subdirectory for assembly loading\" (#11713)"},{"Id":"463478971","IsPullRequest":true,"CreatedAt":"2019-07-03T00:03:12","Actor":"dotnet-maestro[bot]","Number":"11712","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190702.11\r\n- **Date Produced**: 7/2/2019 11:32 PM\r\n- **Commit**: 568073c69f4b7e6b90ca7a3ede7abf68f489b031\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview7-27902-11\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11712","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#11712)"},{"Id":"463158420","IsPullRequest":false,"CreatedAt":"2019-07-02T22:13:22","Actor":"Lybecker","Number":"11701","RawContent":null,"Title":"dotnet build+publish and dotnet publish does not produce the same result - fails when running as unprivileged user in Docker container","State":"closed","Body":"When the Dockerfile has both the steps `dotnet build` and `dotnet publish`, then the error `realpath(): Permission denied` appears at runtime when running as unprivileged user\r\n\r\n## Steps to reproduce\r\n\r\n1. Create simple webapp with command \r\n`dotnet new webapp -o mywebapp --no-https` \r\n2. Use Dockerfile from here: \r\nhttps://github.com/Lybecker/dotnetclibug/blob/master/Dockerfile\r\n3. Uncomment line 15\r\n`RUN dotnet build \"mywebapp.csproj\" -c Release -o /app`\r\n4. Build the container \r\n`docker build -t mywebapp:issue .`\r\n5. Execute the container \r\n`docker run –rm mywebapp:issue`\r\n\r\nThe problem only appears, when uncomment line 15\r\n\r\nThe issue has been reproduced have reproduced the issue on Windows and Linux.\r\n\r\n## Expected  behavior\r\nThe dotnet kestrel process starts without any errors.\r\n\r\n## Actual behavior\r\n`docker run --rm mywebapp:issue`\r\n_realpath(): Permission denied\r\nrealpath(): Permission denied\r\nrealpath(): Permission denied_\r\nwarn: Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository[50]\r\n      Using an in-memory repository. Keys will not be persisted to storage.\r\nwarn: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[59]\r\n      Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.\r\nwarn: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[35]\r\n      No XML encryptor configured. Key {ea673121-40e4-4712-9072-58e595942f1d} may be persisted to storage in unencrypted form.\r\nHosting environment: Production\r\nContent root path: /app\r\nNow listening on: http://[::]:8080\r\nApplication started. Press Ctrl+C to shut down.\r\n\r\n## Environment data\r\nReproduced on Linux and Windows:\r\n\r\n**Linux**\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.300\r\n Commit:    73efd5bd87\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.300/\r\n\r\nHost (useful for support):\r\n  Version: 2.2.5\r\n  Commit:  0a3c9209c0\r\n\r\n.NET Core SDKs installed:\r\n  2.2.300 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\n**Windows**\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.202\r\n Commit:    8a7ff6789d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.202\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.3\r\n  Commit:  6b8ad509b6\r\n\r\n.NET Core SDKs installed:\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.105 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11701","RelatedDescription":"Closed issue \"dotnet build+publish and dotnet publish does not produce the same result - fails when running as unprivileged user in Docker container\" (#11701)"},{"Id":"463404535","IsPullRequest":true,"CreatedAt":"2019-07-02T20:39:26","Actor":"dotnet-maestro[bot]","Number":"11710","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190702.2\r\n- **Date Produced**: 7/2/2019 7:34 PM\r\n- **Commit**: b8f20a964a083fb9f53043aa9e0ddd53e376c4bf\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 2.0.0-preview7.19352.2\r\n\r\n[marker]: <> (End:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11710","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/templating\" (#11710)"},{"Id":"463329266","IsPullRequest":true,"CreatedAt":"2019-07-02T19:40:56","Actor":"dotnet-maestro[bot]","Number":"11708","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190702.03\r\n- **Date Produced**: 7/2/2019 4:38 PM\r\n- **Commit**: 49be25a6edaea1918f09a3ab429e86f2a2617219\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27902-03\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11708","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11708)"},{"Id":"462962791","IsPullRequest":true,"CreatedAt":"2019-07-02T19:19:04","Actor":"dotnet-maestro[bot]","Number":"11692","RawContent":null,"Title":"[master] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190701.9\r\n- **Date Produced**: 7/2/2019 5:53 AM\r\n- **Commit**: 8a7508d8183968d1b96d259cf8bcc5bbb85981b5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview8.19351.9\r\n\r\n[marker]: <> (End:2ccdb5a8-3feb-4e97-d36a-08d6f038a15f)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11692","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from aspnet/AspNetCore\" (#11692)"},{"Id":"463391363","IsPullRequest":false,"CreatedAt":"2019-07-02T19:12:18","Actor":"chabiss","Number":"11709","RawContent":null,"Title":"XAML designer or application failed to launch : invalid runtime config.json","State":"open","Body":"## Steps to reproduce\r\nVerified that the machine is on \r\n3.0.100-preview7-012601\r\n\r\nInstall Visual Studio 16.3 Preview 1\r\n \r\nFirst project.\r\n\"\\\\scratch2\\scratch\\peterspa\\MahAppsFail\\MahApps.Metro.zip\"\r\n \r\nIt restore and compile fine. But then we try to launch the designer, we have this error: \r\n \r\nThis appears to be a bug with design time \r\n \r\n \r\n \r\nBelow is a copy of the JSON file. \r\n\\\\scratch2\\scratch\\peterspa\\MahAppsFail\\WpfSurface.runtimeConfig.json\r\n \r\n \r\nSecond project: \r\n\\\\scratch2\\scratch\\chabiss\\RuntimeConfig.zip\r\n \r\nThis one is the one I showed to Livar.  You can add the private feed (https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json ) to get around the fact that you can’t restore properly because of the package reference  \r\nHowever, when you try to open Mainpage.xaml.  Same problem\r\n \r\n \r\n \r\nSame problem: \r\n\\\\scratch2\\scratch\\chabiss\\WpfSurface.runtimeConfig.json\r\n \r\nI think this is blocking 16.3 Preview 1.   \r\n\r\n## Expected  behavior\r\nApp running file and and Designer loading\r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11709","RelatedDescription":"Open issue \"XAML designer or application failed to launch : invalid runtime config.json\" (#11709)"},{"Id":"463190260","IsPullRequest":true,"CreatedAt":"2019-07-02T17:17:29","Actor":"dotnet-maestro[bot]","Number":"11703","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:433865d5-f754-408e-06ed-08d645e2db8e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190701.4\r\n- **Date Produced**: 7/1/2019 9:33 PM\r\n- **Commit**: 1fb1e240c889cd7f6e10cb1eacd129efa3ddb4b4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19351.4\r\n\r\n[marker]: <> (End:433865d5-f754-408e-06ed-08d645e2db8e)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11703","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#11703)"},{"Id":"463320407","IsPullRequest":true,"CreatedAt":"2019-07-02T16:54:39","Actor":"wtgodbe","Number":"11707","RawContent":null,"Title":"Manual DARC update from core-setup","State":"closed","Body":"We took a `preview8` core-setup dependency from master during the code merge yesterday, and manually triggering a darc update didn't do anything (I'm guessing because DARC reads a `preview8` dependency as being newer than a `preview7` dependency, so it doesn't think it has anything to do, even though the latest dependency on the channel is `preview7` - @riarenas @JohnTortugo can you confirm?)\r\n\r\nCC @livarcocc ","Url":"https://github.com/dotnet/cli/pull/11707","RelatedDescription":"Closed or merged PR \"Manual DARC update from core-setup\" (#11707)"},{"Id":"463078239","IsPullRequest":false,"CreatedAt":"2019-07-02T16:29:40","Actor":"yuki233","Number":"11700","RawContent":null,"Title":"Dotnet new a project returns some errors with .Net Core 3.0 Preview 7","State":"closed","Body":"## Steps to reproduce\r\n1.  Install SDK 3.0.100-preview7-012769\r\n2. Dotnet new a console APP and observe the result\r\n3. Dotnet new a UnitTest or web APP and observe the result\r\n\r\n## Expected  behavior\r\nOn step2,3, dotnet new a project works normally\r\n\r\n## Actual behavior\r\n1. On Step2, returns some errors\r\n![image](https://user-images.githubusercontent.com/1578239/60494497-7c63ca00-9ce1-11e9-85bf-03e7d09be6bc.png)\r\n2. On step3, take mvc app for example, it will returns \"Could not find install descriptor for template: Microsoft.Web.Mvc.CSharp.3.0\"\r\n![image](https://user-images.githubusercontent.com/1578239/60494592-addc9580-9ce1-11e9-8515-46664f98e3fb.png)\r\n\r\n##Note\r\nDotnet build, restore, run works succeed.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview7-012769\r\n Commit:    3d1e17251c\r\n\r\n \r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012769\\\r\n\r\n \r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview7-27901-06\r\n  Commit:  df2b1489de\r\n\r\n \r\n\r\n.NET Core SDKs installed:\r\n  3.0.100-preview7-012769 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n \r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19351.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27901-06 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview7-27901-06 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n \r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/11700","RelatedDescription":"Closed issue \"Dotnet new a project returns some errors with .Net Core 3.0 Preview 7\" (#11700)"},{"Id":"463281329","IsPullRequest":true,"CreatedAt":"2019-07-02T15:33:12","Actor":"dotnet-maestro[bot]","Number":"11706","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190702.02\r\n- **Date Produced**: 7/2/2019 3:02 PM\r\n- **Commit**: d31c9e8055992b61f4a1b8898b646e5fcb7b62b3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27902-02\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11706","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11706)"},{"Id":"463257902","IsPullRequest":false,"CreatedAt":"2019-07-02T14:21:26","Actor":"mthalman","Number":"11705","RawContent":null,"Title":"Regression: self-contained publish fails on Linux ARM in 3.0 Preview 7","State":"open","Body":"## Steps to reproduce\r\n1. `dotnet new web --framework netcoreapp3.0`\r\n2. `dotnet publish -r linux-arm -c Release -o out`\r\n\r\n## Expected  behavior\r\nPublish succeeds\r\n\r\n## Actual behavior\r\nAn exception occurs: `System.ArgumentException: Can not add property libclrjit.so to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object.`\r\n```\r\n Microsoft (R) Build Engine version 16.3.0-preview-19329-01+d31fdbf01 for .NET Core\r\n Copyright (C) Microsoft Corporation. All rights reserved.\r\n \r\n   Restore completed in 68.02 ms for /app/app.csproj.\r\n   You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018: System.ArgumentException: Can not add property libclrjit.so to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object. [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Newtonsoft.Json.Linq.JObject.ValidateToken(JToken o, JToken existing) [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Newtonsoft.Json.Linq.JContainer.InsertItem(Int32 index, JToken item, Boolean skipParentCheck) [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Newtonsoft.Json.Linq.JObject.InsertItem(Int32 index, JToken item, Boolean skipParentCheck) [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Newtonsoft.Json.Linq.JContainer.AddInternal(Int32 index, Object content, Boolean skipParentCheck) [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Newtonsoft.Json.Linq.JContainer.Add(Object content) [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.WriteAssetList(IEnumerable`1 runtimeFiles) [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.AddAssets(JObject libraryObject, String key, RuntimeAssetGroup group) [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.WriteTargetLibrary(Library library) [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.<WriteTarget>b__7_0(Library library) [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at System.Linq.Enumerable.SelectArrayIterator`2.MoveNext() [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Newtonsoft.Json.Linq.JContainer.AddInternal(Int32 index, Object content, Boolean skipParentCheck) [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Newtonsoft.Json.Linq.JContainer.Add(Object content) [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Newtonsoft.Json.Linq.JObject..ctor(Object content) [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.WriteTarget(IReadOnlyList`1 libraries) [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.WriteTargets(DependencyContext context) [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.Write(DependencyContext context) [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.Write(DependencyContext context, Stream stream) [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Microsoft.NET.Build.Tasks.GenerateDepsFile.WriteDepsFile(String depsFilePath) in /_/src/Tasks/Microsoft.NET.Build.Tasks/GenerateDepsFile.cs:line 173 [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Microsoft.NET.Build.Tasks.GenerateDepsFile.ExecuteCore() in /_/src/Tasks/Microsoft.NET.Build.Tasks/GenerateDepsFile.cs:line 190 [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() in /_/src/Tasks/Common/TaskBase.cs:line 38 [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Microsoft.NET.Build.Tasks.GenerateDepsFile.Execute() in /_/src/Tasks/Microsoft.NET.Build.Tasks/GenerateDepsFile.cs:line 182 [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [/app/app.csproj]\r\n /usr/share/dotnet/sdk/3.0.100-preview7-012769/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(168,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [/app/app.csproj]\r\n The command '/bin/sh -c dotnet publish -r $rid -c Release -o out' returned a non-zero code: 1\r\n```\r\n\r\n## Environment data\r\nThis issue was discovered in our CI validation tests for .NET Docker when running the test scenario on Linux ARM hardware.  \r\n\r\nThis is a regression and was introduced between the following two SDK versions: 3.0.100-preview7-0127**43** and 3.0.100-preview7-0127**69**.\r\n","Url":"https://github.com/dotnet/cli/issues/11705","RelatedDescription":"Open issue \"Regression: self-contained publish fails on Linux ARM in 3.0 Preview 7\" (#11705)"},{"Id":"463049173","IsPullRequest":true,"CreatedAt":"2019-07-02T12:50:09","Actor":"dotnet-maestro[bot]","Number":"11698","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190702.01\r\n- **Date Produced**: 7/2/2019 12:12 PM\r\n- **Commit**: 945b148d2dbe7e0ea78a858e2b7d0ad8f62b6928\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27902-01\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11698","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11698)"},{"Id":"463192682","IsPullRequest":true,"CreatedAt":"2019-07-02T12:45:52","Actor":"dotnet-maestro[bot]","Number":"11704","RawContent":null,"Title":"[master] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20190701.4\r\n- **Date Produced**: 7/1/2019 7:40 PM\r\n- **Commit**: 3347ab0a01b1c33408a5c713d07ca1ca4ffcac1a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 2.0.0-preview8.19351.4\r\n\r\n[marker]: <> (End:0be14b38-c39d-4bd1-cee3-08d67668456c)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11704","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/templating\" (#11704)"},{"Id":"463189858","IsPullRequest":true,"CreatedAt":"2019-07-02T12:03:59","Actor":"dotnet-bot","Number":"11702","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/11702","RelatedDescription":"Open PR \"Merge release/3.0.1xx to master\" (#11702)"},{"Id":"463069769","IsPullRequest":true,"CreatedAt":"2019-07-02T08:11:32","Actor":"dotnet-maestro[bot]","Number":"11699","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190701.5\r\n- **Date Produced**: 7/2/2019 7:35 AM\r\n- **Commit**: e80d782fd80c02dfe6113c7d856f589236f1b183\r\n- **Branch**: refs/heads/release/3.0.1xx\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19351.5\r\n\r\n[marker]: <> (End:fa87930c-8514-45a1-0d47-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11699","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/sdk\" (#11699)"},{"Id":"463037045","IsPullRequest":true,"CreatedAt":"2019-07-02T06:35:07","Actor":"dotnet-maestro[bot]","Number":"11697","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20190701.10\r\n- **Date Produced**: 7/2/2019 6:04 AM\r\n- **Commit**: a269ff01810735be94d562b737f93dd0eb07cfae\r\n- **Branch**: refs/heads/release/3.0-preview7\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.0.0-preview7.19351.10\r\n\r\n[marker]: <> (End:d54a5172-b4ce-4f86-d36b-08d6f038a15f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11697","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from aspnet/AspNetCore\" (#11697)"},{"Id":"463004065","IsPullRequest":true,"CreatedAt":"2019-07-02T06:21:07","Actor":"dotnet-maestro[bot]","Number":"11696","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190701.08\r\n- **Date Produced**: 7/2/2019 3:38 AM\r\n- **Commit**: 788f9afff7b5c4cbb2115c688eabf4560bd334f8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27901-08\r\n\r\n[marker]: <> (End:ee51af1b-9763-4b75-e67a-08d6fb36d5a8)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11696","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#11696)"},{"Id":"463002873","IsPullRequest":true,"CreatedAt":"2019-07-02T04:54:37","Actor":"livarcocc","Number":"11695","RawContent":null,"Title":"Merge master into release/3.0.1xx","State":"closed","Body":"This was a clean merge.","Url":"https://github.com/dotnet/cli/pull/11695","RelatedDescription":"Closed or merged PR \"Merge master into release/3.0.1xx\" (#11695)"},{"Id":"462964119","IsPullRequest":true,"CreatedAt":"2019-07-02T04:54:21","Actor":"johnbeisner","Number":"11693","RawContent":null,"Title":"Branding update to \"preview8\"; CLI","State":"closed","Body":"Branding update to \"preview8\"; SDK\r\n","Url":"https://github.com/dotnet/cli/pull/11693","RelatedDescription":"Closed or merged PR \"Branding update to \"preview8\"; CLI\" (#11693)"},{"Id":"462995834","IsPullRequest":true,"CreatedAt":"2019-07-02T03:29:53","Actor":"dotnet-maestro[bot]","Number":"11694","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190701.3\r\n- **Date Produced**: 7/2/2019 2:56 AM\r\n- **Commit**: e01aac6709b8cd81522fa23677a8e49d004983ae\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19351.3\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11694","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11694)"},{"Id":"462958007","IsPullRequest":true,"CreatedAt":"2019-07-02T00:34:36","Actor":"dotnet-maestro[bot]","Number":"11691","RawContent":null,"Title":"[master] Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n## From https://github.com/dotnet/sdk\r\n- **Build**: 20190701.1\r\n- **Date Produced**: 7/1/2019 2:57 PM\r\n- **Commit**: 46e1f004a34fe8ed6f608d20d5f8b0b862a245c1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk** -> 3.0.100-preview7.19351.1\r\n\r\n[marker]: <> (End:145b81c3-fdcc-4cb6-70fa-08d645e3a44f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/11691","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/sdk\" (#11691)"},{"Id":"462938939","IsPullRequest":true,"CreatedAt":"2019-07-01T23:42:29","Actor":"wli3","Number":"11690","RawContent":null,"Title":"WIP no merge test ci","State":"closed","Body":"try insert on master https://github.com/dotnet/cli/pull/11685/files","Url":"https://github.com/dotnet/cli/pull/11690","RelatedDescription":"Closed or merged PR \"WIP no merge test ci\" (#11690)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"462312057","IsPullRequest":false,"CreatedAt":"2019-07-02T23:31:19","Actor":"alecgn","Number":"1295","RawContent":null,"Title":"Consider adding AesGcm to .NET Standard 2.1","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/issues/1295","RelatedDescription":"Closed issue \"Consider adding AesGcm to .NET Standard 2.1\" (#1295)"},{"Id":"463393350","IsPullRequest":true,"CreatedAt":"2019-07-02T19:23:52","Actor":"wtgodbe","Number":"1305","RawContent":null,"Title":"Remove cancellation token from System.Data CloseAsync() methods","State":"closed","Body":"Cherry-pick of https://github.com/dotnet/standard/pull/1304 for preview7\r\n\r\nCC @roji @terrajobst ","Url":"https://github.com/dotnet/standard/pull/1305","RelatedDescription":"Closed or merged PR \"Remove cancellation token from System.Data CloseAsync() methods\" (#1305)"},{"Id":"463388556","IsPullRequest":true,"CreatedAt":"2019-07-02T19:14:09","Actor":"roji","Number":"1304","RawContent":null,"Title":"Remove cancellation token from System.Data CloseAsync() methods","State":"closed","Body":"Leftover from #1283, mirrors https://github.com/dotnet/corefx/pull/39070","Url":"https://github.com/dotnet/standard/pull/1304","RelatedDescription":"Closed or merged PR \"Remove cancellation token from System.Data CloseAsync() methods\" (#1304)"},{"Id":"463385096","IsPullRequest":true,"CreatedAt":"2019-07-02T19:04:44","Actor":"wtgodbe","Number":"1303","RawContent":null,"Title":"Cherry pick changes to Standard for preview7","State":"closed","Body":"Cherry picks https://github.com/dotnet/standard/pull/1283, https://github.com/dotnet/standard/pull/1300, and https://github.com/dotnet/standard/pull/1290 for preview7. CC @terrajobst @danmosemsft ","Url":"https://github.com/dotnet/standard/pull/1303","RelatedDescription":"Closed or merged PR \"Cherry pick changes to Standard for preview7\" (#1303)"},{"Id":"462004700","IsPullRequest":true,"CreatedAt":"2019-07-02T18:49:33","Actor":"roji","Number":"1290","RawContent":null,"Title":"Add string overloads to DbDataReader.Get*()","State":"closed","Body":"See https://github.com/dotnet/corefx/issues/31595\r\n\r\nThis is the 3rd and last in this batch of System.Data changes.\r\n\r\nNote that for the naming and namespace for the new DataReaderExtensions class, see https://github.com/dotnet/corefx/pull/36123#issuecomment-475762481 and https://github.com/dotnet/corefx/pull/36123#discussion_r267625142.","Url":"https://github.com/dotnet/standard/pull/1290","RelatedDescription":"Closed or merged PR \"Add string overloads to DbDataReader.Get*()\" (#1290)"},{"Id":"462968084","IsPullRequest":true,"CreatedAt":"2019-07-02T18:34:57","Actor":"terrajobst","Number":"1300","RawContent":null,"Title":"Reduces System.Reflection.Emit to match CoreFX","State":"closed","Body":"For .NET Standard 2.1 we planned to extend Reflection Emit match the .NET Framework API surface but we never got around adding those APIs in .NET Core 3.0. Given that these APIs are rarely used, the proposal is to remove them from the .NET Standard 2.1. Please note that this isn't a breaking change from .NET Standard 2.0 but it is a breaking change from earlier preview versions of .NET Standard 2.1.\r\n\r\nSee issue dotnet/corefx#36716 for details.","Url":"https://github.com/dotnet/standard/pull/1300","RelatedDescription":"Closed or merged PR \"Reduces System.Reflection.Emit to match CoreFX\" (#1300)"},{"Id":"461018856","IsPullRequest":true,"CreatedAt":"2019-07-02T17:45:19","Actor":"roji","Number":"1283","RawContent":null,"Title":"Add async methods in System.Data.Common, implement IAsyncDisposable","State":"closed","Body":"***DO NOT MERGE until dotnet/corefx#39070 is merged***\r\n\r\n---\r\n\r\nThis brings over https://github.com/dotnet/corefx/issues/35012 (already merged for .NET Core 3.0) to .NET Standard 2.1.\r\n\r\nOne thing I noticed, is that in the corefx implementation the types have been updated to implement IAsyncDisposable, but in the ref they have not (although `DisposeAsync()` has been added). Can someone please confirm whether the interface should get added there?","Url":"https://github.com/dotnet/standard/pull/1283","RelatedDescription":"Closed or merged PR \"Add async methods in System.Data.Common, implement IAsyncDisposable\" (#1283)"},{"Id":"463216905","IsPullRequest":true,"CreatedAt":"2019-07-02T13:07:43","Actor":"dotnet-maestro[bot]","Number":"1302","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190702.1\r\n- **Date Produced**: 7/2/2019 10:08 AM\r\n- **Commit**: ec138afba514ce9b53d931d66129e02e8be147a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19352.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19352.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19352.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1302","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1302)"},{"Id":"463189880","IsPullRequest":true,"CreatedAt":"2019-07-02T12:29:13","Actor":"dotnet-maestro[bot]","Number":"1301","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190701.4\r\n- **Date Produced**: 7/1/2019 9:33 PM\r\n- **Commit**: 1fb1e240c889cd7f6e10cb1eacd129efa3ddb4b4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19351.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1301","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1301)"},{"Id":"462698498","IsPullRequest":true,"CreatedAt":"2019-07-01T13:04:51","Actor":"dotnet-maestro[bot]","Number":"1299","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190630.3\r\n- **Date Produced**: 6/30/2019 6:47 PM\r\n- **Commit**: da3ba7ebe34771dde769b65dfb7f78fa55a5abb6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19330.3\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19330.3\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19330.3\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1299","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1299)"},{"Id":"462676118","IsPullRequest":true,"CreatedAt":"2019-07-01T12:14:12","Actor":"dotnet-maestro[bot]","Number":"1298","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190630.1\r\n- **Date Produced**: 6/30/2019 12:52 PM\r\n- **Commit**: 89fab80685c91024c8f9e21f1c37f62580f648f8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19330.1\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1298","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1298)"},{"Id":"462402162","IsPullRequest":true,"CreatedAt":"2019-06-30T13:03:36","Actor":"dotnet-maestro[bot]","Number":"1297","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190629.6\r\n- **Date Produced**: 6/30/2019 12:46 AM\r\n- **Commit**: 68763d3ce7d9db960aadecc0773e7c7b906cc3e5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19329.6\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19329.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19329.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1297","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1297)"},{"Id":"462397733","IsPullRequest":true,"CreatedAt":"2019-06-30T12:14:00","Actor":"dotnet-maestro[bot]","Number":"1296","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190629.2\r\n- **Date Produced**: 6/29/2019 1:09 PM\r\n- **Commit**: 3ebba82f29f338a3cb14f4b3e1b6da0fd69be694\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19329.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19329.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19329.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19329.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19329.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19329.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1296","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1296)"},{"Id":"462299907","IsPullRequest":true,"CreatedAt":"2019-06-29T13:03:28","Actor":"dotnet-maestro[bot]","Number":"1294","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190629.1\r\n- **Date Produced**: 6/29/2019 9:23 AM\r\n- **Commit**: 901a1d554a7bcb489eb363fb724c9d294ec35940\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19329.1\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19329.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19329.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1294","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1294)"},{"Id":"462296158","IsPullRequest":true,"CreatedAt":"2019-06-29T12:14:00","Actor":"dotnet-maestro[bot]","Number":"1293","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190628.2\r\n- **Date Produced**: 6/28/2019 7:25 PM\r\n- **Commit**: a68bcce61fa64598cbd30c00780b1f6ca8e7a9ef\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19328.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1293","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1293)"},{"Id":"462019019","IsPullRequest":true,"CreatedAt":"2019-06-28T12:59:17","Actor":"dotnet-maestro[bot]","Number":"1292","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190627.9\r\n- **Date Produced**: 6/28/2019 4:10 AM\r\n- **Commit**: b8761d4848d42040c81ec25c8b51fd386b97f5f4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19327.9\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19327.9\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19327.9\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1292","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1292)"},{"Id":"462015053","IsPullRequest":false,"CreatedAt":"2019-06-28T12:38:56","Actor":"brad302","Number":"1291","RawContent":null,"Title":"Error NETSDK1022: Duplicate 'EmbeddedResource' items were included.","State":"open","Body":"Apologies if this isn't the correct place but it seems like the most logical place to start.\r\n\r\nI used this link ... [https://montemagno.com/how-to-convert-a-pcl-library-to-net-standard-and-keep-git-history/](https://montemagno.com/how-to-convert-a-pcl-library-to-net-standard-and-keep-git-history/) (which worked for other projects) ... to convert my PCL project in Xamarin Forms to .NET Standard 2.0 and ever since, I've had the issue where XAML files appear twice and no matter what I try, they simply will not fall back into line as one with the .cs file as its dependency ...\r\n\r\n<img width=\"301\" alt=\"Screen Shot 2019-06-28 at 10 25 57 pm\" src=\"https://user-images.githubusercontent.com/14899088/60342052-c43dd500-99f3-11e9-814e-c1441bde4484.png\">\r\n\r\n... even new XAML ContentPage files display the same behaviour, however, not initially.  If I close the project and reopen, they appear as 2.  I've tried removing and adding the files back in different ways but still no luck.\r\n\r\nMy .csproj file is very light on ...\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n    <PropertyGroup>\r\n        <TargetFramework>netstandard2.0</TargetFramework>\r\n    </PropertyGroup>\r\n    <ItemGroup>\r\n        <!--<PackageReference Include=\"\" Version=\"\"/>-->\r\n        <PackageReference Include=\"CarouselView.FormsPlugin\" Version=\"5.0.0\" />\r\n        <PackageReference Include=\"Com.Airbnb.Xamarin.Forms.Lottie\" Version=\"2.5.4\" />\r\n        <PackageReference Include=\"Microsoft.AppCenter.Analytics\" Version=\"2.1.1\" />\r\n        <PackageReference Include=\"Microsoft.AppCenter.Crashes\" Version=\"2.1.1\" />\r\n        <PackageReference Include=\"Newtonsoft.Json\" Version=\"11.0.2\" />\r\n        <PackageReference Include=\"Refit\" Version=\"4.5.6\" />\r\n        <PackageReference Include=\"SkiaSharp.Views.Forms\" Version=\"1.68.0\" />\r\n        <PackageReference Include=\"sqlite-net-pcl\" Version=\"1.5.231\" />\r\n        <PackageReference Include=\"System.Net.Http\" Version=\"4.3.4\" />\r\n        <PackageReference Include=\"Xam.Plugin.Media\" Version=\"4.0.1.5\" />\r\n        <PackageReference Include=\"Xam.Plugins.Forms.ImageCircle\" Version=\"3.0.0.5\" />\r\n        <PackageReference Include=\"Xam.Plugins.Messaging\" Version=\"5.2.0\" />\r\n        <PackageReference Include=\"Xamarin.Essentials\" Version=\"1.1.0\" />\r\n        <PackageReference Include=\"Xamarin.Forms\" Version=\"4.0.0.540366\" />\r\n        <PackageReference Include=\"Xamarin.Forms.Maps\" Version=\"4.0.0.540366\" />\r\n        <PackageReference Include=\"ZXing.Net.Mobile\" Version=\"2.4.1\" />\r\n        <PackageReference Include=\"ZXing.Net.Mobile.Forms\" Version=\"2.4.1\" />\r\n        <PackageReference Include=\"Microsoft.CSharp\" Version=\"4.5.0\" />\r\n        <PackageReference Include=\"UltimateXF\" Version=\"2.3.2\" />\r\n        <PackageReference Include=\"Microsoft.AppCenter.Auth\" Version=\"2.1.1\" />\r\n    </ItemGroup>\r\n</Project>\r\n```\r\n... and nothing on other community sites (e.g. StackOverflow) have helped me overcome this.\r\n\r\nThis is the entire error minus ALL of the XAML files within the project listed ...\r\n\r\n`/usr/local/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.DefaultItems.targets(5,5): Error NETSDK1022: Duplicate 'EmbeddedResource' items were included. The .NET SDK includes 'EmbeddedResource' items from your project directory by default. You can either remove these items from your project file, or set the 'EnableDefaultEmbeddedResourceItems' property to 'false' if you want to explicitly include them in your project file. For more information, see https://aka.ms/sdkimplicititems. The duplicate items were: 'App.xaml'; etc … (NETSDK1022) (cPanel)`\r\n\r\nI've looked at the resource in the error message, tried a number of things as listed but none had the desired outcome.\r\n\r\nEverything was behaving until I upgraded to Xamarin Forms 4.0 and want to move forward with the latest SDK.\r\n\r\nHopefully someone can help me through this.","Url":"https://github.com/dotnet/standard/issues/1291","RelatedDescription":"Open issue \"Error NETSDK1022: Duplicate 'EmbeddedResource' items were included.\" (#1291)"},{"Id":"462001956","IsPullRequest":true,"CreatedAt":"2019-06-28T12:14:01","Actor":"dotnet-maestro[bot]","Number":"1289","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190627.39\r\n- **Date Produced**: 6/28/2019 2:55 AM\r\n- **Commit**: 247c0290c554a68dd3e560dd88fb0da26353d9d7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19327.39\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1289","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1289)"},{"Id":"461045281","IsPullRequest":true,"CreatedAt":"2019-06-28T11:31:25","Actor":"roji","Number":"1284","RawContent":null,"Title":"Add feature detection properties to DbProviderFactory","State":"closed","Body":"CanCreateDataAdapter, CanCreateCommandBuilder\r\n\r\nSee https://github.com/dotnet/corefx/issues/35564\r\n\r\n/cc @divega @ajcvickers @terrajobst ","Url":"https://github.com/dotnet/standard/pull/1284","RelatedDescription":"Closed or merged PR \"Add feature detection properties to DbProviderFactory\" (#1284)"},{"Id":"461514630","IsPullRequest":true,"CreatedAt":"2019-06-27T13:08:53","Actor":"dotnet-maestro[bot]","Number":"1288","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190626.15\r\n- **Date Produced**: 6/27/2019 8:28 AM\r\n- **Commit**: 6d723b8e5ae3129c0a94252292322fc19673478f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview8.19326.15\r\n  - **System.Reflection.Emit** -> 4.6.0-preview8.19326.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview8.19326.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1288","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1288)"},{"Id":"461489560","IsPullRequest":true,"CreatedAt":"2019-06-27T12:14:35","Actor":"dotnet-maestro[bot]","Number":"1287","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190626.44\r\n- **Date Produced**: 6/27/2019 6:59 AM\r\n- **Commit**: d39a62deaf3aa4e03c0b7dadc320a517e0e00187\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19326.44\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19326.44\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1287","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1287)"},{"Id":"461135035","IsPullRequest":true,"CreatedAt":"2019-06-26T20:09:26","Actor":"dotnet-maestro-bot","Number":"1285","RawContent":null,"Title":"[automated] Merge branch 'master' => 'release/3.0'","State":"closed","Body":"I detected changes in the master branch which have not been merged yet to release/3.0. I'm a robot and am configured to help you automatically keep release/3.0 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on master by the following committers:\n\n* @42748379+dotnet-maestro[bot]\n* @dotnet-maestro[bot]\n* @terrajobst\n* @wtgodbe\n* @safern\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout master\r\ngit pull --ff-only\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit merge --no-ff master\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/standard HEAD:merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/master-to-release/3.0'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/master-to-release/3.0 release/3.0\r\ngit pull git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/standard merge/master-to-release/3.0\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/standard/pull/1285","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'master' => 'release/3.0'\" (#1285)"},{"Id":"461136908","IsPullRequest":true,"CreatedAt":"2019-06-26T19:14:40","Actor":"wtgodbe","Number":"1286","RawContent":null,"Title":"Update branding to preview8 in master","State":"closed","Body":"CC @terrajobst","Url":"https://github.com/dotnet/standard/pull/1286","RelatedDescription":"Closed or merged PR \"Update branding to preview8 in master\" (#1286)"},{"Id":"460955255","IsPullRequest":true,"CreatedAt":"2019-06-26T13:07:21","Actor":"dotnet-maestro[bot]","Number":"1282","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190626.2\r\n- **Date Produced**: 6/26/2019 10:31 AM\r\n- **Commit**: 219b67118e3a2d539afc1ff3bb2c10e1bc7b03d2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19326.2\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19326.2\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19326.2\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1282","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1282)"},{"Id":"460930584","IsPullRequest":true,"CreatedAt":"2019-06-26T12:14:12","Actor":"dotnet-maestro[bot]","Number":"1281","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190626.2\r\n- **Date Produced**: 6/26/2019 8:36 AM\r\n- **Commit**: 4b3d46cc75969c4e2de5786ec2b10a430b26dd9f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19326.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19326.2\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1281","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1281)"},{"Id":"460410476","IsPullRequest":true,"CreatedAt":"2019-06-25T13:10:58","Actor":"dotnet-maestro[bot]","Number":"1280","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190624.8\r\n- **Date Produced**: 6/25/2019 7:00 AM\r\n- **Commit**: 60d8aa31a4c1ffa0e125bd7941aca171439a2f72\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19324.8\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19324.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19324.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1280","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1280)"},{"Id":"460383422","IsPullRequest":true,"CreatedAt":"2019-06-25T12:13:57","Actor":"dotnet-maestro[bot]","Number":"1278","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190624.24\r\n- **Date Produced**: 6/25/2019 1:31 AM\r\n- **Commit**: 062febd818fa51e82c7192782a6b6e6429cc81c8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19324.24\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19324.24\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19324.24\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19324.24\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19324.24\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19324.24\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1278","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1278)"},{"Id":"460383487","IsPullRequest":false,"CreatedAt":"2019-06-25T12:04:02","Actor":"Rajesht2305","Number":"1279","RawContent":null,"Title":"System.PlatformNotSupportedException: 'Windows Principal functionality is not supported on this platform.'","State":"open","Body":"Hello Team,\r\nwe are using .net standard libraries in .net framework application. trying to access network share by using Impersonation but windows identity is throwing not supported exception. \r\n\r\nCode snippet: \r\n\r\n public void RunImpersonated(Action action)\r\n        {\r\n            using (WindowsIdentity identity = new WindowsIdentity(_token))\r\n            {\r\n                WindowsIdentity.RunImpersonated(identity.AccessToken, action);\r\n                //_context = identity.Impersonate();\r\n            }\r\n        }\r\n\r\n.net standard dll versions:\r\n.net standard -version 2.0\r\nSystem.Security.Principal.Windows - version: 4.1.1.1\r\n.net framework version -4.7.2\r\n\r\nany support to resolve this issue?","Url":"https://github.com/dotnet/standard/issues/1279","RelatedDescription":"Open issue \"System.PlatformNotSupportedException: 'Windows Principal functionality is not supported on this platform.'\" (#1279)"},{"Id":"459877781","IsPullRequest":true,"CreatedAt":"2019-06-24T13:09:35","Actor":"dotnet-maestro[bot]","Number":"1277","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190623.4\r\n- **Date Produced**: 6/24/2019 1:16 AM\r\n- **Commit**: 2861ef06530df06b70f17a91616d979c8f18f75e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit.Lightweight** -> 4.6.0-preview7.19323.4\r\n  - **System.Reflection.Emit** -> 4.6.0-preview7.19323.4\r\n  - **System.Reflection.Emit.ILGeneration** -> 4.6.0-preview7.19323.4\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1277","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1277)"},{"Id":"459852547","IsPullRequest":true,"CreatedAt":"2019-06-24T12:13:59","Actor":"dotnet-maestro[bot]","Number":"1276","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190623.4\r\n- **Date Produced**: 6/24/2019 7:07 AM\r\n- **Commit**: 9946534da4f73e6242ca105f6798ab58119c9ab0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19323.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19323.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19323.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19323.4\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19323.4\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19323.4\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1276","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#1276)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"463482194","IsPullRequest":true,"CreatedAt":"2019-07-03T04:57:10","Actor":"akost","Number":"39132","RawContent":null,"Title":"Fix comments and ellipsis in code examples","State":"closed","Body":"Fix comments and ellipsis in code examples to make it copy-pasteable.","Url":"https://github.com/dotnet/corefx/pull/39132","RelatedDescription":"Closed or merged PR \"Fix comments and ellipsis in code examples\" (#39132)"},{"Id":"463539707","IsPullRequest":true,"CreatedAt":"2019-07-03T04:33:57","Actor":"ericstj","Number":"39138","RawContent":null,"Title":"Make System.Resources.Extensions use old System.Memory","State":"open","Body":"System.Resources.Extensions needs to be loaded by Visual Studio and currently\r\nVS is still using an older copy of System.Memory and cannot upgrade.\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39138","RelatedDescription":"Open PR \"Make System.Resources.Extensions use old System.Memory\" (#39138)"},{"Id":"463388184","IsPullRequest":true,"CreatedAt":"2019-07-03T04:13:58","Actor":"stephentoub","Number":"39123","RawContent":null,"Title":"Fix DateTimeOffsetConverterTests test","State":"closed","Body":"We're getting a sporadic failure in CI due from a DateTimeOffset TypeConverter test.  I believe the issue is that another test which changes the current culture to fr-FR runs before or concurrently and ends up affecting the test.  I've fixed that test to do the culture change in another process (as is done in every other such test), but just in case that doesn't fix it, I've also augmented the test helper class that represents a test case here to have a ToString that makes the xunit output more debuggable.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/39084 (hopefully)\r\n\r\ncc: @hughbe, @maryamariyan, @safern","Url":"https://github.com/dotnet/corefx/pull/39123","RelatedDescription":"Closed or merged PR \"Fix DateTimeOffsetConverterTests test\" (#39123)"},{"Id":"463489974","IsPullRequest":true,"CreatedAt":"2019-07-03T02:34:07","Actor":"stephentoub","Number":"39135","RawContent":null,"Title":"Stop using EDI.Throw for shared exception objects in HTTP/2","State":"closed","Body":"Contributes to https://github.com/dotnet/corefx/issues/38911.  Avoids corrupting a stack trace by having multiple unrelated stacks merged together.\r\ncc: @geoffkizer \r\n\r\n(This doesn't address the question asked in https://github.com/dotnet/corefx/issues/38911#issuecomment-507890180.)","Url":"https://github.com/dotnet/corefx/pull/39135","RelatedDescription":"Closed or merged PR \"Stop using EDI.Throw for shared exception objects in HTTP/2\" (#39135)"},{"Id":"463499044","IsPullRequest":true,"CreatedAt":"2019-07-03T01:15:58","Actor":"stephentoub","Number":"39137","RawContent":null,"Title":"Ensure HttpClient.Get*Async helpers wrap IOExceptions","State":"open","Body":"IOExceptions may emerge from the underlying response streams, but GetString/ByteArrayAsync should throw a wrapper HttpRequestException in this case.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/39118\r\ncc: @davidsh, @geoffkizer, @scalablecory, @wfurt","Url":"https://github.com/dotnet/corefx/pull/39137","RelatedDescription":"Open PR \"Ensure HttpClient.Get*Async helpers wrap IOExceptions\" (#39137)"},{"Id":"463498388","IsPullRequest":false,"CreatedAt":"2019-07-03T01:12:40","Actor":"stephentoub","Number":"39136","RawContent":null,"Title":"WinHttpHandler succeeds erroneously when receiving partial content","State":"open","Body":"In this example, the server says it has a Content-Length of 5 but then only sends 2 bytes.  The built-in handlers in .NET Framework and .NET Core both fail appropriately, but WinHttpHandler ignores the discrepancy and returns the 2 bytes without error.\r\n```C#\r\nusing System;\r\nusing System.IO;\r\nusing System.Net;\r\nusing System.Net.Http;\r\nusing System.Net.Sockets;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\n\r\nclass Program\r\n{\r\n    static async Task Main()\r\n    {\r\n        using (var listener = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp))\r\n        {\r\n            listener.Bind(new IPEndPoint(IPAddress.Loopback, 0));\r\n            listener.Listen(1);\r\n            string uri = \"http://localhost:\" + ((IPEndPoint)listener.LocalEndPoint).Port;\r\n\r\n            using (var client = new HttpClient(new WinHttpHandler()))\r\n            {\r\n                Task<string> t = client.GetStringAsync(uri);\r\n                using (Socket server = listener.Accept())\r\n                using (var reader = new StreamReader(new NetworkStream(server)))\r\n                {\r\n                    while (!string.IsNullOrEmpty(reader.ReadLine())) ;\r\n                    server.Send(Encoding.UTF8.GetBytes(\"HTTP/1.1 200 OK\\r\\nContent-Length: 5\\r\\n\\r\\nhe\"));\r\n                    server.Dispose();\r\n                    Console.WriteLine(await t);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\ncc: @davidsh","Url":"https://github.com/dotnet/corefx/issues/39136","RelatedDescription":"Open issue \"WinHttpHandler succeeds erroneously when receiving partial content\" (#39136)"},{"Id":"463485279","IsPullRequest":true,"CreatedAt":"2019-07-03T00:03:45","Actor":"safern","Number":"39134","RawContent":null,"Title":"Fix conflict resolution for design time build","State":"open","Body":"I will cleanup these targets later as I want to unblock people who are hitting this issue.\r\n\r\nFixes: #39133 \r\n\r\ncc @scalablecory ","Url":"https://github.com/dotnet/corefx/pull/39134","RelatedDescription":"Open PR \"Fix conflict resolution for design time build\" (#39134)"},{"Id":"463484796","IsPullRequest":false,"CreatedAt":"2019-07-03T00:01:54","Actor":"safern","Number":"39133","RawContent":null,"Title":"Test projects in VS show a conflict in intellisense because of populating reference item too late","State":"open","Body":"When in design time build, now that we depend on conflict resolution, the `Reference` item is populated too late so `_HandlePackageFileConflicts` is not handling conflicts correctly. So when conflict resolution runs it only has the reference coming from the packages, so it doesn't resolve conflicts.\r\n\r\n![image](https://user-images.githubusercontent.com/22899328/60553998-b71e3000-9cea-11e9-9a35-ac494aefb6e0.png)\r\n\r\nSo after looking at the design time binlogs I figured we can hook up to `PrepareForBuild` in order to add references dynamically and that would fix the issue.\r\n\r\nHowever, this all looks kind of hacky and we can be able to cleanup `reference.targets` and perhaps hook it up earlier, maybe through an initial targets or something like that.\r\n\r\ncc: @ViktorHofer @ericstj @scalablecory ","Url":"https://github.com/dotnet/corefx/issues/39133","RelatedDescription":"Open issue \"Test projects in VS show a conflict in intellisense because of populating reference item too late\" (#39133)"},{"Id":"463426384","IsPullRequest":true,"CreatedAt":"2019-07-02T23:01:21","Actor":"dotnet-maestro[bot]","Number":"39128","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c090f591-8433-4a8c-54c8-08d6c734018a)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190702.8\r\n- **Date Produced**: 7/2/2019 8:08 PM\r\n- **Commit**: a9422da6ed91b413019ef93051613c5f03801d64\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19352.8\r\n\r\n[marker]: <> (End:c090f591-8433-4a8c-54c8-08d6c734018a)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39128","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/standard\" (#39128)"},{"Id":"463452249","IsPullRequest":true,"CreatedAt":"2019-07-02T21:51:56","Actor":"VSadov","Number":"39131","RawContent":null,"Title":"Enabling GetGCMemoryInfo test","State":"open","Body":"Enabling GetGCMemoryInfo test.\r\n\r\n\r\nFixes: https://github.com/dotnet/corefx/issues/37378","Url":"https://github.com/dotnet/corefx/pull/39131","RelatedDescription":"Open PR \"Enabling GetGCMemoryInfo test\" (#39131)"},{"Id":"463411661","IsPullRequest":true,"CreatedAt":"2019-07-02T21:21:11","Actor":"stephentoub","Number":"39125","RawContent":null,"Title":"Update HttpStress app to accommodate recent changes","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/39125","RelatedDescription":"Closed or merged PR \"Update HttpStress app to accommodate recent changes\" (#39125)"},{"Id":"463255560","IsPullRequest":true,"CreatedAt":"2019-07-02T21:14:11","Actor":"wfurt","Number":"39117","RawContent":null,"Title":"correct sending RST when request body fails","State":"closed","Body":"When we cancel while sending RequestBody we could send multiple reset frames. This should be fixed now as well as I added new test to cover cases when cancel before and after body send starts. \r\n\r\nWith new test, I verified that it fails before product fix. \r\nThere was still some delay before second RST was sent so I added some delay to processing of second request to allow all tasks from first request to complete.  \r\n\r\nfixes #38913 (test coverage) \r\nfixes #39016","Url":"https://github.com/dotnet/corefx/pull/39117","RelatedDescription":"Closed or merged PR \"correct sending RST when request body fails\" (#39117)"},{"Id":"463436692","IsPullRequest":false,"CreatedAt":"2019-07-02T21:08:34","Actor":"krispenner","Number":"39130","RawContent":null,"Title":"Question: Start Activity from Hosted Service example","State":"open","Body":"The [Activity User Guide](https://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.DiagnosticSource/src/ActivityUserGuide.md#starting-and-stopping-activity) demonstrates creating and starting a new Activity relating to an ASP.NET Core HTTP request and pipeline as do most examples on the Internet.\r\n\r\nHowever, I'm trying to start an Activity from a IHostedService implementation where there is no HTTP request, pipeline or context available. I also need to create child activities to be tracked. It would be nice to provide an example of this sort of Activity usage as well. I can't seem to find one. While I believe I have roughly figured it out myself, it would be nice to have confirmation based on a simple working sample that isn't solely based on ASP.NET and can be used in any other application outside of the ASP.NET pipeline/runtime.","Url":"https://github.com/dotnet/corefx/issues/39130","RelatedDescription":"Open issue \"Question: Start Activity from Hosted Service example\" (#39130)"},{"Id":"463431559","IsPullRequest":false,"CreatedAt":"2019-07-02T20:55:22","Actor":"krispenner","Number":"39129","RawContent":null,"Title":"Question: Activity User Guide Sample Issue","State":"open","Body":"Regarding: [Activity User Guide](https://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.DiagnosticSource/src/ActivityUserGuide.md#starting-and-stopping-activity)\r\n\r\nI'm questioning the sample given which uses `if (httpListener.IsEnabled(\"Http_In\"))` _to avoid creating activities when no-one is listening to them and to enable event name-based filtering or sampling_. It would also prevent the actual activity tracked underlying process from executing if the above returns false. I would assume that would not be wanted unless I'm not understanding its use correctly.\r\n\r\nWould a clearer working example look more like:\r\n\r\n```cs\r\npublic void OnIncomingRequest(DiagnosticListener httpListener, HttpContext context)\r\n{\r\n    Activity activity = httpListener.IsEnabled(\"Http_In\") ? new Activity(\"Http_In\") : null;\r\n\r\n    if (activity != null)\r\n    {\r\n        //add tags, baggage, etc.\r\n        activity.SetParentId(context.Request.headers[\"Request-id\"])\r\n        foreach (var pair in context.Request.Headers[\"Correlation-Context\"])\r\n        {\r\n            var baggageItem = NameValueHeaderValue.Parse(pair);\r\n            activity.AddBaggage(baggageItem.Key, baggageItem.Value);\r\n        }     \r\n        httpListener.StartActivity(activity, new  {context});\r\n    }\r\n\r\n    try\r\n    {\r\n        //process request ... (THIS IS NOW ALWAYS EXECUTED)\r\n    }\r\n    finally\r\n    {\r\n        if (activity != null)\r\n        {\r\n            //stop activity\r\n            httpListener.StopActivity(activity, new {context} );\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe above sample now ensures that the underlying process is still executed regardless of whether the activity tracking it is to be enabled or not.\r\nThis is not meant to complain about the example but just to confirm my understanding of it and possibly suggest proper usage of it.\r\nSame applies to the [Creating Child Activities](https://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.DiagnosticSource/src/ActivityUserGuide.md#creating-child-activities) sample as well.","Url":"https://github.com/dotnet/corefx/issues/39129","RelatedDescription":"Open issue \"Question: Activity User Guide Sample Issue\" (#39129)"},{"Id":"463422589","IsPullRequest":true,"CreatedAt":"2019-07-02T20:32:38","Actor":"krwq","Number":"39127","RawContent":null,"Title":"Retry on GOAWAY","State":"open","Body":"Fixes: https://github.com/dotnet/corefx/issues/39013\r\n\r\nThere is still some behavior which needs to be figured out so until then marking this as draft:\r\nhttps://github.com/dotnet/corefx/issues/39013#issuecomment-507820160\r\n\r\nMore tests will be added in:\r\nhttps://github.com/dotnet/corefx/issues/34638\r\n\r\nRegardless of above there seem to be some flakiness in the test now which I'm investigating","Url":"https://github.com/dotnet/corefx/pull/39127","RelatedDescription":"Open PR \"Retry on GOAWAY\" (#39127)"},{"Id":"463379001","IsPullRequest":true,"CreatedAt":"2019-07-02T20:30:52","Actor":"wtgodbe","Number":"39122","RawContent":null,"Title":"Remove cancellation token from new System.Data CloseAsync() (#39070)","State":"closed","Body":"Affects DbDataReader and DbConnection, since these APIs are very likely\r\nto be used for cleanup only, in which case a cancellation token is\r\nan anti-pattern (similar to why DisposeAsync doesn't accept one).\r\n\r\nSee discussion here:\r\nhttps://github.com/dotnet/standard/pull/1283#pullrequestreview-255383035\r\n\r\nFixes #39069\r\n\r\nHas been approved for preview7\r\n\r\nCC @danmosemsft @roji @terrajobst ","Url":"https://github.com/dotnet/corefx/pull/39122","RelatedDescription":"Closed or merged PR \"Remove cancellation token from new System.Data CloseAsync() (#39070)\" (#39122)"},{"Id":"463416913","IsPullRequest":true,"CreatedAt":"2019-07-02T20:18:30","Actor":"steveisok","Number":"39126","RawContent":null,"Title":"Added a fsw notify test to validate no event fires for a file with spaces on Windows","State":"open","Body":"I was working on the Mono fork where we need to enforce the netfx behavior (no spaces) across the board. Figured it would be useful upstream in the Windows form.","Url":"https://github.com/dotnet/corefx/pull/39126","RelatedDescription":"Open PR \"Added a fsw notify test to validate no event fires for a file with spaces on Windows\" (#39126)"},{"Id":"463393679","IsPullRequest":true,"CreatedAt":"2019-07-02T19:18:08","Actor":"dotnet-maestro[bot]","Number":"39124","RawContent":null,"Title":"[master] Update dependencies from dotnet/standard","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190702.7\r\n- **Date Produced**: 7/2/2019 7:43 PM\r\n- **Commit**: db4f0e5f578646f5f5d601ebe6ea8265424d3ab1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19352.7\r\n\r\n[marker]: <> (End:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39124","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/standard\" (#39124)"},{"Id":"463361449","IsPullRequest":false,"CreatedAt":"2019-07-02T17:57:22","Actor":"hughbe","Number":"39121","RawContent":null,"Title":"new CultureInfoConverter.ConvertTo(1, typeof(string)) throws InvalidCastException","State":"open","Body":"Should fallthrough and convert to string","Url":"https://github.com/dotnet/corefx/issues/39121","RelatedDescription":"Open issue \"new CultureInfoConverter.ConvertTo(1, typeof(string)) throws InvalidCastException\" (#39121)"},{"Id":"463229868","IsPullRequest":true,"CreatedAt":"2019-07-02T17:49:44","Actor":"dotnet-maestro[bot]","Number":"39115","RawContent":null,"Title":"[master] Update dependencies from dotnet/standard","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n## From https://github.com/dotnet/standard\r\n- **Build**: 20190702.2\r\n- **Date Produced**: 7/2/2019 1:26 PM\r\n- **Commit**: faff161e45dccd597a990a2de5fd0f071f7a3314\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **NETStandard.Library** -> 2.1.0-prerelease.19352.2\r\n\r\n[marker]: <> (End:a2867060-7cad-40ad-7917-08d6937ac7c4)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39115","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/standard\" (#39115)"},{"Id":"463212230","IsPullRequest":true,"CreatedAt":"2019-07-02T17:49:19","Actor":"dotnet-maestro[bot]","Number":"39113","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-optimization","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:df6412e4-c5aa-49d0-4dd9-08d6bc676830)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-optimization\r\n- **Build**: 20190702.1\r\n- **Date Produced**: 7/2/2019 11:12 AM\r\n- **Commit**: 64ba400f7a97ce8d6f2c52ab0d3ae27379920502\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **optimization.windows_nt-x64.IBC.CoreFx** -> 99.99.99-master-20190702.1\r\n\r\n[marker]: <> (End:df6412e4-c5aa-49d0-4dd9-08d6bc676830)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39113","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-optimization\" (#39113)"},{"Id":"463208158","IsPullRequest":true,"CreatedAt":"2019-07-02T17:48:40","Actor":"dotnet-maestro[bot]","Number":"39112","RawContent":null,"Title":"[master] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20190701.2\r\n- **Date Produced**: 7/2/2019 12:47 AM\r\n- **Commit**: c81d3caee2cfd7a401429dea9709acc18064acdd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.0.0-preview8.19351.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.0.0-preview8.19351.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview8.19351.2\r\n\r\n[marker]: <> (End:be1e858a-d56c-4174-7dc0-08d6ba16a224)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39112","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/coreclr\" (#39112)"},{"Id":"463200980","IsPullRequest":true,"CreatedAt":"2019-07-02T17:48:01","Actor":"dotnet-maestro[bot]","Number":"39111","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20190702.1\r\n- **Date Produced**: 7/2/2019 10:08 AM\r\n- **Commit**: ec138afba514ce9b53d931d66129e02e8be147a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.native.System.IO.Ports** -> 4.6.0-preview8.19352.1\r\n  - **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19352.1\r\n\r\n[marker]: <> (End:368e60b9-57f7-48bd-020d-08d6874ba0bd)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39111","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#39111)"},{"Id":"463198919","IsPullRequest":true,"CreatedAt":"2019-07-02T17:47:20","Actor":"dotnet-maestro[bot]","Number":"39110","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190701.11\r\n- **Date Produced**: 7/2/2019 8:12 AM\r\n- **Commit**: 389c9aa23e5f169c3473583a8b3dc2bc2c4734a8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27901-11\r\n  - **Microsoft.NETCore.DotNetHostPolicy** -> 3.0.0-preview8-27901-11\r\n  - **Microsoft.NETCore.DotNetHost** -> 3.0.0-preview8-27901-11\r\n\r\n[marker]: <> (End:08549e3e-8f8e-4201-dc38-08d6815d521b)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39110","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#39110)"},{"Id":"463334721","IsPullRequest":true,"CreatedAt":"2019-07-02T16:51:53","Actor":"omajid","Number":"39120","RawContent":null,"Title":"Add RHEL 8.1 runtime id to the runtime id graph","State":"open","Body":"RHEL 8.1 is expected to release around 6 months after RHEL 8.0. That would put it around Nov 2019. If it follows the RHEL 7 tradition, it should get identified as 'rhel.8.1`.","Url":"https://github.com/dotnet/corefx/pull/39120","RelatedDescription":"Open PR \"Add RHEL 8.1 runtime id to the runtime id graph\" (#39120)"},{"Id":"463269841","IsPullRequest":false,"CreatedAt":"2019-07-02T14:42:38","Actor":"stephentoub","Number":"39118","RawContent":null,"Title":"HttpClient.Get*Async helpers throw different exceptions depending on where it occurs","State":"open","Body":"If an exception occurs while retrieving the headers, then an HttpRequestException emerges.  If an exception occurs while processing the response body, then an IOException emerges.","Url":"https://github.com/dotnet/corefx/issues/39118","RelatedDescription":"Open issue \"HttpClient.Get*Async helpers throw different exceptions depending on where it occurs\" (#39118)"},{"Id":"463234467","IsPullRequest":true,"CreatedAt":"2019-07-02T14:30:37","Actor":"Dotnet-GitSync-Bot","Number":"39116","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @MichalStrehovsky","Url":"https://github.com/dotnet/corefx/pull/39116","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#39116)"},{"Id":"463189688","IsPullRequest":true,"CreatedAt":"2019-07-02T13:34:47","Actor":"dotnet-maestro[bot]","Number":"39109","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190701.4\r\n- **Date Produced**: 7/1/2019 9:33 PM\r\n- **Commit**: 1fb1e240c889cd7f6e10cb1eacd129efa3ddb4b4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19351.4\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19351.4\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19351.4\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19351.4\r\n\r\n[marker]: <> (End:c297d885-0692-40f8-6b97-08d61f281b4c)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/39109","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#39109)"},{"Id":"463215409","IsPullRequest":false,"CreatedAt":"2019-07-02T12:59:38","Actor":"vcsjones","Number":"39114","RawContent":null,"Title":"Deprecation errors compiling native projects on macOS Catalina ","State":"open","Body":"Compiling CoreFx on Catalina results in several deprecation errors, one of such is below.\r\n\r\n> Error G11420DD6: 'CC_MD5_Init' is deprecated: first deprecated in macOS 10.15 - This function is cryptographically broken and should not be used in security contexts. Clients should migrate to SHA256 (or stronger). [-Werror,-Wdeprecated-declarations] [/Users/kjones/Projects/corefx/src/Native/build-native.proj]\r\n              return CC_MD5_Init(&ctx->d.md5);\r\n\r\n\r\nFor the benefit of other contributors that are running the beta and wish to compile corefx, this can be worked around by adding this line:\r\n\r\n```\r\nadd_compile_options(-Wno-deprecated-declarations)\r\n```\r\n\r\nto ./src/Native/Unix/System.Security.Cryptography.Native.Apple/CMakeLists.txt before `add_definitions`. For example:\r\n\r\n```\r\nproject(System.Security.Cryptography.Native.Apple C)\r\n\r\nset(CMAKE_INCLUDE_CURRENT_DIR ON)\r\nadd_compile_options(-Wno-deprecated-declarations)\r\n\r\nadd_definitions(-DPIC=1)\r\n```\r\n\r\nWhile I realize Catalina is beta at the time of writing, I do not anticipate this behavior will change.","Url":"https://github.com/dotnet/corefx/issues/39114","RelatedDescription":"Open issue \"Deprecation errors compiling native projects on macOS Catalina \" (#39114)"},{"Id":"463173382","IsPullRequest":false,"CreatedAt":"2019-07-02T11:25:28","Actor":"ViktorHofer","Number":"39108","RawContent":null,"Title":"System.IO.Tests.*.DoesntExistThenCreate_ReturnsDefaultValues fails on CI","State":"open","Body":"- DoesntExistThenCreate_ReturnsDefaultValues\r\n\r\nhttps://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fpull~2F38676~2Fmerge/test~2Ffunctional~2Fcli~2Finnerloop~2F/20190701.40/workItem/System.IO.FileSystem.Tests","Url":"https://github.com/dotnet/corefx/issues/39108","RelatedDescription":"Open issue \"System.IO.Tests.*.DoesntExistThenCreate_ReturnsDefaultValues fails on CI\" (#39108)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"463481349","IsPullRequest":true,"CreatedAt":"2019-07-03T04:01:45","Actor":"ivanbasov","Number":"36940","RawContent":null,"Title":"Hang on applying code action on a single unopened file","State":"closed","Body":"Fixes https://github.com/dotnet/roslyn/issues/36938\r\n\r\n`Microsoft.CodeAnalysis.EditorFeatures.Wpf.dll!Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedAction.InvokeWorker(System.Func<Microsoft.CodeAnalysis.Document> getFromDocument, Microsoft.CodeAnalysis.Shared.Utilities.IProgressTracker progressTracker, System.Threading.CancellationToken cancellationToken) `\r\ncalls\r\n`EditHandler.Apply(Async)`\r\n\r\nApplyAsync has the only asynchronous call to \r\n```\r\n// ConfigureAwait(true) so we come back to the same thread as \t                \r\n// we do all application on the UI thread.\r\nvar text = await singleChangedDocument.GetTextAsync(cancellationToken).ConfigureAwait(true);\r\n```\r\nwhich could lead to a deadlock with the caller.\r\n  ","Url":"https://github.com/dotnet/roslyn/pull/36940","RelatedDescription":"Closed or merged PR \"Hang on applying code action on a single unopened file\" (#36940)"},{"Id":"463478147","IsPullRequest":false,"CreatedAt":"2019-07-03T04:01:45","Actor":"vsfeedback","Number":"36938","RawContent":null,"Title":"Hang on applying code action on a single unopened file","State":"closed","Body":"VSF_TYPE_MARKDOWNTrying to invoke a quick action or intellisense sometimes causes VS to freeze and needs to be force closed.\n\nNo specific repro steps, it happens seemingly randomly a couple of times a day.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/624919/ui-hang.html\nVSTS ticketId: 938306_\n_These are the original issue comments:_\n\nVisual Studio Feedback System on 6/27/2019, 01:15 AM (5 days ago): <markdown><p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n</markdown>\nVisual Studio Feedback System on 7/1/2019, 05:04 PM (23 hours ago): <markdown><p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n</markdown>\next.par.bjorklund on 7/1/2019, 10:11 PM (18 hours ago): <p>I got frustrated yesterday and uninstalled IntelliCode and things have been better since then. I wouldn't say completely gone but happening less often and shorter time periods</p>\n\nGunnar Skogsholm on 7/2/2019, 06:49 AM (9 hours ago): I have also been experiencing this at various times, since VS2015 days.  A couple of releases have been better than others, but it's back now with 16.1.4\n_These are the original issue solutions:_\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/36938","RelatedDescription":"Closed issue \"Hang on applying code action on a single unopened file\" (#36938)"},{"Id":"463525863","IsPullRequest":true,"CreatedAt":"2019-07-03T03:30:50","Actor":"daxianji007","Number":"36949","RawContent":null,"Title":"Update incorrect seealso link","State":"closed","Body":"Seems the seealso link is incorrect (or maybe outdated).","Url":"https://github.com/dotnet/roslyn/pull/36949","RelatedDescription":"Closed or merged PR \"Update incorrect seealso link\" (#36949)"},{"Id":"463506877","IsPullRequest":true,"CreatedAt":"2019-07-03T01:55:45","Actor":"mairaw","Number":"36948","RawContent":null,"Title":"Fix broken See also links","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/36948","RelatedDescription":"Open PR \"Fix broken See also links\" (#36948)"},{"Id":"463496044","IsPullRequest":false,"CreatedAt":"2019-07-03T01:00:16","Actor":"TessenR","Number":"36947","RawContent":null,"Title":"Incorrect warnings reported for deconstruction with user-defined conversions and cannot be suppressed","State":"open","Body":"**Version Used**: \r\n\r\n```\r\nBranch master (21 Jun 2019)\r\nLatest commit 898bed by Heejae Chang:\r\nadded NFW to get some data on incremental parsing bug where source si� (#36620)\r\n\r\n* added NFW to get some data on incremental parsing bug where source size and tree size is different\r\n\r\n* more comments\r\n```\r\n\r\n**Steps to Reproduce**:\r\n\r\nCompile the following code:\r\n```cs\r\n#nullable enable\r\nclass C\r\n{\r\n  static void Main()\r\n  {\r\n      (B b1, B b2) = new C();\r\n  }\r\n\r\n  public extern void Deconstruct(out A? a1, out A a2);\r\n}\r\n\r\nclass A { }\r\nclass B { public static extern implicit operator B(A a); }\r\n```\r\n\r\n**Expected Behavior**:\r\n`warning CS8600: Converting null literal or possible null value to non-nullable type.` reported for the deconstruction source i.e. `new C()`.\r\nI believe it would be possible to suppress the warning if it is reported for `new C()`\r\n\r\n**Actual Behavior**:\r\nThe following two warnings are reported for the declaration expression `B b1`\r\n```\r\nwarning CS8600: Converting null literal or possible null value to non-nullable type.\r\nwarning CS8624: Argument of type 'B' cannot be used as an output of type 'A' for parameter 'a1' in 'void C.Deconstruct(out A? a1, out A a2)' due to differences in the nullability of reference types.\r\n```\r\nThe following warning is reported for the declaration expression `B b2`\r\n```\r\nwarning CS8624: Argument of type 'B' cannot be used as an output of type 'A' for parameter 'a2' in 'void C.Deconstruct(out A? a1, out A a2)' due to differences in the nullability of reference types.\r\n```\r\n\r\nIt's impossible to suppress any of these warnings as placing the suppression operator `!` anywhere on the left side of the assignment results in compilation errors.\r\n\r\n**Notes** \r\nReporting  `CS8600: Converting null literal or possible null value to non-nullable type.` for the declaration expression `B b1` seems strange and misleading as it's a declaration of a variable and null value cannot be assigned to it according to the conversion operator signature.\r\nI'm pretty sure `CS8624` warnings shouldn't be reported at all as there's no nullability mismatch between these types - they just aren't equal regardless of nullability annotations. Note that this warning is **not** reported if the conversion/assignment happens outside of a deconstruction e.g. `B b = (A) null; // CS8600 only`.\r\nNote that current location for these warnings also makes it completely impossible to suppress them via the suppression operator `!`","Url":"https://github.com/dotnet/roslyn/issues/36947","RelatedDescription":"Open issue \"Incorrect warnings reported for deconstruction with user-defined conversions and cannot be suppressed\" (#36947)"},{"Id":"463489801","IsPullRequest":false,"CreatedAt":"2019-07-03T00:25:42","Actor":"TessenR","Number":"36946","RawContent":null,"Title":"Roslyn processes tuple/deconstruction assignments in incorrect order in nulalble analysis","State":"open","Body":"**Version Used**: \r\n\r\n```\r\nBranch master (21 Jun 2019)\r\nLatest commit 898bed by Heejae Chang:\r\nadded NFW to get some data on incremental parsing bug where source si� (#36620)\r\n\r\n* added NFW to get some data on incremental parsing bug where source size and tree size is different\r\n\r\n* more comments\r\n```\r\n\r\n**Steps to Reproduce**:\r\n\r\nCompile and run the following code:\r\n```cs\r\n#nullable enable\r\nclass C\r\n{\r\n  static void Main()\r\n  {\r\n      M(null);\r\n  }\r\n\r\n  static void M(string? s)\r\n  {\r\n    (s, _) = (null, s = \"\");\r\n    s.ToString();\r\n  }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nWarning for `s.ToString();` as `s` is always assigned with `null`.\r\n\r\n**Actual Behavior**:\r\nNo warnings. The code crashes at runtime with a `NullReferenceException`\r\n\r\n**Notes**\r\nRoslyn seems to process tuple assignments as if they happen after evaluating a corresponding component of a right hand side tuple. As assignments actually happen after the expression on the right is fully evaluated that leads to incorrect inferred variables' states and consequently missing or false positive warnings\r\n\r\nHere are some other examples of the same problem:\r\n```cs\r\n  static void M1(string? s)\r\n  {\r\n    s = null;\r\n    (s, _) = (\"\", s.ToString()); // no warnings, crashes at runtime\r\n  }\r\n\r\n  static void M2(string? s)\r\n  {\r\n    (s, _) = (\"\", UseS(ref s));\r\n     s.ToString(); // false positive CS8602, 's' cannot contain null here\r\n  }\r\n    \r\n  static extern string UseS(ref string? s);\r\n```\r\n\r\nThis gets even worse/more strange with deconstruction as Roslyn thinks that assignment of a deconstruction result happens before the deconstruction itself. E.g. in the following code snippet Roslyn issues incorrect warning for the ref argument but fails to warn about actual crash with a `NullReferenceException` as it seems to think that `s` is assigned with a first component of `UseS(ref s)` result before `UseS(ref s)` is evaluated.\r\n```cs\r\n  static void M(string? s)\r\n  {\r\n    s = \"\";\r\n    (s, _) = UseS(ref s); // false positive CS8601: Possible null reference assignment.\r\n     s.ToString(); // no warnings, crashes at runtime\r\n  }\r\n    \r\n  static (string?, string?) UseS(ref string s) => (\"\", \"\");\r\n```","Url":"https://github.com/dotnet/roslyn/issues/36946","RelatedDescription":"Open issue \"Roslyn processes tuple/deconstruction assignments in incorrect order in nulalble analysis\" (#36946)"},{"Id":"463485803","IsPullRequest":false,"CreatedAt":"2019-07-03T00:06:08","Actor":"chborl","Number":"36945","RawContent":null,"Title":"Complete Statement should not move semicolon outside of lambda statements","State":"open","Body":"I encounter this issue a lot when converting single line lambda expressions into multiline (block).\r\nFor example, typing a semicolon after ToString() inserts the semicolon at the end of the line:\r\n    var items = new[] { 1, 2, 3 };\r\n    items.Select(i => { i.ToString())\r\n\r\nThis issue comes from comments added to https://developercommunity.visualstudio.com/content/problem/605241/typing-a-semicolon-within-a-function-argument-list.html\r\n","Url":"https://github.com/dotnet/roslyn/issues/36945","RelatedDescription":"Open issue \"Complete Statement should not move semicolon outside of lambda statements\" (#36945)"},{"Id":"463484935","IsPullRequest":true,"CreatedAt":"2019-07-03T00:02:26","Actor":"dotnet-bot","Number":"36944","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"open","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36944","RelatedDescription":"Open PR \"Merge master to features/param-nullchecking\" (#36944)"},{"Id":"463484859","IsPullRequest":true,"CreatedAt":"2019-07-03T00:02:06","Actor":"dotnet-bot","Number":"36943","RawContent":null,"Title":"Merge master to features/lspSupport","State":"open","Body":"\nThis is an automatically generated pull request from master into features/lspSupport.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/lspSupport\ngit reset --hard upstream/features/lspSupport\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/lspSupport --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36943","RelatedDescription":"Open PR \"Merge master to features/lspSupport\" (#36943)"},{"Id":"463484818","IsPullRequest":true,"CreatedAt":"2019-07-03T00:01:58","Actor":"dotnet-bot","Number":"36942","RawContent":null,"Title":"Merge master to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36942","RelatedDescription":"Open PR \"Merge master to master-vs-deps\" (#36942)"},{"Id":"463484634","IsPullRequest":true,"CreatedAt":"2019-07-03T00:01:12","Actor":"dotnet-bot","Number":"36941","RawContent":null,"Title":"Merge release/dev16.3-preview1-vs-deps to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview1-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.3-preview1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36941","RelatedDescription":"Open PR \"Merge release/dev16.3-preview1-vs-deps to master-vs-deps\" (#36941)"},{"Id":"463481271","IsPullRequest":true,"CreatedAt":"2019-07-02T23:44:23","Actor":"JoeRobich","Number":"36939","RawContent":null,"Title":"Update .NET Core SDK Url in build on Windows instructions","State":"open","Body":"dotnet-maestro was inconsiderate and [updated the dotnet version in global.json](https://github.com/dotnet/roslyn/commit/ea4ab12b29aae25a5188af9e0ae0350f74a17f26#diff-274660eb4b1b1d963a330b471e10f41c) without updating the url in Building on Windows documentation.\r\n","Url":"https://github.com/dotnet/roslyn/pull/36939","RelatedDescription":"Open PR \"Update .NET Core SDK Url in build on Windows instructions\" (#36939)"},{"Id":"462960583","IsPullRequest":true,"CreatedAt":"2019-07-02T23:00:06","Actor":"dotnet-bot","Number":"36922","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36922","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#36922)"},{"Id":"462960408","IsPullRequest":true,"CreatedAt":"2019-07-02T22:00:13","Actor":"dotnet-bot","Number":"36920","RawContent":null,"Title":"Merge release/dev16.3-preview1-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview1-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.3-preview1-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36920","RelatedDescription":"Closed or merged PR \"Merge release/dev16.3-preview1-vs-deps to master-vs-deps\" (#36920)"},{"Id":"463450731","IsPullRequest":false,"CreatedAt":"2019-07-02T21:47:14","Actor":"heejaechang","Number":"36937","RawContent":null,"Title":"discuss on JTF usage in Roslyn","State":"open","Body":"we have introduced JTF in Roslyn but it looks like we haven't decided how deeply we will embrace JTF to Roslyn.\r\n\r\nhere JTF refers to this (https://github.com/Microsoft/vs-threading)\r\n\r\nthe reason we introduced JTF to Roslyn is that VS (including variants of VS such as VS for mac) uses it.\r\n\r\nfor VS, it is a core part of VS on how they manage tasks or switch threads (especially UI thread) without deadlock. and it only works if everyone who participates in VS, use JTF. otherwise, VS can get into a deadlock.\r\n\r\nfor example, if someone did, JTF.SwitchToMainThreadAsync(http://index/?query=SwitchTomainTh&rightProject=Microsoft.VisualStudio.Threading&file=JoinableTaskFactory.cs&line=171) and people who is on UI thread doesn't use proper JTF construct such as JTF.Run on blocking UI thread such as (Task.Wait or Result), VS can get into a deadlock.\r\n\r\nso, as long as VS is one of Host Roslyn will support, we need to use JTF. for that, we have this \r\nhttp://source.roslyn.io/#Microsoft.CodeAnalysis.EditorFeatures/Shared/Utilities/IThreadingContext.cs,11\r\n\r\nnow the question is how deeply we will embrace JTF. certainly, JTF is a complete framework to do a complex threading model. but the reason Roslyn introduced JTF is not for its full ability, but due to the requirement of VS. especially if we do blocking wait on UI thread on async method that can lead to deadlock in VS.\r\n\r\nRoslyn's pattern is making every service a true free thread service which doesn't require any thread affinity to work. and code running UI thread should be free to call Task.Wait from those services.\r\n\r\nso, if we keep Roslyn's existing pattern, but avoid deadlock on VS, we could reduce JTF usage to JTF.Run and we abstract that out using IThreadingContext (ex, change http://source.roslyn.io/#Microsoft.CodeAnalysis.Workspaces/Utilities/TaskExtensions.cs,51 to accept _IThreadingContext and disallow Task.Wait or Task.Result in Roslyn). so Roslyn can never need to see JTF except for VS layer which has VS specific IThreadingContext implementation. \r\n\r\nor we could go VS route where we fully embrace it and use it for as core currency in Roslyn like how we use Document and etc. \r\n\r\nI am not sure how many external dependencies we use directly in Roslyn without having our own abstraction over it but we could do so with JTF.\r\n\r\nwe can search on index (http://source.roslyn.io/#Microsoft.CodeAnalysis.EditorFeatures/Shared/Utilities/IThreadingContext.cs,d8df2825cb11e07d) to see how it is used right now.\r\n\r\nright now, we are in a weird place where JTF is directly available in Roslyn to lower layer than VS, so we start to use SwitchToMainThreadAsync to jump back to UI thread from BG, but we still use Task.Wait/Result on UI thread which can cause us to deadlock.\r\n\r\nsince JTF assumes everyone in the host to use JTF, its pattern is not exposing which thread affinity it requires, so in current pattern, there is no way for one to know whether inner code path somewhere it will do \"SwitchToUIThread\", so one basically can never use Task.Wait/Result on UI thread.\r\n\r\nour current Roslyn pattern is code path explicitly checking and state that it requires UI thread.\r\n\r\nI think we should choose one and stick to it in whole Roslyn code base rather than mixing 2.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/36937","RelatedDescription":"Open issue \"discuss on JTF usage in Roslyn\" (#36937)"},{"Id":"462960555","IsPullRequest":true,"CreatedAt":"2019-07-02T21:30:13","Actor":"dotnet-bot","Number":"36921","RawContent":null,"Title":"Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.3-preview1 into release/dev16.3-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps\ngit reset --hard upstream/release/dev16.3-preview1-vs-deps\ngit merge upstream/release/dev16.3-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.3-preview1-to-release/dev16.3-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36921","RelatedDescription":"Closed or merged PR \"Merge release/dev16.3-preview1 to release/dev16.3-preview1-vs-deps\" (#36921)"},{"Id":"463189047","IsPullRequest":true,"CreatedAt":"2019-07-02T21:00:07","Actor":"dotnet-bot","Number":"36929","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36929","RelatedDescription":"Closed or merged PR \"Merge master to features/param-nullchecking\" (#36929)"},{"Id":"463426340","IsPullRequest":true,"CreatedAt":"2019-07-02T20:42:12","Actor":"genlu","Number":"36936","RawContent":null,"Title":"[WIP] Completion timebox","State":"open","Body":"#36624\r\n\r\nThe PR is based on #36395 to avoid future conflicts. The relevant change is in d7128b98253aa4de28431c4b2c8b6eaedfedbe0a\r\n\r\nTODO:\r\n\r\n- [ ] Perf analysis","Url":"https://github.com/dotnet/roslyn/pull/36936","RelatedDescription":"Open PR \"[WIP] Completion timebox\" (#36936)"},{"Id":"463422466","IsPullRequest":true,"CreatedAt":"2019-07-02T20:32:19","Actor":"JoeRobich","Number":"36935","RawContent":null,"Title":"Unskip BasicEditAndContinue Tests","State":"open","Body":"Call `Editor.Activate` before `ReplaceText` following calls to `Debugger.Go`\r\n\r\nFixes https://github.com/dotnet/roslyn/issues/36763","Url":"https://github.com/dotnet/roslyn/pull/36935","RelatedDescription":"Open PR \"Unskip BasicEditAndContinue Tests\" (#36935)"},{"Id":"463422245","IsPullRequest":false,"CreatedAt":"2019-07-02T20:31:47","Actor":"cston","Number":"36934","RawContent":null,"Title":"Synthesized NullableAttribute and NullableContextAttribute have no AttributeTargetsAttribute","State":"open","Body":"The definition of `System.Runtime.CompilerServices.NullableAttribute` and `System.Runtime.CompilerServices.NullableContextAttribute` emitted by the compiler have no explicit `AttributeTargetsAttribute`.\r\n\r\nThat means those attributes could be interpreted as `Inherited=true`, when applied to a base class for instance, which is incorrect.\r\n","Url":"https://github.com/dotnet/roslyn/issues/36934","RelatedDescription":"Open issue \"Synthesized NullableAttribute and NullableContextAttribute have no AttributeTargetsAttribute\" (#36934)"},{"Id":"463399631","IsPullRequest":false,"CreatedAt":"2019-07-02T19:33:48","Actor":"KirillOsenkov","Number":"36933","RawContent":null,"Title":"Signature Help not classified in Razor","State":"open","Body":"**Version Used**: \r\n16.1\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Show Sig Help in a C# buffer inside .cshtml\r\n\r\n**Expected Behavior**:\r\nSig Help should be classified\r\n\r\n**Actual Behavior**:\r\nSig Help is not classified\r\n\r\nSee https://devdiv.visualstudio.com/DevDiv/_workitems/edit/533660 for details","Url":"https://github.com/dotnet/roslyn/issues/36933","RelatedDescription":"Open issue \"Signature Help not classified in Razor\" (#36933)"},{"Id":"463388363","IsPullRequest":false,"CreatedAt":"2019-07-02T19:04:22","Actor":"gafter","Number":"36932","RawContent":null,"Title":"Exceptions not handled to spec for constructor constraint.","State":"open","Body":"Per the C# [language specification](https://github.com/dotnet/csharplang/blob/master/spec/exceptions.md#how-exceptions-are-handled), this program should print \"Correct\".  But it prints \"Incorrect\".\r\n\r\n``` c#\r\nusing System;\r\n\r\npublic static class Program\r\n{\r\n    public static void Main()\r\n    {\r\n        M<X>();\r\n    }\r\n\r\n    static void M<T>() where T : new()\r\n    {\r\n        try\r\n        {\r\n            _ = new T();\r\n        }\r\n        catch (ArgumentException)\r\n        {\r\n            Console.WriteLine(\"Correct\");\r\n        }\r\n        catch (Exception)\r\n        {\r\n            Console.WriteLine(\"Incorrect\");\r\n        }\r\n    }\r\n}\r\n\r\nclass X\r\n{\r\n    public X()\r\n    {\r\n        throw new ArgumentException();\r\n    }\r\n}\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/36932","RelatedDescription":"Open issue \"Exceptions not handled to spec for constructor constraint.\" (#36932)"},{"Id":"463364858","IsPullRequest":true,"CreatedAt":"2019-07-02T18:05:40","Actor":"stcahlon","Number":"36931","RawContent":null,"Title":"Adding Null Checks For All Parameters","State":"open","Body":"Work in progress\r\n\r\n#20986 ","Url":"https://github.com/dotnet/roslyn/pull/36931","RelatedDescription":"Open PR \"Adding Null Checks For All Parameters\" (#36931)"},{"Id":"463330074","IsPullRequest":false,"CreatedAt":"2019-07-02T16:41:08","Actor":"vsfeedback","Number":"36930","RawContent":null,"Title":"Disable code formatting for some part of code by using specific comments/region","State":"open","Body":"VSF_TYPE_MARKDOWNOther IDEs have this feature for long. Would like to have an option where the formatting for code is disabled between 2 comments like below\n\n// @formatter:off\npublic const string Foo                   =           &quot;foo&quot;;\npublic const string Bar                    =           &quot;bar&quot;;\n\n// @formatter:on \n\n\nThis would allow many developers who prefer column aligned code to do it. Visual studio will then not revert their changes while formatting the file.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/idea/481492/disable-code-formatting-for-some-part-of-code-by-u.html\nVSTS ticketId: 813186_\n_These are the original issue comments:_\n\nJane Wu [MSFT] on 3/7/2019, 00:10 AM (117 days ago): <p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;We'll provide an update once the issue has been triaged by the product team.</p>\nKendra Havens [MSFT] on 7/1/2019, 04:45 PM (16 hours ago): <markdown><p>Thank you for this feedback. You can suppress diagnostics in code with #pragma. <a target='_blank' href=\"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/preprocessor-directives/preprocessor-pragma-warning\">https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/preprocessor-directives/preprocessor-pragma-warning</a></p>\n<p>Does this feaure satisfy this request? Please let us know if something is missing from your experience.</p>\n</markdown>\npuneetkeshav on 7/1/2019, 07:50 PM (13 hours ago): <p>This is not a warning/diagnostic issue, so it will not get solved by #pragma. Visual studio formats the document if document formatting is turned on. But in some areas of code we want that the default formatting should not take place. If we can have some simple solution as suggested in the first comment that would be very helpful.</p>\n\nKendra Havens [MSFT] on 7/2/2019, 09:40 AM (34 sec ago): <p>I see, this would be for even the silent auto-formats that don't report diagnostics. Thank you for the additional information! I'll move this issue to our open source GitHub repository for additional design discussion with the community.</p>\n","Url":"https://github.com/dotnet/roslyn/issues/36930","RelatedDescription":"Open issue \"Disable code formatting for some part of code by using specific comments/region\" (#36930)"},{"Id":"463136457","IsPullRequest":false,"CreatedAt":"2019-07-02T10:00:16","Actor":"yyjdelete","Number":"36928","RawContent":null,"Title":"Possible StackOverflowException in `Microsoft.CodeAnalysis.Operation.Parent`?","State":"open","Body":"**Version Used**: \r\n`3.2.0-beta3-19312-05 (5905d757)`\r\n16.2.0 Preview 3.0\r\n\r\n**Steps to Reproduce**:\r\nFailed to reproduce now, will update if it happen again.\r\n\r\n**Expected Behavior**:\r\n\r\n**Actual Behavior**:\r\n```cs\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Operations.OperationExtensions.Descendants(Microsoft.CodeAnalysis.IOperation operation, bool includeSelf)\r\n \tSystem.Core.dll!System.Linq.Enumerable.FirstOrDefault<Microsoft.CodeAnalysis.IOperation>(System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.IOperation> source, System.Func<Microsoft.CodeAnalysis.IOperation, bool> predicate)\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.MemberSemanticModel.GetOperationWorker(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode node, System.Threading.CancellationToken cancellationToken)\r\n \tMicrosoft.CodeAnalysis.CSharp.dll!Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel.GetOperationCore(Microsoft.CodeAnalysis.SyntaxNode node, System.Threading.CancellationToken cancellationToken)\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.SemanticModel.GetOperation(Microsoft.CodeAnalysis.SyntaxNode node, System.Threading.CancellationToken cancellationToken)\r\n//loop start\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Operation.SearchParentOperation()\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Operation.Parent.get()\r\n \tMicrosoft.CodeAnalysis.dll!Microsoft.CodeAnalysis.Operation.WalkDownOperationToFindParent(System.Collections.Generic.HashSet<Microsoft.CodeAnalysis.IOperation> operationAlreadyProcessed, Microsoft.CodeAnalysis.IOperation root)\r\n//loop end\r\n \tThe maximum number of stack frames supported by Visual Studio has been exceeded.\t\r\n```","Url":"https://github.com/dotnet/roslyn/issues/36928","RelatedDescription":"Open issue \"Possible StackOverflowException in `Microsoft.CodeAnalysis.Operation.Parent`?\" (#36928)"},{"Id":"463046946","IsPullRequest":false,"CreatedAt":"2019-07-02T06:34:26","Actor":"drewnoakes","Number":"36927","RawContent":null,"Title":"Nullable analysis should understand XOR null tests","State":"open","Body":"**Version Used**: 3.3.0-beta1-19327-04\r\n\r\n**Steps to Reproduce**:\r\n\r\n```c#\r\nstring M1(object? o1, object? o2)\r\n{\r\n    if (o1 == null && o2 == null)\r\n        return \"both null\";\r\n    if ((o1 == null) ^ (o2 == null))\r\n        return \"one null\";\r\n\r\n    // at this point neither o1 nor o2 are null\r\n\r\n    return o1.ToString()  // CS8602 possible null dereference\r\n         + o2.ToString(); // CS8602 possible null dereference\r\n}\r\n\r\nstring M2(object? o1, object? o2)\r\n{\r\n    if (o1 == null && o2 == null)\r\n        return \"both null\";\r\n    if (o1 == null)\r\n        return \"o1 null\";\r\n    if (o2 == null)\r\n        return \"o2 null\";\r\n\r\n    return o1.ToString()  // no diagnostics in this case\r\n         + o2.ToString();\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\n\r\nNo diagnostics.\r\n\r\n**Actual Behavior**:\r\n\r\nDiagnostics.","Url":"https://github.com/dotnet/roslyn/issues/36927","RelatedDescription":"Open issue \"Nullable analysis should understand XOR null tests\" (#36927)"},{"Id":"462960674","IsPullRequest":true,"CreatedAt":"2019-07-02T01:30:06","Actor":"dotnet-bot","Number":"36923","RawContent":null,"Title":"Merge master to features/param-nullchecking","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/param-nullchecking.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/param-nullchecking\ngit reset --hard upstream/features/param-nullchecking\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/param-nullchecking --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/36923","RelatedDescription":"Closed or merged PR \"Merge master to features/param-nullchecking\" (#36923)"},{"Id":"462971806","IsPullRequest":false,"CreatedAt":"2019-07-02T01:00:01","Actor":"tmat","Number":"36926","RawContent":null,"Title":"Synthesized namespaces of SynthesizedEmbeddedAttributeSymbolBase shouldn't be \"missing\"","State":"open","Body":"`SynthesizedEmbeddedAttributeSymbolBase` constructs `MissingNamespaceSymbol` here:\r\n\r\nhttp://source.roslyn.io/#Microsoft.CodeAnalysis.CSharp/Symbols/Synthesized/SynthesizedEmbeddedAttributeSymbol.cs,43\r\n\r\nthat then flow into the emitter. Although this works ok today, it is unusual for the emitter to encounter missing symbols. I believe the invariant should be that the emitter does not emit any missing symbols.\r\n\r\nAlso, the code does not look for existing source namespaces that the compilation might already contain and creates new `MissingNamespaceSymbol` regardless.","Url":"https://github.com/dotnet/roslyn/issues/36926","RelatedDescription":"Open issue \"Synthesized namespaces of SynthesizedEmbeddedAttributeSymbolBase shouldn't be \"missing\"\" (#36926)"},{"Id":"462968144","IsPullRequest":true,"CreatedAt":"2019-07-02T00:40:57","Actor":"dibarbet","Number":"36925","RawContent":null,"Title":"Merge liveshare changes to do dual insertion.","State":"open","Body":"Draft - Pending\r\n\r\n1.  ~~1 more fix https://github.com/dotnet/roslyn/pull/36916~~\r\n2.  Signoff from liveshare / our testing.\r\n\r\nSome notes - Everything in external access liveshare directly copied.  It will be deleted once the razor support is working and we can switch away from using the c#_lsp content type.  It contains all the client side code that calls into Roslyn for a liveshare guest.\r\n\r\nThe other liveshare project contains the liveshare server side handlers.  Most are just shims to the actual LSP implementation, but there are some custom liveshare handlers + LSP implementations with VS dependencies.  The goal is for all the LSP implementations to just be shims.","Url":"https://github.com/dotnet/roslyn/pull/36925","RelatedDescription":"Open PR \"Merge liveshare changes to do dual insertion.\" (#36925)"},{"Id":"462966658","IsPullRequest":true,"CreatedAt":"2019-07-02T00:32:46","Actor":"CyrusNajmabadi","Number":"36924","RawContent":null,"Title":"Require System.Index/Range to be present to offer to use the new language features.","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/36909\r\n\r\nA while back the compiler had a permissive view of indexing into a string or array with an `^` indexer, or a Range.  Specifically, it would allow doing this *even if* there was no System.Index or System.Range present.  This was fine as the compiler wasn't using those types anyways, it was just translating things to the underlying calls to the int based indexers/substrings/array-copies.\r\n\r\nWhen i added the \"use index or range operator\" feature i took this into account, and we would offer the feature on strings/arrays when possible.\r\n\r\nHowever, at some point teh compiler changed their strategy, and these types are still required to be present (even if they are unused).\r\n\r\nThis changes the IDE feature to respect that and to not offer the feature unless those types are present.\r\n\r\n","Url":"https://github.com/dotnet/roslyn/pull/36924","RelatedDescription":"Open PR \"Require System.Index/Range to be present to offer to use the new language features.\" (#36924)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"463452177","IsPullRequest":true,"CreatedAt":"2019-07-02T21:51:40","Actor":"nattress","Number":"7581","RawContent":null,"Title":"SuperIlc support for compiling from Crossgen .rsps","State":"open","Body":"Adds `compile-crossgen-rsp` command to SuperIlc which takes a response file (or a folder full of them) from a Crossgen command and transposes the arguments so that SuperIlc can re-run Crossgen / CPAOT. If the response file came from another machine (build lab, partner), the --rewrite-old-path and --rewrite-new-path parameters allow switching out the beginnings of directory names.\r\n\r\nThe intent of this command is to allow compiling more complex workloads where dependencies are not conveniently in a single folder, and each response file may have different arguments it passes to crossgen. The set of crossgen parameters we parse is not complete and was enough for the scenario I needed this tool for.\r\n\r\nRefactored the `Command` classes into a folder. Also I was seeing frequent unhandled exceptions since TaskCanceledExceptions from tasks are wrapped in AggregateException objects. Fortunately filters make it easy to tell the difference and just eat the `TaskCanceledException`.","Url":"https://github.com/dotnet/corert/pull/7581","RelatedDescription":"Open PR \"SuperIlc support for compiling from Crossgen .rsps\" (#7581)"},{"Id":"463227946","IsPullRequest":true,"CreatedAt":"2019-07-02T19:46:55","Actor":"jkotas","Number":"7578","RawContent":null,"Title":"Port https://github.com/dotnet/coreclr/pull/25531","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7578","RelatedDescription":"Closed or merged PR \"Port https://github.com/dotnet/coreclr/pull/25531\" (#7578)"},{"Id":"463249832","IsPullRequest":true,"CreatedAt":"2019-07-02T16:14:11","Actor":"jkotas","Number":"7580","RawContent":null,"Title":"Update dependencies","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7580","RelatedDescription":"Closed or merged PR \"Update dependencies\" (#7580)"},{"Id":"463234533","IsPullRequest":true,"CreatedAt":"2019-07-02T14:57:56","Actor":"Dotnet-GitSync-Bot","Number":"7579","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @MichalStrehovsky","Url":"https://github.com/dotnet/corert/pull/7579","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7579)"},{"Id":"463136077","IsPullRequest":false,"CreatedAt":"2019-07-02T09:59:29","Actor":"MichalStrehovsky","Number":"7577","RawContent":null,"Title":"VectorArrayInit test fails intermittently","State":"open","Body":"```\r\n       F:\\workspace\\_work\\1\\s\\tests_downloaded\\CoreCLR\\JIT\\SIMD\\VectorArrayInit_r\\\\*.dll \r\n                0 file(s) copied.\r\n        Expected: 100\r\n        Actual: -1073741819\r\n        END EXECUTION - FAILED\r\n        FAILED\r\n        Test Harness Exitcode is : 1\r\n```\r\n\r\nSeen in #7574 and in one of the iterations of #7549 (I think).\r\n\r\nI tried to get a local repro, but wasn't successful so far.","Url":"https://github.com/dotnet/corert/issues/7577","RelatedDescription":"Open issue \"VectorArrayInit test fails intermittently\" (#7577)"},{"Id":"462832822","IsPullRequest":true,"CreatedAt":"2019-07-02T09:55:07","Actor":"Dotnet-GitSync-Bot","Number":"7571","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @safern @kouvel","Url":"https://github.com/dotnet/corert/pull/7571","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7571)"},{"Id":"463039704","IsPullRequest":true,"CreatedAt":"2019-07-02T08:04:12","Actor":"jkotas","Number":"7576","RawContent":null,"Title":"Account for target renames in .NET Core 3.0 SDK","State":"closed","Body":"Fixes #7575","Url":"https://github.com/dotnet/corert/pull/7576","RelatedDescription":"Closed or merged PR \"Account for target renames in .NET Core 3.0 SDK\" (#7576)"},{"Id":"462912400","IsPullRequest":false,"CreatedAt":"2019-07-02T08:04:12","Actor":"SomeAnon42","Number":"7575","RawContent":null,"Title":"dotnet publish seems broken when using Core 3.0 Preview 6 SDK","State":"closed","Body":"The behavior of ``dotnet publish -r %RID%`` (assuming the CoreRT package is referenced) has changed after upgrading to preview 6 of the SDK.\r\nHere's what the output looks like when using previous versions of the SDK (including the latest stable 2.2 SDK):\r\n```\r\n├── netcoreappX.X/\r\n    └── %RID%/\r\n        ├── <managed output>\r\n        └── publish/\r\n            ├── native/ \r\n            ├── App.exe (native)\r\n            ├── App.pdb (native)\r\n            ├── <app content>\r\n            └── <native dependencies>\r\n```\r\n↑ The ``publish`` directory contains the native executable, along with the app's content. No managed assemblies.\r\n\r\nAnd this is what the output looks like after installing preview 6:\r\n```\r\n├── netcoreappX.X/\r\n    ├── %RID%/\r\n    │   ├── publish/\r\n    │   |   ├── <managed publish> (incl. all of .NET runtime)\r\n    │   |   └── App.pdb (native, while App.exe is a CoreCLR runtime host)\r\n    │   └── <managed publish>\r\n    └── native/\r\n        ├── App.exe\r\n        └── App.pdb\r\n```\r\n↑ The managed *publish* output ends up in both ``%RID%`` and ``%RID%/publish`` (which seems like an SDK issue to me). The native binary is only found in the ``native`` directory, and the directory itself is in the wrong location. The native pdb ends up in both ``%framework%/%RID%/publish`` and ``%framework%/native``.","Url":"https://github.com/dotnet/corert/issues/7575","RelatedDescription":"Closed issue \"dotnet publish seems broken when using Core 3.0 Preview 6 SDK\" (#7575)"},{"Id":"462851015","IsPullRequest":true,"CreatedAt":"2019-07-01T22:34:37","Actor":"MichalStrehovsky","Number":"7574","RawContent":null,"Title":"Initialize YieldProcessor critical section before finalizer thread","State":"closed","Body":"Finalizer thread was racing with the initialization.\r\n\r\nFixes #7572.","Url":"https://github.com/dotnet/corert/pull/7574","RelatedDescription":"Closed or merged PR \"Initialize YieldProcessor critical section before finalizer thread\" (#7574)"},{"Id":"462838415","IsPullRequest":false,"CreatedAt":"2019-07-01T22:34:37","Actor":"Suchiman","Number":"7572","RawContent":null,"Title":"AccessViolation in InitializeYieldProcessorNormalized","State":"closed","Body":"@MichalStrehovsky \r\n![2019-07-01_19-54-48](https://user-images.githubusercontent.com/7110884/60456731-5f27f080-9c3a-11e9-951d-c42d5d5b44a3.png)\r\n![devenv_2019-07-01_19-53-47](https://user-images.githubusercontent.com/7110884/60456734-60f1b400-9c3a-11e9-94a0-0e7d4c31d174.png)\r\n","Url":"https://github.com/dotnet/corert/issues/7572","RelatedDescription":"Closed issue \"AccessViolation in InitializeYieldProcessorNormalized\" (#7572)"},{"Id":"462848807","IsPullRequest":true,"CreatedAt":"2019-07-01T18:24:59","Actor":"Suchiman","Number":"7573","RawContent":null,"Title":"Implement GC.AllocateUninitializedArray","State":"open","Body":"fixes #5680\r\n\r\nInspired by https://github.com/dotnet/coreclr/blob/c81d3caee2cfd7a401429dea9709acc18064acdd/src/vm/gchelpers.cpp#L424-L591\r\nand https://github.com/dotnet/corert/blob/fcaa7ed872ea0befcb2a5c8bb5ba504f674f0df1/src/Native/Runtime/gcrhenv.cpp#L228-L294","Url":"https://github.com/dotnet/corert/pull/7573","RelatedDescription":"Open PR \"Implement GC.AllocateUninitializedArray\" (#7573)"},{"Id":"462317380","IsPullRequest":true,"CreatedAt":"2019-07-01T05:16:49","Actor":"MichalStrehovsky","Number":"7567","RawContent":null,"Title":"Implement LayoutClass/LayoutClassPtr/AsAny marshalers","State":"closed","Body":"This is a couple marshallers that nobody should be using for anything, but WinForms and System.Drawing uses them for everything. Frankly, it feels like the designers of .NET 1.0 got too excited about marshalling everything with these and someone should have stopped them.\r\n\r\nThese marshallers are for marshalling abritrary reference types to native code. See the test cases in this pull request for some samples. But please don't take ideas from it.\r\n\r\nThis is enough to get basic WinForms apps running. E.g. the MatchingGame .NET Sample works with this. Serious WinForms apps will eventually hit missing COM support, but at least the basics work now and it's enough to get a read on things like startup time.","Url":"https://github.com/dotnet/corert/pull/7567","RelatedDescription":"Closed or merged PR \"Implement LayoutClass/LayoutClassPtr/AsAny marshalers\" (#7567)"},{"Id":"462343022","IsPullRequest":true,"CreatedAt":"2019-07-01T05:16:17","Actor":"MichalStrehovsky","Number":"7569","RawContent":null,"Title":"Port normalized SpinWait from CoreCLR","State":"closed","Body":"This ports yieldprocessornormalized.cpp from CoreCLR to tune spin wait loops in the post-Skylake CPU world.\r\n\r\nThe first commit is literal copy of yieldprocessornormalized.cpp from CoreCLR that was then tweaked to build for Redhawk.\r\n\r\nI then replaced uses of YieldProcessor with the Skylake-aware compat shim.","Url":"https://github.com/dotnet/corert/pull/7569","RelatedDescription":"Closed or merged PR \"Port normalized SpinWait from CoreCLR\" (#7569)"},{"Id":"462399742","IsPullRequest":true,"CreatedAt":"2019-07-01T05:15:29","Actor":"MichalStrehovsky","Number":"7570","RawContent":null,"Title":"Use AssemblyLoadContext from shared partition","State":"closed","Body":"We were missing methods that got added for 3.0. The only LoadContext that works is the default one though.","Url":"https://github.com/dotnet/corert/pull/7570","RelatedDescription":"Closed or merged PR \"Use AssemblyLoadContext from shared partition\" (#7570)"},{"Id":"462318480","IsPullRequest":true,"CreatedAt":"2019-06-29T20:24:33","Actor":"MichalStrehovsky","Number":"7568","RawContent":null,"Title":"Fix GetTypeCode of metadata-only enums","State":"closed","Body":"Found this by accident. `underlyingType.TypeHandle.EETypePtr` would box the RuntimeTypeHandle and return EEType of the RuntimeTypeHandle type.\r\n\r\nWhat this code actually wanted to do is to get the EEType of the underlying type.","Url":"https://github.com/dotnet/corert/pull/7568","RelatedDescription":"Closed or merged PR \"Fix GetTypeCode of metadata-only enums\" (#7568)"},{"Id":"462288706","IsPullRequest":true,"CreatedAt":"2019-06-29T18:29:06","Actor":"MichalStrehovsky","Number":"7566","RawContent":null,"Title":"Implement obsolete `Marshal.Write*` APIs","State":"closed","Body":"Because bad APIs come in pairs.","Url":"https://github.com/dotnet/corert/pull/7566","RelatedDescription":"Closed or merged PR \"Implement obsolete `Marshal.Write*` APIs\" (#7566)"},{"Id":"462130373","IsPullRequest":true,"CreatedAt":"2019-06-28T22:19:01","Actor":"csnewman","Number":"7565","RawContent":null,"Title":"Remove extra bracket","State":"closed","Body":"Fixes arm building","Url":"https://github.com/dotnet/corert/pull/7565","RelatedDescription":"Closed or merged PR \"Remove extra bracket\" (#7565)"},{"Id":"461738560","IsPullRequest":false,"CreatedAt":"2019-06-28T20:45:36","Actor":"csnewman","Number":"7563","RawContent":null,"Title":"arm registers do not fit into unw_context_t","State":"closed","Body":"```\r\nIn file included from /home/csnewman/corert/src/Native/Runtime/unix/UnwindHelpers.cpp:22:\r\n/home/csnewman/corert/src/Native/Runtime/../libunwind/src/Registers.hpp:2328:3: error: static_assert failed \"arm registers do not fit into unw_context_t\"\r\n  static_assert((check_fit<Registers_arm, unw_context_t>::does_fit),\r\n  ^             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/home/csnewman/corert/src/Native/Runtime/../libunwind/src/Registers.hpp:2444:32: error: out-of-line definition of 'getRegisterLocation' does not match any\r\n      declaration in 'libunwind::Registers_arm'\r\ninline uint32_t Registers_arm::getRegisterLocation(int regNum) const {\r\n                               ^~~~~~~~~~~~~~~~~~~\r\n2 errors generated.\r\nmake[2]: *** [Runtime/Full/CMakeFiles/Runtime.ServerGC.dir/__/unix/UnwindHelpers.cpp.o] Error 1\r\n\r\n```","Url":"https://github.com/dotnet/corert/issues/7563","RelatedDescription":"Closed issue \"arm registers do not fit into unw_context_t\" (#7563)"},{"Id":"461791927","IsPullRequest":true,"CreatedAt":"2019-06-28T00:27:04","Actor":"jkotas","Number":"7564","RawContent":null,"Title":"Fix ARM build break","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7564","RelatedDescription":"Closed or merged PR \"Fix ARM build break\" (#7564)"},{"Id":"461402520","IsPullRequest":true,"CreatedAt":"2019-06-27T13:24:43","Actor":"jkotas","Number":"7561","RawContent":null,"Title":"Fix ETW GCEvents","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7561","RelatedDescription":"Closed or merged PR \"Fix ETW GCEvents\" (#7561)"},{"Id":"461406438","IsPullRequest":false,"CreatedAt":"2019-06-27T09:01:30","Actor":"OmerRaviv","Number":"7562","RawContent":null,"Title":"Document a way to use ILVerify to diagnose issues in IL Rewriting with CLR Profiling API","State":"open","Body":"I find that one of the biggest challenges in working with the CLR Profiling API is attempting to mitigate the risk that a bug in my IL-rewriting logic may produce invalid IL, which would in turn produce catastrophic results at runtime (ExecutionEngineException, InvalidProgramException, etc). \r\n\r\nI think it could be extremely helpful if profiler vendors had a documented way to run ILVerify/PEVerify on assemblies after preforming IL-rewriting / ReJIT. This method could be used as part of integration testing, and also as a very useful debugging aid.\r\n\r\n[Someone asked on stackoverflow](https://stackoverflow.com/questions/55793865/creating-a-pe-file-using-imetadataemitsave-tomemory-tostream) if this could be accomplished using `IMetadataEmit::SaveToStream`, but unfortunately that method would only write out the .NET module, not a complete PE that can then be fed to ILVerify/PEVerify.\r\n\r\nIf anyone has an idea how this could be accomplished, I’d be more than happy to attempt it, and then once I succeed, to open-source/document the approach.\r\n\r\n/cc  @noahfalk @davmason @jkotas ","Url":"https://github.com/dotnet/corert/issues/7562","RelatedDescription":"Open issue \"Document a way to use ILVerify to diagnose issues in IL Rewriting with CLR Profiling API\" (#7562)"},{"Id":"461341179","IsPullRequest":true,"CreatedAt":"2019-06-27T08:54:05","Actor":"Dotnet-GitSync-Bot","Number":"7560","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @GrabYourPitchforks @stephentoub @jkotas","Url":"https://github.com/dotnet/corert/pull/7560","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#7560)"},{"Id":"461084607","IsPullRequest":true,"CreatedAt":"2019-06-27T06:29:12","Actor":"Dotnet-GitSync-Bot","Number":"7558","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @MichalStrehovsky @Gnbrkm41 @tannergooding @safern @jkotas @tarekgh @stephentoub @benaadams","Url":"https://github.com/dotnet/corert/pull/7558","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7558)"},{"Id":"461233093","IsPullRequest":true,"CreatedAt":"2019-06-27T03:11:36","Actor":"jkotas","Number":"7559","RawContent":null,"Title":"Try VS2019 CI queue","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7559","RelatedDescription":"Closed or merged PR \"Try VS2019 CI queue\" (#7559)"},{"Id":"460640977","IsPullRequest":true,"CreatedAt":"2019-06-26T19:49:25","Actor":"trylek","Number":"7557","RawContent":null,"Title":"Small SuperIlc fix for wrong architecture identifier","State":"closed","Body":"When analyzing the Pri#1 CPAOT results I noticed that some of the\r\n\"issues.targets\" exclusions got silently ignored and I tracked it\r\ndown to incorrect architecture specification - I apparently used\r\n\"amd64\" instead of the expected \"x64\".\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7557","RelatedDescription":"Closed or merged PR \"Small SuperIlc fix for wrong architecture identifier\" (#7557)"},{"Id":"460638909","IsPullRequest":true,"CreatedAt":"2019-06-26T19:44:15","Actor":"trylek","Number":"7556","RawContent":null,"Title":"Remove the Crossgen-specific VSD flag from CPAOT","State":"closed","Body":"Based on JanK's advice I have slightly refactored CPAOT to free it\r\nfrom blindly reusing the Crossgen hack of using a special bit flag\r\nto pass information around within the ZAP logic. As part of the cleanup\r\nI have also removed the AppendMangledName override in\r\nDelayLoadMethodHelperImport as it wasn't adding any extra\r\nuseful information.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/7556","RelatedDescription":"Closed or merged PR \"Remove the Crossgen-specific VSD flag from CPAOT\" (#7556)"},{"Id":"459991969","IsPullRequest":true,"CreatedAt":"2019-06-24T21:18:56","Actor":"Dotnet-GitSync-Bot","Number":"7555","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @safern @HermanEldering @Marusyk @siriak @MarcoRossignoli","Url":"https://github.com/dotnet/corert/pull/7555","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7555)"},{"Id":"459900202","IsPullRequest":false,"CreatedAt":"2019-06-24T13:43:53","Actor":"kvittokonito","Number":"7554","RawContent":null,"Title":"NuGet package not being built","State":"open","Body":"As far as I can tell, no new NuGet package has been deployed to MyGet for months, is this intentional?\r\n\r\nI would rather not have to built and deploy CoreRT from source into our CI/CD pipeline to take advantage of fixes like #7526.","Url":"https://github.com/dotnet/corert/issues/7554","RelatedDescription":"Open issue \"NuGet package not being built\" (#7554)"},{"Id":"459595649","IsPullRequest":true,"CreatedAt":"2019-06-23T20:12:48","Actor":"Suchiman","Number":"7553","RawContent":null,"Title":" Clear stacktrace before throwing exceptions","State":"closed","Body":"fixes #5183","Url":"https://github.com/dotnet/corert/pull/7553","RelatedDescription":"Closed or merged PR \" Clear stacktrace before throwing exceptions\" (#7553)"},{"Id":"459515874","IsPullRequest":true,"CreatedAt":"2019-06-23T19:18:22","Actor":"timmydo","Number":"7552","RawContent":null,"Title":"Devcontainer files for vscode cross-platform development.","State":"closed","Body":"https://code.visualstudio.com/docs/remote/containers is a feature that makes it a lot easier to do linux development from a windows machine in vs code. Basically, when you launch VS Code in the corert directory, it will create a docker image with the appropriate tools installed so you can run `./build.sh` without needing to install any pre-reqs.","Url":"https://github.com/dotnet/corert/pull/7552","RelatedDescription":"Closed or merged PR \"Devcontainer files for vscode cross-platform development.\" (#7552)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"463496606","IsPullRequest":true,"CreatedAt":"2019-07-03T01:03:09","Actor":"dsplaisted","Number":"3390","RawContent":null,"Title":"Support automatic Link metadata for Page and Resource items","State":"open","Body":"Fix #2697 \r\n","Url":"https://github.com/dotnet/sdk/pull/3390","RelatedDescription":"Open PR \"Support automatic Link metadata for Page and Resource items\" (#3390)"},{"Id":"463478792","IsPullRequest":true,"CreatedAt":"2019-07-02T23:32:09","Actor":"dsplaisted","Number":"3389","RawContent":null,"Title":"Fix NullReferenceException in ResolvePackageFileConflicts","State":"open","Body":"Fixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/941481","Url":"https://github.com/dotnet/sdk/pull/3389","RelatedDescription":"Open PR \"Fix NullReferenceException in ResolvePackageFileConflicts\" (#3389)"},{"Id":"463386800","IsPullRequest":false,"CreatedAt":"2019-07-02T19:00:35","Actor":"crmann1","Number":"3388","RawContent":null,"Title":"ResolvePackageFileConflicts task throw null reference exception when duplicate references are passed in (and conflicts exist)","State":"open","Body":"During a build of a project that has duplicate references where the duplicate reference is also a conflict the ResolvePackageFileConflicts task crashes with a null reference exception . \r\n\r\n\r\nC:\\Program   Files\\dotnet\\sdk\\3.0.100-preview7-012601\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ConflictResolution.targets\r\n\r\nThe \"ResolvePackageFileConflicts\" task failed unexpectedly.System.NullReferenceException: Object reference not set to an instance of an object.   at Microsoft.NET.Build.Tasks.ConflictResolution.ResolvePackageFileConflicts.<>c.<ExecuteCore>b__44_0(ITaskItem r) in /_/src/Tasks/Common/ConflictResolution/ResolvePackageFileConflicts.cs:line 160   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()   at System.Collections.Generic.HashSet`1.UnionWith(IEnumerable`1 other)   at System.Collections.Generic.HashSet`1..ctor(IEnumerable`1 collection, IEqualityComparer`1 comparer)   at Microsoft.NET.Build.Tasks.ConflictResolution.ResolvePackageFileConflicts.ExecuteCore() in /_/src/Tasks/Common/ConflictResolution/ResolvePackageFileConflicts.cs:line 160   at Microsoft.NET.Build.Tasks.TaskBase.Execute() in /_/src/Tasks/Common/TaskBase.cs:line 47   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n\r\nThe reason is that in ResolvePackageFileConflicts.cs\r\n      var result = new ITaskItem[original.Length - conflicts.Count]; \r\n\r\nThe assumption is that the length of the result array is just the original list minus the conflict list. But if the original list has duplicates then the result array will be too large and will have null entries in it. \r\n\r\nFurther down that array is processed and fails \r\n\r\nvar referenceItemSpecs = new HashSet<string>(ReferencesWithoutConflicts?.Select(r => r.ItemSpec) ?? Enumerable.Empty<string>(),\r\n                                                                     StringComparer.OrdinalIgnoreCase);\r\n\r\nr=> r.ItemSpec fails because r is null due to the ReferenceWithoutConflicts enumeration containing a null item  due to the problem above.\r\n\r\nRepro for example is to have a file with the following reference items in it\r\n\r\n <ItemGroup>\r\n    <Reference Include=\"System.Runtime\" />\r\n    <Reference Include=\"System.Runtime\" />\r\n  </ItemGroup>\r\n","Url":"https://github.com/dotnet/sdk/issues/3388","RelatedDescription":"Open issue \"ResolvePackageFileConflicts task throw null reference exception when duplicate references are passed in (and conflicts exist)\" (#3388)"},{"Id":"463190351","IsPullRequest":true,"CreatedAt":"2019-07-02T14:31:35","Actor":"dotnet-bot","Number":"3386","RawContent":null,"Title":"Merge release/3.0.1xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/3.0.1xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/3.0.1xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/3.0.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/3.0.1xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3386","RelatedDescription":"Closed or merged PR \"Merge release/3.0.1xx to master\" (#3386)"},{"Id":"463190002","IsPullRequest":true,"CreatedAt":"2019-07-02T12:04:23","Actor":"dotnet-maestro[bot]","Number":"3385","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190701.4\r\n- **Date Produced**: 7/1/2019 9:33 PM\r\n- **Commit**: 1fb1e240c889cd7f6e10cb1eacd129efa3ddb4b4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19351.4\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19351.4\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3385","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#3385)"},{"Id":"462963954","IsPullRequest":true,"CreatedAt":"2019-07-02T03:30:51","Actor":"johnbeisner","Number":"3384","RawContent":null,"Title":"Branding update to \"preview8\"; SDK","State":"closed","Body":"Branding update to \"preview8\"; SDK","Url":"https://github.com/dotnet/sdk/pull/3384","RelatedDescription":"Closed or merged PR \"Branding update to \"preview8\"; SDK\" (#3384)"},{"Id":"462957863","IsPullRequest":true,"CreatedAt":"2019-07-02T03:30:22","Actor":"johnbeisner","Number":"3382","RawContent":null,"Title":"Merge master into release 3.0.1xx for preview7 - SDK","State":"closed","Body":"Merge master to release/3.0.1xx for preview7\r\nCommonly referred to as the 'snap'","Url":"https://github.com/dotnet/sdk/pull/3382","RelatedDescription":"Closed or merged PR \"Merge master into release 3.0.1xx for preview7 - SDK\" (#3382)"},{"Id":"462962755","IsPullRequest":false,"CreatedAt":"2019-07-02T00:12:33","Actor":"bergbria","Number":"3383","RawContent":null,"Title":"'dotnet publish --no-restore --runtime X' fails when multiple RuntimeIdentifers are listed in the project file","State":"open","Body":"## Repro\r\n1. Create a .csproj with multiple ````<RuntimeIdentifiers>```` (e.g.  ````<RuntimeIdentifiers>osx-x64;win-x64</RuntimeIdentifiers>````)\r\n2. `dotnet restore`\r\n3. `dotnet publish --no-restore  --runtime win-x64`\r\n\r\nThis will fail with \r\n>error NU1004: The packages lock file is inconsistent with the project dependencies so restore can't be run in locked mode. Please disable RestoreLockedMode MSBuild property or pass explicit --force-evaluate flag to run restore to update the lock file. \r\n\r\n## Automated repro\r\nDownload/unzip \r\n[publish_multi_rid.zip](https://github.com/dotnet/sdk/files/3347730/publish_multi_rid.zip) and run repro.bat\r\n\r\n## Additional context\r\n* Omitting  `--no-restore` will cause different package versions to be used than would be produced the by original `dotnet restore`. While being icky in general, this also causes breaks when NuGet lock files are used (e.g. https://github.com/NuGet/Home/issues/8287)\r\n* This seems vaguely related to #2682 ","Url":"https://github.com/dotnet/sdk/issues/3383","RelatedDescription":"Open issue \"'dotnet publish --no-restore --runtime X' fails when multiple RuntimeIdentifers are listed in the project file\" (#3383)"},{"Id":"462173177","IsPullRequest":true,"CreatedAt":"2019-07-01T23:35:51","Actor":"nugetlurker","Number":"3372","RawContent":null,"Title":"Insert NuGet Build 5.2.0-rtm.6067 into sdk","State":"closed","Body":"Insert NuGet Build 5.2.0-rtm.6067 into sdk release/3.0.1xx branch","Url":"https://github.com/dotnet/sdk/pull/3372","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.2.0-rtm.6067 into sdk\" (#3372)"},{"Id":"462905459","IsPullRequest":true,"CreatedAt":"2019-07-01T23:23:02","Actor":"swaroop-sridhar","Number":"3381","RawContent":null,"Title":"SingleFile: Update a test with ni-pdbs","State":"closed","Body":"The test GivenThatWeWantToPublishASingleFileApp.It_excludes_ni_pdbs_from_single_file\r\nchecks for the fact that ni.pdb files are not bundled into the single-file by default.\r\n\r\nThis test was expecting only the `<app>.ni.pdb` file to exist in the publish directory.\r\nHowever, in recent versions of the build, mscorlib.ni.pdb is also found.\r\n\r\nThis commit changes the test to accomodate additional files in the publish directory.","Url":"https://github.com/dotnet/sdk/pull/3381","RelatedDescription":"Closed or merged PR \"SingleFile: Update a test with ni-pdbs\" (#3381)"},{"Id":"462854507","IsPullRequest":false,"CreatedAt":"2019-07-01T18:39:09","Actor":"AlexanderTaeschner","Number":"3380","RawContent":null,"Title":"Duplicated frameworks in runtimeconfig.json","State":"open","Body":"Using .NET core version 3.0.100-preview7-012741 some generated ProjectName.runtimeconfig.json files contain duplicated entries for the frameworks, which lead to a direct crash at application start:\r\n```\r\n{\r\n  \"runtimeOptions\": {\r\n    \"tfm\": \"netcoreapp3.0\",\r\n    \"frameworks\": [\r\n      {\r\n        \"name\": \"Microsoft.WindowsDesktop.App\",\r\n        \"version\": \"3.0.0-preview7-27826-20\"\r\n      },\r\n      {\r\n        \"name\": \"Microsoft.WindowsDesktop.App\",\r\n        \"version\": \"3.0.0-preview7-27826-20\"\r\n      },\r\n      {\r\n        \"name\": \"Microsoft.WindowsDesktop.App\",\r\n        \"version\": \"3.0.0-preview7-27826-20\"\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\nwhich seems to be linked to the following entry in the build log:\r\n```\r\n5>      Task \"GenerateRuntimeConfigurationFiles\"\r\n5>        Task Parameter:AssetsFilePath=[...]\\obj\\project.assets.json\r\n5>        Task Parameter:TargetFrameworkMoniker=.NETCoreApp,Version=v3.0\r\n5>        Task Parameter:TargetFramework=netcoreapp3.0\r\n5>        Task Parameter:RuntimeConfigPath=[...].runtimeconfig.json\r\n5>        Task Parameter:RuntimeConfigDevPath=[...].runtimeconfig.dev.json\r\n5>        Task Parameter:\r\n5>            RuntimeFrameworks=\r\n5>                Microsoft.NETCore.App\r\n5>                        FrameworkName=Microsoft.NETCore.App\r\n5>                        Version=3.0.0-preview7-27826-20\r\n5>                Microsoft.WindowsDesktop.App\r\n5>                        FrameworkName=Microsoft.WindowsDesktop.App\r\n5>                        Version=3.0.0-preview7-27826-20\r\n5>                Microsoft.WindowsDesktop.App\r\n5>                        FrameworkName=Microsoft.WindowsDesktop.App.WPF\r\n5>                        Version=3.0.0-preview7-27826-20\r\n5>                Microsoft.WindowsDesktop.App\r\n5>                        FrameworkName=Microsoft.WindowsDesktop.App.WindowsForms\r\n5>                        Version=3.0.0-preview7-27826-20\r\n5>        Task Parameter:UserRuntimeConfig=[...]/runtimeconfig.template.json\r\n5>        Task Parameter:AdditionalProbingPaths=[...]\\.dotnet\\store\\|arch|\\|tfm|\r\n5>        Task Parameter:IsSelfContained=False\r\n5>      Done executing task \"GenerateRuntimeConfigurationFiles\".\r\n```\r\nwhere three RuntimeFrameworks with the same name, but different FrameworkName are listed.\r\nWith preview 5 this problem did not appear.","Url":"https://github.com/dotnet/sdk/issues/3380","RelatedDescription":"Open issue \"Duplicated frameworks in runtimeconfig.json\" (#3380)"},{"Id":"462676233","IsPullRequest":true,"CreatedAt":"2019-07-01T13:50:12","Actor":"dotnet-maestro[bot]","Number":"3378","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190630.1\r\n- **Date Produced**: 6/30/2019 12:52 PM\r\n- **Commit**: 89fab80685c91024c8f9e21f1c37f62580f648f8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19330.1\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19330.1\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3378","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3378)"},{"Id":"462397761","IsPullRequest":true,"CreatedAt":"2019-07-01T01:24:56","Actor":"dotnet-maestro[bot]","Number":"3377","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190629.2\r\n- **Date Produced**: 6/29/2019 1:09 PM\r\n- **Commit**: 3ebba82f29f338a3cb14f4b3e1b6da0fd69be694\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19329.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19329.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3377","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3377)"},{"Id":"462296170","IsPullRequest":true,"CreatedAt":"2019-06-30T12:03:58","Actor":"dotnet-maestro[bot]","Number":"3374","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190628.2\r\n- **Date Produced**: 6/28/2019 7:25 PM\r\n- **Commit**: a68bcce61fa64598cbd30c00780b1f6ca8e7a9ef\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19328.2\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19328.2\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3374","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3374)"},{"Id":"462350708","IsPullRequest":false,"CreatedAt":"2019-06-29T23:25:42","Actor":"mattleibow","Number":"3376","RawContent":null,"Title":"MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages'.","State":"open","Body":"I am trying to use Ubuntu 18.04 to test some things, and I can use any of the newer .NET Core SDKs.\r\n\r\nI just installed a fresh VM with 18.04, and [installed my usual tools](https://gist.github.com/mattleibow/7e02a32193fb9bb14069bedb7384205e). I then try and build SkiaSharp, and then the .NET Standard projects and Tizen fail to build with the same error.\r\n\r\nI can roll back to dotnet-sdk-2.1.105, and that seems to work fine. As soon as I go later, then it fails. I tried installing a different version of dotnet 2.2, but I only have one for some reason. Sure, I could install it manually and all that. But, who wants to do that - and I am not even sure it is going to work.\r\n\r\nHere is my apt-search output: https://gist.github.com/mattleibow/935de7d22b24cfcf3ae9ab0c16b1908f\r\n\r\nWhat is the reason for these failures? My code was working - as it is building just fine with 2.1.105, and then I bump up just a fraction and boom?\r\n\r\nBuild Errors:\r\n\r\n```\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: System.TypeLoadException: Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages' (12) due to: Could not resolve type with token 01000025 from typeref (expected class 'NuGet.Packaging.Core.PackageIdentity' in assembly 'NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35') assembly:NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35 type:NuGet.Packaging.Core.PackageIdentity member:(null) [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.NET.Build.Tasks.TaskBase.Execute () [0x00000] in <a7945d89c0ac41f8a1c76203a2991e34>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x001f6] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.NetStandard/SkiaSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: System.TypeLoadException: Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages' (12) due to: Could not resolve type with token 01000025 from typeref (expected class 'NuGet.Packaging.Core.PackageIdentity' in assembly 'NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35') assembly:NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35 type:NuGet.Packaging.Core.PackageIdentity member:(null) [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.NET.Build.Tasks.TaskBase.Execute () [0x00000] in <a7945d89c0ac41f8a1c76203a2991e34>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x001f6] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.NetStandard/HarfBuzzSharp.NetStandard.csproj]\r\n\r\n...\r\n\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: System.TypeLoadException: Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages' (12) due to: Could not resolve type with token 01000025 from typeref (expected class 'NuGet.Packaging.Core.PackageIdentity' in assembly 'NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35') assembly:NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35 type:NuGet.Packaging.Core.PackageIdentity member:(null) [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.NET.Build.Tasks.TaskBase.Execute () [0x00000] in <a7945d89c0ac41f8a1c76203a2991e34>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x001f6] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/SkiaSharp.Tizen/SkiaSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018: System.TypeLoadException: Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages' (12) due to: Could not resolve type with token 01000025 from typeref (expected class 'NuGet.Packaging.Core.PackageIdentity' in assembly 'NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35') assembly:NuGet.Packaging, Version=5.1.0.5, Culture=neutral, PublicKeyToken=31bf3856ad364e35 type:NuGet.Packaging.Core.PackageIdentity member:(null) [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.NET.Build.Tasks.TaskBase.Execute () [0x00000] in <a7945d89c0ac41f8a1c76203a2991e34>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n/usr/share/dotnet/sdk/2.1.700/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.targets(129,5): error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x001f6] in <58f0218f988743a48dd7c84cbe933f4e>:0  [/media/matthew/Projects/SkiaSharp/binding/HarfBuzzSharp.Tizen/HarfBuzzSharp.Tizen.csproj]\r\n```","Url":"https://github.com/dotnet/sdk/issues/3376","RelatedDescription":"Open issue \"MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. Could not load type of field 'Microsoft.NET.Build.Tasks.DependencyContextBuilder:_filteredPackages'.\" (#3376)"},{"Id":"462344960","IsPullRequest":true,"CreatedAt":"2019-06-29T21:48:07","Actor":"fadimounir","Number":"3375","RawContent":null,"Title":"Disable R2R compilations for non-exe projects","State":"open","Body":"Fixes #3364","Url":"https://github.com/dotnet/sdk/pull/3375","RelatedDescription":"Open PR \"Disable R2R compilations for non-exe projects\" (#3375)"},{"Id":"462173148","IsPullRequest":true,"CreatedAt":"2019-06-29T00:54:45","Actor":"nugetlurker","Number":"3370","RawContent":null,"Title":"Insert NuGet Build 5.2.0-rtm.6067 into sdk","State":"closed","Body":"Insert NuGet Build 5.2.0-rtm.6067 into sdk release/2.2.4xx branch","Url":"https://github.com/dotnet/sdk/pull/3370","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.2.0-rtm.6067 into sdk\" (#3370)"},{"Id":"462173165","IsPullRequest":true,"CreatedAt":"2019-06-29T00:44:54","Actor":"nugetlurker","Number":"3371","RawContent":null,"Title":"Insert NuGet Build 5.2.0-rtm.6067 into sdk","State":"closed","Body":"Insert NuGet Build 5.2.0-rtm.6067 into sdk release/2.1.8xx branch","Url":"https://github.com/dotnet/sdk/pull/3371","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.2.0-rtm.6067 into sdk\" (#3371)"},{"Id":"462244182","IsPullRequest":true,"CreatedAt":"2019-06-29T00:07:02","Actor":"swaroop-sridhar","Number":"3373","RawContent":null,"Title":"Always publish the AppHost","State":"open","Body":"Always copy the AppHost from intermediate to publish directory in order to ensure that the sequence\r\n    dotnet publish /p:PublishSingleFile=true\r\n    dotnet publish /p:PublishSingleFile=false\r\nplaces the correct unbundled apphost in the publish directory.\r\n\r\nFixes #3337","Url":"https://github.com/dotnet/sdk/pull/3373","RelatedDescription":"Open PR \"Always publish the AppHost\" (#3373)"},{"Id":"462114199","IsPullRequest":true,"CreatedAt":"2019-06-28T17:50:33","Actor":"johnbeisner","Number":"3369","RawContent":null,"Title":"WIP: Merge master to release/3.0.1xx for preview7 - SDK","State":"closed","Body":"Merge master to release/3.0.1xx for preview7\r\n\r\nCommonly referred to as the 'snap'","Url":"https://github.com/dotnet/sdk/pull/3369","RelatedDescription":"Closed or merged PR \"WIP: Merge master to release/3.0.1xx for preview7 - SDK\" (#3369)"},{"Id":"462002047","IsPullRequest":true,"CreatedAt":"2019-06-28T14:00:09","Actor":"dotnet-maestro[bot]","Number":"3368","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190627.39\r\n- **Date Produced**: 6/28/2019 2:55 AM\r\n- **Commit**: 247c0290c554a68dd3e560dd88fb0da26353d9d7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19327.39\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19327.39\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3368","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3368)"},{"Id":"461682812","IsPullRequest":false,"CreatedAt":"2019-06-27T18:25:33","Actor":"heng-liu","Number":"3367","RawContent":null,"Title":"\"dotnet publish\" failed when GeneratePackageOnBuild is true (version 3.0.100-preview6-012264)","State":"open","Body":"Running \"dotnet publish\" on a console projects failed when GeneratePackageOnBuild is true.\r\ndotnet --version                                                                                                                                                                                                                                                                                          3.0.100-preview6-012264\r\nIt seems Microsoft.NET.Publish.targets skips build when  GeneratePackageOnBuild is true.\r\n\r\n**Steps to reproduce:**\r\n1.install .NETCore SDK 3.0.100-preview6-012264\r\n2.run \"dotnet new console\" to create a project A\r\n3.add \"`<GeneratePackageOnBuild>true</GeneratePackageOnBuild>`\" in A.csproj PropertyGroup and save.\r\n4.run \"dotnet publish A.csproj\"\r\n\r\n**Expected behavior:**\r\nPublish successfully.\r\n**Actual behavior:**\r\nFailed with following error messages:\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(149,5): error MSB3030: Could not copy the file \"obj\\Debug\\netcoreapp3.0\\A.dll\" because it was not found. [C:\\repos\\A\\A.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(149,5): error MSB3030: Could not copy the file \"C:\\repos\\A\\bin\\Debug\\netcoreapp3.0\\A.deps.json\" because it was not found. [C:\\repos\\A\\A.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(149,5): error MSB3030: Could not copy the file \"obj\\Debug\\netcoreapp3.0\\A.pdb\" because it was not found. [C:\\repos\\A\\A.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(149,5): error MSB3030: Could not copy the file \"C:\\repos\\A\\bin\\Debug\\netcoreapp3.0\\A.runtimeconfig.json\" because it was not found. [C:\\repos\\A\\A.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview6-012264\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Publish.targets(149,5): error MSB3030: Could not copy the file \"C:\\repos\\A\\obj\\Debug\\netcoreapp3.0\\A.exe\" because it was not found. [C:\\repos\\A\\A.csproj]","Url":"https://github.com/dotnet/sdk/issues/3367","RelatedDescription":"Open issue \"\"dotnet publish\" failed when GeneratePackageOnBuild is true (version 3.0.100-preview6-012264)\" (#3367)"},{"Id":"461681875","IsPullRequest":false,"CreatedAt":"2019-06-27T18:23:37","Actor":"terrajobst","Number":"3366","RawContent":null,"Title":"Preview 7 still requires a private feed","State":"open","Body":"In tactics @livarcocc said that Preview 7 shouldn't require a private feed. However, you can't build `xunit` right now:\r\n\r\n> $ dotnet new xunit -o xunit30\r\n> The template \"xUnit Test Project\" was created successfully.\r\n> \r\n> Processing post-creation actions...\r\n> Running 'dotnet restore' on xunit30\\xunit30.csproj...\r\n> T:\\xunit30\\xunit30.csproj : error NU1102: Unable to find package Microsoft.NETCore.App with version (>= 3.0.0-preview7-27826-04)\r\n> T:\\xunit30\\xunit30.csproj : error NU1102:   - Found 70 version(s) in nuget.org [ Nearest version: 3.0.0-preview6-27804-01 ]\r\n> T:\\xunit30\\xunit30.csproj : error NU1102:   - Found 0 version(s) in Microsoft Visual Studio Offline Packages\r\n> T:\\xunit30\\xunit30.csproj : error NU1102:   - Found 0 version(s) in dotnet.myget.org roslyn\r\n> Restore failed in 952.45 ms for T:\\xunit30\\xunit30.csproj.\r\n> \r\n> Restore failed.\r\n> Post action failed.\r\n> Description: Restore NuGet packages required by this project.\r\n> Manual instructions: Run 'dotnet restore'\r\n\r\nThat seems like a bug, right?\r\n\r\nNote, these templates work:\r\n\r\n* Restore completed in 32.51 ms for T:\\netcore3\\console\\console.csproj.\r\n* Restore completed in 40.65 ms for T:\\netcore3\\classlib\\classlib.csproj.\r\n* Restore completed in 32.51 ms for T:\\netcore3\\winforms\\winforms.csproj.\r\n* Restore completed in 32.48 ms for T:\\netcore3\\wpf\\wpf.csproj.\r\n* Restore completed in 32.49 ms for T:\\netcore3\\mvc\\mvc.csproj.\r\n\r\n<details>\r\n<summary>dotnet --info</summary>\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview7-012650\r\n Commit:    b959696aad\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18912\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview7-012650\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview7-27826-04\r\n  Commit:  5c4d829254\r\n\r\n.NET Core SDKs installed:\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009677 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview7-012650 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview7.19326.10 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview7-27826-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview7-27826-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n</details>","Url":"https://github.com/dotnet/sdk/issues/3366","RelatedDescription":"Open issue \"Preview 7 still requires a private feed\" (#3366)"},{"Id":"461680983","IsPullRequest":false,"CreatedAt":"2019-06-27T18:21:55","Actor":"pranavkm","Number":"3365","RawContent":null,"Title":"Dotnet publish for project with P2P references fails when GeneratePackageOnBuild is true","State":"open","Body":"Based on https://github.com/aspnet/AspNetCore/issues/11636.\r\n\r\nhttps://github.com/dotnet/sdk/pull/3255 causes publish to fail when a project has project references. Treating `NoBuild` and `GeneratePackageOnBuild` as equivalent causes project references to [stop building](https://github.com/dotnet/sdk/blob/master/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Publish.targets#L74-L78).\r\n\r\nRepro steps:\r\n\r\n* Clone https://github.com/pranavkm/repro/tree/publish-p2p/\r\n* Call `dotnet publish` on mvcapp\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/3365","RelatedDescription":"Open issue \"Dotnet publish for project with P2P references fails when GeneratePackageOnBuild is true\" (#3365)"},{"Id":"461651868","IsPullRequest":false,"CreatedAt":"2019-06-27T17:19:02","Actor":"fadimounir","Number":"3364","RawContent":null,"Title":"Block R2R compilation for library projects","State":"open","Body":"Publish on library is a strange case already and trips people up a lot.\r\n\r\nIt could also be a source of problems if some lib developer publishes R2R for a certain platform/arch, and another app developer uses that lib on a different target","Url":"https://github.com/dotnet/sdk/issues/3364","RelatedDescription":"Open issue \"Block R2R compilation for library projects\" (#3364)"},{"Id":"461646733","IsPullRequest":true,"CreatedAt":"2019-06-27T17:07:51","Actor":"dotnet-bot","Number":"3363","RawContent":null,"Title":"Merge release/2.2.2xx to release/3.0.1xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into release/3.0.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-release/3.0.1xx\ngit reset --hard upstream/release/3.0.1xx\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-release/3.0.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/3363","RelatedDescription":"Open PR \"Merge release/2.2.2xx to release/3.0.1xx\" (#3363)"},{"Id":"461617180","IsPullRequest":false,"CreatedAt":"2019-06-27T16:04:24","Actor":"ericstj","Number":"3362","RawContent":null,"Title":"Conflict resolution broken for self-contained APP when packages have same version as shared framework","State":"open","Body":"The hardcoded list here is now broken:\r\nhttps://github.com/dotnet/sdk/blob/ec0d2190853afd6c6a8a410d7dc386a9f1ca391b/src/Tasks/Microsoft.NET.Build.Tasks/ResolveTargetingPackAssets.cs#L133-L135\r\n\r\nThis causes bad behavior from conflict resolution:\r\n```\r\nEncountered conflict between 'CopyLocal:C:\\Users\\ericstj\\.nuget\\packages\\microsoft.win32.registry\\4.6.0-preview7.19326.1\\runtimes\\win\\lib\\netstandard2.0\\Microsoft.Win32.Registry.dll' and 'CopyLocal:C:\\Users\\ericstj\\.nuget\\packages\\microsoft.netcore.app.runtime.win-x64\\3.0.0-preview7-27826-01\\runtimes\\win-x64\\lib\\netcoreapp3.0\\Microsoft.Win32.Registry.dll'. Choosing 'CopyLocal:C:\\Users\\ericstj\\.nuget\\packages\\microsoft.netcore.app.runtime.win-x64\\3.0.0-preview7-27826-01\\runtimes\\win-x64\\lib\\netcoreapp3.0\\Microsoft.Win32.Registry.dll' arbitrarily as both items are copy-local and have equal file and assembly versions.\r\n```\r\n\r\nHappening because the items now have the runtime pack package ID:\r\n```\r\nC:\\Users\\ericstj\\.nuget\\packages\\microsoft.netcore.app.runtime.win-x64\\3.0.0-preview7-27826-01\\runtimes\\win-x64\\lib\\netcoreapp3.0\\Microsoft.Win32.Registry.dll\r\n    AssetType = runtime\r\n    CopyLocal = true\r\n    DestinationSubPath = Microsoft.Win32.Registry.dll\r\n    IsTrimmable = true\r\n    PackageName = Microsoft.NETCore.App.Runtime.win-x64\r\n    PackageVersion = 3.0.0-preview7-27826-01\r\n    RuntimeIdentifier = win-x64\r\n```\r\n\r\nBut the preferred packages refer to the old runtime nuget packages, due to that hardcoded list.\r\n\r\nWe cannot ship like this.  Please remove the hardcoding and compute this from the list of RIDs supported by the REFPack.  I couldn't find where this list of RIDs is stored... hopefully that isn't hardcoded too.\r\n\r\nI noticed https://github.com/dotnet/cli/issues/10581 mentions one way that this might be addressed, but I'm not convinced it handles this scenario.\r\n\r\nRepro project:\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <RuntimeFrameworkVersion>3.0.0-preview7-27826-01</RuntimeFrameworkVersion>\r\n    <RuntimeIdentifier>win-x64</RuntimeIdentifier>\r\n  </PropertyGroup>\r\n  \r\n  <ItemGroup>\r\n    <!-- SDK doesn't honor RuntimeFrameworkVersion for targeting pack-->\r\n    <KnownFrameworkReference Update=\"Microsoft.NETCore.App\" TargetingPackVersion=\"$(RuntimeFrameworkVersion)\" />\r\n\r\n    <!-- Temporary till SDK supports transitive framework references. -->\r\n    <KnownFrameworkReference Remove=\"Microsoft.AspNetCore.App\" />\r\n    <KnownFrameworkReference Remove=\"Microsoft.WindowsDesktop.App\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.Win32.Registry\" Version=\"4.6.0-preview7.19326.1\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\nRestore and build it to observe the issue.\r\n","Url":"https://github.com/dotnet/sdk/issues/3362","RelatedDescription":"Open issue \"Conflict resolution broken for self-contained APP when packages have same version as shared framework\" (#3362)"},{"Id":"461567502","IsPullRequest":false,"CreatedAt":"2019-06-27T14:36:05","Actor":"vitek-karas","Number":"3361","RawContent":null,"Title":"Self-contained apps should include RID fallback graph in .deps.json","State":"open","Body":"With the introduction of `AssemblyDependencyResolver` in 3.0 we're making it relatively easy to dynamically load components with their entire dependency trees. Such components can be portable in the sense that they include RID specific assets (for example different asset for Windows and Linux).\r\n\r\nIn order to correctly resolve dependencies of such component, the `AssemblyDependencyResolver` must have a RID fallback graph to follow (so that when we're running on `win10-x64`, we know that we should also look for assets which are `win-x64` or even `win`). The component itself should not carry the RID fallback graph with it (it would need to have the graph of all the RIDs there are and it would need to be updated with every addition).\r\n\r\nJust like framework dependent apps which rely on the framework to provide the RID fallback graph, the component should rely on the host app to provide the RID fallback graph.\r\n\r\nSo if the host app is a framework dependent app, the RID fallback graph comes from the core framework `Microsoft.NETCore.App`. In this case everything works fine.\r\n\r\nIf the host app is a self-contained app, it in itself it doesn't need a RID fallback graph since it's been built/published for one specific RID and thus it only carries assets which are necessary for that RID. But if a portable component is about to be loaded into such app, the RID fallback graph is necessary.\r\n\r\nThe proposal is to modify the SDK to include the RID fallback graph in self-contained app's `.deps.json`. It should be the graph filtered by the RID the app is targeting (just like what we do for the shared framework).\r\n\r\nThe problem is also discussed in https://github.com/dotnet/core-setup/issues/6960","Url":"https://github.com/dotnet/sdk/issues/3361","RelatedDescription":"Open issue \"Self-contained apps should include RID fallback graph in .deps.json\" (#3361)"},{"Id":"462787366","IsPullRequest":false,"CreatedAt":"2019-06-09T03:00:01","Actor":"DualBrain","Number":"3379","RawContent":null,"Title":"VB.NET 'End' not available and odd error message.","State":"open","Body":"Start with a .NET Core 3.0 Console app and simply modify Sub Main.\r\n\r\nModule Program\r\n  Sub Main(args As String())\r\n     End '<--- I added this.\r\n  End Sub\r\nEnd Module\r\n\r\nBy all appearance, Visual Studio thinks things are just fine (no squiggles).  When I build, the build fails with the following error:\r\n\r\n\"BC37234: Unstructured exception handling is not supported in current project type.\"\r\n\r\nHuh?  How is 'End' part of unstructured exception handling?  Also, why wouldn't 'End' be supported for a console application on .NET Core?\r\n\r\nThanks.\r\n\r\nCC: @KathleenDollard, @cston ","Url":"https://github.com/dotnet/sdk/issues/3379","RelatedDescription":"Open issue \"VB.NET 'End' not available and odd error message.\" (#3379)"},{"Id":"463343691","IsPullRequest":false,"CreatedAt":"2019-05-30T19:40:42","Actor":"DualBrain","Number":"3387","RawContent":null,"Title":"VB.NET \"My\" not working as expected?","State":"open","Body":"@cston and @KathleenDollard,\r\n\r\nHere is an isolated example running on the most recent bits as far as I can tell (at least with regards to the Microsoft.VisualBasic side of things).\r\n\r\nModule Program\r\n  Sub Main(args As String())\r\n    Console.WriteLine(My.Computer.Name)\r\n    Console.WriteLine((New Microsoft.VisualBasic.Devices.ServerComputer).Name)\r\n    Console.WriteLine(System.Environment.MachineName)\r\n  End Sub\r\nEnd Module\r\n\r\nThe first line doesn’t work in .NET Core 3.0; however, the second and third lines do.  Playing with the same code in the full .NET Framework, all three lines work and when you jump to the reference for My.Computer.Name, it goes to Microsoft.VisualBasic.Devices.ServerComputer.Name.  I then jumped back over to the .NET Core source tree and that property simply returns System.Environment.MachineName.  One thing I find interesting about this is it’s not a 1:1 map… how does My.Computer.Name map to a property inside of an instantiated instance of Microsoft.VisualBasic.Devices.ServerComputer?  Some “magic” black-box stuff there?\r\n\r\nSo am I just missing something as far as how to \"light up\" the My side of things when working with a .NET Core 3.0 console project?  Or is there some additional work that still has to be done beyond the work that has taken place within the Microsoft.VisualBasic namespace?\r\n\r\n(BTW, @cston great work thus far!)\r\n\r\nThanks.\r\n\r\nCory Smith","Url":"https://github.com/dotnet/sdk/issues/3387","RelatedDescription":"Open issue \"VB.NET \"My\" not working as expected?\" (#3387)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"},{"Id":"444027025","IsPullRequest":false,"CreatedAt":"2019-05-14T17:04:45","Actor":"blowdart","Number":"112","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37650\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0980](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0980)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/112","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0980: .NET Core Denial of Service Vulnerability\" (#112)"},{"Id":"444026277","IsPullRequest":false,"CreatedAt":"2019-05-14T17:02:57","Actor":"blowdart","Number":"111","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core improperly process RegEx strings. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET application.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle RegEx string processing.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37649\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Text.RegularExpressions package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Text.RegularExpressions.dll | 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0820](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0820)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/111","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0820: .NET Core Denial of Service Vulnerability\" (#111)"},{"Id":"435015242","IsPullRequest":false,"CreatedAt":"2019-04-19T01:16:10","Actor":"MichaelSimons","Number":"110","RawContent":null,"Title":"New images for .NET Framework 4.8","State":"open","Body":"# New images for .NET Framework 4.8\r\n\r\nNew images have been released with support for [.NET Framework 4.8 runtime and SDK](https://devblogs.microsoft.com/dotnet/announcing-the-net-framework-4-8/).\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#271](https://github.com/Microsoft/dotnet-framework-docker/issues/271)\r\n\r\n## Details\r\n* Pull request: #270\r\n\r\nYou can access these new images with the following tags:\r\n* `mcr.microsoft.com/dotnet/framework/runtime:4.8`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.8`\r\n\r\nIn addition, the `latest` tag has been updated to refer to these new 4.8 images.\r\n\r\nCheck out the readme files for more information on the latest tags:\r\n* [Runtime](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.runtime.md)\r\n* [SDK](https://github.com/Microsoft/dotnet-framework-docker/blob/master/README.sdk.md)\r\n\r\nThe [3.5 SDK](https://github.com/Microsoft/dotnet-framework-docker/tree/master/3.5/sdk) images are intended to always contain the latest .NET Framework SDK and have also been updated to use the 4.8 SDK.","Url":"https://github.com/dotnet/announcements/issues/110","RelatedDescription":"Open issue \"New images for .NET Framework 4.8\" (#110)"},{"Id":"433297298","IsPullRequest":false,"CreatedAt":"2019-04-15T13:57:07","Actor":"MichaelSimons","Number":"109","RawContent":null,"Title":".NET Framework SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Framework SDK container images now contain the Visual Studio 2019 toolset\r\n.NET Framework SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add additional tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Framework SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Framework SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker#269](https://github.com/Microsoft/dotnet-framework-docker/issues/269)\r\n\r\n## Details\r\nVisual Studio 2019 was released on April 2, 2019. We updated the .NET Framework SDK container images, on the same day, to include a new version of the .NET Framework SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag (e.g. mcr.microsoft.com/dotnet/framework/sdk:4.7.2-20190312-windowsservercore-ltsc2019).\r\n\r\nRelated pull request: [#252](https://github.com/Microsoft/dotnet-framework-docker/pull/252)","Url":"https://github.com/dotnet/announcements/issues/109","RelatedDescription":"Open issue \".NET Framework SDK container images now contain the Visual Studio 2019 toolset\" (#109)"},{"Id":"432735158","IsPullRequest":false,"CreatedAt":"2019-04-12T20:35:55","Actor":"KathleenDollard","Number":"108","RawContent":null,"Title":".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017","State":"open","Body":"# .NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\r\n\r\n.NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017. For example, 2.2.203 and 2.1.603 cause failures in Visual Studio 2017. To work on projects in Visual Studio 2017, use .NET Core SDK 2.2.1nn and 2.1.5nn, such as 2.2.106 and 2.1.506. You can install any combination of these SDKs side by side.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3124](https://github.com/dotnet/sdk/issues/3124)\r\n\r\n## Details\r\n\r\nYou can find the SDKs on you machine using the following at a command prompt:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2. Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nIf you downloaded the .NET Core SDK 2.2 between April 2 and April 12, 2019, the main [.NET downloads page](https://dotnet.microsoft.com/download/) included only 2.2.2nn. Starting April 12th, a new button marked \"Compatible with Visual Studio 2017\" is provided to target 2.2.1nn. If you downloaded 2.2 prior to this date, and you use Visual Studio 2017, install the compatible version.\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nThis problem most often occurs because you manually uninstall the 2.1.5nn version. Simply reinstall it from the [.NET Core 2.1 downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n## More information\r\n\r\nHere is the draft of an article we are preparing for .NET Core documentation:\r\n\r\n---\r\n\r\n## Solving Problems with .NET Core SDK Selection in Visual Studio\r\n\r\nYou may have .NET Core SDKs on your machine and still have problems with Visual Studio finding an appropriate one. This article explains why this happens and how you can fix your installation.\r\n\r\nWhen Visual Studio can't find an appropriate version of the .NET Core SDK, you'll receive an error message. This may appear in the Error pane as NETSDK1045:\r\n\r\n\"The current .NET SDK does not support targeting .NET Core 2...\"\r\n\r\nYou can check what .NET Core SDKs you have on your machine with the following command:\r\n\r\n```bash\r\ndotnet --list-sdks\r\n```\r\n\r\nUnless you have a global.json file, when you use `dotnet` from the command line, the latest .NET Core SDK is used.\r\n\r\n> [TIP!] \r\n> Open a command prompt and try to build with `dotnet build`. If the command line build works, but Visual Studio doesn't suggestions in this article may help.\r\n\r\nThe last two digits of the .NET Core SDK version numbers are in the format are a patch number, which is represented by `nn` in this article because we will continue to service them to include the latest runtimes. To find out more, vist the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\n## Fixes for Common Problems\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.2\r\n\r\nIf you receive the error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.2… Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 2.2.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.2.1nn. As an example, 2.2.106 would be a valid entry.\r\n\r\nIf you downloaded the .NET Core SDK 2.2 after April 2, 2019, version 2.2.2nn (such as 2.2.203) is listed first and is the highest version available. However, Visual Studio 2017 requires 2.2.1nn (such as 2.2.106). .NET Core SDK 2.2.2nn works with Visual Studio 2019. Visual Studio 2017 and Visual Studio 2019 can be installed side by side, but this requires both .NET Core SDK 2.2.1nn and .NET Core SDK 2.2.2nn to develop .NET Core 2.2 applications.\r\n\r\nTo download .NET Core SDK 2.2.2nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n### Visual Studio 2017 can't target .NET Core 2.1\r\n\r\nIf you receive this error message in Visual Studio 2017:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 2.1.5nn. As an example, 2.1.505 would be a valid entry. \r\n\r\nThis problem occurs of you manually uninstall the 2.1.5nn version.\r\n\r\nThe Visual Studio 2019 installation will not remove this file and Visual Studio 2017 will continue to work side by side.\r\n\r\nTo reinstall .NET Core SDK 2.1.5nn, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\n### Visual Studio 2019 can't target .NET Core 3.0 Preview\r\n\r\nIf you receive this error message in Visual Studio 2019:\r\n\r\n`The current .NET SDK does not support targeting .NET Core 2.1. Either target .NET Core 2.0 or lower, or use a version of the .NET SDK that supports .NET Core 2.1.`\r\n\r\nUse `dotnet --list-sdks` to ensure you have .NET Core SDK 3.0.100-preview... As an example, SDK 3.0.100-preview3-010431 would be a valid entry.\r\n\r\nTo install .NET Core SDK 3.0.1nn preview, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core/3.0).\r\n\r\nIn Visual Studio, go to `Tools\\Options\\Projects and Solutions\\.NET Core` and check the box `Use Previews of the .NET Core SDK`.\r\n\r\n> [NOTE!]\r\n> This option will be moving to `Tools\\Options\\Environment` and renamed `Preview Features` in Visual Studio 2019 version 16.1 Preview 2.\r\n\r\nIf you are targeting .NET Core 3.0 preview, the [C# language version will be C# 8.0 Preview by default](https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes#csharp-defaults) allowing you to use new C# features.\r\n\r\n## Understand the relationship between .NET Core SDKs and Visual Studio build tools\r\n\r\nVisual Studio has its own copies of tools like MSBuild, NuGet and the compilers. If you install the .NET Core workload, it also installs the .NET Core SDK which has versions of these tools and provides tasks and targets. These two versions are built from the same repositories, but target .NET Framework and .NET Core respectively. \r\n\r\nWhen you build a .NET Core project in Visual Studio, it uses Visual Studio's copy of MSBuild, but the tasks and targets are supplied from the selected version of the .NET Core SDK. \r\n\r\nWhen you upgrade the .NET Core SDK, you get new tasks and targets. These new tasks and targets may contain features that are not supported by older versions of MSBuild. Like all of the .NET Core SDK, MSBuild is backwards compatible. It is not forwards compatible.\r\n\r\nThis generally works well, but requires a guarantee that the tasks and targets work with the MSBuild version. To ensure this, each .NET Core SDK indicates an MSBuild version range that is used by Visual Studio to determine compatibility. Versions of the .NET Core SDK that have a higher MSBuild identifier than expected are ignored by Visual Studio. In the normal case, this simply means you use the tasks and targets that were installed with your version of Visual Studio.\r\n\r\nBecause of this, you may have many versions of the .NET Core SDK on your machine and Visual Studio still fail to find one it considers appropriate. This is compounded by a poor error message, which we cannot fully correct because it is from the old version of the .NET Core SDK on your machine. Confusion is also compounded by a complex non-linear release matrix that makes it difficult to predict the right .NET Core SDK to select. We are working to improve all this. \r\n\r\n## The Visual Studio / .NET Core SDK support matrix\r\n\r\nThe last two digits of the .NET Core SDK version number are a patch number, which are represented by a `nn` in this table. You can learn more about .NET Core SDK and .NET Core Runtime versioning at the [Overview of how .NET Core is versioned page](https://docs.microsoft.com/en-us/dotnet/core/versions/).\r\n\r\nThe following table shows which Visual Studio versions and .NET Core SDKs are compatible and how they are acquired if you are working with Visual Studio. \r\n\r\n| .NET Core SDK | .NET Core Runtime | Compatible Visual Studio | MSBuild | Notes                                     |\r\n|---------------|-------------------|--------------------------|---------|-------------------------------------------|\r\n| 2.1.5nn       | 2.1               | 2017                     | 15      | Installed as part of VS 2017 version 15.9 |\r\n| 2.1.6nn       | 2.1               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 2.2.1nn       | 2.2               | 2017                     | 15      | Installed manually                        |\r\n| 2.2.2nn       | 2.2               | 2019                     | 16      | Installed as part of VS 2019              |\r\n| 3.0.1nn       | 3.0 (Preview)     | 2019                     | 16      | Installed manually                        |\r\n\r\nVisual Studio 2017 cannot work with .NET Core SDK 2.1.6nn or 2.2.2nn.\r\n\r\nTo find out more about removing older versions of the .NET Core Runtime and .NET Core SDK, visit the [How to remove the .NET Core Runtime and SDK page](https://docs.microsoft.com/en-us/dotnet/core/versions/remove-runtime-sdk-versions?tabs=macos).\r\n\r\nTo download the .NET Core SDK, visit the [.NET downloads page](https://dotnet.microsoft.com/download/dotnet-core).","Url":"https://github.com/dotnet/announcements/issues/108","RelatedDescription":"Open issue \".NET Core SDK 2.2.2nn and 2.1.6nn do not work with Visual Studio 2017\" (#108)"},{"Id":"432081093","IsPullRequest":false,"CreatedAt":"2019-04-11T15:16:43","Actor":"KathleenDollard","Number":"107","RawContent":null,"Title":"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below","State":"open","Body":"# Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\r\n\r\n.NET Core 3 takes the next step in the .NET Core tool strategy with local tools. As part of this process, starting in Preview 4 DotNetCliToolReference tools will be restricted to targeting .NET Core 2.2 and below. DotNetCliToolReference tools can be used in projects targeting .NET Core 3.0, but the tools themselves should target .NET Core 2.2 or below.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/sdk #3115](https://github.com/dotnet/sdk/issues/3115)\r\n\r\n## Details\r\n\r\nThe suggested approach going forward is to to use [.NET Core Local Tools](https://aka.ms/local-tools) when you want a tool that is specific to a project or repository. At the same time we are removing the need to access local tools by the verbose `dotnet tool run <toolname>` that was present in earlier previews. You can now access local tools via `dotnet <toolname>`.\r\n\r\nDotNetCliToolReference tools have a flaw in how their dependencies are restored which can create [difficult to diagnose bugs when running these tools](https://github.com/NuGet/Home/issues/5067). This issue would occur much more frequently if targeting .NET Core 3.0 was allowed. Restricting tools to target only .NET Core 2.2 and below means existing scenarios to continue to work (as well as they previously did), regardless of the framework version targeted by the project or the current .NET Core SDK. \r\n\r\nThe new .NET Core tool strategy avoids this flaw in restore strategy and offers other benefits, like the ability to author one type of tool and install it in different ways depending on project and user needs.\r\n\r\nWe look forward to your feedback on .NET Core Local Tools, and on challenges you face moving away from DotNetCliToolReference tools. \r\n\r\n[dotnet/sdk #3057](https://github.com/dotnet/sdk/pull/3057)","Url":"https://github.com/dotnet/announcements/issues/107","RelatedDescription":"Open issue \"Limit DotNetCliToolReference Tools to .NET Core 2.2 and Below\" (#107)"},{"Id":"431012407","IsPullRequest":false,"CreatedAt":"2019-04-09T14:51:18","Actor":"MichaelSimons","Number":"106","RawContent":null,"Title":".NET Core SDK container images now contain the Visual Studio 2019 toolset","State":"open","Body":"# .NET Core SDK container images now contain the Visual Studio 2019 toolset\r\n\r\n.NET Core SDK container images now include Visual Studio 2019 tools. For most scenarios, this change will not be observable, however, there may be some breaks that will be documented in this issue. We did not add *additional* tools to the SDK, but updated existing tools to match the same tools in Visual Studio 2019. Previously, the tools in SDK matched the same tools in Visual Studio 2017.\r\n\r\nWe will only produce .NET Core SDK images that include Visual Studio 2019 tools. We will not produce another set of .NET Core SDK images that includes Visual Studio 2017 tools. There is a strong goal that the tools remain compatible over releases.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1042](https://github.com/dotnet/dotnet-docker/issues/1042)\r\n\r\n## Details\r\n\r\n[Visual Studio 2019](https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/) was released on April 2, 2019. We updated the .NET Core SDK container images, on the same day, to include a new version of the .NET Core SDK that contains tools that match the same tools in Visual Studio 2019.\r\n\r\nThese tools include:\r\n\r\n* MSBuild\r\n* NuGet\r\n* C# compiler\r\n* F# compiler\r\n* VB compiler\r\n* VS Test\r\n\r\nIf you encounter a breaking change or other issues and need to quickly unblock yourself, you can reference the previous version of the image by using its full version tag:\r\n\r\n* 2.1: `mcr.microsoft.com/dotnet/core/sdk:2.1.505`\r\n* 2.2: `mcr.microsoft.com/dotnet/core/sdk:2.2.105`\r\n\r\nDetails:\r\n\r\n* [dotnet/dotnet-docker #1029](https://github.com/dotnet/dotnet-docker/pull/1029)\r\n* [2.1 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.602-SDK/2.1.602-SDK.md)\r\n* [2.2 SDK release notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.202-SDK/2.2.202-SDK.md)\r\n\r\n## Known Breaking Changes for SDK images (VS 2017 to VS 2019 upgrade)\r\n\r\nThe following issues and breaks have been discovered.\r\n \r\n### Test Log File Name Change\r\n\r\nA change was introduced to the `dotnet test` command when a user-defined log file name is specified.  In the previous version the resulting log file would be named exactly as specified.  In the current version, the log file is named with a timestamp suffix automatically added to the user-defined name.  \r\n\r\nDetails:\r\n* [Microsoft/vstest #1603](https://github.com/Microsoft/vstest/issues/1603) \r\n* [Microsoft/vstest#1876](https://github.com/Microsoft/vstest/issues/1876)","Url":"https://github.com/dotnet/announcements/issues/106","RelatedDescription":"Open issue \".NET Core SDK container images now contain the Visual Studio 2019 toolset\" (#106)"},{"Id":"431003701","IsPullRequest":false,"CreatedAt":"2019-04-09T14:35:39","Actor":"MichaelSimons","Number":"105","RawContent":null,"Title":"Windows Server, version 1709 no longer Supported by .NET Framework","State":"open","Body":"# Windows Server, version 1709 no longer Supported by .NET Framework\r\n\r\nWindows Server, version 1709 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #259](https://github.com/Microsoft/dotnet-framework-docker/issues/259)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.7.1`, and  `4.7.2`. These are tags that are supported on multiple operating systems and versions, and do  not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1709, manifest tags no longer include entries for Windows 10, version 1709, and Windows Server,version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.17134-based image is incompatible with a 10.0.16299 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.7.2-windowsservercore-1709` or `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1709`.","Url":"https://github.com/dotnet/announcements/issues/105","RelatedDescription":"Open issue \"Windows Server, version 1709 no longer Supported by .NET Framework\" (#105)"},{"Id":"430998341","IsPullRequest":false,"CreatedAt":"2019-04-09T14:25:57","Actor":"MichaelSimons","Number":"104","RawContent":null,"Title":"Nano Server 2016 and 1709 no longer Supported by .NET Core","State":"open","Body":"# Nano Server 2016 and 1709 no longer Supported by .NET Core\r\n\r\nNano Server 2016 and Nano Server, version 1709 are no longer supported. As a result, these versions of Windows are no longer supported by the .NET Team and we will no longer produce .NET Core container images for those Windows versions.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2018](https://support.microsoft.com/en-us/help/4043450/products-reaching-end-of-support-for-2018)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\nWe previously announced Nano Server 2016 going out of support in [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/). That post is still accurate.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1041](https://github.com/dotnet/dotnet-docker/issues/1041)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-sac2016` and `nanoserver-1709` are no longer be produced. We will not delete existing images or those tags, however, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `2.1`, `2.1-sdk`, `2.2.1-runtime`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Nano Server 2016 and Nano Server, version 1709, manifest tags no longer include entries for Nano Server 2016, Windows Server 2016, Windows 10, version 1607, Windows 10, version 1709, and Windows Server, version 1709. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.16299-based image is incompatible with a 10.0.14393 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server 2016 or Nano Server, version 1709 images (even though they are no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-sac2016` or `mcr.microsoft.com/dotnet/core/runtime:2.1-nanoserver-1709`.\r\n\r\n### Nano Server Support\r\n\r\n.NET Core is supported on Nano Server, version 1803 and later. \r\n\r\n.NET Core 2.x and 3.0 images are available for all supported versions of Nano Server, version 1803 and later. This means that 2.x and 3.0 manifest tags can be used on Windows 10, version 1803+, and Windows Server, version 1803+. You can also use non-manifest tags for those versions, too, such as `2.2-nanoserver-1809`.\r\n\r\n.NET Core 1.x images are available for Nano Server, version 1809 and later. This means that 1.x manifest tags can be used on Windows 10, version 1809+, Windows Server, version 1809+ and Windows Server 2019. You can also use non-manifest tags for those versions, too, such as `1.1-nanoserver-1809` tag.","Url":"https://github.com/dotnet/announcements/issues/104","RelatedDescription":"Open issue \"Nano Server 2016 and 1709 no longer Supported by .NET Core\" (#104)"},{"Id":"420117627","IsPullRequest":false,"CreatedAt":"2019-03-12T17:35:16","Actor":"vivmishra","Number":"103","RawContent":null,"Title":"March 2019 .NET Updates","State":"open","Body":"# March 2019 .NET Updates\r\n\r\nThe following .NET updates were released in March 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework March 2019 Update - March 19, 2019](https://devblogs.microsoft.com/dotnet/net-framework-march-2019-update/)\r\n* [.NET Framework April 2, 2019 Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - April 2, 2019](https://devblogs.microsoft.com/dotnet/net-framework-april-2-2019-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.15 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.15/1.0.15.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.12/1.1.12.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.9 and .NET Core SDK 2.1.505 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.9/2.1.9.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.3 and .NET Core SDK 2.2.105 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.3/2.2.3.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2432](https://github.com/dotnet/core/issues/2432)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/103","RelatedDescription":"Open issue \"March 2019 .NET Updates\" (#103)"},{"Id":"415363751","IsPullRequest":false,"CreatedAt":"2019-02-27T22:49:51","Actor":"leecow","Number":"102","RawContent":null,"Title":"SDK Installers will remove previous patch versions","State":"open","Body":"The SDK Installers for Windows will upgrade patch versions in place within the same feature band. This will reduce the number of SDKs that are installed on programmer machines.\r\n\r\nFeature bands of the SDK are defined like 3.0.1nn. [Find out more about SDK version numbers](https://docs.microsoft.com/dotnet/core/versions/#versioning-details).\r\n\r\nThis means when .NET Core SDK 3.0.101 becomes available and is installed, .NET Core SDK 3.0.100 will be removed from the machine if it exists. When .NET Core SDK 3.0.200 becomes available and is installed on the same machine, .NET Core SDK versions like 3.0.101 will not be removed but stay side by side with 3.0.200.\r\n\r\nThis approach supports use of `global.json` which will roll forward across patch versions, but not feature bands of the SDK. Thus, upgrading via the SDK installer will not result in errors due to a missing SDK. Feature bands also align with side by side Visual Studio installations for those users that install SDKs for Visual Studio use. For example, Visual Studio 15.9 uses .NET Core SDK 2.2.500 but does not support .NET Core SDK 2.2.600.\r\n\r\nFind out how to [remove other .NET Core SDK versions here.](https://docs.microsoft.com/dotnet/core/versions/remove-runtime-sdk-versions).","Url":"https://github.com/dotnet/announcements/issues/102","RelatedDescription":"Open issue \"SDK Installers will remove previous patch versions\" (#102)"},{"Id":"410971363","IsPullRequest":false,"CreatedAt":"2019-02-15T22:24:40","Actor":"richlander","Number":"101","RawContent":null,"Title":"Publishing .NET Core images to Microsoft Container Registry (MCR)","State":"open","Body":"# Publishing .NET Core images to Microsoft Container Registry (MCR)\r\n\r\nMicrosoft teams are now publishing container images to the [Microsoft Container Registry](https://azure.microsoft.com/en-us/blog/microsoft-syndicates-container-catalog/). There are two primary reasons for this change:\r\n\r\n* Syndicate Microsoft-provided container images to multiple registries, like Docker Hub and Red Hat.\r\n* Use Microsoft Azure as a global CDN for delivering Microsoft-provided container images.\r\n\r\nYou will use and see MCR as a storage back-end for Microsoft images. The primary way you learn about Microsoft container images and tags will be through a registry, which for most users will continue to be Docker Hub. Most of the experience you've had browsing for .NET Core container images will continue unchanged with this new model. The Docker Hub URLs you've used for Microsoft repos will continue to work, and forward to updated locations on Docker Hub. Existing Docker Hub will images will be maintained as-is.\r\n\r\nSee [.NET Core Container Images now Published to Microsoft Container Registry](https://devblogs.microsoft.com/dotnet/net-core-container-images-now-published-to-microsoft-container-registry/) for the most updated information on our use of MCR.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #935](https://github.com/dotnet/dotnet-docker/issues/935)\r\n\r\n## Starting with .NET Core nightly repo\r\n\r\nOn the .NET team, we started our [transition to MCR](https://github.com/dotnet/dotnet-docker/issues/745) with the .NET Core \"nightly\" repo. [dotnet-nightly](dockerhub.com/r/microsoft/dotnet-nightly) is now hosted on MCR and syndicated to Docker Hub. We started with the nightly repo in order to discover and fix any challenges we found with this new model before we move our higher-traffic primary container repository.\r\n\r\nWe will start publishing [dotnet](dockerhub.com/r/microsoft/dotnet) to MCR a bit later, in either February or March. This issue will be updated when that happens.\r\n\r\n## Repo Split\r\n\r\nThe [.NET Core repo](https://hub.docker.com/r/microsoft/dotnet) currently includes 4 major categories of tags: \r\n\r\n* `sdk`\r\n* `aspnetcore-runtime`\r\n* `runtime` \r\n* `runtime-deps`\r\n\r\nProviding all of the tags in one place has helped with discoverability but made for a repo with an enormous README that can be challenging to navigate and consume. It is large enough that we exceeded Docker Hub README limits and had to artificially make it smaller.\r\n\r\nGoing forward, we will provide a repo for each of the tag categories listed above. We'll also provide a \"product repo\" that will hierarchicaly group all of our repos together. This will satisfy discoverability needs so that it will be easy to find the tags you want.\r\n\r\nYou can already see this experience with [microsoft-dotnet-core-nightly](https://hub.docker.com/_/microsoft-dotnet-core-nightly). There are now multiple repos for our nightly builds:\r\n\r\n* [.NET Core Nightly product repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly)\r\n* [.NET Core SDK Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-sdk/)\r\n* [.NET Core ASP.NET Core Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-aspnet/)\r\n* [.NET Core Runtime Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime/)\r\n* [.NET Core Runtime-deps Nightly repo](https://hub.docker.com/_/microsoft-dotnet-core-nightly-runtime-deps/)\r\n\r\nThe same split will exist for the non-nightly stable repo (currently hosted at  [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet)) when we start publishing it to MCR and syndicating it back to DockerHub.\r\n\r\n## Changes to registry URL\r\n\r\nThe biggest change is that your Dockerfiles need to be updated to point to the MCR registry in order get access to new .NET Core container tags. The same change is required for scripts or human operations that pull images via `docker pull`.\r\n\r\nThe following example shows the registry path, repo and tag for the .NET Core 2.2 \"Nightly\" SDK on MCR:\r\n\r\n```console\r\nmcr.microsoft.com/dotnet/core-nightly/sdk:2.2\r\n```\r\n\r\nAs comparison, the following repo and tag have been used to date for the .NET Core 2.2 \"Nightly\" SDK on Docker Hub:\r\n\r\n```console\r\nmicrosoft/dotnet-nightly:2.2-sdk\r\n```\r\n\r\nThe new repo URL is provided at each of the news repos. For example, the new .NET Core SDK \"nightly\" repo provides a box on the right where you can copy and paste the correct MCR-based repo syntax that you can use for `docker pull` or in `FROM` statements in your Dockerfiles.\r\n\r\n![image](https://user-images.githubusercontent.com/2608468/52811702-95c5eb80-304a-11e9-8de8-e6ea1f4b4d75.png)\r\n\r\n## Servicing existing Docker Hub tags\r\n\r\nWe will continue to service existing non-version-specific or floating tags on Docker Hub while the associated .NET Core version is supported. For example the `microsoft/dotnet:2.1-sdk` tag is a floating tag that will continue to be serviced for the lifetime of .NET Core 2.1. You can continue using floating tags without issue.\r\n\r\nIf you use non-floating tags, like `microsoft/dotnet:2.1.504-sdk-alpine`, then you will need to update your Dockerfile to use a new non-floating tag. No new non-floating tags will be published to `microsoft/dotnet` and `microsoft/dotnet-nightly` after we fully transition to MCR.\r\n\r\n.NET Core 3.0 Preview 3 and later will only be made available on MCR.\r\n\r\n## Microsoft is a Verified Publisher\r\n\r\nUntil now, Microsoft-provided container images were considered \"community images\". As part of this change, we are re-classifying Microsoft as a \"verified publisher\" on Docker Hub. This designation should make it clearer that .NET and other Microsoft-provided images are coming from a verified source. There clearly was that expectation previously, but Docker is now making that clearer in the Docker Hub pages they host for Microsoft.\r\n\r\nWe will provide official vulnerability scanning Microsoft-provided images as a second phase of this transition.","Url":"https://github.com/dotnet/announcements/issues/101","RelatedDescription":"Open issue \"Publishing .NET Core images to Microsoft Container Registry (MCR)\" (#101)"},{"Id":"410784442","IsPullRequest":false,"CreatedAt":"2019-02-15T14:06:29","Actor":"TaraOverfield","Number":"100","RawContent":null,"Title":"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809","State":"open","Body":"<strong><em>Final Update 2/19/19 @1:30 PM (PST)</em></strong><em>: This </em><em>advisory is now resolved with no action needed from Microsoft Customers. The issue was not applicable to any valid or supported configuration. There is no consequence for .NET 4.8 Preview customers. </em>\r\n\r\n<em>We strive to share timely information to protect our customer’s productivity, in this case, our finding was thankfully of no consequence for customers on supported configurations.</em>\r\n\r\n<del><em><strong>Update 2/15/19 @3:35 PM (PST)</strong></em><em>: As we continue our investigation, we are finding the issue to be restricted to a limited and isolated set of test-only systems that are using non-official versions of the .NET 4.8 Preview. As of 2/15/19 around 12:00 pm (PST) we further tightened our delivery mechanisms to ensure that the February .NET security updates are only deployed to their expected target systems.</em></del>\r\n\r\n<del><span>The </span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/\" rel=\"nofollow\">February 2019 Security and Quality Rollup for Windows 10 update 1809</a><span> was released earlier this week. We have received multiple customer reports of issues when a customer has installed .NET Framework 4.8 Preview then installed the February security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>.</span> These reports are specific to only to the scenario when a customer has installed both .NET Framework 4.8 Preview and the February security update.</del>\r\n\r\n<del>We are actively working on investigating and addressing this issue. If you installed the February 2019 security update and have not seen any negative behavior, we recommend that you leave your system as-is but closely monitor it and ensure that you apply upcoming .NET Framework updates.</del>\r\n\r\n<del>We will continue to update this <a href=\"https://github.com/dotnet/announcements/issues/100\" rel=\"nofollow\">post</a> as we have new information.</del>\r\n<h2><del>Guidance</del></h2>\r\n<del>We are working on guidance and will update this post and as we have new information.</del>\r\n<h2><del>Workaround</del></h2>\r\n<del>There are no known workarounds at this time.</del>\r\n<h2><del>Symptoms</del></h2>\r\n<del>After installing .NET Framework 4.8 Preview then the February 2019 security update, <a href=\"https://support.microsoft.com/kb/4483452\" rel=\"nofollow\">4483452</a>, Visual Studios will crash with this error message:</del>\r\n<p class=\"xxxxxmsonormal\"><del><b><span style=\"font-size: 10.5pt;font-family: 'Segoe UI',sans-serif;color: black\">\"Exception has been thrown by the target of an invocation.\"</span></b></del></p>","Url":"https://github.com/dotnet/announcements/issues/100","RelatedDescription":"Open issue \"RESOLVED: Advisory on February 2019 Security update for Windows 10 update 1809\" (#100)"},{"Id":"410455095","IsPullRequest":false,"CreatedAt":"2019-02-14T19:28:25","Actor":"richlander","Number":"99","RawContent":null,"Title":"Supporting new Alpine versions (for containers)","State":"open","Body":"# Supporting new Alpine versions (for containers)\r\n\r\n[Alpine 3.9](https://twitter.com/alpinelinux/status/1090416212822110214) was recently announced. Congratulations, Alpine team! On the .NET team, we are committed to supporting new Alpine versions quickly, and also need to define a policy for older versions. This policy only applies for the container images that we publish.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #933](https://github.com/dotnet/dotnet-docker/issues/933)\r\n\r\n## Policy\r\n\r\nWe intend to establish the following policy for supporting Alpine with .NET Core container images:\r\n\r\n* Support new Alpine versions within 60 days of release (hopefully much less).\r\n* Support n-1 Alpine versions for 3 months after we support a new Alpine version.\r\n\r\nNote: The [.NET Core support policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md) may be broader. This policy is specific to the container images we produce.\r\n\r\n## Plans\r\n\r\nWe're in the process of [fixing issues required to support Alpine 3.9](https://github.com/dotnet/dotnet-docker/issues/921). We expect that these issues will be resolved in February and that we'll be able to provide support for Alpine 3.9 in March.\r\n\r\nWe will produce Alpine 3.9 images for .NET Core 2.1, 2.2 and 3.0. Assuming we publish 3.9 images in March, we'll stop producing and supporting Alpine 3.7 and 3.8 images after June (2019).\r\n\r\n## Using Alpine-based .NET Core images\r\n\r\nWe produce a variety of Alpine-based images. You can either depend on a specific Alpine version, like with `microsoft/dotnet:2.2-sdk-alpine3.8` or opt to use the latest Alpine image we have to offer, like with `microsoft/dotnet:2.2-sdk-alpine`. Either are good choices. It is just a question of whether you want to make a conscious decision to move to later Alpine releases.\r\n\r\n## Support for ARM32?\r\n\r\nWe produce Alpine images for x64 (and ARM64, shortly). The [Alpine 3.9 announcement](https://twitter.com/alpinelinux/status/1090416212822110214) made mention of support for ARM32v7. We would like to enable .NET Core [Alpine-based images on ARM32](https://github.com/gliderlabs/docker-alpine/issues/463#issuecomment-460530395). We are patiently waiting for that to happen. If that's important to you, you should comment on that thread.","Url":"https://github.com/dotnet/announcements/issues/99","RelatedDescription":"Open issue \"Supporting new Alpine versions (for containers)\" (#99)"},{"Id":"409840927","IsPullRequest":false,"CreatedAt":"2019-02-13T14:48:21","Actor":"TaraOverfield","Number":"98","RawContent":null,"Title":"February 2019 .NET Updates","State":"open","Body":"# February 2019 .NET Updates\r\nThe following .NET updates were released in February 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework February 2019 Security and Quality Rollup - February 12, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/13/net-framework-february-2019-security-and-quality-rollup/)\r\n* [.NET Framework February 2019 Preview of Quality Rollup - February 19, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/02/19/net-framework-february-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Support Policies\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/98","RelatedDescription":"Open issue \"February 2019 .NET Updates\" (#98)"},{"Id":"409436643","IsPullRequest":false,"CreatedAt":"2019-02-12T18:21:22","Actor":"leecow","Number":"97","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability","State":"open","Body":"## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a domain spoofing vulnerability in .NET Framework and .NET Core which causes the meaning of a URI to change when International Domain Name encoding is applied. An attacker who successfully exploited the vulnerability could redirect a URI.\r\n\r\nThe security update addresses the vulnerability by disallowing certain Unicode characters from the URI.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/35265\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core 1.0 or 1.1 based application that uses the [System.Private.Uri](https://www.nuget.org/packages/System.Private.Uri/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0 | 4.3.1\r\n\r\nAny .NET Core 2.1 or 2.2 based application that uses the [Microsoft.NETCore.App](https://www.nuget.org/packages/Microsoft.NETCore.App) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.1.7, 2.2.0, 2.2.1 | 2.1.8, 2.2.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Private.Uri` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.2.1, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Private.Uri/4.3.0` is a reference to version 4.3.0 of `System.Private.Uri`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.8 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.2 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Private.Uri` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Private.Uri` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Private.Uri\" Version=\"4.3.0\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0657](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0657)\r\n\r\n### Revisions\r\n\r\nV1.0 (February 12, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-02-08_\r\n","Url":"https://github.com/dotnet/announcements/issues/97","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0657: .NET Core Domain Spoofing Vulnerability\" (#97)"},{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"wu-yafeng","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1146188625828147200","CreatedAt":"2019-07-02T22:47:18+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"1144288349022085120","CreatedAt":"2019-06-27T16:56:16+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":15,"FavoriteCount":1,"RawContent":null},{"Id":"1143896700047646727","CreatedAt":"2019-06-26T15:00:00+00:00","UserScreenname":"dotnet","Text":"Run samples and tutorials using Try .NET global tool \nhttps://t.co/xxmNIK7SVd https://t.co/yhtPGPTKds","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":65,"FavoriteCount":29,"RawContent":null},{"Id":"1143254803008458753","CreatedAt":"2019-06-24T20:29:20+00:00","UserScreenname":"dotnet","Text":"Care about AI &amp; Machine Learning? Check out this interview with @zeeshantweets, who is a developer on #MLNET. https://t.co/NuaAjE4Kod","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":46,"FavoriteCount":22,"RawContent":null},{"Id":"1143242317358178304","CreatedAt":"2019-06-24T19:39:43+00:00","UserScreenname":"dotnet","Text":"#dotnetconf Call for papers is open! Are you interested in speaking about .NET at our annual, free, virtual event?… https://t.co/q9IU7uUg4d","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":161,"FavoriteCount":103,"RawContent":null},{"Id":"1142109925474107392","CreatedAt":"2019-06-21T16:40:00+00:00","UserScreenname":"dotnet","Text":"We get an update on the Blazor programming model in .NET Core 3 and beyond from @danroth27\nin this episode of On .N… https://t.co/VqA8j8IEcC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":61,"FavoriteCount":19,"RawContent":null},{"Id":"1142092310009638912","CreatedAt":"2019-06-21T15:30:00+00:00","UserScreenname":"dotnet","Text":"The Evolving Infrastructure of .NET Core\n\nhttps://t.co/Gbt97muw4j","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":71,"FavoriteCount":23,"RawContent":null},{"Id":"1141752346860347394","CreatedAt":"2019-06-20T16:59:06+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":6,"FavoriteCount":2,"RawContent":null},{"Id":"1141115444708823040","CreatedAt":"2019-06-18T22:48:17+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":18,"FavoriteCount":7,"RawContent":null}]}},"RunOn":"2019-07-03T05:30:35.3236371Z","RunDurationInMilliseconds":13900}