{"Data":{"Vue":{"Events":[],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"7503488272","Type":"IssuesEvent","CreatedAt":"2018-04-09T22:19:05","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2145","RelatedDescription":"Closed issue \"Default tab not showing\" (#2145) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/L7hscd8h/7987/](https://jsfiddle.net/L7hscd8h/7987/)\r\n\r\n### Steps to reproduce\r\nIn jsfiddle click on **/user/foo** link\r\nHome component does not appear\r\nBut if use path instead of name, component home appear.\r\n\r\n### What is expected?\r\nThat the home component appear with name property\r\n\r\n### What is actually happening?\r\nThe home component doesn't appear\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7503319189","Type":"IssuesEvent","CreatedAt":"2018-04-09T21:38:30","Actor":"quenti77","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/2145","RelatedDescription":"Opened issue \"Default tab not showing\" (#2145) at vuejs/vue-router","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/L7hscd8h/7987/](https://jsfiddle.net/L7hscd8h/7987/)\r\n\r\n### Steps to reproduce\r\nIn jsfiddle click on **/user/foo** link\r\nHome component does not appear\r\nBut if use path instead of name, component home appear.\r\n\r\n### What is expected?\r\nThat the home component appear with name property\r\n\r\n### What is actually happening?\r\nThe home component doesn't appear\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[{"Id":"7504716761","Type":"PullRequestEvent","CreatedAt":"2018-04-10T05:26:03","Actor":"ktsn","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vuex/pull/1223","RelatedDescription":"Merged pull request \"Fix capital letter\" (#1223) at vuejs/vuex","RelatedBody":"I am sorry for that :)"},{"Id":"7504679645","Type":"PullRequestEvent","CreatedAt":"2018-04-10T05:12:14","Actor":"bichikim","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/pull/1223","RelatedDescription":"Opened pull request \"Fix capital letter\" (#1223) at vuejs/vuex","RelatedBody":"I am sorry for that :)"},{"Id":"7504642250","Type":"IssuesEvent","CreatedAt":"2018-04-10T04:58:02","Actor":"lzxb","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1222","RelatedDescription":"Opened issue \"Add module registration to complete the hook.\" (#1222) at vuejs/vuex","RelatedBody":"### What problem does this feature solve?\r\nI want to develop a plug-in that uses a class to create a module, but you need a hook to bind the currently created module.\r\n\r\n### What does the proposed API look like?\r\nnew Vuex.Store({\r\n    modules: {\r\n        test: {\r\n            namespaced: true,\r\n            state: {},\r\n            getters: {},\r\n            mutations: {},\r\n            actions: {},\r\n            created (module) {\r\n                // A module that is introduced to create the completed module.\r\n            }\r\n        }\r\n    }\r\n});\r\n// My plug-in API\r\nclass Test extends VuexClass {\r\n    constructor () {\r\n        this.state = {\r\n            count: 0\r\n        };\r\n        this.namespaced = true\r\n        // ....\r\n    }\r\n    // mutations\r\n    set plus (payload) { // Automatic conversion to function.\r\n        this.state.count  ;\r\n    }\r\n    // getters\r\n    get text () {\r\n        return `Count value: ${this.state.count}`\r\n    }\r\n    submitPlus () {\r\n        this.Plus(); // Function call.\r\n    }\r\n}\r\n\r\n const test = new Test();\r\n// output: \r\n//  {\r\n//     namespaced: true,\r\n//     state: {\r\n//         count: 0\r\n//     },\r\n//     getters: {\r\n//         text () {}\r\n//     },\r\n//     mutations: {\r\n//         plus () {}\r\n//     },\r\n//     actions: {\r\n//         submitPlus () {}\r\n//     },\r\n//     create () {\r\n//         A module that is introduced to create the completed module.\r\n//     }\r\n//     ...\r\n// }\r\n\r\nnew Vuex.Store({\r\n    modules: {\r\n        test\r\n    }\r\n});\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7503866354","Type":"IssuesEvent","CreatedAt":"2018-04-10T00:16:24","Actor":"ktsn","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/1220","RelatedDescription":"Closed issue \"Vuex/Typescript mappers issue: property does not exist on type 'CombinedVueInstance<Vue, ...>'\" (#1220) at vuejs/vuex","RelatedBody":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/mzymta/vuex-mappers-issue](https://github.com/mzymta/vuex-mappers-issue)\r\n\r\n### Steps to reproduce\r\nAdd mapped methods using mapMutations, mapActions, create another component method that uses any of the mapped methods. Build fails with error:\r\n> Error: Property NAME_OF_MAPPED_METHOD does not exist on type 'CombinedVueInstance<Vue, ...>'\r\n\r\nThe below code works fine if there is no methodThatUsesActionOrMutation() method.\r\nWith methodThatUsesActionOrMutation() method build fails with error:\r\n>TS2339: Property 'pushStringArray' does not exist on type 'CombinedVueInstance<Vue, {}, { methodThatUsesActionOrMutation(): void; }, { newStr: any; getLongS...'.\r\n\r\n```\r\nimport Vue from 'vue';\r\nimport {mapActions, mapGetters, mapMutations} from 'vuex'\r\n\r\nexport default Vue.extend({\r\n  computed: {\r\n    ...mapGetters({\r\n      getStringsArray: 'getStringsArray'\r\n    }),\r\n    newStr: {\r\n      get(): string {\r\n        return this.$store.state.newStr;\r\n      },\r\n      set(value: string) {\r\n        this.$store.commit('setNewStr', value);\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapMutations({\r\n      pushStringArray: 'pushStringArray'\r\n    }),\r\n    ...mapActions({\r\n      pushStringArrayAsync: 'pushStringArrayAsync'\r\n    }),\r\n    methodThatUsesActionOrMutation() {\r\n      // HERE COMES THE ERROR\r\n      this.pushStringArray();\r\n      console.log('done');\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### What is expected?\r\nmapped method pushStringArray() can be used in other component methods - build doesn't fail\r\n\r\n### What is actually happening?\r\nBuild fails with error:\r\nTS2339: Property 'pushStringArray' does not exist on type 'CombinedVueInstance<Vue, {}, { methodThatUsesActionOrMutation(): void; }, { newStr: any; }, Reado...'.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"},{"Id":"7502674880","Type":"IssuesEvent","CreatedAt":"2018-04-09T19:29:04","Actor":"vue-issue-bot","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/vuejs/vuex/issues/1221","RelatedDescription":"Closed issue \"\"replaceState\" disables the state of my module\" (#1221) at vuejs/vuex","RelatedBody":"I wrote a plugin to persist the states.\r\n\r\n``` js\r\nexport default function (key = 'vuex') {\r\n  let storage = window.localStorage\r\n\r\n  function getState (key) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const item = JSON.parse(storage.getItem(key))\r\n        resolve(item)\r\n      } catch (error) { reject(error) }\r\n    })\r\n  }\r\n\r\n  function setState (key, state) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const item = JSON.stringify(state)\r\n        resolve(storage.setItem(key, item))\r\n      } catch (error) { reject(error) }\r\n    })\r\n  }\r\n\r\n  return function (store) {\r\n    getState(key).then(state => {\r\n      if (typeof state === 'object') {\r\n        let merged = Object.assign({}, store.state, state)\r\n        store.replaceState(merged)\r\n      }\r\n    })\r\n\r\n    store.subscribe((mutation, state) => setState(key, state))\r\n  }\r\n}\r\n```\r\n\r\nAnd I am using it this way:\r\n\r\n``` js\r\nimport Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nimport persistedState from './plugins/persisted-state'\r\nimport bananas from './modules/bananas'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  strict: false,\r\n\r\n  modules: {\r\n    bananas\r\n  },\r\n\r\n  plugins: [persistedState()]\r\n})\r\n```\r\n\r\nSo, as you can see... I have a module called `bananas`:\r\n\r\n``` js\r\nconst state = {\r\n  bananas: []\r\n}\r\n\r\nconst getters = {\r\n  bananas: state => state.bananas\r\n}\r\n\r\nconst actions = {\r\n  getBananas ({ commit }) {\r\n    console.log('Where is my localStorage bananas?', state.bananas)\r\n    // commit('setBananas', something)\r\n  }\r\n}\r\n\r\nconst mutations = {\r\n  setBananas (state, bananas) {\r\n    state.bananas = bananas\r\n  }\r\n}\r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n}\r\n```\r\n\r\nI have `bananas` stored in my `localStorage` and Vue can display them when I use the `mapGetters` method inside of my component.\r\n\r\nBut when I try to access `state.bananas` inside of my module the result is the initial value (`[]`). How can I solve that?"},{"Id":"7502674818","Type":"IssuesEvent","CreatedAt":"2018-04-09T19:29:03","Actor":"caiotarifa","Repository":"vuejs/vuex","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vuex/issues/1221","RelatedDescription":"Opened issue \"\"replaceState\" disables the state of my module\" (#1221) at vuejs/vuex","RelatedBody":"I wrote a plugin to persist the states.\r\n\r\n``` js\r\nexport default function (key = 'vuex') {\r\n  let storage = window.localStorage\r\n\r\n  function getState (key) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const item = JSON.parse(storage.getItem(key))\r\n        resolve(item)\r\n      } catch (error) { reject(error) }\r\n    })\r\n  }\r\n\r\n  function setState (key, state) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const item = JSON.stringify(state)\r\n        resolve(storage.setItem(key, item))\r\n      } catch (error) { reject(error) }\r\n    })\r\n  }\r\n\r\n  return function (store) {\r\n    getState(key).then(state => {\r\n      if (typeof state === 'object') {\r\n        let merged = Object.assign({}, store.state, state)\r\n        store.replaceState(merged)\r\n      }\r\n    })\r\n\r\n    store.subscribe((mutation, state) => setState(key, state))\r\n  }\r\n}\r\n```\r\n\r\nAnd I am using it this way:\r\n\r\n``` js\r\nimport Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nimport persistedState from './plugins/persisted-state'\r\nimport bananas from './modules/bananas'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  strict: false,\r\n\r\n  modules: {\r\n    bananas\r\n  },\r\n\r\n  plugins: [persistedState()]\r\n})\r\n```\r\n\r\nSo, as you can see... I have a module called `bananas`:\r\n\r\n``` js\r\nconst state = {\r\n  bananas: []\r\n}\r\n\r\nconst getters = {\r\n  bananas: state => state.bananas\r\n}\r\n\r\nconst actions = {\r\n  getBananas ({ commit }) {\r\n    console.log('Where is my localStorage bananas?', state.bananas)\r\n    // commit('setBananas', something)\r\n  }\r\n}\r\n\r\nconst mutations = {\r\n  setBananas (state, bananas) {\r\n    state.bananas = bananas\r\n  }\r\n}\r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n}\r\n```\r\n\r\nI have `bananas` stored in my `localStorage` and Vue can display them when I use the `mapGetters` method inside of my component.\r\n\r\nBut when I try to access `state.bananas` inside of my module the result is the initial value (`[]`). How can I solve that?"}],"ResultType":"GitHubEvent"},"Vue-Issues":{"Issues":[{"Id":"312757480","IsPullRequest":false,"CreatedAt":"2018-04-10T03:09:22","Actor":"wrrrn","Number":"7992","RawContent":null,"Title":"V-if sets data when using '=' instead of '=='","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://gist.github.com/wrrrn/a1b6e4c25eed7bf2780f4d63bb9bdc82](https://gist.github.com/wrrrn/a1b6e4c25eed7bf2780f4d63bb9bdc82)\r\n\r\n### Steps to reproduce\r\nOpen the console and click the 'select' dropdown.\r\n\r\n### What is expected?\r\nThe `v-if` block will render only if `filter` is 1.\r\n\r\n### What is actually happening?\r\nYou can see the `watch` will fire twice, once with the initial data you expected, then the `v-if` will reset the data to whatever it started out as (in this case: 1). \r\n\r\n---\r\nI'm aware not using `==` or `===` is bad practice, but I also think it's odd that having a `v-if` statement set data within a template.\r\n\r\n¯\\_(ツ)_/¯\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7992","RelatedDescription":"Open issue \"V-if sets data when using '=' instead of '=='\" (#7992)"},{"Id":"312695106","IsPullRequest":false,"CreatedAt":"2018-04-09T22:20:16","Actor":"AllanPamplona","Number":"7991","RawContent":null,"Title":"Methods cant access to data using cdn and es6","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Allanrp/yj2bkx68/](https://jsfiddle.net/Allanrp/yj2bkx68/)\r\n\r\n### Steps to reproduce\r\n1. Create a simple html page and import [vue](https://unpkg.com/vue@2.5.16/dist/vue.js)\r\n2. Create a vue.js file and import it in html\r\n3. Create a span tag in html and add {{ methodx()}} to it\r\n4. In vue.js file create a message variable and add some text in it\r\n5. In vue.js file create a method named methodx using es6 syntax (Example above)\r\n```\r\nmethodx:  () => {\r\n      return this.message;\r\n    }\r\n```\r\n\r\n### What is expected?\r\nThe text in message variable must be shown\r\n\r\n### What is actually happening?\r\nThe method return undefined.\r\n\r\n---\r\nIf you instead of using this.message use a string, it is shown.\r\nWhen you use the function() notation, it shows the variable.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7991","RelatedDescription":"Closed issue \"Methods cant access to data using cdn and es6\" (#7991)"},{"Id":"312522143","IsPullRequest":false,"CreatedAt":"2018-04-09T13:03:38","Actor":"VelizarHristov","Number":"7990","RawContent":null,"Title":"The values of some attributes are replaced with the attribute name, which breaks MathML","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://gist.github.com/VelizarHristov/edaf4cf0d7b9f90c1e5d6070c027237f](https://gist.github.com/VelizarHristov/edaf4cf0d7b9f90c1e5d6070c027237f)\r\n\r\n### Steps to reproduce\r\nOpen the HTML in a browser (Internet connection is required to fetch the libraries).\r\n\r\n### What is expected?\r\n[] should be displayed\r\n\r\n### What is actually happening?\r\nopen] is displayed\r\n\r\n---\r\nIt comes from this line of code: https://github.com/vuejs/vue/blob/aa1356e83de1112660e7a88ff955f49d64bb5b1f/src/platforms/web/server/modules/attrs.js#L49\r\n\r\nThe list of rewritten attributes is here: https://github.com/vuejs/vue/blob/7116af4e07520040ed7328c39d0a456808bfe1e1/src/platforms/web/util/attrs.js#L22\r\n\r\nThis is a general problem when including a block of XML in the HTML.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7990","RelatedDescription":"Open issue \"The values of some attributes are replaced with the attribute name, which breaks MathML\" (#7990)"},{"Id":"312468149","IsPullRequest":false,"CreatedAt":"2018-04-09T12:37:56","Actor":"xmeta","Number":"7989","RawContent":null,"Title":"Compilation of mustaches in mustaches expression doesn't work","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/9bzw21no/33/](https://jsfiddle.net/9bzw21no/33/)\r\n\r\n### Steps to reproduce\r\n1. Use a string literal containing `}}` in the data binding\r\n\r\n```html\r\n{{ 'hello}}' + '{{world' }}\r\n```\r\n\r\n### What is expected?\r\n`hello}}{{world`\r\n\r\n### What is actually happening?\r\n`hello)+\"\"+_s(world`\r\n\r\n---\r\nI expected the same result as svelte.\r\n\r\n- [svelte example](https://svelte.technology/repl?version=1.60.2&gist=35cef4e8c0ff85c17f948b5f4146b1f0)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7989","RelatedDescription":"Closed issue \"Compilation of mustaches in mustaches expression doesn't work\" (#7989)"},{"Id":"312391441","IsPullRequest":true,"CreatedAt":"2018-04-09T04:42:52","Actor":"lyhper","Number":"7988","RawContent":null,"Title":"refactor: add empty v-bind warning(re #7973)","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/7988","RelatedDescription":"Open PR \"refactor: add empty v-bind warning(re #7973)\" (#7988)"},{"Id":"312382638","IsPullRequest":true,"CreatedAt":"2018-04-09T04:40:37","Actor":"lyhper","Number":"7987","RawContent":null,"Title":"refactor: add empty v-bind warning(re #7973)","State":"closed","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/7987","RelatedDescription":"Closed or merged PR \"refactor: add empty v-bind warning(re #7973)\" (#7987)"},{"Id":"312373701","IsPullRequest":true,"CreatedAt":"2018-04-09T02:51:59","Actor":"1402-chenchongzuan","Number":"7986","RawContent":null,"Title":"22","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/7986","RelatedDescription":"Closed or merged PR \"22\" (#7986)"},{"Id":"312350842","IsPullRequest":false,"CreatedAt":"2018-04-09T02:26:29","Actor":"padcom","Number":"7985","RawContent":null,"Title":"\"class\" and \"style\" attributes have no effect on functional SFC components","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://github.com/padcom/vue-functional-no-class-passed](https://github.com/padcom/vue-functional-no-class-passed)\r\n\r\n### Steps to reproduce\r\n* Clone the repository\r\n* ```npm install```\r\n* ```npm start```\r\n* Open http://localhost:4000\r\n\r\n\r\n### What is expected?\r\nFunctional component is painted in green/red by applying the ```items``` CSS class and ```color: red``` style\r\n\r\n### What is actually happening?\r\nThe ```items``` CSS class nor ```style``` is not applied\r\n\r\n---\r\nI am mostly using the added class in components for BEM-style annotations where a component is at the same time an element from the point of view of the container and a block from its personal point of view thus allowing me to delegate certain properties to the container, like positioning for example.\r\nI'd like to use that same principle in functional components, for example with ```transition-group``` that has the option to specify the ```tag``` attribute. It works with statefull components but functional components fail to pass the ```class``` and ```style``` properties when rendering.\r\n\r\nPlease note that the functional components declared in the example repository do contain the ```v-bind=\"data.attrs\"``` and ```v-on=\"listeners\"``` attributes on the root node as described in the [documentation](https://vuejs.org/v2/guide/render-function.html#Passing-Attributes-and-Events-to-Child-Elements-Components).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7985","RelatedDescription":"Closed issue \"\"class\" and \"style\" attributes have no effect on functional SFC components\" (#7985)"},{"Id":"312322611","IsPullRequest":false,"CreatedAt":"2018-04-08T22:22:14","Actor":"xmeta","Number":"7982","RawContent":null,"Title":"Compilation of mustaches in mustaches expression doesn't work","State":"closed","Body":"### Version\r\n2.5.17-beta.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/9bzw21no/28/](https://jsfiddle.net/9bzw21no/28/)\r\n\r\n### Steps to reproduce\r\n1. Use '}}' in the data binding\r\n\r\n```html\r\n{{true ? '}}' : '{{' }}\r\n```\r\n\r\n### What is expected?\r\n`}}`\r\n\r\n### What is actually happening?\r\n`)+\"`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7982","RelatedDescription":"Closed issue \"Compilation of mustaches in mustaches expression doesn't work\" (#7982)"},{"Id":"312329168","IsPullRequest":false,"CreatedAt":"2018-04-08T18:44:27","Actor":"caikan","Number":"7984","RawContent":null,"Title":"add `options` property to the render context of functional component","State":"open","Body":"### What problem does this feature solve?\r\nCustom properties in the options of functional component can't be accessed easily.\r\n\r\n### What does the proposed API look like?\r\nIn the render function of functional component, options can be accessed by `context.options`, just like `vm.$options`(https://vuejs.org/v2/api/index.html#vm-options)\r\n\r\nrelated issue #7492\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7984","RelatedDescription":"Open issue \"add `options` property to the render context of functional component\" (#7984)"},{"Id":"312324772","IsPullRequest":false,"CreatedAt":"2018-04-08T17:43:54","Actor":"patcon","Number":"7983","RawContent":null,"Title":"Create a discord-gitter chat bridge","State":"closed","Body":"I've used  matterbridge with great success!\r\nhttps://github.com/42wim/matterbridge\r\n\r\nSomeone can fork this to run it easily on heroku:\r\nhttps://github.com/edgi-govdata-archiving/matterbridge-heroku\r\n\r\nGitter has the perk that community activity is visible with only one click -- no sign-up. And it uses 3rd-party identity providers (github and twitter), so when someone feels like chatting, it's only one more click. It's def the lowest barrier chat room, so a bridge would still keep that in your community toolset :)\r\n\r\nAnd obviously, ppl could upgrade into discord as they come across the needs for its value adds (which presumably exist) :tada: ","Url":"https://github.com/vuejs/vue/issues/7983","RelatedDescription":"Closed issue \"Create a discord-gitter chat bridge\" (#7983)"},{"Id":"312317245","IsPullRequest":true,"CreatedAt":"2018-04-08T16:03:20","Actor":"HcySunYang","Number":"7981","RawContent":null,"Title":"refactor: make the set method more reasonable","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nPlease check: https://github.com/vuejs/vue/issues/7280#issuecomment-379529594","Url":"https://github.com/vuejs/vue/pull/7981","RelatedDescription":"Open PR \"refactor: make the set method more reasonable\" (#7981)"},{"Id":"312217323","IsPullRequest":true,"CreatedAt":"2018-04-07T15:39:02","Actor":"sodatea","Number":"7980","RawContent":null,"Title":"fix(core): fix dependency collection for computed properties (#7960)","State":"open","Body":"This fix addresses a regression introduced in https://github.com/vuejs/vue/commit/653aac2c57d15f0e93a2c1cc7e6fad156658df19, by altering the order of `watcher.evaluate` and `watcher.depend`, thus preventing the `Vue.set`s in a computed property getter from\r\naccidentally clearing the `deps` array of the computed watcher.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/7980","RelatedDescription":"Open PR \"fix(core): fix dependency collection for computed properties (#7960)\" (#7980)"},{"Id":"312206386","IsPullRequest":true,"CreatedAt":"2018-04-07T13:25:04","Actor":"cobafan","Number":"7979","RawContent":null,"Title":"fix: add placeholder firebase example","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nBefore: \r\n![2018-04-07 22 27 53](https://user-images.githubusercontent.com/11417813/38455434-020cd7f6-3ab3-11e8-8e95-12c58c712bba.png)\r\n\r\nAfter:\r\n![2018-04-07 22 27 30](https://user-images.githubusercontent.com/11417813/38455438-0b031c8a-3ab3-11e8-995d-385ca2f7cbe6.png)\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Code style update\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/7979","RelatedDescription":"Open PR \"fix: add placeholder firebase example\" (#7979)"},{"Id":"311982177","IsPullRequest":false,"CreatedAt":"2018-04-07T08:39:44","Actor":"timbarclay","Number":"7976","RawContent":null,"Title":"Memory and node count increase when showing and hiding with v-if","State":"closed","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://codepen.io/timbarclay/pen/WzamJy](https://codepen.io/timbarclay/pen/WzamJy)\r\n\r\n### Steps to reproduce\r\nThe link is to a codepen of a very simple Vue app that simply contains a button that shows/hides a basic component based on a boolean data property.\r\nOpen Chrome dev tools, go to the performance tab, tick the Memory checkbox and then click record.\r\nToggle the button a number of times and then stop recording.\r\n\r\n### What is expected?\r\nI would expect the Nodes count to rise when the component is shown and fall again when it is hidden, or potentially to rise the first time it is shown but then stay there.\r\n\r\n### What is actually happening?\r\nThe Nodes, Listeners and JS Heap counts all rise each time the component is shown and don't go down.\r\n\r\n---\r\nPerhaps I shouldn't expect browsers to clear up nodes/heap objects/listeners straight away to prevent too much GC churn, but in my production app, I have a form that gets shown/hidden like this that seems to increase the Node count by a little over 13,000 every time it's opened, and I haven't yet seen it go down. Hopefully, I'm misinterpreting what I'm looking at, in which case I would be glad of the reassurance.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7976","RelatedDescription":"Closed issue \"Memory and node count increase when showing and hiding with v-if\" (#7976)"},{"Id":"311786899","IsPullRequest":false,"CreatedAt":"2018-04-07T08:31:20","Actor":"kidplug","Number":"7970","RawContent":null,"Title":"Code-based HTML Entity improperly re-escaped by VUE when in HTML attribute.","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/273361/](https://jsfiddle.net/50wL7mdz/273361/)\r\n\r\n### Steps to reproduce\r\nUse unicode-based HTML entities in an HTML attribute (eg title) in the template for a VUE.\r\n\r\n### What is expected?\r\nThe ampersand character which is the leading character of the entity should NOT be re-escaped when inserted into the DOM.\r\n\r\n### What is actually happening?\r\nThe leading ampersand character of the code-based HTML entity IS being re-escaped when being put into the DOM.\r\n\r\n---\r\nThis is the same issue I reported on 7969 but it got closed.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7970","RelatedDescription":"Closed issue \"Code-based HTML Entity improperly re-escaped by VUE when in HTML attribute.\" (#7970)"},{"Id":"312155133","IsPullRequest":false,"CreatedAt":"2018-04-07T00:31:26","Actor":"mkhuman34","Number":"7978","RawContent":null,"Title":"Ordinary form POST method not working... Laravel 5.5 + VueJs  Last version","State":"closed","Body":"Hello there !\r\n\r\nI have these simple raw  codes on my vue instance for testing.  \r\n\r\n\r\n`<form name=\"aa\" id=\"aa\" action=\"http://192.168.1.100/login\" method=\"POST\">\r\n                                    <input name=\"_token\" type=\"hidden\" v-model=\"csrfToken\">\r\n                                    <button type=\"submit\"> SUBMIT </button>\r\n</form>`\r\n\r\nit's looking on my browser like this...\r\n\r\n`<form data-v-1b610de5=\"\" name=\"aa\" id=\"aa\" action=\"http://192.168.1.100/login\" method=\"POST\"><input data-v-1b610de5=\"\" name=\"_token\" type=\"hidden\" value=\"3jQ5KJV9TiCcTXF0fICpXYgX0C1irPpdHLkZWiAg\"> <button data-v-1b610de5=\"\" type=\"submit\"> SUBMIT </button></form>`\r\n\r\nif there is _token value is TRUE, not sending POST data to action url ....\r\n\r\nJust REFRESHING page that's all.. \r\n\r\nIf im writing wrong data to _token, sending POST method this form .\r\n\r\n\r\nany idea about it? How can I fix this problem ? \r\n\r\nInteresting - really very ordinary , easy web form ... \r\n\r\nThank you so much !!!\r\n","Url":"https://github.com/vuejs/vue/issues/7978","RelatedDescription":"Closed issue \"Ordinary form POST method not working... Laravel 5.5 + VueJs  Last version\" (#7978)"},{"Id":"311866240","IsPullRequest":false,"CreatedAt":"2018-04-06T22:38:27","Actor":"SmallGress","Number":"7972","RawContent":null,"Title":"Is event's modifiers will support 'async'?? ","State":"closed","Body":"### What problem does this feature solve?\r\nAbout this issue https://github.com/vuejs/vue-loader/issues/1229, I want to more discuss.\r\n\r\nI think you said is right. There will be some logic implement in different component.However, does the parent component need to consider all the details of the child component?\r\n\r\nI think when I create a component.I would like to encapsulate all the logic related to this component inside the component.Because the logic should belong to the component.Next time, when use this component in new component, I just need to think about the logic of the new component.\r\n\r\nBesides,most applications now require asynchronous requests.Getting status from parent component is very common.So some time I will use ugly way to make it work.\r\n\r\ncomponent A\r\n```\r\n<template>\r\n  <div>\r\n    <component-b v-bind:go=\"ajax\"></component-b>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"componentA\",\r\n  methods: {\r\n    ajax() {\r\n      return httprequest()\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\ncomponent B\r\n```\r\n<template>\r\n  <button v-on:click=\"emit\">\r\n    <span v-if=\"loading\">loading...</span>\r\n    <span>component-b</span>\r\n  </button>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"componentB\",\r\n  props: ['loading', 'go'],\r\n  methods: {\r\n    emit() {\r\n      this.loading = true\r\n      this.go().then(() => {\r\n        this.loading = false\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\nI think it isn't a good way, but it's efficient.\r\n\r\nI have found a way to custom event modifiers in `vue-template-compiler`, If you want I can write a demo to show how it's efficient.\r\n\r\n🖖\r\n\r\n### What does the proposed API look like?\r\nAdd an async modifier.\r\n\r\n\r\ncomponent A \r\n```\r\n<template>\r\n  <div>\r\n    <component-b v-on:go.async=\"ajax\"></component-b>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"componentA\",\r\n  methods: {\r\n    ajax() {\r\n      return httprequest()\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\ncomponent B\r\n```\r\n<template>\r\n  <button v-on:click=\"emit\">\r\n    <span v-if=\"loading\">loading...</span>\r\n    <span>component-b</span>\r\n  </button>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"componentB\",\r\n  props: ['loading'],\r\n  methods: {\r\n    emit() {\r\n      this.loading = true\r\n      this.$emit('go').then(() => {\r\n        this.loading = false\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7972","RelatedDescription":"Closed issue \"Is event's modifiers will support 'async'?? \" (#7972)"},{"Id":"312099929","IsPullRequest":false,"CreatedAt":"2018-04-06T20:01:18","Actor":"i5heu","Number":"7977","RawContent":null,"Title":"Content of Contenteditable is Dobeling without Variable change ","State":"closed","Body":"Vue.js v2.5.16\r\n\r\nHello i have a really weird bug.\r\n\r\nI have 4 Contenteditable which i copy to a variable.\r\n\r\nIF i write \"1234\" in Path2 > change to Title1 and than disfucus Title1 > Path2 will change to \"12341234\"\r\nBut the variable \"this.PC.Path2\" will stay at 1234\r\n\r\n\r\nThis Error occurs on only content editable - Path2.\r\nI have changed the Name so only the Function \"updateHtml\" can interact with it(on my site) - no effekt.\r\n\r\n\r\nI have now Invested 2 Hours to track this wieder behavior down, i haven't found similar problems on the Net - so hopefully you can help me.\r\n\r\n```\r\n<div class=\"PathContainer\" v-on:click=\"focusPath2\">\r\n      <div class=\"namespace edit path\" contenteditable=\"true\" @blur=\"updateHtml\" name=\"Path\">{{PC.Path}}</div>\r\n      <div class=\"path editPath2\" contenteditable=\"true\" @blur=\"updateHtml\" name=\"Path2\" ref=\"Path2\" >{{PC.Path2}}</div>\r\n      </div>\r\n\r\n      Title1: <span class=\"edit\" contenteditable=\"true\" @blur=\"updateHtml\" name=\"Title2\">{{ PC.Title2 }}</span><br>\r\n      Title2: <span class=\"edit\" contenteditable=\"true\" @blur=\"updateHtml\" name=\"Title1\">{{ PC.Title1 }}</span>\r\n\r\n```\r\n\r\n```\r\n     updateHtml: function(e) {\r\n      var foo = e.target.getAttribute(\"name\")\r\n\r\n      console.log(\"PATH2---\", this.PC.Path2);\r\n      this.PC[foo] = e.target.innerText;\r\n      console.log(\"PATH2---\", this.PC.Path2);\r\n      console.log(\"UPDATING this.PC.\" + foo, \"  to-->\", this.PC[foo]);\r\n    },\r\n```\r\n\r\n\r\nThe Complete Code  with Backend is on: https://github.com/i5heu/wikinota/tree/V2\r\n\r\nOnly the Code of this Module: https://github.com/i5heu/wikinota-web/blob/04629560ec0d6383b4ad8f92cb2647a616c559ce/js/pedit.js \r\n\r\n\r\nHere is the Chrome Performance Profile. (with Pictures of the weird stuff)\r\n[wierd-bug.zip](https://github.com/vuejs/vue/files/1885385/wierd-bug.zip)\r\n","Url":"https://github.com/vuejs/vue/issues/7977","RelatedDescription":"Closed issue \"Content of Contenteditable is Dobeling without Variable change \" (#7977)"},{"Id":"311968348","IsPullRequest":false,"CreatedAt":"2018-04-06T13:05:36","Actor":"honeroku","Number":"7975","RawContent":null,"Title":"prop of component, in conditionally rendered slot, stops being reactive","State":"open","Body":"### Version\r\n2.5.14+\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/cLdbL2t2/22/](https://jsfiddle.net/cLdbL2t2/22/)\r\n\r\n### Steps to reproduce\r\nClicking \"update message\" button adds dots after message.\r\nOnce \"alter\" button is clicked, the message is no longer updated.\r\n\r\n### What is expected?\r\nUpdating message continues working even after slot is altered.\r\n\r\n### What is actually happening?\r\nProp value stops being reactive, without error nor warning.\r\n\r\n---\r\nThis behavior takes place after v2.5.14  including v2.5.17-beta.0.\r\nAny version 2.5.13 and lower works as expected.\r\n\r\nUnit test can be found in my github https://github.com/honeroku/vue-slot-investigate\r\n\r\nI am understanding this is edge case and refactoring structure to avoid placing identical slot in conditional positions resolves my problem.\r\nHowever, this behavior was not occurring in older versions and suddenly changed without error or warning,\r\nso I am considering this is a bug and reporting to let you know.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7975","RelatedDescription":"Open issue \"prop of component, in conditionally rendered slot, stops being reactive\" (#7975)"},{"Id":"311893194","IsPullRequest":true,"CreatedAt":"2018-04-06T08:41:46","Actor":"yassipad","Number":"7974","RawContent":null,"Title":"Allow for custom rule of blocks parsing","State":"open","Body":"I am currently working on a Nativescript+Vue template, which includes a specific webpack config that allows for differentiated templates based on the target (web or native). Single file components are extremely useful and being able to add a custom rule to the parsing of their blocks would make it possible to write a single file containing a `native` template alongside a `web` template, both of which sharing the same <script> logic or <style> rules. So far, the only workaround is to change the 'vue-loader' in webpack but by adding this it would be possible to use the actual official 'vue-loader' and change only the necessary part.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/7974","RelatedDescription":"Open PR \"Allow for custom rule of blocks parsing\" (#7974)"},{"Id":"311887811","IsPullRequest":false,"CreatedAt":"2018-04-06T08:23:22","Actor":"stephan-v","Number":"7973","RawContent":null,"Title":"Compilation fails on empty values on v-bind","State":"open","Body":"### Version\r\n2.5.13\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jt3hjuwg/](https://jsfiddle.net/jt3hjuwg/)\r\n\r\n### Steps to reproduce\r\nI am referencing this closed issue:\r\n\r\nhttps://github.com/vuejs/vue/issues/3969\r\n\r\nI feel like something should be done about this issue because it has left me with some white pages along the way and without a clear error message. If you pass in a null value as a prop the entire compilation breaks down with your evaluated html simply being dumped into the console.\r\n\r\nIs there really not a better way to handle this? Obviously a user should or could check for these values before actually showing the component but in large application a piece of data can sometimes be null either by accident or oversight\r\n\r\nIf nothing can be done about this could someone at least please explain why this happens because in my eyes a component not getting a prop does not justify the entire compilation failing.\r\n\r\n### What is expected?\r\nThe application should not fail compilation.\r\n\r\n### What is actually happening?\r\nIt fails compilation.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7973","RelatedDescription":"Open issue \"Compilation fails on empty values on v-bind\" (#7973)"},{"Id":"311864524","IsPullRequest":false,"CreatedAt":"2018-04-06T06:48:33","Actor":"SmallGress","Number":"7971","RawContent":null,"Title":"Is event's modifiers will support 'async'??","State":"closed","Body":"## What problem does this feature solve?\r\nAbout this issue https://github.com/vuejs/vue-loader/issues/1229, I want to more discuss.\r\n\r\nI think you said is right. There will be some logic implement in different component.However, does the parent component need to consider all the details of the child component?\r\n\r\nI think when I create a component.I would like to encapsulate all the logic related to this component inside the component.Because the logic should belong to the component.Next time, when use this component in new component, I just need to think about the logic of the new component.\r\n\r\nBesides,most applications now require asynchronous requests.Getting status from parent component is very common.So some time I will use ugly way to make it work.\r\n\r\ncomponent A\r\n```\r\n<template>\r\n  <div>\r\n    <component-b v-bind:go=\"ajax\"></component-b>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"componentA\",\r\n  methods: {\r\n    ajax() {\r\n      return httprequest()\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\ncomponent B\r\n```\r\n<template>\r\n  <button v-on:click=\"emit\">\r\n    <span v-if=\"loading\">loading...</span>\r\n    <span>component-b</span>\r\n  </button>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"componentB\",\r\n  props: ['loading', 'go'],\r\n  methods: {\r\n    emit() {\r\n      this.loading = true\r\n      this.go().then(() => {\r\n        this.loading = false\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\nI think it isn't a good way, but it's efficient.\r\n\r\nI have found a way to custom event modifiers in `vue-template-compiler`, If you want I can write a demo to show how it's efficient.\r\n\r\n## What does the proposed API look like?\r\n\r\nSo, I think maybe vue can have a modifiers like 'async' to support.It will write like this:\r\n\r\ncomponent A \r\n```\r\n<template>\r\n  <div>\r\n    <component-b v-on:go.async=\"ajax\"></component-b>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"componentA\",\r\n  methods: {\r\n    ajax() {\r\n      return httprequest()\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\ncomponent B\r\n```\r\n<template>\r\n  <button v-on:click=\"emit\">\r\n    <span v-if=\"loading\">loading...</span>\r\n    <span>component-b</span>\r\n  </button>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"componentB\",\r\n  props: ['loading'],\r\n  methods: {\r\n    emit() {\r\n      this.loading = true\r\n      this.$emit('go').then(() => {\r\n        this.loading = false\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n```","Url":"https://github.com/vuejs/vue/issues/7971","RelatedDescription":"Closed issue \"Is event's modifiers will support 'async'??\" (#7971)"},{"Id":"311767015","IsPullRequest":false,"CreatedAt":"2018-04-05T21:05:42","Actor":"kidplug","Number":"7969","RawContent":null,"Title":"[Some] HTML entity in template gets re-escaped [incorrectly] by vue.js","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/270981/](https://jsfiddle.net/50wL7mdz/270981/)\r\n\r\n### Steps to reproduce\r\nIn the html template, provide an html \"title\" attribute that contains an HTML entity using ascii codes. \r\n\r\n### What is expected?\r\nVue should not mess with or re-escape/entify the literal ampersand character in the HTML template.\r\n\r\n### What is actually happening?\r\nVue sees the ampersand character in the html attribute and changes it to the HTML amp entity - resulting in a rendered ampersand character.\r\n\r\n---\r\nTrying to put a newline character into a title attribute within my template file.\r\nSeems like Vue has some recognized entities (the named ones perhaps) which it leaves alone, but entities using ASCII codes get corrupted.\r\nEntities using ASCII codes seem to behave fine when placed as content inside a tag - but not when placed into an HTML attribute.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7969","RelatedDescription":"Closed issue \"[Some] HTML entity in template gets re-escaped [incorrectly] by vue.js\" (#7969)"},{"Id":"311548764","IsPullRequest":false,"CreatedAt":"2018-04-05T13:22:31","Actor":"Lanseuo","Number":"7968","RawContent":null,"Title":"Register service worker with correct MIME-Type","State":"closed","Body":"### What problem does this feature solve?\r\nI am trying to register a service, so that I will be able to send push notifications using Firebase Cloud Messaging.\r\n\r\nI put a file called firebase-messaging-sw.js in the static folder. I can access the file from my browser. But Firebase needs a Mime-Type of application/javascript, not text/html. How can I change that?\r\n\r\n### What does the proposed API look like?\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7968","RelatedDescription":"Closed issue \"Register service worker with correct MIME-Type\" (#7968)"},{"Id":"311514064","IsPullRequest":false,"CreatedAt":"2018-04-05T10:25:57","Actor":"yooouuri","Number":"7967","RawContent":null,"Title":"Uncaught (in promise) SyntaxError: Unexpected end of input at eval","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://gist.github.com/yooouuri/845d8b95d3343748ef698312ac5b12f3](https://gist.github.com/yooouuri/845d8b95d3343748ef698312ac5b12f3)\r\n\r\n### Steps to reproduce\r\nUsing fetch() to post or get some data\r\n\r\n### What is expected?\r\nGet some json after a fetch\r\n\r\n### What is actually happening?\r\n`Home.vue?5584:89 Uncaught (in promise) SyntaxError: Unexpected end of input at eval (eval at ./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"/Users/youri/PhpstormProjects/kwetter-web/node_modules/.cache/cache-loader\"}!./node_modules/babel-loader/lib/index.js!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/views/Home.vue (app.js:2081)`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7967","RelatedDescription":"Closed issue \"Uncaught (in promise) SyntaxError: Unexpected end of input at eval\" (#7967)"},{"Id":"311411206","IsPullRequest":false,"CreatedAt":"2018-04-05T05:09:52","Actor":"Kelin2025","Number":"7966","RawContent":null,"Title":"Better lifecycle events","State":"closed","Body":"### What problem does this feature solve?\r\nHello. I came with a little specific but, I think, useful ideas.  \r\nVue has undocumented (or?) lifecycle events. I have some nested high-ordered components\r\n- Custom inputп\r\n- Search component with custom input\r\nI wanted to add \"autofocus\" on `@hook:mounted`  for search input but solution is not nice because of 2 problems:\r\n- `$listeners` also adds `@hook:mounted` event. It causes both mounted events call ([demo](https://codesandbox.io/s/921k2n76p4))\r\n- It would be better to have component instance passed to event\r\n\r\n### What does the proposed API look like?\r\n1. Add `.self` flag (or with another name) for lifecycle events that will compare component instances (like `.self` compares targets for native events)\r\n- 2nd: Add component instance to events. It will allow us not to use `$refs` for use cases like this one\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7966","RelatedDescription":"Closed issue \"Better lifecycle events\" (#7966)"},{"Id":"311359598","IsPullRequest":false,"CreatedAt":"2018-04-04T20:54:29","Actor":"nerdcave","Number":"7965","RawContent":null,"Title":".bubble event modifier to pass along events, especially for those with args","State":"closed","Body":"### What problem does this feature solve?\r\nBubbling up an event from a deep child can be really cumbersome (without an event bus) because you have to emit the same event from every parent up the tree until it reaches its target. An event modifier like `.bubble` would be really nice.\r\n\r\n### What does the proposed API look like?\r\nThis:\r\n```vue\r\n<child @hi.bubble/>\r\n```\r\n\r\nInstead of repeating this:\r\n```vue\r\n<child @hi=\"(...args) => $emit('hi', ...args)\"/>\r\n\r\n// or even:\r\n\r\n<child @hi=\"$emit('hi')\"/>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7965","RelatedDescription":"Closed issue \".bubble event modifier to pass along events, especially for those with args\" (#7965)"},{"Id":"311283615","IsPullRequest":false,"CreatedAt":"2018-04-04T16:52:30","Actor":"TheAustinG","Number":"7963","RawContent":null,"Title":"Input file change events are not fired in Microsoft Edge","State":"closed","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/eywraw8t/13868/](https://jsfiddle.net/eywraw8t/13868/)\r\n\r\n### Steps to reproduce\r\nOutlined in the JSFiddle\r\n\r\n### What is expected?\r\nA change event to be fired when a file is selected in the Edge browser.\r\n\r\n### What is actually happening?\r\nNo change event is fired when the input is triggered from within Vue.\r\n\r\n---\r\nThis might just be a bug with Edge but because it does behave correctly outside of Vue it leads me to believe that there is an issue between the two somewhere.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7963","RelatedDescription":"Closed issue \"Input file change events are not fired in Microsoft Edge\" (#7963)"},{"Id":"311306624","IsPullRequest":false,"CreatedAt":"2018-04-04T16:41:02","Actor":"johnleider","Number":"7964","RawContent":null,"Title":"Transition on overflowed elements prevents scroll","State":"open","Body":"### Version\r\n2.5.16\r\n\r\n### Reproduction link\r\n[https://codepen.io/johnjleider/pen/MVqyXB](https://codepen.io/johnjleider/pen/MVqyXB)\r\n\r\n### Steps to reproduce\r\n- Click the button to open the menu\r\n- As the element is transitioning in, begin to scroll (try not to move your mouse while scrolling)\r\n\r\n### What is expected?\r\nThe scrollable area continues to scroll\r\n\r\n### What is actually happening?\r\nThe scrolling area will get stuck. The scrolling event is still being fired but is not actually scrolling the content. Once you move your mouse and start to scroll again, it works as expected.\r\n\r\nIf you wait for the transition to finish before scrolling, the bug does not present itself.\r\n![scroll](https://user-images.githubusercontent.com/9064066/38321350-643295b6-3805-11e8-92ff-ddd2fb3eecd2.gif)\r\n\r\n---\r\nWe had a report of the `v-select` component not scrolling. We have confirmed this is only happening in Chrome 65, but extends back to even 0.15 of the framework (Vuetify). I created the attached codepen to determine if it was framework specific or generally reproducible.\r\n\r\nWhile their may be other css properties that trigger this issue, I have only had success with opacity and happens specifically with the `enter` declaration. If you remove the entry animation, this does not occur.\r\n\r\n**Removed entry animation** https://codepen.io/johnjleider/pen/ZxMObZ?editors=1111\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/7964","RelatedDescription":"Open issue \"Transition on overflowed elements prevents scroll\" (#7964)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"312697052","IsPullRequest":false,"CreatedAt":"2018-04-09T22:19:04","Actor":"quenti77","Number":"2145","RawContent":null,"Title":"Default tab not showing","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/L7hscd8h/7987/](https://jsfiddle.net/L7hscd8h/7987/)\r\n\r\n### Steps to reproduce\r\nIn jsfiddle click on **/user/foo** link\r\nHome component does not appear\r\nBut if use path instead of name, component home appear.\r\n\r\n### What is expected?\r\nThat the home component appear with name property\r\n\r\n### What is actually happening?\r\nThe home component doesn't appear\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2145","RelatedDescription":"Closed issue \"Default tab not showing\" (#2145)"},{"Id":"312317895","IsPullRequest":false,"CreatedAt":"2018-04-08T16:11:35","Actor":"EasonShen1989","Number":"2144","RawContent":null,"Title":"TypeError: _http2.default.get is not a function?why?","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2144","RelatedDescription":"Closed issue \"TypeError: _http2.default.get is not a function?why?\" (#2144)"},{"Id":"312041836","IsPullRequest":false,"CreatedAt":"2018-04-06T16:38:20","Actor":"hjx5309","Number":"2143","RawContent":null,"Title":" [vue-router] \"path\" is required in a route configuration","State":"closed","Body":"以下是我的router的代码，为什么老是包上面的错呢？\r\nimport Vue from 'vue'\r\nimport Router from 'vue-router'\r\n\r\nVue.use(Router)\r\n\r\n\r\nexport const constantRouterMap = [ \r\n  { path: '/404', component: () => import('@/views/404') , hidden: true },\r\n  { path: '*', redirect: '/404', hidden: true }\r\n]\r\n\r\nexport default new Router({\r\n  routes: [\r\n    {\r\n      scrollBehavior: () => ({ y: 0 }),\r\n      routes: constantRouterMap\r\n    }\r\n  ]\r\n})\r\n","Url":"https://github.com/vuejs/vue-router/issues/2143","RelatedDescription":"Closed issue \" [vue-router] \"path\" is required in a route configuration\" (#2143)"},{"Id":"311468247","IsPullRequest":false,"CreatedAt":"2018-04-05T15:18:37","Actor":"lepture","Number":"2142","RawContent":null,"Title":"Enhancement on reusable router view","State":"closed","Body":"### What problem does this feature solve?\r\nUse a shared router view among different route paths. I'm creating a dashboard dynamically, which only need three views:\r\n\r\n1. List View\r\n2. Create View\r\n3. Edit View\r\n\r\nLet's create three files: `PageList.vue`, `PageCreate.vue`, `PageEdit.vue`, and use them in routes.\r\n\r\n### What does the proposed API look like?\r\n```js\r\nroutes = [\r\n   {path: '/users', component: PageList},\r\n   {path: '/users/create', component: PageCreate},\r\n   {path: '/users/:id', component: PageEdit},\r\n   {path: '/posts', component: PageList},\r\n   {path: '/posts/create', component: PageCreate},\r\n   {path: '/posts/:id', component: PageEdit},\r\n]\r\n```\r\n\r\nCurrently, this won't work properly. Actually, it has a bug, the `poll` function will run infinitely when switching routes.\r\n\r\n\r\n## Current Bug\r\n\r\nIf you have such routes, and using navigation guard, the `poll` function will run infinitely when switching routes.\r\n\r\n```js\r\nroutes = [\r\n   {path: '/users', component: PageList},\r\n   {path: '/posts', component: PageList},\r\n]\r\n```\r\n\r\nIf you add a `console.log` here https://github.com/vuejs/vue-router/blob/dev/src/history/base.js#L315\r\nit will print log infinitely, because `instances[key]` will always be undefined.\r\n\r\nMy current solution:\r\n\r\n```js\r\nroutes = [\r\n   {path: '/users', component: Object.assign({}, PageList)},\r\n   {path: '/posts', component: Object.assign({}, PageList)},\r\n]\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2142","RelatedDescription":"Closed issue \"Enhancement on reusable router view\" (#2142)"},{"Id":"311141845","IsPullRequest":false,"CreatedAt":"2018-04-04T11:17:24","Actor":"b-3-n","Number":"2141","RawContent":null,"Title":"Allow paths with trailing slash.","State":"closed","Body":"### What problem does this feature solve?\r\nRight now if I specify a route with \"path: '/about/'\" and I redirect to it the browser URL will be set to '.../about'.\r\n\r\nThis creates various issues. For example, Google Analytics will report usage statistics about '/about' and '/about/' (the latter we get if the user arrives on our page at /about as the browser appends a slash). Clearly this should be fixed on our end and I'm sure there are a lot of other cases where this creates problems. \r\n\r\n### What does the proposed API look like?\r\nDisclaimer: I don't know if this breaks something else.\r\n\r\nIt would be great if \"path: '/about/'\" would add a trailing slash when redirecting to the route.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2141","RelatedDescription":"Closed issue \"Allow paths with trailing slash.\" (#2141)"},{"Id":"310725041","IsPullRequest":false,"CreatedAt":"2018-04-04T06:12:22","Actor":"iamsayantan","Number":"2139","RawContent":null,"Title":"Router guard not working when coming from page its supposed to redirect if condition does not match","State":"closed","Body":"### Version\r\n2.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/jrfd3x89/](https://jsfiddle.net/jrfd3x89/)\r\n\r\n### Steps to reproduce\r\nSo I have three components, Secured, NonSecured and Dummy associated to three routes. Secured routes should be accessed only by users who has access. And the router guard checks for that. If the user does not have permission then navigating the user to NonSecured page. \r\n if you navigate from Dummy to Secured you would be redirected to NonSecured which is what supposed to happen. but if you navigate from NonSecured to Secured page, then you would be allowed to access. \r\n\r\n### What is expected?\r\nIf I have router guard enabled for a route, then the route should not be accessed if the guard logic is not met.\r\n\r\n### What is actually happening?\r\nThe protected route can be accessed if I navigate to the protected route from the page where it redirects if guard logic is not met.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2139","RelatedDescription":"Closed issue \"Router guard not working when coming from page its supposed to redirect if condition does not match\" (#2139)"},{"Id":"310961273","IsPullRequest":true,"CreatedAt":"2018-04-03T19:11:11","Actor":"chrisvfritz","Number":"2140","RawContent":null,"Title":"Add section about handling loading state to lazy-loading doc","State":"open","Body":"Partially resolves https://github.com/vuejs/vuejs.org/issues/1534.","Url":"https://github.com/vuejs/vue-router/pull/2140","RelatedDescription":"Open PR \"Add section about handling loading state to lazy-loading doc\" (#2140)"},{"Id":"310532453","IsPullRequest":false,"CreatedAt":"2018-04-02T16:53:21","Actor":"ambrt","Number":"2138","RawContent":null,"Title":"Web browser back button doesn't go back to scroll position when content is created with beforeRouteEnter.","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/qjrf9zyu/15/](https://jsfiddle.net/qjrf9zyu/15/)\r\n\r\n### Steps to reproduce\r\nWait for page to load.<br>\r\nScroll to bottom.<br>\r\nClick about.<br>\r\nRight click menu->Back or browser Back.<br>\r\n\r\n\r\n### What is expected?\r\nThe browser window should scroll to bottom (last position)\r\n\r\n### What is actually happening?\r\nBrowser scrolls to top.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2138","RelatedDescription":"Closed issue \"Web browser back button doesn't go back to scroll position when content is created with beforeRouteEnter.\" (#2138)"},{"Id":"310351207","IsPullRequest":false,"CreatedAt":"2018-04-01T20:23:49","Actor":"ambrt","Number":"2137","RawContent":null,"Title":"ScrollBehavior don't work on back, but works on refresh.","State":"closed","Body":"\r\nI added  scroll behavior to router:\r\n```\r\nscrollBehavior(to, from, savedPosition) {\r\n    console.log(to)\r\n    console.log(from)\r\n    console.log(savedPosition)\r\n    if (savedPosition) {\r\n      return savedPosition\r\n    } else {\r\n      return { x: 0, y: 0 }\r\n    }\r\n  }\r\n \r\n```\r\nwhen i click on item, and back to list the console shows\r\n`{x: 0, y: 1057}`\r\nbut window is scrolleld to top.\r\n\r\nWhen i hit refresh (F5) right afterwards then windows scrolls to `x` postition.\r\n\r\nIt happens on latest Chrome.","Url":"https://github.com/vuejs/vue-router/issues/2137","RelatedDescription":"Closed issue \"ScrollBehavior don't work on back, but works on refresh.\" (#2137)"},{"Id":"310320825","IsPullRequest":false,"CreatedAt":"2018-04-01T14:36:41","Actor":"eyad-alshami","Number":"2136","RawContent":null,"Title":"Default deeply nested route and active-class Prop","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Iyadorf/dy0e4412/](https://jsfiddle.net/Iyadorf/dy0e4412/)\r\n\r\n### Steps to reproduce\r\nclick on BrowseCommenters\r\n\r\n### What is expected?\r\nonly dashbord -> commenter -> BrowseCommenters\r\nwill have the router-link-active CSS class on them\r\n\r\n### What is actually happening?\r\n dashbord -> commenter -> [BrowseCommenters and NewCommenter]\r\nare all having the router-link-active CSS class on them\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2136","RelatedDescription":"Closed issue \"Default deeply nested route and active-class Prop\" (#2136)"},{"Id":"309206590","IsPullRequest":true,"CreatedAt":"2018-03-31T17:01:41","Actor":"PeachScript","Number":"2130","RawContent":null,"Title":"Fix forEach error in IE browsers","State":"closed","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: example compatibility\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nThis PR is used to fix the `forEach` error in IE.","Url":"https://github.com/vuejs/vue-router/pull/2130","RelatedDescription":"Closed or merged PR \"Fix forEach error in IE browsers\" (#2130)"},{"Id":"310228588","IsPullRequest":false,"CreatedAt":"2018-03-31T09:53:54","Actor":"xerosanyam","Number":"2135","RawContent":null,"Title":"Getting Refused to apply style from '<URL>'","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nVersion: 2.5.3\r\nWhen trying to set path: '/u/:username/note/:noteid'\r\nGetting errors like:\r\nRefused to apply style from '<URL>'\r\nRefused to apply style from 'http://localhost:8080/u/xerosanyam/static/distr/stylesheets/sideshow.min.css' because its MIME type ('text/html') is not a supported stylesheet MIME type, and strict MIME checking is enabled.\r\n\r\nHowever, this works : path: '/u/:username'\r\n\r\nAny solution or reason why this may be happening ?","Url":"https://github.com/vuejs/vue-router/issues/2135","RelatedDescription":"Closed issue \"Getting Refused to apply style from '<URL>'\" (#2135)"},{"Id":"310207906","IsPullRequest":false,"CreatedAt":"2018-03-31T03:14:52","Actor":"pzanitti","Number":"2134","RawContent":null,"Title":"Vue-Router seeks and makes use of the first anchor element inside the component","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/250344/](https://jsfiddle.net/50wL7mdz/250344/)\r\n\r\n### Steps to reproduce\r\nMake a `router-link` whose `tag` attribute is not `a`, and place an anchor element inside it.\r\n\r\n### What is expected?\r\nThe click listener should bind to self.\r\n\r\n### What is actually happening?\r\nThe click listener binds to the first inner anchor element, disregarding self.\r\n\r\n---\r\nThere are several things at play here:\r\n\r\n1. I want the whole card to be user-clickable.\r\n2. I prerender my pages using `prerenderer-spa-plugin` and I want only the title of the card to be an anchor element for SEO reasons.\r\n3. Again for SEO reasons, I don't want the whole card to be an anchor element since it will also contain `Content` and `More content` as anchor text.\r\n\r\nNow I understand where this behavior is coming from, it's trying to prevent a child anchor from triggering a full page navigation. Without using `router-link` I can get the best of both worlds by making a clickable div whose event does not propagate and trigger the inner anchor while web crawlers still relate `/route/3` to `I am a good link`:\r\n\r\n```\r\n<div class=\"card\" @click.prevent=\"$router.push({ name: 'MyRoute', params: { id: 3 } })\">\r\n  <h2><a href=\"/route/3\">I am a good link</a></h2>\r\n  <p>Content</p>\r\n  <p>More content</p>\r\n</div>\r\n```\r\n\r\nThese lines are responsible for this behavior:\r\n\r\nhttps://github.com/vuejs/vue-router/blob/9880cbda8dd299315a253abaab69da00eecdf635/src/components/link.js#L86-L99\r\n\r\nNote a shortcoming of this implementation: should the user place more than one anchor element inside the `router-link`, only the first one will get enhanced while the other ones will still trigger a full page reload. To me that scenario makes little sense and I have no idea of any real use case, but perhaps it should raise a warning.\r\n\r\nIs there any 'official' stance on my workaround?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2134","RelatedDescription":"Open issue \"Vue-Router seeks and makes use of the first anchor element inside the component\" (#2134)"},{"Id":"309307812","IsPullRequest":false,"CreatedAt":"2018-03-29T17:59:36","Actor":"ralphchristianeclipse","Number":"2132","RawContent":null,"Title":"IOS Url Schemes not working on safari","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[prefs://root=General&path=ManagedConfigurationList](prefs://root=General&path=ManagedConfigurationList)\r\n\r\n### Steps to reproduce\r\n1. Put pref href prefs://root=General&path=ManagedConfigurationList\r\n2. a href=\"prefs://root=General&path=ManagedConfigurationList\"\r\n3. click anchor tag\r\n4. Safari invalid address \r\n\r\n### What is expected?\r\nMust open configuration manager / settings\r\n\r\n### What is actually happening?\r\nSafari invalid address\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2132","RelatedDescription":"Closed issue \"IOS Url Schemes not working on safari\" (#2132)"},{"Id":"309630462","IsPullRequest":false,"CreatedAt":"2018-03-29T06:07:12","Actor":"rodrigowbazevedo","Number":"2133","RawContent":null,"Title":"Handle next(new Error)","State":"closed","Body":"I have a `beforeRouteEnter` in my component that can return a `next(new Error)`, and I have two ways to access this route.\r\n\r\nThe first is from another component using: \r\n```javascript\r\nthis.$router.push(\r\n    `/route/${id}`,\r\n    complete => {\r\n        // Do somenthing\r\n    },\r\n    error => {\r\n        // Handle Error\r\n    }\r\n);\r\n```\r\n\r\nThe second is accessing the route direct from the browser, \r\n in this case I have only one way to handle the error, with the global `router.onError(error => {})`.\r\n\r\nAnd what I want is, if the error occurs coming from the other component I'll show a message error at the component, and if it occurs coming direct from the browser I want to redirect him to another route.\r\nBut the problem is, the global `router.onError(error => {})`  is called  first, so if I redirect him to another route I can't handle the error at my other component, and in the global `onError` I don't even receive at leat a `from` route object.\r\n<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2133","RelatedDescription":"Closed issue \"Handle next(new Error)\" (#2133)"},{"Id":"309283750","IsPullRequest":false,"CreatedAt":"2018-03-28T09:16:49","Actor":"Astray-git","Number":"2131","RawContent":null,"Title":"router won't parse programmatic navigated query","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/L7hscd8h/6976/](http://jsfiddle.net/L7hscd8h/6976/)\r\n\r\n### Steps to reproduce\r\nclick 'a'\r\n\r\nquery `z` added as Number in `beforeRouteEnter`\r\n\r\n`typeof query.z` is Number\r\n\r\n### What is expected?\r\nquery props should be String\r\n\r\n### What is actually happening?\r\nno stringify applied on programmatic navigation (`next`, `this.$router.push` etc.)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2131","RelatedDescription":"Open issue \"router won't parse programmatic navigated query\" (#2131)"},{"Id":"308809090","IsPullRequest":true,"CreatedAt":"2018-03-27T06:07:13","Actor":"z1948296027","Number":"2129","RawContent":null,"Title":"Update app.js","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2129","RelatedDescription":"Closed or merged PR \"Update app.js\" (#2129)"},{"Id":"308805042","IsPullRequest":false,"CreatedAt":"2018-03-27T03:01:33","Actor":"z1948296027","Number":"2128","RawContent":null,"Title":"examples/navigation-guards/app.js Error","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nIn this file, line of number 36, end of tag <p> missing </p>\r\n","Url":"https://github.com/vuejs/vue-router/issues/2128","RelatedDescription":"Closed issue \"examples/navigation-guards/app.js Error\" (#2128)"},{"Id":"308457658","IsPullRequest":true,"CreatedAt":"2018-03-26T07:18:10","Actor":"PeachScript","Number":"2127","RawContent":null,"Title":"Fix instance reuse bug in out-in transition #1874","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nThis is a PR for #1874 , cc: @LinusBorg ","Url":"https://github.com/vuejs/vue-router/pull/2127","RelatedDescription":"Open PR \"Fix instance reuse bug in out-in transition #1874\" (#2127)"},{"Id":"308434652","IsPullRequest":false,"CreatedAt":"2018-03-26T05:09:29","Actor":"NereusWy","Number":"2126","RawContent":null,"Title":"when i cofig the router correctly, import it at main.js. i find that router.options can`t get all options ","State":"closed","Body":"\"vue\": \"2.5.13\".\r\n\"vue-router\": \"3.0.1\".\r\n\r\nmain.js\r\nimport router from 'router'\r\nconsole.log(router.options.routes) \r\nresult \r\ncan`t get all  routeroptions...\r\n","Url":"https://github.com/vuejs/vue-router/issues/2126","RelatedDescription":"Closed issue \"when i cofig the router correctly, import it at main.js. i find that router.options can`t get all options \" (#2126)"},{"Id":"308139325","IsPullRequest":false,"CreatedAt":"2018-03-23T18:39:46","Actor":"chasegiunta","Number":"2125","RawContent":null,"Title":"Hash mode places # at incorrect location in URL if current query parameters exist on page load","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/zlvz65rplp](https://codesandbox.io/s/zlvz65rplp)\r\n\r\n### Steps to reproduce\r\nNavigate to myapp.com?foo=bar\r\n\r\n\r\n### What is expected?\r\nHash is appended before query parameters, to get the final result of myapp.com/#/?foo=bar\r\n\r\n\r\n### What is actually happening?\r\nHash is placed after parameters myapp.com?foo=bar#/ (also making the query parameters inaccessible with `this.$route.query`)\r\n\r\n---\r\nNote on codesandbox link - unable to place query parameter for initial URL in editor preview - please remove `/#/` & append `?foo=bar`\r\n\r\nRunning across this in an instance where user authentication is done outside our app, but client/user identifier is passed to our app in query parameter upon authorization.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2125","RelatedDescription":"Open issue \"Hash mode places # at incorrect location in URL if current query parameters exist on page load\" (#2125)"},{"Id":"308138927","IsPullRequest":false,"CreatedAt":"2018-03-23T18:38:23","Actor":"chasegiunta","Number":"2124","RawContent":null,"Title":"Hash mode ignores current query parameters on initial page load","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\nhttps://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/issues/2124","RelatedDescription":"Closed issue \"Hash mode ignores current query parameters on initial page load\" (#2124)"},{"Id":"307932964","IsPullRequest":false,"CreatedAt":"2018-03-23T15:12:19","Actor":"shirohana","Number":"2123","RawContent":null,"Title":"Navigating with anchor tag makes `exact` router-links lost its class","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/1340kjpvvl?autoresize=1&initialpath=%2Fa%2F1&module=%2Fsrc%2Fcomponents%2Fview.vue](https://codesandbox.io/s/1340kjpvvl?autoresize=1&initialpath=%2Fa%2F1&module=%2Fsrc%2Fcomponents%2Fview.vue)\r\n\r\n### Steps to reproduce\r\n(From demo page)\r\n\r\n1. Click `Anchor tags` link, it will append `#anchor` to the href of current page\r\n2. Click `refresh` link, just like sharing a link with a specific paragraph\r\n\r\n### What is expected?\r\nThe link should still has its active class (but only when `mode: 'history'`)\r\n\r\n### What is actually happening?\r\n`vue-router` also compared its `hash`, so it's no longer `exact` and lost its class\r\n\r\n---\r\nI think if we're in `history mode`, it is no need to compare `route.hash`\r\n\r\nhttps://github.com/vuejs/vue-router/blob/dev/src/util/route.js#L73-L94\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2123","RelatedDescription":"Closed issue \"Navigating with anchor tag makes `exact` router-links lost its class\" (#2123)"},{"Id":"307929795","IsPullRequest":false,"CreatedAt":"2018-03-23T07:42:17","Actor":"mrtsglk","Number":"2122","RawContent":null,"Title":"Cannot GET /","State":"closed","Body":"when I turn off the computer and turn it back on, I get this error on all my projects.I'm getting no route\r\n\r\nCannot Get /\r\n\r\nCannot Get /*","Url":"https://github.com/vuejs/vue-router/issues/2122","RelatedDescription":"Closed issue \"Cannot GET /\" (#2122)"},{"Id":"307565235","IsPullRequest":false,"CreatedAt":"2018-03-22T09:31:38","Actor":"mudoo","Number":"2121","RawContent":null,"Title":"implicit params ({ name: 'sub-route' }) don't update when navigating between nested routes","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/67xnq5to/](https://jsfiddle.net/67xnq5to/)\r\n\r\n### Steps to reproduce\r\n1. click /foo/1/sub1\r\n2. click /foo/2/sub1\r\n3. click sub2\r\n\r\n### What is expected?\r\nid==2\r\n\r\n### What is actually happening?\r\nid is 1\r\n\r\nlike #1255\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2121","RelatedDescription":"Open issue \"implicit params ({ name: 'sub-route' }) don't update when navigating between nested routes\" (#2121)"},{"Id":"307563915","IsPullRequest":false,"CreatedAt":"2018-03-22T09:27:41","Actor":"mudoo","Number":"2120","RawContent":null,"Title":"dynamically params can't update","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\nhttps://jsfiddle.net/67xnq5to/\r\n\r\n### Steps to reproduce\r\n1. click /foo/1/sub1\r\n2. click /foo/2/sub1\r\n3. click sub2\r\n\r\nid is 1\r\n\r\n### What is expected?\r\nid==2\r\n\r\n### What is actually happening?\r\ndynamically params can't update\r\n\r\nlike #1255","Url":"https://github.com/vuejs/vue-router/issues/2120","RelatedDescription":"Closed issue \"dynamically params can't update\" (#2120)"},{"Id":"307440673","IsPullRequest":false,"CreatedAt":"2018-03-21T22:29:00","Actor":"Alexsalicki91","Number":"2119","RawContent":null,"Title":"Problem with my Slider when i change the route ","State":"closed","Body":"Hi ,\r\nI’m beginner on JS . I’m creating my portfolio and I take this slider very nice from Codedrops : \" https://tympanus.net/Development/SliceRevealer/index2.html \"and I use on my portfolio for my Homepage . I create SPA with Vuejs and the slider work perfectly but when I change the router and i come back on my page with slider, the JS for slider doesn’t reload and my slider doesn’t work.\r\nI don’t understand ! Can you help me guys ?\r\nThis is GitHub link of my portfolio : https://github.com/Alexsalicki91/portfolio\r\n\r\nAlex Salicki","Url":"https://github.com/vuejs/vue-router/issues/2119","RelatedDescription":"Closed issue \"Problem with my Slider when i change the route \" (#2119)"},{"Id":"306799058","IsPullRequest":false,"CreatedAt":"2018-03-20T10:05:54","Actor":"tmcdos","Number":"2118","RawContent":null,"Title":"Providing the router instance as THIS for router guards \"beforeEach\" and \"beforeRouteEnter\"","State":"open","Body":"### What problem does this feature solve?\r\nIn the current version of the router (3.0.1) the global guard **beforeEach** and the component guard **beforeRouteEnter** do not provide a valid THIS value. Obviously for **beforeEach** if you want to access the **app** property of the router you need a valid THIS in the hook. And since the component is not yet instantiated in **beforeRouteEnter** you can not access the component as THIS - but at least you should be able to access the router instance (and its **app** property).\r\n\r\n### What does the proposed API look like?\r\nI am proposing the following 2 simple changes in the code (file **/src/history/base.js**):\r\n\r\n1) in function `confirmTransition()` - invoke the hook with the router instance as THIS\r\n```javascript\r\n    this.pending = route\r\n    const iterator = (hook: NavigationGuard, next) => {\r\n      if (this.pending !== route) {\r\n        return abort()\r\n      }\r\n      try {\r\n        hook.call(this, route, current, (to: any) => { /// <----- proposed change\r\n```\r\n2) in function `bindEnterGuard()` - invoke the hook with the router instance as THIS\r\n```javascript\r\n  return function routeEnterGuard (to, from, next) {\r\n    return guard.call(this, to, from, cb => { /// <---- proposed change\r\n      next(cb)\r\n      if (typeof cb === 'function') { \r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2118","RelatedDescription":"Open issue \"Providing the router instance as THIS for router guards \"beforeEach\" and \"beforeRouteEnter\"\" (#2118)"},{"Id":"306665000","IsPullRequest":false,"CreatedAt":"2018-03-19T22:44:00","Actor":"pythonxCat","Number":"2117","RawContent":null,"Title":"Can not find module for recursive function","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nMy vue-router's version is **^3.0.1**.\r\nI write a lazy recursive function like following:\r\n`function loadComponent(comppath, delay = 200, timeout = 3000, loadingComp = loadingComp, errorComp = ErrorComp) {\r\nreturn function () {\r\n    return {\r\n      component: import(compPath),\r\n      loading: loadingComp,\r\n      error: errorComp,\r\n      delay,\r\n      timeout\r\n    }\r\n  }\r\n}\r\n// load component in async way\r\nexport default new Router({\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'index',\r\n      component: loadComponent('@/router/views/Index')\r\n    }\r\n ]\r\n})`\r\nVue devtool remind me errors, `vue-router.esm.js?fe87:1905 Error: Cannot find module '@/router/views/Index'.\r\n    at eval (eval at ./src/router lazy recursive (app.js:1143), <anonymous>:5:9)`\r\n","Url":"https://github.com/vuejs/vue-router/issues/2117","RelatedDescription":"Closed issue \"Can not find module for recursive function\" (#2117)"},{"Id":"306452134","IsPullRequest":false,"CreatedAt":"2018-03-19T12:59:52","Actor":"rjgotten","Number":"2116","RawContent":null,"Title":"Extend <router-link> to set an aria-current attribute for active links, instead of an active class","State":"open","Body":"### What problem does this feature solve?\r\nThis feature enables developers to mark up the active router link in an accessible manner for users of assistive technologies.\r\n\r\n### What does the proposed API look like?\r\nSimilar to the `active-class` property on `<router-link>` introduce an `aria-current` string property, defaulting to a `null` value. When set, use the `aria-current` DOM attribute in addition to the active class.\r\n\r\nCriteria for whether the DOM attribute should be set are the same  as for `active-class`. The attribute should be set on the DOM node itself -- or instead on the special nested `<a>` element that router-link can upgrade, should one exist.\r\n\r\nThe DOM attribute's value should be taken from the `aria-current` router-link property. Optionally, this could be validated against the list of valid options as per the ARIA 1.1 specification and console warnings could be provided on attempts to set invalid values.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2116","RelatedDescription":"Open issue \"Extend <router-link> to set an aria-current attribute for active links, instead of an active class\" (#2116)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"312775163","IsPullRequest":true,"CreatedAt":"2018-04-10T05:26:02","Actor":"bichikim","Number":"1223","RawContent":null,"Title":"Fix capital letter","State":"closed","Body":"I am sorry for that :)","Url":"https://github.com/vuejs/vuex/pull/1223","RelatedDescription":"Closed or merged PR \"Fix capital letter\" (#1223)"},{"Id":"312773121","IsPullRequest":false,"CreatedAt":"2018-04-10T04:58:02","Actor":"lzxb","Number":"1222","RawContent":null,"Title":"Add module registration to complete the hook.","State":"open","Body":"### What problem does this feature solve?\r\nI want to develop a plug-in that uses a class to create a module, but you need a hook to bind the currently created module.\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\nnew Vuex.Store({\r\n    modules: {\r\n        test: {\r\n            namespaced: true,\r\n            state: {},\r\n            getters: {},\r\n            mutations: {},\r\n            actions: {},\r\n            created (module) {\r\n                // A module that is introduced to create the completed module.\r\n            }\r\n        }\r\n    }\r\n});\r\n// My plug-in API\r\nclass Test extends VuexClass {\r\n    constructor () {\r\n        this.state = {\r\n            count: 0\r\n        };\r\n        this.namespaced = true\r\n        // ....\r\n    }\r\n    // mutations\r\n    set plus (payload) { // Automatic conversion to function.\r\n        this.state.count++;\r\n    }\r\n    // getters\r\n    get text () {\r\n        return `Count value: ${this.state.count}`\r\n    }\r\n    submitPlus () {\r\n        this.Plus(); // Function call.\r\n    }\r\n}\r\n\r\n const test = new Test();\r\n// output: \r\n//  {\r\n//     namespaced: true,\r\n//     state: {\r\n//         count: 0\r\n//     },\r\n//     getters: {\r\n//         text () {}\r\n//     },\r\n//     mutations: {\r\n//         plus () {}\r\n//     },\r\n//     actions: {\r\n//         submitPlus () {}\r\n//     },\r\n//     create (module) {\r\n//         this.context = module;\r\n//         A module that is introduced to create the completed module.\r\n//     }\r\n//     ...\r\n// }\r\n\r\nnew Vuex.Store({\r\n    modules: {\r\n        test\r\n    }\r\n});\r\n```\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1222","RelatedDescription":"Open issue \"Add module registration to complete the hook.\" (#1222)"},{"Id":"312599504","IsPullRequest":false,"CreatedAt":"2018-04-10T00:16:24","Actor":"mzymta","Number":"1220","RawContent":null,"Title":"Vuex/Typescript mappers issue: property does not exist on type 'CombinedVueInstance<Vue, ...>'","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/mzymta/vuex-mappers-issue](https://github.com/mzymta/vuex-mappers-issue)\r\n\r\n### Steps to reproduce\r\nAdd mapped methods using mapMutations, mapActions, create another component method that uses any of the mapped methods. Build fails with error:\r\n> Error: Property NAME_OF_MAPPED_METHOD does not exist on type 'CombinedVueInstance<Vue, ...>'\r\n\r\nThe below code works fine if there is no methodThatUsesActionOrMutation() method.\r\nWith methodThatUsesActionOrMutation() method build fails with error:\r\n>TS2339: Property 'pushStringArray' does not exist on type 'CombinedVueInstance<Vue, {}, { methodThatUsesActionOrMutation(): void; }, { newStr: any; getLongS...'.\r\n\r\n```\r\nimport Vue from 'vue';\r\nimport {mapActions, mapGetters, mapMutations} from 'vuex'\r\n\r\nexport default Vue.extend({\r\n  computed: {\r\n    ...mapGetters({\r\n      getStringsArray: 'getStringsArray'\r\n    }),\r\n    newStr: {\r\n      get(): string {\r\n        return this.$store.state.newStr;\r\n      },\r\n      set(value: string) {\r\n        this.$store.commit('setNewStr', value);\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapMutations({\r\n      pushStringArray: 'pushStringArray'\r\n    }),\r\n    ...mapActions({\r\n      pushStringArrayAsync: 'pushStringArrayAsync'\r\n    }),\r\n    methodThatUsesActionOrMutation() {\r\n      // HERE COMES THE ERROR\r\n      this.pushStringArray();\r\n      console.log('done');\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### What is expected?\r\nmapped method pushStringArray() can be used in other component methods - build doesn't fail\r\n\r\n### What is actually happening?\r\nBuild fails with error:\r\nTS2339: Property 'pushStringArray' does not exist on type 'CombinedVueInstance<Vue, {}, { methodThatUsesActionOrMutation(): void; }, { newStr: any; }, Reado...'.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1220","RelatedDescription":"Closed issue \"Vuex/Typescript mappers issue: property does not exist on type 'CombinedVueInstance<Vue, ...>'\" (#1220)"},{"Id":"312656565","IsPullRequest":false,"CreatedAt":"2018-04-09T19:29:04","Actor":"caiotarifa","Number":"1221","RawContent":null,"Title":"\"replaceState\" disables the state of my module","State":"closed","Body":"I wrote a plugin to persist the states.\r\n\r\n``` js\r\nexport default function (key = 'vuex') {\r\n  let storage = window.localStorage\r\n\r\n  function getState (key) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const item = JSON.parse(storage.getItem(key))\r\n        resolve(item)\r\n      } catch (error) { reject(error) }\r\n    })\r\n  }\r\n\r\n  function setState (key, state) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        const item = JSON.stringify(state)\r\n        resolve(storage.setItem(key, item))\r\n      } catch (error) { reject(error) }\r\n    })\r\n  }\r\n\r\n  return function (store) {\r\n    getState(key).then(state => {\r\n      if (typeof state === 'object') {\r\n        let merged = Object.assign({}, store.state, state)\r\n        store.replaceState(merged)\r\n      }\r\n    })\r\n\r\n    store.subscribe((mutation, state) => setState(key, state))\r\n  }\r\n}\r\n```\r\n\r\nAnd I am using it this way:\r\n\r\n``` js\r\nimport Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nimport persistedState from './plugins/persisted-state'\r\nimport bananas from './modules/bananas'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  strict: false,\r\n\r\n  modules: {\r\n    bananas\r\n  },\r\n\r\n  plugins: [persistedState()]\r\n})\r\n```\r\n\r\nSo, as you can see... I have a module called `bananas`:\r\n\r\n``` js\r\nconst state = {\r\n  bananas: []\r\n}\r\n\r\nconst getters = {\r\n  bananas: state => state.bananas\r\n}\r\n\r\nconst actions = {\r\n  getBananas ({ commit }) {\r\n    console.log('Where is my localStorage bananas?', state.bananas)\r\n    // commit('setBananas', something)\r\n  }\r\n}\r\n\r\nconst mutations = {\r\n  setBananas (state, bananas) {\r\n    state.bananas = bananas\r\n  }\r\n}\r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n}\r\n```\r\n\r\nI have `bananas` stored in my `localStorage` and Vue can display them when I use the `mapGetters` method inside of my component.\r\n\r\nBut when I try to access `state.bananas` inside of my module the result is the initial value `[]`. How can I get the current state (from localStorage) inside the module?","Url":"https://github.com/vuejs/vuex/issues/1221","RelatedDescription":"Closed issue \"\"replaceState\" disables the state of my module\" (#1221)"},{"Id":"311500988","IsPullRequest":true,"CreatedAt":"2018-04-09T00:23:25","Actor":"bichikim","Number":"1215","RawContent":null,"Title":"[doc] update for updated map helper  Api","State":"closed","Body":"https://github.com/vuejs/vuex/blob/06eb3df66f8690cf59ed57f6cbd16e88695d6837/src/helpers.js#L50\r\nhttps://github.com/vuejs/vuex/blob/06eb3df66f8690cf59ed57f6cbd16e88695d6837/src/helpers.js#L21","Url":"https://github.com/vuejs/vuex/pull/1215","RelatedDescription":"Closed or merged PR \"[doc] update for updated map helper  Api\" (#1215)"},{"Id":"312304763","IsPullRequest":false,"CreatedAt":"2018-04-08T13:13:40","Actor":"ralphchristianeclipse","Number":"1219","RawContent":null,"Title":"Feature Request: watch","State":"open","Body":"### What problem does this feature solve?\r\nThis solve doing \r\n\r\nstore.watch multiple times\r\n\r\nfor example\r\n\r\nstore.watch multiple getter functions\r\n\r\n### What does the proposed API look like?\r\nwhen declaring a vuex store or module add a watch option on it\r\n```js\r\nVuex.store({\r\n  watch: {\r\n    'getters.auth': {\r\n       mutation: 'test',\r\n       action: 'test',\r\n       deep: true,\r\n       immediate: true\r\n     }\r\n  }\r\n})\r\n```\r\nJust the same idea with Vue JS API\r\n\r\nhttps://vuejs.org/v2/api/#watch\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1219","RelatedDescription":"Open issue \"Feature Request: watch\" (#1219)"},{"Id":"311833659","IsPullRequest":true,"CreatedAt":"2018-04-07T08:18:07","Actor":"genie-youn","Number":"1216","RawContent":null,"Title":"[docs] fix grammar","State":"closed","Body":"컴포넌트는 -> 컴포넌트를","Url":"https://github.com/vuejs/vuex/pull/1216","RelatedDescription":"Closed or merged PR \"[docs] fix grammar\" (#1216)"},{"Id":"311993021","IsPullRequest":true,"CreatedAt":"2018-04-06T16:18:04","Actor":"huruji","Number":"1218","RawContent":null,"Title":"[zh-cn] del unnecessary char","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1218","RelatedDescription":"Closed or merged PR \"[zh-cn] del unnecessary char\" (#1218)"},{"Id":"311885942","IsPullRequest":false,"CreatedAt":"2018-04-06T08:16:27","Actor":"marklbp","Number":"1217","RawContent":null,"Title":"How was the render watch added to the  property subs of a instance Dep when new Vue()","State":"closed","Body":"import Vue from 'vue'\r\nimport store from './store'\r\nimport App from './components/App.vue'\r\n\r\nnew Vue({\r\n  store, // inject store to all children\r\n  el: '#app',\r\n  render: h => h(App)\r\n})\r\n","Url":"https://github.com/vuejs/vuex/issues/1217","RelatedDescription":"Closed issue \"How was the render watch added to the  property subs of a instance Dep when new Vue()\" (#1217)"},{"Id":"310888662","IsPullRequest":true,"CreatedAt":"2018-04-04T00:28:52","Actor":"andRyanMiller","Number":"1214","RawContent":null,"Title":"[feat] Add asyncData Method Type to ComponentOptions Module Augmentation","State":"closed","Body":"We use Vue SSR heavily at @algorithmiaio, and we've followed the [Vue SSR-sanctioned means of declaring async data methods](https://ssr.vuejs.org/en/data.html#logic-collocation-with-components).  We've shimmed together our own module augmentation for the `asyncData` method, but given the prevalence of `asyncData` usage throughout the Vue community, it would be nice to standardize the interface.\r\n\r\nI was torn as per where this should live - there isn't a repo for SSR, given that it lives in the Vue repo, and ultimately it felt right here with the Vuex project, since `asyncData` and Vuex go hand in hand. \r\n\r\nI've added a test for the new type as well, and let me know if there's anything I can tweak. Cheers!","Url":"https://github.com/vuejs/vuex/pull/1214","RelatedDescription":"Closed or merged PR \"[feat] Add asyncData Method Type to ComponentOptions Module Augmentation\" (#1214)"},{"Id":"310503374","IsPullRequest":true,"CreatedAt":"2018-04-03T09:15:09","Actor":"Jinjiang","Number":"1212","RawContent":null,"Title":"[docs][zh-cn] synced updates","State":"closed","Body":"Ref: https://github.com/vuejs/vuex/compare/091c14f...57f3cb2\r\nThanks.","Url":"https://github.com/vuejs/vuex/pull/1212","RelatedDescription":"Closed or merged PR \"[docs][zh-cn] synced updates\" (#1212)"},{"Id":"310678717","IsPullRequest":false,"CreatedAt":"2018-04-03T04:14:46","Actor":"zexiplus","Number":"1213","RawContent":null,"Title":"e2e test command went wrong","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/test/e2e/runner.js](https://github.com/vuejs/vuex/blob/dev/test/e2e/runner.js)\r\n\r\n### Steps to reproduce\r\nnpm run test:e2e --test cart.js\r\n\r\n\r\n\r\n### What is expected?\r\nsaw the e2e test result\r\n\r\n### What is actually happening?\r\nsomething went wrong and no test result\r\n\r\n---\r\nwhen I run npm run test:e2e --test cart.js, nothing happens and no result.\r\nI think node won't read args with '--' like '--test' as process.argv .\r\nOne snippet in test/e2e/runner.js is \r\n```js\r\nvar i = args.indexOf('--test')\r\nif (i > -1) {\r\n  args[i   1] = 'test/e2e/specs/'   args[i   1]\r\n}\r\n```\r\nemm, the process.argv seems contains no '--test'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1213","RelatedDescription":"Closed issue \"e2e test command went wrong\" (#1213)"},{"Id":"309202004","IsPullRequest":false,"CreatedAt":"2018-04-02T15:17:19","Actor":"Paul-Yellow","Number":"1202","RawContent":null,"Title":"geeters 改vuex中state中值 geeters不重新计算","State":"closed","Body":"### Version\r\n2.5.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/chrisvfritz/50wL7mdz/](https://jsfiddle.net/chrisvfritz/50wL7mdz/)\r\n\r\n### Steps to reproduce\r\n1、 通过mapaction  提交就可以                                                                                                                                                                                           \r\n 2、在组件的点击事件中中直接通过this.$state.commit()来提交的话 第一次可以更新  但是更新完就报错了，然后getters就不重新计算了，console.log（）无输出。数据类型为基本数据类型number，不涉及到深浅拷贝的问题。\r\n\r\n Cannot read property '_withTask' of undefined\r\n\r\n### What is expected?\r\n官网上说明     可以直接通过this.$state.commit()直接提交mutation \r\n\r\n### What is actually happening?\r\n报错：  Cannot read property '_withTask' of undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1202","RelatedDescription":"Closed issue \"geeters 改vuex中state中值 geeters不重新计算\" (#1202)"},{"Id":"308698637","IsPullRequest":true,"CreatedAt":"2018-04-02T04:31:33","Actor":"sks","Number":"1201","RawContent":null,"Title":"export ActionHandler","State":"closed","Body":"- while testing we have methods using this method signature and it would be nice if we did not have define this.\r\n\r\nWe were running into the issue as reported in https://github.com/Microsoft/TypeScript/issues/7960\r\n\r\nSo workaround was to do something like\r\n```\r\ntype ModuleAction<ModuleState> = (injectee: ActionContext<ModuleState, State>, payload: any) => any;\r\nconst loginAction = userActions.login as ModuleAction<UserState>;\r\n```","Url":"https://github.com/vuejs/vuex/pull/1201","RelatedDescription":"Closed or merged PR \"export ActionHandler\" (#1201)"},{"Id":"309904468","IsPullRequest":true,"CreatedAt":"2018-04-02T04:29:26","Actor":"gitlab-winnie","Number":"1209","RawContent":null,"Title":"docs: add spies as an alternative to testAction helper","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1209","RelatedDescription":"Closed or merged PR \"docs: add spies as an alternative to testAction helper\" (#1209)"},{"Id":"310386798","IsPullRequest":true,"CreatedAt":"2018-04-02T04:09:20","Actor":"bichikim","Number":"1211","RawContent":null,"Title":"Update exporting ActionHandler","State":"closed","Body":"I should use this type in my project \r\nAnd I guess some other people need this as well :) ","Url":"https://github.com/vuejs/vuex/pull/1211","RelatedDescription":"Closed or merged PR \"Update exporting ActionHandler\" (#1211)"},{"Id":"309405652","IsPullRequest":false,"CreatedAt":"2018-03-31T02:22:09","Actor":"khg0712","Number":"1203","RawContent":null,"Title":"Vuex KR documentation has an issue","State":"closed","Body":"### What problem does this feature solve?\r\nIn state part of origin Vuex documentation, it use same word 'Object Spread Operator'. but it was translated into different words in the Korean translation '객체 전파 연산자' and ' 객체 확산 연산자'. This problem can be misunderstood by other users.\r\n\r\n### What does the proposed API look like?\r\nin KR Vuex documentation it has an error\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1203","RelatedDescription":"Closed issue \"Vuex KR documentation has an issue\" (#1203)"},{"Id":"309874448","IsPullRequest":true,"CreatedAt":"2018-03-31T01:59:01","Actor":"iamphill","Number":"1208","RawContent":null,"Title":"docs: Update docs of testAction helper","State":"closed","Body":"This makes it read & produce the correct error messages\r\n\r\nIt now reads as `expect(actual).to.equal(expected)`","Url":"https://github.com/vuejs/vuex/pull/1208","RelatedDescription":"Closed or merged PR \"docs: Update docs of testAction helper\" (#1208)"},{"Id":"309948880","IsPullRequest":true,"CreatedAt":"2018-03-31T01:54:22","Actor":"bichikim","Number":"1210","RawContent":null,"Title":"refactor: fix throwing error style","State":"closed","Body":"  - all throwing error should be starting with lower case","Url":"https://github.com/vuejs/vuex/pull/1210","RelatedDescription":"Closed or merged PR \"refactor: fix throwing error style\" (#1210)"},{"Id":"306495716","IsPullRequest":true,"CreatedAt":"2018-03-31T01:52:49","Actor":"ktsn","Number":"1195","RawContent":null,"Title":"docs: improve API reference of watch and subscribe","State":"closed","Body":"* Changed the wording of `store#watch`'s 1st argument. It was actually a getter function until v1.x but the current getter is not a simple function. (fix #1141)\r\n* Added descriptions how to unsubscribe from `subscribe` / `subscribeAction`. (fix #1194)","Url":"https://github.com/vuejs/vuex/pull/1195","RelatedDescription":"Closed or merged PR \"docs: improve API reference of watch and subscribe\" (#1195)"},{"Id":"306340386","IsPullRequest":false,"CreatedAt":"2018-03-31T01:52:49","Actor":"dhl","Number":"1194","RawContent":null,"Title":"The Vuex documentation does not document how to unsubscribe from subscribe and subscribeAction","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://vuex.vuejs.org/en/api.html](https://vuex.vuejs.org/en/api.html)\r\n\r\n### Steps to reproduce\r\nRefer to documentation for `subscribe` and `subscribeAction`.\r\n\r\n\r\n\r\n### What is expected?\r\nThe API documentation (https://vuex.vuejs.org/en/api.html) references to the fact that both `subscribe` and `subscribeAction` returns a handler function that can be used to unsubscribe the listener passed into those functions.\r\n\r\n### What is actually happening?\r\nThere is no mentioning of anyway to unsubscribe from `subscribe` and `subscribeAction`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1194","RelatedDescription":"Closed issue \"The Vuex documentation does not document how to unsubscribe from subscribe and subscribeAction\" (#1194)"},{"Id":"309612578","IsPullRequest":true,"CreatedAt":"2018-03-31T01:52:20","Actor":"bichikim","Number":"1204","RawContent":null,"Title":" [DOC KR] update doc for issues #1203","State":"closed","Body":"- change 객체 전파 연산자 to 객체 확산 연산자 (I refer to Redux)\r\n   - https://deminoth.github.io/redux/recipes/UsingObjectSpreadOperator.html","Url":"https://github.com/vuejs/vuex/pull/1204","RelatedDescription":"Closed or merged PR \" [DOC KR] update doc for issues #1203\" (#1204)"},{"Id":"309736309","IsPullRequest":true,"CreatedAt":"2018-03-29T16:49:01","Actor":"bichikim","Number":"1207","RawContent":null,"Title":"for reading process.env in safe way","State":"closed","Body":"I cannot pass \"Store should not call root state function twice\"\r\nplease help me \r\nprocess have to be  protected by this way\r\nit is also for improving running speed slightly","Url":"https://github.com/vuejs/vuex/pull/1207","RelatedDescription":"Closed or merged PR \"for reading process.env in safe way\" (#1207)"},{"Id":"309719148","IsPullRequest":true,"CreatedAt":"2018-03-29T16:46:47","Actor":"lzxb","Number":"1206","RawContent":null,"Title":"[featrue] dispatch and commit function support multiple parameters","State":"closed","Body":"In some cases, multiple parameters need to be passed\r\n### Example\r\n```javascript\r\nstore.dispatch('add', 'one', 'two', 'three')\r\nstore.commit('add', 'one', 'two', 'three')\r\n```","Url":"https://github.com/vuejs/vuex/pull/1206","RelatedDescription":"Closed or merged PR \"[featrue] dispatch and commit function support multiple parameters\" (#1206)"},{"Id":"309627453","IsPullRequest":true,"CreatedAt":"2018-03-29T06:57:37","Actor":"bichikim","Number":"1205","RawContent":null,"Title":"perf: update util find","State":"closed","Body":"The find in util doesn't need to loop all value in list for finding only one value","Url":"https://github.com/vuejs/vuex/pull/1205","RelatedDescription":"Closed or merged PR \"perf: update util find\" (#1205)"},{"Id":"308312289","IsPullRequest":true,"CreatedAt":"2018-03-28T15:27:58","Actor":"L-Chris","Number":"1199","RawContent":null,"Title":"[DOC ZH-CN EN] add description for feature(register global actions in namespaced modules)","State":"closed","Body":"[DOC ZH-CN EN] add description for feature(register global actions in namespaced modules)","Url":"https://github.com/vuejs/vuex/pull/1199","RelatedDescription":"Closed or merged PR \"[DOC ZH-CN EN] add description for feature(register global actions in namespaced modules)\" (#1199)"},{"Id":"308341332","IsPullRequest":true,"CreatedAt":"2018-03-28T15:17:36","Actor":"bichikim","Number":"1200","RawContent":null,"Title":"[DOC KR] update updated Api description","State":"closed","Body":"- Component Binding Helpers\r\n- registerModule","Url":"https://github.com/vuejs/vuex/pull/1200","RelatedDescription":"Closed or merged PR \"[DOC KR] update updated Api description\" (#1200)"},{"Id":"308016381","IsPullRequest":true,"CreatedAt":"2018-03-24T02:58:58","Actor":"ktsn","Number":"1198","RawContent":null,"Title":"docs: update Japanese docs","State":"closed","Body":"translated #1169 ","Url":"https://github.com/vuejs/vuex/pull/1198","RelatedDescription":"Closed or merged PR \"docs: update Japanese docs\" (#1198)"},{"Id":"307247985","IsPullRequest":true,"CreatedAt":"2018-03-21T16:18:10","Actor":"Jinjiang","Number":"1197","RawContent":null,"Title":"[docs][zh-cn] synced updates to #e237803","State":"closed","Body":"Ref: https://github.com/Jinjiang/vuex/compare/dev...vuejs:dev\r\nThanks.","Url":"https://github.com/vuejs/vuex/pull/1197","RelatedDescription":"Closed or merged PR \"[docs][zh-cn] synced updates to #e237803\" (#1197)"},{"Id":"306712501","IsPullRequest":false,"CreatedAt":"2018-03-20T04:17:43","Actor":"fxxjdedd","Number":"1196","RawContent":null,"Title":"Find problem when changing state using Object.assign()","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://jsrun.net/QZZKp/edit](http://jsrun.net/QZZKp/edit)\r\n\r\n### Steps to reproduce\r\nuncomment the code in dependency.mutations.SET_STATUS\r\n\r\n```\r\n            /* doesn't work*/ \r\n            // state.status = Object.assign(state.status, status)\r\n            \r\n            /* work */\r\n            state.status = Object.assign({}, state.status, status)\r\n```\r\n\r\n\r\n### What is expected?\r\nloading status should change to 'false' after 500ms\r\n\r\n### What is actually happening?\r\nloading status is always 'true'\r\n\r\n---\r\nwhat is the diff between \r\n\r\nObject.assign({}, state.status, status) // work\r\n\r\nand \r\n\r\nObject.assign(state.status, status) // doesn't work\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1196","RelatedDescription":"Closed issue \"Find problem when changing state using Object.assign()\" (#1196)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-04-10T05:30:35.0382496Z","RunDurationInMilliseconds":4509}