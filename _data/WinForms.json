{"Data":{"GitHub":{"Issues":[{"Id":"465517030","IsPullRequest":true,"CreatedAt":"2019-07-09T00:43:49","Actor":"dotnet-maestro[bot]","Number":"1307","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190708.06\r\n- **Date Produced**: 7/9/2019 2:37 AM\r\n- **Commit**: c4105af1c2255a2eb390d08aac4bf8272c3554da\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview8-27908-06\r\n\r\n[marker]: <> (End:46621eff-65ab-4284-d49b-08d6b1351be3)\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview8.19358.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview8.19358.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 4.6.0-preview8.19358.3 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview8.19358.3 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview8.19358.3 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview8.19358.3 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 4.6.0-preview8.19358.3 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview8.19358.3 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview8.19358.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 3.0.0-preview8.19358.1 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-preview8.19358.1 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/1307","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#1307)"},{"Id":"464843668","IsPullRequest":true,"CreatedAt":"2019-07-09T00:04:10","Actor":"hughbe","Number":"1295","RawContent":null,"Title":"Add BorderSidesEditor tests and fix some bugs","State":"closed","Body":"Contributes to #817\r\nFixes #1294","Url":"https://github.com/dotnet/winforms/pull/1295","RelatedDescription":"Closed or merged PR \"Add BorderSidesEditor tests and fix some bugs\" (#1295)"},{"Id":"464843627","IsPullRequest":false,"CreatedAt":"2019-07-09T00:04:09","Actor":"hughbe","Number":"1294","RawContent":null,"Title":"BorderSidesEditor.EditValue throws InvalidCastException if `value` is not ToolStripStatusLabelBorderSides","State":"closed","Body":"Should handle gracefully\r\n\r\n```cs\r\npublic static IEnumerable<object[]> EditValue_TestData()\r\n{\r\n    yield return new object[] { null };\r\n    yield return new object[] { \"value\" };\r\n    yield return new object[] { ToolStripStatusLabelBorderSides.Top };\r\n    yield return new object[] { new object() };\r\n}\r\n\r\n[Theory]\r\n[MemberData(nameof(EditValue_TestData))]\r\npublic void BorderSidesEditor_EditValue_ValidProvider_ReturnsValue(object value)\r\n{\r\n    var editor = new BorderSidesEditor();\r\n    var mockEditorService = new Mock<IWindowsFormsEditorService>(MockBehavior.Strict);\r\n    var mockServiceProvider = new Mock<IServiceProvider>(MockBehavior.Strict);\r\n    mockServiceProvider\r\n        .Setup(p => p.GetService(typeof(IWindowsFormsEditorService)))\r\n        .Returns(mockEditorService.Object)\r\n        .Verifiable();\r\n    mockEditorService\r\n        .Setup(e => e.DropDownControl(It.IsAny<Control>()))\r\n        .Verifiable();\r\n    Assert.Equal(value, editor.EditValue(null, mockServiceProvider.Object, value));\r\n    mockServiceProvider.Verify(p => p.GetService(typeof(IWindowsFormsEditorService)), Times.Once());\r\n    mockEditorService.Verify(e => e.DropDownControl(It.IsAny<Control>()), Times.Once());\r\n\r\n    // Edit again.\r\n    Assert.Equal(value, editor.EditValue(null, mockServiceProvider.Object, value));\r\n    mockServiceProvider.Verify(p => p.GetService(typeof(IWindowsFormsEditorService)), Times.Exactly(2));\r\n    mockServiceProvider.Verify(p => p.GetService(typeof(IWindowsFormsEditorService)), Times.Exactly(2));\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/1294","RelatedDescription":"Closed issue \"BorderSidesEditor.EditValue throws InvalidCastException if `value` is not ToolStripStatusLabelBorderSides\" (#1294)"},{"Id":"464843857","IsPullRequest":true,"CreatedAt":"2019-07-09T00:04:07","Actor":"hughbe","Number":"1297","RawContent":null,"Title":"Add ShortcutKeysEditor tests and fix some bugs","State":"closed","Body":"Fixes #1296\r\nContributes to #817","Url":"https://github.com/dotnet/winforms/pull/1297","RelatedDescription":"Closed or merged PR \"Add ShortcutKeysEditor tests and fix some bugs\" (#1297)"},{"Id":"464843847","IsPullRequest":false,"CreatedAt":"2019-07-09T00:04:07","Actor":"hughbe","Number":"1296","RawContent":null,"Title":"ShortcutKeysEditor.EditValue throws InvalidCastException if `value` is not a Shortcut","State":"closed","Body":"Should handle this gracefully as if it were null\r\n\r\n```cs\r\npublic static IEnumerable<object[]> EditValue_TestData()\r\n{\r\n    yield return new object[] { null };\r\n    yield return new object[] { \"value\" };\r\n    yield return new object[] { Shortcut.CtrlA };\r\n    yield return new object[] { new object() };\r\n}\r\n\r\n[Theory]\r\n[MemberData(nameof(EditValue_TestData))]\r\npublic void ShortcutKeysEditor_EditValue_ValidProvider_ReturnsValue(object value)\r\n{\r\n    var editor = new ShortcutKeysEditor();\r\n    var mockEditorService = new Mock<IWindowsFormsEditorService>(MockBehavior.Strict);\r\n    var mockServiceProvider = new Mock<IServiceProvider>(MockBehavior.Strict);\r\n    mockServiceProvider\r\n        .Setup(p => p.GetService(typeof(IWindowsFormsEditorService)))\r\n        .Returns(mockEditorService.Object)\r\n        .Verifiable();\r\n    mockEditorService\r\n        .Setup(e => e.DropDownControl(It.IsAny<Control>()))\r\n        .Verifiable();\r\n    Assert.Equal(value, editor.EditValue(null, mockServiceProvider.Object, value));\r\n    mockServiceProvider.Verify(p => p.GetService(typeof(IWindowsFormsEditorService)), Times.Once());\r\n    mockEditorService.Verify(e => e.DropDownControl(It.IsAny<Control>()), Times.Once());\r\n\r\n    // Edit again.\r\n    Assert.Equal(value, editor.EditValue(null, mockServiceProvider.Object, value));\r\n    mockServiceProvider.Verify(p => p.GetService(typeof(IWindowsFormsEditorService)), Times.Exactly(2));\r\n    mockServiceProvider.Verify(p => p.GetService(typeof(IWindowsFormsEditorService)), Times.Exactly(2));\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/1296","RelatedDescription":"Closed issue \"ShortcutKeysEditor.EditValue throws InvalidCastException if `value` is not a Shortcut\" (#1296)"},{"Id":"464843309","IsPullRequest":true,"CreatedAt":"2019-07-09T00:01:44","Actor":"hughbe","Number":"1291","RawContent":null,"Title":"Add ColorEditor tests and fix some bugs","State":"closed","Body":"Fixes #1290\r\nContributes to #817","Url":"https://github.com/dotnet/winforms/pull/1291","RelatedDescription":"Closed or merged PR \"Add ColorEditor tests and fix some bugs\" (#1291)"},{"Id":"464843204","IsPullRequest":false,"CreatedAt":"2019-07-09T00:01:44","Actor":"hughbe","Number":"1290","RawContent":null,"Title":"ColorEditor.EditValue throws InvalidCastException if `value` is not a Color","State":"closed","Body":"Should handle this gracefully as if it were null\r\n\r\n```cs\r\npublic static IEnumerable<object[]> EditValue_TestData()\r\n{\r\n    yield return new object[] { null };\r\n    yield return new object[] { \"value\" };\r\n    yield return new object[] { Color.Empty };\r\n    yield return new object[] { Color.Red };\r\n    yield return new object[] { new object() };\r\n}\r\n\r\n[Theory]\r\n[MemberData(nameof(EditValue_TestData))]\r\npublic void ColorEditor_EditValue_ValidProvider_ReturnsValue(object value)\r\n{\r\n    var editor = new ColorEditor();\r\n    var mockEditorService = new Mock<IWindowsFormsEditorService>(MockBehavior.Strict);\r\n    var mockServiceProvider = new Mock<IServiceProvider>(MockBehavior.Strict);\r\n    mockServiceProvider\r\n        .Setup(p => p.GetService(typeof(IWindowsFormsEditorService)))\r\n        .Returns(mockEditorService.Object)\r\n        .Verifiable();\r\n    mockEditorService\r\n        .Setup(e => e.DropDownControl(It.IsAny<Control>()))\r\n        .Verifiable();\r\n    Assert.Equal(value, editor.EditValue(null, mockServiceProvider.Object, value));\r\n    mockServiceProvider.Verify(p => p.GetService(typeof(IWindowsFormsEditorService)), Times.Once());\r\n    mockEditorService.Verify(e => e.DropDownControl(It.IsAny<Control>()), Times.Once());\r\n\r\n    // Edit again.\r\n    Assert.Equal(value, editor.EditValue(null, mockServiceProvider.Object, value));\r\n    mockServiceProvider.Verify(p => p.GetService(typeof(IWindowsFormsEditorService)), Times.Exactly(2));\r\n    mockServiceProvider.Verify(p => p.GetService(typeof(IWindowsFormsEditorService)), Times.Exactly(2));\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/1290","RelatedDescription":"Closed issue \"ColorEditor.EditValue throws InvalidCastException if `value` is not a Color\" (#1290)"},{"Id":"464842868","IsPullRequest":true,"CreatedAt":"2019-07-09T00:00:27","Actor":"hughbe","Number":"1287","RawContent":null,"Title":"Add ObjectSelectorEditor tests and fix a bug","State":"closed","Body":"Contributes to #817","Url":"https://github.com/dotnet/winforms/pull/1287","RelatedDescription":"Closed or merged PR \"Add ObjectSelectorEditor tests and fix a bug\" (#1287)"},{"Id":"464843408","IsPullRequest":true,"CreatedAt":"2019-07-08T23:48:11","Actor":"hughbe","Number":"1293","RawContent":null,"Title":"Add CursorEditor tests and fix bugs","State":"closed","Body":"Fixes #1292\r\nContributes to #817","Url":"https://github.com/dotnet/winforms/pull/1293","RelatedDescription":"Closed or merged PR \"Add CursorEditor tests and fix bugs\" (#1293)"},{"Id":"464843375","IsPullRequest":false,"CreatedAt":"2019-07-08T23:48:11","Actor":"hughbe","Number":"1292","RawContent":null,"Title":"CursorEditor.EditValue throws InvalidCastException if `value` is not a Cursor","State":"closed","Body":"Should handle this gracefully as if it were a null value\r\n\r\n```cs\r\npublic static IEnumerable<object[]> EditValue_TestData()\r\n{\r\n    yield return new object[] { null };\r\n    yield return new object[] { \"value\" };\r\n    yield return new object[] { Cursors.Default };\r\n    yield return new object[] { new object() };\r\n}\r\n\r\n[Theory]\r\n[MemberData(nameof(EditValue_TestData))]\r\npublic void CursorEditor_EditValue_ValidProvider_ReturnsValue(object value)\r\n{\r\n    var editor = new CursorEditor();\r\n    var mockEditorService = new Mock<IWindowsFormsEditorService>(MockBehavior.Strict);\r\n    var mockServiceProvider = new Mock<IServiceProvider>(MockBehavior.Strict);\r\n    mockServiceProvider\r\n        .Setup(p => p.GetService(typeof(IWindowsFormsEditorService)))\r\n        .Returns(mockEditorService.Object)\r\n        .Verifiable();\r\n    mockEditorService\r\n        .Setup(e => e.DropDownControl(It.IsAny<Control>()))\r\n        .Verifiable();\r\n    Assert.Equal(value, editor.EditValue(null, mockServiceProvider.Object, value));\r\n    mockServiceProvider.Verify(p => p.GetService(typeof(IWindowsFormsEditorService)), Times.Once());\r\n    mockEditorService.Verify(e => e.DropDownControl(It.IsAny<Control>()), Times.Once());\r\n\r\n    // Edit again.\r\n    Assert.Equal(value, editor.EditValue(null, mockServiceProvider.Object, value));\r\n    mockServiceProvider.Verify(p => p.GetService(typeof(IWindowsFormsEditorService)), Times.Exactly(2));\r\n    mockServiceProvider.Verify(p => p.GetService(typeof(IWindowsFormsEditorService)), Times.Exactly(2));\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/1292","RelatedDescription":"Closed issue \"CursorEditor.EditValue throws InvalidCastException if `value` is not a Cursor\" (#1292)"},{"Id":"465448966","IsPullRequest":true,"CreatedAt":"2019-07-08T22:11:37","Actor":"jcagme","Number":"1306","RawContent":null,"Title":"Rename Config to config","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #1304 \r\nhttps://github.com/dotnet/core-eng/issues/6868#issuecomment-509375608\r\n\r\n## Proposed changes\r\n\r\n- Rename \"NuGet.Config\" to \"NuGet.config\"\r\n\r\nWith https://github.com/dotnet/arcade-services/pull/477 we started consuming \"NuGet.config\". Since git is case sensitive we look for this exact name.","Url":"https://github.com/dotnet/winforms/pull/1306","RelatedDescription":"Closed or merged PR \"Rename Config to config\" (#1306)"},{"Id":"465436094","IsPullRequest":false,"CreatedAt":"2019-07-08T22:11:37","Actor":"vatsan-madhavan","Number":"1304","RawContent":null,"Title":"Dependencies are not getting updated","State":"closed","Body":"Dependency updates seem to have stalled on dotnet/winforms. \r\n\r\nThe last update was 14 days ago, approximately. See https://github.com/dotnet/winforms/pulls?q=is%3Apr+is%3Aclosed+author%3Aapp%2Fdotnet-maestro. \r\n\r\nTriggering subscriptions manually doesn't seem to have any effect either. \r\n\r\n/cc @merriemcgaw, @AdamYoblick, @RussKie \r\n/cc @wtgodbe ","Url":"https://github.com/dotnet/winforms/issues/1304","RelatedDescription":"Closed issue \"Dependencies are not getting updated\" (#1304)"},{"Id":"465436497","IsPullRequest":true,"CreatedAt":"2019-07-08T20:06:15","Actor":"vatsan-madhavan","Number":"1305","RawContent":null,"Title":"Update dependenices","State":"open","Body":"Update dependencies manually - temporary workaround for https://github.com/dotnet/winforms/issues/1304\r\n\r\nThis change was generated by running `darc update-dependencies --channel \".Net Core 3 Dev\"` ","Url":"https://github.com/dotnet/winforms/pull/1305","RelatedDescription":"Open PR \"Update dependenices\" (#1305)"},{"Id":"465293094","IsPullRequest":true,"CreatedAt":"2019-07-08T14:32:52","Actor":"hughbe","Number":"1302","RawContent":null,"Title":"Add FlowLayout tests, cleanup FlowLayout classes and fix argument validation","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/pull/1302","RelatedDescription":"Open PR \"Add FlowLayout tests, cleanup FlowLayout classes and fix argument validation\" (#1302)"},{"Id":"465189273","IsPullRequest":true,"CreatedAt":"2019-07-08T10:54:27","Actor":"vladimir-krestov","Number":"1301","RawContent":null,"Title":"Accessibility: Fixing ToolStrip shift-tab navigation","State":"open","Body":"Fixes #1300.","Url":"https://github.com/dotnet/winforms/pull/1301","RelatedDescription":"Open PR \"Accessibility: Fixing ToolStrip shift-tab navigation\" (#1301)"},{"Id":"465187414","IsPullRequest":false,"CreatedAt":"2019-07-08T10:50:08","Actor":"vladimir-krestov","Number":"1300","RawContent":null,"Title":"Accessibility: Incorrect ToolStrip navigation order when tabbing and shift-tabbing","State":"open","Body":"**Repro steps:**\r\n- Create .Net Core 3.0 application\r\n- Add to app some controls and ToolStrip control\r\n- Run and using Tab keyboard to go through all controls forward on the form\r\n- Then using shift-tab to go through all controls backward\r\n\r\n**Actual:**\r\nNavigation order when forward and when backward do not match.\r\n![LTR](https://user-images.githubusercontent.com/49272759/60804315-ebc83680-a185-11e9-95f7-d638ba7cd15a.png)\r\nWhen tabbing order is 1-2-9.\r\nWhen shift-tabbing order is 9-7-1.\r\n(**8** label2 can't have focus)\r\n\r\n**Expected result:**\r\nNavigation order when forward and when backward should match.\r\nWhen tabbing order is 1-2-9.\r\nWhen shift-tabbing order is 9-2-1.\r\nSimilarly for RTL env.","Url":"https://github.com/dotnet/winforms/issues/1300","RelatedDescription":"Open issue \"Accessibility: Incorrect ToolStrip navigation order when tabbing and shift-tabbing\" (#1300)"},{"Id":"465017030","IsPullRequest":true,"CreatedAt":"2019-07-08T01:25:53","Actor":"RussKie","Number":"1299","RawContent":null,"Title":"Fix 1273 port `ImageCollectionEditor`","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\nCloses #1273\r\n\r\n\r\n## Proposed changes\r\n\r\n- Port IntegerCollectionEditor from NET Fx\r\n- Port auxiliary `ImageListImage` and `ImageListImageEditor`\r\n- Fix xml-docs\r\n- Fix names\r\n- Remove unused usings\r\n- Remove `this.`\r\n- Add missing braces\r\n- Use arrow functions, where appropriate\r\n- Inverted `if`s to reduce nesting\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- TODO \r\n","Url":"https://github.com/dotnet/winforms/pull/1299","RelatedDescription":"Open PR \"Fix 1273 port `ImageCollectionEditor`\" (#1299)"},{"Id":"464843081","IsPullRequest":true,"CreatedAt":"2019-07-07T23:35:07","Actor":"hughbe","Number":"1289","RawContent":null,"Title":"Add MultilineStringEditor tests and fix some bugs","State":"closed","Body":"Fixes #1288\r\nContributes to #817","Url":"https://github.com/dotnet/winforms/pull/1289","RelatedDescription":"Closed or merged PR \"Add MultilineStringEditor tests and fix some bugs\" (#1289)"},{"Id":"464843053","IsPullRequest":false,"CreatedAt":"2019-07-07T23:35:07","Actor":"hughbe","Number":"1288","RawContent":null,"Title":"MultilineStringEditor.EditValue throws InvalidCastException if `value` is not a string","State":"closed","Body":"Should handle this gracefully as if it were null\r\n```cs\r\npublic static IEnumerable<object[]> EditValue_TestData()\r\n{\r\n    yield return new object[] { null };\r\n    yield return new object[] { \"value\" };\r\n    yield return new object[] { new object() };\r\n}\r\n\r\n[Theory]\r\n[MemberData(nameof(EditValue_TestData))]\r\npublic void MultilineStringEditor_EditValue_ValidProvider_ReturnsValue(object value)\r\n{\r\n    var editor = new MultilineStringEditor();\r\n    var mockEditorService = new Mock<IWindowsFormsEditorService>(MockBehavior.Strict);\r\n    var mockServiceProvider = new Mock<IServiceProvider>(MockBehavior.Strict);\r\n    mockServiceProvider\r\n        .Setup(p => p.GetService(typeof(IWindowsFormsEditorService)))\r\n        .Returns(mockEditorService.Object)\r\n        .Verifiable();\r\n    mockEditorService\r\n        .Setup(e => e.DropDownControl(It.IsAny<Control>()))\r\n        .Verifiable();\r\n    Assert.Same(string.Empty, editor.EditValue(null, mockServiceProvider.Object, value));\r\n    mockServiceProvider.Verify(p => p.GetService(typeof(IWindowsFormsEditorService)), Times.Once());\r\n    mockEditorService.Verify(e => e.DropDownControl(It.IsAny<Control>()), Times.Once());\r\n\r\n    // Edit again.\r\n    Assert.Same(string.Empty, editor.EditValue(null, mockServiceProvider.Object, value));\r\n    mockServiceProvider.Verify(p => p.GetService(typeof(IWindowsFormsEditorService)), Times.Exactly(2));\r\n    mockServiceProvider.Verify(p => p.GetService(typeof(IWindowsFormsEditorService)), Times.Exactly(2));\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/1288","RelatedDescription":"Closed issue \"MultilineStringEditor.EditValue throws InvalidCastException if `value` is not a string\" (#1288)"},{"Id":"464894069","IsPullRequest":false,"CreatedAt":"2019-07-06T22:04:29","Actor":"paul1956","Number":"1298","RawContent":null,"Title":"New VB default font needs to be highlighted in Read Me/Whats New","State":"open","Body":"* .NET Core Version: 3.0 Preview6\r\n* Have you experienced this same ISSUE with .NET Framework?: No\r\n**Problem description:**\r\nThe default font for VB Forms has changed and is larger causing layouts to look different\r\n**Actual behavior:**\r\nControls are not in the same place between Framework and Core\r\n**Expected behavior:**\r\nThings would look the same, but since that is not happening some customer facing visible document of this change\r\n**Minimal repro:**\r\n![image](https://user-images.githubusercontent.com/12789369/60761496-afb69980-9ffe-11e9-9b41-626e1e162558.png)\r\n","Url":"https://github.com/dotnet/winforms/issues/1298","RelatedDescription":"Open issue \"New VB default font needs to be highlighted in Read Me/Whats New\" (#1298)"},{"Id":"464841735","IsPullRequest":true,"CreatedAt":"2019-07-06T10:39:53","Actor":"hughbe","Number":"1286","RawContent":null,"Title":"Add more Panel/ScrollableControl tests and fix a bug","State":"open","Body":"Contributes to #817 ","Url":"https://github.com/dotnet/winforms/pull/1286","RelatedDescription":"Open PR \"Add more Panel/ScrollableControl tests and fix a bug\" (#1286)"},{"Id":"464654522","IsPullRequest":true,"CreatedAt":"2019-07-05T14:00:21","Actor":"RussKie","Number":"1285","RawContent":null,"Title":"Fix 1274 port `IntegerCollectionEditor`","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\nCloses #1274\r\n\r\n\r\n## Proposed changes\r\n\r\n- Port IntegerCollectionEditor from NET Fx\r\n- Fix xml-docs\r\n- Fix names\r\n- Remove unused usings\r\n- Remove `this.`\r\n- Add missing braces\r\n- Use arrow functions, where appropriate\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- TODO \r\n","Url":"https://github.com/dotnet/winforms/pull/1285","RelatedDescription":"Open PR \"Fix 1274 port `IntegerCollectionEditor`\" (#1285)"},{"Id":"464449514","IsPullRequest":true,"CreatedAt":"2019-07-05T03:50:19","Actor":"RussKie","Number":"1284","RawContent":null,"Title":"Fix 1270 port `StringCollectionEditor`","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nCloses #1270\r\n\r\n\r\n## Proposed changes\r\n\r\n- Port StringCollectionEditor from NET Fx\r\n- Fix xml-docs\r\n- Fix names\r\n- Remove unused usings\r\n- Remove `this.`\r\n- Add missing braces\r\n- Use arrow functions, where appropriate\r\n\r\n\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- TODO","Url":"https://github.com/dotnet/winforms/pull/1284","RelatedDescription":"Open PR \"Fix 1270 port `StringCollectionEditor`\" (#1284)"},{"Id":"464440659","IsPullRequest":false,"CreatedAt":"2019-07-05T02:56:59","Actor":"RussKie","Number":"1283","RawContent":null,"Title":"Port System.Windows.Forms.Design.DataGridColumnCollectionEditor","State":"open","Body":"**Problem description:**\r\n`DataGridColumnCollectionEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149\r\n","Url":"https://github.com/dotnet/winforms/issues/1283","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.DataGridColumnCollectionEditor\" (#1283)"},{"Id":"464440601","IsPullRequest":false,"CreatedAt":"2019-07-05T02:56:40","Actor":"RussKie","Number":"1282","RawContent":null,"Title":"Port System.Windows.Forms.Design.ToolStripCollectionEditor","State":"open","Body":"**Problem description:**\r\n`ToolStripCollectionEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149\r\n","Url":"https://github.com/dotnet/winforms/issues/1282","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.ToolStripCollectionEditor\" (#1282)"},{"Id":"464440531","IsPullRequest":false,"CreatedAt":"2019-07-05T02:56:16","Actor":"RussKie","Number":"1281","RawContent":null,"Title":"Port System.Windows.Forms.Design.TabPageCollectionEditor","State":"open","Body":"**Problem description:**\r\n`TabPageCollectionEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149\r\n","Url":"https://github.com/dotnet/winforms/issues/1281","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.TabPageCollectionEditor\" (#1281)"},{"Id":"464440462","IsPullRequest":false,"CreatedAt":"2019-07-05T02:55:51","Actor":"RussKie","Number":"1280","RawContent":null,"Title":"Port System.Windows.Forms.Design.StyleCollectionEditor","State":"open","Body":"**Problem description:**\r\n`StyleCollectionEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149\r\n","Url":"https://github.com/dotnet/winforms/issues/1280","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.StyleCollectionEditor\" (#1280)"},{"Id":"464440389","IsPullRequest":false,"CreatedAt":"2019-07-05T02:55:29","Actor":"RussKie","Number":"1279","RawContent":null,"Title":"Port System.Windows.Forms.Design.TreeNodeStyleCollectionEditor","State":"open","Body":"**Problem description:**\r\n`TreeNodeStyleCollectionEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149\r\n","Url":"https://github.com/dotnet/winforms/issues/1279","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.TreeNodeStyleCollectionEditor\" (#1279)"},{"Id":"464440337","IsPullRequest":false,"CreatedAt":"2019-07-05T02:55:08","Actor":"RussKie","Number":"1278","RawContent":null,"Title":"Port System.Windows.Forms.Design.TreeNodeCollectionEditor","State":"open","Body":"**Problem description:**\r\n`TreeNodeCollectionEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149\r\n","Url":"https://github.com/dotnet/winforms/issues/1278","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.TreeNodeCollectionEditor\" (#1278)"},{"Id":"464440277","IsPullRequest":false,"CreatedAt":"2019-07-05T02:54:45","Actor":"RussKie","Number":"1277","RawContent":null,"Title":"Port System.Windows.Forms.Design.ListViewSubItemCollectionEditor","State":"open","Body":"**Problem description:**\r\n`ListViewSubItemCollectionEditor` from System.Windows.Forms.Design is missing\r\n\r\nRefer to https://github.com/dotnet/winforms/issues/1115#issuecomment-504798149\r\n","Url":"https://github.com/dotnet/winforms/issues/1277","RelatedDescription":"Open issue \"Port System.Windows.Forms.Design.ListViewSubItemCollectionEditor\" (#1277)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-07-09T05:30:55.0220315Z","RunDurationInMilliseconds":912}