{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin and Azure Office Hours Recap: Mid-2019","PublishedOn":"2019-07-26T16:40:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"That‚Äôs right, I ‚ù§Ô∏èevery single one of you(!) and I want to know more about your stories building mobile apps. Share the stories of your successes, as well as the not-so-successful adventures. Tell us...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-azure-office-hours-recap-mid-2019/","RawContent":null},{"Title":"Introducing AndroidX for Xamarin","PublishedOn":"2019-07-25T19:52:54+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Android Support Library has had a long history of over the last 7 years providing backwards compatibility to Android framework APIs. Over the years, this library has grown in adoption as the...","Href":"https://devblogs.microsoft.com/xamarin/androidx-for-xamarin/","RawContent":null},{"Title":"Faster Startup Times With Startup Tracing On Android","PublishedOn":"2019-07-24T19:44:20+00:00","CommentsCount":13,"FacebookCount":0,"Summary":"One of the biggest pain points we&#8217;ve heard from you is startup times on Android.\nImproving Startup Times\nIf you use AOT today, it improves startup times drastically, but you suffer in APK size...","Href":"https://devblogs.microsoft.com/xamarin/faster-startup-times-with-startup-tracing-on-android/","RawContent":null},{"Title":"Xamarin Podcast: XAML Hot Reload Is Out! üî•üîÑ","PublishedOn":"2019-07-19T18:33:26+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Keeping up with the latest in .NET, C#, Xamarin, and Azure is easier than ever. Co-hosts Matt Soucoup and James Montemagno cover a range of topics relevant to Xamarin developers from designing mobile...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-xaml-hot-reload/","RawContent":null},{"Title":"Recapping Xamarin Developer Summit","PublishedOn":"2019-07-16T17:52:45+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The first-ever Xamarin Developer Summit¬†has¬†come to a close. The Xamarin team had an action-packed two days of announcements, talks, and hanging out with our community in Houston! Here is a recap of...","Href":"https://devblogs.microsoft.com/xamarin/recapping-xamarin-developer-summit/","RawContent":null},{"Title":"Snppts ‚Äì Beautiful UI Snippets for Xamarin.Forms","PublishedOn":"2019-07-15T19:20:23+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Guest Post: Steven Thewissen is a Xamarin developer, Microsoft MVP, and author from the Netherlands with a knack for all things graphical. He co-founded Snppts and also creates/maintains several NuGet...","Href":"https://devblogs.microsoft.com/xamarin/snppts-ui-snippets-xamarin-forms/","RawContent":null},{"Title":"Xamarin.Essentials welcomes tvOS, watchOS, and Tizen","PublishedOn":"2019-07-12T17:33:21+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This week marked the launch of Xamarin.Essentials 1.2 packed full of new enhancements and optimizations. The main highlight is the new file preview features enabling you to send, view, and email files...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-essentials-tvos-watchos-tizen/","RawContent":null},{"Title":"Announcing XAML Hot Reload for Xamarin.Forms","PublishedOn":"2019-07-11T14:45:52+00:00","CommentsCount":31,"FacebookCount":0,"Summary":"Today at Xamarin Developer Summit, we announced XAML Hot Reload for Xamarin.Forms, which enables you to make changes to your XAML UI and see them reflected live, without requiring another build and...","Href":"https://devblogs.microsoft.com/xamarin/xaml-hot-reload/","RawContent":null},{"Title":"Xamarin Developer Summit Live Streams!","PublishedOn":"2019-07-09T17:50:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Developer Summit is right around the corner! The two-day conference starts this Thursday in Houston, Texas. It will be packed with TONS of amazing sessions and workshops for Xamarin...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-developer-summit-live-streams/","RawContent":null},{"Title":"Xamarin.Forms 4.1.0 Stable Now Available","PublishedOn":"2019-07-08T16:34:41+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today we are happy to announce Xamarin.Forms 4.1 availability on NuGet. Our 3.0.0 series of releases focused heavily on growing Xamarin.Forms by filling in the gaps. We learned that this should be...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-forms-4-1-0-stable-now-available/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"10115878195","Type":"PullRequestEvent","CreatedAt":"2019-07-30T23:23:04","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3417","RelatedDescription":"Opened pull request \"[docs] Prepare BuildProcess for sync to docs.microsoft.com\" (#3417) at xamarin/xamarin-android","RelatedBody":"Bring in the `**NOTE:**` to `[!NOTE]` syntax change from docs.microsoft.com:\r\n\r\n    https://github.com/MicrosoftDocs/xamarin-docs/commit/ccb1a1252ca5a70d82f2e75c6d41f6d0eab97572\r\n\r\nProofread the new BuildProcess items.\r\n\r\nMove an item to keep the list in alphabetical order."},{"Id":"10115274235","Type":"PullRequestEvent","CreatedAt":"2019-07-30T21:19:24","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3416","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] _LinkAssemblies ordering for code analysis\" (#3416) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/3322\r\n\r\nEnabling code analysis via `<RunCodeAnalysis>true</RunCodeAnalysis>`\r\nresults in a build error for `Release` configurations:\r\n\r\n    error MSB4018: The \"LinkAssemblies\" task failed unexpectedly.\r\n    error MSB4018: System.IO.FileNotFoundException: Could not load assembly 'DroidButton, Version=0.0.0.0, Culture=neutral, PublicKeyToken='. Perhaps it doesn't exist in the Mono for Android profile?\r\n    error MSB4018: File name: 'DroidButton.dll'\r\n    error MSB4018:   at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve (Mono.Cecil.AssemblyNameReference reference, Mono.Cecil.ReaderParameters parameters) [0x00125] in <bf8d1485bd8b4cc8b07ee73dc73c2c6c>:0\r\n    error MSB4018:   at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve (System.String fullName, Mono.Cecil.ReaderParameters parameters) [0x00007] in <bf8d1485bd8b4cc8b07ee73dc73c2c6c>:0\r\n    error MSB4018:   at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve (System.String fullName) [0x00000] in <bf8d1485bd8b4cc8b07ee73dc73c2c6c>:0\r\n    error MSB4018:   at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.GetAssembly (System.String fileName) [0x00007] in <bf8d1485bd8b4cc8b07ee73dc73c2c6c>:0\r\n    error MSB4018:   at Xamarin.Android.Tasks.LinkAssemblies.Execute (Java.Interop.Tools.Cecil.DirectoryAssemblyResolver res) [0x0004d] in <d8e2132c4a15403dbf186d3f29b4d4ff>:0\r\n    error MSB4018:   at Xamarin.Android.Tasks.LinkAssemblies.Execute () [0x0001b] in <d8e2132c4a15403dbf186d3f29b4d4ff>:0\r\n    error MSB4018:   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <9793e3774951417ca4f48a7c60193b35>:0\r\n    error MSB4018:   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x002a9] in <9793e3774951417ca4f48a7c60193b35>:0\r\n\r\nThe `<LinkAssemblies/>` failure is due to the `linksrc` directory\r\nbeing completely empty? It appears that `_PrepareAssemblies` and\r\n`_CopyIntermediateAssemblies` was not run at all?\r\n\r\nLooking at the value of `$(_GenerateJavaStubsDependsOnTargets)` the\r\nordering did not make sense:\r\n\r\n    <_GenerateJavaStubsDependsOnTargets>\r\n      _SetLatestTargetFrameworkVersion;\r\n      _PrepareNativeAssemblySources;\r\n      _LinkAssemblies;\r\n      _PrepareAssemblies;\r\n      $(_AfterPrepareAssemblies);\r\n    </_GenerateJavaStubsDependsOnTargets>\r\n\r\n`_LinkAssemblies` should not run *before* `_PrepareAssemblies`, since\r\n`_PrepareAssemblies` lists other targets such as\r\n`_CopyIntermediateAssemblies` that should run first. In a38cf5bb, we\r\nadded extension points for AndroidX, but I think this value was listed\r\nby mistake. We should be able to just remove `_LinkAssemblies` here.\r\n\r\nI am not sure how things were working with how this is... There must be\r\na subtle MSBuild ordering bug where `_LinkAssemblies` is running out\r\nof order, but only when code analysis is used."},{"Id":"10114920308","Type":"PullRequestEvent","CreatedAt":"2019-07-30T20:24:21","Actor":"gugavaro","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3415","RelatedDescription":"Opened pull request \"[Do-Not-Review] Changing metadata to not remove AudioRecord interfaces\" (#3415) at xamarin/xamarin-android","RelatedBody":"Changing metadata to not remove AudioRecord interfaces"},{"Id":"10114541258","Type":"PullRequestEvent","CreatedAt":"2019-07-30T19:26:52","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3337","RelatedDescription":"Merged pull request \"Remove __XA_DSO_IN_APK in favor of runtime checks\" (#3337) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/3298\r\nContext: https://github.com/xamarin/xamarin-android/issues/3298#issuecomment-509022428\r\n\r\nWe have discovered through our current preview of Android App Bundles\r\nin 16.2: the state of `android:extractNativeLibs` with app bundles can\r\nchange on a per-device basis.\r\n\r\nThe comment from `bundletool`'s source code:\r\n\r\n    // If persistent app is not installable on external storage, only the split APKs targeting\r\n    // devices above Android M should be uncompressed. If the persistent app is installable on\r\n    // external storage only split APKs targeting device above Android P should be uncompressed (as\r\n    // uncompressed native libraries crashes with ASEC external storage and support for ASEC\r\n    // external storage is removed in Android P). Instant apps always support uncompressed native\r\n    // libraries (even on Android L), because they are not always executed by the Android platform.\r\n    boolean shouldCompress =\r\n\r\nhttps://github.com/google/bundletool/blob/5ac94cb61e949f135c50f6ce52bbb5f00e8e959f/src/main/java/com/android/tools/build/bundletool/splitters/NativeLibrariesCompressionSplitter.java#L75-L86\r\n\r\nThat means we cannot decide the value of `__XA_DSO_IN_APK` at build\r\ntime, or know what the appropriate value should be!\r\n\r\nInstead, we can check the value of `ApplicationInfo.flags` at runtime\r\nfor `FLAG_EXTRACT_NATIVE_LIBS`:\r\n\r\nhttps://developer.android.com/reference/kotlin/android/content/pm/ApplicationInfo#flag_extract_native_libs\r\n\r\nWe will have to check this value on the Java side, and pass it through\r\n`Runtime.init`.\r\n\r\nThis means we can kill the `__XA_DSO_IN_APK` environment variable\r\ncompletely.\r\n\r\nOther changes:\r\n\r\n* I added a new `Runtime.initInternal` method so we can adjust\r\n  parameters without breaking the designer. `Runtime.init` can remain\r\n  with its signature unchanged.\r\n* I adjusted all tests around embedded dsos appropriately."},{"Id":"10114541238","Type":"IssuesEvent","CreatedAt":"2019-07-30T19:26:52","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3298","RelatedDescription":"Closed issue \"Android App Bundles Crashing on Startup\" (#3298) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\nBuild a project with the following configuration\r\n\r\n```\r\n<PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'PROD|AnyCPU' \">\r\n    <DebugType>\r\n    </DebugType>\r\n    <Optimize>true</Optimize>\r\n    <OutputPath>bin\\PROD</OutputPath>\r\n    <DefineConstants>PROD</DefineConstants>\r\n    <WarningLevel>4</WarningLevel>\r\n    <AndroidLinkMode>Full</AndroidLinkMode>\r\n    <JavaMaximumHeapSize>\r\n    </JavaMaximumHeapSize>\r\n    <EmbedAssembliesIntoApk>true</EmbedAssembliesIntoApk>\r\n    <AndroidUseSharedRuntime>false</AndroidUseSharedRuntime>\r\n    <AndroidDexTool>d8</AndroidDexTool>\r\n    <BundleAssemblies>false</BundleAssemblies>\r\n\t<AndroidLinkTool>r8</AndroidLinkTool>\r\n    <AndroidAotAdditionalArguments>no-write-symbols,nodebug</AndroidAotAdditionalArguments>\r\n    <AndroidHttpClientHandlerType>System.Net.Http.HttpClientHandler</AndroidHttpClientHandlerType>\r\n    <AotAssemblies>true</AotAssemblies>\r\n    <EnableLLVM>true</EnableLLVM>\r\n    <AndroidUseAapt2>true</AndroidUseAapt2>\r\n    <AndroidPackageFormat>aab</AndroidPackageFormat>\r\n    <AndroidSupportedAbis>arm64-v8a;armeabi-v7a</AndroidSupportedAbis>\r\n    <AndroidEnableProfiledAot>false</AndroidEnableProfiledAot>\r\n  </PropertyGroup>\r\n```\r\n\r\nUsed MSBuild to build the project as mentioned in #2727 \r\n\r\nOpened app in One Plus One, the app crash after Splash screen\r\nOpened app in One Plus Six, the app works fine\r\nCrashed in Galaxy Prime, Lenovo\r\n\r\nWhen I tried adding x86 to the SupportedAbis, the behaviour was different, the app was stuck at splash screen.\r\n\r\nApk Build works fine in every phone.\r\n\r\n### Expected Behavior\r\n\r\nShould Open App in every phone without crash\r\n\r\n### Actual Behavior\r\n\r\nApp crashes during startup in most of the phones.\r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Community 2019 Preview\r\nVersion 16.2.0 Preview 3.0\r\nVisualStudio.16.Preview/16.2.0-pre.3.0+29021.104\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nAzure App Service Tools v3.0.0   16.2.226.19058\r\nAzure App Service Tools v3.0.0\r\n\r\nC# Tools   3.2.0-beta3-19312-05+5905d757a89126ebbcdb383b1a10cadda8c6fdc3\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.2.0 (d16-2@8b56e20)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nIntelliCode Extension   1.0\r\nIntelliCode Visual Studio Extension Detailed Info\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMono Debugging for Visual Studio   16.2.3 (373927b)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   5.2.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit https://docs.nuget.org/\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nVisual Basic Tools   3.2.0-beta3-19312-05+5905d757a89126ebbcdb383b1a10cadda8c6fdc3\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.4 for F# 4.6   16.2.0-beta.19306.3+3de631a4ba0f54953bad33661008d39fb6df7669\r\nMicrosoft Visual F# Tools 10.4 for F# 4.6\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   16.2.0.81 (d16-2@df3a2fccb)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   16.2.0.289 (remotes/origin/d16-2@495a9f28a)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   16.3.113 (866233a)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.4.0.34 (d16-2/7cce305)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n    Mono: mono/mono/2019-02@c6edaa62f94\r\n    Java.Interop: xamarin/java.interop/d16-2@b2b2610\r\n    LibZipSharp: grendello/LibZipSharp/d16-2@caa0c74\r\n    LibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\n    ProGuard: xamarin/proguard/master@905836d\r\n    SQLite: xamarin/sqlite/3.27.1@8212a2d\r\n    Xamarin.Android Tools: xamarin/xamarin-android-tools/master@4f717b6\r\n\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.14.0.93 (55ad141)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log File\r\nhttps://pastebin.com/rSLCvWkN\r\n\r\nI could share the source code / apk / app bundles privately to the Xamarin Android team"},{"Id":"10114426550","Type":"PullRequestEvent","CreatedAt":"2019-07-30T19:09:13","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3379","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] fix the NuGetizer 3000\" (#3379) at xamarin/xamarin-android","RelatedBody":"Fixes: http://work.azdo.io/917139\r\nContext: https://github.com/NuGet/Home/wiki/NuGetizer-Core-Features\r\n\r\nThe NuGetizer 3000, was failing on Xamarin.Android 9.4 with:\r\n\r\n    The \"FilterAssemblies\" task was not given a value for the required parameter \"DesignTimeBuild\".\r\n\r\nThis tool runs a `GetPackageContents` MSBuild target that is defined\r\nhere:\r\n\r\nhttps://github.com/NuGet/NuGet.Build.Packaging/blob/dev/src/Build/NuGet.Build.Packaging.Tasks/NuGet.Build.Packaging.targets#L201\r\n\r\nSince this isn't a `Build` or a `Compile`, neither of these targets\r\nwill run:\r\n\r\n* `_SetupDesignTimeBuildForBuild`\r\n* `_SetupDesignTimeBuildForCompile`\r\n\r\nI don't think we can make the `_AddAndroidCustomMetaData` MSBuild\r\ntarget (that runs `<FilterAssemblies/>`) depend on either of these.\r\n\r\nThe simple fix is to just remove `[Required]` from the\r\n`DesignTimeBuild` property, as it will be fine for it to default to\r\n`false`.\r\n\r\n/cc @mrward @kzu "},{"Id":"10114413479","Type":"IssuesEvent","CreatedAt":"2019-07-30T19:07:14","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3403","RelatedDescription":"Closed issue \"InputMethodManager.IsAcceptingText erroneously reports true\" (#3403) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n```\r\n    public class KeyboardNotificationProvider_Droid : IKeyboardNotificationProvider\r\n    {\r\n        private KeyboardListner _keyboardListner;\r\n\r\n        private static ViewTreeObserver CurrentViewTreeObserver => ActivityProvider.RootContentView.ViewTreeObserver;\r\n\r\n        public void StartNotifying()\r\n        {\r\n            _keyboardListner = _keyboardListner ?? new KeyboardListner();\r\n            CurrentViewTreeObserver.AddOnGlobalLayoutListener(_keyboardListner);\r\n        }\r\n\r\n        public void StopNotifying()\r\n        {\r\n            CurrentViewTreeObserver.RemoveOnGlobalLayoutListener(_keyboardListner);\r\n        }\r\n\r\n        [Register(\"mymd.mobile.droid.services.KeyboardListner\")]\r\n        public class KeyboardListner : Java.Lang.Object, ViewTreeObserver.IOnGlobalLayoutListener\r\n        {\r\n            private const float KeyboardDisplayedToHiddenRatio = 0.15f;\r\n\r\n            private double _keyboardHeight;\r\n\r\n            private static InputMethodManager _inputManager;\r\n\r\n            public KeyboardListner()\r\n            {\r\n                _inputManager = GetInputManager();\r\n            }\r\n\r\n            public KeyboardListner(IntPtr handle, JniHandleOwnership transfer)\r\n                : base(handle, transfer)\r\n            {\r\n            }\r\n\r\n            public void OnGlobalLayout()\r\n            {\r\n                //if (Android.OS.Build.VERSION.SdkInt != Android.OS.BuildVersionCodes.P)\r\n                //{\r\n                    TryCalculateKeyboardHeight();\r\n                    NotifyOnKeyboardToggled();\r\n                //}\r\n            }\r\n\r\n            private void TryCalculateKeyboardHeight()\r\n            {\r\n                var contentView = ActivityProvider.RootContentView;\r\n\r\n                if (contentView == null)\r\n                    return;\r\n\r\n                var windowVisibleDisplayFrame = new Rect();\r\n                contentView.GetWindowVisibleDisplayFrame(windowVisibleDisplayFrame);\r\n\r\n                var visibleScreenHeight = contentView.RootView.Height;\r\n                var potentialKeyboardHeight = visibleScreenHeight - windowVisibleDisplayFrame.Bottom;\r\n\r\n                if (potentialKeyboardHeight > visibleScreenHeight * KeyboardDisplayedToHiddenRatio)\r\n                    _keyboardHeight = Math.Ceiling(potentialKeyboardHeight.ToFormsScreenValue());\r\n            }\r\n\r\n            private void NotifyOnKeyboardToggled()\r\n            {                \r\n                if (_inputManager.Handle == IntPtr.Zero)\r\n                    _inputManager = GetInputManager();\r\n\r\n                if (_inputManager.IsAcceptingText && _keyboardHeight > 0)\r\n                {\r\n                    KeyboardToggledMessage msg = new KeyboardToggledMessage(this, true, _keyboardHeight);\r\n                    MessagingCenter.Send(\"Keyboard\", \"KeyboardChanged\", msg);\r\n                }\r\n                else\r\n                {\r\n                    KeyboardToggledMessage msg = new KeyboardToggledMessage(this, false, 0d);\r\n                    MessagingCenter.Send(\"Keyboard\", \"KeyboardChanged\", msg);\r\n                }\r\n            }\r\n\r\n            private static InputMethodManager GetInputManager()\r\n                => (InputMethodManager) ActivityProvider.CurrentActivity.GetSystemService(Context.InputMethodService);\r\n        }\r\n    }\r\n```\r\n\r\n### Expected Behavior\r\n\r\nWhen the keyboard is dismissed, I would expect IsAcceptingText to report back false and for the keyboard height to report back 0.\r\n\r\n### Actual Behavior\r\n\r\nWhen the keyboard is dismissed it reports back IsAcceptingText as true and the same keyboard height as when the keyboard was visible.\r\n\r\n### Version Information\r\n\r\nOnly a problem with Android Pie.\r\n\r\n### Log File\r\n\r\n\r\n\r\nI will work on a full reproduction project for this later today. For now just wanted to get it up there for people to think about."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"10117047363","Type":"IssuesEvent","CreatedAt":"2019-07-31T04:48:37","Actor":"BalasubramaniSundaram","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/7026","RelatedDescription":"Opened issue \"[Bug]How to get the path of the image from stream in Xamarin.Forms\" (#7026) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\nI'm covert the image as stream and set to the Xamarin.Forms.Image.Source, In button click, am trying to access the same image, but in code behind am getting the image as StreamImagesSource from that I can't able to access to get the stream.\r\n\r\nAssembly _assembly = this.GetType().Assembly;\r\nStream stream = _assembly.GetManifestResourceStream(\"DataGrithWithImagePdfExport.Resources.Jk.png\");\r\nImageSource source = ImageSource.FromStream(() => stream);\r\n\r\n///Added the image to the ImageSource property in Model\r\nPersons.Add(new Person() { Name = \"John Smith\", Photo = source });\r\nPlease helps me to overcome this issue. \r\nThanks.\r\n"},{"Id":"10115851802","Type":"IssuesEvent","CreatedAt":"2019-07-30T23:16:08","Actor":"Eilon","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/7025","RelatedDescription":"Opened issue \"[Bug] Setting ColumnDefinition.Width on Grid causes row *height* to change\" (#7025) at xamarin/Xamarin.Forms","RelatedBody":"# Description\r\n\r\nI added an explicit `Width` to my Grid's `ColumnDefinition` items and it affected the *height* of the rows - it made them super short and not large enough for their contents.\r\n\r\nI found these similar issues but they don't sound the exact same (or don't have enough info):\r\n* #2137 GridCalc is calculating incorrect height on items with column spanning\r\n* #6193 [Bug] Grid with ColumnDefinitions with Unexpected Behavior\r\n\r\n### Steps to Reproduce\r\n\r\n1. My XAML first looked like this:\r\n```xml\r\n        <Grid Padding=\"3\" BackgroundColor=\"AliceBlue\">\r\n            <Grid.RowDefinitions>\r\n                <RowDefinition></RowDefinition>\r\n                <RowDefinition></RowDefinition>\r\n            </Grid.RowDefinitions>\r\n            <Grid.ColumnDefinitions>\r\n                <ColumnDefinition></ColumnDefinition>\r\n                <ColumnDefinition></ColumnDefinition>\r\n                <ColumnDefinition></ColumnDefinition>\r\n            </Grid.ColumnDefinitions>\r\n\r\n            <Label Grid.Row=\"0\" Grid.Column=\"0\" BackgroundColor=\"Purple\" TextColor=\"White\" Text=\"Items in source: \"></Label>\r\n            <Label Grid.Row=\"0\" Grid.Column=\"1\" BackgroundColor=\"Purple\" TextColor=\"White\" Text=\"{Binding ItemCountInSource}\"></Label>\r\n\r\n            <Label Grid.Row=\"1\" Grid.Column=\"0\" BackgroundColor=\"Purple\" TextColor=\"White\" Text=\"Items in view: \"></Label>\r\n            <Label Grid.Row=\"1\" Grid.Column=\"1\" BackgroundColor=\"Purple\" TextColor=\"White\" Text=\"{Binding ItemCountInView}\"></Label>\r\n\r\n            <ActivityIndicator Grid.Row=\"0\" Grid.Column=\"2\" Grid.RowSpan=\"2\" Color=\"Gray\" IsRunning=\"{Binding IsBusy}\"></ActivityIndicator>\r\n        </Grid>\r\n```\r\n1. And rendered like this, with nice, proper-height rows:\r\n![image](https://user-images.githubusercontent.com/202643/62171440-cee5d580-b2e3-11e9-9db1-841169ec9c7e.png)\r\n1. Then I added some `Width` values:\r\n```xml\r\n        <Grid Padding=\"3\" BackgroundColor=\"AliceBlue\">\r\n            <Grid.RowDefinitions>\r\n                <RowDefinition></RowDefinition>\r\n                <RowDefinition></RowDefinition>\r\n            </Grid.RowDefinitions>\r\n            <Grid.ColumnDefinitions>\r\n                <ColumnDefinition Width=\"3*\"></ColumnDefinition>\r\n                <ColumnDefinition Width=\"1*\"></ColumnDefinition>\r\n                <ColumnDefinition></ColumnDefinition>\r\n            </Grid.ColumnDefinitions>\r\n\r\n            <Label Grid.Row=\"0\" Grid.Column=\"0\" BackgroundColor=\"Purple\" TextColor=\"White\" Text=\"Items in source: \"></Label>\r\n            <Label Grid.Row=\"0\" Grid.Column=\"1\" BackgroundColor=\"Purple\" TextColor=\"White\" Text=\"{Binding ItemCountInSource}\"></Label>\r\n\r\n            <Label Grid.Row=\"1\" Grid.Column=\"0\" BackgroundColor=\"Purple\" TextColor=\"White\" Text=\"Items in view: \"></Label>\r\n            <Label Grid.Row=\"1\" Grid.Column=\"1\" BackgroundColor=\"Purple\" TextColor=\"White\" Text=\"{Binding ItemCountInView}\"></Label>\r\n\r\n            <ActivityIndicator Grid.Row=\"0\" Grid.Column=\"2\" Grid.RowSpan=\"2\" Color=\"Gray\" IsRunning=\"{Binding IsBusy}\"></ActivityIndicator>\r\n        </Grid>\r\n``` \r\n1. And it rendered like this, with squished rows:\r\n![image](https://user-images.githubusercontent.com/202643/62171427-c7263100-b2e3-11e9-9406-a04a28ef3f7a.png)\r\n\r\nI expected it to affect only the *width* of the columns and not the heights at all.\r\n\r\nI could only make it have a decent row height by setting explicit (not `*` relative) values:\r\n\r\n```xml\r\n                <RowDefinition Height=\"21\"></RowDefinition>\r\n                <RowDefinition Height=\"21\"></RowDefinition>\r\n```\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n  * Repros with latest public RTM on NuGet.org:\r\n```xml\r\n    <PackageReference Include=\"Xamarin.Forms\" Version=\"4.1.0.618606\" />  \r\n    <PackageReference Include=\"Xamarin.Essentials\" Version=\"1.2.0\" />\r\n```\r\n  * And also repros with latest public preview on NuGet.org:\r\n```xml\r\n    <PackageReference Include=\"Xamarin.Forms\" Version=\"4.2.0.618605-pre2\" />  \r\n    <PackageReference Include=\"Xamarin.Essentials\" Version=\"1.3.0-pre\" />\r\n```\r\n- Last known good version: Unknown\r\n- IDE: VS 2019 Preview\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: x86 Oreo Emulator on Win10\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"10115173776","Type":"IssuesEvent","CreatedAt":"2019-07-30T21:03:02","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6920","RelatedDescription":"Closed issue \"[Bug] NSInternalInconsistencyException exception on iOS with CollectionView\" (#6920) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI have a Xamarin.Forms project that has a CollectionView that is bound to an ObservableCollection. If I call Clear() on the ObservableCollection and then call Add() to add an item I get the exception.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open the attached sample code.\r\n2. Put a break point on line 54 of MainPage.xaml.cs\r\n3. Run the app on a simulator.\r\n4. Click the button that says \"Click to Generate Error\" and you'll hit the breakpoint.\r\n\r\n### Expected Behavior\r\nItem should be added.\r\n\r\n### Actual Behavior\r\nException gets thrown. I was able to work around this by calling RemoveAt(0) in a while loop until the list is empty instead of using Clear() so no rush for me just wanted you guys to know about the bug.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms 4.1.0.581479\r\n- IDE: Visual Studio 2019 Enterprise\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  12.2 and I'm guessing others, should apply to all\r\n\r\n### Exception\r\nFoundation.MonoTouchException: Objective-C exception thrown.  Name: NSInternalInconsistencyException Reason: Invalid update: invalid number of items in section 0.  The number of items contained in an existing section after the update (1) must be equal to the number of items contained in that section before the update (1), plus or minus the number of items inserted or deleted from that section (1 inserted, 0 deleted) and plus or minus the number of items moved into or out of that section (0 moved in, 0 moved out).\r\nNative stack trace:\r\n\t0   CoreFoundation                      0x000000010ffb66fb __exceptionPreprocess + 331\r\n\t1   libobjc.A.dylib                     0x0000000110c3bac5 objc_exception_throw + 48\r\n\t2   CoreFoundation                      0x000000010ffb6482 +[NSException raise:format:arguments:] + 98\r\n\t3   Foundation                          0x000000010bf13927 -[NSAssertionHandler handleFailureInMethod:object:file:lineNumber:description:] + 194\r\n\t4   UIKitCore                           0x0000000119775479 -[UICollectionView _endItemAnimationsWithInvalidationContext:tentativelyForReordering:animator:] + 16127\r\n\t5   UIKitCore                           0x0000000119771239 -[UICollectionView _updateRowsAtIndexPaths:updateAction:updates:] + 519\r\n\t6   UIKitCore                           0x00000001197712c4 -[UICollectionView insertItemsAtIndexPaths:] + 64\r\n\t7   CollectionsBugSample.iOS            0x0000000102d20999 xamarin_dyn_objc_msgSend + 217\r\n\t8   ???                                 0x00000001353135d7 0x0 + 5187384791\r\n\t9   ???                                 0x00000001352fd0d4 0x0 + 5187293396\r\n\t10  ???                                 0x00000001359a7baf 0x0 + 5194283951\r\n\t11  ???                                 0x0000000133dee5be 0x0 + 5165213118\r\n\t12  CollectionsBugSample.iOS            0x0000000102b028a1 mono_jit_runtime_invoke + 1585\r\n\t13  CollectionsBugSample.iOS            0x0000000102c139f4 mono_runtime_try_invoke + 148\r\n\t14  CollectionsBugSample.iOS            0x0000000102c156af mono_runtime_invoke + 95\r\n\t15  CollectionsBugSample.iOS            0x00000001029e7058 _ZL31native_to_managed_trampoline_20P11objc_objectP13objc_selectorPP11_MonoMethodj + 248\r\n\t16  CollectionsBugSample.iOS            0x00000001029eb654 -[__MonoMac_NSAsyncActionDispatcher xamarinApplySelector] + 52\r\n\t17  Foundation                          0x000000010bfa5878 __NSThreadPerformPerform + 331\r\n\t18  CoreFoundation                      0x000000010ff1dbe1 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17\r\n\t19  CoreFoundation                      0x000000010ff1d463 __CFRunLoopDoSources0 + 243\r\n\t20  CoreFoundation                      0x000000010ff17b1f __CFRunLoopRun + 1231\r\n\t21  CoreFoundation                      0x000000010ff17302 CFRunLoopRunSpecific + 626\r\n\t22  GraphicsServices                    0x0000000112b092fe GSEventRunModal + 65\r\n\t23  UIKitCore                           0x0000000119ee2ba2 UIApplicationMain + 140\r\n\t24  ???                                 0x0000000135029052 0x0 + 5184327762\r\n\t25  ???                                 0x0000000135028de3 0x0 + 5184327139\r\n\t26  ???                                 0x00000001341191a3 0x0 + 5168533923\r\n\t27  CollectionsBugSample.iOS            0x0000000102b028a1 mono_jit_runtime_invoke + 1585\r\n\t28  CollectionsBugSample.iOS            0x0000000102c12058 mono_runtime_invoke_checked + 136\r\n\t29  CollectionsBugSample.iOS            0x0000000102c176dd mono_runtime_exec_main_checked + 109\r\n\t30  CollectionsBugSample.iOS            0x0000000102a6dbf7 mono_jit_exec + 311\r\n\t31  CollectionsBugSample.iOS            0x0000000102d1e864 xamarin_main + 2708\r\n\t32  CollectionsBugSample.iOS            0x0000000102a496f2 main + 82\r\n\t33  libdyld.dylib                       0x0000000112152541 start + 1\r\n\r\n  at ObjCRuntime.Runtime.ThrowNSException (System.IntPtr ns_exception) [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.10.0.157/src/Xamarin.iOS/ObjCRuntime/Runtime.cs:406 \r\n  at ObjCRuntime.Runtime.throw_ns_exception (System.IntPtr exc) [0x00000] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/runtime/Delegates.generated.cs:128 \r\n  at (wrapper native-to-managed) ObjCRuntime.Runtime.throw_ns_exception(intptr)\r\n  at (wrapper managed-to-native) ObjCRuntime.Messaging.void_objc_msgSend_IntPtr(intptr,intptr,intptr)\r\n  at UIKit.UICollectionView.InsertItems (Foundation.NSIndexPath[] indexPaths) [0x00022] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.10.0.157/src/Xamarin.iOS/UIKit/UICollectionView.g.cs:471 \r\n  at Xamarin.Forms.Platform.iOS.ObservableItemsSource.Add (System.Collections.Specialized.NotifyCollectionChangedEventArgs args) [0x00035] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\CollectionView\\ObservableItemsSource.cs:124 \r\n  at Xamarin.Forms.Platform.iOS.ObservableItemsSource.CollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs args) [0x00023] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\CollectionView\\ObservableItemsSource.cs:50 \r\n  at System.Collections.ObjectModel.ObservableCollection`1[T].OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x00018] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.10.0.157/src/Xamarin.iOS/external/corefx/src/System.ObjectModel/src/System/Collections/ObjectModel/ObservableCollection.cs:263 \r\n  at System.Collections.ObjectModel.ObservableCollection`1[T].OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedAction action, System.Object item, System.Int32 index) [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.10.0.157/src/Xamarin.iOS/external/corefx/src/System.ObjectModel/src/System/Collections/ObjectModel/ObservableCollection.cs:338 \r\n  at System.Collections.ObjectModel.ObservableCollection`1[T].InsertItem (System.Int32 index, T item) [0x0001a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.10.0.157/src/Xamarin.iOS/external/corefx/src/System.ObjectModel/src/System/Collections/ObjectModel/ObservableCollection.cs:196 \r\n  at System.Collections.ObjectModel.Collection`1[T].Add (T item) [0x00020] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.10.0.157/src/Xamarin.iOS/external/corefx/src/Common/src/CoreLib/System/Collections/ObjectModel/Collection.cs:73 \r\n  at CollectionsBugSample.MainPage.<AddButton_Clicked>b__3_1 () [0x00013] in C:\\Users\\Jim\\Desktop\\CollectionsBugSample\\CollectionsBugSample\\CollectionsBugSample\\MainPage.xaml.cs:50 \r\n--- End of stack trace from previous location where exception was thrown ---\r\n\r\n  at (wrapper managed-to-native) ObjCRuntime.Messaging.void_objc_msgSend_IntPtr(intptr,intptr,intptr)\r\n  at UIKit.UICollectionView.InsertItems (Foundation.NSIndexPath[] indexPaths) [0x00022] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.10.0.157/src/Xamarin.iOS/UIKit/UICollectionView.g.cs:471 \r\n  at Xamarin.Forms.Platform.iOS.ObservableItemsSource.Add (System.Collections.Specialized.NotifyCollectionChangedEventArgs args) [0x00035] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\CollectionView\\ObservableItemsSource.cs:124 \r\n  at Xamarin.Forms.Platform.iOS.ObservableItemsSource.CollectionChanged (System.Object sender, System.Collections.Specialized.NotifyCollectionChangedEventArgs args) [0x00023] in D:\\a\\1\\s\\Xamarin.Forms.Platform.iOS\\CollectionView\\ObservableItemsSource.cs:50 \r\n  at System.Collections.ObjectModel.ObservableCollection`1[T].OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e) [0x00018] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.10.0.157/src/Xamarin.iOS/external/corefx/src/System.ObjectModel/src/System/Collections/ObjectModel/ObservableCollection.cs:263 \r\n  at System.Collections.ObjectModel.ObservableCollection`1[T].OnCollectionChanged (System.Collections.Specialized.NotifyCollectionChangedAction action, System.Object item, System.Int32 index) [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.10.0.157/src/Xamarin.iOS/external/corefx/src/System.ObjectModel/src/System/Collections/ObjectModel/ObservableCollection.cs:338 \r\n  at System.Collections.ObjectModel.ObservableCollection`1[T].InsertItem (System.Int32 index, T item) [0x0001a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.10.0.157/src/Xamarin.iOS/external/corefx/src/System.ObjectModel/src/System/Collections/ObjectModel/ObservableCollection.cs:196 \r\n  at System.Collections.ObjectModel.Collection`1[T].Add (T item) [0x00020] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.10.0.157/src/Xamarin.iOS/external/corefx/src/Common/src/CoreLib/System/Collections/ObjectModel/Collection.cs:73 \r\n  at CollectionsBugSample.MainPage.<AddButton_Clicked>b__3_1 () [0x00013] in C:\\Users\\Jim\\Desktop\\CollectionsBugSample\\CollectionsBugSample\\CollectionsBugSample\\MainPage.xaml.cs:50 \t0   CoreFoundation                      0x000000010ffb66fb __exceptionPreprocess + 331\r\n\t1   libobjc.A.dylib                     0x0000000110c3bac5 objc_exception_throw + 48\r\n\t2   CoreFoundation                      0x000000010ffb6482 +[NSException raise:format:arguments:] + 98\r\n\t3   Foundation                          0x000000010bf13927 -[NSAssertionHandler handleFailureInMethod:object:file:lineNumber:description:] + 194\r\n\t4   UIKitCore                           0x0000000119775479 -[UICollectionView _endItemAnimationsWithInvalidationContext:tentativelyForReordering:animator:] + 16127\r\n\t5   UIKitCore                           0x0000000119771239 -[UICollectionView _updateRowsAtIndexPaths:updateAction:updates:] + 519\r\n\t6   UIKitCore                           0x00000001197712c4 -[UICollectionView insertItemsAtIndexPaths:] + 64\r\n\t7   CollectionsBugSample.iOS            0x0000000102d20999 xamarin_dyn_objc_msgSend + 217\r\n\t8   ???                                 0x00000001353135d7 0x0 + 5187384791\r\n\t9   ???                                 0x00000001352fd0d4 0x0 + 5187293396\r\n\t10  ???                                 0x00000001359a7baf 0x0 + 5194283951\r\n\t11  ???                                 0x0000000133dee5be 0x0 + 5165213118\r\n\t12  CollectionsBugSample.iOS            0x0000000102b028a1 mono_jit_runtime_invoke + 1585\r\n\t13  CollectionsBugSample.iOS            0x0000000102c139f4 mono_runtime_try_invoke + 148\r\n\t14  CollectionsBugSample.iOS            0x0000000102c156af mono_runtime_invoke + 95\r\n\t15  CollectionsBugSample.iOS            0x00000001029e7058 _ZL31native_to_managed_trampoline_20P11objc_objectP13objc_selectorPP11_MonoMethodj + 248\r\n\t16  CollectionsBugSample.iOS            0x00000001029eb654 -[__MonoMac_NSAsyncActionDispatcher xamarinApplySelector] + 52\r\n\t17  Foundation                          0x000000010bfa5878 __NSThreadPerformPerform + 331\r\n\t18  CoreFoundation                      0x000000010ff1dbe1 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17\r\n\t19  CoreFoundation                      0x000000010ff1d463 __CFRunLoopDoSources0 + 243\r\n\t20  CoreFoundation                      0x000000010ff17b1f __CFRunLoopRun + 1231\r\n\t21  CoreFoundation                      0x000000010ff17302 CFRunLoopRunSpecific + 626\r\n\t22  GraphicsServices                    0x0000000112b092fe GSEventRunModal + 65\r\n\t23  UIKitCore                           0x0000000119ee2ba2 UIApplicationMain + 140\r\n\t24  ???                                 0x0000000135029052 0x0 + 5184327762\r\n\t25  ???                                 0x0000000135028de3 0x0 + 5184327139\r\n\t26  ???                                 0x00000001341191a3 0x0 + 5168533923\r\n\t27  CollectionsBugSample.iOS            0x0000000102b028a1 mono_jit_runtime_invoke + 1585\r\n\t28  CollectionsBugSample.iOS            0x0000000102c12058 mono_runtime_invoke_checked + 136\r\n\t29  CollectionsBugSample.iOS            0x0000000102c176dd mono_runtime_exec_main_checked + 109\r\n\t30  CollectionsBugSample.iOS            0x0000000102a6dbf7 mono_jit_exec + 311\r\n\t31  CollectionsBugSample.iOS            0x0000000102d1e864 xamarin_main + 2708\r\n\t32  CollectionsBugSample.iOS            0x0000000102a496f2 main + 82\r\n\t33  libdyld.dylib                       0x0000000112152541 start + 1\r\n[CollectionsBugSample.zip](https://github.com/xamarin/Xamarin.Forms/files/3407885/CollectionsBugSample.zip)\r\n\r\n"},{"Id":"10114882373","Type":"IssuesEvent","CreatedAt":"2019-07-30T20:18:39","Actor":"dwightbennett","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/7024","RelatedDescription":"Opened issue \"[Bug] [Shell] iOS Bottom tab back navigation breaks re navigation\" (#7024) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nWhen using bottom tabs in shell, if I navigate to a new page and then navigate back by using the bottom tab bar, I cannot navigate back to the page I just barely navigated from. \r\n### Steps to Reproduce\r\n\r\n1. Create an app with shell and set up 2 bottom tabs.\r\n2. Push a new page onto the navigation stack using Shell's GoToAsync call\r\n3. Navigate back by pressing the bottom tab bar button.\r\n4. Attempt to re-navigate back to the page.\r\n\r\n### Expected Behavior\r\nI am able to navigate to the page I just navigated from.\r\n### Actual Behavior\r\nNo navigation happens.\r\n### Basic Information\r\n\r\n- Version with issue: Forms 4.1\r\n- Last known good version: none that I know of\r\n- IDE: windows and mac\r\n- Platform Target Frameworks: Latest\r\n\r\n### Reproduction Link\r\n[Repro Project](https://primusstudio-my.sharepoint.com/:u:/g/personal/dwight_bennett_primusstudios_com/EaytMu8B2WBOqVZBk46C40oBvxCKX--F3ABDTXtrPrEbfg?e=rErZaV)\r\n<!-- Please upload or provide a link to a reproduction case -->\r\nThis project is the basic shell template when making a new shell project. I changed the navigation to the item details to using a shell route instead of using the page INavigation property.\r\n### Extra info\r\nThe issue is seen on iOS. On android, the tab in the bottom bar does not do anything.  In my opinion it should navigate back.  This is the behavior on other android apps with bottom nav bars (Target, YouTube, Spotify).  I can make a separate issue for android if you would like me to. \r\n"},{"Id":"10114873804","Type":"IssuesEvent","CreatedAt":"2019-07-30T20:17:22","Actor":"EeeDotZee","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/7023","RelatedDescription":"Opened issue \"TableView Cell.ForceUpdateSize() Child Layout only appears after Tap\" (#7023) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI came across this problem trying to dynamically show a hidden cell in my `TableView`. I set the height of the Cell to 0 and then after conditions are met to 42 (approximately standard iOS height). After calling `ForceUpdateSize()` on the cell, the resizing works fine but the layout inside is hidden until i manually tap the cell in the UI.\r\n\r\nPS: if anyone is able to help me manually call a tap on the cell i would be fine with a \"hacky\" solution aswell.\r\n### Steps to Reproduce\r\n\r\n1. Create a TableView with UnevenRows=\"true\"\r\n2. Create a cell inside the TableView, set it's height to Zero\r\n3. Set the cells height to a certain number like 42 and call ForceUpdateSize()\r\n4. The layout inside the cell is hidden.\r\n\r\n### Expected Behavior\r\nThe layout inside the cell should be visible.\r\n\r\n### Actual Behavior\r\nThe layout inside the cell is hidden until i tap it.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.iOS\r\nVersion: 12.10.0.157 (Visual Studio Community)\r\n- Last known good version: /\r\n- IDE: Visual Studio Community 2019 for Mac\r\nVersion 8.1.5 (build 9)\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:   12.10.0.157\r\n- Affected Devices: iPhone 8 Plus\r\n\r\n### Screenshots\r\n\r\nhttps://i.stack.imgur.com/iUF77.gif\r\n\r\n"},{"Id":"10114646317","Type":"PullRequestEvent","CreatedAt":"2019-07-30T19:42:56","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/7022","RelatedDescription":"Opened pull request \"Modify UI Test 6286 to await push and pop\" (#7022) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nTest is occasionally throwing the following exception\r\n```\r\nSystem.InvalidOperationException: Page must not already have a parent.\r\n  at Xamarin.Forms.Internals.NavigationProxy.PushAsync (Xamarin.Forms.Page root, System.Boolean animated) [0x0000e] in /Users/vsts/agent/2.154.3/work/1/s/Xamarin.Forms.Core/NavigationProxy.cs:116 \r\n  at Xamarin.Forms.Internals.NavigationProxy.PushAsync (Xamarin.Forms.Page root) [0x00001] in /Users/vsts/agent/2.154.3/work/1/s/Xamarin.Forms.Core/NavigationProxy.cs:110 \r\n  at Xamarin.Forms.Controls.Issues.Issue6286+<>c__DisplayClass2_0.<Init>b__0 () [0x0001c] in /Users/vsts/agent/2.154.3/work/1/s/Xamarin.Forms.Controls.Issues/Xamarin.Forms.Controls.Issues.Shared/Issue6286.cs:37 \r\n  at Xamarin.Forms.Forms+IOSPlatformServices+<>c__DisplayClass15_0.<StartTimer>b__0 (Foundation.NSTimer t) [0x00001] in /Users/vsts/agent/2.154.3/work/1/s/Xamarin.Forms.Platform.iOS/Forms.cs:298 \r\n  at Foundation.NSTimerActionDispatcher.Fire (Foundation.NSTimer timer) [0x00000] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.6.0.25<\\M-b\\M^@\\M-&>\r\n```\r\n\r\nThis is most likely happening because the `PopAsync` of page2 hasn't completed before the `PushAsync` of page2 happens again. If you set the Timer to zero then it would recreate the exception. \r\n\r\nWith this rework if you set the timer to zero the test is still able to finish without any issues"},{"Id":"10114329743","Type":"PullRequestEvent","CreatedAt":"2019-07-30T18:54:44","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6948","RelatedDescription":"Merged pull request \"[Android] CollectionView Header/Footer\" (#6948) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nImplement header/footer for CollectionView on Android.\r\n\r\nNote: This only implements static header/footer - this does not include sticky headers.\r\n\r\n### Issues Resolved ### \r\n\r\n- implements part of #3172\r\n\r\n### API Changes ###\r\n\r\nAdded to ItemsView:\r\n\r\n```\r\npublic static readonly BindableProperty HeaderProperty = BindableProperty.Create(nameof(Header), typeof(object), typeof(ItemsView), null);\r\n\r\npublic static readonly BindableProperty HeaderTemplateProperty = BindableProperty.Create(nameof(HeaderTemplate), typeof(DataTemplate), typeof(ItemsView), null);\r\n\r\npublic static readonly BindableProperty FooterProperty = BindableProperty.Create(nameof(Footer), typeof(object), typeof(ItemsView), null);\r\n\r\npublic static readonly BindableProperty FooterTemplateProperty = BindableProperty.Create(nameof(FooterTemplate), typeof(DataTemplate), typeof(ItemsView), null);\r\n```\r\n\r\n### Platforms Affected ### \r\n\r\n- Core/XAML (all platforms)\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nAutomated\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests \r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"10115130512","Type":"IssuesEvent","CreatedAt":"2019-07-30T20:56:22","Actor":"jsauve","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6693","RelatedDescription":"Opened issue \"lipo is reporting x86_64 arch in a native iOS lib, but mtouch reports x86_64 is not present\" (#6693) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\nSee Expected Behavior\r\n\r\n### Expected Behavior\r\nWe're integrating with Epic Systems' MyChart native iOS library (libMyChart.a), version 8.8. The lib is supposed to support armv7, x86_64, & arm64 architectures. This found to be true by querying the lib with the lipo tool\r\nThe command:\r\n`xcrun -sdk iphoneos lipo -info /path/to/libMyChart.a`\r\n..yields the output:\r\n`Architectures in the fat file: /path/to/libMyChart.a are: armv7 x86_64 arm64`\r\n\r\nWhen building our iOS app against the lib, we get the error:\r\n`error MT5209: Error: warning: ignoring file /path/to/iOSProject/obj/iPhoneSimulator/Debug/device-builds/iphone11.2-12.1/mtouch-cache/libMyChart.a, file is universal (3 slices) but does not contain the x86_64 architecture: /path/to/iOSProject/obj/iPhoneSimulator/Debug/device-builds/iphone11.2-12.1/mtouch-cache/libMyChart.a ([our app identifier]) Native linking`\r\n\r\nWe're not understanding how it can be that lipo is reporting that x86_64 is supported in the lib, but that mtouch is apparently reporting that x86_64 is NOT supported, despite the tooling also reporting that it found 3 slices (supported architecture binaries) in the library file.\r\n\r\nFull build output, sanitized by removing identifying orgs, app names, and users:\r\nhttps://gist.github.com/jsauve/9adaad8b65c092b6fb20b396aa3f8d41\r\n\r\nWe have MyChart 8.7 in production today, but now we're seeing these arch-related build issues with 8.8. Because lipo tells us that the lib contains the architectures we expect it to, we believe that it's something in the mtouch tooling that may be erroneously reporting a missing architecture.\r\n\r\n### Actual Behavior\r\nSee Expected Behavior\r\n\r\n### Environment\r\nVS4Mac environment dump:\r\nhttps://gist.github.com/jsauve/23b54fafd7ac0a28b822031dc0274e4e\r\n(We're unable to use latest Xamarin tools right now, because the MyChart lib does not yet support the latest Xamarin.Android, and we need MyChart feature parity between platforms for our releases)\r\n\r\n### Build Logs\r\nFull build output, sanitized by removing identifying orgs, app names, and users:\r\nhttps://gist.github.com/jsauve/9adaad8b65c092b6fb20b396aa3f8d41\r\n\r\n### Example Project (If Possible)\r\nExample project is not currently possible because of firewalled dev environments and code sensitivity, but we will be trying to put together a repo we can provide access to.\r\n"},{"Id":"10114337861","Type":"PullRequestEvent","CreatedAt":"2019-07-30T18:55:53","Actor":"whitneyschmidt","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6647","RelatedDescription":"Closed pull request \"[xcode11] [HealthKit] b1-b3 bindings\" (#6647) at xamarin/xamarin-macios","RelatedBody":"No b4 diffs.\r\n\r\nIssue for `HKCharacteristicTypeIdentifierActivityMoveMode` API unavailable https://github.com/xamarin/maccore/issues/1899"},{"Id":"10114176746","Type":"PullRequestEvent","CreatedAt":"2019-07-30T18:32:26","Actor":"whitneyschmidt","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6692","RelatedDescription":"Opened pull request \"[HealthKit] updates for beta 1 - beta 4 xcode11\" (#6692) at xamarin/xamarin-macios","RelatedBody":"Accidentally added extra changes to https://github.com/xamarin/xamarin-macios/pull/6647"},{"Id":"10114132224","Type":"IssuesEvent","CreatedAt":"2019-07-30T18:26:02","Actor":"softlion","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6691","RelatedDescription":"Opened issue \"Crash in NSUrlSessionHandler.cs (RemoveNotification)\" (#6691) at xamarin/xamarin-macios","RelatedBody":"I just get a crash in NSUrlSessionHandler.cs line 191\r\n\r\n```\r\nSystem.Net.Http.NSUrlSessionHandler.RemoveNotification\r\n/Library/Frameworks/Xamarin.iOS.framework/Versions/12.14.0.110/src/Xamarin.iOS/Foundation/NSUrlSessionHandler.cs:191,5\r\n```\r\n\r\nThe crash message is \"can not remove null observer\". I checked your source code and there is a null check but it is not synced. Maybe there is a parallel call which calls this method twice.\r\n\r\n### Steps to Reproduce\r\n\r\nRandom :(\r\n\r\n### Expected Behavior\r\n\r\nNo crash\r\n\r\n### Actual Behavior\r\n\r\nCrash\r\n\r\n### Environment\r\n```\r\nVS 2019 Windows 16.2.0\r\nXamarin iOS 12.14.0.110\r\n```\r\n"},{"Id":"10114067924","Type":"PullRequestEvent","CreatedAt":"2019-07-30T18:16:45","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6684","RelatedDescription":"Merged pull request \"[xcode11] Bump to Xcode 11 Beta 5\" (#6684) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"10114049245","Type":"IssuesEvent","CreatedAt":"2019-07-30T18:14:01","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6690","RelatedDescription":"Opened issue \"[Xcode 11] RegisterFontDescriptors_WithCallback from FontManagerTest fails in Beta 5\" (#6690) at xamarin/xamarin-macios","RelatedBody":"The following monotouch-test is getting disabled for beta 5 since it started randomingly failing\r\n\r\nhttps://github.com/xamarin/xamarin-macios/blob/9bcedc65bf5c329e095a350c368b04abef1bcdd9/tests/monotouch-test/CoreText/FontManagerTest.cs#L220-L238\r\n\r\n```\r\n[FAIL] FontManagerTest.RegisterFontDescriptors_WithCallback :   errors\r\n  Expected: 0\r\n  But was:  1\r\n\r\n\t\t  at MonoTouchFixtures.CoreText.FontManagerTest.SuccessDone (Foundation.NSError[] errors, System.Boolean done) [0x00001] in /Users/builder/jenkins/workspace/xamarin-macios-pr-builder/tests/monotouch-test/CoreText/FontManagerTest.cs:123 \r\n\t\t  at CoreText.CTFontManager.TrampolineRegistrationHandler (System.IntPtr block, System.IntPtr errors, System.Boolean done) [0x00007] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.99.2.30/src/Xamarin.iOS/CoreText/CTFontManager.cs:162 \r\n\t\t  at (wrapper native-to-managed) CoreText.CTFontManager.TrampolineRegistrationHandler(intptr,intptr,int)\r\n\t\t  at (wrapper managed-to-native) CoreText.CTFontManager.CTFontManagerRegisterFontDescriptors(intptr,CoreText.CTFontManagerScope,bool,ObjCRuntime.BlockLiteral&)\r\n\t\t  at CoreText.CTFontManager.RegisterFontDescriptors (CoreText.CTFontDescriptor[] fontDescriptors, CoreText.CTFontManagerScope scope, System.Boolean enabled, CoreText.CTFontManager+CTFontRegistrationHandler registrationHandler) [0x0003a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.99.2.30/src/Xamarin.iOS/CoreText/CTFontManager.cs:374 \r\n\t\t  at MonoTouchFixtures.CoreText.FontManagerTest.RegisterFontDescriptors_WithCallback () [0x0004d] in /Users/builder/jenkins/workspace/xamarin-macios-pr-builder/tests/monotouch-test/CoreText/FontManagerTest.cs:232 \r\n\t\t  at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)\r\n\t\t  at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.99.2.30/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:391 \r\n\t\t--- End of stack trace from previous location where exception was thrown ---\r\n\t\t  at (wrapper managed-to-native) CoreText.CTFontManager.CTFontManagerRegisterFontDescriptors(intptr,CoreText.CTFontManagerScope,bool,ObjCRuntime.BlockLiteral&)\r\n\t\t  at CoreText.CTFontManager.RegisterFontDescriptors (CoreText.CTFontDescriptor[] fontDescriptors, CoreText.CTFontManagerScope scope, System.Boolean enabled, CoreText.CTFontManager+CTFontRegistrationHandler registrationHandler) [0x0003a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.99.2.30/src/Xamarin.iOS/CoreText/CTFontManager.cs:374 \r\n\t\t  at MonoTouchFixtures.CoreText.FontManagerTest.RegisterFontDescriptors_WithCallback () [0x0004d] in /Users/builder/jenkins/workspace/xamarin-macios-pr-builder/tests/monotouch-test/CoreText/FontManagerTest.cs:232 \r\n\t\t  at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&)\r\n\t\t  at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0006a] in /Library/Frameworks/Xamarin.iOS.framework/Versions/12.99.2.30/src/Xamarin.iOS/mcs/class/corlib/System.Reflection/RuntimeMethodInfo.cs:391 \r\n```"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1154868248317444096","CreatedAt":"2019-07-26T21:37:01+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin iOS Preview 3 is now available for iOS 13 and #Xcode 11 beta. Follow the link to update your #VisualStudio‚Ä¶ https://t.co/x6Xooaa0jA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":26,"FavoriteCount":14,"RawContent":null},{"Id":"1154813056289071104","CreatedAt":"2019-07-26T17:57:42+00:00","UserScreenname":"xamarinhq","Text":"It's been an exciting year with Xamarin Forms #Shell, #Android Emulators, #HotReload, and more! Get the full scoop‚Ä¶ https://t.co/xQJnsNkd0b","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":10,"RawContent":null},{"Id":"1154123615991808001","CreatedAt":"2019-07-24T20:18:07+00:00","UserScreenname":"xamarinhq","Text":"Announcing faster starter times using Startup Tracing on #Android with performant startup experience and minimal in‚Ä¶ https://t.co/dEGRpVJUIJ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":115,"FavoriteCount":44,"RawContent":null},{"Id":"1153732232198201354","CreatedAt":"2019-07-23T18:22:54+00:00","UserScreenname":"xamarinhq","Text":"We've got a new mini-series. Say 'hello' to Xamarin Forms 101. In today's episode, we take a walk through how to op‚Ä¶ https://t.co/6y81QbFi2B","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":98,"FavoriteCount":35,"RawContent":null},{"Id":"1152295154507833347","CreatedAt":"2019-07-19T19:12:28+00:00","UserScreenname":"xamarinhq","Text":"Keep up with the latest in .NET, C#, Xamarin, and Azure with Co-hosts Matt Soucoup and James Montemagno. This month‚Ä¶ https://t.co/RMbOmc6RZE","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":49,"FavoriteCount":17,"RawContent":null},{"Id":"1151246383837585408","CreatedAt":"2019-07-16T21:45:01+00:00","UserScreenname":"xamarinhq","Text":"Thank You! The first Xamarin Developer Summit was a huge success. This post recaps all the great news and developme‚Ä¶ https://t.co/TNaPa2uXX6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":88,"FavoriteCount":34,"RawContent":null},{"Id":"1151185104460537857","CreatedAt":"2019-07-16T17:41:31+00:00","UserScreenname":"xamarinhq","Text":"On this week's #Xamarin Essential API of the week, we take a look at the Phone Dialer API which enables your app to‚Ä¶ https://t.co/TCMRVbhW8X","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":23,"FavoriteCount":11,"RawContent":null},{"Id":"1149695456684982272","CreatedAt":"2019-07-12T15:02:11+00:00","UserScreenname":"xamarinhq","Text":"Stick around after the @XamDevSummit Keynote to hear about \"Building https://t.co/3QxhuBuvHc from source\" by‚Ä¶ https://t.co/6b0vNDHyzx","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":27,"FavoriteCount":10,"RawContent":null},{"Id":"1149674546556915713","CreatedAt":"2019-07-12T13:39:06+00:00","UserScreenname":"xamarinhq","Text":"Day 2 is here! Watch the live @XamDevSummit keynote and explore Microsoft's complete mobile DevOps offering with‚Ä¶ https://t.co/TpKv78eFbD","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":29,"FavoriteCount":10,"RawContent":null},{"Id":"1149421147064295424","CreatedAt":"2019-07-11T20:52:11+00:00","UserScreenname":"xamarinhq","Text":"Get all the \"Partly Cloudy ‚Äì Tips &amp; Tricks to Using #Azure to Its Fullest in #Mobile Apps\" with @CodeMillMatt at 16‚Ä¶ https://t.co/OWINsa15lf","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":10,"FavoriteCount":1,"RawContent":null},{"Id":"1149415035241926656","CreatedAt":"2019-07-11T20:27:54+00:00","UserScreenname":"xamarinhq","Text":"Catch @JamesMontemagno live at @XamDevSummit \"Crafting Real-Time Mobile Apps with SignalR\"  https://t.co/AGklkmnbyU","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":19,"FavoriteCount":7,"RawContent":null},{"Id":"1149390372851896321","CreatedAt":"2019-07-11T18:49:54+00:00","UserScreenname":"xamarinhq","Text":"Live at 14:05 CT, join @Pureween to \"Streamline &amp; Simplify Events with Reactive Extensions\" at @XamDevSummit! Follo‚Ä¶ https://t.co/pplpgXzjJe","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":15,"FavoriteCount":2,"RawContent":null},{"Id":"1149358581940129793","CreatedAt":"2019-07-11T16:43:34+00:00","UserScreenname":"xamarinhq","Text":"Watch @SweekritiS share \"Page Object Pattern and UITest Best Practices\" #LIVE at @XamDevSummit at 13:05 CT! Just us‚Ä¶ https://t.co/4pSIzUXclE","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":14,"FavoriteCount":0,"RawContent":null},{"Id":"1149336299280773120","CreatedAt":"2019-07-11T15:15:02+00:00","UserScreenname":"xamarinhq","Text":"Today at Xamarin Developer Summit, we announced XAML Hot Reload for Xamarin Forms.\n\nNow you can make changes to you‚Ä¶ https://t.co/AhFwLxKNFz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":166,"FavoriteCount":82,"RawContent":null},{"Id":"1149331380104564736","CreatedAt":"2019-07-11T14:55:29+00:00","UserScreenname":"xamarinhq","Text":"ICYMI, we now have a preview release focused on supporting iOS 13 and Xcode 11. Now you can build applications usin‚Ä¶ https://t.co/La5Jlgs0Kh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":9,"FavoriteCount":4,"RawContent":null},{"Id":"1148665630306000896","CreatedAt":"2019-07-09T18:50:02+00:00","UserScreenname":"xamarinhq","Text":"We're live streaming the Xamarin Developer Summit!\n\nVirtually attend the conference starting Thursday, July 11th‚Ä¶ https://t.co/Kh76XrlNVo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":77,"FavoriteCount":39,"RawContent":null},{"Id":"1148317583004852224","CreatedAt":"2019-07-08T19:47:01+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin team at this years largest #Xamarin conference, the Xamarin Developer Summit! July 11-12 in Housto‚Ä¶ https://t.co/5rZ4bINXkB","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":49,"FavoriteCount":15,"RawContent":null},{"Id":"1148273170136403975","CreatedAt":"2019-07-08T16:50:32+00:00","UserScreenname":"xamarinhq","Text":"ICYMI, Xamarin Forms 4.1.0 Stable is now available. It has dozens of quality improvements, a new CheckBox control,‚Ä¶ https://t.co/R3yD5qr9qm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":87,"FavoriteCount":45,"RawContent":null},{"Id":"1146463951594459137","CreatedAt":"2019-07-03T17:01:20+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":9,"FavoriteCount":2,"RawContent":null}]}},"RunOn":"2019-07-31T05:31:03.8792307Z","RunDurationInMilliseconds":4198}