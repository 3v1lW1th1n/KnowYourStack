{"Data":{"Sdk":{"Events":[{"Id":"6979694003","Type":"PullRequestEvent","CreatedAt":"2017-12-12T21:59:38","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/326","RelatedDescription":"Merged pull request \"Add an MSBuild test target\" (#326) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"6979661810","Type":"IssuesEvent","CreatedAt":"2017-12-12T21:52:20","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/195","RelatedDescription":"Closed issue \"FieldCode is fragmented\" (#195) at OfficeDev/Open-XML-SDK","RelatedBody":"When getting fieldcodes using\r\n\r\n`document.MainDocumentPart.RootElement.Descendants(Of FieldCode)()`\r\n\r\nFieldCode  is fragmented  when Word put the instruction text in multiple  <w:instrText>. \r\n\r\nthe xml looks like these\r\n<w:r>\r\n\t\t<w:rPr>\r\n\t\t\t<w:b />\r\n\t\t</w:rPr>\r\n\t\t<w:fldChar w:fldCharType=\"begin\" />\r\n\t</w:r>\r\n\t<w:r>\r\n\t\t<w:rPr>\r\n\t\t\t<w:b />\r\n\t\t</w:rPr>\r\n\t\t<w:instrText xml:space=\"preserve\"> MERGEFIELD CHIL</w:instrText>\r\n\t</w:r>\r\n\t<w:r w:rsidRPr=\"00611B99\">\r\n\t\t<w:rPr>\r\n\t\t\t<w:b />\r\n\t\t\t<w:szCs w:val=\"24\" />\r\n\t\t</w:rPr>\r\n\t\t<w:instrText>D2__Person_1_First_Name</w:instrText>\r\n\t</w:r>\r\n\t<w:r>\r\n\t\t<w:rPr>\r\n\t\t\t<w:b />\r\n\t\t</w:rPr>\r\n\t\t<w:fldChar w:fldCharType=\"separate\" />\r\n\t</w:r>\r\n\t<w:r>\r\n\t\t<w:rPr>\r\n\t\t\t<w:b />\r\n\t\t</w:rPr>\r\n\t\t<w:fldChar w:fldCharType=\"end\" />\r\n\t</w:r>\r\n \r\nI am getting two separate fieldcode\r\n\r\n- MERGEFIELD CHIL\r\n- D2_Person_1_First_Name\r\n\r\n\r\nInstead of just one MERGEFIELD CHILD2_Person_1_First_Name\r\n\r\n![fieldcodes](https://cloud.githubusercontent.com/assets/12826656/24689289/d705714c-1a08-11e7-98ee-4efce15ff58b.png)\r\n"},{"Id":"6979650462","Type":"PullRequestEvent","CreatedAt":"2017-12-12T21:49:53","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/326","RelatedDescription":"Opened pull request \"Add an MSBuild test target\" (#326) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"6978855006","Type":"PullRequestEvent","CreatedAt":"2017-12-12T19:04:08","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/325","RelatedDescription":"Merged pull request \"Remove unicode characters from path names\" (#325) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"6978651397","Type":"PullRequestEvent","CreatedAt":"2017-12-12T18:14:24","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/325","RelatedDescription":"Opened pull request \"Remove unicode characters from path names\" (#325) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"6975268341","Type":"PullRequestEvent","CreatedAt":"2017-12-12T06:03:21","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/324","RelatedDescription":"Merged pull request \"Move extension methods to own file\" (#324) at OfficeDev/Open-XML-SDK","RelatedBody":"Part of #315 "},{"Id":"6975248242","Type":"PullRequestEvent","CreatedAt":"2017-12-12T05:55:37","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/324","RelatedDescription":"Opened pull request \"Move extension methods to own file\" (#324) at OfficeDev/Open-XML-SDK","RelatedBody":"Part of #315 "},{"Id":"6975223210","Type":"PullRequestEvent","CreatedAt":"2017-12-12T05:45:30","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/323","RelatedDescription":"Opened pull request \"Separate sources1.cs to own files\" (#323) at OfficeDev/Open-XML-SDK","RelatedBody":"This is a part of #315 and moves classes from sources1.cs to their own files. This file had around multiple namespaces and classes which are now located in folders based on their namespace and files based on their type name."},{"Id":"6975191905","Type":"PullRequestEvent","CreatedAt":"2017-12-12T05:32:33","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/322","RelatedDescription":"Opened pull request \"Move packaging classes to own files\" (#322) at OfficeDev/Open-XML-SDK","RelatedBody":"Many of the files have 5+ classes in them (and some have many more). This makes it very difficult to find classes and makes for very long, unmaintainable files. This is part of #315 and starts with bringing all the classes within the `DocumentFormat.OpenXml.Packaging` namespace into the folder, with each class being in their own file."},{"Id":"6975183497","Type":"PullRequestEvent","CreatedAt":"2017-12-12T05:28:56","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/321","RelatedDescription":"Merged pull request \"Merge vNext into Office2016 branch\" (#321) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"6975121086","Type":"PullRequestEvent","CreatedAt":"2017-12-12T05:02:24","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/321","RelatedDescription":"Opened pull request \"Merge vNext into Office2016 branch\" (#321) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"6975087378","Type":"PullRequestEvent","CreatedAt":"2017-12-12T04:47:33","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/320","RelatedDescription":"Merged pull request \"Add an extension method to expand FileFormatVersion to include all alter versions\" (#320) at OfficeDev/Open-XML-SDK","RelatedBody":"This adds an extension method to expand a given version to include itself and all alter versions. This helps to clean up some code so it is clearer conceptually what is going on and to minimize any code churn between the vNext branch and the Office2016 branch."},{"Id":"6975069548","Type":"PullRequestEvent","CreatedAt":"2017-12-12T04:39:36","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/320","RelatedDescription":"Opened pull request \"Add an extension method to expand FileFormatVersion to include all alter versions\" (#320) at OfficeDev/Open-XML-SDK","RelatedBody":"This adds an extension method to expand a given version to include itself and all alter versions. This helps to clean up some code so it is clearer conceptually what is going on and to minimize any code churn between the vNext branch and the Office2016 branch."},{"Id":"6974938158","Type":"IssuesEvent","CreatedAt":"2017-12-12T03:43:41","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/310","RelatedDescription":"Closed issue \"Inquiry: code generation method\" (#310) at OfficeDev/Open-XML-SDK","RelatedBody":"What kind of tool are you guys using to generate the classes (https://github.com/OfficeDev/Open-XML-SDK/tree/vNext/DocumentFormat.OpenXml/src/GeneratedCode)? \r\n\r\nI am trying to implement an Open NDC protocol C# client (http://www.iata.org/whatwedo/airline-distribution/ndc/Pages/schema-download2.aspx) "},{"Id":"6974935979","Type":"IssuesEvent","CreatedAt":"2017-12-12T03:42:48","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/240","RelatedDescription":"Closed issue \"Streaming back to embedded package part corrupting power point file\" (#240) at OfficeDev/Open-XML-SDK","RelatedBody":"Hi there, I have created the following c# program to change the chart of a template powerpoint as well as its embedded excel spreadsheet.  I can tell through the productivity tool that everything I want changed is changed, but when I try to open the generated powerpoint, it is corrupted.  I saved the excel spreadsheet and discovered that everything is fine there.  I've discovered that writing the stream back to the embedded package part is where I end up having problems.  If you can, please take a look at my code, and that line in particular to see what I might be doing wrong and how I might be able to address it.  thank you so much!\r\n\r\nSo the line in particular that seems to corrupt the outputted powerpoint file is:\r\n\r\n**using (Stream s = epp.GetStream()) ms.WriteTo(s); (Line 110)**\r\n\r\nEdit: Not able to attach any files, I'll post the code directly.\r\n\r\n```csharp\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DocumentFormat.OpenXml.Packaging;\r\nusing System.Linq;\r\nusing C = DocumentFormat.OpenXml.Drawing.Charts;\r\nusing ss = DocumentFormat.OpenXml.Spreadsheet;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\nusing System.IO;\r\nusing DocumentFormat.OpenXml.Drawing;\r\n\r\nnamespace PowerPointTest2 {\r\n    class Program {\r\n\r\n        static string[,] newData = new string[6, 4];\r\n\r\n        public static void CopyStream(Stream input, Stream output) {\r\n            byte[] buffer = new byte[32768];\r\n            while (true) {\r\n                int read = input.Read(buffer, 0, buffer.Length);\r\n                if (read <= 0)\r\n                    return;\r\n                output.Write(buffer, 0, read);\r\n            }\r\n        }\r\n\r\n        static void Main(string[] args) {\r\n            //Test data to input into chart\r\n            newData[0, 0] = \"May - 2017\";\r\n            newData[0, 3] = \"14\";\r\n            newData[0, 2] = \"4\";\r\n            newData[0, 1] = \"5\";\r\n            newData[1, 0] = \"June - 2017\";\r\n            newData[1, 3] = \"25\";\r\n            newData[1, 2] = \"4\";\r\n            newData[1, 1] = \"3\";\r\n            newData[2, 0] = \"July - 2017\";\r\n            newData[2, 3] = \"15\";\r\n            newData[2, 2] = \"6\";\r\n            newData[2, 1] = \"2\";\r\n            newData[3, 0] = \"August - 2017\";\r\n            newData[3, 3] = \"6\";\r\n            newData[3, 2] = \"2\";\r\n            newData[3, 1] = \"1\";\r\n            newData[4, 0] = \"Sept - 2017\";\r\n            newData[4, 3] = \"6\";\r\n            newData[4, 2] = \"2\";\r\n            newData[4, 1] = \"1\";\r\n            newData[5, 0] = \"Oct - 2017\";\r\n            newData[5, 3] = \"6\";\r\n            newData[5, 2] = \"2\";\r\n            newData[5, 1] = \"1\";\r\n\r\n            string folder = \"C:\\\\users\\\\redirection\\\\meecd26\\\\documents\\\\visual studio 2015\\\\Projects\\\\PowerPointTest2\\\\PowerPointTest2\\\\Files\\\\\";\r\n            string presentationFile = \"RLAN Change Governance - Template.pptx\";\r\n            string copiedPresentationFile = \"RLAN Change Governance - July.pptx\";\r\n            File.Copy(folder + presentationFile, folder + copiedPresentationFile, true);\r\n\r\n            using (var presentation = PresentationDocument.Open(folder + copiedPresentationFile, true)) {\r\n                PresentationPart pp = presentation.PresentationPart;\r\n                int i = 0;\r\n                foreach (SlidePart sp in pp.SlideParts) {\r\n                    if (sp.ChartParts.Any()) {\r\n                        if (i == 0) {\r\n                            ++i;\r\n                            ChartPart cp = sp.ChartParts.FirstOrDefault();\r\n                            //C.ChartReference cr = (C.ChartReference)cp.ExternalRelationships;\r\n                            string externalId = null;\r\n                            C.ExternalData exData = cp.ChartSpace.Elements<C.ExternalData>().FirstOrDefault();\r\n                            externalId = exData.Id;\r\n\r\n                            EmbeddedPackagePart epp = (EmbeddedPackagePart)cp.Parts.Where(pt => pt.RelationshipId == externalId).FirstOrDefault().OpenXmlPart;\r\n                            using (Stream str = epp.GetStream())\r\n                            using (MemoryStream ms = new MemoryStream()) {\r\n                                CopyStream(str, ms);\r\n                                using (SpreadsheetDocument spreadsheetDoc = SpreadsheetDocument.Open(ms, true)) {\r\n\r\n                                    // Update data in spreadsheet\r\n                                    // Find first worksheet\r\n                                    ss.Sheet ws = (ss.Sheet)spreadsheetDoc.WorkbookPart.Workbook.Sheets.FirstOrDefault();\r\n                                    string sheetId = ws.Id;\r\n                                    WorksheetPart wsp = (WorksheetPart)spreadsheetDoc.WorkbookPart.Parts.Where(pt => pt.RelationshipId == sheetId).FirstOrDefault().OpenXmlPart;\r\n                                    ss.SheetData sd = wsp.Worksheet.Elements<ss.SheetData>().FirstOrDefault();\r\n\r\n                                    //Traverse through 2D array of values, [0][l] will be X axis labels, [1-3][l] will be intake numbers by risk level\r\n                                    for (int k = 0; k < newData.GetLength(0); k++) {\r\n                                        ss.Row row = sd.Elements<ss.Row>().Skip(k + 1).FirstOrDefault();\r\n                                        for (int l = 0; l < newData.GetLength(1); l++) {\r\n                                            if (row != null) {\r\n                                                int result;\r\n                                                if (int.TryParse(newData[k, l].ToString(), out result)) {\r\n                                                    ss.CellValue cv = row.Elements<ss.Cell>().ElementAt(l).Elements<ss.CellValue>().FirstOrDefault();\r\n                                                    cv.Text = newData[k, l].ToString();\r\n                                                }\r\n                                                else {\r\n                                                    ss.Cell cell = row.Elements<ss.Cell>().ElementAt(l);\r\n                                                    cell.DataType = ss.CellValues.InlineString;\r\n                                                    string text = newData[k, l].ToString();\r\n                                                    cell.InlineString = new ss.InlineString() { Text = new ss.Text(text) };\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    spreadsheetDoc.Save();\r\n                                    spreadsheetDoc.SaveAs(\"testsheet.xlsx\");\r\n                                }\r\n\r\n                                // Write the modified memory stream back\r\n                                // into the embedded package part.\r\n                                using (Stream s = epp.GetStream()) ms.WriteTo(s);\r\n                            }\r\n                            C.Chart chart = cp.ChartSpace.Elements<C.Chart>().First();\r\n                            C.BarChart bc = chart.Descendants<C.BarChart>().FirstOrDefault();\r\n                            if (bc != null) {\r\n                                int l = 1;  //Only traversing through numbers\r\n                                foreach (var bcs in bc.Elements<C.BarChartSeries>()) {\r\n                                    if (bcs != null) {\r\n                                        C.CategoryAxisData cat = bcs.Descendants<C.CategoryAxisData>().First();\r\n                                        C.StringCache cac = cat.Descendants<C.StringCache>().First();\r\n                                        int s = 0;\r\n                                        foreach (var stringPoint in cac.Elements<C.StringPoint>()) {\r\n                                            C.NumericValue numericValue = stringPoint.GetFirstChild<C.NumericValue>();\r\n                                            numericValue.Text = newData[s, 0].ToString();\r\n                                            s++;\r\n\r\n                                        }\r\n\r\n                                        C.Values values = bcs.Descendants<C.Values>().First();\r\n                                        C.NumberingCache nc = values.Descendants<C.NumberingCache>().First();\r\n                                        int k = 0;\r\n                                        foreach (var numPoint in nc.Elements<C.NumericPoint>()) {\r\n                                            if (k != 5) {\r\n                                                C.NumericValue numericValue = numPoint.GetFirstChild<C.NumericValue>();\r\n                                                numericValue.Text = newData[k, l].ToString();\r\n                                                k++;\r\n                                            }\r\n                                            else {\r\n                                                C.NumericValue numericValue = numPoint.GetFirstChild<C.NumericValue>();\r\n                                                numericValue.Text = newData[k, l].ToString();\r\n                                                l++;\r\n                                                k = 0;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        break;\r\n                                    }\r\n\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                pp.Presentation.Save();\r\n                presentation.Close();\r\n                System.Diagnostics.Process.Start(folder + copiedPresentationFile);\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n\r\n"},{"Id":"6974231117","Type":"PullRequestEvent","CreatedAt":"2017-12-11T23:39:03","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/304","RelatedDescription":"Merged pull request \"Add CellValue overload to accept DateTime or DateTimeOffset\" (#304) at OfficeDev/Open-XML-SDK","RelatedBody":"A common need is to add a date object to a cell, but it requires a specific format that is not easy to track down. The text needs to be in ISO 8601 format, so this adds a couple of overloads to do that so it's more discoverable.\r\n\r\nFixes #142 "}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[{"Id":"6952261240","Type":"PullRequestEvent","CreatedAt":"2017-12-06T16:53:11","Actor":"EricWhiteDev","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/194","RelatedDescription":"Merged pull request \"Document builder enhancements\" (#194) at OfficeDev/Open-Xml-PowerTools","RelatedBody":""},{"Id":"6952259477","Type":"PullRequestEvent","CreatedAt":"2017-12-06T16:52:53","Actor":"EricWhiteDev","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/194","RelatedDescription":"Opened pull request \"Document builder enhancements\" (#194) at OfficeDev/Open-Xml-PowerTools","RelatedBody":""},{"Id":"6885227045","Type":"PullRequestEvent","CreatedAt":"2017-11-21T15:31:13","Actor":"EricWhiteDev","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/pull/183","RelatedDescription":"Merged pull request \"Merge styles with same name in DocumentBuilder\" (#183) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"Solves #181.\r\n\r\nCurrently implemented with a compile-time feature flag, but this could easily be changed to an optional parameter passed to DocumentBuilder at run-time.\r\n\r\nIt is likely possible to clean up the section that maps style IDs in references and numberings so that it doesn't have to go through as many elements."},{"Id":"6879031290","Type":"IssuesEvent","CreatedAt":"2017-11-20T14:08:53","Actor":"saritakhachane","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/193","RelatedDescription":"Opened issue \"imported word document not supporting for Listitems\" (#193) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"We have use OpenXML power tool 4.5.3.2 in our MVC project for importing word document.  after importing we are allowing user to edit it. But as list-items in Document are  imported with special CSS classes and not as UL LI ,so after hitting enter key  at the end of any bullet list item, next bullet list item wont created automatically. \r\nPlease guide us on, how we can import word document with list-items, so that next list-item will automatically created after hitting enter key in Edit mode.\r\n\r\n"},{"Id":"6873352404","Type":"IssuesEvent","CreatedAt":"2017-11-18T09:28:57","Actor":"bestplay","Repository":"OfficeDev/Open-Xml-PowerTools","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-Xml-PowerTools/issues/192","RelatedDescription":"Opened issue \"MarkupSimplifier.SimplifyMarkup w:hint issue\" (#192) at OfficeDev/Open-Xml-PowerTools","RelatedBody":"OpenXML power tools 4.5.3.2 from Nuget.\r\n\r\nWhen I edit my docx in a RUN with <w:hint=\"east asia\">.\r\n\r\nIt will add new RUNs with or without <w:hint>.\r\n\r\nThen the SimplifyMarkup method can not merge this new RUNs.\r\n\r\nAny help?\r\n\r\nMy tricky work round is Add the same <w:int> to each adjacent runs.\r\n\r\nBut i don't know if some bad things will happen.\r\n\r\nI have read the document about hint:\r\n\r\n> hint (Font Content Type) | Specifies the  font type which shall be used to format any ambiguous characters in the current  run.   There are  certain characters which are not explicitly stored in the document, and can be  mapped into multiple categories of the four mentioned above. This attribute  shall be used to arbitrate that conflict, and determine how ambiguities in this  run shall be handled. [Note: This is  primarily used to handle the formatting on the paragraph mark glyph, and other  characters that are not stored as text in the WordprocessingML document. end note]   If this  attribute is omitted, then this ambiguity can be resolved by any means  available.   [Example: Consider the run representing the  paragraph mark glyph, which is not stored as a physical character. Since this  could therefore be formatted with any of the fonts specified for the run, this  ambiguity is resolved using the following WordprocessingML:   <w:pPr><w:rPr><w:rFonts w:hint=\"eastAsia\"  /></w:rPr></w:pPr>   The hint attribute specifies that the run must use the eastAsia font  (theme or not, whichever is in use for East Asian text) as defined for this  range. end example]   The possible  values for this attribute are defined by the ST_Hint  simple type (17.18.41).\r\n "}],"ResultType":"GitHubEvent"}},"RunOn":"2017-12-13T05:30:32.7522188Z","RunDurationInMilliseconds":1708}