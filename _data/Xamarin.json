{"Data":{"Blog":{"FeedItems":[{"Title":"Using the New Xamarin.Forms Controls Toolbox","PublishedOn":"2018-08-24T14:03:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms empowers you to deliver the same experience to multiple platforms. Using a set of UI elements abstracted from common mobile app controls, like text inputs and buttons, you can quickly...","Href":"https://blog.xamarin.com/using-new-xamarin-forms-controls-toolbox/","RawContent":null},{"Title":"Getting Started with Android Pie","PublishedOn":"2018-08-21T20:19:21+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Google recently released Android Pie for developers to enhance their apps and build new experiences with. Previously, Microsoft released an Android 9.0 Preview for Xamarin.Android and as of today, you...","Href":"https://blog.xamarin.com/android-pie-preview-getting-started/","RawContent":null},{"Title":"Exploring New iOS 12 ARKit Capabilities With Xamarin","PublishedOn":"2018-08-20T20:04:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s summertime, which for Xamarin developers means new iOS betas to explore and learn. ARKit, which debuted last year in iOS 11, has matured over the past year and in iOS 12 is much more...","Href":"https://blog.xamarin.com/exploring-new-ios-12-arkit-capabilities-with-xamarin/","RawContent":null},{"Title":"Attend A .NET Conf Event Near You!","PublishedOn":"2018-08-15T20:29:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you have not yet heard of the .NET Conf, it is a FREE, 3-day virtual developer event co-organized by the .NET community and Microsoft. There is a wide selection of live sessions with feature...","Href":"https://blog.xamarin.com/attend-a-net-conf-event-near-you/","RawContent":null},{"Title":"Preview: iOS 12 development with Xamarin","PublishedOn":"2018-08-10T16:30:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The latest Xamarin preview release supports Xcode 10 beta 5, which includes beta SDKs for iOS 12, macOS Mojave (10.14), watchOS 5, and tvOS 12. Get Started With New iOS 12 APIs Today: iOS 12 includes...","Href":"https://blog.xamarin.com/preview-ios-12-development-with-xamarin/","RawContent":null},{"Title":"Securing network traffic with TLS 1.2","PublishedOn":"2018-08-07T15:58:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Secure and encrypted network communications are a crucial part of mobile application development. Without some kind of security around the communication layer, it is trivial for a third party to...","Href":"https://blog.xamarin.com/securing-network-traffic-with-tls-1-2/","RawContent":null},{"Title":"Adaptive Mobile Designs with FlexLayout","PublishedOn":"2018-08-03T17:33:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms is fantastic for quickly shipping a single code base to multiple platforms and devices. As soon as you are present on all those different screens, you need to make sure your UI looks as...","Href":"https://blog.xamarin.com/adaptive-mobile-designs-with-flexlayout/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in August!","PublishedOn":"2018-08-01T19:46:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This year&#8217;s .NET Conf is coming to you September 12 &#8211; 14, 2018! Over the course of the three days, you have a wide selection of live sessions that feature speakers from the community and...","Href":"https://blog.xamarin.com/xamarin-dotnet-developer-events-august/","RawContent":null},{"Title":"Guest Post: Visual UI tests on iOS simulator using Xamarin and Appium","PublishedOn":"2018-07-30T19:07:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Sophie Tagar, a customer support engineer at Applitools. Previously, Sophie was a software developer at Matrix Israel where, among other things, she did full stack...","Href":"https://blog.xamarin.com/visual-ui-tests-ios-simulator-using-xamarin-appium/","RawContent":null},{"Title":"Announcing Xamarin.Android 9.0 (P) Preview","PublishedOn":"2018-07-27T16:11:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Android 9.0 (P) introduces many features such as Wi-Fi RTT(Round-Trip-Time), Display cutout support, Notification enhancements, Multi-camera support, and much more. We&#8217;re excited to announce...","Href":"https://blog.xamarin.com/xamarin-android-9-0-p-preview/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8167657228","Type":"IssuesEvent","CreatedAt":"2018-08-26T02:12:52","Actor":"suihanhbr","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2104","RelatedDescription":"Opened issue \"the Release apk file can't be installed\" (#2104) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. rebuild project\r\n2. archive for publishing\r\n3. sign and distribute\r\n4. install the apk\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\ninstall normally\r\n\r\n### Actual Behavior\r\n\r\ninstall failed , message : the apk file is broken.\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n=== Visual Studio Professional 2017 for Mac ===\r\n\r\nVersion 7.6.1 (build 9)\r\nInstallation UUID: 4e60959a-758f-48ce-ae6d-26e15276ea83\r\nRuntime:\r\n\tMono 5.12.0.301 (2018-02/4fe3280bba1) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000301\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.1\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.4.1 (14161)\r\nBuild 9F2000\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.6.0.13 (Visual Studio Professional)\r\nHash: 373c313a\r\nBranch: \r\nBuild date: 2018-07-24 23:47:12-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.14.0.13 (Visual Studio Professional)\r\nHash: 373c313a\r\nBranch: HEAD\r\nBuild date: 2018-07-24 23:47:12-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.0.0.19 (Visual Studio Professional)\r\nAndroid SDK: /Users/huangboru/myfile/sdk\r\n\tSupported Android versions:\r\n\t\t4.4 (API level 19)\r\n\t\t5.1 (API level 22)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.0\r\nSDK Build Tools Version: 28.0.2\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_51\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_51-b16)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.51-b03, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706010009\r\nGit revision: 1916291c332d942d45f3d8a952cc315f7864abef\r\nBuild date: 2018-08-22 19:19:11+00\r\nBuild branch: release-7.6\r\nXamarin extensions: 53cd52a227bb91315389d4860f821fa4c3b396b3\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nInternet of Things (IoT) development (Preview) 7.5.3\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8167273636","Type":"PullRequestEvent","CreatedAt":"2018-08-25T19:57:51","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2103","RelatedDescription":"Opened pull request \"Bump to java.interop/master/893562c\" (#2103) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/java.interop/compare/78f7301...893562c\r\n\r\nUse JdkInfo during the build:\r\nhttps://github.com/xamarin/java.interop/pull/349\r\n\r\nOptimize type lookups:\r\nhttps://github.com/xamarin/java.interop/pull/350\r\n\r\n[jnimarshalmethod-gen] --types option:\r\nhttps://github.com/xamarin/java.interop/commit/d174fa66a86c717fd8468ea2e48e524c1a7cc7ca\r\n\r\nRemove unused XAIntegration $(Configuration):\r\nhttps://github.com/xamarin/java.interop/pull/361\r\n\r\nOption to build Java.Interop as non-PCL:\r\nhttps://github.com/xamarin/java.interop/pull/360"},{"Id":"8164500245","Type":"PullRequestEvent","CreatedAt":"2018-08-24T18:14:48","Actor":"luhenry","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2102","RelatedDescription":"Opened pull request \"[sdks] Build the runtimes and LLVM in parallel\" (#2102) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8164059423","Type":"IssuesEvent","CreatedAt":"2018-08-24T16:36:37","Actor":"JonDouglas","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2099","RelatedDescription":"Closed issue \"Missing attributes from ActivityAttribute\" (#2099) at xamarin/xamarin-android","RelatedBody":"### Expected Behavior\r\n\r\nI want to set all attributes existing for an [`<activity>` element in the Android Manifest](https://developer.android.com/guide/topics/manifest/activity-element) using the `ActivityAttribute`.\r\n\r\n### Actual Behavior\r\n\r\nSome attributes are not available as properties on the `ActivityAttribute` class, e.g. `DocumentLaunchMode` is missing.\r\n\r\nSee corresponding issue in Bugzilla: https://bugzilla.xamarin.com/show_bug.cgi?id=58958\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.6.1 (build 9)\r\nInstallation UUID: fa56890d-29fb-40f7-bba3-8ae472aac8d0\r\nRuntime:\r\n\tMono 5.12.0.301 (2018-02/4fe3280bba1) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000301\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.1.0\r\n\t2.0.6\r\n\t2.0.5\r\n\t2.0.3\r\n\t2.0.0\r\n\t1.1.2\r\n\t1.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.300\r\n\t2.1.101\r\n\t2.1.4\r\n\t2.0.3\r\n\t2.0.0\r\n\t1.0.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.3 (14154)\r\nBuild 9E145\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.6.0.13 (Visual Studio Community)\r\nHash: 373c313a\r\nBranch: \r\nBuild date: 2018-07-24 23:47:12-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.14.0.13 (Visual Studio Community)\r\nHash: 373c313a\r\nBranch: HEAD\r\nBuild date: 2018-07-24 23:47:12-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.0.0.19 (Visual Studio Community)\r\nAndroid SDK: /Library/Developer/android-sdk\r\n\tSupported Android versions:\r\n\t\t5.1 (API level 22)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.0\r\nSDK Build Tools Version: 28.0.1\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_101\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_101-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706010009\r\nGit revision: 1916291c332d942d45f3d8a952cc315f7864abef\r\nBuild date: 2018-08-22 19:19:11+00\r\nBuild branch: release-7.6\r\nXamarin extensions: 53cd52a227bb91315389d4860f821fa4c3b396b3\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nAddinMaker 1.4.3\r\nFileNesting 0.1.1\r\nNuGet Package Explorer 0.2\r\nPaket 0.3\r\nRedth's Addins 1.0.9\r\nSortAndRemoveOnSave 1.2\r\nInternet of Things (IoT) development (Preview) 7.5"},{"Id":"8163352199","Type":"PullRequestEvent","CreatedAt":"2018-08-24T14:23:47","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2058","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] Fix Missing fields when using aapt2.\" (#2058) at xamarin/xamarin-android","RelatedBody":"Fixes #2047\r\n\r\nWhen we implemented the `ManagedResouceParser` the initial thought\r\nwas that all the fields we present would be unique. So when we\r\nchecked to see if the container class already had a field with\r\nthe same name we uses a Case Insensitive comparision to do that.\r\n\r\nWe a result this broke a number of sample applicaitons that QA have.\r\nLooking at the `ApiDemo` issue.. we have this problem\r\n\r\n\tResources/layout/animation_seeking.xml` has a item with id = `android:id=\"@+id/seekBar\"\r\n\tResources/layout/content_browser.xml` has id = `android:id=\"@+id/seekbar\"\r\n\tResources/layout/content_browser_nav.xml` has id = `android:id=\"@+id/seekbar\"\r\n\r\nNote the different casing for `seekBar`. With the old `aapt` based\r\nR.java resource parser this results in BOTH `seekbar` and `seekBar`\r\nbeing available in the `Resource.Desogner.cs` file.\r\n\r\nBecause of the Case Insensitive check in the new parser these two\r\nfields are merged into one. It would be on a first found basis.\r\nSo if `seekBar` was the first field added , then that is exposed.\r\nThe other `seebar` field would be ignored.\r\n\r\nWe might see this as a problem in our parser but aapt and aapt2 both\r\nproduce the following in the `R.txt` file\r\n\r\n\tint id seekBar 0x7f08018e\r\n\tint id seekbar 0x7f08018f\r\n\r\nSo the fix in this case is to just do a normal case check to ensure\r\nthat if we have fields with different casing, they are handled\r\ncorrectly."},{"Id":"8163352194","Type":"IssuesEvent","CreatedAt":"2018-08-24T14:23:46","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2047","RelatedDescription":"Closed issue \"[AAPT2] Encountering build errors due to missing Resource.* fields which aren't actually missing when aapt2 is enabled\" (#2047) at xamarin/xamarin-android","RelatedBody":"I've got a handful of projects which are failing during CoreCompile due to Resource related errors when enabling aapt2. These errors appear to be falsely reported however, and don't occur when using aapt. There is also perhaps some relation with the issue described in #1983.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Build [ApiDemo](https://github.com/xamarin/monodroid-samples/tree/master/ApiDemo) and/or any of the other 4 projects shown in the \"Actual Behavior\" section with aapt2 enabled.\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThese projects should build successfully with aapt2 enabled.\r\n\r\n### Actual Behavior\r\nhttp://xqa.blob.core.windows.net/gist/report-3c94cd9125164b8c89c5b1dafc5fab60.txt\r\n\r\n```\r\n  Activities/LoggingActivity.cs(122,46): error CS0117: 'Resource.Id' does not contain a definition for 'scrollview' [/Users/xamarinqa/myagent/_work/r5/a/monodroid-samples/android-n/MultiWindowPlayground/MultiWindowPlayground/MultiWindowPlayground.csproj]\r\n```\r\n\r\nhttp://xqa.blob.core.windows.net/gist/report-1e247c7717ac496891b088764c29eddc.txt\r\n```\r\n  View/ContentBrowserActivity.cs(155,41): error CS0117: 'Resource.Id' does not contain a definition for 'seekbar' [/Users/xamarinqa/myagent/_work/r5/a/monodroid-samples/ApiDemo/ApiDemo.csproj]\r\n  View/ContentBrowserNavActivity.cs(158,41): error CS0117: 'Resource.Id' does not contain a definition for 'seekbar' [/Users/xamarinqa/myagent/_work/r5/a/monodroid-samples/ApiDemo/ApiDemo.csproj]\r\n```\r\nhttp://xqa.blob.core.windows.net/gist/report-85670af60ea046d48d66409f4442f0ee.txt\r\n\r\n```\r\n  MainActivity.cs(24,44): error CS0117: 'Resource.Layout' does not contain a definition for 'Main' [/Users/xamarinqa/myagent/_work/r5/a/monodroid-samples/Firebase/FCMNotifications/FCMNotifications/FCMNotifications.csproj]\r\n  MainActivity.cs(25,58): error CS0117: 'Resource.Id' does not contain a definition for 'msgText' [/Users/xamarinqa/myagent/_work/r5/a/monodroid-samples/Firebase/FCMNotifications/FCMNotifications/FCMNotifications.csproj]\r\n  MainActivity.cs(42,67): error CS0117: 'Resource.Id' does not contain a definition for 'logTokenButton' [/Users/xamarinqa/myagent/_work/r5/a/monodroid-samples/Firebase/FCMNotifications/FCMNotifications/FCMNotifications.csproj]\r\n  MainActivity.cs(44,68): error CS0117: 'Resource.Id' does not contain a definition for 'subscribeButton' [/Users/xamarinqa/myagent/_work/r5/a/monodroid-samples/Firebase/FCMNotifications/FCMNotifications/FCMNotifications.csproj]\r\n  MyFirebaseMessagingService.cs(41,71): error CS0117: 'Resource.Drawable' does not contain a definition for 'ic_stat_ic_notification' [/Users/xamarinqa/myagent/_work/r5/a/monodroid-samples/Firebase/FCMNotifications/FCMNotifications/FCMNotifications.csproj]\r\n```\r\n\r\nhttp://xqa.blob.core.windows.net/gist/report-827877f595704e708224b2a8802d0c53.txt\r\n\r\n```\r\n  MainActivity.cs(60,58): error CS0117: 'Resource.Id' does not contain a definition for 'alt' [/Users/xamarinqa/myagent/_work/r5/a/mobile-samples/BackgroundLocationDemo/location.Android/Location.Droid.csproj]\r\n```\r\n\r\nhttp://xqa.blob.core.windows.net/gist/report-aee90b21f9e440108a605cd8dac73567.txt\r\n```\r\n  MainActivity.cs(15,49): error CS0117: 'Resource.Layout' does not contain a definition for 'Tabbar' [/Users/xamarinqa/myagent/_work/r5/a/xamarin-forms-samples/WebServices/TodoAzurePush/Droid/TodoAzure.Droid.csproj]\r\n  MainActivity.cs(16,47): error CS0117: 'Resource.Layout' does not contain a definition for 'Toolbar' [/Users/xamarinqa/myagent/_work/r5/a/xamarin-forms-samples/WebServices/TodoAzurePush/Droid/TodoAzure.Droid.csproj]\r\n  Services/FirebaseNotificationService.cs(36,49): error CS0117: 'Resource.Drawable' does not contain a definition for 'ic_stat_ic_notification' [/Users/xamarinqa/myagent/_work/r5/a/xamarin-forms-samples/WebServices/TodoAzurePush/Droid/TodoAzure.Droid.csproj]\r\n```\r\n\r\n### Version Information\r\nxamarin-android/d15-9\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->\n\n> VS bug [#660872](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/660872)"},{"Id":"8162136431","Type":"IssuesEvent","CreatedAt":"2018-08-24T10:01:10","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2101","RelatedDescription":"Opened issue \"Generate Aapt2 .flata archives on Nuget Restore.\" (#2101) at xamarin/xamarin-android","RelatedBody":"To help speed up initial build times we should investigate generating the `aapt2` flata archives for support library components when the components are restored. \r\n\r\nWe should also look again and ways we can cache these archives (with the appropriate aapt2 version) so that they can be reused across a number of projects."},{"Id":"8162082047","Type":"IssuesEvent","CreatedAt":"2018-08-24T09:50:14","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2100","RelatedDescription":"Opened issue \"Rework Layout CustomView replacement.\" (#2100) at xamarin/xamarin-android","RelatedBody":"Currently `ConvertResourcesCases` is called twice on ALL resources referenced by the project. \r\nThis is terribly inefficient. However it is required. The first pass is done before a Compile, this fixes up the casing for things like drawables etc  ready to be processed by `aapt`. The second is done after `GenerateJavaStubs` which happens AFTER the Compile step. This is to replace any custom view references with the correct `md5.View` style references. This is because we replace the normal readable  namespace with an md5 hash.\r\n\r\nThe problem is we use `ConvertResourcesCases` and it does all the processing it did in the first pass again (or tries too).\r\n\r\nSo here is an idea.\r\n\r\nOn the first pass, we create a map file which contains a list of ALL the views we find in a layout file and the file it was found in. For Example\r\n\r\n```\r\nMonoDroid.ApiDemo.Spinner1=res/layouts/custom_view.xml\r\nandroid.support.v7.FancyLayout=lp/11/res/fancylayout.xml\r\n```\r\n\r\nWe then write a new Task which will using this map file in conjunction with the `act_map.txt` (or better the typemap.jm/mj files).\r\n\r\nSample output of `act_map.txt`\r\n```\r\nMonoDroid.ApiDemo.LogTextBox;md5c5caeb16a99a36adf764572343f76a16.LogTextBox\r\nMonoDroid.ApiDemo.Spinner1;md5c5caeb16a99a36adf764572343f76a16.Spinner1\r\n```\r\n\r\n\r\nThis will allow us to speficially target the exact file(s) which contain the views we need to replace. It should save us having to parse every xml layout file and instead use dictionary lookups to quickly find the file we need to process and possibly just do a string replace.. \r\n\r\n "}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8167659694","Type":"IssuesEvent","CreatedAt":"2018-08-26T02:15:22","Actor":"tluyben","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3662","RelatedDescription":"Opened issue \"WPF ListView tab event when selected\" (#3662) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nWhen an item in the ListView is selected and you tab it again no ItemTapped event is fired. This is not a ItemSelected event but ItemTapped so I think it should fire every time. \r\n\r\nNot sure if this is a bug or a feature; to me it is a bug as it does not seem to mirror the Android/iOS Forms behavior.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Add a ListView with some Items\r\n2. listView.ItemTapped += (s, e) => { Console.WriteLine(\"Hello World!\"); } \r\n3. Tap item 1\r\n4. Tap item 2\r\n\r\n### Expected Behavior\r\n\r\nHello World!\r\nHello World!\r\n\r\n### Actual Behavior\r\n\r\nHello World!\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.1.0.697729 Xamarin.Forms WPF\r\n- Last known good version: never saw it work\r\n- IDE: Visual Studio 15.6.0 \r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - WPF: 3.1.0.697729\r\n- Nuget Packages:\r\n- Affected Devices:\r\nWindows 10\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"8167475691","Type":"IssuesEvent","CreatedAt":"2018-08-25T22:57:52","Actor":"deakjahn","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3661","RelatedDescription":"Opened issue \"Merged ResourceDictionary resources cannot be modified as DynamicResource\" (#3661) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nBack around XF 2.5 we received the possibility to specify resource dictionaries in separate files and merge them into app or page resources later. However, items (eg. colors) specified in those separate files cannot be modified in order to be used them as dynamic resource, for instance, to accomplish theming.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Check out the attached sample.\r\n2. There are twice three colors, three defined in a separate resource dictionary, three directly in the application resources.\r\n3. The app constructor tries to modify all six colors.\r\n\r\n### Expected Behavior\r\n\r\nAll buttons appear in YellowGreen.\r\n\r\n### Actual Behavior\r\n\r\nOnly half of them appear in YellowGreen.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: current\r\n- Last known good version: n/a\r\n"},{"Id":"8167145374","Type":"IssuesEvent","CreatedAt":"2018-08-25T18:17:36","Actor":"VladislavAntonyuk","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3660","RelatedDescription":"Opened issue \"WPF ListView Cell Selection Behaviour\" (#3660) at xamarin/Xamarin.Forms","RelatedBody":"Create ListView and add a few items. Add Event to command behavior on ItemTapped.\r\nClick Tab until you get focus on the first item.\r\nClick Down arrow on keyboard.\r\n\r\nAR\r\nThe second item is selected, ItemTapped event is raised\r\n\r\nER\r\nThe second item is selected.\r\n\r\nXF version 3.1 and higher\r\n"},{"Id":"8167130720","Type":"IssuesEvent","CreatedAt":"2018-08-25T18:06:48","Actor":"VladislavAntonyuk","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3659","RelatedDescription":"Opened issue \"WPF ListView Cell ContextMenu\" (#3659) at xamarin/Xamarin.Forms","RelatedBody":"Create listview with custom template\r\nFor ViewCell create contextmenu.\r\n\r\nAR\r\nRight click works the same as left click\r\n\r\nER\r\nDisplay contextmenu\r\n\r\nWorks on Andoid, iOS, macOS. \r\nVersion tested 3.1 and higher.\r\n"},{"Id":"8166721529","Type":"IssuesEvent","CreatedAt":"2018-08-25T13:07:41","Actor":"RaulBastian","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3658","RelatedDescription":"Opened issue \"System.NullReferenceException when editing XAML with Xamarin Live Reload\" (#3658) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\nWhen editing a XAML file, for instance, the background color of a ListView, with Xamarin Live Reload I get the following exception in UWP:\r\n\r\n``\r\nException thrown at 0x740DDDC2 (KernelBase.dll) in App1.UWP.exe: WinRT originate error - 0x80004003 : 'System.NullReferenceException: Object reference not set to an instance of an object.\r\n\r\nat Xamarin.Forms.Platform.UWP.ListViewRenderer.<OnCollectionChanged>b__15_0()\r\nat Xamarin.Forms.Platform.UWP.WindowsBasePlatformServices.<>c__DisplayClass2_0.<BeginInvokeOnMainThread>b__0()'.\r\n\r\nException thrown at 0x740DDDC2 (KernelBase.dll) in App1.UWP.exe: WinRT originate error - 0x80004003 : 'System.NullReferenceException: Object reference not set to an instance of an object.\r\n\r\n   at Xamarin.Forms.Platform.UWP.TaskExtensions.<>c.<WatchForError>b__2_1(Object e)\r\n   at System.Threading.WinRTSynchronizationContextBase.Invoker.InvokeCore()'.\r\n\r\nException thrown at 0x740DDDC2 (KernelBase.dll) in App1.exe: WinRT originate error - 0x80004003 : 'Object reference not set to an instance of an object.'.\r\n``\r\n\r\n### Steps to Reproduce\r\n1.  Launch UWP application with Xamarin Live Reload.\r\n2.  Edit Xaml file and save.\r\n\r\n- IDE: Visual Studio 2017 15.8.1\r\n- Platform Target Frameworks:\r\n  - UWP:  Fall Creators Update 16299 \r\n- Nuget Packages: Xamarin Live Reload v0.3.27\r\n- Affected Devices: Windows 10 Professional\r\n"},{"Id":"8166063179","Type":"IssuesEvent","CreatedAt":"2018-08-25T03:43:38","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3523","RelatedDescription":"Closed issue \"[iOS] TouchDragExit on Xamarin.Forms.Button don't fire a Release Event\" (#3523) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nThe TouchDragExit Event on the ButtonRenderer on iOS does't fire a Release Event\r\n\r\n### Steps to Reproduce\r\n\r\n1. Put a breakpoint on the release EventHandler,\r\n    Or change the style of a Button when Pressed Event and another style when Released Event\r\n2. Press the Button and move outside the Button when pressing\r\n3. The Button don't fire the Released Event.\r\n\r\n### Expected Behavior\r\nSend Release Event when TouchDragExit in ButtonRenderer\r\n```\r\n        protected override void OnElementChanged(ElementChangedEventArgs<Button> e)\r\n        {\r\n            base.OnElementChanged(e);\r\n\r\n            if (Control != null && e.NewElement is Button view)\r\n            {\r\n                Control.TouchDragExit +=  SendReleased;\r\n            }\r\n        }\r\n\r\n        protected override void Dispose(bool disposing)\r\n        {\r\n            if (Control != null)\r\n            {\r\n                Control.TouchDragExit -= SendReleased;\r\n            }\r\n\r\n            base.Dispose(disposing);\r\n        }\r\n\r\n        void SendReleased(object sender, EventArgs e)\r\n        {\r\n            ((IButtonController)Element)?.SendReleased();\r\n        }\r\n```\r\n\r\n### Basic Information\r\n\r\n- Xamarin.Forms: 3.1.0.697729\r\n"},{"Id":"8165851086","Type":"PullRequestEvent","CreatedAt":"2018-08-25T00:59:29","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3657","RelatedDescription":"Opened pull request \"[ShameHat] update System.IO.FileSystem.Primitives.dll\" (#3657) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nWhen compiling Xamarin Forms on VS Mac Alpha the following exception kept occurring\r\n\r\n```\r\n /Users/shane/Development/Xamarin.Forms/Xamarin.Forms.Core/Xamarin.Forms.Core.csproj(25,3): error MSB4018: The \"FixXFCoreAssembly\" task failed unexpectedly.\r\n    /Users/shane/Development/Xamarin.Forms/Xamarin.Forms.Core/Xamarin.Forms.Core.csproj(25,3): error MSB4018: System.MissingMethodException: Method not found: void System.IO.FileStream..ctor(string,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\r\n    /Users/shane/Development/Xamarin.Forms/Xamarin.Forms.Core/Xamarin.Forms.Core.csproj(25,3): error MSB4018:   at Mono.Cecil.ModuleDefinition.ReadModule (System.String fileName, Mono.Cecil.ReaderParameters parameters) [0x00008] in <e90892cdd8c7498085fa6bd61a0ec43a>:0 \r\n    /Users/shane/Development/Xamarin.Forms/Xamarin.Forms.Core/Xamarin.Forms.Core.csproj(25,3): error MSB4018:   at Mono.Cecil.AssemblyDefinition.ReadAssembly (System.String fileName, Mono.Cecil.ReaderParameters parameters) [0x00000] in <e90892cdd8c7498085fa6bd61a0ec43a>:0 \r\n```\r\n\r\nI replaced the System.IO.FileSystem.Primitives.dll with the netstandard 2.0.3 version and now it's no longer throwing the exception \r\n\r\nI tested this fix on\r\nVS for mac stable\r\nvs for mac alpha\r\nVS for windows stable (15.8.1)\r\n\r\n\r\n### Platforms Affected ### \r\n\r\n- Core/XAML (all platforms)\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8165753764","Type":"IssuesEvent","CreatedAt":"2018-08-25T00:03:02","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3566","RelatedDescription":"Closed issue \"Pages containing a Button with a Command are not removed from memory after PopAsync\" (#3566) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nA page containing a button that has a command bound to it will not be removed from memory after calling `PopAsync()` on Navigation. This eventually leads to a large number of pages that are still active.\r\nI have not seen these pages being GC'ed once.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create an app with two pages\r\n2. Put a button with a command in Xaml on the second page\r\n3. Navigate back and forth.\r\n4. Use the Xamarin Profiler to create snapshots, and see the amount of active pages increase. \r\n\r\n### Expected Behavior\r\n\r\nPages containing a button with a Command should be removed from memory, just like pages without them.\r\n\r\n### Actual Behavior\r\n\r\nThe pages remain in memory and consume resources, while the increasing amount of bindings that are still active eventually slow down the app.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.1.0.697729 and 3.2.0.637442-pre1\r\n- Last known good version: ¯\\\\\\_(ツ)\\_/¯ even 2.5.1 shows this behavior\r\n- IDE: VS 15.7.6\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 8.0 \r\n  - UWP:  16299\r\n- Android Support Library Version: 26.1.0.1\r\n\r\n### Screenshots\r\n\r\n![2018_08_14_08_46_18_xamarin_profiler_com companyname](https://user-images.githubusercontent.com/1593717/44081455-07ac219c-9faf-11e8-96b4-45baaa7e4b59.png)\r\n\r\n### Reproduction Link\r\n\r\n[MemoryLeakSample.zip](https://github.com/xamarin/Xamarin.Forms/files/2286187/MemoryLeakSample.zip)\r\n"},{"Id":"8165745198","Type":"IssuesEvent","CreatedAt":"2018-08-24T23:59:02","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3656","RelatedDescription":"Opened issue \"[Enhancement] Use WeakEventManager for Command.CanExecuteChanged\" (#3656) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nAs pointed out in #3566, keeping a long-running model around with a Command property makes it easy to end up leaking Pages which bind to that Command. Moving `Command`'s `CanExecuteChanged` to use the [`WeakEventManager`](https://github.com/xamarin/Xamarin.Forms/blob/9fe5372c1d80ca8fcff0c4fc397d25f91f6b61d3/Xamarin.Forms.Core/WeakEventManager.cs) may reduce the number of memory leaks caused by this pattern.\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8165773997","Type":"IssuesEvent","CreatedAt":"2018-08-25T00:13:19","Actor":"lobrien","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4698","RelatedDescription":"Opened issue \"CGAffineTransform.Scale does not work like Swift's .scaledBy(x:y:)\" (#4698) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n(Playground and Workbook attached)\r\n\r\n1. In Xcode, create a new Playground\r\n2. import CoreGraphics\r\n3. Execute:\r\n\r\n```\r\nlet xform = CGAffineTransform(translationX: 1, y: 2).scaledBy(x: 3, y: 4)\r\n\r\ndebugPrint(xform)\r\n```\r\n4. The result is `__C.CGAffineTransform(a: 3.0, b: 0.0, c: 0.0, d: 4.0, tx: 1.0, ty: 2.0)` \r\n\r\n5. Open Xamarin Workbooks\r\n6. Import CoreGraphics \r\n7. Execute what seems to be the equivalent code:\r\n\r\n```\r\nvar xlatAndScale = CGAffineTransform.MakeTranslation(1, 2);\r\nxlatAndScale.Scale(3, 4);\r\nxlatAndScale\r\n```\r\n\r\n### Expected Behavior\r\n\r\n\"Like Swift\" behavior would produce `xx:3.0 yx:0.0 xy:0.0 yy:4.0 x0:1.0 y0:2.0`\r\n\r\n### Actual Behavior\r\n\r\n\"xx:3.0 yx:0.0 xy:0.0 yy:4.0 x0:3.0 y0:8.0\"\r\n\r\nIt's clear what we're doing, but if this is what we want to do, I'd suggest another method that is `MakeTranslatedAndScaled(CGPoint translation, CGFloat scaleX, CGFloat scaleY) that just sets the values directly. \r\n\r\nAn added complexity is that the Swift code :\r\n\r\n```\r\nlet xformR = CGAffineTransform(translationX: 1, y: 2).scaledBy(x: 3, y: 4).rotated(by: 3.1417 / 4)\r\n```\r\nproduces `C.CGAffineTransform(a: 2.121263413764814, b: 2.828503029102253, c: -2.12137727182669, d: 2.828351218353085, tx: 1.0, ty: 2.0)`\r\n\r\n### Workaround\r\n\r\nSet the scale first and then set the translation:\r\n\r\n```\r\nvar scaleAndXlat = CGAffineTransform.MakeScale(3, 4);\r\nscaleAndXlat.Translate(1, 2);\r\nscaleAndXlat\r\n```\r\n Results in: `\"xx:3.0 yx:0.0 xy:0.0 yy:4.0 x0:1.0 y0:2.0\"`\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Community 2017 for Mac (Preview) ===\r\n\r\nVersion 7.6 Preview (7.6 build 1773)\r\nInstallation UUID: 6b94f136-026d-4a5a-bf6d-af2c0d8dc019\r\nRuntime:\r\n\tMono 5.12.0.273 (2018-02/f59eac4c0f1) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 512000273\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.1\r\n\t2.0.5\r\n\t2.0.3\r\n\t2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.1.301/Sdks\r\nSDK Versions:\r\n\t2.1.301\r\n\t2.1.4\r\n\t2.0.3\r\n\t2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.12.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.3\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.4.0.1 (Visual Studio Community)\r\nAndroid SDK: /Users/larryobrien/Library/Android/sdk\r\n\tSupported Android versions:\r\n\t\t4.1 (API level 16)\r\n\t\t5.0 (API level 21)\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 25.0.3\r\nSDK Build Tools Version: 27.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_162\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_162-b12)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.162-b12, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.0 (14313.2)\r\nBuild 10L213o\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.99.3.344 (Visual Studio Community)\r\nHash: 0b726519\r\nBranch: \r\nBuild date: 2018-08-09 10:37:58-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.99.3.224 (Visual Studio Community)\r\nHash: 0b726519\r\nBranch: HEAD\r\nBuild date: 2018-08-09 10:37:57-0400\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 706001773\r\nGit revision: e5958ff9015312c81fc3b1b6b6413585575ca869\r\nBuild date: 2018-06-19 12:19:27+00\r\nBuild branch: release-7.6\r\nXamarin extensions: 6910f36b43e7d559ff40ae268e73ae26c30a2a6b\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.6\r\nDarwin 17.7.0 Darwin Kernel Version 17.7.0\r\n    Thu Jun 21 22:53:14 PDT 2018\r\n    root:xnu-4570.71.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nAddinMaker 1.4.2\r\nLarry's F# Templates 2.0.8\r\nMicroFramework 1.0.3\r\nInternet of Things (IoT) development (Preview) 7.5.3\r\n\r\n\r\n```\r\n\r\n### Example Project (If Possible)\r\n\r\n\r\n[AffineTransforms.zip](https://github.com/xamarin/xamarin-macios/files/2320211/AffineTransforms.zip)\r\n"},{"Id":"8165127402","Type":"PullRequestEvent","CreatedAt":"2018-08-24T20:39:30","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4693","RelatedDescription":"Merged pull request \"Bump mono 2018-04 to head\" (#4693) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\n\n* mono/mono@d092c53b975 [eglib] Fix URI to file name conversion\n* mono/mono@582f242d47f Bump xunit-binaries\n* mono/mono@ad910039be2 Bump nunitlite to get NUnit2 xml output fix and failure on file not found fix (#10188)\n* mono/mono@172a5333ba5 [System.Xml.Linq] Fix namespace conflict with new Xamarin.Mac namespace in test code. (#10184)\n* mono/mono@f3a2216b65a backport #9800 to 2018-04\n* mono/mono@07ac0897350 Bump msbuild to track mono-2018-04 (#9834)\n\nDiff: https://github.com/mono/mono/compare/d31dbe843a556a5377a66793ee438c6f52695379...d092c53b975bae3f961d5c042efb4256037e23f2"},{"Id":"8165030340","Type":"PullRequestEvent","CreatedAt":"2018-08-24T20:16:03","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4697","RelatedDescription":"Opened pull request \"[foundation/usernotifications] Use NSString to preserve localization\" (#4697) at xamarin/xamarin-macios","RelatedBody":"- Fixes #4694: NSString.GetLocalizedUserNotificationString not working with .stringsdict files\n  (https://github.com/xamarin/xamarin-macios/issues/4694)\n- Updated `UNNotificationCategory.FromIdentifier`'s iOS 12 overload to take a `NSString` category format to preserve localization.\n- Change `GetLocalizedUserNotificationString` to only use NSString to preserve localization (similar fix to https://github.com/xamarin/xamarin-macios/pull/3266)."},{"Id":"8164558581","Type":"IssuesEvent","CreatedAt":"2018-08-24T18:27:27","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4237","RelatedDescription":"Reopened issue \"MTOUCH : error MT2002: Failed to resolve assembly: 'Newtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed'\" (#4237) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significally more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Description\r\n\r\nUncovered this with regression protection running against master bits (11.13.0.9 currently). Of the apps in regression protection it looks like only this one is affected. The same app commit builds with15.7 bits (11.11).\r\n\r\n### Steps to Reproduce\r\n\r\n1. Install XI 11.13.0.9\r\n2. Clone the SeeingAI app (internal)\r\n3. Build it in Debug config\r\n\r\n### Expected Behavior\r\n\r\nSuccessful build\r\n\r\n### Actual Behavior\r\n\r\n```\r\n2018-06-11T21:15:43.5986720Z (_CompileToNative target) -> \r\n2018-06-11T21:15:43.6019110Z   MTOUCH : error MT2002: Failed to resolve assembly: 'Newtonsoft.Json, Version=10.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed' [/Users/vsts/agent/2.134.2/work/1/s/iOS/App/SeeingAI.iOS.csproj]\r\n2018-06-11T21:15:43.6036710Z \r\n2018-06-11T21:15:43.6053430Z     85 Warning(s)\r\n2018-06-11T21:15:43.6070130Z     1 Error(s)\r\n```\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nXcode | 9.4.0 \r\nXamarin.iOS | 11.13.0.9 \r\nXamarin.Mac | 4.5.0.382\r\nVisual Studio for Mac | 7.6.0.1566\r\nMono | 5.14.0.121\r\n```\r\n\r\n### Build Logs\r\n\r\nFailed Master (11.13.0.9): http://build.devdiv.io/1764931 (see Debug config)\r\n\r\nSuccessful 15.7 RTW (11.10.1.177): http://build.devdiv.io/1745621 (see Debug config, Release is failed due to https://github.com/xamarin/xamarin-macios/issues/4235)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\nContact me on Slack and we can work out getting you access to SeeingAI app.\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9… https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":37,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/… https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":118,"FavoriteCount":75,"RawContent":null},{"Id":"1029840138099220487","CreatedAt":"2018-08-15T21:19:57+00:00","UserScreenname":"xamarinhq","Text":"Attend A #dotNETConf Event Near You - https://t.co/VrHYwnCS69\n\nIt's a FREE, 3-day virtual dev event co-organized by… https://t.co/tqMWcB8mJz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":34,"RawContent":null},{"Id":"1026898128509825024","CreatedAt":"2018-08-07T18:29:27+00:00","UserScreenname":"xamarinhq","Text":"- Authentication   - Encryption   - Integrity\n3 important requirements to securing network communications &amp; absolut… https://t.co/hDPkHLZsLA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":92,"FavoriteCount":48,"RawContent":null},{"Id":"1025442837813518336","CreatedAt":"2018-08-03T18:06:38+00:00","UserScreenname":"xamarinhq","Text":"Want to use a single code base for multiple platforms and devices? Of course you do. ...just posted to our Xamarin… https://t.co/qJBV4vvEir","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":172,"FavoriteCount":85,"RawContent":null},{"Id":"1024752638599028736","CreatedAt":"2018-08-01T20:24:02+00:00","UserScreenname":"xamarinhq","Text":"This year’s #dotNETConf is coming 9/12-14. Live sessions w/ speakers from the community &amp; it's your chance to learn… https://t.co/Nujb04dGd4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":73,"FavoriteCount":46,"RawContent":null},{"Id":"1024013376295452672","CreatedAt":"2018-07-30T19:26:28+00:00","UserScreenname":"xamarinhq","Text":"Here's everything you need to know to integrate automated visual UI tests into a dev toolchain that includes an… https://t.co/12Ihjj4bSN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":120,"FavoriteCount":57,"RawContent":null},{"Id":"1022882059763830784","CreatedAt":"2018-07-27T16:31:01+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/RGpgfHMoPZ -- Announcing Xamarin .Android support for Android 9.0 (P) now available for both #VS2017 &amp;… https://t.co/9clAy4LHZp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":83,"FavoriteCount":53,"RawContent":null},{"Id":"1022866229143461888","CreatedAt":"2018-07-27T15:28:07+00:00","UserScreenname":"xamarinhq","Text":"Previewing files from inside your Xamarin .iOS app is a great way to enhance user experience. ...and adding this fe… https://t.co/tF7v5at9xo","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":30,"RawContent":null},{"Id":"1019670557011243008","CreatedAt":"2018-07-18T19:49:40+00:00","UserScreenname":"xamarinhq","Text":"Xamarin.Forms 3.1 delivers the latest in quality improvements. We're excited to introduce Xamarin.Forms 3.1, now wi… https://t.co/qW6S2P7Hi0","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":261,"FavoriteCount":163,"RawContent":null},{"Id":"1016758939877117952","CreatedAt":"2018-07-10T18:59:56+00:00","UserScreenname":"xamarinhq","Text":"Understanding your app, it's users, &amp; their interactions helps you build a 5-star app. Application Insights w/ AppC… https://t.co/Smw5tVHZ1X","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1014949294737186816","CreatedAt":"2018-07-05T19:09:03+00:00","UserScreenname":"xamarinhq","Text":"Cool intros to new goodies in &lt;10 minutes! Explore some of the “Snack Pack” episodes that @JamesMontemagno bundled… https://t.co/80gmo35fb6","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":89,"FavoriteCount":43,"RawContent":null},{"Id":"1014903254034141190","CreatedAt":"2018-07-05T16:06:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/3RaJk3O0xb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":34,"RawContent":null},{"Id":"1014521211970379776","CreatedAt":"2018-07-04T14:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":63,"FavoriteCount":34,"RawContent":null},{"Id":"1014159326645313537","CreatedAt":"2018-07-03T14:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":40,"FavoriteCount":25,"RawContent":null},{"Id":"1013873320834445313","CreatedAt":"2018-07-02T19:53:31+00:00","UserScreenname":"xamarinhq","Text":"In today's Xamarin Podcast, @PierceBoggan &amp; @JamesMontemagno talk up latest &amp; greatest in mobile #dotNET dev; Xamar… https://t.co/chy5AhHt86","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":63,"FavoriteCount":44,"RawContent":null}]}},"RunOn":"2018-08-26T05:30:57.8978526Z","RunDurationInMilliseconds":4072}