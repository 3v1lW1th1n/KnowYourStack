{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing ML.NET 0.7 (Machine Learning .NET)","PublishedOn":"2018-11-08T20:57:16+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We&#8217;re excited to announce today the release of ML.NET 0.7 &#8211; the latest release of the cross-platform and open source machine learning framework for .NET developers (ML.NET 0.1 was released...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/08/announcing-ml-net-0-7-machine-learning-net/","RawContent":null},{"Title":"Understanding the Whys, Whats, and Whens of ValueTask","PublishedOn":"2018-11-07T18:00:31+00:00","CommentsCount":14,"FacebookCount":0,"Summary":"The .NET Framework 4 saw the introduction of the System.Threading.Tasks namespace, and with it the Task class. This type and the derived Task&#60;TResult&#62; have long since become a staple of .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/07/understanding-the-whys-whats-and-whens-of-valuetask/","RawContent":null},{"Title":"Announcing .NET Standard 2.1","PublishedOn":"2018-11-05T17:42:38+00:00","CommentsCount":93,"FacebookCount":0,"Summary":"Since we shipped .NET Standard 2.0 about a year ago, we&#8217;ve shipped two updates to .NET Core 2.1 and are about to release .NET Core 2.2. It&#8217;s time to update the standard to include some of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/05/announcing-net-standard-2-1/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3673","PublishedOn":"2018-10-30T19:27:39+00:00","CommentsCount":18,"FacebookCount":0,"Summary":"We are happy to share the next Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a single package that bundles the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/30/announcing-net-framework-4-8-early-access-build-3673/","RawContent":null},{"Title":"Bringing .NET application performance analysis to Linux","PublishedOn":"2018-10-24T21:36:02+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Both the Windows and Linux ecosystems have a swath of battle-hardened performance analysis and investigation tools. But up until recently, developers and platform engineers could use none of these...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/24/bringing-net-application-performance-analysis-to-linux/","RawContent":null},{"Title":".NET Core Source Code Analysis with Intel® VTune™ Amplifier","PublishedOn":"2018-10-23T21:04:49+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"This post was written by Varun Venkatesan, Li Tian, Denis Pravdin, who are engineers at Intel. They are excited to share .NET Core-specific enhancements that Intel has made to VTune Amplifier...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/23/net-core-source-code-analysis-with-intel-vtune-amplifier/","RawContent":null},{"Title":"Call For Participation: .NET and TypeScript at FOSDEM conference","PublishedOn":"2018-10-23T20:16:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The organizers of the FOSDEM 2019 conference have allocated a “Developer Room” on Saturday February 2nd 2019 for .NET and TypeScript discussions in Brussels Belgium.   FOSDEM is one of Europe’s most...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/23/call-for-participation-net-and-typescript-at-fosdem-conference/","RawContent":null},{"Title":".NET Framework October 2018 Preview of Quality Rollup","PublishedOn":"2018-10-18T20:44:34+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are releasing the October 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Updated Japanese dates that...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/18/net-framework-october-2018-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing .NET Core 2.2 Preview 3","PublishedOn":"2018-10-18T01:03:01+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.2 Preview 3. We have made more improvements to the overall release that we would love to get your feedback on, either in the comments or at dotnet/core #2004....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/17/announcing-net-core-2-2-preview-3/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.2 Preview 3","PublishedOn":"2018-10-17T20:10:48+00:00","CommentsCount":23,"FacebookCount":0,"Summary":"Today we are making EF Core 2.2 Preview 3 available, together with a new preview of our data provider for Cosmos DB and updated spatial extensions for various providers. Preview 3 is going to be the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/17/announcing-entity-framework-core-2-2-preview-3/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8520090559","Type":"PullRequestEvent","CreatedAt":"2018-11-01T16:20:08","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Merged pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser."},{"Id":"8448824845","Type":"PullRequestEvent","CreatedAt":"2018-10-19T12:44:07","Actor":"SeanKilleen","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Opened pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65"},{"Id":"8341294365","Type":"IssuesEvent","CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Opened issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112) at dotnet/foundation","RelatedBody":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n"},{"Id":"8203056810","Type":"IssuesEvent","CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/111","RelatedDescription":"Opened issue \"Sourcelink location is confusing\" (#111) at dotnet/home","RelatedBody":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section."},{"Id":"8173033759","Type":"PullRequestEvent","CreatedAt":"2018-08-27T16:21:56","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Merged pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8163761410","Type":"PullRequestEvent","CreatedAt":"2018-08-24T15:35:46","Actor":"jkonicki","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Opened pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8160074991","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:10:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/108","RelatedDescription":"Merged pull request \"Fix errors in projects.json\" (#108) at dotnet/home","RelatedBody":""},{"Id":"8160071932","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:09:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/109","RelatedDescription":"Merged pull request \"Add Steeltoe to the project listing\" (#109) at dotnet/home","RelatedBody":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8568937165","Type":"IssuesEvent","CreatedAt":"2018-11-11T03:57:37","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/20937","RelatedDescription":"Opened issue \"Devirtualiazation and unboxing regression\" (#20937) at dotnet/coreclr","RelatedBody":"Seen in https://github.com/dotnet/coreclr/pull/20936#issuecomment-437639304\r\n\r\nFor `AsyncTaskMethodBuilder``1:AwaitUnsafeOnCompleted(byref,byref):this`\r\n\r\nhttps://github.com/dotnet/coreclr/blob/463ba889b0c010eb9c6f9807eaf0ab4ab5624450/src/System.Private.CoreLib/src/System/Runtime/CompilerServices/AsyncMethodBuilder.cs#L382-L396\r\n\r\nIt looks like the boxing is back\r\n```asm\r\nG_M5080_IG02:\r\n       488B4D10             mov      rcx, bword ptr [rbp+10H]\r\n       488B5520             mov      rdx, bword ptr [rbp+20H]\r\n       E8E3F6FFFF           call     AsyncTaskMethodBuilder`1:GetStateMachineBox(byref):ref:this\r\n       488945E8             mov      gword ptr [rbp-18H], rax\r\n       33D2                 xor      rdx, rdx\r\n       488955E0             mov      qword ptr [rbp-20H], rdx\r\n       488D55E0             lea      rdx, bword ptr [rbp-20H]\r\n       48B9701C31A0FA7F0000 mov      rcx, 0x7FFAA0311C70\r\n       E87EE8785F           call     CORINFO_HELP_BOX\r\n       4885C0               test     rax, rax\r\n       745B                 je       SHORT G_M5080_IG04\r\n       488B5518             mov      rdx, bword ptr [rbp+18H]\r\n       48B9701C31A0FA7F0000 mov      rcx, 0x7FFAA0311C70\r\n       E866E8785F           call     CORINFO_HELP_BOX\r\n       488945A8             mov      gword ptr [rbp-58H], rax\r\n       488B55A8             mov      rdx, gword ptr [rbp-58H]\r\n       48B9D0012EA0FA7F0000 mov      rcx, 0x7FFAA02E01D0\r\n       E8AFD2785F           call     CORINFO_HELP_ISINSTANCEOFINTERFACE\r\n       4885C0               test     rax, rax\r\n       742C                 je       SHORT G_M5080_IG04\r\n       488B4D18             mov      rcx, bword ptr [rbp+18H]\r\n       E841EF8359           call     Unsafe:As(byref):byref\r\n       488945D8             mov      bword ptr [rbp-28H], rax\r\n       488B4DD8             mov      rcx, bword ptr [rbp-28H]\r\n       488B09               mov      rcx, gword ptr [rcx]\r\n       488B55E8             mov      rdx, gword ptr [rbp-18H]\r\n       41B801000000         mov      r8d, 1\r\n       E867268859           call     TaskAwaiter:UnsafeOnCompletedInternal(ref,ref,bool)\r\n       90                   nop      \r\n\r\nG_M5080_IG03:\r\n       488D65F0             lea      rsp, [rbp-10H]\r\n       5E                   pop      rsi\r\n       5F                   pop      rdi\r\n       5D                   pop      rbp\r\n       C3                   ret      \r\n\r\nG_M5080_IG04:\r\n       33D2                 xor      rdx, rdx\r\n       488955E0             mov      qword ptr [rbp-20H], rdx\r\n       488D55E0             lea      rdx, bword ptr [rbp-20H]\r\n       48B9701C31A0FA7F0000 mov      rcx, 0x7FFAA0311C70\r\n       E805E8785F           call     CORINFO_HELP_BOX\r\n       4885C0               test     rax, rax\r\n       745E                 je       SHORT G_M5080_IG06\r\n       488B5518             mov      rdx, bword ptr [rbp+18H]\r\n       48B9701C31A0FA7F0000 mov      rcx, 0x7FFAA0311C70\r\n       E8EDE7785F           call     CORINFO_HELP_BOX\r\n       488945A0             mov      gword ptr [rbp-60H], rax\r\n       488B55A0             mov      rdx, gword ptr [rbp-60H]\r\n       48B910022EA0FA7F0000 mov      rcx, 0x7FFAA02E0210\r\n       E836D2785F           call     CORINFO_HELP_ISINSTANCEOFINTERFACE\r\n       4885C0               test     rax, rax\r\n       742F                 je       SHORT G_M5080_IG06\r\n       488B4D18             mov      rcx, bword ptr [rbp+18H]\r\n       E898EDCDFF           call     Unsafe:As(byref):byref\r\n       488945D0             mov      bword ptr [rbp-30H], rax\r\n       4C8B45D0             mov      r8, bword ptr [rbp-30H]\r\n       450FB64008           movzx    r8, byte  ptr [r8+8]\r\n       488B4DD0             mov      rcx, bword ptr [rbp-30H]\r\n       488B09               mov      rcx, gword ptr [rcx]\r\n       488B55E8             mov      rdx, gword ptr [rbp-18H]\r\n       E8EB258859           call     TaskAwaiter:UnsafeOnCompletedInternal(ref,ref,bool)\r\n       90                   nop      \r\n\r\nG_M5080_IG05:\r\n       488D65F0             lea      rsp, [rbp-10H]\r\n       5E                   pop      rsi\r\n       5F                   pop      rdi\r\n       5D                   pop      rbp\r\n       C3                   ret      \r\n\r\nG_M5080_IG06:\r\n       33D2                 xor      rdx, rdx\r\n       488955E0             mov      qword ptr [rbp-20H], rdx\r\n       488D55E0             lea      rdx, bword ptr [rbp-20H]\r\n       48B9701C31A0FA7F0000 mov      rcx, 0x7FFAA0311C70\r\n       E889E7785F           call     CORINFO_HELP_BOX\r\n       4885C0               test     rax, rax\r\n       7479                 je       SHORT G_M5080_IG08\r\n       488B5518             mov      rdx, bword ptr [rbp+18H]\r\n       48B9701C31A0FA7F0000 mov      rcx, 0x7FFAA0311C70\r\n       E871E7785F           call     CORINFO_HELP_BOX\r\n       48894598             mov      gword ptr [rbp-68H], rax\r\n       488B5598             mov      rdx, gword ptr [rbp-68H]\r\n       48B980042EA0FA7F0000 mov      rcx, 0x7FFAA02E0480\r\n       E8BAD1785F           call     CORINFO_HELP_ISINSTANCEOFINTERFACE\r\n       4885C0               test     rax, rax\r\n       744A                 je       SHORT G_M5080_IG08\r\n\r\nG_M5080_IG07:\r\n       488B5518             mov      rdx, bword ptr [rbp+18H]\r\n       48B9701C31A0FA7F0000 mov      rcx, 0x7FFAA0311C70\r\n       E842E7785F           call     CORINFO_HELP_BOX\r\n       48894590             mov      gword ptr [rbp-70H], rax\r\n       488B5590             mov      rdx, gword ptr [rbp-70H]\r\n       48B980042EA0FA7F0000 mov      rcx, 0x7FFAA02E0480\r\n       E84BD2785F           call     CORINFO_HELP_CHKCASTINTERFACE\r\n       48894588             mov      gword ptr [rbp-78H], rax\r\n       488B4D88             mov      rcx, gword ptr [rbp-78H]\r\n       488B55E8             mov      rdx, gword ptr [rbp-18H]\r\n       49BB70113246FA7F0000 mov      r11, 0x7FFA46321170\r\n       3909                 cmp      dword ptr [rcx], ecx\r\n       FF156D5EB8FF         call     [IStateMachineBoxAwareAwaiter:AwaitUnsafeOnCompleted(ref):this]\r\n       EB29                 jmp      SHORT G_M5080_IG09\r\n\r\nG_M5080_IG08:\r\n       488B4DE8             mov      rcx, gword ptr [rbp-18H]\r\n       49BB68113246FA7F0000 mov      r11, 0x7FFA46321168\r\n       3909                 cmp      dword ptr [rcx], ecx\r\n       FF154D5EB8FF         call     [IAsyncStateMachineBox:get_MoveNextAction():ref:this]\r\n       48894580             mov      gword ptr [rbp-80H], rax\r\n       488B5580             mov      rdx, gword ptr [rbp-80H]\r\n       488B4D18             mov      rcx, bword ptr [rbp+18H]\r\n       E854238859           call     TaskAwaiter:UnsafeOnCompleted(ref):this\r\n       EB00                 jmp      SHORT G_M5080_IG09\r\n```\r\n\r\nRegression of https://github.com/dotnet/coreclr/pull/14698?\r\n\r\n/cc @AndyAyersMS @stephentoub "},{"Id":"8568719914","Type":"PullRequestEvent","CreatedAt":"2018-11-11T00:49:51","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20936","RelatedDescription":"Opened pull request \"[RFC] Reusable ThreadPool workitems\" (#20936) at dotnet/coreclr","RelatedBody":"For the global threadpool queue workitems can be reused.\r\n\r\nThis introduces a threadpool thread local pool (64 items) and a global pool (256 items). \r\n\r\nThere are two types of pools; one for `WaitCallback` and one for `Action<TState>`.\r\n\r\nItems are returned to the threadpool local pool of the thread they execute on; when that is full they are returned to the global pool; until full then they are discarded.\r\n\r\nQueued items from a threadpool thread first attempt to get an item from their local pool, then the global pool, then they create a new item.\r\n\r\nQueued items from a non-threadpool thread first attempt to get an item from the global pool, then they create a new item.\r\n\r\nItems queued to the thread local work queues, rather than the global queue do not use reusable items.\r\n\r\nGeneric `Action<TState>` items are only pooled if they are an object type; as they are stored as `object` and pass through a type converter to execute; which would box value-types.\r\n\r\nBefore\r\n![image](https://user-images.githubusercontent.com/1142958/48306616-b8200880-e533-11e8-9ecb-ba5fc99453aa.png)\r\n\r\n\r\nAfter\r\n![image](https://user-images.githubusercontent.com/1142958/48307596-2f5f9780-e548-11e8-94e8-6d265d5e650d.png)\r\n\r\n\r\n/cc @stephentoub @davidfowl "},{"Id":"8568668893","Type":"PullRequestEvent","CreatedAt":"2018-11-11T00:08:16","Actor":"jkoritzinsky","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20892","RelatedDescription":"Closed pull request \"Add `KeepAlive` for marshalled classes in `tests\\src\\Interop\\PInvoke\\Delegate\\MarshalDelegateAsField`\" (#20892) at dotnet/coreclr","RelatedBody":"Fixes #20689.\r\n\r\nIf these classes are collected during tranfer from `preemptive` to `cooperative` mode when native function calls our delegate then we collect the delegate as well.\r\n\r\n`extern \"C\" DLL_EXPORT BOOL STDMETHODCALLTYPE TakeDelegateAsFieldInClass_Exp(Class1_FuncPtrAsField4_Exp *cfe)\r\n` \r\ndoes: \r\n`return cfe->verification && (cfe->funcPtr() == COMMONMETHODCALLED_RIGHT_RETVAL);`\r\n\r\n`cfe->funcPtr()` is unmanaged to managed transition, at this point `cfe` must be kept alive.\r\n\r\n\r\nNote: `AsInterfaceTest` did not fail, but I think it is safer to fix them as well."},{"Id":"8568668773","Type":"IssuesEvent","CreatedAt":"2018-11-11T00:08:11","Actor":"jkoritzinsky","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/20689","RelatedDescription":"Closed issue \"2 test failed in x86_checked_windows_nt_gcstress0x3\" (#20689) at dotnet/coreclr","RelatedBody":"**job**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x86/job/jitstress/job/x86_checked_windows_nt_gcstress0x3/101/#showFailuresLink\r\n\r\n**failed tests**\r\nInterop_PInvoke._Delegate_MarshalDelegateAsField_AsFunctionPtr_AsFunctionPtrTest_AsFunctionPtrTest_._Delegate_MarshalDelegateAsField_AsFunctionPtr_AsFunctionPtrTest_AsFunctionPtrTest_cmd\r\nInterop_PInvoke._Delegate_MarshalDelegateAsField_AsDefault_AsDefaultTest_AsDefaultTest_._Delegate_MarshalDelegateAsField_AsDefault_AsDefaultTest_AsDefaultTest_cmd\r\n**log:**\r\n```\r\nInterop_PInvoke._Delegate_MarshalDelegateAsField_AsFunctionPtr_AsFunctionPtrTest_AsFunctionPtrTest_._Delegate_MarshalDelegateAsField_AsFunctionPtr_AsFunctionPtrTest_AsFunctionPtrTest_cmd [FAIL]\r\n        \r\n  \r\n  Return code:      1\r\n  Raw output file:      D:\\j\\workspace\\x86_checked_w---71335245\\bin\\tests\\Windows_NT.x86.Checked\\Reports\\Interop.PInvoke\\Delegate\\MarshalDelegateAsField\\AsFunctionPtr\\AsFunctionPtrTest\\AsFunctionPtrTest.output.txt\r\n  Raw output:\r\n  BEGIN EXECUTION\r\n         \"D:\\j\\workspace\\x86_checked_w---71335245\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\\corerun.exe\" AsFunctionPtrTest.exe \r\n        Scenario 1 : Delegate marshaled as field in struct with Sequential.\r\n        \r\n  \r\n  Scenario 2 : Delegate marshaled as field in struct with Explicit.\r\n        \r\n  \r\n  Scenario 3 : Delegate marshaled as field in class with Sequential.\r\n        Expected: 100\r\n        Actual: -1073741819\r\n        END EXECUTION - FAILED\r\n        FAILED\r\n        Test Harness Exitcode is : 1\r\n        \r\n  To run the test:\r\n  > set CORE_ROOT=D:\\j\\workspace\\x86_checked_w---71335245\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\r\n  > D:\\j\\workspace\\x86_checked_w---71335245\\bin\\tests\\Windows_NT.x86.Checked\\Interop\\PInvoke\\Delegate\\MarshalDelegateAsField\\AsFunctionPtr\\AsFunctionPtrTest\\AsFunctionPtrTest.cmd\r\n  \r\n        Expected: True\r\n        Actual:   False\r\n        Stack Trace:\r\n          D:\\j\\workspace\\x86_checked_w---71335245\\bin\\tests\\Windows_NT.x86.Checked\\TestWrappers\\Interop.PInvoke\\Interop.PInvoke.XUnitWrapper.cs(249,0): at Interop_PInvoke._Delegate_MarshalDelegateAsField_AsFunctionPtr_AsFunctionPtrTest_AsFunctionPtrTest_._Delegate_MarshalDelegateAsField_AsFunctionPtr_AsFunctionPtrTest_AsFunctionPtrTest_cmd()\r\n```\r\n\r\n```\r\nInterop_PInvoke._Delegate_MarshalDelegateAsField_AsDefault_AsDefaultTest_AsDefaultTest_._Delegate_MarshalDelegateAsField_AsDefault_AsDefaultTest_AsDefaultTest_cmd [FAIL]\r\n        \r\n  \r\n  Return code:      1\r\n  Raw output file:      D:\\j\\workspace\\x86_checked_w---71335245\\bin\\tests\\Windows_NT.x86.Checked\\Reports\\Interop.PInvoke\\Delegate\\MarshalDelegateAsField\\AsDefault\\AsDefaultTest\\AsDefaultTest.output.txt\r\n  Raw output:\r\n  BEGIN EXECUTION\r\n         \"D:\\j\\workspace\\x86_checked_w---71335245\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\\corerun.exe\" AsDefaultTest.exe \r\n        Scenario 1 : Delegate marshaled as field in struct with Sequential.\r\n        \r\n  \r\n  Scenario 2 : Delegate marshaled as field in struct with Explicit.\r\n        \r\n  \r\n  Scenario 3 : Delegate marshaled as field in class with Sequential.\r\n        Expected: 100\r\n        Actual: -1073741819\r\n        END EXECUTION - FAILED\r\n        FAILED\r\n        Test Harness Exitcode is : 1\r\n        \r\n  To run the test:\r\n  > set CORE_ROOT=D:\\j\\workspace\\x86_checked_w---71335245\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\r\n  > D:\\j\\workspace\\x86_checked_w---71335245\\bin\\tests\\Windows_NT.x86.Checked\\Interop\\PInvoke\\Delegate\\MarshalDelegateAsField\\AsDefault\\AsDefaultTest\\AsDefaultTest.cmd\r\n  \r\n        Expected: True\r\n        Actual:   False\r\n        Stack Trace:\r\n          D:\\j\\workspace\\x86_checked_w---71335245\\bin\\tests\\Windows_NT.x86.Checked\\TestWrappers\\Interop.PInvoke\\Interop.PInvoke.XUnitWrapper.cs(179,0): at Interop_PInvoke._Delegate_MarshalDelegateAsField_AsDefault_AsDefaultTest_AsDefaultTest_._Delegate_MarshalDelegateAsField_AsDefault_AsDefaultTest_AsDefaultTest_cmd()\r\n```\r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8567968192","Type":"IssuesEvent","CreatedAt":"2018-11-10T17:02:10","Actor":"bernd5","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/964","RelatedDescription":"Closed issue \"Why including everything into netstandard\" (#964) at dotnet/standard","RelatedBody":"Hello,\r\nwhy is net standard growing so much? Wouldn't it be better to provide new APIs via normal libraries?\r\nFor other platforms it becomes very hard to implement all changes in net standard.\r\n\r\nThe good thing is, that we have the coreFx repository which contains almost all standard APIs. But one problem is, that it has some strong (not documented) dependencies to the underlying runtime (e.g. RuntimeThread). Theres no indicator which says \"this type needs special runtime support\". For some types this is obvious, e.g. it's clear that Int32 can't be implemented by a value of \"Int32\". But for others not!\r\n\r\nTo implement net standard I would like to have two sets of APIs. One which needs special runtime Handling (like Delegate, Int32, String, Thread ...). And another one which has only non special APIs like Dicitionaries, Lists, Color (all types which can be implemented without any special runtime support)."},{"Id":"8567597502","Type":"PullRequestEvent","CreatedAt":"2018-11-10T13:16:22","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/965","RelatedDescription":"Merged pull request \"[Darc-Update] Update dependencies from build 20181109.22 of https://github.com/dotnet/arcade\" (#965) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18559.22\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18559.22.symbols.nupkg - 2.2.0-beta.18559.22\n- symbols/Microsoft.DotNet.Build.Tasks.Packaging.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.CodeAnalysis.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.SignCheck.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.SwaggerGenerator.CmdLine.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.SwaggerGenerator.MSBuild.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18559.22.symbols.nupkg - 2.4.0-beta.18559.22\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- Microsoft.DotNet.SwaggerGenerator.MSBuild - 1.0.0-beta.18559.22\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18559.22\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18559.22\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18559.22\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18559.22\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Darc - 1.0.0-beta.18559.22\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18559.22\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18559.22\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18559.22\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18559.22\n- Microsoft.DotNet.SignCheck - 1.0.0-beta.18559.22\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18559.22\n- Microsoft.DotNet.SwaggerGenerator.CmdLine - 1.0.0-beta.18559.22\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18559.22"},{"Id":"8567575183","Type":"PullRequestEvent","CreatedAt":"2018-11-10T13:01:18","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/965","RelatedDescription":"Opened pull request \"[Darc-Update] Update dependencies from build 20181109.22 of https://github.com/dotnet/arcade\" (#965) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18559.22\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18559.22.symbols.nupkg - 2.2.0-beta.18559.22\n- symbols/Microsoft.DotNet.Build.Tasks.Packaging.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.CodeAnalysis.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.SignCheck.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.SwaggerGenerator.CmdLine.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.SwaggerGenerator.MSBuild.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18559.22.symbols.nupkg - 2.4.0-beta.18559.22\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- Microsoft.DotNet.SwaggerGenerator.MSBuild - 1.0.0-beta.18559.22\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18559.22\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18559.22\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18559.22\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18559.22\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Darc - 1.0.0-beta.18559.22\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18559.22\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18559.22\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18559.22\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18559.22\n- Microsoft.DotNet.SignCheck - 1.0.0-beta.18559.22\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18559.22\n- Microsoft.DotNet.SwaggerGenerator.CmdLine - 1.0.0-beta.18559.22\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18559.22"},{"Id":"8567330842","Type":"IssuesEvent","CreatedAt":"2018-11-10T10:00:30","Actor":"bernd5","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/964","RelatedDescription":"Opened issue \"Why including everything into netstandard\" (#964) at dotnet/standard","RelatedBody":"Hello,\r\nwhy is net standard growing so much? Wouldn't it be better to provide new APIs via normal libraries?\r\nFor other platforms it becomes very hard to implement all changes in net standard.\r\n\r\nThe good thing is, that we have the coreFx repository which contains almost all standard APIs. But one problem is, that it has some strong (not documented) dependencies to the underlying runtime (e.g. RuntimeThread). Theres no indicator which says \"this type needs special runtime support\". For some types this is obvious, e.g. it's clear that Int32 can't be implemented by a value of \"Int32\". But for others not!\r\n\r\nTo implement net standard I would like to have two sets of APIs. One which needs special runtime Handling (like Delegate, Int32, String, Thread ...). And another one which has only non special APIs like Dicitionaries, Lists, Color (all types which can be implemented without any special runtime support)."},{"Id":"8566137211","Type":"PullRequestEvent","CreatedAt":"2018-11-09T22:29:25","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/963","RelatedDescription":"Merged pull request \"Add ISOWeek\" (#963) at dotnet/standard","RelatedBody":"This fixes #956 "},{"Id":"8566137198","Type":"IssuesEvent","CreatedAt":"2018-11-09T22:29:24","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/956","RelatedDescription":"Closed issue \"Include System.Globalization.ISOWeek\" (#956) at dotnet/standard","RelatedBody":"I'd like to propose the inclusion of the new `System.Globalization.ISOWeek` APIs, added in https://github.com/dotnet/corefx/pull/30386.\r\n\r\nI would consider these pretty fundamental APIs that would be useful on all the current .NET platforms.\r\n\r\nThe implementation doesn't have a lot of dependencies and could probably be (more or less) copied to other platforms.\r\n\r\n```patch\r\ndiff --git a/netstandard/ref/System.Globalization.cs b/netstandard/ref/System.Globalization.cs\r\nindex 995ce25..4214d5a 100644\r\n--- a/netstandard/ref/System.Globalization.cs\r\n+++ b/netstandard/ref/System.Globalization.cs\r\n@@ -446,6 +446,15 @@ namespace System.Globalization\r\n         public string GetUnicode(string ascii, int index) { throw null; }\r\n         public string GetUnicode(string ascii, int index, int count) { throw null; }\r\n     }\r\n+    public static partial class ISOWeek\r\n+    {\r\n+        public static int GetWeekOfYear(System.DateTime date) { throw null; }\r\n+        public static int GetWeeksInYear(int year) { throw null; }\r\n+        public static int GetYear(System.DateTime date) { throw null; }\r\n+        public static System.DateTime GetYearEnd(int year) { throw null; }\r\n+        public static System.DateTime GetYearStart(int year) { throw null; }\r\n+        public static System.DateTime ToDateTime(int year, int week, System.DayOfWeek dayOfWeek) { throw null; }\r\n+    }\r\n     public partial class JapaneseCalendar : System.Globalization.Calendar\r\n     {\r\n         public JapaneseCalendar() { }\r\n```"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8568867747","Type":"PullRequestEvent","CreatedAt":"2018-11-11T02:56:42","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33397","RelatedDescription":"Opened pull request \"Update CoreClr to preview-27111-01 (master)\" (#33397) at dotnet/corefx","RelatedBody":""},{"Id":"8568800371","Type":"IssuesEvent","CreatedAt":"2018-11-11T01:58:29","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/33396","RelatedDescription":"Opened issue \"Include actual index in IndexOutOfRange message\" (#33396) at dotnet/corefx","RelatedBody":"When testing, if you hit an IndexOutOfRangeException through out of bounds array access, it is sometimes helpful to know what the index was, to save firing up a debugger (if it will even repro).\r\n\r\nIn this context the exception is instantiated by the VM/JIT. I do not know whether this would affect performance.\r\n```\r\n> var a = new int[0];\r\n> a[0]\r\nIndex was outside the bounds of the array.\r\n```"},{"Id":"8568669464","Type":"PullRequestEvent","CreatedAt":"2018-11-11T00:08:42","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/33394","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#33394) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub"},{"Id":"8568669173","Type":"PullRequestEvent","CreatedAt":"2018-11-11T00:08:29","Actor":"tarekgh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/33352","RelatedDescription":"Merged pull request \"Expose Index and Range with adding tests\" (#33352) at dotnet/corefx","RelatedBody":""},{"Id":"8568661189","Type":"PullRequestEvent","CreatedAt":"2018-11-11T00:02:26","Actor":"GrabYourPitchforks","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33395","RelatedDescription":"Opened pull request \"System.Text.Rune ref APIs and unit tests\" (#33395) at dotnet/corefx","RelatedBody":"Reference assembly APIs and unit tests for https://github.com/dotnet/coreclr/pull/20935\r\n\r\nThis PR will not pass CI until the underlying coreclr change makes its way over."},{"Id":"8568365788","Type":"PullRequestEvent","CreatedAt":"2018-11-10T20:45:28","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33394","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#33394) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8568357184","Type":"PullRequestEvent","CreatedAt":"2018-11-10T20:40:07","Actor":"stevenaw","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33393","RelatedDescription":"Opened pull request \"Utf8JsonReader.cs - Add support for single line comments ending on \\r, \\r\\n\" (#33393) at dotnet/corefx","RelatedBody":"Add support in `Utf8JsonReader` in `System.Text.Json` to parse single line comments ending in `\\r`, `\\r\\n`\r\n\r\nFixes: https://github.com/dotnet/corefx/issues/33293\r\n\r\ncc: @ahsonkhan, @steveharter"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8568835654","Type":"PullRequestEvent","CreatedAt":"2018-11-11T02:28:51","Actor":"srivatsn","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30988","RelatedDescription":null,"RelatedBody":"**Customer scenario**\r\nLiveShare has versions of dlls specific to VS versions to accommodate breaking changes and to be able to ship downlevel. For completion, we need a 16.0 version of the same dlls as before and this change adds that.\r\n\r\n**Bugs this fixes**\r\n\r\n\r\n**Workarounds, if any**\r\n\r\n\r\n**Risk**\r\n\r\n\r\n**Performance impact**\r\n\r\n\r\n**Is this a regression from a previous update?**\r\n\r\n**Root cause analysis**\r\n\r\n**How was the bug found?**\r\n\r\n\r\n**Test documentation updated?**\r\n"},{"Id":"8568835590","Type":"PullRequestEvent","CreatedAt":"2018-11-11T02:28:48","Actor":"srivatsn","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/pull/30988","RelatedDescription":"Closed pull request \"Add IVTs to 16.0 version of RemoteLS\" (#30988) at dotnet/roslyn","RelatedBody":"**Customer scenario**\r\nLiveShare has versions of dlls specific to VS versions to accommodate breaking changes and to be able to ship downlevel. For completion, we need a 16.0 version of the same dlls as before and this change adds that.\r\n\r\n**Bugs this fixes**\r\n\r\n\r\n**Workarounds, if any**\r\n\r\n\r\n**Risk**\r\n\r\n\r\n**Performance impact**\r\n\r\n\r\n**Is this a regression from a previous update?**\r\n\r\n**Root cause analysis**\r\n\r\n**How was the bug found?**\r\n\r\n\r\n**Test documentation updated?**\r\n"},{"Id":"8568755354","Type":"IssuesEvent","CreatedAt":"2018-11-11T01:19:49","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31104","RelatedDescription":"Opened issue \"Dev16 stops while writing code\" (#31104) at dotnet/roslyn","RelatedBody":"The app just closes unexpectendly when writing code.\nWhat do I need to share to diagnose the problem?\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/373302/dev16-stops-while-writing-code.html\nVSTS ticketId: 721695_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8567472541","Type":"PullRequestEvent","CreatedAt":"2018-11-10T11:48:31","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6555","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#6555) at dotnet/corert","RelatedBody":""},{"Id":"8567471993","Type":"PullRequestEvent","CreatedAt":"2018-11-10T11:48:06","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6555","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#6555) at dotnet/corert","RelatedBody":""},{"Id":"8566968610","Type":"PullRequestEvent","CreatedAt":"2018-11-10T05:11:55","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6550","RelatedDescription":"Merged pull request \"Update RyuJIT\" (#6550) at dotnet/corert","RelatedBody":"...mostly because I don't want us to forget to pick up the matching JitInterface change from dotnet/coreclr#20814. No JitInterface change this time.\r\n\r\nObject stack allocation doesn't work yet for R2R compilations because we seem to be pattern matching against `ALLOCOBJ  ref`, when in ready to run we have `CALL help ref    HELPER.CORINFO_HELP_READYTORUN_NEW`.\r\n\r\nIt doesn't seem like we need to port the changes in `getClassGClayout` because CoreRT class layout information includes the EEType field in reference types, whereas CoreCLR doesn't."},{"Id":"8566958738","Type":"IssuesEvent","CreatedAt":"2018-11-10T05:03:52","Actor":"gqqnbig","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6554","RelatedDescription":"Opened issue \"System.MissingMethodException : Method 'System.Xml.Serialization.XmlElementAttribute..ctor' not found.\" (#6554) at dotnet/corert","RelatedBody":"## Steps to reproduce:\r\n\r\n1. Create a .NET Core 2.1 Console project,\r\n2. Create a file as the following.\r\n\r\n```\r\nusing System;\r\nusing System.Xml.Serialization;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n\tclass Program\r\n\t{\r\n\t\tstatic void Main(string[] args)\r\n\t\t{\r\n\t\t\tvar serializer = new XmlSerializer(typeof(C));\r\n\t\t\tvar c = new C(2);\r\n\t\t\tserializer.Serialize(Console.Out, c);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tpublic class C\r\n\t{\r\n\t\t[XmlElement(\"Number\",typeof(int))]\r\n\t\tpublic int N { get; set; }\r\n\r\n\t\tpublic C(int n)\r\n\t\t{\r\n\t\t\tN = n;\r\n\t\t}\r\n\r\n\t\tpublic C()\r\n\t\t{\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n3. Compile the project against CoreRT revision 14c335f2547bbcae19ff2cc8adc1c571e4d219fa with command \r\n\r\n> dotnet publish -r win-x64 -c release\r\n> 用于 .NET Core 的 Microsoft (R) 生成引擎版本 15.8.166+gd4e8d81a88\r\n> 版权所有(C) Microsoft Corporation。保留所有权利。\r\n> \r\n> C:\\Users\\gqqnbig\\source\\repos\\ConsoleApp1\\ConsoleApp1\\ConsoleApp1.csproj : warning MSB4011: 无法再次导入“C:\\Program Files\\dotnet\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\Sdk\\Sdk.targets”。可能已在“C:\\Users\\gqqnbig\\source\\repos\\ConsoleApp1\\ConsoleApp1\\ConsoleApp1.csproj (7,3)”处导入过它。这很可能是生成创作错误。将忽略此后续导入。\r\n> C:\\Users\\gqqnbig\\source\\repos\\ConsoleApp1\\ConsoleApp1\\ConsoleApp1.csproj : warning MSB4011: 无法再次导入“C:\\Program Files\\dotnet\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\Sdk\\Sdk.targets”。可能已在“C:\\Users\\gqqnbig\\source\\repos\\ConsoleApp1\\ConsoleApp1\\ConsoleApp1.csproj (7,3)”处导入过它。这很可能是生成创作错误。将忽略此后续导入。\r\n>   C:\\Users\\gqqnbig\\source\\repos\\ConsoleApp1\\ConsoleApp1\\ConsoleApp1.csproj 的还原在 46.24 ms 内完成。\r\n> C:\\Users\\gqqnbig\\source\\repos\\ConsoleApp1\\ConsoleApp1\\ConsoleApp1.csproj : warning MSB4011: 无法再次导入“C:\\Program Files\\dotnet\\sdk\\2.1.401\\Sdks\\Microsoft.NET.Sdk\\Sdk\\Sdk.targets”。可能已在“C:\\Users\\gqqnbig\\source\\repos\\ConsoleApp1\\ConsoleApp1\\ConsoleApp1.csproj (7,3)”处导入过它。这很可能是生成创作错误。将忽略此后续导入。\r\n>   ConsoleApp1 -> C:\\Users\\gqqnbig\\source\\repos\\ConsoleApp1\\ConsoleApp1\\bin\\release\\netcoreapp2.1\\win-x64\\ConsoleApp1.dll\r\n>   Generating native code\r\n>   ConsoleApp1 -> C:\\Users\\gqqnbig\\source\\repos\\ConsoleApp1\\ConsoleApp1\\bin\\release\\netcoreapp2.1\\win-x64\\publish\\\r\n\r\n4. Run ConsoleApp1.exe\r\n\r\n## What is expected\r\n\r\nConsoleApp1.exe runs without exception.\r\n\r\n## What happens actually\r\n\r\n> ConsoleApp1.exe\r\n> Unhandled Exception: System.InvalidOperationException: There was an error generating the XML document. ---> System.InvalidOperationException: There was an error reflecting type 'ConsoleApp1.C'. ---> System.MissingMethodException: Method 'System.Xml.Serialization.XmlElementAttribute..ctor' not found.\r\n>    at Internal.Reflection.Extensions.NonPortable.CustomAttributeInstantiator.Instantiate(CustomAttributeData) + 0x528\r\n>    at ConsoleApp1!<BaseAddress>+0x201f38\r\n>    at ConsoleApp1!<BaseAddress>+0x207bac\r\n>    at ConsoleApp1!<BaseAddress>+0x7b289\r\n>    at System.Xml.Serialization.XmlAttributes..ctor(ICustomAttributeProvider) + 0xe9\r\n>    at ConsoleApp1!<BaseAddress>+0x17bdfa\r\n>    at ConsoleApp1!<BaseAddress>+0x17e882\r\n>    at ConsoleApp1!<BaseAddress>+0x17dff0\r\n>    at ConsoleApp1!<BaseAddress>+0x17cd85\r\n> \r\n>    --- End of inner exception stack trace ---\r\n>    at ConsoleApp1!<BaseAddress>+0x17ce4e\r\n>    at ConsoleApp1!<BaseAddress>+0x17beb9\r\n>    at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type, XmlRootAttribute, String) + 0x7a\r\n>    at ConsoleApp1!<BaseAddress>+0x188f55\r\n>    at ConsoleApp1!<BaseAddress>+0x188e75\r\n>    at System.Xml.Serialization.XmlSerializer.Serialize(XmlWriter, Object, XmlSerializerNamespaces, String, String) + 0xc1\r\n> \r\n>    --- End of inner exception stack trace ---\r\n>    at System.Xml.Serialization.XmlSerializer.Serialize(XmlWriter, Object, XmlSerializerNamespaces, String, String) + 0x29a\r\n>    at System.Xml.Serialization.XmlSerializer.Serialize(TextWriter, Object, XmlSerializerNamespaces) + 0x5f\r\n>    at ConsoleApp1.Program.Main(String[]) + 0x66\r\n>    at ConsoleApp1!<BaseAddress>+0x206ba6\r\n> \r\n\r\n\r\nHow do I fix it?"},{"Id":"8566895128","Type":"IssuesEvent","CreatedAt":"2018-11-10T04:12:36","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6548","RelatedDescription":"Closed issue \"5 million  times of List<T>.Add will cause program hang in GC even memory usage was little\" (#6548) at dotnet/corert","RelatedBody":"5 million times of List<T>.Add will cause program to hang in GC even memory usage was little\r\n\r\n\r\n```\r\n\r\n\t    static void test()\r\n\t    {\r\n\r\n\t\t    List<Test2> test = new List<Test2>();\r\n\r\n\t\t    Test2 t2;\r\n\t\t    t2.y = 11;\r\n\r\n\t\t\tStopwatch stopwatch = new Stopwatch();\r\n\t\t    stopwatch.Start();\r\n\t\t    for (int i = 0; i < 5000000; i++)\r\n\t\t    {\r\n\r\n\t\t\t    //vectorEmplaceBack(vectorFunctions.pVector,&t2);\r\n\t\t\t    test.Add(t2);\r\n\t\t    }\r\n\t\t    stopwatch.Stop();\r\n\t\t    Console.WriteLine(\"c# time:\" + stopwatch.ElapsedMilliseconds);\r\n\r\n\t\t}\r\n```\r\n\r\n\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/29968862/48242821-ec060b80-e417-11e8-8bd9-3f7824369efe.png)\r\n\r\n\r\nmemory usage at the time of hang was 60MB in taskmgr\r\n\r\nwas static linked in C++ with x64 release ,however I believe it can reproduce in other cases"},{"Id":"8566699556","Type":"PullRequestEvent","CreatedAt":"2018-11-10T01:57:51","Actor":"yowl","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6553","RelatedDescription":"Opened pull request \"WIP: wasm: add method reference for delegate parameters to pinvokes\" (#6553) at dotnet/corert","RelatedBody":"This change gets the delegate wrapper for the pinvoke added to the dependencies so the function is defined in the LLVM and not just declared.  This would resolve #6525 but, I think, it is subject to the same problem as #6415.  This is the stacktrace from the test included here which is similar:\r\n\r\n```\r\nexception thrown: abort() at jsStackTrace@http://localhost:6931/HelloWasm.js:1059:13\r\nstackTrace@http://localhost:6931/HelloWasm.js:1076:12\r\nabort@http://localhost:6931/HelloWasm.js:7982:44\r\n_abort@http://localhost:6931/HelloWasm.js:5751:7\r\n__Z6AssertPKcS0_jS0_@http://localhost:6931/HelloWasm.wasm:wasm-function[19635]:0x9d23da\r\n_RhGetCommonStubAddress@http://localhost:6931/HelloWasm.wasm:wasm-function[21362]:0xad0a87\r\n_S_P_CoreLib_System_Runtime_InteropServices_PInvokeMarshal__AllocateThunk@http://localhost:6931/HelloWasm.wasm:wasm-function[2087]:0x15cc1b\r\n_S_P_CoreLib_System_Runtime_CompilerServices_ConditionalWeakTable_2_CreateValueCallback_S_P_CoreLib_System_Delegate__S_P_CoreLib_System_Runtime_InteropServices_PInvokeMarshal_PInvokeDelegateThunk___InvokeOpenStaticThunk@http://localhost:6931/HelloWasm.wasm:wasm-function[2088]:0x15cf57\r\n_S_P_CoreLib_System_Runtime_CompilerServices_ConditionalWeakTable_2_CreateValueCallback_S_P_CoreLib_System_Delegate__S_P_CoreLib_System_Runtime_InteropServices_PInvokeMarshal_PInvokeDelegateThunk___Invoke@http://localhost:6931/HelloWasm.wasm:wasm-function[3097]:0x1c76e7\r\n_S_P_CoreLib_System_Runtime_CompilerServices_ConditionalWeakTable_2_S_P_CoreLib_System_Delegate__S_P_CoreLib_System_Runtime_InteropServices_PInvokeMarshal_PInvokeDelegateThunk___GetValueLocked@http://localhost:6931/HelloWasm.wasm:wasm-function[2091]:0x15d403\r\n_S_P_CoreLib_System_Runtime_CompilerServices_ConditionalWeakTable_2_S_P_CoreLib_System_Delegate__S_P_CoreLib_System_Runtime_InteropServices_PInvokeMarshal_PInvokeDelegateThunk___GetValue@http://localhost:6931/HelloWasm.wasm:wasm-function[2089]:0x15d173\r\n_S_P_CoreLib_System_Runtime_InteropServices_PInvokeMarshal__GetFunctionPointerForDelegate@http://localhost:6931/HelloWasm.wasm:wasm-function[1351]:0x117a5e\r\n_S_P_CoreLib_Internal_Runtime_CompilerHelpers_InteropHelpers__GetFunctionPointerForDelegate@http://localhost:6931/HelloWasm.wasm:wasm-function[1349]:0x11765d\r\n_HelloWasm_Program__emscripten_set_main_loop@http://localhost:6931/HelloWasm.wasm:wasm-function[682]:0xd8c04\r\n_HelloWasm_Program__TestRegisterOfNativeCallback@http://localhost:6931/HelloWasm.wasm:wasm-function[675]:0xd887f\r\n_HelloWasm_Program__Main@http://localhost:6931/HelloWasm.wasm:wasm-function[344]:0xb2eb0\r\n_HelloWasm__Module___MainMethodWrapper@http://localhost:6931/HelloWasm.wasm:wasm-function[338]:0xaf2f2\r\n_StartupCodeMain@http://localhost:6931/HelloWasm.wasm:wasm-function[327]:0xaee49\r\n___managed__Main@http://localhost:6931/HelloWasm.wasm:wasm-function[19633]:0x9d238d\r\n_main@http://localhost:6931/HelloWasm.wasm:wasm-function[21492]:0xad74c0\r\nModule._main@http://localhost:6931/HelloWasm.js:7546:10\r\ncallMain@http://localhost:6931/HelloWasm.js:7855:15\r\ndoRun@http://localhost:6931/HelloWasm.js:7913:42\r\nrun/<@http://localhost:6931/HelloWasm.js:7924:7\r\n```\r\n\r\n@morganbr this also gets me closer to creating a PR for #5842 as it removes the undefined function so if you think its worthwhile it could be merged, without the test?"},{"Id":"8566059048","Type":"PullRequestEvent","CreatedAt":"2018-11-09T22:09:58","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6549","RelatedDescription":"Merged pull request \"Add WASM test for RVA static fields\" (#6549) at dotnet/corert","RelatedBody":"As requested in https://github.com/dotnet/corert/pull/6531#issuecomment-437121169."},{"Id":"8565662014","Type":"PullRequestEvent","CreatedAt":"2018-11-09T20:40:35","Actor":"dotnet-maestro-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6552","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr,corefx\" (#6552) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"8565657384","Type":"PullRequestEvent","CreatedAt":"2018-11-09T20:39:35","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6547","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx\" (#6547) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @tannergooding"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"8567575803","Type":"PullRequestEvent","CreatedAt":"2018-11-10T13:01:41","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2658","RelatedDescription":"Opened pull request \"[Darc-Update] Update dependencies from build 20181109.22 of https://github.com/dotnet/arcade\" (#2658) at dotnet/sdk","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18559.22\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18559.22.symbols.nupkg - 2.2.0-beta.18559.22\n- symbols/Microsoft.DotNet.Build.Tasks.Packaging.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.CodeAnalysis.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.SignCheck.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.SwaggerGenerator.CmdLine.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.SwaggerGenerator.MSBuild.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18559.22.symbols.nupkg - 2.4.0-beta.18559.22\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18559.22.symbols.nupkg - 1.0.0-beta.18559.22\n- Microsoft.DotNet.SwaggerGenerator.MSBuild - 1.0.0-beta.18559.22\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18559.22\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18559.22\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18559.22\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18559.22\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Darc - 1.0.0-beta.18559.22\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18559.22\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18559.22\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18559.22\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18559.22\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18559.22\n- Microsoft.DotNet.SignCheck - 1.0.0-beta.18559.22\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18559.22\n- Microsoft.DotNet.SwaggerGenerator.CmdLine - 1.0.0-beta.18559.22\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18559.22"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1055215025982398465","CreatedAt":"2018-10-24T21:50:41+00:00","UserScreenname":"dotnet","Text":"Bringing .NET application performance analysis to Linux https://t.co/jivjRwPVBM","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":108,"FavoriteCount":61,"RawContent":null},{"Id":"1054879096981704704","CreatedAt":"2018-10-23T23:35:50+00:00","UserScreenname":"dotnet","Text":".NET Core Source Code Analysis with Intel® VTune™ Amplifier https://t.co/2I1YLWYbKb","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":64,"FavoriteCount":27,"RawContent":null},{"Id":"1054829662738608128","CreatedAt":"2018-10-23T20:19:24+00:00","UserScreenname":"dotnet","Text":"Call For Participation: .NET and TypeScript at FOSDEM conference https://t.co/xjDh49lbko","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":12,"RawContent":null}]}},"RunOn":"2018-11-11T05:30:29.4048771Z","RunDurationInMilliseconds":7351}