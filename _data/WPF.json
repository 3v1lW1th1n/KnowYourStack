{"Data":{"GitHub":{"Issues":[{"Id":"506785205","IsPullRequest":false,"CreatedAt":"2019-10-14T17:34:14","Actor":"scalablecory","Number":"2046","RawContent":null,"Title":"Entity Framework logs not showing up anymore after migration to .NET Core 3","State":"open","Body":"_From @shoe-diamente on Wednesday, October 9, 2019 9:45:08 AM_\r\n\r\n# Issue Title\r\n\r\nEntity Framework SQL logs stop showing up in debug after I migrated from .NET Core 2.2 to .NET Core 3.0.\r\n\r\n# General\r\n\r\nBy using this configuration:\r\n\r\n```\r\n{\r\n  \"Logging\": {\r\n    \"LogLevel\": {\r\n      \"Default\": \"Warning\",\r\n      \"System\": \"Information\",\r\n      \"Microsoft\": \"Information\"\r\n    }\r\n  }\r\n}\r\n\r\n```\r\n\r\nin `appsettings.json` I was able to see logging informations about SQL queries made via Entity Framework.\r\n\r\nNow, even with this configuration:\r\n\r\n```\r\n{\r\n  \"Logging\": {\r\n    \"LogLevel\": {\r\n      \"Default\": \"Debug\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nI'm unable to see any logging regarding SQL queries made (but I see other debugging messages from .NET Core which suggests that the configurations are picked up correctly).\r\n\r\nDid anything change with regards to logging that was not [documented here](https://docs.microsoft.com/it-it/aspnet/core/migration/22-to-30?view=aspnetcore-3.0&tabs=visual-studio)?\r\n\r\n_Copied from original issue: dotnet/core#3576_","Url":"https://github.com/dotnet/wpf/issues/2046","RelatedDescription":"Open issue \"Entity Framework logs not showing up anymore after migration to .NET Core 3\" (#2046)"},{"Id":"506784712","IsPullRequest":false,"CreatedAt":"2019-10-14T17:33:04","Actor":"scalablecory","Number":"2045","RawContent":null,"Title":"System.Componentmodel.IcollectionView not available for .net core 3.0","State":"open","Body":"_From @ebolefeysot on Wednesday, October 9, 2019 12:29:25 PM_\r\n\r\nDespite what documentation on page https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.icollectionview?view=netcore-3.0 claims, this interface is not found in the nuget package for .net core 3.0.\r\n\r\nMicrosoft.Windows.SDK.Contracts offers an ICollectionView interface on .net core, but unfortunatly, it is not complete: Filter and refresh are not implemented.\r\n\r\nSample to compile:\r\n```\r\nclass Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n            ICollectionView v =new CollectionViewSource().View;\r\n            v.Filter = null;\r\n            v.Refresh();\r\n        }\r\n    }\r\n```\r\n\r\n_Copied from original issue: dotnet/core#3578_","Url":"https://github.com/dotnet/wpf/issues/2045","RelatedDescription":"Open issue \"System.Componentmodel.IcollectionView not available for .net core 3.0\" (#2045)"},{"Id":"506783071","IsPullRequest":false,"CreatedAt":"2019-10-14T17:29:07","Actor":"scalablecory","Number":"2044","RawContent":null,"Title":"WPF Core Xaml Designer RTL layout and custom fonts bugs","State":"open","Body":"_From @mrNo0b on Thursday, October 10, 2019 8:26:32 PM_\r\n\r\nWhen I set **FlowDirection=\"RightToLeft\"** in MainWindow in WPF Core 3 app and when I add controls to the MainWindow they shows up in their correct locations in Designer but when I want to click on them to select, the selection highlight is in the opposite side of the window\r\n`VS 2019 16.3.4`\r\n\r\n![designerIssue](https://user-images.githubusercontent.com/12209347/65650408-5f564300-e013-11e9-9744-85ecd26f1a60.png)\r\n\r\nAnother issue that I have is that the designer don't support custom fonts, I added FontAwsome \r\n(_Font Awesome 5 Free-Solid-900.otf_) to my project and I use it in TextBlock for example:\r\n`<TextBlock Text=\"&#xF0C7;\" FontSize=\"16\" Foreground=\"White\"/>`\r\nwhen I run the app I can see the fonts but in Designer I can only see empty character boxes\r\n\r\n![bug2](https://user-images.githubusercontent.com/12209347/66603280-8769a880-ebb4-11e9-8304-e244491b88c1.png)\r\n\r\n_Copied from original issue: dotnet/core#3597_","Url":"https://github.com/dotnet/wpf/issues/2044","RelatedDescription":"Open issue \"WPF Core Xaml Designer RTL layout and custom fonts bugs\" (#2044)"},{"Id":"506703819","IsPullRequest":false,"CreatedAt":"2019-10-14T14:51:23","Actor":"EmaginationStore","Number":"2043","RawContent":null,"Title":"Support Opentype SVG fonts","State":"open","Body":"There is already a request to support SVG in WPF which I would really like to use, but I would also like to use color fonts and emojis so I think adding support for opentype-svg fonts would be a great feature to add to WPF.\r\n","Url":"https://github.com/dotnet/wpf/issues/2043","RelatedDescription":"Open issue \"Support Opentype SVG fonts\" (#2043)"},{"Id":"506616352","IsPullRequest":true,"CreatedAt":"2019-10-14T13:17:10","Actor":"dotnet-maestro[bot]","Number":"2042","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191013.4\r\n- **Date Produced**: 10/14/2019 12:11 AM\r\n- **Commit**: 9b700990e457705e8ac7ae70123ea27e35a250b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha1.19513.4\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2042","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2042)"},{"Id":"506573081","IsPullRequest":false,"CreatedAt":"2019-10-14T10:39:22","Actor":"KutanaDev","Number":"2041","RawContent":null,"Title":"Duplexing support is incomplete in PrintTicket and PrintCapabilities ","State":"open","Body":"I initially logged this as a Documentation issue in https://github.com/dotnet/dotnet-api-docs/issues/3282#issuecomment-540858696 \r\n\r\nBut that documentation issue has since been Closed with the recommendation that this be logged as a Feature Request instead. So here it is:\r\n\r\n----\r\n\r\nThe documentation source files dotnet-api-docs/xml/System.Printing/PrintTicket.xml and PrintCapabilities.xml both describe printer Duplexing support, and both have a Remark saying:\r\n\r\nThis property corresponds to the Print Schema's `JobDuplexAllDocumentsContiguously` keyword, not the `DocumentDuplex` keyword.\r\n\r\nI'm puzzled that the printing schema contains _two_ keywords for duplex support but the accompanying classes only support _one_ of them. Ideally I'd like the classes to be modified to support _both_ schema keywords, or (failing that) some new note in the documentation suggesting what to do if the Printer Driver reports duplex behaviour using `DocumentDuplex` rather than `JobDuplexAllDocumentsContiguously`. Both classes are sealed, so cannot be extended to add the new behaviour - the classes themselves would need to change.","Url":"https://github.com/dotnet/wpf/issues/2041","RelatedDescription":"Open issue \"Duplexing support is incomplete in PrintTicket and PrintCapabilities \" (#2041)"},{"Id":"506405751","IsPullRequest":false,"CreatedAt":"2019-10-14T00:42:53","Actor":"bigworld12","Number":"2040","RawContent":null,"Title":"does wpf work well with the nullable features in c# 8?","State":"open","Body":"since wpf relies on xaml as its UI layer, which doesn't support any type safety, is it ok to use c# 8's Nullable reference types  with wpf ?","Url":"https://github.com/dotnet/wpf/issues/2040","RelatedDescription":"Open issue \"does wpf work well with the nullable features in c# 8?\" (#2040)"},{"Id":"506317653","IsPullRequest":true,"CreatedAt":"2019-10-13T12:47:25","Actor":"dotnet-maestro[bot]","Number":"2039","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191012.4\r\n- **Date Produced**: 10/13/2019 1:21 AM\r\n- **Commit**: e97f0137a78efc809824926830df345775e8e0a3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha1.19512.4\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2039","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2039)"},{"Id":"506180271","IsPullRequest":true,"CreatedAt":"2019-10-12T13:17:43","Actor":"dotnet-maestro[bot]","Number":"2038","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191011.4\r\n- **Date Produced**: 10/12/2019 1:26 AM\r\n- **Commit**: e6274488300a417cb2b69ca5ead18e7a00613972\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha1.19511.4\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2038","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2038)"},{"Id":"506049583","IsPullRequest":false,"CreatedAt":"2019-10-11T20:47:53","Actor":"vatsan-madhavan","Number":"2037","RawContent":null,"Title":"Conflict between System.IO.Pipes.AccessControl in WindowsDesktop.Ref vs. NetCore.App.Ref","State":"closed","Body":"![image](https://user-images.githubusercontent.com/20246435/66683507-752b5100-ec2c-11e9-9272-72324ff0f21e.png)\r\n\r\nSee screenshot from RAR. Looks like System.Core depends on a newer version of S.IO.Pipes.AccessControl. \r\n\r\nIt's packaged in WindowsDesktop.App.Ref... but who depends on it? And why did we package v4.0.3.0 instead of v4.0.4.0? \r\n\r\nThis is in GA 3.0.100 SDK. \r\n\r\n/cc @dagood, @ericstj, @nguerrera \r\n/cc @rladuca ","Url":"https://github.com/dotnet/wpf/issues/2037","RelatedDescription":"Closed issue \"Conflict between System.IO.Pipes.AccessControl in WindowsDesktop.Ref vs. NetCore.App.Ref\" (#2037)"},{"Id":"505820596","IsPullRequest":true,"CreatedAt":"2019-10-11T13:19:01","Actor":"dotnet-maestro[bot]","Number":"2036","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191010.17\r\n- **Date Produced**: 10/11/2019 12:46 AM\r\n- **Commit**: 982c093a7d5b24f55656d5519a2938c689a4bdec\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha1.19510.17\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2036","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2036)"},{"Id":"505380444","IsPullRequest":false,"CreatedAt":"2019-10-10T19:40:11","Actor":"SFC-Sarge","Number":"2034","RawContent":null,"Title":"Net Core 3 Publish SingleExe and User Settings Does not work","State":"closed","Body":"On the released version of Net Core 3 found new issue with PublishSingleFile, it has to do with User Settings. I have attached a small project syncfusionwpfapp4.zip \r\n[SyncfusionWpfApp4.zip](https://github.com/dotnet/wpf/files/3713594/SyncfusionWpfApp4.zip)\r\nthat you can reproduce the issue. The issue. In the projects MainWindow.xaml.cs file you will find a remarked out public UserAppSettings mySettings = new UserAppSettings(); This if unremarked Initializes the the UserSettings class. Without this the project builds and works, it publishes and works even as a PublishShingleFile, but with this unremarked and the UserSettings class used it will return the following eventlog error. So how in Net Core 3 can you use user settings that can be changed in a WPF application. Again it works fine from the win-64 folder and only breaks in the PublishSingleFile mode if the UserSettings.cs is used. I search for answers but did not find one. This is a sample small project using the broken parts of the production xml editor that run under .Net 4.7.2. in an attempt to migrate to Net Core 3.\r\nNote: It states System.dll is missing and that is not true for win-x64 folder but is true for the publish extracted folder after attempting to run SingleExe with User Settings Class enabled.\r\n\r\n[Application: SyncfusionWpfApp4.exe\r\nCoreCLR Version: 4.700.19.46205\r\n.NET Core Version: 3.0.0\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.Windows.Markup.XamlParseException: The invocation of the constructor on type 'SyncfusionWpfApp4.MainWindow' that matches the specified binding constraints threw an exception.\r\n ---> System.Configuration.ConfigurationErrorsException: An error occurred creating the configuration section handler for applicationSettings/SyncfusionWpfApp4.Properties.Settings: Could not load file or assembly 'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'. The system cannot find the file specified. (C:\\Users\\DANNY~1.MCN\\AppData\\Local\\Temp\\.net\\SyncfusionWpfApp4\\aegml1hv.syu\\SyncfusionWpfApp4.dll.config line 8)\r\n ---> System.IO.FileNotFoundException: Could not load file or assembly 'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'. The system cannot find the file specified.\r\nFile name: 'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\r\n   at System.Configuration.TypeUtil.GetType(IInternalConfigHost host, String typeString, Boolean throwOnError)\r\n   at System.Configuration.RuntimeConfigurationRecord.RuntimeConfigurationFactory.Init(RuntimeConfigurationRecord configRecord, FactoryRecord factoryRecord)\r\n   at System.Configuration.RuntimeConfigurationRecord.CreateSectionFactory(FactoryRecord factoryRecord)\r\n   at System.Configuration.BaseConfigurationRecord.FindAndEnsureFactoryRecord(String configKey, Boolean& isRootDeclaredHere)\r\n   --- End of inner exception stack trace ---\r\n   at System.Configuration.BaseConfigurationRecord.FindAndEnsureFactoryRecord(String configKey, Boolean& isRootDeclaredHere)\r\n   at System.Configuration.BaseConfigurationRecord.GetSectionRecursive(String configKey, Boolean getLkg, Boolean checkPermission, Boolean getRuntimeObject, Boolean requestIsHere, Object& result, Object& resultRuntimeObject)\r\n   at System.Configuration.BaseConfigurationRecord.GetSection(String configKey)\r\n   at System.Configuration.ClientConfigurationSystem.System.Configuration.Internal.IInternalConfigSystem.GetSection(String sectionName)\r\n   at System.Configuration.ConfigurationManager.GetSection(String sectionName)\r\n   at System.Configuration.ClientSettingsStore.ReadSettings(String sectionName, Boolean isUserScoped)\r\n   at System.Configuration.LocalFileSettingsProvider.GetPropertyValues(SettingsContext context, SettingsPropertyCollection properties)\r\n   at System.Configuration.SettingsBase.GetPropertiesFromProvider(SettingsProvider provider)\r\n   at System.Configuration.SettingsBase.GetPropertyValueByName(String propertyName)\r\n   at System.Configuration.SettingsBase.get_Item(String propertyName)\r\n   at System.Configuration.ApplicationSettingsBase.GetPropertyValue(String propertyName)\r\n   at System.Configuration.ApplicationSettingsBase.get_Item(String propertyName)\r\n   at SyncfusionWpfApp4.Properties.Settings.get_ToDecimalStringFormat()\r\n   at SyncfusionWpfApp4.UserAppSettings..ctor()\r\n   at SyncfusionWpfApp4.MainWindow..ctor()\r\n   --- End of inner exception stack trace ---\r\n   at System.Windows.Markup.XamlReader.RewrapException(Exception e, IXamlLineInfo lineInfo, Uri baseUri)\r\n   at System.Windows.Markup.WpfXamlLoader.Load(XamlReader xamlReader, IXamlObjectWriterFactory writerFactory, Boolean skipJournaledProperties, Object rootObject, XamlObjectWriterSettings settings, Uri baseUri)\r\n   at System.Windows.Markup.WpfXamlLoader.LoadBaml(XamlReader xamlReader, Boolean skipJournaledProperties, Object rootObject, XamlAccessLevel accessLevel, Uri baseUri)\r\n   at System.Windows.Markup.XamlReader.LoadBaml(Stream stream, ParserContext parserContext, Object parent, Boolean closeStream)\r\n   at System.Windows.Application.LoadBamlStreamWithSyncInfo(Stream stream, ParserContext pc)\r\n   at System.Windows.Application.LoadComponent(Uri resourceLocator, Boolean bSkipJournaledProperties)\r\n   at System.Windows.Application.DoStartup()\r\n   at System.Windows.Application.<.ctor>b__1_0(Object unused)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.DispatcherOperation.InvokeImpl()\r\n   at System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext(Object state)\r\n   at MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(Object obj)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at MS.Internal.CulturePreservingExecutionContext.Run(CulturePreservingExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Windows.Threading.DispatcherOperation.Invoke()\r\n   at System.Windows.Threading.Dispatcher.ProcessQueue()\r\n   at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\n   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)\r\n   at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\r\n   at MS.Win32.UnsafeNativeMethods.DispatchMessage(MSG& msg)\r\n   at System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)\r\n   at System.Windows.Threading.Dispatcher.PushFrame(DispatcherFrame frame)\r\n   at System.Windows.Threading.Dispatcher.Run()\r\n   at System.Windows.Application.RunDispatcher(Object ignore)\r\n   at System.Windows.Application.RunInternal(Window window)\r\n   at System.Windows.Application.Run()\r\n   at SyncfusionWpfApp4.App.Main()](url)\r\n\r\nJust updated to 16.3.3 this morning and still does not work:\r\n\r\nMicrosoft Visual Studio Enterprise 2019\r\nVersion 16.3.3\r\nVisualStudio.16.Release/16.3.3+29403.142\r\nMicrosoft .NET Framework\r\nVersion 4.8.03761\r\n\r\nInstalled Version: Enterprise\r\n\r\nVisual C++ 2019 00433-90100-63537-AA870\r\nMicrosoft Visual C++ 2019\r\n\r\n.NET Portability Analyzer 1.1.10808.0\r\nEvaluates portability of assemblies across .NET platforms.\r\n\r\nAdd New File 3.5.134\r\nThe fastest and easiest way to add new files to any project - including files that start with a dot\r\n\r\nADL Tools Service Provider 1.0\r\nThis package contains services used by Data Lake tools\r\n\r\nASP.NET and Web Tools 2019 16.3.284.37798\r\nASP.NET and Web Tools 2019\r\n\r\nASP.NET Core Blazor Language Services 16.0.19307.2\r\n\r\nASP.NET Web Frameworks and Tools 2019 16.3.284.37798\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAtomineer Pro Documentation 1.0\r\nSource-code documentation-comment creation and maintenance, and other documentation-related tools.\r\n\r\nAutomatic Versions 2.0.48\r\nProvides tools for managing assembly versions.\r\n\r\nAzure App Service Tools v3.0.0 16.3.284.37798\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node 1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio 2.4.1000.0\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools 16.3.284.37798\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio 2.4.1000.0\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools 3.3.1-beta3-19461-02+2fd12c210e22f7d6245805c60340f6a34af6875b\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCodeRush for Roslyn 19.1.9.0\r\nDevExpress CodeRush for Roslyn package.\r\n\r\nCodeRush for Roslyn Tool Windows 19.1.9.0\r\nDevExpress CodeRush for Roslyn Tool Windows package.\r\n\r\nComment Remover 1.3.25\r\nRemove all comments in any file with a click of a button. Can also remove #regions and preserve XML Doc comments.\r\n\r\nCommon Azure Tools 1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nConvertAppToCore3Command Extension 1.0\r\nConvertAppToCore3Command Visual Studio Extension Detailed Info\r\n\r\nCookiecutter 16.3.19252.1\r\nProvides tools for finding, instantiating and customizing templates in cookiecutter format.\r\n\r\nDotfuscator Community Edition 5.42.0.9514-e0e25f754\r\nPreEmptive Protection - Dotfuscator CE\r\n\r\nExtensibility Message Bus 1.2.0 (d16-2@8b56e20)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFabric.DiagnosticEvents 1.0\r\nFabric Diagnostic Events\r\n\r\nGhostDoc 19.2.19200.0\r\nGenerate XML Comments from your code, maintain clean and up-to-date documentation, produce help documentation in multiple formats, use intelligent source code Spell Checker in Visual Studio.\r\n\r\nGitHub.VisualStudio 2.10.7.8114\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nIntelliCode Extension 1.0\r\nIntelliCode Visual Studio Extension Detailed Info\r\n\r\nMicrosoft Azure HDInsight Azure Node 2.4.1000.0\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service 2.4.1000.0\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio 16.0\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service 2.4.1000.0\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node 1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools 2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 0x10 - v2.9.20816.1\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio 0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger 1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager 2.0.83+gbc8a4b23ec\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger 1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards 1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers 1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package 1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio 16.3.7 (9d260c5)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager 5.3.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit https://docs.nuget.org/\r\n\r\nOffice Developer Tools for Visual Studio 16.0.29217.00\r\nMicrosoft Office Developer Tools for Visual Studio\r\n\r\nOpen in Visual Studio Code 1.4.46\r\nAdds a menu command that lets you open any solution, project, folder and file in Visual Studio Code.\r\n\r\nOzCodePackage Extension 1.0\r\nOzCodePackage Visual Studio Extension Detailed Info\r\n\r\nProjectServicesPackage Extension 1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython 16.3.19252.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - Conda support 16.3.19252.1\r\nConda support for Python projects.\r\n\r\nPython - Django support 16.3.19252.1\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython - IronPython support 16.3.19252.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support 16.3.19252.1\r\nProfiling support for Python projects.\r\n\r\nSlowCheetah - XML config transforms 1.0\r\nThis package enables you to transform your app.config or any other XML file based on the build configuration. It also adds additional tooling to help you create XML transforms.\r\n\r\nSnapshot Debugging Extension 1.0\r\nSnapshot Debugging Visual Studio Extension Detailed Info\r\n\r\nSnippet Designer 1.6.5\r\nSnippet Designer is a Visual Studio plug in which allows you to create and search for snippets inside the IDE\r\n\r\nSQL Server Data Tools 16.0.61908.27190\r\nMicrosoft SQL Server Data Tools\r\n\r\nSyncfusion ASP.NET Core (Essential JS 1) Project Templates 17.3.0.14\r\nProvides project templates for creating an ASP.NET Core Web Application using Syncfusion Essential JS 1 components.\r\n\r\nSyncfusion ASP.NET Core (Essential JS 2) Project Templates 17.3.0.14\r\nProvides project templates for creating an ASP.NET Core Web Application using Syncfusion Essential JS 2 components.\r\n\r\nSyncfusion ASP.NET MVC (Essential JS 2) Project Templates 17.1.0.32\r\nProvides project templates for creating ASP.NET MVC (Essential JS 2) Web Applications using Syncfusion components.\r\n\r\nSyncfusion EJ2 Web Conversion and Migration 13.4.0.53\r\nConverts and migrates a web project into a Syncfusion web project.\r\n\r\nSyncfusion Reference Manager 17.3.0.14\r\nA useful add-in for adding and migrating Syncfusion Assembly References for Windows Forms, WPF, and Silverlight projects.\r\n\r\nSyncfusion UWP Project Templates 17.3.0.14\r\nProject to create an Universal Windows Application using Syncfusion Products.\r\n\r\nSyncfusion WPF Project Templates 17.3.0.14\r\nProvides Project Templates to add Syncfusion WPF Project along with corresponding configurations.\r\n\r\nSyncfusion.VSExtension.Troubleshooter 17.3.0.14\r\nAdd-in for Troubleshooting the Syncfusion projects.\r\n\r\nSyncfusion.WindowsForms.Package 17.3.0.14\r\nProvides Item/Project Templates to add Syncfusion Windows Forms Item/Project along with corresponding configurations.\r\n\r\nSyncfusionMenu Extension 1.0\r\nSyncfusionMenu Visual Studio Extension Detailed Info\r\n\r\nSyntax Visualizer 1.0\r\nAn extension for visualizing Roslyn SyntaxTrees.\r\n\r\nTabs Studio 4.5.0\r\nThe document tabs manager.\r\n\r\nToolWindowHostedEditor 1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools 16.0.10821.2002\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools 3.3.1-beta3-19461-02+2fd12c210e22f7d6245805c60340f6a34af6875b\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.4 for F# 4.6 16.3.0-beta.19455.1+0422ff293bb2cc722fe5021b85ef50378a9af823\r\nMicrosoft Visual F# Tools 10.4 for F# 4.6\r\n\r\nVisual Studio Code Debug Adapter Host Package 1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Color Theme Editor 1.0\r\nAllows users to create and edit Visual Studio themes. Themes can customize colors used for menus, toolbars, tabs, titlebars, the text editor, and other environment colors.\r\n\r\nVisual Studio Tools for Containers 1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Kubernetes 1.0\r\nVisual Studio Tools for Kubernetes\r\n\r\nVisualStudio.Mac 1.0\r\nMac Extension for Visual Studio\r\n\r\nWindows Template Studio 3.4.19254.1\r\nWindows Template Studio quickly builds a UWP app, using a wizard-based UI to turn your needs into a foundation of Windows 10 patterns and best practices.\r\n\r\nWorkflow Manager Tools 1.0 1.0\r\nThis package contains the necessary Visual Studio integration components for Workflow Manager.\r\n\r\nXamarin 16.3.0.275 (d16-3@35ef585)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer 16.3.0.246 (remotes/origin/d16-3@bd2f86892)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates 16.3.565 (27e9746)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK 10.0.3.0 (d16-3/4d45b41)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\nMono: mono/mono/2019-06@5608fe0abb3\r\nJava.Interop: xamarin/java.interop/d16-3@5836f58\r\nLibZipSharp: grendello/LibZipSharp/d16-3@71f4a94\r\nLibZip: nih-at/libzip/rel-1-5-1@b95cf3fd\r\nProGuard: xamarin/proguard/master@905836d\r\nSQLite: xamarin/sqlite/3.27.1@8212a2d\r\nXamarin.Android Tools: xamarin/xamarin-android-tools/d16-3@cb41333\r\n\r\n\r\nXamarin.iOS and Xamarin.Mac SDK 13.2.0.47 (c2cbd34)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.","Url":"https://github.com/dotnet/wpf/issues/2034","RelatedDescription":"Closed issue \"Net Core 3 Publish SingleExe and User Settings Does not work\" (#2034)"},{"Id":"505446888","IsPullRequest":true,"CreatedAt":"2019-10-10T19:34:36","Actor":"rladuca","Number":"2035","RawContent":null,"Title":"Update branding to preview2","State":"closed","Body":"Internal PR: https://dnceng.visualstudio.com/internal/_git/dotnet-wpf-int/pullrequest/3549?_a=overview","Url":"https://github.com/dotnet/wpf/pull/2035","RelatedDescription":"Closed or merged PR \"Update branding to preview2\" (#2035)"},{"Id":"505324152","IsPullRequest":false,"CreatedAt":"2019-10-10T14:50:54","Actor":"stevenbrix","Number":"2033","RawContent":null,"Title":"Enabling Roslyn analyzers","State":"open","Body":"As a team, we'd like to get a core set of Roslyn code analyzers fully integrated into our build to help ensure the long term health of the code base. Much of WPF was written 10+ years ago and doesn't necessarily follow the best practices. It's important to understand what can and can't change, **no change as part of this work should change the behavior**.\r\n\r\n### Scope of work\r\n- [ ] Determine which rules should and shouldn't be enabled.\r\n- [ ] If a rule should be suppressed entirely, add the suppression to the code analysis ruleset in eng\\WpfArcadeSdk\\tools\\CodeAnalysis\\WpfCodeAnalysis.ruleset\r\n- [ ] If a rule is to be fixed, use the associated code-fixer to make the changes, instead of by hand.\r\n\r\n### Projects to enable\r\nHere are the assemblies that we should focus on. Ideally done one at a time so that PR's are easy to read and understand. They can follow what we did with `System.Xaml` for an example. It's recommended to start with one of the smaller projects first :)\r\n\r\n- [ ] System.Windows.Controls.Ribbon\r\n- [ ] ReachFramework\r\n- [ ] UIAutomationClient\r\n- [ ] UIAutomationProvider\r\n- [ ] UIAutomationTypes\r\n- [ ] PresentationBuildTasks\r\n- [ ] PresentationCore\r\n- [ ] PresentationFramework\r\n- [ ] WindowsBase\r\n\r\n\r\n**Note: this work isn't necessary for test projects**\r\n\r\n### Methodology\r\n- To make this work easier to understand for the maintainers, it should be easy to differentiate at the commit/pr level what was a suppression versus what was a fix. This is not a hard requirement, but it will make the life of anyone reviewing the code much easier.\r\n- Add `<EnableAnalyzers>true</EnableAnalyzers>` to the .csproj file and build. There will most likely be a lot of errors, this is where the fun begins :)\r\n- Part of determining the proper rules is based on the current state of the code, and not necessarily what is ideal. Too many changes to the code will result in PR's that are too lengthy and cumbersome to review, which isn't ideal for anyone. Separate issues can be filed if there are certain rules we want to enable in the future.\r\n- There will be times where we'd like a rule to be enabled for most projects, but occasionally suppressed. \r\n  - If the suppression will never be fixed (i.e. for compat reasons) put the suppression in a GlobalSuppressions.cs file.\r\n  - If the suppression should be addressed a later time, put the suppression at the callsite.\r\n\r\n### Code-fixers\r\n\r\nWe should run the code-fixers for each analyzer with the enabled rules and auto-update the source code, rather than making the edits by hand. Some of the fixers may not be implemented, and it would be extra valuable to go and add the fixer so that everyone in the .NET community can benefit from it. I did this for one of the fixers early on, and here is an example PR: https://github.com/dotnet/roslyn-analyzers/pull/2166\r\n\r\nAll the analyzers and associated code-fixers are in this repo:\r\nhttps://github.com/dotnet/roslyn-analyzers\r\n\r\nRunning the code-fixers can be done when the solution is loaded in Visual Studio, or by using this tool (I don't know what state this tool is in or if it works, there may be bugs)\r\nhttps://github.com/stevenbrix/AnalyzerRunner\r\n\r\nThis is work that we've had on our backlog for a while, but isn't the highest priority at the moment for us. There have been a lot of code cleanup/beautification PR's to the WPF code base since it's been open-sourced (thank you everyone!), and so I'm hoping to formalize this work a bit and open it up to anyone that is interested in defining the best-practices in this code base, as well as learn a bit about Roslyn analyzers while doing it!\r\n\r\nPlease reply if interested and with the project (or projects) you will be working on and I will assign this to you!\r\n\r\n/cc @YoshihiroIto who expressed interest in learning more about Roslyn analyzers.\r\n","Url":"https://github.com/dotnet/wpf/issues/2033","RelatedDescription":"Open issue \"Enabling Roslyn analyzers\" (#2033)"},{"Id":"505236324","IsPullRequest":true,"CreatedAt":"2019-10-10T13:16:10","Actor":"dotnet-maestro[bot]","Number":"2032","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191010.3\r\n- **Date Produced**: 10/10/2019 9:31 AM\r\n- **Commit**: 774a5237171837cceb45b61720f912bdbe7d4e8c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha1.19510.3\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2032","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2032)"},{"Id":"505170231","IsPullRequest":false,"CreatedAt":"2019-10-10T10:09:14","Actor":"lindexi","Number":"2031","RawContent":null,"Title":"Using win32 to show the splash screen","State":"open","Body":"The advantage is that\r\n\r\n- Fast\r\n   The sample https://github.com/kkwpsv/SplashImage cost 100ms and the native WPF splash screen cost 300ms. But I do not use benchmark tests. And it slower than UWP.\r\n- Can use any file path\r\n   The WPF can only use the resource file. That means we should use the WPF windows with an image to show the splash screen when we use the file path. But we use WPF windows as splash screen and we will find #297 and #298\r\n\r\n---\r\nThanks @weltkante the WPF uses win32 method to show the splash screen and my title is not all right. But the [code](https://source.dot.net/#WindowsBase/System/Windows/SplashScreen.cs,129) need many WPF feature. And I suggest that we can use all win32 methods to create a splash screen that means that this code can run in a console project.","Url":"https://github.com/dotnet/wpf/issues/2031","RelatedDescription":"Open issue \"Using win32 to show the splash screen\" (#2031)"},{"Id":"505032496","IsPullRequest":true,"CreatedAt":"2019-10-10T06:21:18","Actor":"dotnet-maestro[bot]","Number":"2030","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191009.11\r\n- **Date Produced**: 10/10/2019 3:31 AM\r\n- **Commit**: 971343425f4e76dfc4b8fccfb87cbca278245fdc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19509.11\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2030","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2030)"},{"Id":"505014804","IsPullRequest":true,"CreatedAt":"2019-10-10T04:50:27","Actor":"dotnet-maestro[bot]","Number":"2029","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191009.10\r\n- **Date Produced**: 10/10/2019 3:26 AM\r\n- **Commit**: 01238a98c7ff56f83742971d49273bba001330a9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19509.10\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2029","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2029)"},{"Id":"504945045","IsPullRequest":true,"CreatedAt":"2019-10-09T23:35:24","Actor":"dotnet-maestro[bot]","Number":"2028","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191009.7\r\n- **Date Produced**: 10/9/2019 11:01 PM\r\n- **Commit**: 7efb0efac5263cf3e6eec942c77cbed82f6f78cb\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19509.7\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2028","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2028)"},{"Id":"504819976","IsPullRequest":true,"CreatedAt":"2019-10-09T18:41:15","Actor":"dotnet-maestro[bot]","Number":"2027","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191009.2\r\n- **Date Produced**: 10/9/2019 6:01 PM\r\n- **Commit**: 6b988939f84529130e7a811598ba25237a5f2de2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19509.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n\r\n\r\n\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.App** -> 5.0.0-alpha1.19508.9 (parent: Microsoft.Private.Winforms)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2027","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2027)"},{"Id":"504810051","IsPullRequest":true,"CreatedAt":"2019-10-09T18:25:50","Actor":"dotnet-maestro[bot]","Number":"2026","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191008.10\r\n- **Date Produced**: 10/9/2019 5:52 PM\r\n- **Commit**: 69b4c34baf55d992f0a9c8888043748c73f496a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19508.10\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2026","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2026)"},{"Id":"504761373","IsPullRequest":false,"CreatedAt":"2019-10-09T16:30:39","Actor":"rladuca","Number":"2025","RawContent":null,"Title":"ClearType TextRenderingMode uses incorrect DWrite rendering mode","State":"open","Body":"* .NET Core Version: All\r\n* Windows version: All\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n\r\nWhen rendering text, `CGlyphRunResource::GetDWriteRenderingMode` is called in order to get the appropriate rendering mode to pass to DWrite in` CGlyphRunResource::CreateRealization` for a call to `pIDWriteFactoryNoRef->CreateGlyphRunAnalysis`.\r\n\r\nThe analysis is what gives WPF the glyph bitmap(s) it uses to render to the screen.  The problem comes in some special cases in `CGlyphRunResource::GetDWriteRenderingMode`.  In this function, WPF overrides what the recommended rendering mode would be from DWrite with `DWRITE_RENDERING_MODE_CLEARTYPE_NATURAL`. DWrite, if given the choice, would use `DWRITE_RENDERING_MODE_NATURAL_SYMMETRIC` for this font and emsize.\r\n\r\nWhat this means is the algorithm used to render the font is not symmetric, as in the anti-aliasing algorithm is only performed in the horizontal and not the vertical direction.  Due to this, fine features in the horizontal can be sampled out if the font itself is optimized for symmetric anti-aliasing.  \r\n\r\nThis bug was originally found while investigating an issue with the rendering of `MS Mincho` after the installation of [KB4482887](https://support.microsoft.com/en-us/help/4482887/windows-10-update-kb4482887).  The application was setting `TextOptions.TextRenderingMode` to `ClearType`.  According to the [documentation](https://docs.microsoft.com/en-us/dotnet/api/system.windows.media.textrenderingmode?view=netframework-4.8):\r\n\r\n```\r\nText is rendered with the most appropriate `ClearType` rendering algorithm based on the layout mode that was used to format the text.\r\n```\r\n\r\nThis is simply not true for all fonts as described above.  WPF should, in this case, simply ask DWrite what the appropriate rendering mode is and use the closest `ClearType` equivalent to that ([see here](https://docs.microsoft.com/en-us/windows/win32/api/dwrite/ne-dwrite-dwrite_rendering_mode)).  There are other special cases that should be preserved, but this particular one needs fixing.\r\n\r\nNote that applications that do not set `TextOptions.TextRenderingMode` to `ClearType` will not see this problem as the default mode is `Auto`.  In `Auto`, WPF will ask DWrite what the appropriate mode to use is.\r\n\r\n[Original internal bug for reference](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/979556)","Url":"https://github.com/dotnet/wpf/issues/2025","RelatedDescription":"Open issue \"ClearType TextRenderingMode uses incorrect DWrite rendering mode\" (#2025)"},{"Id":"504610896","IsPullRequest":true,"CreatedAt":"2019-10-09T13:13:28","Actor":"dotnet-maestro[bot]","Number":"2023","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20191008.14\r\n- **Date Produced**: 10/9/2019 6:57 AM\r\n- **Commit**: f2bc6a16a6fbf1898b1fe161e94af9e82eba383a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha1.19508.14\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2023","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2023)"},{"Id":"504617884","IsPullRequest":false,"CreatedAt":"2019-10-09T12:25:32","Actor":"zlatanov","Number":"2024","RawContent":null,"Title":"Expander control is not narrated","State":"open","Body":"* .NET Core Version: 3.0.100\r\n* Windows version: 1903\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n\r\nThe problem has already been described here: #1015. What I don't understand in the solution there is why though the expander is exposed only when not in ItemsHost Panel.\r\n\r\nhttps://github.com/dotnet/wpf/blob/0166abb3a5e4ed8bbda643af98b7e1a604959c4c/src/Microsoft.DotNet.Wpf/src/PresentationFramework/System/Windows/Automation/Peers/GroupItemAutomationPeer.cs#L148-L161\r\n\r\nIf I have a DataGrid with grouping, the headers of the groups are left out from the UI Automation tree and thus are practically inaccessible.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/2024","RelatedDescription":"Open issue \"Expander control is not narrated\" (#2024)"},{"Id":"504438772","IsPullRequest":false,"CreatedAt":"2019-10-09T06:15:50","Actor":"yyjdelete","Number":"2022","RawContent":null,"Title":"`System.Printing` and `DirectWriteForwarder` has reference of two different version of `netstandard` in metadata?","State":"open","Body":"* .NET Core Version: 3.0.0\r\n\r\nI don't know whether it's an bug or not. And didn't see any exception for this.\r\n\r\nBut it's strange that when you open `System.Printing` or `DirectWriteForwarder` with ILSpy or something else, you can see it reference to both `netstandard` 2.0 and 2.1 in the same Assembly, which never happen for other assemblies.","Url":"https://github.com/dotnet/wpf/issues/2022","RelatedDescription":"Open issue \"`System.Printing` and `DirectWriteForwarder` has reference of two different version of `netstandard` in metadata?\" (#2022)"},{"Id":"504364999","IsPullRequest":true,"CreatedAt":"2019-10-09T02:10:31","Actor":"dotnet-maestro[bot]","Number":"2021","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191008.9\r\n- **Date Produced**: 10/9/2019 1:38 AM\r\n- **Commit**: 239cbc36fda9dd106ebd41782aeb9172a69f826d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19508.9\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.App** -> 5.0.0-alpha1.19507.10 (parent: Microsoft.Private.Winforms)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2021","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2021)"},{"Id":"504328808","IsPullRequest":true,"CreatedAt":"2019-10-08T23:35:34","Actor":"dotnet-maestro[bot]","Number":"2020","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191008.2\r\n- **Date Produced**: 10/8/2019 11:05 PM\r\n- **Commit**: 99d29f8c191a5af83dd2e2b77ea054dd3d55e3b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19508.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.App** -> 5.0.0-alpha1.19506.5 (parent: Microsoft.Private.Winforms)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2020","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2020)"},{"Id":"504319859","IsPullRequest":true,"CreatedAt":"2019-10-08T23:05:28","Actor":"dotnet-maestro[bot]","Number":"2019","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191008.3\r\n- **Date Produced**: 10/8/2019 10:35 PM\r\n- **Commit**: 033547c384298903186169828c6ae59646790431\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19508.3\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2019","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2019)"},{"Id":"504316817","IsPullRequest":true,"CreatedAt":"2019-10-08T22:55:05","Actor":"dotnet-maestro[bot]","Number":"2018","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191008.4\r\n- **Date Produced**: 10/8/2019 10:28 PM\r\n- **Commit**: afa6ca4da2ad451010b8fdeb4c8bad751d53c88f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19508.4\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.App** -> 5.0.0-alpha1.19507.10 (parent: Microsoft.Private.Winforms)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2018","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2018)"},{"Id":"504296085","IsPullRequest":true,"CreatedAt":"2019-10-08T22:00:35","Actor":"dotnet-maestro[bot]","Number":"2017","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20191008.1\r\n- **Date Produced**: 10/8/2019 9:25 PM\r\n- **Commit**: acecf2cfbeb5412ac3bd38b6ecbacd4c552c04c6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha1.19508.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2017","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2017)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-10-15T05:30:54.7547072Z","RunDurationInMilliseconds":667}