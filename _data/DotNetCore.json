{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework 4.7.2 Developer Pack Early Access build 3056 is available!","PublishedOn":"2018-03-08T23:22:13+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are happy to share an Early Access build with the .NET Framework 4.7.2 Developer Pack. The .NET Framework 4.7.2 Developer Pack lets developers build applications that target the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/08/net-framework-4-7-2-developer-pack-early-access-build-3056-is-available/","RawContent":null},{"Title":"F# language and tools update for Visual Studio 2017 version 15.6","PublishedOn":"2018-03-06T18:28:06+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With the release of Visual Studio 2017 version 15.6, we’re excited to share updates to the F# language and core library, F# tooling in Visual Studio, and infrastructure updates that concern OSS...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/06/f-language-and-tools-update-for-visual-studio-2017-version-15-6/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:11:29+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today we are releasing the first preview of EF Core 2.1, alongside .NET Core 2.1 Preview 1 and ASP.NET Core 2.1 Preview 1. The new bits are available in NuGet as part of the individual packages, and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-entity-framework-core-2-1-preview-1/","RawContent":null},{"Title":"Announcing .NET Core 2.1 Preview 1","PublishedOn":"2018-02-27T18:08:23+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.1 Preview 1. It is the first public release of .NET Core 2.1. We have great improvements that we want to share and that we would love to get your feedback on,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/announcing-net-core-2-1-preview-1/","RawContent":null},{"Title":"Calling All Desktop Developers: How do you interact with data?","PublishedOn":"2018-02-27T17:00:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Connecting to databases and services is an important part of desktop application development for many of our customers. Visual Studio provides a variety of tools and technologies that can help you...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/27/calling-all-desktop-developers-how-do-you-interact-with-data/","RawContent":null},{"Title":"Azure Blob Storage as a Network Drive","PublishedOn":"2018-02-26T16:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Many applications make use of a network drive to backup and store files. When I was in university I found myself constantly coding for fun, and one example took the form of a network share for my...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/26/azure-blob-storage-as-a-network-drive/","RawContent":null},{"Title":".NET Framework February 2018 Security and Quality Rollup","PublishedOn":"2018-02-14T04:27:17+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the February 2018 Security and Quality Rollup. Security No new security fixes. See .NET Framework January 2018 Security and Quality Rollup for the latest security updates....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Machine Learning in .NET – Help us build the right experience!","PublishedOn":"2018-02-13T17:17:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the past few years, Machine Learning (ML) and Artificial Intelligence (AI) have paved the road for building smarter applications through advancements in speech recognition, computer vision,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/13/machine-learning-in-net-help-us-build-the-right-experience/","RawContent":null},{"Title":"Announcing .NET Framework 4.7.2 Early Access build 3052!","PublishedOn":"2018-02-05T21:55:13+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Today, we are happy to share the .NET Framework 4.7.2 Early Access build 3052 for your feedback. .NET Framework 4.7.2 is the next version of the .NET Framework. It is currently feature-complete and in...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/05/announcing-net-framework-4-7-2-early-access-build-3052/","RawContent":null},{"Title":"Entity Framework Core 2.1 Roadmap","PublishedOn":"2018-02-02T18:39:25+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"As mentioned in the announcement of the .NET Core 2.1 roadmap earlier today, at this point we know the overall shape of our next release and we have decided on a general schedule for it. As we...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/02/02/entity-framework-core-2-1-roadmap/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7102763357","Type":"PullRequestEvent","CreatedAt":"2018-01-16T00:17:04","Actor":"galatrash-at-dnn","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/96","RelatedDescription":"Opened pull request \"Adding DNN Platform.\" (#96) at dotnet/home","RelatedBody":""},{"Id":"7097053889","Type":"PullRequestEvent","CreatedAt":"2018-01-14T15:15:00","Actor":"bfistein","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/95","RelatedDescription":"Opened pull request \"Fix broken logo URL\" (#95) at dotnet/home","RelatedBody":""},{"Id":"7065382954","Type":"PullRequestEvent","CreatedAt":"2018-01-06T19:21:47","Actor":"ctaggart","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/94","RelatedDescription":"Opened pull request \"add SourceLink\" (#94) at dotnet/home","RelatedBody":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138"},{"Id":"7044237283","Type":"PullRequestEvent","CreatedAt":"2017-12-31T20:25:44","Actor":"onovotny","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/93","RelatedDescription":"Opened pull request \"Add Humanizer\" (#93) at dotnet/home","RelatedBody":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7387413694","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:18:32","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Reopened issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discusses the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7387391842","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:13:45","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Closed issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discussed the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7373349220","Type":"IssuesEvent","CreatedAt":"2018-03-13T17:01:53","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\" (#62) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 2.0 (including other minor and patch releases).\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where a malicious file or web request could cause a denial of service (DoS) attack.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.10, 1.1.7 or 2.0.6. Developers are advised to update their .NET Core SDK to versions 1.1.8 or 2.1.101.\r\n\r\n## Discussion\r\n\r\nUse *TBD* for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nNone\r\n\r\n### Affected Software\r\n\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\nA complete list of runtimes can be discovered by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows\t| `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS\t| `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms\t| `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.10, 1.1.7 and 2.0.6, then any applications targeting the respective major/minor versions, 1.0 or 1.1 or 2.0 of .NET Core are vulnerable.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n#### How do I fix my affected application?\r\n\r\nApplications can be fixed by installing the latest .NET Core runtimes or SDKs. Typically, application servers only have runtime packages installed and developer machines have the SDKs installed. \r\nInstallers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). \r\n.NET Core 1.1.8 SDK installs both versions 1.0.10 and 1.1.7 of the .NET Core runtime.\r\n\r\nIf you've built a self-contained application, you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the `application.runtime.config` file for that application. Set the framework version to the desired version and the `rollForward` property to false. These settings should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nSince the `application.runtime.config` file is an optional file, you may need to create one for each application and add it alongside the executable.\r\n\r\n### Acknowledgments\r\n[Ben Adams](https://twitter.com/ben_a_adams) of [Illyriad Games](https://www.illyriad.co.uk/)\r\n\r\n### External Links\r\n[CVE-2018-0875](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0875)\r\n\r\n### Revisions\r\n\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-03-13_\r\n"},{"Id":"7301596554","Type":"IssuesEvent","CreatedAt":"2018-02-27T06:10:33","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/61","RelatedDescription":"Opened issue \"New offline books released for Visual Studio 2017\" (#61) at dotnet/announcements","RelatedBody":"# New offline books released for Visual Studio 2017\r\n\r\nEarlier this month, we released an update to Offline Books for the Visual Studio 2017 Help Viewer.\r\n\r\nThis release includes new .NET books, including .NET Core Guide, .NET Guide, .NET Framework Guide and the .NET API Reference. It also includes the latest content for Visual Studio 2017 version 15.5, the latest updates to Visual Basic, C# (7.1 and 7.2), F#, ASP.NET Core, NuGet, SQL Server, and the Universal Windows Platform.\r\n\r\nThe .NET Guide, .NET Framework Guide and .NET API Reference books together are a replacement for the .NET Framework 4.6 and 4.5 book, which can be removed. Just be aware that the new .NET API Reference book currently displays the API syntax block for C# only, but examples are shown in other languages, just like the experience you currently have on docs.microsoft.com.If you need to see the API syntax for Visual Basic, C++/CLI or F#, then you should keep the old book until the new reference book is updated again in a few weeks. Once you remove the .NET Framework 4.6 and 4.5 book, you cannot reinstall it.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\n- https://github.com/dotnet/docs/issues/4502\r\n\r\n## Add new content\r\n\r\nYou will see these new books when you have Help Viewer installed and choose **Help** > **Add and Remove Content** from the Visual Studio 2017 main menu. If you don't see this menu item, then [open the Visual Studio Installer](https://docs.microsoft.com/visualstudio/install/modify-visual-studio), click the **More** dropdown and choose **Modify**. When the component list appears, choose **Individual Components** at the top, then check **Help Viewer**.\r\n\r\n![help_viewer_component](https://user-images.githubusercontent.com/12971179/36713111-c9d49a7c-1b40-11e8-918a-e7e3619669a2.png)\r\n\r\n## Help Viewer Installation\r\n\r\nTo start the installation, select the **Modify** button in the lower right corner of the Installer window.\r\n\r\nTo update individual books whose status is \"Updates available\", remove the book and then click **Add** to get the new version. To update all your books at once, select the link in the lower right corner of the **Add and Remove Content** window:\r\n\r\n![offline-books](https://user-images.githubusercontent.com/12971179/36713028-75b944f6-1b40-11e8-91c4-4830355f815e.png)"},{"Id":"7300537622","Type":"IssuesEvent","CreatedAt":"2018-02-27T00:12:10","Actor":"eerhardt","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/60","RelatedDescription":"Opened issue \"System.Runtime.Intrinsics in .NET Core 2.1\" (#60) at dotnet/announcements","RelatedBody":"# System.Runtime.Intrinsics in .NET Core 2.1\r\n\r\n.NET Core 2.1 has been adding platform intrinsic APIs to support directly calling processor specific instructions, such as Intel’s x86 SIMD instructions.  See the [initial platform intrinsics design](https://github.com/dotnet/designs/blob/master/accepted/platform-intrinsics.md) for more information.\r\n\r\nWe have decided that it makes the most sense for this intrinsics feature to ship in a “preview” status in the .NET Core 2.1 RTM timeframe.  This means that the runtime support we are implementing will be included, but the assembly exposing the intrinsics will only be available to projects via explicit reference to a “preview-only” package.  These APIs won’t be included in the official .NET Core 2.1 packages.\r\n\r\nGiven our limited time and resources, recent changes in the approach we take to expose the intrinsics, and API changes prompted by design feedback from the community, we don’t believe there is enough time to settle these APIs for 2.1. We plan to follow the pattern of other recent features like Span<T> and Memory<T> that first shipped in preview before formally joining the supported API surface.  Not only would we expect the next version of .NET Core to support more intrinsics than could be supported in 2.1, but we expect to have real usage examples in CoreFX and higher level components as well.  These real world examples, as well as feedback from customers who opt in to the preview, should give us the confidence we need to officially support the APIs going forward.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\nhttps://github.com/dotnet/corefx/issues/27486\r\n\r\n## Details\r\n\r\nIn the coming days, we plan on removing System.Runtime.Intrinsics.dll from the Microsoft.NETCore.App package.  This means any libraries/applications that are using these APIs will no longer compile by default, and will not run on new builds of .NET Core 2.1.\r\n\r\nAt the same time, we will start producing a new System.Runtime.Intrinsics.Experimental NuGet package.  In order to continue using these APIs on .NET Core 2.1, a project will need to add a reference to this new package.\r\n\r\nAs its name implies, this package is experimental and should only be used for preview purposes.  It isn’t expected to be used in production scenarios.  Future version of .NET Core (after 2.1) will be allowed to break this package. This enables us respond to future feedback that requires the APIs to be modified.\r\n\r\nIn the future, when we are confident we have the intrinsic APIs right, we will stop producing the System.Runtime.Intrinsics.Experimental package. The platform intrinsics APIs will then be added back to Microsoft.NETCore.App and will be officially supported."},{"Id":"7273056222","Type":"IssuesEvent","CreatedAt":"2018-02-21T02:28:03","Actor":"KathleenDollard","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/57","RelatedDescription":"Opened issue \"Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\" (#57) at dotnet/announcements","RelatedBody":"# Manually Uninstall .NET Core SDK 2.2.0-Preview Nightly Builds\r\n\r\n[A change in the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) resulted in some nightly builds having a higher version number. This higher version number will block the installation of the correct .NET Core SDK.\r\n\r\nIf you have installed nightly builds of the .NET Core SDK that start with version number that begin with `2.2.0-preview1`, you must manually uninstall these preview builds before later versions of the SDK with version numbers like 2.1.xxx will be available. This may have occurred by installing nightly builds of the .NET Core SDK or nightly builds of Visual Studio 15.5 Preview. \r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/cli #8652](https://github.com/dotnet/cli/issues/8652)\r\n\r\n## Details\r\n\r\n[We changed the version number strategy for .NET Core SDK](https://github.com/dotnet/designs/pull/29) as development was ongoing. Because of this, version numbers on the old scheme appeared in nightly builds. Unfortunately, these numbers are higher than the version numbers in the new scheme. All of the newer SDKs for .NET Core 2.1 will be ignored due to this higher version number; this includes newer nightly builds, public previews and eventual releases.\r\n\r\nThese older version numbers are similar to the following, with the last several different values in the last six digits:\r\n\r\n```\r\n2.2.0-preview1-008000\r\n```\r\n\r\nSince the newer versions are in the form:\r\n\r\n```\r\n2.1.300-preview1-008000\r\n```\r\n\r\n## Call to Action\r\n\r\nIf you have installed nightly builds. Please uninstall any .NET SDK versions that start with 2.2.0-preview1."},{"Id":"7253280422","Type":"IssuesEvent","CreatedAt":"2018-02-16T04:14:06","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Closed issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"},{"Id":"7253090788","Type":"IssuesEvent","CreatedAt":"2018-02-16T02:41:24","Actor":"rudeGit","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/56","RelatedDescription":"Opened issue \"Can you help with this issue?\" (#56) at dotnet/announcements","RelatedBody":"https://stackoverflow.com/questions/48819198/weird-behavior-of-httpclienthandler-sslprotocol-property-in-net-framework-4-7-1\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7410846472","Type":"PullRequestEvent","CreatedAt":"2018-03-21T05:28:32","Actor":"dotnet-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17086","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx\" (#17086) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"7410760967","Type":"PullRequestEvent","CreatedAt":"2018-03-21T04:47:18","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17085","RelatedDescription":"Opened pull request \"Tighten arm32/arm64 write barrier kill reg sets\" (#17085) at dotnet/coreclr","RelatedBody":"Also, clean up arm32 NYI_ARM: remove or add asserts for\r\nthose that are not possible to encounter, add comments\r\nfor some that might be implemented later."},{"Id":"7410565403","Type":"IssuesEvent","CreatedAt":"2018-03-21T03:21:49","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17084","RelatedDescription":"Opened issue \"[RyuJIT/arm32/arm64] CQ: implement containment for 0.0 in vcmp/fcmp\" (#17084) at dotnet/coreclr","RelatedBody":"Related to #17083\r\n"},{"Id":"7410559139","Type":"PullRequestEvent","CreatedAt":"2018-03-21T03:19:15","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17083","RelatedDescription":"Opened pull request \"Remove arm32/arm64 dead code\" (#17083) at dotnet/coreclr","RelatedBody":"Code in `IsContainableImmed()` appears to try to mark as contained\r\na floating-point 0.0 in comparison instructions. It doesn't work,\r\nas comparison nodes have TYP_INT, and the zero comparison check\r\ndoesn't work for 0.0.\r\n\r\nRemove the code, and add a tracking issue to implement it correctly."},{"Id":"7410393739","Type":"IssuesEvent","CreatedAt":"2018-03-21T02:11:49","Actor":"AndyAyersMS","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/16370","RelatedDescription":"Closed issue \"GCStress failure: JIT\\HardwareIntrinsics\\X86\\Sse\\Sse_r\" (#16370) at dotnet/coreclr","RelatedBody":"Failure with `COMPlus_GCStress=4` with x86 Checked with JIT\\HardwareIntrinsics\\X86\\Sse\\Sse_r:\r\n\r\n```\r\nBEGIN EXECUTION\r\n \"e:\\gh\\coreclr3\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\\corerun.exe\" Sse_r.exe\r\nRunning Add.Single test...\r\nSse.Add<Single>: RunClsVarScenario failed:\r\n    left: (0, 0, 0, 0)\r\n   right: (0.8884231, 0.7757907, 0.8753635, 0.08364759)\r\n  result: (1.688369, 1.052082, 1.488229, 0.1442138)\r\n\r\nSse.Add<Single>: RunLclVarScenario_UnsafeRead failed:\r\n    left: (0.9750369, 0.8985233, 0.3467779, 0.7324353)\r\n   right: (0.887246, 0.08891934, 0.3435928, 0.5924375)\r\n  result: (1.862283, 0.9874426, 0.6903708, 1.324873)\r\n\r\nSse.Add<Single>: RunLclVarScenario_Load failed:\r\n    left: (0.9750369, 0.8985233, 0.3467779, 0.7324353)\r\n   right: (0.887246, 0.08891934, 0.3435928, 0.5924375)\r\n  result: (1.862283, 0.9874426, 0.6903708, 1.324873)\r\n\r\nSse.Add<Single>: RunLclVarScenario_LoadAligned failed:\r\n    left: (0.9750369, 0.8985233, 0.3467779, 0.7324353)\r\n   right: (0.887246, 0.08891934, 0.3435928, 0.5924375)\r\n  result: (1.862283, 0.9874426, 0.6903708, 1.324873)\r\n\r\nSse.Add<Single>: RunLclFldScenario failed:\r\n    left: (0.2974494, 0.9823032, 0.6075894, 0.4913346)\r\n   right: (0.4457132, 0.5806072, 0.989637, 0.6327882)\r\n  result: (0.7431626, 1.56291, 1.597226, 1.124123)\r\n\r\nSse.Add<Single>: RunFldScenario failed:\r\n    left: (0.5911472, 0.9279458, 0.5975241, 0.3108502)\r\n   right: (0.6367142, 0.3006574, 0.2591962, 0.6673818)\r\n  result: (1.227861, 1.228603, 0.8567203, 0.9782319)\r\n\r\nError: One or more scenarios did not complete as expected.\r\nRunning AddScalar.Single test...\r\nSse.AddScalar<Single>: RunClsVarScenario failed:\r\n    left: (0, 0, 0, 0)\r\n   right: (0, 0, 0, 0)\r\n  result: (1.138822, 0.2528097, 0.4958607, 0.5890472)\r\n\r\nSse.AddScalar<Single>: RunLclVarScenario_UnsafeRead failed:\r\n    left: (0.6187453, 0.5449098, 0.8567044, 0.1804269)\r\n   right: (0.3909108, 0.6793364, 0.447796, 0.7770419)\r\n  result: (1.009656, 0.5449098, 0.8567044, 0.1804269)\r\n\r\nSse.AddScalar<Single>: RunLclVarScenario_Load failed:\r\n    left: (0.6187453, 0.5449098, 0.8567044, 0.1804269)\r\n   right: (0.3909108, 0.6793364, 0.447796, 0.7770419)\r\n  result: (1.009656, 0.5449098, 0.8567044, 0.1804269)\r\n\r\nSse.AddScalar<Single>: RunLclVarScenario_LoadAligned failed:\r\n    left: (0.6187453, 0.5449098, 0.8567044, 0.1804269)\r\n   right: (0.3909108, 0.6793364, 0.447796, 0.7770419)\r\n  result: (1.009656, 0.5449098, 0.8567044, 0.1804269)\r\n\r\nSse.AddScalar<Single>: RunLclFldScenario failed:\r\n    left: (0.7431608, 0.3680078, 0.2915384, 0.4571137)\r\n   right: (0.3812023, 0.9455716, 0.04463677, 0.2569035)\r\n  result: (1.124363, 0.3680078, 0.2915384, 0.4571137)\r\n\r\nSse.AddScalar<Single>: RunFldScenario failed:\r\n    left: (0.7790595, 0.6797857, 0.4424345, 0.01052309)\r\n   right: (0.03844457, 0.4287005, 0.9583447, 0.505011)\r\n  result: (0.8175041, 0.6797857, 0.4424345, 0.01052309)\r\n\r\nError: One or more scenarios did not complete as expected.\r\nRunning And.Single test...\r\nRunning AndNot.Single test...\r\nSse.AndNot<Single>: RunClsVarScenario failed:\r\n    left: (0.1116372, 0.1851131, 0.3545335, 0.8148552)\r\n   right: (0, 0, 0, 0)\r\n  result: (1.124304E-37, 5.912337E-39, 2.393037E-38, 1.322114E-39)\r\n\r\nSse.AndNot<Single>: RunLclVarScenario_UnsafeRead failed:\r\n    left: (0.01076706, 0.1196732, 0.7541804, 0.1733052)\r\n   right: (0.1081166, 0.2048262, 0.1701058, 0.1039674)\r\n  result: (7.531112E-38, 9.452388E-38, 4.235912E-39, 7.219427E-38)\r\n\r\nSse.AndNot<Single>: RunLclVarScenario_Load failed:\r\n    left: (0.01076706, 0.1196732, 0.7541804, 0.1733052)\r\n   right: (0.1081166, 0.2048262, 0.1701058, 0.1039674)\r\n  result: (7.531112E-38, 9.452388E-38, 4.235912E-39, 7.219427E-38)\r\n\r\nSse.AndNot<Single>: RunLclVarScenario_LoadAligned failed:\r\n    left: (0.01076706, 0.1196732, 0.7541804, 0.1733052)\r\n   right: (0.1081166, 0.2048262, 0.1701058, 0.1039674)\r\n  result: (7.531112E-38, 9.452388E-38, 4.235912E-39, 7.219427E-38)\r\n\r\nSse.AndNot<Single>: RunLclFldScenario failed:\r\n    left: (0.4973004, 0.9443557, 0.3046108, 0.5677655)\r\n   right: (0.3790673, 0.4320269, 0.007059659, 0.4996125)\r\n  result: (3.881597E-43, 1.287513E-38, 4.187699E-38, 2.190425E-38)\r\n\r\nSse.AndNot<Single>: RunFldScenario failed:\r\n    left: (0.6086615, 0.4492103, 0.7428799, 0.04668195)\r\n   right: (0.1993912, 0.1871578, 0.9181196, 0.5265004)\r\n  result: (6.260601E-39, 2.387734E-39, 5.969489E-39, 9.461397E-38)\r\n\r\nError: One or more scenarios did not complete as expected.\r\nRunning CompareEqual.Single test...\r\nRunning CompareEqualScalar.Single test...\r\nRunning CompareEqualOrderedScalar.Single test...\r\nRunning CompareEqualUnorderedScalar.Single test...\r\nRunning CompareGreaterThan.Single test...\r\nRunning CompareGreaterThanScalar.Single test...\r\nRunning CompareGreaterThanOrderedScalar.Single test...\r\nRunning CompareGreaterThanUnorderedScalar.Single test...\r\nRunning CompareGreaterThanOrEqual.Single test...\r\nRunning CompareGreaterThanOrEqualScalar.Single test...\r\nRunning CompareGreaterThanOrEqualOrderedScalar.Single test...\r\nRunning CompareGreaterThanOrEqualUnorderedScalar.Single test...\r\nRunning CompareLessThan.Single test...\r\nRunning CompareLessThanScalar.Single test...\r\nRunning CompareLessThanOrderedScalar.Single test...\r\nRunning CompareLessThanUnorderedScalar.Single test...\r\nRunning CompareLessThanOrEqual.Single test...\r\nRunning CompareLessThanOrEqualScalar.Single test...\r\nRunning CompareLessThanOrEqualOrderedScalar.Single test...\r\nRunning CompareLessThanOrEqualUnorderedScalar.Single test...\r\nRunning CompareNotEqual.Single test...\r\nRunning CompareNotEqualScalar.Single test...\r\nRunning CompareNotEqualOrderedScalar.Single test...\r\nRunning CompareNotEqualUnorderedScalar.Single test...\r\nRunning CompareNotGreaterThan.Single test...\r\nRunning CompareNotGreaterThanScalar.Single test...\r\nRunning CompareNotGreaterThanOrEqual.Single test...\r\nRunning CompareNotGreaterThanOrEqualScalar.Single test...\r\nRunning CompareNotLessThan.Single test...\r\nRunning CompareNotLessThanScalar.Single test...\r\nRunning CompareNotLessThanOrEqual.Single test...\r\nRunning CompareNotLessThanOrEqualScalar.Single test...\r\nRunning CompareOrdered.Single test...\r\nRunning CompareOrderedScalar.Single test...\r\nRunning CompareUnordered.Single test...\r\nRunning CompareUnorderedScalar.Single test...\r\nRunning Divide.Single test...\r\nRunning DivideScalar.Single test...\r\nRunning Max.Single test...\r\nRunning MaxScalar.Single test...\r\nRunning Min.Single test...\r\nRunning MinScalar.Single test...\r\nRunning Multiply.Single test...\r\nRunning MultiplyScalar.Single test...\r\nRunning Or.Single test...\r\nRunning Subtract.Single test...\r\nRunning SubtractScalar.Single test...\r\nRunning Xor.Single test...\r\nExpected: 100\r\nActual: 0\r\nEND EXECUTION - FAILED\r\nFAILED\r\n```\r\n\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/x64_checked_windows_nt_gcstress0xc/73/#showFailuresLink\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/x86_checked_windows_nt_gcstress0xc/67/#showFailuresLink\r\n\r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7410832137","Type":"IssuesEvent","CreatedAt":"2018-03-21T05:21:47","Actor":"Varorbc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8857","RelatedDescription":"Opened issue \"How to create a .net framework class library in new .csproj formate\" (#8857) at dotnet/cli","RelatedBody":"How to create a .net framework class library in new .csproj formate？\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7410059502","Type":"PullRequestEvent","CreatedAt":"2018-03-21T00:01:34","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8856","RelatedDescription":"Opened pull request \"Cherry-pick commits from master to release/2.1.3xx\" (#8856) at dotnet/cli","RelatedBody":"Because the version has already been bumped in master, this PR cherry-picks the commits that have gone into master recently into release/2.1.3xx.\r\n\r\nBecause the tool command refactoring will be a quite large and there has been a number of changes in master impacting those files, this is intended to prevent a down-the-road merge that will be fraught with conflicts."},{"Id":"7409848671","Type":"PullRequestEvent","CreatedAt":"2018-03-20T22:56:44","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/8853","RelatedDescription":"Merged pull request \"Updating NuGet to 4.6.1-rtm-5019\" (#8853) at dotnet/cli","RelatedBody":""},{"Id":"7409707998","Type":"PullRequestEvent","CreatedAt":"2018-03-20T22:20:22","Actor":"AndyGerlicher","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8855","RelatedDescription":"Opened pull request \"MSBuild 15.7.108 for 2.1.2xx\" (#8855) at dotnet/cli","RelatedBody":"* Add feed to msbuild myget\r\n* Update MSBuild to 15.7.108 (contains both netcoreapp2.0 and netcoreapp2.1)\r\n\r\nNot sure if this will just work as-is and pickup the `netcoreapp2.0` implementation?"},{"Id":"7409686634","Type":"PullRequestEvent","CreatedAt":"2018-03-20T22:15:05","Actor":"AndyGerlicher","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8854","RelatedDescription":"Opened pull request \"MSBuild 15.7.108 for 2.1.3xx\" (#8854) at dotnet/cli","RelatedBody":""},{"Id":"7409451100","Type":"PullRequestEvent","CreatedAt":"2018-03-20T21:23:38","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8853","RelatedDescription":"Opened pull request \"Updating NuGet to 4.6.1-rtm-5019\" (#8853) at dotnet/cli","RelatedBody":""},{"Id":"7408718187","Type":"PullRequestEvent","CreatedAt":"2018-03-20T18:59:00","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/8852","RelatedDescription":"Opened pull request \"Merge release/2.1.2xx to release/2.1.3xx\" (#8852) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.2xx into release/2.1.3xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.2xx-to-release/2.1.3xx\ngit reset --hard upstream/release/2.1.3xx\ngit merge upstream/release/2.1.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.2xx-to-release/2.1.3xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"7408608034","Type":"IssuesEvent","CreatedAt":"2018-03-20T18:38:39","Actor":"wh1t3cAt1k","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/8851","RelatedDescription":"Opened issue \"An assembly specified in the application dependencies manifest was not found\" (#8851) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n- Unpack the following project in VS Code: [CoreRestaurants.zip](https://github.com/dotnet/cli/files/1830653/CoreRestaurants.zip)\r\n- `cd` into the directory\r\n- `dotnet build`\r\n- `dotnet ef dbcontext list`\r\n\r\n## Expected  behavior\r\n\r\nI see the migrations list or a meaningful error.\r\n\r\n## Actual behavior\r\n\r\nI see an obscure error\r\n```\r\nError:\r\n  An assembly specified in the application dependencies manifest (CoreRestaurants.deps.json) was not found:\r\n    package: 'CoreRestaurants', version: '1.0.0'\r\n    path: 'CoreRestaurants.dll'\r\n```\r\n## Workaround\r\n\r\nIt took me 2 days to figure out that the problem might be in access rights, and running the above stuff with `sudo` fixes the issue.\r\n\r\nBut the error could be more descriptive so that people spend less time figuring out what went wrong.\r\n\r\n## Environment data\r\n\r\nI into the `~/Projects/CoreRestaurants` folder.\r\n\r\nI run Mac OS 10.13.2 (17C88).\r\n\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.1.101)\r\n\r\nProduct Information:\r\n Version:            2.1.101\r\n Commit SHA-1 hash:  6c22303bf0\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.13\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.1.101/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.6\r\n  Build    : 74b1c703813c8910df5b96f304b0f2b78cdf194d\r\n```\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7408254772","Type":"IssuesEvent","CreatedAt":"2018-03-20T17:36:26","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/8837","RelatedDescription":"Closed issue \"Referenced assemblies set to copy local are not copied to the output directory\" (#8837) at dotnet/cli","RelatedBody":"@nefcanto commented on [Sat Dec 23 2017](https://github.com/dotnet/core/issues/1183)\n\n**Referenced assemblies which are set to Copy Local are not copied to the output directory**\r\n\r\nI've described this in [this StackOverflow question](https://stackoverflow.com/questions/47952361/assembly-referenced-in-csproj-is-not-copied-to-output-directory) too.\r\n\r\nI want to work with Azure Storage. I've added Nuget package references, this way:\r\n\r\n```\r\n<ItemGroup>\r\n\t<PackageReference Include=\"WindowsAzure.Storage\" Version=\"8.7.0\" />\r\n\t<PackageReference Include=\"Microsoft.WindowsAzure.ConfigurationManager\" Version=\"3.2.3\" />\r\n</ItemGroup>\r\n```\r\n\r\nHowever, when I build the project (which is a web project by the way), I receive an error that it can't find the required DLL files from these packages. When I look at the output folder which is `bin\\Debug\\netcoreapp2.0\\` in my case, I see that no DLL from those packages exist in that folder.\r\nThe point that it can't find those DLL files means that something is not working properly. We expect by including a package reference in CSPROJ, all of the required actions be taken care of automatically.\r\n\r\nSo, I decided to add extra lines of code, to explicitly copy the required DLL files to the output folder:\r\n\r\n```\r\n<ItemGroup>\r\n    <Reference Include=\"Microsoft.WindowsAzure.Configuration\">\r\n        <HintPath>..\\Microsoft.WindowsAzure.Configuration.dll</HintPath>\r\n        <Private>true</Private>\r\n    </Reference>\r\n    <Reference Include=\"Microsoft.WindowsAzure.Storage\">\r\n        <HintPath>..\\Microsoft.WindowsAzure.Storage.dll</HintPath>\r\n        <Private>true</Private>\r\n    </Reference>\r\n</ItemGroup>\r\n```\r\n\r\nBut they are not getting copied. What's the problem?\n\n---\n\n@Petermarcu commented on [Sat Dec 23 2017](https://github.com/dotnet/core/issues/1183#issuecomment-353737477)\n\nI think you need to go back to package references and you need to do `dotnet publish` to produce a build of your application with everything copied. `dotnet build` and `dotnet run` do things the \"fast way\" which is to reference things where they are on disk and avoid the cost of copying to the app folder. Publish is the way to build your final application with everything copied local. Make sure you run your app from the publish folder at that point using `dotnet path/to/publish/folder/App.dll`.\n\n---\n\n@brentmorrisa commented on [Fri Feb 09 2018](https://github.com/dotnet/core/issues/1183#issuecomment-364586325)\n\nDotnet publish is not getting my copy-local true files, either.\n\n"},{"Id":"7408248262","Type":"IssuesEvent","CreatedAt":"2018-03-20T17:35:24","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/6413","RelatedDescription":"Closed issue \"dotnet sln add - makes a bad entry in the sln file\" (#6413) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nI created the .sln file c:\\temp\\Testing\\Testing.sln\r\nContents:\r\n```\r\n∩╗┐\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio 15\r\nVisualStudioVersion = 15.0.26124.0\r\nMinimumVisualStudioVersion = 15.0.26124.0\r\nGlobal\r\n        GlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n                Debug|Any CPU = Debug|Any CPU\r\n                Debug|x64 = Debug|x64\r\n                Debug|x86 = Debug|x86\r\n                Release|Any CPU = Release|Any CPU\r\n                Release|x64 = Release|x64\r\n                Release|x86 = Release|x86\r\n        EndGlobalSection\r\n        GlobalSection(SolutionProperties) = preSolution\r\n                HideSolutionNode = FALSE\r\n        EndGlobalSection\r\nEndGlobal\r\n```\r\n\r\nI also created the project file c:\\temp\\Testing\\SomeDir\\TestProj\\TestProj.csproj\r\nThen I ran:\r\n`c:\\temp\\Testing\\SomeDir>dotnet sln c:\\temp\\Testing\\Testing.sln add TestProj\\TestProj.csproj`\r\nwhich produced the output:\r\n```Project `SomeDir\\TestProj\\TestProj.csproj` added to the solution.```\r\n## Expected  behavior\r\nThe command should have added the `SomeDir\\TestProj\\TestProj.csproj` project reference to the .sln file.\r\n\r\n## Actual behavior\r\nIn addition to adding the `SomeDir\\TestProj\\TestProj.csproj` project, it made a second entry in the .sln file, for the directory I was in. Here's the complete contents of the .sln file after running the command:\r\n```\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio 15\r\nVisualStudioVersion = 15.0.26124.0\r\nMinimumVisualStudioVersion = 15.0.26124.0\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"SomeDir\", \"SomeDir\", \"{2B2E90FF-5D1A-453F-ACA1-EFA09AF9BBDA}\"\r\nEndProject\r\nProject(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"TestProj\", \"SomeDir\\TestProj\\TestProj.csproj\", \"{7087D7CC-A14E-4E7E-985C-6408F6808E9A}\"\r\nEndProject\r\nGlobal\r\n        GlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n                Debug|Any CPU = Debug|Any CPU\r\n                Debug|x64 = Debug|x64\r\n                Debug|x86 = Debug|x86\r\n                Release|Any CPU = Release|Any CPU\r\n                Release|x64 = Release|x64\r\n                Release|x86 = Release|x86\r\n        EndGlobalSection\r\n        GlobalSection(SolutionProperties) = preSolution\r\n                HideSolutionNode = FALSE\r\n        EndGlobalSection\r\n        GlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n                {7087D7CC-A14E-4E7E-985C-6408F6808E9A}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\r\n                {7087D7CC-A14E-4E7E-985C-6408F6808E9A}.Debug|Any CPU.Build.0 = Debug|Any CPU\r\n                {7087D7CC-A14E-4E7E-985C-6408F6808E9A}.Debug|x64.ActiveCfg = Debug|x64\r\n                {7087D7CC-A14E-4E7E-985C-6408F6808E9A}.Debug|x64.Build.0 = Debug|x64\r\n                {7087D7CC-A14E-4E7E-985C-6408F6808E9A}.Debug|x86.ActiveCfg = Debug|x86\r\n                {7087D7CC-A14E-4E7E-985C-6408F6808E9A}.Debug|x86.Build.0 = Debug|x86\r\n                {7087D7CC-A14E-4E7E-985C-6408F6808E9A}.Release|Any CPU.ActiveCfg = Release|Any CPU\r\n                {7087D7CC-A14E-4E7E-985C-6408F6808E9A}.Release|Any CPU.Build.0 = Release|Any CPU\r\n                {7087D7CC-A14E-4E7E-985C-6408F6808E9A}.Release|x64.ActiveCfg = Release|x64\r\n                {7087D7CC-A14E-4E7E-985C-6408F6808E9A}.Release|x64.Build.0 = Release|x64\r\n                {7087D7CC-A14E-4E7E-985C-6408F6808E9A}.Release|x86.ActiveCfg = Release|x86\r\n                {7087D7CC-A14E-4E7E-985C-6408F6808E9A}.Release|x86.Build.0 = Release|x86\r\n        EndGlobalSection\r\n        GlobalSection(NestedProjects) = preSolution\r\n                {7087D7CC-A14E-4E7E-985C-6408F6808E9A} = {2B2E90FF-5D1A-453F-ACA1-EFA09AF9BBDA}\r\n        EndGlobalSection\r\nEndGlobal\r\n```\r\n\r\nNot related to this problem, but probably worth noting: It appears that running the command also removed the byte-order-marker from the .sln file, and replaced it with a newline.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n.NET Command Line Tools (2.0.0-preview2-005840)\r\n\r\nProduct Information:\r\n Version:            2.0.0-preview2-005840\r\n Commit SHA-1 hash:  8f2fcef544\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.0-preview2-005840\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0-preview1-002061-00\r\n  Build    : 2b70ec9c3b014af0c2a5f45de0e5b73a1ae51c09\r\n```\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7409161050","Type":"PullRequestEvent","CreatedAt":"2018-03-20T20:27:15","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/685","RelatedDescription":"Merged pull request \"Add options to control package trimming level, dgml, and hide trimming items\" (#685) at dotnet/standard","RelatedBody":"Fixes #680\r\n\r\n/cc @jnm2"},{"Id":"7409161041","Type":"IssuesEvent","CreatedAt":"2018-03-20T20:27:14","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/680","RelatedDescription":"Closed issue \"Not able to get non-framework assemblies to be trimmed\" (#680) at dotnet/standard","RelatedBody":"Using the latest prerelease and the option `<TrimUnusedDependencies>true</TrimUnusedDependencies>` in each root project, I'm now getting three non-framework assemblies (with pdbs) in the output which should have been trimmed.\r\n\r\nTwo of these assemblies are only referenced transitively via package references.  The other assembly is from a directly-referenced NuGet package, but `<RootPackageReference>false</RootPackageReference>` seems to have no effect on it. This last assembly is one of two lib assemblies in that directly-referenced NuGet package. I'm expecting the trimmer to trim this assembly and not trim the other assembly from the same package.\r\n\r\nI remember these three assemblies being trimmed by your trimmer before I started using packages from the MyGet feed, which I'm doing to preserve reference-related items.\r\n\r\n/cc @ericstj "},{"Id":"7408788288","Type":"PullRequestEvent","CreatedAt":"2018-03-20T19:12:44","Actor":"dotnet-maestro-bot","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/687","RelatedDescription":"Opened pull request \"Update BuildTools to preview3-02620-07 (master)\" (#687) at dotnet/standard","RelatedBody":""},{"Id":"7408413317","Type":"PullRequestEvent","CreatedAt":"2018-03-20T18:03:41","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/681","RelatedDescription":"Merged pull request \"Update BuildTools to preview3-02620-05 (master)\" (#681) at dotnet/standard","RelatedBody":""},{"Id":"7405508818","Type":"IssuesEvent","CreatedAt":"2018-03-20T09:49:02","Actor":"Foroughi","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/686","RelatedDescription":"Opened issue \"Missing NetStatandard 2 after install my nuget package\" (#686) at dotnet/standard","RelatedBody":"I have a netstandard2 class library project, which contains some Roslyn analyzers. I'm trying to create NuGet package using a` .nuspec `and `msbuild \\t:pack` command. All working find and i can create the nuget package easily. But as soon as i register my analyzer afteer installing the package on another project i get the following error for each analyzer in my package :\r\n\r\n`An instance of analyzer [AnalyzerName] cannot be created from [AnalyzerDllFile]: Could not load file or assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one of its dependencies. The system cannot find the file specified`\r\n\r\nHere is the .nuspec file :\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2012/06/nuspec.xsd\">\r\n  <metadata>\r\n    <id>[PackageId]</id>\r\n    <version>1.0.9</version>\r\n    <authors>Ali</authors>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>test</description>  \r\n  <!-- Solution A i found -->\r\n  <dependencies>\r\n  <group targetFramework=\"net46\">\r\n    <dependency id=\"NETStandard.Library\" version=\"2.0.0\" />\r\n  </group>\r\n\r\n  </dependencies>\r\n     <!-- Solution B i found -->\r\n    <references>      \r\n      <reference file=\"netstandard.dll\" />\r\n  </references>\r\n  </metadata>\r\n  <files>    \r\n    <file src=\"bin\\Debug\\netstandard2.0\\[PackageName].dll\" target=\"analyzers\\dotnet\\cs\" />    \r\n    <file src=\"tools\\*.ps1\" target=\"tools\\\" />\r\n  </files>\r\n</package>\r\n```\r\n\r\n\r\n\r\nI tried many solution that i found on internet but seems I'm missing something else\r\n\r\nFYI both project are targeting to .Net Framework 4.6.1"},{"Id":"7403652291","Type":"PullRequestEvent","CreatedAt":"2018-03-19T23:59:35","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/685","RelatedDescription":"Opened pull request \"Add options to control package trimming level, dgml, and hide trimming items\" (#685) at dotnet/standard","RelatedBody":"Fixes #680\r\n\r\n/cc @jnm2"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7410843925","Type":"PullRequestEvent","CreatedAt":"2018-03-21T05:27:21","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/28160","RelatedDescription":"Merged pull request \"API consistency for System.Memory APIs (argument names)\" (#28160) at dotnet/corefx","RelatedBody":"Here is an attempt to keep argument names consistent across the board for all the System.Memory APIs, based on our discussion (see https://github.com/dotnet/apireviews/pull/62).\r\n\r\nI have split each change into separate commits if that makes things easier to review.\r\n\r\n**List of changes:**\r\n\r\n- AsBytes and Cast: Change arg name source -> span\r\n- CopyTo: Change arg name array/sequence -> source\r\n- Several APIs: Change arg name arraySegment -> segment\r\n- Several APIs: Change arg name readOnlyMemory -> memory\r\n- BinaryPrimitives and Utf8Formatter: Change arg name buffer -> source or destination\r\n- Utf8Parser: Change arg name text -> source\r\n- Base64: Change arg name consumed/written -> bytesConsumed/bytesWritten\r\n- TryGetOwnedMemory: Change arg name ownedMemory -> owner, index -> start\r\n- BuffersExtensions.Write: Change arg name bufferWriter -> writer\r\n- Span Compare APIs: Change arg name first -> span, second/value -> other\r\n- ROSequence.TryGet & BuffersExtensions: Change arg name data -> memory, sequence -> source\r\n- BufferExtensions.Write: Change arg name source -> span\r\n- SequencePosition.Equals: Change arg name position -> other\r\n\r\ncc @KrzysztofCwalina, @joshfree, @terrajobst, @stephentoub, @davidfowl, @pakrym, @benaadams, @jkotas, @JeremyKuhne, @dotnet/corefxlab-contrib, @karelz, @danmosemsft "},{"Id":"7410826042","Type":"PullRequestEvent","CreatedAt":"2018-03-21T05:18:59","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/28294","RelatedDescription":"Opened pull request \"Don't skip blocks passed end and simplify the Seek implementation.\" (#28294) at dotnet/corefx","RelatedBody":"Borrows the tests from https://github.com/dotnet/corefx/pull/28261 by @benaadams and builds on top of it.\r\n\r\n- Ignore the formatting/clean up changes.\r\n- The most important change is to the Seek and SeekMultiSegment methods. With this simplification, the fix in https://github.com/dotnet/corefx/pull/28261 is no longer necessary.\r\n   - This change greatly simplifies the implementation (and the disassembly shrinks, i.e. this will almost certainly help performance). The loop body shrinks to 14 instructions, from 23.\r\n\r\n**Before (loop highlighted):**\r\n![image](https://user-images.githubusercontent.com/6527137/37695448-8ca866a8-2c8c-11e8-961b-caf2acac7987.png)\r\n\r\n**After (loop highlighted):**\r\n![image](https://user-images.githubusercontent.com/6527137/37695437-7c3affce-2c8c-11e8-88cd-69a09e03d59e.png)\r\n\r\n\r\ncc @AlexRadch, @pakrym, @davidfowl, @joshfree, @benaadams "},{"Id":"7410822771","Type":"PullRequestEvent","CreatedAt":"2018-03-21T05:17:26","Actor":"danmosemsft","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/28242","RelatedDescription":"Merged pull request \"WIP: Enable TimesIncludeMillisecondPart on selected filesystems only\" (#28242) at dotnet/corefx","RelatedBody":"Use filesystem name to suppress the test failure"},{"Id":"7410818045","Type":"PullRequestEvent","CreatedAt":"2018-03-21T05:15:07","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/28293","RelatedDescription":"Opened pull request \"Update ProjectNTfs, ProjectNTfsTestILC to beta-26321-00, beta-26321-00, respectively (master)\" (#28293) at dotnet/corefx","RelatedBody":""},{"Id":"7410763414","Type":"PullRequestEvent","CreatedAt":"2018-03-21T04:48:30","Actor":"Anipik","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/28292","RelatedDescription":"Opened pull request \"test enabled on redhat6\" (#28292) at dotnet/corefx","RelatedBody":""},{"Id":"7410757084","Type":"PullRequestEvent","CreatedAt":"2018-03-21T04:45:20","Actor":"AlexRadch","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/28291","RelatedDescription":"Opened pull request \"Fixed netfx System.Diagnostics.StackTrace.Tests fails on non English Windows\" (#28291) at dotnet/corefx","RelatedBody":"Fixed netfx System.Diagnostics.StackTrace.Tests fails on non English Windows. See https://github.com/dotnet/corefx/issues/28136"},{"Id":"7410754012","Type":"PullRequestEvent","CreatedAt":"2018-03-21T04:43:49","Actor":"JeremyKuhne","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/28220","RelatedDescription":"Merged pull request \"Use FileSystemName in FileSystemWatcher\" (#28220) at dotnet/corefx","RelatedBody":"- Uses newer spanified version in FileSystemName\r\n- Doesn't allow extended match chars `<`, `>`, `\"`  as these are legal in Unix\r\n\r\ncc: @pjanotti, @danmosemsft\r\n\r\nNote that there are a lot of spanification opportunities here that I'll be creating issues to follow up on.\r\n"},{"Id":"7410719787","Type":"PullRequestEvent","CreatedAt":"2018-03-21T04:27:14","Actor":"mmitche","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/28290","RelatedDescription":"Opened pull request \"Update buildtools to 2.1.0-preview2-02621-01\" (#28290) at dotnet/corefx","RelatedBody":"Fixes issue with dumpling https://github.com/dotnet/buildtools/pull/1972"},{"Id":"7410717075","Type":"PullRequestEvent","CreatedAt":"2018-03-21T04:25:55","Actor":"sdmaclea","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/28289","RelatedDescription":"Opened pull request \"[Arm64/Ubuntu] Rework official build flow to support bootstrapping\" (#28289) at dotnet/corefx","RelatedBody":"@mmitche @weshaggard @janvorli @stephentoub PTAL\r\n\r\nI was concerned the `buildpipeline/DotNet-CoreFx-Trusted-Linux-Crossbuild.json` wouldn't work for arm64.  I took a detailed look and I think I understood it enough to be certain it wouldn't work for arm64.  \r\n\r\nI manually built arm64 corefx packages.  Using this process so it should be close.\r\n\r\nThe primary impact of this patch is that \r\n```\r\n./build.sh              $(PB_BuildArguments)\r\n```\r\nbecomes\r\n```\r\n./build-native.sh       $(PB_BuildNativeArguments)\r\n./build-managed.sh      $(PB_BuildManagedArguments)\r\n./build-packages.sh     $(PB_BuildPackagesArguments)\r\n```\r\nThis allows cross bootstrapped builds by allowing th managed build to be built against x64.\r\n\r\nThe original draft of the patch added a new file \r\n`DotNet-CoreFx-Trusted-Linux-Crossbuild-Bootstrap.json`, but this shared approach seemed better.\r\n\r\nI will also update #28280 to use a similar flow and build all the way to packages."},{"Id":"7410705400","Type":"PullRequestEvent","CreatedAt":"2018-03-21T04:20:42","Actor":"mmitche","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/pull/27570","RelatedDescription":"Closed pull request \"Update BuildTools, CoreClr, CoreFx, CoreSetup to preview2-02621-01, preview1-26216-04, preview1-26216-02, preview1-26216-03, respectively (release/2.1)\" (#27570) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7410767495","Type":"PullRequestEvent","CreatedAt":"2018-03-21T04:50:25","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25644","RelatedDescription":"Opened pull request \"Optimize cases where nullable always has value\" (#25644) at dotnet/roslyn","RelatedBody":"### Customer scenario\r\nOptimize the tuple-equality case where a nullable tuple or nullable element is known to never be null.\r\n\r\n### Bugs this fixes\r\nFixes https://github.com/dotnet/roslyn/issues/25487\r\n\r\n### Risk\r\n### Performance impact\r\nLow. The change is only affecting tuple equality lowering.\r\n\r\n### Is this a regression from a previous update?\r\nNo"},{"Id":"7410654065","Type":"PullRequestEvent","CreatedAt":"2018-03-21T03:58:03","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25641","RelatedDescription":"Merged pull request \"Merge master into features/recursive-patterns\" (#25641) at dotnet/roslyn","RelatedBody":""},{"Id":"7410555962","Type":"PullRequestEvent","CreatedAt":"2018-03-21T03:17:55","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25643","RelatedDescription":"Opened pull request \"Merge Roslyn.Test.Utilities.Traits with Microsoft.CodeAnalysis.Test.Utilities.Traits\" (#25643) at dotnet/roslyn","RelatedBody":"Merge the two `Traits` classes we use for test classification to avoid name resolution errors. All files are changes to `using`/`Imports` except the following:\r\n\r\n* src/EditorFeatures/Test2/EditorServicesTest2.vbproj (new namespace import to match old)\r\n* src/EditorFeatures/TestUtilities/Traits.cs (removed)\r\n* src/EditorFeatures/VisualBasicTest/BasicEditorServicesTest.vbproj (new namespace import to match old)\r\n* src/Test/Utilities/Portable/Traits/Traits.cs (merged)\r\n\r\nTest only change.\r\n\r\n<details><summary>Ask Mode template not completed</summary>\r\n\r\n<!-- This template is not always required. If you aren't sure about whether it's needed or want help filling out the sections,\r\nsubmit the pull request and then ask us for help. :) -->\r\n\r\n### Customer scenario\r\n\r\nWhat does the customer do to get into this situation, and why do we think this\r\nis common enough to address for this release.  (Granted, sometimes this will be\r\nobvious \"Open project, VS crashes\" but in general, I need to understand how\r\ncommon a scenario is)\r\n\r\n### Bugs this fixes\r\n\r\n(either VSO or GitHub links)\r\n\r\n### Workarounds, if any\r\n\r\nAlso, why we think they are insufficient for RC vs. RC2, RC3, or RTW\r\n\r\n### Risk\r\n\r\nThis is generally a measure our how central the affected code is to adjacent\r\nscenarios and thus how likely your fix is to destabilize a broader area of code\r\n\r\n### Performance impact\r\n\r\n(with a brief justification for that assessment (e.g. \"Low perf impact because no extra allocations/no complexity changes\" vs. \"Low\")\r\n\r\n### Is this a regression from a previous update?\r\n\r\n### Root cause analysis\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n### How was the bug found?\r\n\r\n(E.g. customer reported it vs. ad hoc testing)\r\n\r\n### Test documentation updated?\r\n\r\nIf this is a new non-compiler feature or a significant improvement to an existing feature, update https://github.com/dotnet/roslyn/wiki/Manual-Testing once you know which release it is targeting.\r\n\r\n</details>\r\n"},{"Id":"7410300110","Type":"IssuesEvent","CreatedAt":"2018-03-21T01:33:28","Actor":"vsfeedback","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/25642","RelatedDescription":"Opened issue \"Code fix doesn't see changes in document/project/solution\" (#25642) at dotnet/roslyn","RelatedBody":"Trying to invoke the &quot;Require accessibility modifier&quot; code fix shows a preview for a single item but then does not see/fix changes for a document/project/solution.\n\nSee recording.\n\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/217391/code-fix-doesnt-see-changes-in-documentprojectsolu.html\nVSTS ticketId: 585383_\n_These are the original issue comments:_\n(no comments)\n_These are the original issue solutions:_\n(no solutions)"},{"Id":"7410260336","Type":"PullRequestEvent","CreatedAt":"2018-03-21T01:17:21","Actor":"gafter","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/25641","RelatedDescription":"Opened pull request \"Merge master into features/recursive-patterns\" (#25641) at dotnet/roslyn","RelatedBody":""}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7410686452","Type":"PullRequestEvent","CreatedAt":"2018-03-21T04:12:05","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5589","RelatedDescription":"Opened pull request \"Enclose all Windows compiler/linker response file lines in quotes\" (#5589) at dotnet/corert","RelatedBody":"This is a simple brute-force solution to ensure that paths with spaces are parser correctly"},{"Id":"7410507866","Type":"PullRequestEvent","CreatedAt":"2018-03-21T02:58:59","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5582","RelatedDescription":"Merged pull request \"Enable local strongname signing\" (#5582) at dotnet/corert","RelatedBody":"sign.targets defaults assume that the strongname signing will be done by the official strongname keys. We do not want that for ILVerification.dll since we have our own local checked in key."},{"Id":"7410205273","Type":"PullRequestEvent","CreatedAt":"2018-03-21T00:55:32","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5588","RelatedDescription":"Merged pull request \"Produce correct pdb file during \"Dotnet publish\"\" (#5588) at dotnet/corert","RelatedBody":"The .pdb file under the publish folder only contains the target app's managed symbols. This deletes the incorrect symbols and substitutes them with the correctly generated native ones. "},{"Id":"7409993901","Type":"PullRequestEvent","CreatedAt":"2018-03-20T23:39:48","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5588","RelatedDescription":"Opened pull request \"Produce correct pdb file during \"Dotnet publish\"\" (#5588) at dotnet/corert","RelatedBody":"The .pdb file under the publish folder only contains the target app's managed symbols. This deletes the incorrect symbols and substitutes them with the correctly generated native ones. "},{"Id":"7409968973","Type":"IssuesEvent","CreatedAt":"2018-03-20T23:31:42","Actor":"mellinoe","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5587","RelatedDescription":"Opened issue \"canGetCookieForPInvokeCalliSig not implemented\" (#5587) at dotnet/corert","RelatedBody":"I was trying to compile this project with CoreRT: https://github.com/mellinoe/veldrid/tree/master/src/NeoDemo.\r\n\r\nI added the latest `Microsoft.DotNet.ILCompiler` package and simply ran `dotnet publish -r win-x64`.\r\n\r\n```\r\nILCompiler.CodeGenerationFailedException: Code generation failed ---> System.NotImplementedException: canGetCookieForPInvokeCalliSig\r\n```\r\n\r\nAny plans to implement this functionality, or is it tracked anywhere else? I searched briefly but didn't find anything."},{"Id":"7409949148","Type":"PullRequestEvent","CreatedAt":"2018-03-20T23:25:40","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5586","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5586) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7409691654","Type":"PullRequestEvent","CreatedAt":"2018-03-20T22:16:19","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5586","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5586) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7409665156","Type":"PullRequestEvent","CreatedAt":"2018-03-20T22:10:00","Actor":"A-And","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5585","RelatedDescription":"Opened pull request \"Add conservative upper bound calculation for GC in CoffNativeCodeManager\" (#5585) at dotnet/corert","RelatedBody":"Mirroring what's implemented in RhCodeMan. "}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7409443853","Type":"PullRequestEvent","CreatedAt":"2018-03-20T21:22:13","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2069","RelatedDescription":"Opened pull request \"Updating NuGet to 4.6.1-rtm-5019\" (#2069) at dotnet/sdk","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"976141100074373120","CreatedAt":"2018-03-20T16:59:08+00:00","UserScreenname":"dotnet","Text":"Check out this video from @csharpfritz and @jasonbock talking about @roslyn Analyzers and making your code easier t… https://t.co/Nv8pTxt0zP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":2,"RawContent":null},{"Id":"975544139893825536","CreatedAt":"2018-03-19T01:27:02+00:00","UserScreenname":"dotnet","Text":"We agree with this sentiment very much! We often retweet blog posts that came to our attention. While it doesn't im… https://t.co/GtFpUrShX8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":27,"FavoriteCount":5,"RawContent":null},{"Id":"974694823067246592","CreatedAt":"2018-03-16T17:12:09+00:00","UserScreenname":"dotnet","Text":"Check out the latest On .NET show with @jeremylikness &amp; @jplane talking .NET Core and containers. #dotnetcore https://t.co/NfFbKIsLTw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":32,"FavoriteCount":18,"RawContent":null},{"Id":"974414421245095936","CreatedAt":"2018-03-15T22:37:56+00:00","UserScreenname":"dotnet","Text":"Transport Layer Security (TLS) best practices with the .NET Framework article published https://t.co/SbAZXvK8n7 #security","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":193,"FavoriteCount":99,"RawContent":null},{"Id":"974274431127302145","CreatedAt":"2018-03-15T13:21:40+00:00","UserScreenname":"dotnet","Text":"Tune in to @csharpfritz and @shanselman talking through an #ASP.NET upgrade at 10am ET / 7am PT / 14:00 UTC! https://t.co/WyBUY4oGYv","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":6,"FavoriteCount":6,"RawContent":null},{"Id":"974176533270036480","CreatedAt":"2018-03-15T06:52:39+00:00","UserScreenname":"dotnet","Text":"Exciting news! https://t.co/wgCtuUTXcr","Source":"<a href=\"http://twitter.com/#!/download/ipad\" rel=\"nofollow\">Twitter for iPad</a>","RetweetCount":71,"FavoriteCount":33,"RawContent":null}]}},"RunOn":"2018-03-21T05:30:20.0586187Z","RunDurationInMilliseconds":7827}