{"Data":{"Blog":{"FeedItems":[{"Title":"Introduction to tvOS","PublishedOn":"2017-12-11T20:03:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Recently, Apple announced the AppleTV 4K, an improved version of the AppleTV launched in 2015, which brought us a new platform to develop for in tvOS. With the touch-enabled Siri remote, we have a new...","Href":"https://blog.xamarin.com/introduction-to-tvos/","RawContent":null},{"Title":"Native Forms is Polished and Shiny in Xamarin.Forms 2.5.0","PublishedOn":"2017-12-08T20:37:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since we previewed Native Forms in June, we’ve been working to smooth the rough edges and polish it up for Xamarin.Forms 2.5.0 by fixing bugs and integrating the excellent feedback from the community....","Href":"https://blog.xamarin.com/native-forms-polished-shiny-xamarin-forms-2-5-0/","RawContent":null},{"Title":"Even Easier iOS App Provisioning in Visual Studio for Mac ","PublishedOn":"2017-12-07T19:10:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS provisioning is a notoriously hard concept to grasp; even the best developers can be stumped by a signing identity. As a content developer at Xamarin, I’ve created thorough documentation on the...","Href":"https://blog.xamarin.com/even-easier-ios-app-provisioning-visual-studio-mac/","RawContent":null},{"Title":"Get Your Azure Mobile Badge from Xamarin University!","PublishedOn":"2017-12-06T18:38:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re excited to introduce the Azure Mobile badge, our first non-certification badge, offered exclusively through Xamarin University! Unlock this badge by completing the Xamarin University Azure...","Href":"https://blog.xamarin.com/get-azure-mobile-badge-xamarin-university/","RawContent":null},{"Title":"￼Fidelity Mobile Unites Brazilian Citizens and Elected Officials with Real-Time Chat Apps","PublishedOn":"2017-12-05T20:11:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Real-time messaging apps are becoming commonplace, allowing us to communicate immediately or asynchronously with individuals and groups. Inspired by chat apps’ success with consumer businesses,...","Href":"https://blog.xamarin.com/%ef%bf%bcfidelity-mobile-unites-brazilian-citizens-elected-officials-real-time-chat-apps/","RawContent":null},{"Title":"See What’s New in Visual Studio 2017 Version 15.5","PublishedOn":"2017-12-04T19:54:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we&#8217;re releasing Visual Studio 2017 version 15.5 into stable. This release includes many improvements for mobile developers, including enhancements to XAML editing, the Xamarin Live...","Href":"https://blog.xamarin.com/whats-new-visual-studio-2017-version-15-5/","RawContent":null},{"Title":"Podcast: Xamarin.Forms 2.5.0, Live Player, and What’s New in Visual Studio for Mac","PublishedOn":"2017-12-01T21:48:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I cover the latest news for mobile developers from Microsoft Connect(); 2017, including Xamarin.Forms 2.5.0 and awesome updates to the Live...","Href":"https://blog.xamarin.com/podcast-xamarin-forms-2-5-0-live-player-whats-new-visual-studio-mac/","RawContent":null},{"Title":"Xamarin Developer Events in December","PublishedOn":"2017-12-01T18:16:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The .NET developer community is vastly expanding, so there&#8217;s more opportunity than ever to network with local user groups and learn about new and exciting releases, tooling, and updates to...","Href":"https://blog.xamarin.com/xamarin-developer-events-december/","RawContent":null},{"Title":"Supercharge Your Xamarin.Mac Application Startup Time","PublishedOn":"2017-11-30T20:31:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Startup performance matters, as it&#8217;s the first feature users come across when using your application. In this post, we&#8217;ll walk through some recent samples that improve Xamarin.Mac startup...","Href":"https://blog.xamarin.com/supercharge-xamarin-mac-application-startup-time/","RawContent":null},{"Title":"Upcoming Webinars | Get the Most Out of Android 8 Oreo and iOS 11","PublishedOn":"2017-11-29T20:22:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Join us on December 13 and December 14 for our newest webinar series, where we’ll show you how to make your Xamarin apps even better by adding the latest and greatest Android and iOS updates. Visual...","Href":"https://blog.xamarin.com/upcoming-webinars-get-the-most-out-of-android-8-oreo-and-ios-11-for-xamarin-developers/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"6974877891","Type":"PullRequestEvent","CreatedAt":"2017-12-12T03:20:15","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1096","RelatedDescription":"Opened pull request \"Add \"AndroidManifest resource collection and generate information\" tool.\" (#1096) at xamarin/xamarin-android","RelatedBody":""},{"Id":"6974150979","Type":"PullRequestEvent","CreatedAt":"2017-12-11T23:15:30","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1095","RelatedDescription":"Opened pull request \"[tests] fix BuildAMassiveApp under MSBuild\" (#1095) at xamarin/xamarin-android","RelatedBody":"Context: https://devdiv.visualstudio.com/DevDiv/Default/_build/index?buildId=1206705&tab=ms.vss-test-web.test-result-details\r\n\r\n`BuildAMassiveApp` has been failing under MSBuild with:\r\n```\r\nE:\\A\\_work\\1\\s\\bin\\Debug\\lib\\xamarin.android\\xbuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1167,2):\r\nerror MSB4018: The \"ResolveLibraryProjectImports\" task failed unexpectedly.\r\nSystem.IO.FileNotFoundException: Could not load assembly 'Lib0,\r\nVersion=0.0.0.0, Culture=neutral, PublicKeyToken='. Perhaps it doesn't exist in the Mono for Android profile?\r\nFile name: 'Lib0.dll'\r\n```\r\nIt turns out that setting `BuildingInsideVisualStudio` signals MSBuild\r\nthat it doesn't need to figure out project dependencies. So\r\n`Lib0.csproj` isn't built at the time `ResolveLibraryProjectImports`\r\nruns.\r\n\r\nFor now, it seems simpler to turn off `BuildingInsideVisualStudio` in\r\nthis test under MSBuild, since it was not the goal of the test to verify\r\nhow things would work inside Visual Studio."},{"Id":"6972132479","Type":"IssuesEvent","CreatedAt":"2017-12-11T16:06:38","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1093","RelatedDescription":"Opened issue \"Add the linker analyzer tool to XA\" (#1093) at xamarin/xamarin-android","RelatedBody":"### Expected Behavior\r\n\r\nMake the linkeranalyzer.exe and a helper script available in the XA installation.\r\n\r\n### Actual Behavior\r\n\r\nlinkeranalyzer.exe is not installed.\r\n"},{"Id":"6971947322","Type":"IssuesEvent","CreatedAt":"2017-12-11T15:34:41","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1092","RelatedDescription":"Opened issue \"Merge LinkAssemblies and StripEmbeddedLibraries tasks\" (#1092) at xamarin/xamarin-android","RelatedBody":"An idea: it might be possible to improve build time by implementing striping the embedded libraries as linker step. We already load all the assemblies in the linker, so we might just strip them at the same time as well.\r\n\r\n### Expected Behavior\r\n\r\nStrip embedded libraries in the linker. Possibly faster build times.\r\n\r\n### Actual Behavior\r\n\r\nStripping of embedded libraries is done as a separate target/task.\r\n"},{"Id":"6971621162","Type":"IssuesEvent","CreatedAt":"2017-12-11T14:37:12","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1090","RelatedDescription":"Closed issue \"Support full aot for Android\" (#1090) at xamarin/xamarin-android","RelatedBody":"Hope to implement \"full aot\" to remove libmonodroid_bundle_app.so.\r\nIt can reduce the size of the software when we do not need to dynamically generate the code.\r\n\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"6971010107","Type":"PullRequestEvent","CreatedAt":"2017-12-11T12:27:46","Actor":"atsushieno","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1091","RelatedDescription":"Opened pull request \"[msbuild] Add JavaSourceJar build action to Binding project.\" (#1091) at xamarin/xamarin-android","RelatedBody":"JavaSourceJar works like JavaDocJar, but in slightly more complicated way.\r\n\r\nJavaDocJar only extracts the jar contents and pass index.html as JavaDocIndex,\r\nwhile JavaSourceJar extracts the jar, then run `javadoc` to generate javadoc,\r\nthen pass its generated index.html as JavaDocIndex."},{"Id":"6965665165","Type":"IssuesEvent","CreatedAt":"2017-12-09T09:19:31","Actor":"yinyue200","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1090","RelatedDescription":"Opened issue \"Support full aot for Android\" (#1090) at xamarin/xamarin-android","RelatedBody":"Hope to implement \"full aot\" to remove libmonodroid_bundle_app.so.\r\nIt can reduce the size of the software when we do not need to dynamically generate the code.\r\n\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"6961514399","Type":"PullRequestEvent","CreatedAt":"2017-12-08T09:46:51","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1086","RelatedDescription":"Merged pull request \"[tests] fixed several tests on Windows\" (#1086) at xamarin/xamarin-android","RelatedBody":"Changes:\r\n- `CheckResourceDesigner*` for F# can't pass on Windows due to the\r\nMSBuild project API sorting. F# relies on files in the `fsproj` in a\r\ncertain order, which cannot be achieved if the MSBuild API always does\r\nits own sorting. I feel it is best to skip these tests on Windows for\r\nnow.\r\n- `BuildExternalJavaLibrary` should just use `$(MSBuildExtensionsPath)`\r\nsince `$(MonoDroidInstallDirectory)` is not set on Windows. It also\r\nneeded to apply a timestamp to the new reference, or the project file\r\nwasn't saving on Windows. The last fix is using `Path.Combine`.\r\n- `BuildAppCheckDebugSymbols` needs to set `DebugType` to `portable` on\r\nWindows in order to produce pdb files\r\n- `BuildAppWithManagedResourceParserAndLibraries` was consistently\r\ntaking ~9 seconds on the VSTS build agent. I was also hitting the 260\r\nmax path limit on my machine, so I shortened the directory name.\r\n- `CheckBuildIdIsUnique` needed to take into account that `mdb` files\r\nare generated on Windows\r\n- `CheckLibraryImportsUpgrade` needed a change to force the project file\r\nto re-save on Windows. I think this is happening because the timestamps\r\nhave down to the millisecond on Windows, so Windows more thoroughly\r\nenforces the save-skipping logic. I also needed to change one assertion\r\non Windows, since `IncrementalClean` is deleting a directory on `Build`.\r\nThis is fine.\r\n- `KnownPackages` had the wrong `<Reference />` name for\r\n`Xamarin.Android.FSharp.ResourceProvider.Runtime`\r\n- Added a `ToString` implementation for `BuildItem` since it greatly\r\nimproved the debugging experience. You can mouseover an item and see the\r\nvalue of `Include()`."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"6974631074","Type":"PullRequestEvent","CreatedAt":"2017-12-12T01:52:39","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1377","RelatedDescription":"Merged pull request \"[Build] Update build submodule to 15.5.1\" (#1377) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nUpdate Xamarin.Forms.Build 15.5.1 \r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"6974251467","Type":"PullRequestEvent","CreatedAt":"2017-12-11T23:45:19","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1339","RelatedDescription":"Merged pull request \"[Android] Unspecified can be the default window soft input mode\" (#1339) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nRe-doing #917 without the platform specific.\r\n\r\n### Bugs Fixed ###\r\n\r\n- N/A\r\n\r\nAdded:\r\n - `Unspecified` is an option for `WindowSoftInputModeAdjustProperty`\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6973872994","Type":"IssuesEvent","CreatedAt":"2017-12-11T22:05:59","Actor":"kwiqniss","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1378","RelatedDescription":"Opened issue \"Java.Lang.IllegalStateException: Can not perform this action after onSaveInstanceState\" (#1378) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nI'm filing this on behalf of a customer. Please contact me directly for customer specific details which I can't share here.\r\n\r\nQ: Describe the issue including as much detail as possible\r\nA: We upgraded our mobile app on 11/16. After that we have seen a huge increase in crashes as reported by Google Play console (see picture). The HockeyApp reporting did not see a similar increase.\r\n\r\nHere is the little info that Google Play has on the crash:\r\njava.lang.RuntimeException: \r\n  at com.android.internal.os.ZygoteInit.main (ZygoteInit.java:1410)\r\nCaused by: java.lang.reflect.InvocationTargetException: \r\n  at java.lang.reflect.Method.invoke (Native Method)\r\n  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run (ZygoteInit.java:1520)\r\n\r\nWe *believe* it is also the most frequent bug we have in HockeyApp, which has more info:\r\nFragmentManagerImpl.checkStateLoss\r\nJava.Lang.IllegalStateException: Can not perform this action after onSaveInstanceState\r\njava.lang.IllegalStateException: Can not perform this action after onSaveInstanceState\r\nandroid.support.v4.app.FragmentManagerImpl.checkStateLoss()FragmentManager.java:1842\r\nandroid.support.v4.app.FragmentManagerImpl.enqueueAction()FragmentManager.java:1860\r\nandroid.support.v4.app.BackStackRecord.commitInternal()BackStackRecord.java:650\r\nandroid.support.v4.app.BackStackRecord.commit()BackStackRecord.java:609\r\nandroid.support.v4.app.DialogFragment.show()DialogFragment.java:143\r\nmono.java.lang.RunnableImplementor.n_run(Native Method)\r\nmono.java.lang.RunnableImplementor.run()RunnableImplementor.java:30\r\nandroid.app.Activity.runOnUiThread()Activity.java:6082\r\nmd5a9f9c2b68bba3aa8be56a056e4cd456a.MainActivity.n_onActivityResult(Native Method)\r\nmd5a9f9c2b68bba3aa8be56a056e4cd456a.MainActivity.onActivityResult()MainActivity.java:66\r\nepic.mychart.android.library.prelogin.a.b()AuthenticationService.java:758\r\nepic.mychart.android.library.prelogin.a.a()AuthenticationService.java:55\r\nepic.mychart.android.library.prelogin.a$4.a()AuthenticationService.java:605\r\nepic.mychart.android.library.prelogin.a$5.a()AuthenticationService.java:628\r\nepic.mychart.android.library.e.f.onPostExecute()CustomAsyncTask.java:608\r\nandroid.os.AsyncTask.finish()AsyncTask.java:667\r\nat android.os.AsyncTask.-wrap1(AsyncTask.java)\r\nandroid.os.AsyncTask$InternalHandler.handleMessage()AsyncTask.java:684\r\nandroid.os.Handler.dispatchMessage()Handler.java:102\r\nandroid.os.Looper.loop()Looper.java:154\r\nandroid.app.ActivityThread.main()ActivityThread.java:6823\r\njava.lang.reflect.Method.invoke(Native Method)\r\ncom.android.internal.os.ZygoteInit$MethodAndArgsCaller.run()ZygoteInit.java:1557\r\ncom.android.internal.os.ZygoteInit.main()ZygoteInit.java:1445\r\nXamarin caused by: Java.Lang.IllegalStateException: Can not perform this action after onSaveInstanceState\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()<9d0e62014b6e4697a3a27c36abf42d32>:0\r\nJava.Interop.JniEnvironment.InstanceMethods.CallNonvirtualVoidMethod(JniObjectReference instance, JniObjectReference type, JniMethodInfo method, JniArgumentValue* args)<788eebdbf0814bff8f927caa5d06e5bb>:0\r\nAndroid.Runtime.JNIEnv.CallNonvirtualVoidMethod(IntPtr jobject, IntPtr jclass, IntPtr jmethod, JValue* parms)<a3404d7626684c388c9fc4514745d9d3>:0\r\nAndroid.Support.V4.App.DialogFragment.Show(FragmentManager manager, string tag)<7e083afc7c9045f59e01d9c14931060d>:0\r\nAcr.UserDialogs.UserDialogsImpl.<>c__DisplayClass26_0<TFragment, TConfig>.<ShowDialog>b__0()<a5fa07ca31cf44ee8fe096156a765ea2>:0\r\nJava.Lang.Thread.RunnableImplementor.Run()<a3404d7626684c388c9fc4514745d9d3>:0\r\nJava.Lang.IRunnableInvoker.n_Run(IntPtr jnienv, IntPtr native__this)<a3404d7626684c388c9fc4514745d9d3>:0\r\nat (wrapper dynamic-method) System.Object:e9b9f417-abc6-4c6f-91e1-cb97882c1fe4 (intptr,intptr)\r\n--- End of managed Java.Lang.IllegalStateException stack trace ---\r\njava.lang.IllegalStateException: Can not perform this action after onSaveInstanceState\r\nandroid.support.v4.app.FragmentManagerImpl.checkStateLoss()FragmentManager.java:1842\r\nandroid.support.v4.app.FragmentManagerImpl.enqueueAction()FragmentManager.java:1860\r\nandroid.support.v4.app.BackStackRecord.commitInternal()BackStackRecord.java:650\r\nandroid.support.v4.app.BackStackRecord.c\r\n\r\n\r\n### Steps to Reproduce\r\nAre you able to reproduce the issue? Is it consistent? Or intermittent?\r\n-We don’t know how to reproduce, but it happens a lot to our customers. See picture of crashes.\r\n \r\nDo you have related code to what’s shown in the stack trace? Is that something you can share? \r\n-None of our code is referenced in the Google Play crash report. \r\n\r\n### Expected Behavior\r\nApplication should not crash with this error\r\n\r\n### Actual Behavior\r\nThis crash is reported in Google Play crash reports\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.3.4.267\r\n- Last known good version: Xamarin.Forms 2.3.2.127\r\n- IDE: Visual Studio 2017 Enterprise 15.4.4\r\n- Platform Target Frameworks: <!-- All that apply -->\r\nAndroid - all versions\r\n\r\n- Nuget Packages: see attached screenshot for Nuget packages before and after the change that introduced the issue.\r\n- Affected Devices: No specific device type stands out. All devices.\r\n\r\n\r\n[XamarinWorkItemDetails.zip](https://github.com/xamarin/Xamarin.Forms/files/1549558/XamarinWorkItemDetails.zip)\r\n\r\nPlease contact me directly for customer specific details - david.hollowell @ alias"},{"Id":"6973759824","Type":"PullRequestEvent","CreatedAt":"2017-12-11T21:40:47","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1320","RelatedDescription":"Merged pull request \"[C] Adding deconstructors for common structs\" (#1320) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n[C] Adding deconstructors for common structs\r\n\r\n### Bugs Fixed ###\r\n\r\n/\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n - `Thickness.Decontruct(out double, out double, out double, out double)`\r\n - `Rectangle.Decontruct(out double, out double, out double, out double)`\r\n - `Point.Decontruct(out double, out double)`\r\n - `Size.Decontruct(out double, out double)`\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense"},{"Id":"6973723032","Type":"PullRequestEvent","CreatedAt":"2017-12-11T21:32:47","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1317","RelatedDescription":"Merged pull request \"[C] bind to ValueTuples\" (#1317) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nAllow ValueTuple shorthand names to be used in Binding paths.\r\n\r\n```\r\npublic class Person {\r\n    public (string First, string Last) Name { get; set; }\r\n}\r\n```\r\n\r\nAllow this kind of Binding path\r\n```\r\n<Label Text=\"{Binding Name.First}\" />\r\n```\r\n\r\nIt also allows to bind to anonymous tuples using the indexer (that should have worked already, but wasn't). This is possible as ValueTuple implements `ITuple`.\r\n```\r\n<Label Text=\"{Binding Name[0]}\" />\r\n```\r\n\r\n### Bugs Fixed ###\r\n\r\n/\r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense"},{"Id":"6973711730","Type":"PullRequestEvent","CreatedAt":"2017-12-11T21:30:17","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1283","RelatedDescription":"Closed pull request \"[Xaml] find BP defined on base types\" (#1283) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nwhen using netstandard, GetFields() acts differently than on other\r\nplatforms, and the public static types aren't returned by default. Pass\r\nsome BindingFlags to get them,\r\n\r\n### Bugs Fixed ###\r\n\r\n/\r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"},{"Id":"6972475766","Type":"PullRequestEvent","CreatedAt":"2017-12-11T17:07:23","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1377","RelatedDescription":"Opened pull request \"[Build] Update build submodule to 15.5.1\" (#1377) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nUpdate Xamarin.Forms.Build 15.5.1 \r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"6971486843","Type":"PullRequestEvent","CreatedAt":"2017-12-11T14:11:36","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3093","RelatedDescription":"Opened pull request \"[xtro] Split results by framework and add an HTML report (WIP)\" (#3093) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"6970946934","Type":"PullRequestEvent","CreatedAt":"2017-12-11T12:12:26","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3092","RelatedDescription":"Opened pull request \"[Tools] Reduce the verbosity of install sources which is in debugging mode\" (#3092) at xamarin/xamarin-macios","RelatedBody":"The build is too noisy. Lets reduce the verbosity since we know that the tool works fine."},{"Id":"6970280861","Type":"PullRequestEvent","CreatedAt":"2017-12-11T09:45:21","Actor":"filipnavara","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3091","RelatedDescription":"Opened pull request \"Fix behaviour of NSMenuItem.Activated on top of modal windows.\" (#3091) at xamarin/xamarin-macios","RelatedBody":"Setting NSMenuItem.Activated internally creates the ActionDispatcher object that is assigned to the Target property. When the menu item gets activated the system calls NSApplication.SendAction, which internally checks the WorksWhenModal property on the Target object before proceeding with the action. Since ActionDispatcher is not part of the normal NSResponder chain it needs to implement the property itself to ensure the event is fired even when the menu is opened from a modal window."},{"Id":"6964210241","Type":"PullRequestEvent","CreatedAt":"2017-12-08T20:38:53","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3090","RelatedDescription":"Opened pull request \"[arkit] Fix TriangleIndices to return 'short []'\" (#3090) at xamarin/xamarin-macios","RelatedBody":"- Fixes bug #61056: [ARKit] short TriangleIndices should be short[]\n(https://bugzilla.xamarin.com/show_bug.cgi?id=61056)\n- Obsolete `short TriangleIndices`.\n- Introduced new `short [] TriangleIndexes` property to avoid name collision."},{"Id":"6963934352","Type":"IssuesEvent","CreatedAt":"2017-12-08T19:27:38","Actor":"espresso3389","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3089","RelatedDescription":"Opened issue \"CGPath.Copy releases the original handle\" (#3089) at xamarin/xamarin-macios","RelatedBody":"[CGPath.Copy](https://github.com/xamarin/xamarin-macios/blob/master/src/CoreGraphics/CGPath.cs#L601) is supposed to create a mutable copy of the original CGPath.\r\n\r\nThe current implementation calls [CGPath.MakeMutable](https://github.com/xamarin/xamarin-macios/blob/master/src/CoreGraphics/CGPath.cs#L560) to create such a copy, and the function also release the CGPath handle passed to it.\r\n\r\nI think the behavior is not expected; it should create a copy but should not release the original handle."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"940313518418661377","CreatedAt":"2017-12-11T20:13:07+00:00","UserScreenname":"xamarinhq","Text":"Expand your app horizons by building your first #tvOS app with #Xamarin: https://t.co/A5jZpraqm1 https://t.co/IcA9ZV1nmN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":13,"RawContent":null},{"Id":"940264162273439744","CreatedAt":"2017-12-11T16:57:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build a real-time #XamarinForms communication app with #WebSocket: https://t.co/u3wk0FzGbu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":70,"FavoriteCount":30,"RawContent":null},{"Id":"940013259083735041","CreatedAt":"2017-12-11T00:20:00+00:00","UserScreenname":"xamarinhq","Text":"Register now for this week's webinars on how to update your #Xamarin apps to get the most out of Android 8 Oreo (12… https://t.co/ARs0FVWV0P","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":15,"FavoriteCount":9,"RawContent":null},{"Id":"939540900635607041","CreatedAt":"2017-12-09T17:03:01+00:00","UserScreenname":"xamarinhq","Text":"Upload your certificates and install them temporarily on the build machine to sign your applications with #VSTS:… https://t.co/xWBM7qo6ZK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":49,"FavoriteCount":21,"RawContent":null},{"Id":"939234630691180549","CreatedAt":"2017-12-08T20:46:00+00:00","UserScreenname":"xamarinhq","Text":"#NativeForms is all polished and ready for you in #XamarinForms 2.5.0. Get started: https://t.co/8ZTIbOktJX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":110,"FavoriteCount":66,"RawContent":null},{"Id":"939193776089772032","CreatedAt":"2017-12-08T18:03:40+00:00","UserScreenname":"xamarinhq","Text":"Learn how to build and release high quality, five-star apps faster using #VSAppCenter: https://t.co/XHMCHeVNSB https://t.co/pEYDruWIGp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":13,"RawContent":null},{"Id":"938851228209033219","CreatedAt":"2017-12-07T19:22:30+00:00","UserScreenname":"xamarinhq","Text":"Get started with even easier iOS app provisioning in #VS4Mac: https://t.co/vdtAckbzWn https://t.co/Ei8f1vdY4X","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":88,"FavoriteCount":37,"RawContent":null},{"Id":"938814862695849984","CreatedAt":"2017-12-07T16:58:00+00:00","UserScreenname":"xamarinhq","Text":"Build a sample enterprise app with the Microsoft Authentication Library and #MicrosoftGraph APIs: https://t.co/d9Rlu92TWT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":59,"FavoriteCount":25,"RawContent":null},{"Id":"938480168515055617","CreatedAt":"2017-12-06T18:48:02+00:00","UserScreenname":"xamarinhq","Text":"Introducing the #Azure Mobile Badge from @XamarinU! Get started today: https://t.co/iirsQ3UrwL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":73,"FavoriteCount":26,"RawContent":null},{"Id":"938450714149445637","CreatedAt":"2017-12-06T16:51:00+00:00","UserScreenname":"xamarinhq","Text":"Don't forget to register for next week's webinars on updating your #Xamarin apps to get the most out of Android 8 O… https://t.co/1dK9RFJUEq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":22,"RawContent":null},{"Id":"938141429167198208","CreatedAt":"2017-12-05T20:22:01+00:00","UserScreenname":"xamarinhq","Text":"See how ￼Fidelity Mobile is uniting Brazilian citizens and their elected officials using real-time chat apps built… https://t.co/z6zRiQICHR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":31,"FavoriteCount":12,"RawContent":null},{"Id":"938089332048564224","CreatedAt":"2017-12-05T16:55:00+00:00","UserScreenname":"xamarinhq","Text":"DataBinding Power Moves You May Not Be Using (Yet), with @davidortinau: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":10,"RawContent":null},{"Id":"937774983811616774","CreatedAt":"2017-12-04T20:05:53+00:00","UserScreenname":"xamarinhq","Text":"See what’s new in #VisualStudio 2017 version 15.5: https://t.co/wdtvE6HR1g https://t.co/ASOjIPtCt6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":173,"FavoriteCount":143,"RawContent":null},{"Id":"937729008883699712","CreatedAt":"2017-12-04T17:03:12+00:00","UserScreenname":"xamarinhq","Text":"#Xamarin's @lobrien explores the solar system with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/XFAEcWNh5K","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":11,"FavoriteCount":10,"RawContent":null},{"Id":"937507246317203457","CreatedAt":"2017-12-04T02:22:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how to embed any #XamarinForms ContentPage into your #Xamarin iOS and Android projects: https://t.co/U3QvCAOeFf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":60,"FavoriteCount":28,"RawContent":null},{"Id":"937084968140001281","CreatedAt":"2017-12-02T22:24:01+00:00","UserScreenname":"xamarinhq","Text":"Add beautiful charts to ANY app with #MicroCharts from guest blogger @aloisdeniel: https://t.co/VeqfS1vfIL https://t.co/1LrzR56fPj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":170,"FavoriteCount":80,"RawContent":null},{"Id":"936715745370796033","CreatedAt":"2017-12-01T21:56:51+00:00","UserScreenname":"xamarinhq","Text":"Catch up with the @XamarinPodcast and learn about #XamarinForms 2.5.0, plus exciting updates to Live Player,… https://t.co/zBch3rb7K7","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":19,"RawContent":null},{"Id":"936662898692313089","CreatedAt":"2017-12-01T18:26:52+00:00","UserScreenname":"xamarinhq","Text":"Find a #Xamarin event near you (or online!) this December: https://t.co/O6L4GHyg4a https://t.co/wNIUbnJtoI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":27,"FavoriteCount":5,"RawContent":null},{"Id":"936641572006957058","CreatedAt":"2017-12-01T17:02:07+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDgfF2Z https://t.co/DpaVdK5ZMf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":25,"FavoriteCount":10,"RawContent":null},{"Id":"936334395631431685","CreatedAt":"2017-11-30T20:41:30+00:00","UserScreenname":"xamarinhq","Text":"Supercharge your #Xamarin.Mac app startup time: https://t.co/JzwELyF3Tm https://t.co/o6RntWMo4m","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":11,"RawContent":null}]}},"RunOn":"2017-12-12T05:30:43.7637027Z","RunDurationInMilliseconds":4163}