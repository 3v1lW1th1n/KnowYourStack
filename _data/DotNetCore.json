{"Data":{"Blog":{"FeedItems":[{"Title":"Help us plan the future of .NET!","PublishedOn":"2018-04-20T16:55:37+00:00","CommentsCount":53,"FacebookCount":0,"Summary":"We’re currently planning our next major .NET releases and would love to hear your feedback on how you interact with .NET Framework and .NET Core today. Please fill out the survey below and help shape...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/20/help-us-plan-the-future-of-net/","RawContent":null},{"Title":"Performance Improvements in .NET Core 2.1","PublishedOn":"2018-04-18T19:29:45+00:00","CommentsCount":39,"FacebookCount":0,"Summary":"Back before .NET Core 2.0 shipped, I wrote a post highlighting various performance improvements in .NET Core 2.0 when compared with .NET Core 1.1 and the .NET Framework. As .NET Core 2.1 is in its...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/18/performance-improvements-in-net-core-2-1/","RawContent":null},{"Title":".NET Highlights in Visual Studio 2017 version 15.7 Preview 4","PublishedOn":"2018-04-18T19:00:00+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"As you know we continue to incrementally improve Visual Studio 2017 (version 15), and our 7th significant update is currently well under way with the 4th preview shipping today. As we’re winding down...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/18/visual-studio-2017-15-7-preview-4/","RawContent":null},{"Title":".NET Core April 2018 Update","PublishedOn":"2018-04-17T23:50:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core April 2018 Update. This update includes .NET Core 1.0.11, 1.1.8 and 2.0.7. There are no new security fixes in this update. See April 2018 .NET Updates for other...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.1 Preview 2","PublishedOn":"2018-04-11T18:02:40+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"Today we’re releasing the second preview of EF Core 2.1, alongside .NET Core 2.1 Preview 2 and ASP.NET Core 2.1 Preview 2. Thank you so much to everyone who has tried our early builds and has helped...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-entity-framework-core-2-1-preview-2/","RawContent":null},{"Title":"Announcing .NET Core 2.1 Preview 2","PublishedOn":"2018-04-11T17:53:44+00:00","CommentsCount":38,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.1 Preview 2. The release is now ready for broad testing, as we get closer to a final build within the next two to three months. We&#8217;d appreciate any feedback...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/","RawContent":null},{"Title":"Explore Azure Cosmos DB with .NET Core and MongoDB","PublishedOn":"2018-04-09T16:00:47+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Have you had to design general purpose &#8220;metadata&#8221; tables in your SQL database that basically store column names and values? Do you often serialize/de-serialize XML or JSON from your SQL...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/04/09/explore-cosmosdb-with-net-core-and-mongodb/","RawContent":null},{"Title":"Calling all Desktop Developers: how should UI development be improved?","PublishedOn":"2018-03-23T18:01:31+00:00","CommentsCount":66,"FacebookCount":0,"Summary":"The user interface (UI) of any application is critical in making your app convenient and efficient for the folks using it. When developing applications for Enterprise use, a good UI can shave time off...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/23/calling-all-desktop-developers-how-should-ui-development-be-improved/","RawContent":null},{"Title":".NET Framework 4.7.2 Developer Pack Early Access build 3056 is available!","PublishedOn":"2018-03-08T23:22:13+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we are happy to share an Early Access build with the .NET Framework 4.7.2 Developer Pack. The .NET Framework 4.7.2 Developer Pack lets developers build applications that target the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/08/net-framework-4-7-2-developer-pack-early-access-build-3056-is-available/","RawContent":null},{"Title":"F# language and tools update for Visual Studio 2017 version 15.6","PublishedOn":"2018-03-06T18:28:06+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the release of Visual Studio 2017 version 15.6, we’re excited to share updates to the F# language and core library, F# tooling in Visual Studio, and infrastructure updates that concern OSS...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/03/06/f-language-and-tools-update-for-visual-studio-2017-version-15-6/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7559882384","Type":"PullRequestEvent","CreatedAt":"2018-04-20T06:42:59","Actor":"Cheesebaron","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/100","RelatedDescription":"Opened pull request \"Create mvvmcross.md\" (#100) at dotnet/home","RelatedBody":"Added MvvmCross as project"},{"Id":"7452103949","Type":"PullRequestEvent","CreatedAt":"2018-03-29T07:03:03","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Merged pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""},{"Id":"7419410563","Type":"IssuesEvent","CreatedAt":"2018-03-22T14:02:36","Actor":"vvavrychuk","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/99","RelatedDescription":"Opened issue \"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux \" (#99) at dotnet/home","RelatedBody":"On the page http://www.microsoft.com/net/learn/get-started/linux dropdown \"Linux Distribution\" has no effect on the installation instruction next to him (they are always displayed for RedHat).\r\n\r\n![screenshot from 2018-03-22 16-02-19](https://user-images.githubusercontent.com/152563/37775020-6ec5778e-2dea-11e8-9ea3-b33e26c1c4e1.png)\r\n"},{"Id":"7192252734","Type":"PullRequestEvent","CreatedAt":"2018-02-03T01:30:47","Actor":"karann-msft","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/98","RelatedDescription":"Opened pull request \"Updates to reflect the latest information\" (#98) at dotnet/home","RelatedBody":""},{"Id":"7187459205","Type":"PullRequestEvent","CreatedAt":"2018-02-02T05:26:03","Actor":"mairaw","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/97","RelatedDescription":"Opened pull request \"update CLA PDF link\" (#97) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7545995438","Type":"IssuesEvent","CreatedAt":"2018-04-18T00:20:14","Actor":"richlander","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/64","RelatedDescription":"Opened issue \"April 2018 .NET Updates\" (#64) at dotnet/announcements","RelatedBody":"# April 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* No new releases. See: [.NET Framework February 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/).\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core April 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/)\r\n   * [2.0.7 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.0/2.0.7.md)\r\n   * [1.1.8 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.8.md)\r\n   * [1.0.11 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.11.md)\r\n* [.NET Core 2.1 Preview 2](https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n* Latest .NET Core security release: [.NET Core March 2018 Update](https://github.com/dotnet/core/issues/1341)\r\n\r\n## .NET for UWP\r\n\r\n* No new releases. See: [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/).\r\n\r\n## Previous Updates\r\n\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)"},{"Id":"7387413694","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:18:32","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Reopened issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discusses the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7387391842","Type":"IssuesEvent","CreatedAt":"2018-03-15T21:13:45","Actor":"mairaw","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Closed issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63) at dotnet/announcements","RelatedBody":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discussed the Transport Layer Security (TLS) best practices at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675"},{"Id":"7373349220","Type":"IssuesEvent","CreatedAt":"2018-03-13T17:01:53","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/62","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\" (#62) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-0875: Hash Collison can cause Denial of Service\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 2.0 (including other minor and patch releases).\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where a malicious file or web request could cause a denial of service (DoS) attack.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.10, 1.1.7 or 2.0.6. Developers are advised to update their .NET Core SDK to versions 1.1.8 or 2.1.101.\r\n\r\n## Discussion\r\n\r\nUse *TBD* for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nNone\r\n\r\n### Affected Software\r\n\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\nA complete list of runtimes can be discovered by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows\t| `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS\t| `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms\t| `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.10, 1.1.7 and 2.0.6, then any applications targeting the respective major/minor versions, 1.0 or 1.1 or 2.0 of .NET Core are vulnerable.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n#### How do I fix my affected application?\r\n\r\nApplications can be fixed by installing the latest .NET Core runtimes or SDKs. Typically, application servers only have runtime packages installed and developer machines have the SDKs installed. \r\nInstallers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). \r\n.NET Core 1.1.8 SDK installs both versions 1.0.10 and 1.1.7 of the .NET Core runtime.\r\n\r\nIf you've built a self-contained application, you must install the new runtime and SDK, recompile your application and redeploy.\r\n\r\n#### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the `application.runtime.config` file for that application. Set the framework version to the desired version and the `rollForward` property to false. These settings should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nSince the `application.runtime.config` file is an optional file, you may need to create one for each application and add it alongside the executable.\r\n\r\n### Acknowledgments\r\n[Ben Adams](https://twitter.com/ben_a_adams) of [Illyriad Games](https://www.illyriad.co.uk/)\r\n\r\n### External Links\r\n[CVE-2018-0875](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0875)\r\n\r\n### Revisions\r\n\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n_Last Updated 2018-03-13_\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"7602561361","Type":"PullRequestEvent","CreatedAt":"2018-04-29T02:53:46","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17831","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/corefx\" (#17831) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"7602400459","Type":"PullRequestEvent","CreatedAt":"2018-04-29T00:29:05","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17832","RelatedDescription":"Opened pull request \"Update CoreClr to preview1-26429-01 (master)\" (#17832) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7602063911","Type":"PullRequestEvent","CreatedAt":"2018-04-28T20:05:50","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17813","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx to preview1-26428-04, preview3-26428-04, respectively (master)\" (#17813) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"7601882455","Type":"PullRequestEvent","CreatedAt":"2018-04-28T18:03:37","Actor":"dotnet-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17831","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/corefx\" (#17831) at dotnet/coreclr","RelatedBody":"This PR contains mirrored changes from dotnet/corefx\n\n\n**Please REBASE this PR when merging**"},{"Id":"7601723997","Type":"PullRequestEvent","CreatedAt":"2018-04-28T16:22:34","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17830","RelatedDescription":"Opened pull request \"Compare String Ascii settings\" (#17830) at dotnet/coreclr","RelatedBody":"`IsAscii` is probably only useful to interned strings (else it will scan strings twice); but checking is interned is probably expensive?\r\n\r\nMight be better to vectorize the comparison."},{"Id":"7601683088","Type":"PullRequestEvent","CreatedAt":"2018-04-28T15:57:18","Actor":"kbaladurin","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/17829","RelatedDescription":"Opened pull request \"[Linux/x86] Fix tests in case of 4-byte alignment for 64-bit types\" (#17829) at dotnet/coreclr","RelatedBody":"This patch fixes following tests on Linux/x86:\r\n\r\nJIT/Directed/RVAInit/nested\r\nJIT/Directed/RVAInit/simple\r\nJIT/Regression/CLR-x86-JIT/V1.2-Beta1/b103058/b103058"},{"Id":"7601502751","Type":"IssuesEvent","CreatedAt":"2018-04-28T14:10:14","Actor":"omariom","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17828","RelatedDescription":"Opened issue \"[JIT]: Stack allocating to Span\" (#17828) at dotnet/coreclr","RelatedBody":"I looked at what IL and x86 code is generated for different ways of allocating memory on stack\r\nand think there is room for optimizations. \r\n\r\n1. Roslyn should generate better IL for `Span<byte> span = stackalloc byte[512];` (see `StackAllocFixedAsSpan`). It should be similar to the IL generated for `byte* ptr = stackalloc byte[512];` (`StackAllocFixedAsPtr`). I will create  an issue in Roslyn repo for that.\r\n\r\n2. JIT should recognize fixed size stack allocations and  generate simpler code.\r\n    Compare `StackAllocFixedAsPtr` to `LocalAsPtr` and `StackAllocFixedAsSpan` to `LocalAsSpan`.\r\n\r\n@VSadov @jkotas \r\n\r\n```C#\r\n[StructLayout(LayoutKind.Sequential, Size = 512)]\r\nstruct WideStruct { }\r\n\r\n[MethodImpl(MethodImplOptions.NoInlining)]\r\nprivate static unsafe void Consume(byte* ptr) {}\r\n\r\n[MethodImpl(MethodImplOptions.NoInlining)]\r\nprivate static unsafe void Consume(Span<byte> span) {}\r\n```\r\n\r\n<details><summary>LocalAsPtr</summary>\r\n<p>\r\n\r\n```C#\r\n[MethodImpl(MethodImplOptions.NoInlining)]\r\nprivate static unsafe void LocalAsPtr()\r\n{\r\n    WideStruct i;\r\n    Consume((byte*)&i);\r\n}\r\n```\r\n```\r\n.method private hidebysig static \r\n\tvoid LocalAsPtr () cil managed noinlining \r\n{\r\n\t// Method begins at RVA 0x20dc\r\n\t// Code size 9 (0x9)\r\n\t.maxstack 1\r\n\t.locals init (\r\n\t\t[0] valuetype TestDotNetCore.Program/WideStruct\r\n\t)\r\n\r\n\tIL_0000: ldloca.s 0\r\n\tIL_0002: conv.u\r\n\tIL_0003: call void TestDotNetCore.Program::Consume(uint8*)\r\n\tIL_0008: ret\r\n}\r\n```\r\n```ASM\r\n; Assembly listing for method Program:LocalAsPtr()\r\n; Emitting BLENDED_CODE for X64 CPU with AVX\r\n; optimized code\r\n; rsp based frame\r\n; partially interruptible\r\n; Final local variable assignments\r\n;\r\n;  V00 loc0         [V00    ] (  1,  1   )  struct (512) [rsp+0x20]   do-not-enreg[XS] must-init addr-exposed ld-addr-op\r\n;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]  \r\n;\r\n; Lcl frame size = 544\r\n\r\nG_M54392_IG01:\r\n       57                   push     rdi\r\n       4881EC20020000       sub      rsp, 544\r\n       488D7C2420           lea      rdi, [rsp+20H]\r\n       B980000000           mov      ecx, 128\r\n       33C0                 xor      rax, rax\r\n       F3AB                 rep stosd \r\n\r\nG_M54392_IG02:\r\n       488D4C2420           lea      rcx, bword ptr [rsp+20H]\r\n       E8A0FDFFFF           call     Program:Consume(long)\r\n       90                   nop      \r\n\r\nG_M54392_IG03:\r\n       4881C420020000       add      rsp, 544\r\n       5F                   pop      rdi\r\n       C3                   ret      \r\n\r\n; Total bytes of code 42, prolog size 22 for method Program:LocalAsPtr()\r\n; ============================================================\r\n```\r\n</p>\r\n</details>\r\n\r\n<details><summary>LocalAsSpan</summary>\r\n<p>\r\n\r\n```C#\r\n[MethodImpl(MethodImplOptions.NoInlining)]\r\nprivate static unsafe void LocalAsSpan()\r\n{\r\n    WideStruct i;\r\n    Consume(new Span<byte>((byte*)&i, sizeof(WideStruct)));\r\n}\r\n```\r\n```\r\n.method private hidebysig static \r\n\tvoid LocalAsSpan () cil managed noinlining \r\n{\r\n\t// Code size 20 (0x14)\r\n\t.maxstack 2\r\n\t.locals init (\r\n\t\t[0] valuetype TestDotNetCore.Program/WideStruct\r\n\t)\r\n\r\n\tIL_0000: ldloca.s 0\r\n\tIL_0002: conv.u\r\n\tIL_0003: sizeof TestDotNetCore.Program/WideStruct\r\n\tIL_0009: newobj instance void valuetype [System.Memory]System.Span`1<uint8>::.ctor(void*, int32)\r\n\tIL_000e: call void TestDotNetCore.Program::Consume(valuetype [System.Memory]System.Span`1<uint8>)\r\n\tIL_0013: ret\r\n}\r\n```\r\n```ASM\r\n; Assembly listing for method Program:LocalAsSpan()\r\n; Emitting BLENDED_CODE for X64 CPU with AVX\r\n; optimized code\r\n; rsp based frame\r\n; partially interruptible\r\n; Final local variable assignments\r\n;\r\n;  V00 loc0         [V00    ] (  1,  1   )  struct (512) [rsp+0x30]   do-not-enreg[XS] must-init addr-exposed ld-addr-op\r\n;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]  \r\n;* V02 tmp1         [V02    ] (  0,  0   )  struct (16) zero-ref   \r\n;  V03 tmp2         [V03,T01] (  2,  4   )    long  ->  rcx        \r\n;* V04 tmp3         [V04    ] (  0,  0   )  struct ( 8) zero-ref   \r\n;  V05 tmp4         [V05,T02] (  2,  2   )   byref  ->  rcx         V02._pointer(offs=0x00) P-INDEP\r\n;  V06 tmp5         [V06,T04] (  2,  2   )     int  ->  rax         V02._length(offs=0x08) P-INDEP\r\n;  V07 tmp6         [V07,T03] (  2,  2   )   byref  ->  rcx         V04._value(offs=0x00) P-INDEP\r\n;  V08 tmp7         [V08    ] (  3,  6   )  struct (16) [rsp+0x20]   do-not-enreg[XSB] must-init addr-exposed\r\n;  V09 tmp8         [V09,T00] (  3,  6   )   byref  ->  rdx         stack-byref\r\n;\r\n; Lcl frame size = 560\r\n\r\nG_M21189_IG01:\r\n       57                   push     rdi\r\n       4881EC30020000       sub      rsp, 560\r\n       488D7C2420           lea      rdi, [rsp+20H]\r\n       B984000000           mov      ecx, 132\r\n       33C0                 xor      rax, rax\r\n       F3AB                 rep stosd \r\n\r\nG_M21189_IG02:\r\n       488D4C2430           lea      rcx, bword ptr [rsp+30H]\r\n       B800020000           mov      eax, 512\r\n       488D542420           lea      rdx, bword ptr [rsp+20H]\r\n       48890A               mov      bword ptr [rdx], rcx\r\n       894208               mov      dword ptr [rdx+8], eax\r\n       488D4C2420           lea      rcx, bword ptr [rsp+20H]\r\n       E89BFEFFFF           call     Program:Consume(struct)\r\n       90                   nop      \r\n\r\nG_M21189_IG03:\r\n       4881C430020000       add      rsp, 560\r\n       5F                   pop      rdi\r\n       C3                   ret      \r\n\r\n; Total bytes of code 63, prolog size 22 for method Program:LocalAsSpan()\r\n; ============================================================\r\n```\r\n</p>\r\n</details>\r\n\r\n<details><summary>StackAllocFixedAsPtr</summary>\r\n<p>\r\n\r\n```C#\r\n[MethodImpl(MethodImplOptions.NoInlining)]\r\nprivate static unsafe void StackAllocFixedAsPtr()\r\n{\r\n    byte* ptr = stackalloc byte[512];\r\n    Consume(ptr);\r\n}\r\n```\r\n```\r\n.method private hidebysig static \r\n\tvoid StackAllocFixedAsPtr () cil managed noinlining \r\n{\r\n\t// Code size 14 (0xe)\r\n\t.maxstack 8\r\n\r\n\tIL_0000: ldc.i4 512\r\n\tIL_0005: conv.u\r\n\tIL_0006: localloc\r\n\tIL_0008: call void TestDotNetCore.Program::Consume(uint8*)\r\n\tIL_000d: ret\r\n}\r\n```\r\n```ASM\r\n; Assembly listing for method Program:StackAllocFixedAsPtr()\r\n; Emitting BLENDED_CODE for X64 CPU with AVX\r\n; optimized code\r\n; rbp based frame\r\n; partially interruptible\r\n; Final local variable assignments\r\n;\r\n;  V00 OutArgs      [V00    ] (  1,  1   )  lclBlk (32) [rsp+0x00]  \r\n;* V01 GsCookie     [V01    ] (  0,  0   )    long  ->  zero-ref    do-not-enreg[X] addr-exposed\r\n;  V02 LocAllocSP   [V02    ] (  1,  1   )    long  ->  [rbp+0x08]   do-not-enreg[X] addr-exposed\r\n;\r\n; Lcl frame size = 48\r\n\r\nG_M56192_IG01:\r\n       55                   push     rbp\r\n       4883EC30             sub      rsp, 48\r\n       488D6C2420           lea      rbp, [rsp+20H]\r\n       48896508             mov      qword ptr [rbp+08H], rsp\r\n       48B8818FC0ED9AA70000 mov      rax, 0xA79AEDC08F81\r\n       48894500             mov      qword ptr [rbp], rax\r\n\r\nG_M56192_IG02:\r\n       4883C420             add      rsp, 32\r\n       852424               test     dword ptr [rsp], esp\r\n       4881EC00020000       sub      rsp, 512\r\n       4883EC20             sub      rsp, 32\r\n       488D4C2420           lea      rcx, [rsp+20H]\r\n       48896508             mov      qword ptr [rbp+08H], rsp\r\n       E8E4FDFFFF           call     Program:Consume(long)\r\n       48B9818FC0ED9AA70000 mov      rcx, 0xA79AEDC08F81\r\n       48394D00             cmp      qword ptr [rbp], rcx\r\n       7405                 je       SHORT G_M56192_IG03\r\n       E8EFEFC35F           call     CORINFO_HELP_FAIL_FAST\r\n\r\nG_M56192_IG03:\r\n       90                   nop      \r\n\r\nG_M56192_IG04:\r\n       488D6510             lea      rsp, [rbp+10H]\r\n       5D                   pop      rbp\r\n       C3                   ret      \r\n\r\n; Total bytes of code 88, prolog size 28 for method Program:StackAllocFixedAsPtr()\r\n; ============================================================\r\n```\r\n</p>\r\n</details>\r\n\r\n<details><summary>StackAllocDynamicAsPtr</summary>\r\n<p>\r\n\r\n```C#\r\n[MethodImpl(MethodImplOptions.NoInlining)]\r\nprivate static unsafe void StackAllocDynamicAsPtr(int size)\r\n{\r\n    byte* ptr = stackalloc byte[size];\r\n    Consume(ptr);\r\n} \r\n```\r\n```\r\n.method private hidebysig static \r\n\tvoid StackAllocDynamicAsPtr (\r\n\t\tint32 size\r\n\t) cil managed noinlining \r\n{\r\n\t// Code size 10 (0xa)\r\n\t.maxstack 8\r\n\r\n\tIL_0000: ldarg.0\r\n\tIL_0001: conv.u\r\n\tIL_0002: localloc\r\n\tIL_0004: call void TestDotNetCore.Program::Consume(uint8*)\r\n\tIL_0009: ret\r\n}\r\n```\r\n```ASM\r\n; Assembly listing for method Program:StackAllocDynamicAsPtr(int)\r\n; Emitting BLENDED_CODE for X64 CPU with AVX\r\n; optimized code\r\n; rbp based frame\r\n; partially interruptible\r\n; Final local variable assignments\r\n;\r\n;  V00 arg0         [V00,T00] (  3,  3   )     int  ->  rcx        \r\n;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]  \r\n;* V02 GsCookie     [V02    ] (  0,  0   )    long  ->  zero-ref    do-not-enreg[X] addr-exposed\r\n;  V03 LocAllocSP   [V03    ] (  1,  1   )    long  ->  [rbp+0x08]   do-not-enreg[X] addr-exposed\r\n;\r\n; Lcl frame size = 48\r\n\r\nG_M8739_IG01:\r\n       55                   push     rbp\r\n       4883EC30             sub      rsp, 48\r\n       488D6C2420           lea      rbp, [rsp+20H]\r\n       48896508             mov      qword ptr [rbp+08H], rsp\r\n       48B8818FC0ED9AA70000 mov      rax, 0xA79AEDC08F81\r\n       48894500             mov      qword ptr [rbp], rax\r\n\r\nG_M8739_IG02:\r\n       8BC9                 mov      ecx, ecx\r\n       4885C9               test     rcx, rcx\r\n       743A                 je       SHORT G_M8739_IG04\r\n       488BC1               mov      rax, rcx\r\n       4883C00F             add      rax, 15\r\n       4883E0F0             and      rax, -16\r\n       4883C420             add      rsp, 32\r\n       48F7D8               neg      rax\r\n       4803C4               add      rax, rsp\r\n       7202                 jb       SHORT G_M8739_IG03\r\n       33C0                 xor      rax, rax\r\n\r\nG_M8739_IG03:\r\n       852424               test     dword ptr [rsp], esp\r\n       488BD4               mov      rdx, rsp\r\n       4881EA00100000       sub      rdx, 0x1000\r\n       488BE2               mov      rsp, rdx\r\n       483BE0               cmp      rsp, rax\r\n       73EB                 jae      SHORT G_M8739_IG03\r\n       488BE0               mov      rsp, rax\r\n       4883EC20             sub      rsp, 32\r\n       488D4C2420           lea      rcx, [rsp+20H]\r\n\r\nG_M8739_IG04:\r\n       48896508             mov      qword ptr [rbp+08H], rsp\r\n       E87AFFFFFF           call     Program:Consume(long)\r\n       48B9818FC0ED9AA70000 mov      rcx, 0xA79AEDC08F81\r\n       48394D00             cmp      qword ptr [rbp], rcx\r\n       7405                 je       SHORT G_M8739_IG05\r\n       E835EFC35F           call     CORINFO_HELP_FAIL_FAST\r\n\r\nG_M8739_IG05:\r\n       90                   nop      \r\n\r\nG_M8739_IG06:\r\n       488D6510             lea      rsp, [rbp+10H]\r\n       5D                   pop      rbp\r\n       C3                   ret      \r\n\r\n; Total bytes of code 130, prolog size 28 for method Program:StackAllocDynamicAsPtr(int)\r\n; ============================================================\r\n```\r\n</p>\r\n</details>\r\n\r\n<details><summary>StackAllocFixedAsSpan</summary>\r\n<p>\r\n\r\n```C#\r\n[MethodImpl(MethodImplOptions.NoInlining)]\r\nprivate static unsafe void StackAllocFixedAsSpan()\r\n{\r\n    Span<byte> span = stackalloc byte[512];\r\n    Consume(span);\r\n}\r\n```\r\n```\r\n.method private hidebysig static \r\n\tvoid StackAllocFixedAsSpan () cil managed noinlining \r\n{\r\n\t// Code size 22 (0x16)\r\n\t.maxstack 2\r\n\t.locals init (\r\n\t\t[0] int32\r\n\t)\r\n\r\n\tIL_0000: ldc.i4 512\r\n\tIL_0005: stloc.0\r\n\tIL_0006: ldloc.0\r\n\tIL_0007: conv.u\r\n\tIL_0008: localloc\r\n\tIL_000a: ldloc.0\r\n\tIL_000b: newobj instance void valuetype [System.Memory]System.Span`1<uint8>::.ctor(void*, int32)\r\n\tIL_0010: call void TestDotNetCore.Program::Consume(valuetype [System.Memory]System.Span`1<uint8>)\r\n\tIL_0015: ret\r\n}\r\n```\r\n```ASM\r\n; Assembly listing for method Program:StackAllocFixedAsSpan()\r\n; Emitting BLENDED_CODE for X64 CPU with AVX\r\n; optimized code\r\n; rbp based frame\r\n; partially interruptible\r\n; Final local variable assignments\r\n;\r\n;* V00 loc0         [V00,T05] (  0,  0   )     int  ->  zero-ref   \r\n;  V01 OutArgs      [V01    ] (  1,  1   )  lclBlk (32) [rsp+0x00]  \r\n;* V02 tmp1         [V02    ] (  0,  0   )  struct (16) zero-ref   \r\n;  V03 tmp2         [V03,T01] (  2,  4   )    long  ->  rcx        \r\n;* V04 tmp3         [V04    ] (  0,  0   )  struct ( 8) zero-ref   \r\n;  V05 tmp4         [V05,T03] (  2,  2   )   byref  ->  rcx         V02._pointer(offs=0x00) P-INDEP\r\n;  V06 tmp5         [V06,T02] (  3,  3   )     int  ->  rax         V02._length(offs=0x08) P-INDEP\r\n;  V07 tmp6         [V07,T04] (  2,  2   )   byref  ->  rcx         V04._value(offs=0x00) P-INDEP\r\n;  V08 tmp7         [V08    ] (  3,  6   )  struct (16) [rbp+0x10]   do-not-enreg[XSB] must-init addr-exposed\r\n;  V09 tmp8         [V09,T00] (  3,  6   )   byref  ->  rdx         stack-byref\r\n;* V10 GsCookie     [V10    ] (  0,  0   )    long  ->  zero-ref    do-not-enreg[X] must-init addr-exposed\r\n;  V11 LocAllocSP   [V11    ] (  1,  1   )    long  ->  [rbp+0x20]   do-not-enreg[X] must-init addr-exposed\r\n;\r\n; Lcl frame size = 72\r\n\r\nG_M31550_IG01:\r\n       55                   push     rbp\r\n       57                   push     rdi\r\n       4883EC48             sub      rsp, 72\r\n       488D6C2420           lea      rbp, [rsp+20H]\r\n       488D7D08             lea      rdi, [rbp+08H]\r\n       B908000000           mov      ecx, 8\r\n       33C0                 xor      rax, rax\r\n       F3AB                 rep stosd \r\n       48896520             mov      qword ptr [rbp+20H], rsp\r\n       48B8818FC0ED9AA70000 mov      rax, 0xA79AEDC08F81\r\n       48894508             mov      qword ptr [rbp+08H], rax\r\n\r\nG_M31550_IG02:\r\n       4883C420             add      rsp, 32\r\n       B920000000           mov      ecx, 32\r\n\r\nG_M31550_IG03:\r\n       6A00                 push     0\r\n       6A00                 push     0\r\n       48FFC9               dec      rcx\r\n       75F7                 jne      SHORT G_M31550_IG03\r\n       4883EC20             sub      rsp, 32\r\n       488D4C2420           lea      rcx, [rsp+20H]\r\n       48896520             mov      qword ptr [rbp+20H], rsp\r\n       B800020000           mov      eax, 512\r\n       488D5510             lea      rdx, bword ptr [rbp+10H]\r\n       48890A               mov      bword ptr [rdx], rcx\r\n       894208               mov      dword ptr [rdx+8], eax\r\n       488D4D10             lea      rcx, bword ptr [rbp+10H]\r\n       E897FCFFFF           call     Program:Consume(struct)\r\n       48B9818FC0ED9AA70000 mov      rcx, 0xA79AEDC08F81\r\n       48394D08             cmp      qword ptr [rbp+08H], rcx\r\n       7405                 je       SHORT G_M31550_IG04\r\n       E89AEEC35F           call     CORINFO_HELP_FAIL_FAST\r\n\r\nG_M31550_IG04:\r\n       90                   nop      \r\n\r\nG_M31550_IG05:\r\n       488D6528             lea      rsp, [rbp+28H]\r\n       5F                   pop      rdi\r\n       5D                   pop      rbp\r\n       C3                   ret      \r\n\r\n; Total bytes of code 126, prolog size 42 for method Program:StackAllocFixedAsSpan()\r\n; ============================================================\r\n```\r\n</p>\r\n</details>\r\n\r\n<details><summary>StackAllocDynamicAsSpan</summary>\r\n<p>\r\n\r\n```C#\r\n[MethodImpl(MethodImplOptions.NoInlining)]\r\nprivate static unsafe void StackAllocDynamicAsSpan(int size)\r\n{\r\n    Span<byte> span = stackalloc byte[size];\r\n    Consume(span);\r\n}\r\n```\r\n```\r\n.method private hidebysig static \r\n\tvoid StackAllocDynamicAsSpan (\r\n\t\tint32 size\r\n\t) cil managed noinlining \r\n{\r\n\t// Code size 18 (0x12)\r\n\t.maxstack 2\r\n\t.locals init (\r\n\t\t[0] int32\r\n\t)\r\n\r\n\tIL_0000: ldarg.0\r\n\tIL_0001: stloc.0\r\n\tIL_0002: ldloc.0\r\n\tIL_0003: conv.u\r\n\tIL_0004: localloc\r\n\tIL_0006: ldloc.0\r\n\tIL_0007: newobj instance void valuetype [System.Memory]System.Span`1<uint8>::.ctor(void*, int32)\r\n\tIL_000c: call void TestDotNetCore.Program::Consume(valuetype [System.Memory]System.Span`1<uint8>)\r\n\tIL_0011: ret\r\n}\r\n```\r\n```ASM\r\n; Assembly listing for method Program:StackAllocDynamicAsSpan(int)\r\n; Emitting BLENDED_CODE for X64 CPU with AVX\r\n; optimized code\r\n; rbp based frame\r\n; partially interruptible\r\n; Final local variable assignments\r\n;\r\n;  V00 arg0         [V00,T01] (  3,  3   )     int  ->  rcx        \r\n;  V01 loc0         [V01,T02] (  4,  4   )     int  ->  rcx        \r\n;  V02 OutArgs      [V02    ] (  1,  1   )  lclBlk (32) [rsp+0x00]  \r\n;* V03 tmp1         [V03    ] (  0,  0   )  struct (16) zero-ref   \r\n;  V04 tmp2         [V04,T03] (  2,  4   )    long  ->  rax        \r\n;* V05 tmp3         [V05    ] (  0,  0   )  struct ( 8) zero-ref   \r\n;  V06 tmp4         [V06,T04] (  2,  2   )   byref  ->  rax         V03._pointer(offs=0x00) P-INDEP\r\n;  V07 tmp5         [V07,T06] (  2,  2   )     int  ->  rcx         V03._length(offs=0x08) P-INDEP\r\n;  V08 tmp6         [V08,T05] (  2,  2   )   byref  ->  rax         V05._value(offs=0x00) P-INDEP\r\n;  V09 tmp7         [V09    ] (  3,  6   )  struct (16) [rbp+0x08]   do-not-enreg[XSB] must-init addr-exposed\r\n;  V10 tmp8         [V10,T00] (  3,  6   )   byref  ->  rdx         stack-byref\r\n;* V11 GsCookie     [V11    ] (  0,  0   )    long  ->  zero-ref    do-not-enreg[X] must-init addr-exposed\r\n;  V12 LocAllocSP   [V12    ] (  1,  1   )    long  ->  [rbp+0x18]   do-not-enreg[X] must-init addr-exposed\r\n;\r\n; Lcl frame size = 64\r\n\r\nG_M16477_IG01:\r\n       55                   push     rbp\r\n       57                   push     rdi\r\n       56                   push     rsi\r\n       4883EC40             sub      rsp, 64\r\n       488D6C2420           lea      rbp, [rsp+20H]\r\n       488BF1               mov      rsi, rcx\r\n       488D7D00             lea      rdi, [rbp]\r\n       B908000000           mov      ecx, 8\r\n       33C0                 xor      rax, rax\r\n       F3AB                 rep stosd \r\n       488BCE               mov      rcx, rsi\r\n       48896518             mov      qword ptr [rbp+18H], rsp\r\n       48B8818FC0ED9AA70000 mov      rax, 0xA79AEDC08F81\r\n       48894500             mov      qword ptr [rbp], rax\r\n\r\nG_M16477_IG02:\r\n       8BC1                 mov      eax, ecx\r\n       4885C0               test     rax, rax\r\n       741E                 je       SHORT G_M16477_IG04\r\n       4883C00F             add      rax, 15\r\n       48C1E804             shr      rax, 4\r\n       4883C420             add      rsp, 32\r\n\r\nG_M16477_IG03:\r\n       6A00                 push     0\r\n       6A00                 push     0\r\n       48FFC8               dec      rax\r\n       75F7                 jne      SHORT G_M16477_IG03\r\n       4883EC20             sub      rsp, 32\r\n       488D442420           lea      rax, [rsp+20H]\r\n\r\nG_M16477_IG04:\r\n       48896518             mov      qword ptr [rbp+18H], rsp\r\n       85C9                 test     ecx, ecx\r\n       7C31                 jl       SHORT G_M16477_IG08\r\n\r\nG_M16477_IG05:\r\n       488D5508             lea      rdx, bword ptr [rbp+08H]\r\n       488902               mov      bword ptr [rdx], rax\r\n       894A08               mov      dword ptr [rdx+8], ecx\r\n       488D4D08             lea      rcx, bword ptr [rbp+08H]\r\n       E86FFFFFFF           call     Program:Consume(struct)\r\n       48B9818FC0ED9AA70000 mov      rcx, 0xA79AEDC08F81\r\n       48394D00             cmp      qword ptr [rbp], rcx\r\n       7405                 je       SHORT G_M16477_IG06\r\n       E8CAEDC35F           call     CORINFO_HELP_FAIL_FAST\r\n\r\nG_M16477_IG06:\r\n       90                   nop      \r\n\r\nG_M16477_IG07:\r\n       488D6520             lea      rsp, [rbp+20H]\r\n       5E                   pop      rsi\r\n       5F                   pop      rdi\r\n       5D                   pop      rbp\r\n       C3                   ret      \r\n\r\nG_M16477_IG08:\r\n       E8BC0E7F59           call     ThrowHelper:ThrowArgumentOutOfRangeException()\r\n       CC                   int3     \r\n\r\n; Total bytes of code 149, prolog size 49 for method Program:StackAllocDynamicAsSpan(int)\r\n; ============================================================\r\n```\r\n</p>\r\n</details>\r\n\r\n\r\n\r\n"},{"Id":"7601462072","Type":"IssuesEvent","CreatedAt":"2018-04-28T13:44:54","Actor":"benaadams","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/17827","RelatedDescription":"Closed issue \"Should FEATURE_APPX be enabled in coreclr builds?\" (#17827) at dotnet/coreclr","RelatedBody":"`AppDomain.Flags` is behind `#if FEATURE_APPX`\r\n\r\n```csharp\r\nprivate static APPX_FLAGS Flags\r\n{\r\n    get\r\n    {\r\n        if (s_flags == 0)\r\n            s_flags = nGetAppXFlags();\r\n\r\n        Debug.Assert(s_flags != 0);\r\n        return s_flags;\r\n    }\r\n}\r\n```\r\nHowever its output in a crossgen build?\r\n```asm\r\n; Assembly listing for method AppDomain:get_Flags():int\r\n; Emitting BLENDED_CODE for X64 CPU with SSE2\r\n; optimized code\r\n; rbp based frame\r\n; partially interruptible\r\n; Final local variable assignments\r\n;\r\n;  V00 OutArgs      [V00    ] (  1,  1   )  lclBlk (32) [rsp+0x00]  \r\n;  V01 cse0         [V01,T00] ( 10,  8.50)    long  ->  rsi        \r\n;\r\n; Lcl frame size = 40\r\nG_M62617_IG01:\r\n       push     rbp\r\n       push     rsi\r\n       sub      rsp, 40\r\n       lea      rbp, [rsp+30H]\r\nG_M62617_IG02:\r\n       mov      rcx, qword ptr [(reloc)]\r\n       call     CORINFO_HELP_GETSHARED_NONGCSTATIC_BASE_NOCTOR\r\n       mov      rsi, rax\r\n       cmp      dword ptr [rsi+07F0H], 0\r\n       jne      SHORT G_M62617_IG03\r\n       call     AppDomain:nGetAppXFlags():int\r\n       mov      dword ptr [rsi+07F0H], eax\r\nG_M62617_IG03:\r\n       mov      eax, dword ptr [rsi+07F0H]\r\nG_M62617_IG04:\r\n       lea      rsp, [rbp-08H]\r\n       pop      rsi\r\n       pop      rbp\r\n       ret      \r\n; Total bytes of code 59, prolog size 11 for method AppDomain:get_Flags():int\r\n```\r\n/cc @jkotas @danmosemsft "}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"7602489352","Type":"IssuesEvent","CreatedAt":"2018-04-29T01:47:30","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9169","RelatedDescription":"Opened issue \"List command line help description is out of date.\" (#9169) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n\r\n1. Run `dotnet --help`.\r\n\r\n## Expected  behavior\r\n\r\nThe `list` command should have a description of `List references of a .NET project.`.\r\n\r\n## Actual behavior\r\n\r\nThe `list` command has a description of `List project references or installed tools`.\r\n\r\nThis is out of date because the list command no longer has anything to do with .NET tools.\r\n\r\n## Environment data\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.300-rc1-008672\r\n Commit:    5d471af2a4\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.13\r\n OS Platform: Darwin\r\n RID:         osx-x64\r\n Base Path:   /Users/peterhuene/src/cli/bin/2/osx-x64/dotnet/sdk/2.1.300-rc1-008672/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.0-rc1-26423-06\r\n  Commit:  b50a96ee38\r\n\r\n.NET Core SDKs installed:\r\n  2.1.300-rc1-008672 [/Users/peterhuene/src/cli/bin/2/osx-x64/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-rc1-30661 [/Users/peterhuene/src/cli/bin/2/osx-x64/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-rc1-30661 [/Users/peterhuene/src/cli/bin/2/osx-x64/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.0-rc1-26423-06 [/Users/peterhuene/src/cli/bin/2/osx-x64/dotnet/shared/Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"7602415335","Type":"IssuesEvent","CreatedAt":"2018-04-29T00:41:05","Actor":"KevinBurton","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/9168","RelatedDescription":"Opened issue \"Test aborted\" (#9168) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\n`dotnet test --filter ImportIndexTest\r\n`\r\n## Expected  behavior\r\n```\r\nTotal tests: 1. Passed: 1. Failed: 0. Skipped: 0.\r\nTest Run Successful.\r\n```\r\n\r\n## Actual behavior\r\n\r\n```\r\nNo test is available in /Users/rebeccaannburton/Projects/PocketNurse/PocketNurse/bin/Debug/netcoreapp2.0/PocketNurse.dll. Make sure test project has a nuget reference of package \"Microsoft.NET.Test.Sdk\" and framework version settings are appropriate and try again.\r\n```\r\n\r\nTest Run Aborted.\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n```\r\n.NET Command Line Tools (2.1.4)\r\n\r\nProduct Information:\r\n Version:            2.1.4\r\n Commit SHA-1 hash:  5e8add2190\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.13\r\n OS Platform: Darwin\r\n RID:         osx.10.12-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.1.4/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.5\r\n  Build    : 17373eb129b3b05aa18ece963f8795d65ef8ea54\r\n```\r\n\r\nThe main project\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n    <UserSecretsId>aspnet-PocketNurse-36604171-3424-4347-80E3-30D24138EC43</UserSecretsId>\r\n  </PropertyGroup>\r\n\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"EPPlus\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.7\" />\r\n    <PackageReference Include=\"Microsoft.EntityFrameworkCore.Tools\" Version=\"2.0.2\" PrivateAssets=\"All\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"2.0.3\" PrivateAssets=\"All\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.EntityFrameworkCore.Tools.DotNet\" Version=\"2.0.2\" />\r\n    <DotNetCliToolReference Include=\"Microsoft.Extensions.SecretManager.Tools\" Version=\"2.0.1\" />\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.3\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\nThe test project\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n\r\n    <IsPackable>false</IsPackable>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"15.7.0\" />\r\n    <PackageReference Include=\"Moq\" Version=\"4.8.2\" />\r\n    <PackageReference Include=\"MSTest.TestAdapter\" Version=\"1.2.1\" />\r\n    <PackageReference Include=\"MSTest.TestFramework\" Version=\"1.2.1\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <ProjectReference Include=\"..\\PocketNurse\\PocketNurse.csproj\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\nWhy is it aborted?\r\n\r\n\r\n\r\n\r\n"},{"Id":"7600214969","Type":"IssuesEvent","CreatedAt":"2018-04-27T23:57:56","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7791","RelatedDescription":"Closed issue \"[build] Passing a property (/property) with multiple values to msbuild isn't working\" (#7791) at dotnet/cli","RelatedBody":"I need to pass values for [`NoWarn` option](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-options/nowarn-compiler-option) to C# compiler. Previously with msbuild it was being passed as property:\r\n```\r\nmsbuild /p:NoWarn:\"1591;1573;3001;3002\"\r\n```\r\n\r\nBut with dotnet cli it doesn't work anymore.\r\nI tried both `build` and `msbuild` commands. \r\n\r\n\r\n## Steps to reproduce\r\n```\r\ndotnet.exe msbuild /property:NoWarn=1591;1573;3001;3002 mysolution.sln\r\n```\r\nor\r\n```\r\ndotnet.exe msbuild /property:NoWarn=\"1591;1573;3001;3002\" mysolution.sln\r\n```\r\nor\r\n```\r\ndotnet.exe msbuild \"/property:NoWarn=1591;1573;3001;3002\" mysolution.sln\r\n```\r\n\r\nall result in\r\n```\r\nMSBUILD : error MSB1006: Property is not valid.\r\nSwitch: 1573\r\n```\r\nWith `dotnet.exe `build` there's the same error.\r\n\r\nWhile if I set these values in csproj:\r\n```\r\n<NoWarn>1591;1573;3001;3002</NoWarn>\r\n```\r\nit works as expected (warning are being ignored)\r\n\r\n## Expected  behavior\r\nPass all warning code to the compiler.\r\n\r\n## Actual behavior\r\nFaulting with an error\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\nD:\\>dotnet --info\r\n.NET Command Line Tools (2.0.0)\r\n\r\nProduct Information:\r\n Version:            2.0.0\r\n Commit SHA-1 hash:  cdcd1928c9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.15063\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.0\\\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.0\r\n  Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n```\r\n\r\n\r\n\r\n\r\n"},{"Id":"7600203010","Type":"PullRequestEvent","CreatedAt":"2018-04-27T23:52:03","Actor":"peterhuene","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9153","RelatedDescription":"Merged pull request \"Fix MSBuild invocation to quote property option values.\" (#9153) at dotnet/cli","RelatedBody":"This PR ensures that any `/property` option's value is surrounded by quotes\r\nto allow MSBuild to properly interpret special characters like semicolons.\r\n\r\nUsers familiar with MSBuild expect `/property:Name=\"Value\"` to handle\r\nsemicolons. However, since `dotnet msbuild` parses the command line first, the\r\nquotes get processed by its command line parser.  This results in\r\n`/property:Name=Value` being passed to MSBuild, which will not parse a \"Value\"\r\ncontaining a semicolon correctly.\r\n\r\nSince it is safe to always quote the property value for this option, this fix\r\nsimply ensures that the value is surrounded by quotes.\r\n\r\nThis fixes the issue for all commands that forward arguments to MSBuild.\r\n\r\nFixes #7791."},{"Id":"7599913648","Type":"PullRequestEvent","CreatedAt":"2018-04-27T22:02:02","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9166","RelatedDescription":"Merged pull request \"Update SDK to 2.1.200-preview-62827-05\" (#9166) at dotnet/cli","RelatedBody":""},{"Id":"7599773596","Type":"PullRequestEvent","CreatedAt":"2018-04-27T21:22:10","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/9167","RelatedDescription":"Merged pull request \"Empty commit for new build.\" (#9167) at dotnet/cli","RelatedBody":"Commit to increase the build number of the CLI and avoid builds stomping on each other.\r\n"},{"Id":"7599757278","Type":"PullRequestEvent","CreatedAt":"2018-04-27T21:17:47","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/9167","RelatedDescription":"Opened pull request \"Empty commit for new build.\" (#9167) at dotnet/cli","RelatedBody":"Commit to increase the build number of the CLI and avoid builds stomping on each other.\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"7601558195","Type":"IssuesEvent","CreatedAt":"2018-04-28T14:44:00","Actor":"MoamenMohamed","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/720","RelatedDescription":"Opened issue \"PBKDF2 based on HMACSHA512 \" (#720) at dotnet/standard","RelatedBody":"Hi there,\r\nI am trying to achieve this purely in **.netstandard2.0**.\r\n```\r\nusing (SHA512 sha = SHA512.Create())\r\n{\r\n    byte[] pb = KeyDerivation.Pbkdf2(\r\n        password,\r\n        sha.ComputeHash(new MemoryStream(Encoding.UTF8.GetBytes(salt))),\r\n        KeyDerivationPrf.HMACSHA512,\r\n        IterationCount,\r\n        48);\r\n    Crypter.Key = pb.Take(32).ToArray();\r\n    Crypter.IV = pb.Skip(32).Take(16).ToArray();\r\n}\r\n```\r\n But I can't as it uses  **KeyDerivation.Pbkdf2** which is a part of _Microsoft.AspNetCore.Cryptography.KeyDerivation_  namespace in **.netcore** . I know about **Rfc2898DeriveBytes** class but it is based on **HMACSHA1**.  Am I missing something? Does an equivalent implementation for **PBKDF2** based on **HMACSHA512** exist in .**netstandard2.0**?"},{"Id":"7601217646","Type":"IssuesEvent","CreatedAt":"2018-04-28T11:00:57","Actor":"thomasclaudiushuber","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/719","RelatedDescription":"Opened issue \"Different build output for classic projects: NuGet packages vs project reference. Is this on purpose?\" (#719) at dotnet/standard","RelatedBody":"Hi there,\r\n\r\nI have a WPF app (.NET Framework 4.6.1, classic .csproj) that references a .NET Standard 1.3 project that itself references another Multi-targeted project (.NET Standard 1.3 and .NET Framework 4.6.1).\r\n\r\nI've set `<RestoreProjectStyle>PackageReference</RestoreProjectStyle>` in the csproj file of the WPF app, but seems this is only important for NuGet packages?\r\n\r\nI would expect that the WPF app gets these dlls in the output directory:\r\n\r\n![image](https://user-images.githubusercontent.com/7116546/39395631-e0f9a786-4ae0-11e8-91f4-ecacadee72fc.png)\r\n\r\nBut it is actually copies these dlls to the output directory:\r\n\r\n![image](https://user-images.githubusercontent.com/7116546/39395639-ee646884-4ae0-11e8-9ecb-78f0eff1afcd.png)\r\n\r\nIf the Storage Lib is referenced as a NuGet package, it works as expected:\r\n\r\n![image](https://user-images.githubusercontent.com/7116546/39395643-fe20684a-4ae0-11e8-8d8a-d2015b262057.png)\r\n\r\nIs this the expected behavior? When migrating the WPF app to SDK-style project format, it works also as expected as shown in the first picture.\r\n\r\n\r\n"},{"Id":"7601081418","Type":"IssuesEvent","CreatedAt":"2018-04-28T09:33:37","Actor":"mperdeck","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/663","RelatedDescription":"Closed issue \"When running ASP.NET Core web site targeting net47 in IIS, dotnet.exe does not appear in process list\" (#663) at dotnet/standard","RelatedBody":"I just converted a large legacy site to Net Core. Because of some old code, I have to target net47 instead of netcoreapp2.0 / netstandard2.0.\r\n\r\nProblem is that when I run the site in IIS, it starts up correctly, but then I cannot attach the debugger. The process list (Debug | Attach to process) does not show the dotnet.exe process at all.\r\n\r\nTo investigate this:\r\n* I created a new ASP.NET Core web application in Visual Studio 2017 targeting netcoreapp2.0, \r\n* published it (dotnet publish) and \r\n* pointed my IIS web site to the published directory. \r\n\r\nAfter hitting the site, I was able to attach to the dotnet.exe process ok.\r\n\r\n````\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  \r\n  <!-- dotnet.exe shows up in process list in Visual Studio 2017 -->\r\n  \r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore.All\" Version=\"2.0.3\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n````\r\n\r\nI then retargeted it to net47 because that is what my site uses. \r\n* Because Microsoft.AspNetCore.All does not support net47, I replaced it with enough individual packages to make the site compile. \r\n* Published it (dotnet publish -f net47). \r\n* Pointed the IIS site to the new net47 published directory. \r\n\r\nI could load the site ok and navigate around. However, dotnet.exe no longer appeared in the process list.\r\n\r\n````\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  \r\n  <!-- dotnet.exe does NOT show up in process list in Visual Studio 2017 -->\r\n  \r\n  <PropertyGroup>\r\n    <TargetFramework>net47</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.AspNetCore\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Hosting\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Configuration\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.Logging\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Http.Abstractions\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.Extensions.DependencyInjection\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.Mvc\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.AspNetCore.StaticFiles\" Version=\"2.0.*\" />\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Web.BrowserLink\" Version=\"2.0.*\" />\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n````\r\n\r\n\r\nIs there any way I can debug a site running in IIS that targets the Net Framework?\r\n\r\n"},{"Id":"7600173317","Type":"PullRequestEvent","CreatedAt":"2018-04-27T23:38:24","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/715","RelatedDescription":"Merged pull request \"Update BuildTools to preview1-02725-03 (master)\" (#715) at dotnet/standard","RelatedBody":""},{"Id":"7600172487","Type":"IssuesEvent","CreatedAt":"2018-04-27T23:38:02","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/718","RelatedDescription":"Closed issue \"Add IItemProperties, IEditableCollectionView and associated types\" (#718) at dotnet/standard","RelatedBody":"The `IItemProperties` and `IEditableCollectionView` in System.ComponentModel namespace are really great for describing data on ICollectionViewSource to handle dynamic datasources, where you don't have a pre-defined class to encapsulate a datamodel. For instance when dealing with generic data from any database table. It also avoids the need for reflection, as the IItemProperties provides the PropertyInfo you otherwise would retrieve through reflection.\r\n\r\nThese interfaces are useful for generating UI dynamically based on dynamic data models, for use with for instance DataGrids, form entries etc. By having your data collections implement these interfaces, specific platforms can use these interfaces to generate a UI for the data.\r\n\r\n\r\nDoc references:\r\n- [IItemProperties](https://docs.microsoft.com/dotnet/api/system.componentmodel.iitemproperties?view=netframework-4.7.1)\r\n- [IEditableCollectionView](https://docs.microsoft.com/dotnet/api/system.componentmodel.ieditablecollectionview?view=netframework-4.7.1)\r\n- [ItemPropertyInfo](https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.itempropertyinfo?view=netframework-4.7.1)"},{"Id":"7600144104","Type":"IssuesEvent","CreatedAt":"2018-04-27T23:25:33","Actor":"weshaggard","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/708","RelatedDescription":"Closed issue \"Wrong reference path in NETStandard.Library.targets\" (#708) at dotnet/standard","RelatedBody":"@cannehag commented on [Thu Apr 12 2018](https://github.com/dotnet/core/issues/1440)\n\n# After installing NetStandard.Library 2.0.2, a lot of warning occur.\r\nNetStandard.Library.targets 2.0.2 have \r\n<Reference Include=\"$(MSBuildThisFileDirectory)\\ref\\Microsoft.Win32.Primitives.dll...\r\nAccording to documentation MSBuildThisFileDirectory will include a final slash, thus giving a path with double slash and the error message \r\nThe referenced component 'C:\\Users\\xxx\\.nuget\\packages\\netstandard.library\\2.0.2\\build\\netstandard2.0\\\\ref\\Microsoft.Win32.Primitives.dll could not be found'\r\n\r\nVersion 2.0.1 does not have this issue since the targets file is including *.dll from another path\r\n<ReferenceCopyLocalPaths Condition=\"'$(_NetStandardLibraryLibPath)' != ''\" Include=\"$(_NetStandardLibraryLibPath)*.dll\">\r\n\n\n---\n\n@elementalpete commented on [Mon Apr 16 2018](https://github.com/dotnet/core/issues/1440#issuecomment-381640157)\n\nI experienced the same issue after upgrading (path in warning message contains a double slash, actual path has only a single slash).  Downgrading to 2.0.1 solved the issue for now.\n\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"7602698216","Type":"IssuesEvent","CreatedAt":"2018-04-29T05:05:58","Actor":"geoffkizer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/29400","RelatedDescription":"Opened issue \"Brotli_External_DecompressesResponse_Success is consistently failing because httpbin.org is down\" (#29400) at dotnet/corefx","RelatedBody":"This test has been failing in local runs for me all day.  Apparently httpbin.org has been down all day (or at least every time I run tests).\r\n\r\nIf httpbin.org is this unreliable, then I don't think we should be depending on it in functional tests.\r\n"},{"Id":"7602662270","Type":"IssuesEvent","CreatedAt":"2018-04-29T04:29:54","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/29399","RelatedDescription":"Closed issue \"FileVersionInfo.ProductMajorPart is wrong (and inconsistent with .NET Framework) if VersionSuffix contains period character\" (#29399) at dotnet/corefx","RelatedBody":"With a version number like this:\r\n\r\n1.0.0.1-build.foo\r\n\r\nProductMajorPart will return 1 on .NET Framework and 0 on .NET Core.\r\n\r\nAdmittedly, no-one should really make version suffixes that have dots, and the above should have been 1.0.0.1-build-foo.  But, when someone does include a dot in the suffix, .NET Core should at least be consistent with .NET Framework."},{"Id":"7602608116","Type":"IssuesEvent","CreatedAt":"2018-04-29T03:37:31","Actor":"JohnRusk","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/29399","RelatedDescription":"Opened issue \"FileVersionInfo.ProductMajorPart is wrong (and inconsistent with .NET Framework) if VersionSuffix contains period character\" (#29399) at dotnet/corefx","RelatedBody":"With a version number like this:\r\n\r\n1.0.0.1-build.foo\r\n\r\nProductMajorPart will return 1 on .NET Framework and 0 on .NET Core.\r\n\r\nAdmittedly, no-one should really make version suffixes that have dots, and the above should have been 1.0.0.1-build-foo.  But, when someone does include a dot in the suffix, .NET Core should at least be consistent with .NET Framework."},{"Id":"7602607580","Type":"PullRequestEvent","CreatedAt":"2018-04-29T03:36:58","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29398","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx, CoreSetup to preview1-26429-01, preview3-26429-01, preview1-26428-04, respectively (master)\" (#29398) at dotnet/corefx","RelatedBody":""},{"Id":"7602398395","Type":"PullRequestEvent","CreatedAt":"2018-04-29T00:27:17","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/29398","RelatedDescription":"Opened pull request \"Update CoreClr, CoreSetup to preview1-26429-01, preview1-26428-04, respectively (master)\" (#29398) at dotnet/corefx","RelatedBody":""},{"Id":"7602025872","Type":"IssuesEvent","CreatedAt":"2018-04-28T19:39:53","Actor":"Petermarcu","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/29396","RelatedDescription":"Opened issue \"Default HttpClient not using configured web proxy\" (#29396) at dotnet/corefx","RelatedBody":"@jagalves commented on [Sat Apr 28 2018](https://github.com/dotnet/core/issues/1484)\n\n# Issue Title\r\n\r\nWhen using a web proxy setup (in my case Fiddler), HttpClient is not using it by default.\r\n\r\nThis behavior is different between .net core 2.0 and in 2.1 preview 2.\r\n\r\n# General\r\n\r\nWith fiddler running, the following code will try to make a request to \"http://localhost.fiddler:65530\" (I'm assuming nothing is running on that port) and print the result or the exception message:\r\n\r\n```\r\nusing System;\r\nusing System.Net.Http;\r\n\r\nnamespace HttpC\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var http = new HttpClient();\r\n\r\n            try\r\n            {\r\n                var response = http.GetStringAsync(\"http://localhost.fiddler:65530\").GetAwaiter().GetResult();\r\n\r\n                Console.WriteLine(response);\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Console.WriteLine(\"exception: \" + ex.Message);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nHow to reproduce:\r\n1. Start fiddler making sure it's capturing all requests\r\n2. Setup a dotnet core 2.0 console app and add the code provided\r\n3. Run -> the error is Response status code does not indicate success: 502 (Fiddler - Connection Failed).\r\n4. Change to dotnet core 2.1 preview 2\r\n5. Run -> the error is No such host is known\r\n\r\nNote1: in browsers localhost.fiddler works\r\nNote2: I tried the full hostname instead of \"localhost.fiddler\" and HttpClient still didn't use the proxy.\r\n\r\nLink to fiddler: https://www.telerik.com/fiddler\n\n"},{"Id":"7601876122","Type":"PullRequestEvent","CreatedAt":"2018-04-28T17:59:40","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29392","RelatedDescription":"Merged pull request \"Delete unnecessary caches\" (#29392) at dotnet/corefx","RelatedBody":""},{"Id":"7601875749","Type":"PullRequestEvent","CreatedAt":"2018-04-28T17:59:26","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/29393","RelatedDescription":"Merged pull request \"Update CoreClr, CoreFx, CoreSetup to preview1-26428-04, preview3-26428-04, preview1-26428-01, respectively (master)\" (#29393) at dotnet/corefx","RelatedBody":""}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"7602622175","Type":"PullRequestEvent","CreatedAt":"2018-04-29T03:51:03","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/26291","RelatedDescription":"Merged pull request \"Port CodeAnalysisTest to Unix + CoreCLR\" (#26291) at dotnet/roslyn","RelatedBody":""},{"Id":"7602573147","Type":"IssuesEvent","CreatedAt":"2018-04-29T03:04:13","Actor":"agocke","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/26484","RelatedDescription":"Opened issue \"Should /debug+ be enabled by default for /optimize builds?\" (#26484) at dotnet/roslyn","RelatedBody":"/debug+ was a flag intended to stop optimizations where they may destroy locals. However, it only takes effect when a local crosses the statement boundary -- temps and other unobservable locals are still stack-optimized. Locals that live past a single statement (\"long lived\") tend to be pretty rare as a percentage of total locals. If this optimization doesn't have a large effect, maybe it's worth turning off by default?\r\n\r\ncc @VSadov "}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"7602562206","Type":"PullRequestEvent","CreatedAt":"2018-04-29T02:54:36","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5756","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5756) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7601325594","Type":"PullRequestEvent","CreatedAt":"2018-04-28T12:15:42","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5754","RelatedDescription":"Merged pull request \"Fix safe handle marshaling\" (#5754) at dotnet/corert","RelatedBody":"This makes https:// requests work on Linux."},{"Id":"7601278039","Type":"PullRequestEvent","CreatedAt":"2018-04-28T11:43:05","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5755","RelatedDescription":"Merged pull request \"Merge master to nmirror\" (#5755) at dotnet/corert","RelatedBody":""},{"Id":"7601277748","Type":"PullRequestEvent","CreatedAt":"2018-04-28T11:42:53","Actor":"MichalStrehovsky","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5755","RelatedDescription":"Opened pull request \"Merge master to nmirror\" (#5755) at dotnet/corert","RelatedBody":""},{"Id":"7600650601","Type":"PullRequestEvent","CreatedAt":"2018-04-28T04:41:19","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5754","RelatedDescription":"Opened pull request \"Fix safe handle marshaling\" (#5754) at dotnet/corert","RelatedBody":"This makes https:// requests work on Linux."},{"Id":"7600554438","Type":"IssuesEvent","CreatedAt":"2018-04-28T03:28:17","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/5753","RelatedDescription":"Closed issue \"Does .Net Native support escape analysis?\" (#5753) at dotnet/corert","RelatedBody":"Since the .NET Native compiler is an AOT compiler and can see the actual implementations of all methods, it should do escape analysis to allocate some objects on stack instead of heap."},{"Id":"7600544782","Type":"PullRequestEvent","CreatedAt":"2018-04-28T03:21:28","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/5752","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#5752) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7600526086","Type":"IssuesEvent","CreatedAt":"2018-04-28T03:09:03","Actor":"ygc369","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5753","RelatedDescription":"Opened issue \"Does .Net Native support escape analysis?\" (#5753) at dotnet/corert","RelatedBody":"Since the .NET Native compiler is an AOT compiler and can see the actual implementations of all methods, it should do escape analysis to allocate some objects on stack instead of heap."},{"Id":"7600028658","Type":"PullRequestEvent","CreatedAt":"2018-04-27T22:40:00","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/5752","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#5752) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"7597984103","Type":"IssuesEvent","CreatedAt":"2018-04-27T15:00:20","Actor":"daoqiang","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/5751","RelatedDescription":"Opened issue \"How to compile a class library project\" (#5751) at dotnet/corert","RelatedBody":"How to compile a.Netcore class library project？\r\nOr, how to compile.Netcore class library project directly into c/c++ dynamic link library"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"7600154700","Type":"IssuesEvent","CreatedAt":"2018-04-27T23:30:18","Actor":"weshaggard","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2197","RelatedDescription":"Opened issue \"Assembly informational attributes not applied for .net core app\" (#2197) at dotnet/sdk","RelatedBody":"@karelz commented on [Fri Apr 27 2018](https://github.com/dotnet/core-setup/issues/4088)\n\n_From @Priya91 on April 27, 2018 1:33_\n\n**Repro:**\r\n\r\n1. Create a .net core app\r\n2. Set the following properties in the csproj\r\n\r\n```xml\r\n<PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <RuntimeIdentifier>win7-x86</RuntimeIdentifier>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n    <AssemblyTitle>Assembly Information Repro</AssemblyTitle>\r\n    <AssemblyProduct>Assembly Information Repro</AssemblyProduct>\r\n    <AssemblyDescription>Assembly Information Repro</AssemblyDescription>\r\n    <Product>Assembly Information Repro</Product>\r\n    <PublisherName>tester</Publishername>\r\n</PropertyGroup>\r\n```\r\n3. Publish the app.\r\n\r\n**Expected:**\r\nThe properties on ```<assemblyname>.exe``` are set as per the info provided in the csproj.\r\n\r\n**Actual:**\r\nThe properties are set only for ```<assemblyname>.dll```, not on the ```<assemblyname>.exe```. Note, the .exe is the one that runs, and is shown in task manager, firewall prompts, etc. So without the process information, on task manager, it doesn't have a description, and on firewall prompts, it shows the publisher as unknown.\r\n\r\n**AssemblyMetadata.dll**\r\n\r\n![image](https://user-images.githubusercontent.com/7853870/39339896-e260be6e-497f-11e8-867b-fb470122a334.png)\r\n\r\n**AssemblyMetadata.exe**\r\n\r\n![image](https://user-images.githubusercontent.com/7853870/39339877-c3c9349a-497f-11e8-85ad-64ae3f6461e0.png)\r\n\n\n_Copied from original issue: dotnet/corefx#29362_\n\n---\n\n@karelz commented on [Fri Apr 27 2018](https://github.com/dotnet/core-setup/issues/4088#issuecomment-385012366)\n\n_From @kasper3 on April 27, 2018 6:21_\n\nBelongs to https://github.com/dotnet/sdk?\n\n"},{"Id":"7599919437","Type":"PullRequestEvent","CreatedAt":"2018-04-27T22:03:29","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2196","RelatedDescription":"Opened pull request \"Add trim for path in Item\" (#2196) at dotnet/sdk","RelatedBody":"fix https://github.com/dotnet/sdk/issues/1538"},{"Id":"7599769527","Type":"PullRequestEvent","CreatedAt":"2018-04-27T21:21:03","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2195","RelatedDescription":"Merged pull request \"Support overriding MSBuildProjectExtensionsPath for a specific project via global properties\" (#2195) at dotnet/sdk","RelatedBody":"Dual check-in into release/2.1.3xx for change in #2194\r\n\r\nTwo properties are needed since global properties flow to referenced projects so there needs to be a way to specify which project the override applies to"},{"Id":"7599642449","Type":"PullRequestEvent","CreatedAt":"2018-04-27T20:50:21","Actor":"livarcocc","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/2194","RelatedDescription":"Merged pull request \"Support overriding MSBuildProjectExtensionsPath for a specific project via global properties\" (#2194) at dotnet/sdk","RelatedBody":"Two properties are needed since global properties flow to referenced projects so there needs to be a way to specify which project the override applies to\r\n\r\nPart of the fix to https://github.com/dotnet/cli/issues/9129"},{"Id":"7599534215","Type":"PullRequestEvent","CreatedAt":"2018-04-27T20:25:12","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2195","RelatedDescription":"Opened pull request \"Support overriding MSBuildProjectExtensionsPath for a specific project via global properties\" (#2195) at dotnet/sdk","RelatedBody":"Dual check-in into release/2.1.3xx for change in #2194\r\n\r\nTwo properties are needed since global properties flow to referenced projects so there needs to be a way to specify which project the override applies to"},{"Id":"7599296211","Type":"PullRequestEvent","CreatedAt":"2018-04-27T19:29:59","Actor":"dsplaisted","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2194","RelatedDescription":"Opened pull request \"Support overriding MSBuildProjectExtensionsPath for a specific project via global properties\" (#2194) at dotnet/sdk","RelatedBody":"Two properties are needed since global properties flow to referenced projects so there needs to be a way to specify which project the override applies to\r\n\r\nPart of the fix to https://github.com/dotnet/cli/issues/9129"},{"Id":"7596898098","Type":"PullRequestEvent","CreatedAt":"2018-04-27T11:27:51","Actor":"noahfalk","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2193","RelatedDescription":"Opened pull request \"Add a tiered compilation build variable\" (#2193) at dotnet/sdk","RelatedBody":"All the other runtimeconfig options have a built-in property to set them in\r\nout build targets so adding this one to follow suit."},{"Id":"7596080288","Type":"PullRequestEvent","CreatedAt":"2018-04-27T08:28:04","Actor":"v-zbsail","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2192","RelatedDescription":"Opened pull request \"LOC CHECKIN | dotnet/sdk release/2.1.3xx | 20180427\" (#2192) at dotnet/sdk","RelatedBody":null}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"989532387775205376","CreatedAt":"2018-04-26T15:51:20+00:00","UserScreenname":"dotnet","Text":"Get the Azure Quick Start Guide for .NET Developers https://t.co/ALECzXryjk","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":48,"FavoriteCount":21,"RawContent":null},{"Id":"987375741204508673","CreatedAt":"2018-04-20T17:01:35+00:00","UserScreenname":"dotnet","Text":"Help us plan the future of .NET! https://t.co/R0QoZVvXx4","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":124,"FavoriteCount":93,"RawContent":null},{"Id":"986692696507953152","CreatedAt":"2018-04-18T19:47:25+00:00","UserScreenname":"dotnet","Text":"Performance Improvements in .NET Core 2.1 https://t.co/6YMK8P99cZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":251,"FavoriteCount":152,"RawContent":null},{"Id":"986692437211987969","CreatedAt":"2018-04-18T19:46:23+00:00","UserScreenname":"dotnet","Text":"Announcing Visual Studio 2017 15.7 Preview 4 https://t.co/XYIzXNDMhn","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":63,"FavoriteCount":44,"RawContent":null},{"Id":"986400394786914304","CreatedAt":"2018-04-18T00:25:55+00:00","UserScreenname":"dotnet","Text":".NET Core April 2018 Update https://t.co/PuT2Jc7GBy","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":71,"FavoriteCount":33,"RawContent":null},{"Id":"985915431499259904","CreatedAt":"2018-04-16T16:18:50+00:00","UserScreenname":"dotnet","Text":"Join our @csharpfritz and his pair-programming guest @fiercekittenz tomorrow for some LIVE CODING and discussion ab… https://t.co/Vll8gfdlKQ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":5,"RawContent":null}]}},"RunOn":"2018-04-29T05:30:23.0092804Z","RunDurationInMilliseconds":8008}