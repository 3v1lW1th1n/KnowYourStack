{"Data":{"GitHubIssues":{"Issues":[{"Id":"377316419","IsPullRequest":false,"CreatedAt":"2018-11-05T09:34:05","Actor":"robertsundstrom","Number":"1640","RawContent":null,"Title":"Unable to link with System.IdentityModel.Tokens.Jwt","State":"open","Body":"I added the ```System.IdentityModel.Tokens.Jwt``` package to my Blazor-project to handle JWT on the client. When building, I got the usual error about not being able to link because of dependencies, such as \"Semaphore\".\r\n\r\n```cmd\r\n3>TestApp.Client -> S:\\Downloads\\TestApp\\src\\TestApp.Client\\bin\\Debug\\netstandard2.0\\TestApp.Client.dll\r\n3>Cannot find declaration of exported type 'System.Threading.Semaphore' from the assembly 'System.Threading, Version=4.0.12.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n3>Fatal error in IL Linker\r\n3>Mono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'System.Private.DataContractSerialization, Version=4.1.2.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\r\n3>   at Mono.Linker.DirectoryAssemblyResolver.Resolve(AssemblyNameReference name, ReaderParameters parameters)\r\n3>   at Mono.Linker.AssemblyResolver.Resolve(AssemblyNameReference name, ReaderParameters parameters)\r\n3>   at Mono.Linker.DirectoryAssemblyResolver.Resolve(AssemblyNameReference name)\r\n3>   at Mono.Cecil.MetadataResolver.Resolve(TypeReference type)\r\n3>   at Mono.Linker.Steps.ResolveFromAssemblyStep.ProcessLibrary(LinkContext context, AssemblyDefinition assembly, RootVisibility rootVisibility)\r\n3>   at Mono.Linker.Steps.ResolveFromAssemblyStep.ProcessLibrary(AssemblyDefinition assembly)\r\n3>   at Mono.Linker.Steps.ResolveFromAssemblyStep.Process()\r\n3>   at Mono.Linker.Steps.BaseStep.Process(LinkContext context)\r\n3>   at Mono.Linker.Pipeline.ProcessStep(LinkContext context, IStep step)\r\n3>   at Mono.Linker.Pipeline.Process(LinkContext context)\r\n3>   at Mono.Linker.Driver.Run(ILogger customLogger)\r\n3>   at Mono.Linker.Driver.Execute(String[] args, ILogger customLogger)\r\n```\r\nIs there a way to get around this? What is preventing me from using the package?","Url":"https://github.com/aspnet/Blazor/issues/1640","RelatedDescription":"Open issue \"Unable to link with System.IdentityModel.Tokens.Jwt\" (#1640)"},{"Id":"377280599","IsPullRequest":false,"CreatedAt":"2018-11-05T07:33:35","Actor":"philipri","Number":"1639","RawContent":null,"Title":"Suggestion: 401 Redirect Helper","State":"open","Body":"With the way the HttpClient is working on client side Blazor it's actually super hard to intecept the HTTP errors (even with try/catch).\r\n\r\nIt would be great on the HttpClient DI Singleton if we could specify a route associated with common HTTP codes that it returns.\r\n\r\ne.g. on a 401 it might redirect to a login route or token refresh route etc.\r\neg. on a 500 it might show an error page etc.\r\n\r\nThese might be specified in the Startup (i.e. when the dependency is injected).\r\n\r\nAs a temp workaround I might try wrapping the current singleton - but it seems to be acting strangely (more debugging required by me).","Url":"https://github.com/aspnet/Blazor/issues/1639","RelatedDescription":"Open issue \"Suggestion: 401 Redirect Helper\" (#1639)"},{"Id":"377113133","IsPullRequest":false,"CreatedAt":"2018-11-05T05:45:22","Actor":"groogiam","Number":"1636","RawContent":null,"Title":"File System Functionality Question","State":"closed","Body":"Could you please provide some detail on the current implementation of the System.IO.FIle and Directory classes? Based on some initial testing it looks like these are currently ephemeral storage and are lost when the page is reloaded. I'm guessing the file data is just persisted to some data structure in memory. If this is the case is there any plans to potentially patch the file system api's through to browser storage (local,session or indexeddb). similar to what enscripten does https://kripken.github.io/emscripten-site/docs/api_reference/Filesystem-API.html. Thanks.","Url":"https://github.com/aspnet/Blazor/issues/1636","RelatedDescription":"Closed issue \"File System Functionality Question\" (#1636)"},{"Id":"377186713","IsPullRequest":false,"CreatedAt":"2018-11-04T19:41:02","Actor":"kswoll","Number":"1638","RawContent":null,"Title":"<option value=\"\"> incorrectly omits value attribute when body of option contains razor content","State":"open","Body":"What follows is a simple example that leverages HTML5 `required` for an HTML `<select>` element.  The idea is to force the user to choose a value from the dropdown when submitting the form.  A value must be provided to the first option that is the empty string.  (see https://stackoverflow.com/a/6048891/189950)  This works, but if the content of the option element is, for example, provided by a field, Blazor incorrectly omits the `value` attribute, which breaks validation (in Chrome and Edge, anyway).\r\n\r\nYou can see this behavior in the example.  The first select element tries to make the \"none\" option text provided by a field (`@noneString`) whereas the second select element just hard codes it to `None`.\r\n\r\nIf you run it, you'll notice that when clicking the submit button, it highlights the second select element as being required and ignores the first one.  If you simply replace `@noneString` with `None`, then it correctly validates the first select element as well.  (If you look at devtools and examine the first option element in the broken version, there is no `value` attribute present.)\r\n\r\n```\r\n@page \"/\"\r\n\r\n<form>\r\n    <p>\r\n        <select required size=\"1\">\r\n            <option value=\"\" selected>@noneString</option>\r\n            <option value=\"1\">1</option>\r\n            <option value=\"2\">2</option>\r\n        </select>\r\n    </p>\r\n    <p>\r\n        <select required size=\"1\">\r\n            <option value=\"\" selected>None</option>\r\n            <option value=\"1\">1</option>\r\n            <option value=\"2\">2</option>\r\n        </select>\r\n    </p>\r\n    \r\n    <input type=\"submit\" />\r\n</form>\r\n\r\n@functions {\r\n    string noneString = \"None\";\r\n}  \r\n```","Url":"https://github.com/aspnet/Blazor/issues/1638","RelatedDescription":"Open issue \"<option value=\"\"> incorrectly omits value attribute when body of option contains razor content\" (#1638)"},{"Id":"377162021","IsPullRequest":false,"CreatedAt":"2018-11-04T15:11:09","Actor":"marcelgoldstein","Number":"1637","RawContent":null,"Title":"Unable to bind property to input with type of datetime","State":"open","Body":"A simpel binding to a datetime property does not work. Am I doing something wrong here?\r\nWithout binding the control seems to work properly.\r\n\r\nHere is a simplified code example with console-errors:\r\n![grafik](https://user-images.githubusercontent.com/32980128/47965681-30755e00-e04a-11e8-9d01-9d00e1f21112.png)\r\n![grafik](https://user-images.githubusercontent.com/32980128/47965809-04f37300-e04c-11e8-9644-738db8569756.png)\r\n\r\n\r\nWith type=\"date\":\r\n![grafik](https://user-images.githubusercontent.com/32980128/47965747-ee98e780-e04a-11e8-912e-112abf8cf769.png)\r\n![grafik](https://user-images.githubusercontent.com/32980128/47965763-3750a080-e04b-11e8-8cc6-7430eb7e4794.png)","Url":"https://github.com/aspnet/Blazor/issues/1637","RelatedDescription":"Open issue \"Unable to bind property to input with type of datetime\" (#1637)"},{"Id":"377051963","IsPullRequest":false,"CreatedAt":"2018-11-03T12:53:01","Actor":"Knudel","Number":"1635","RawContent":null,"Title":"Passing C# parameter to javascript function fails","State":"open","Body":"When you pass a c# property to a javacript function you get an error.\r\n\r\nSample:\r\n\r\nI created a Blazor server side project.\r\nI include a javascript file with a function:\r\n\r\n```\r\nfunction doAlert(str) {\r\n    alert(str);\r\n}\r\n```\r\n\r\n\r\nThen I create a blazor view like this:\r\n\r\n\r\n```\r\n@page \"/\"\r\n\r\n<button onclick=\"doAlert(@message)\">Click me</button>\r\n\r\n@functions\r\n{\r\n\r\n    public string message { get; set; } = \"Hello World!!!!\";\r\n\r\n}\r\n\r\n```\r\n\r\nWhen compiling I get the error:\r\n\r\nError\tCS1525\tInvalid expression term ')'\t\r\n\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1635","RelatedDescription":"Open issue \"Passing C# parameter to javascript function fails\" (#1635)"},{"Id":"375726189","IsPullRequest":false,"CreatedAt":"2018-11-02T23:30:03","Actor":"AppiePau","Number":"1630","RawContent":null,"Title":"Binding  a select with an int? makes a page hang","State":"closed","Body":"With the following code, I'm able to let a page become unresponsive. \"details.CountryId\" is a Nullable<int> and the current value is null. Sometimes the page not updating and in other cases Chrome is becoming unresponsive and the tab must be closed.\r\n\r\nI could reproduce this scenerio on Windows (VS2017 18.8.8) and VS Code on MacOs Mojave. Whilst being aamazzed it is also running on MacOs! ðŸ˜„ \r\n\r\nWhen countryId is an int and  for example 0, it will work fine.\r\n```html\r\n....\r\n<div class=\"form-group\">\r\n     <label for=\"recipientCountry\">Country</label>\r\n     <select id=\"recipientCountry\" class=\"form-control\" bind=\"@details.CountryId\">\r\n          <option value=\"0\">None</option>\r\n          <option value=\"1\">USA</option>\r\n          <option value=\"2\">Canada</option>\r\n     </select>\r\n</div>\r\n....\r\n```\r\n\r\n```csharp\r\n@functions {\r\n    [Parameter]\r\n    string Id { get; set; } \r\n\r\n    OrganizationDetailModel details;\r\n\r\n    protected override async Task OnInitAsync()\r\n    {\r\n        this.details = await Http.GetJsonAsync<OrganizationDetailModel>(\"api/organizations/\" + this.Id);\r\n    }\r\n}\r\n``` @ #","Url":"https://github.com/aspnet/Blazor/issues/1630","RelatedDescription":"Closed issue \"Binding  a select with an int? makes a page hang\" (#1630)"},{"Id":"376711681","IsPullRequest":false,"CreatedAt":"2018-11-02T23:18:23","Actor":"kingreatwill","Number":"1634","RawContent":null,"Title":" Object of type 'System.Int64' cannot be converted to type 'System.UInt16'.","State":"closed","Body":"![image](https://user-images.githubusercontent.com/13087689/47901728-b31be300-debb-11e8-8b3f-f826703852c9.png)\r\n![image](https://user-images.githubusercontent.com/13087689/47901757-c169ff00-debb-11e8-9b8d-ee0d95fa0a67.png)\r\n![image](https://user-images.githubusercontent.com/13087689/47901794-d9da1980-debb-11e8-9efe-d85d216b3c50.png)\r\n","Url":"https://github.com/aspnet/Blazor/issues/1634","RelatedDescription":"Closed issue \" Object of type 'System.Int64' cannot be converted to type 'System.UInt16'.\" (#1634)"},{"Id":"376410846","IsPullRequest":false,"CreatedAt":"2018-11-02T16:58:37","Actor":"mickturn","Number":"1633","RawContent":null,"Title":"Blazor Generic Support and reusability","State":"closed","Body":"Sorry, I know this is not a forum, but I did not find where I could post this. (copy/paste from a previous messageâ€¦)\r\n\r\nUp to now, we are developing web app, using Bootstrap as front-end framework.\r\nPersonally, I am pretty tired to rebuild from scratch and copy/paste, for each new project, some part of codes + the ajax stack, and we have to rewrite one big app and write ~5 new app.\r\n\r\nNow, we are looking for an alternative.\r\n\r\nAngular have been exclude as:\r\n- TypeScript is not a very appealing language for old school guys like us (C, C++ syntax)\r\n- TypeScript is not usable elsewhere (I mean not like C# with Xamarin, .Net Core, Blazor)\r\n- Some part of the documentation is poorly documented\r\n- Too much update\r\n- Poor reusability\r\n- Debugging sucks\r\n- Big apps are Too fat\r\n\r\nWe then thought that AngularDart could fit but we found:\r\n- Very POOR documentation, and incomplete\r\n- Debugging sucks\r\n- [Archaic generic support](https://stackoverflow.com/questions/53029732/componentfactory-and-generic-component) that leads to â†“\r\n- Big apps are Too fat, as there is a lack of generic component (a lot of copy/paste). For an app rewritten at 1/5, we reached ~20Mb. So we have to find a solutionâ€¦\r\n\r\nNow we are thinking about Blazor.\r\n\r\nWe see only advantage, among them, the future lazy loading that seems so powerful.\r\n\r\nWe know the quality of MS documentation, and that C# is highly generic, but we did not find enough information about:\r\n- Can we structure Blazor Component around MVC pattern (did not see yet)?\r\n- Are components \"really\" generic (not like the archaic AngularDart generic support, check the link provided)? Because I have seen [this video](https://channel9.msdn.com/Shows/ASPNET-Community-Standup/ASPNET-Community-Standup-Oct-9-2018-The-Blazor-Show), but it does not really show reusability of components outside a given area, with a different type.\r\n- Where is the doc for Blazor Server side vs Blazor Client side? [We find this video ](https://www.youtube.com/watch?v=61qmX5eAPwI)very useful, but not \"complete\" (the switch between Blazor Server side vs Blazor Client side seems \"magic\").\r\n\r\nCan we start to write apps? Or the future of Blazor is still uncertain?","Url":"https://github.com/aspnet/Blazor/issues/1633","RelatedDescription":"Closed issue \"Blazor Generic Support and reusability\" (#1633)"},{"Id":"376185125","IsPullRequest":false,"CreatedAt":"2018-10-31T22:30:45","Actor":"danroth27","Number":"1632","RawContent":null,"Title":"Make it easier to enable client-side SignalR logging when using server-side Blazor","State":"open","Body":"We should provide a simple way to [enable client-side SignalR logging](https://github.com/aspnet/SignalR/wiki/Diagnostics-Guide#javascript-client-logging) when using server-side Blazor.","Url":"https://github.com/aspnet/Blazor/issues/1632","RelatedDescription":"Open issue \"Make it easier to enable client-side SignalR logging when using server-side Blazor\" (#1632)"},{"Id":"376022166","IsPullRequest":false,"CreatedAt":"2018-10-31T15:30:44","Actor":"MarkStega","Number":"1631","RawContent":null,"Title":"Server side Blazor + Paste large amount of text into text area with binding = Disconnection of client","State":"open","Body":"I have a server side execution Blazor app that is displaying a text area with a simple 'bind=\"@backingProperty\"'. If I paste moderate amounts of text into the text area everything functions as it should. However, if I paste a large amount of text (it happens to be a base64 representation of an image in some html) then the connection is closed with the following error appearing:\r\n\r\n```\r\nError: Connection disconnected with error 'Error: Server returned an error on close: Connection closed with an error.'. blazor.server.js:16:6839\r\n\tI</e.prototype.log https://localhost:44379/_framework/blazor.server.js:16:6839\r\n\tP</e.prototype.stopConnection/</< https://localhost:44379/_framework/blazor.server.js:16:27531\r\n\ta/</< https://localhost:44379/_framework/blazor.server.js:16:1652\r\n\ta/< https://localhost:44379/_framework/blazor.server.js:16:970\r\n\ts/< https://localhost:44379/_framework/blazor.server.js:16:697\r\n\ts https://localhost:44379/_framework/blazor.server.js:16:474\r\n\tP</e.prototype.stopConnection https://localhost:44379/_framework/blazor.server.js:16:27424\r\n\tP</e.prototype.startInternal/</</this.transport.onclose https://localhost:44379/_framework/blazor.server.js:16:23753\r\n\tU</e.prototype.connect/</</</i.onclose https://localhost:44379/_framework/blazor.server.js:16:20576\r\n\r\nBlazor 0.6.0\r\nFirefox 63.0\r\nWindow 10 Pro x64\r\nIIS Express hosted server side Blazor\r\n","Url":"https://github.com/aspnet/Blazor/issues/1631","RelatedDescription":"Open issue \"Server side Blazor + Paste large amount of text into text area with binding = Disconnection of client\" (#1631)"},{"Id":"375675355","IsPullRequest":false,"CreatedAt":"2018-10-30T20:36:25","Actor":"RemiBou","Number":"1628","RawContent":null,"Title":"Failed to start app with server-side blazor","State":"closed","Body":"You can find my app here https://github.com/RemiBou/Toss.Blazor/tree/try-server-side. When launching the server side, I got my splash screen then it's blank. There is no error in the console, some small messages are exchanged in the websocket connection but nothing interesting.","Url":"https://github.com/aspnet/Blazor/issues/1628","RelatedDescription":"Closed issue \"Failed to start app with server-side blazor\" (#1628)"},{"Id":"375230547","IsPullRequest":false,"CreatedAt":"2018-10-30T20:16:35","Actor":"robertsundstrom","Number":"1625","RawContent":null,"Title":"Make the default HttpMessageHandler implementation injectable","State":"closed","Body":"As a developer, I sometimes want to be able to switch out the default implementation of HttpMessageHandler that is being used by HttpClient. One possible scenario is when I want to add logic for refreshing auth tokens once they have expired.\r\n\r\nThe default HttpClient should obtain an implementation of HttpMessageHandler (default: BrowserHttpMessageHandler) through dependency injection.\r\n\r\nSupport HttpClientFactory for more advanced options.","Url":"https://github.com/aspnet/Blazor/issues/1625","RelatedDescription":"Closed issue \"Make the default HttpMessageHandler implementation injectable\" (#1625)"},{"Id":"375582058","IsPullRequest":false,"CreatedAt":"2018-10-30T16:32:01","Actor":"danroth27","Number":"1627","RawContent":null,"Title":"CLI for creating components","State":"open","Body":"","Url":"https://github.com/aspnet/Blazor/issues/1627","RelatedDescription":"Open issue \"CLI for creating components\" (#1627)"},{"Id":"375284362","IsPullRequest":false,"CreatedAt":"2018-10-30T01:43:53","Actor":"vertonghenb","Number":"1626","RawContent":null,"Title":"[Server-side] Adding 'namespace' will prevent the debug session from continuing.","State":"open","Body":"When debugging from time-to-time (especially when debugging components) \r\nThe following error pops-up:\r\n> Adding 'namespace' will prevent the debug session from continuing.\r\n\r\nAlthough I haven't changed anything to the codebase, only stepping into and over functions.\r\n\r\nThe component itself is a GenericComponent introduced in Blazor 0.6.0.\r\nRestarting Visual Studio, seems to solve the problem but from time-to-time the issue rises again.\r\n\r\nEdit:\r\nRemoved component code, doesn't help at all.\r\n","Url":"https://github.com/aspnet/Blazor/issues/1626","RelatedDescription":"Open issue \"[Server-side] Adding 'namespace' will prevent the debug session from continuing.\" (#1626)"},{"Id":"375221597","IsPullRequest":false,"CreatedAt":"2018-10-29T21:20:13","Actor":"Peter-Juhasz","Number":"1624","RawContent":null,"Title":"Support canceling of navigation","State":"open","Body":"There is an event `OnLocationChanged` on `IUriHelper`, it would be great to have support for canceling or more particularly confirming unintentional navigation.\r\n\r\nThe use case is a simple form that users can change, but to don't lose any changes unintentionally, if the user tries to navigate away and the form has changed, we would like to ask him to confirm or cancel navigation.","Url":"https://github.com/aspnet/Blazor/issues/1624","RelatedDescription":"Open issue \"Support canceling of navigation\" (#1624)"},{"Id":"373764337","IsPullRequest":false,"CreatedAt":"2018-10-29T19:38:39","Actor":"a3diaz","Number":"1611","RawContent":null,"Title":"DateTime.Now retrieves the UTC Time","State":"closed","Body":"I have the following code in a blazor component:\r\n\r\n```\r\n@page \"/sales\"\r\n@inherits SalesBehind\r\n\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-4 p-2\">\r\n            <div>\r\n                <table class=\"table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><strong>Folio: </strong></td>\r\n                            <td>000001</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><strong>Fecha: </strong></td>\r\n                            <td>@DateTime.Now</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><strong>Sucursal: </strong></td>\r\n                            <td>Matriz</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><strong>Cliente: </strong></td>\r\n                            <td>Publico general <button class=\"btn btn-default\"><i class=\"fas fa-user\"></i></button></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div>\r\n                <img class=\"img-fluid\" src=\"/images/qr-code.png\" />\r\n\r\n                <div class=\"input-group mb-3\">\r\n                    <input type=\"text\" class=\"form-control\" placeholder=\"Ingrese el codigo de producto\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\">\r\n                    <div class=\"input-group-append\">\r\n                        <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\"><i class=\"fas fa-plus\"></i></button>\r\n                    </div>\r\n                </div>\r\n\r\n                <button class=\"btn btn-primary btn-block\"><i class=\"fas fa-coins\"></i> Cobrar venta</button>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-8\">\r\n            <table class=\"table table-stripped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Cantidad</th>\r\n                        <th>DescripciÃ³n</th>\r\n                        <th>Precio</th>\r\n                        <th>Importe</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr><td colspan=\"4\"><strong>Productos</strong></td></tr>\r\n                    @foreach(var product in Sale.Products)\r\n                    {\r\n                    <tr>\r\n                        <td>@product.Quantity</td>\r\n                        <td>@product.ProductDescription</td>\r\n                        <td class=\"text-right\">$ @product.Price.ToString(\"0.00\")</td>\r\n                        <td class=\"text-right\">$ @product.Amount.ToString(\"0.00\")</td>\r\n                    </tr>\r\n                    }\r\n                </tbody>\r\n                <tbody>\r\n                    <tr><td colspan=\"4\"><strong>Servicios</strong></td></tr>\r\n                </tbody>\r\n            </table>\r\n            <div class=\"fixed-bottom text-right p-3\">\r\n                <span class=\"h1\">Total $ @Sale.Balance.ToString(\"0.00\")</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n```\r\n\r\nAnd this gets render:\r\n\r\n![2018-10-24 1 _li](https://user-images.githubusercontent.com/14021432/47475288-762b5e80-d7e0-11e8-8117-d512df1ecd67.jpg)\r\n","Url":"https://github.com/aspnet/Blazor/issues/1611","RelatedDescription":"Closed issue \"DateTime.Now retrieves the UTC Time\" (#1611)"},{"Id":"373909382","IsPullRequest":false,"CreatedAt":"2018-10-29T19:24:04","Actor":"SamVogelskamp","Number":"1613","RawContent":null,"Title":"[Suggestion] Make Blazor Library content such as images referenceable in using project","State":"closed","Body":"To my knowledge and experimentation there is no way to use content provided by a Blazor Library in the project it's referenced in, unless I'm missing some specification of tagHelpers that introduce this behavior.\r\n\r\nTo give an example I would like to be able to use an image located in the library's content folder by referencing to src=\"\\<LibraryName>/content/\\<image>\"","Url":"https://github.com/aspnet/Blazor/issues/1613","RelatedDescription":"Closed issue \"[Suggestion] Make Blazor Library content such as images referenceable in using project\" (#1613)"},{"Id":"374041571","IsPullRequest":false,"CreatedAt":"2018-10-29T16:38:39","Actor":"Kaffeegangster","Number":"1614","RawContent":null,"Title":"Server side blazor Microsoft.JSInterop/SignalR exception when passing large strings ","State":"closed","Body":"passing or returning a string>32k  with Microsoft.JSInterop throws an exception and closes SignalR connection. Do i need to implement some kind of argument chunking ? Is the blazor serialisation buffersize configurable?\r\n\r\nMicrosoft.AspNetCore.SignalR.HubConnectionHandler:Error: Error when processing requests.\r\n\r\nSystem.InvalidOperationException: Advancing examined to the end would cause pipe to deadlock because FlushAsync is waiting.\r\n   at System.IO.Pipelines.ThrowHelper.ThrowInvalidOperationException_BackpressureDeadlock()\r\n   at System.IO.Pipelines.Pipe.AdvanceReader(BufferSegment consumedSegment, Int32 consumedIndex, BufferSegment examinedSegment, Int32 examinedIndex)\r\n   at System.IO.Pipelines.Pipe.AdvanceReader(SequencePosition& consumed, SequencePosition& examined)\r\n   at System.IO.Pipelines.Pipe.DefaultPipeReader.AdvanceTo(SequencePosition consumed, SequencePosition examined)\r\n   at Microsoft.AspNetCore.SignalR.HubConnectionHandler`1.DispatchMessagesAsync(HubConnectionContext connection)\r\n   at Microsoft.AspNetCore.SignalR.HubConnectionHandler`1.RunHubAsync(HubConnectionContext connection)\r\nMicrosoft.AspNetCore.Hosting.Internal.WebHost:Information: Request finished in 11613.7288ms 101 ","Url":"https://github.com/aspnet/Blazor/issues/1614","RelatedDescription":"Closed issue \"Server side blazor Microsoft.JSInterop/SignalR exception when passing large strings \" (#1614)"},{"Id":"374636848","IsPullRequest":false,"CreatedAt":"2018-10-29T16:15:12","Actor":"iSatishYadav","Number":"1621","RawContent":null,"Title":"Unable to install ASP.NET Core Blazor Language Services extension without admin rights","State":"closed","Body":"I'm using a Corporate Machine and don't have admin rights to my Windows. I need to install [ASP.NET Core Blazor Language Services](https://marketplace.visualstudio.com/items?itemName=aspnet.blazor) extension but when I open the `Microsoft.VisualStudio.BlazorExtension.vsix` I get an error which says:\r\n````\r\nSupplying the /installas command line parameter requires that vsixinstaller is run as admin.\r\n````\r\nI'm not specifying any parameter, please help me out.","Url":"https://github.com/aspnet/Blazor/issues/1621","RelatedDescription":"Closed issue \"Unable to install ASP.NET Core Blazor Language Services extension without admin rights\" (#1621)"},{"Id":"374735198","IsPullRequest":false,"CreatedAt":"2018-10-29T06:26:18","Actor":"hishamco","Number":"1622","RawContent":null,"Title":"Unable to run Blazor App","State":"closed","Body":"I have created a Blazor application using the dotnet CLI, but when I run `dotnet run` I got the following error:\r\n**CSC : error CS1617: Invalid option '7.3' for /langversion. Use '/langversion:?' to list supported values. [C:\\Users\\Hisham\\Desktop\\Blazory\\Blazory.csproj]**\r\n\r\nFYI I'm working from within VSCode\r\n`dotnet --info`\r\n.NET Command Line Tools (2.2.0-preview1-007947)\r\n\r\nProduct Information:\r\n Version:            2.2.0-preview1-007947\r\n Commit SHA-1 hash:  e8f7ddd01b\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.0-preview1-007947\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0-preview1-26618-02\r\n  Commit:  8b1cd0cdab\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0-preview1-002702 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-preview2-003121 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-preview2-003131 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-preview2-1-003177 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-preview2.1-003155 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-preview4-004079 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0-rc4-004771 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0-preview1-005660 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0-preview1-005977 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0-preview2-005905 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0-preview2-006497 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0-preview3-006764 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.2-vspre-006935 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.7 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.0-preview1-007091 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.1-preview-007165 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.0-preview1-007866 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.0-preview1-007947 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-preview1-28042 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.0-rc2-3002392 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.0-rc2-3002702 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.0-preview1-001100-00 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.2.0-beta-001304-00 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0-beta-001834-00 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0-preview1-001887-00 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0-preview1-002111-00 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0-preview2-002093-00 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0-preview2-25407-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0-preview3-25513-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview1-26112-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview2-25616-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0-preview1-26618-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nI saw similar issues, but most of them using Visual Studio or they miss the proper SDK, I installed 2.2-preview as seen above, any idea how can I fix this error","Url":"https://github.com/aspnet/Blazor/issues/1622","RelatedDescription":"Closed issue \"Unable to run Blazor App\" (#1622)"},{"Id":"374807243","IsPullRequest":true,"CreatedAt":"2018-10-28T22:38:21","Actor":"csnewman","Number":"1623","RawContent":null,"Title":"Add Service Provider Factory support","State":"open","Body":"Copied implementation from aspnet/Hosting. Allows overriding of service provider implementation.","Url":"https://github.com/aspnet/Blazor/pull/1623","RelatedDescription":"Open PR \"Add Service Provider Factory support\" (#1623)"},{"Id":"374635730","IsPullRequest":true,"CreatedAt":"2018-10-27T11:32:58","Actor":"duracellko","Number":"1620","RawContent":null,"Title":"Returns completed tasks (not null) from BlazorComponent.OnInitAsync","State":"open","Body":"BlazorComponent methods `OnInitAsync` and `OnParametersSetAsync` should return Task.Completed and not null.\r\n\r\nFor example following code will fail with NullReferenceException. And there is FxCop rule to run base methods.\r\n```csharp\r\n    protected override async Task OnInitAsync()\r\n    {\r\n        await base.OnInitAsync();\r\n        forecasts = await Http.GetJsonAsync<WeatherForecast[]>(\"sample-data/weather.json\");\r\n    }\r\n```\r\n\r\nThis PR has following changes:\r\n- `BlazorComponent` methods `OnInitAsync` and `OnParametersSetAsync` return `Task.Completed`.\r\n- Replaces ContinueWith with async/await in `SetParameters`.\r\n- Add few unit tests for BlazorComponent to cover cases above.","Url":"https://github.com/aspnet/Blazor/pull/1620","RelatedDescription":"Open PR \"Returns completed tasks (not null) from BlazorComponent.OnInitAsync\" (#1620)"},{"Id":"374606375","IsPullRequest":true,"CreatedAt":"2018-10-27T04:49:31","Actor":"OmarTawfik","Number":"1619","RawContent":null,"Title":"Always return a non-null task from life cycle methods in BlazorComponent","State":"open","Body":"### Problem:\r\n\r\nImplementations of a component cannot just call `await base.On___Async()` because it *might be* null. They have to check, which leads to wasted time debugging to figure out why, and useless null checks in different components to figure out if they should await parent tasks or not.\r\n\r\n### Proposal:\r\n\r\nNever use null tasks, and always return a `Task.CompletedTask` from life cycle methods. This leads to a much cleaner implementation:\r\n\r\n```csharp\r\n        protected override async Task OnInitAsync()\r\n        {\r\n             // User specific operations\r\n            await base.OnInitAsync();\r\n        }\r\n```\r\n\r\ncc @SteveSandersonMS ","Url":"https://github.com/aspnet/Blazor/pull/1619","RelatedDescription":"Open PR \"Always return a non-null task from life cycle methods in BlazorComponent\" (#1619)"},{"Id":"374521570","IsPullRequest":true,"CreatedAt":"2018-10-26T22:38:21","Actor":"VictoriaLasso","Number":"1616","RawContent":null,"Title":"Asp","State":"closed","Body":"asp","Url":"https://github.com/aspnet/Blazor/pull/1616","RelatedDescription":"Closed or merged PR \"Asp\" (#1616)"},{"Id":"374554116","IsPullRequest":false,"CreatedAt":"2018-10-26T21:30:23","Actor":"galvesribeiro","Number":"1618","RawContent":null,"Title":"TypedArray fail to serialize","State":"open","Body":"Hello folks!\r\n\r\nWhile I was implementing [Blazor.Extensions.WebUSB](\r\nhttps://github.com/BlazorExtensions/WebUSB), I had to send/receive buffers to the USB device connected. In C#, I was sending `byte[]` down to JS and it was working perfectly fine. However, when I was sending a buffer back from JS to C#, it fail without any errors since it was unable to deserialize the `Uint8Array` into a `byte[]`. It just hang on the `resolve(array)` call.\r\n\r\nAfter a day trying to figure out what is going on, I noticed that if I convert it to a regular array it works perfectly with `Array.prototype.slice.call(new Uint8Array(out.data.buffer))`. That is very inefficient... \r\n\r\nThe reason for that (looks like) is because we don't have support to deserialize [`TypedArray`s](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray) on SimpleJson...\r\n\r\nThe same problem happens on [Blazor.Extensions.SignalR](https://github.com/BlazorExtensions/SignalR) when we have a callback that expects a `byte[]`.\r\n\r\nLook at the examples [here](https://github.com/BlazorExtensions/WebUSB/blob/master/src/Blazor.Extensions.WebUSB.JS/src/USBManager.ts#L184) and [here](https://github.com/BlazorExtensions/SignalR/blob/master/src/Blazor.Extensions.SignalR.JS/src/HubConnectionManager.ts#L100).\r\n\r\nDo we have a less hacky/slow alternative to this?\r\n\r\nThanks!","Url":"https://github.com/aspnet/Blazor/issues/1618","RelatedDescription":"Open issue \"TypedArray fail to serialize\" (#1618)"},{"Id":"374553778","IsPullRequest":true,"CreatedAt":"2018-10-26T21:29:06","Actor":"Suchiman","Number":"1617","RawContent":null,"Title":"Add repository in nuspec files","State":"open","Body":"Also changes `<projectUrl>` in `Microsoft.AspNetCore.Blazor.Templates.nuspec` to be consistent with the rest.\r\n`<licenseUrl>` is also inconsistent between those two but i have no idea if this is intentional","Url":"https://github.com/aspnet/Blazor/pull/1617","RelatedDescription":"Open PR \"Add repository in nuspec files\" (#1617)"},{"Id":"374288801","IsPullRequest":false,"CreatedAt":"2018-10-26T19:26:56","Actor":"DCollart","Number":"1615","RawContent":null,"Title":"Compile error after update to 0.6","State":"closed","Body":"Hi,\r\n\r\nI just created a new blazor project (front only).\r\nEverything is working and I can compile without any issues. \r\n\r\nI tried to upgrade these two packages : \r\n- Microsoft.AspNetCore.Blazor.Browser : 0.5.1 -> 0.6\r\n- Microsoft.AspNetCore.Blazor.Build : 0.5.1 -> 0.6\r\n\r\nAnd now I have a compile error (I didn't do any change from the creation): \r\n> dotnet \"[...]\\.nuget\\packages\\microsoft.aspnetcore.blazor.build\\0.6.0\\targets\\../tools/Microsoft.AspNetCore.Blazor.Build.dll\" write-boot-json \"obj\\Debug\\netstandard2.0\\WebApplication3.dll\" --references \"[...]\\obj\\Debug\\netstandard2.0\\blazor\\bootjson-references.txt\" --embedded-resources \"[...]\\obj\\Debug\\netstandard2.0\\blazor\\embedded.resources.txt\" --linker-enabled --output \"[...]\\obj\\Debug\\netstandard2.0\\blazor\\blazor.boot.json\"\" exited with code -2147450730.\t\r\n\r\nThanks in advance :-)\r\n","Url":"https://github.com/aspnet/Blazor/issues/1615","RelatedDescription":"Closed issue \"Compile error after update to 0.6\" (#1615)"},{"Id":"373814778","IsPullRequest":true,"CreatedAt":"2018-10-25T07:45:34","Actor":"chorpo","Number":"1612","RawContent":null,"Title":"Add Code of conduct to readme to streamline this repository with other under aspnet","State":"open","Body":"Add Code of conduct to readme to streamline this repository with other under aspnet","Url":"https://github.com/aspnet/Blazor/pull/1612","RelatedDescription":"Open PR \"Add Code of conduct to readme to streamline this repository with other under aspnet\" (#1612)"},{"Id":"373659224","IsPullRequest":false,"CreatedAt":"2018-10-24T20:53:23","Actor":"christoph68","Number":"1610","RawContent":null,"Title":"websockets guidance","State":"closed","Body":"I absolutely love Blazor the way it glues c# with the web.\r\nAfter some hours searching the web, I still am kind of blind about Blazor and Websockets.\r\nRemark: I cannot use SignalR since I need to connect to an existing WSS-Server.\r\nWebsockets (Client) support is essential for many scenarios that favor Blazor over any other SPA.\r\n\r\nIn order to connect to any Websocket Server from a Blazor Client, what options are there now and in future? Thanks for helping explanations.\r\n\r\n","Url":"https://github.com/aspnet/Blazor/issues/1610","RelatedDescription":"Closed issue \"websockets guidance\" (#1610)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-11-06T05:30:03.1258763Z","RunDurationInMilliseconds":1643}