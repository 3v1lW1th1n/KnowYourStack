{"Data":{"Blog":{"FeedItems":[{"Title":"The Xamarin Show: Exploring Awesome Xamarin & Visual Studio Features","PublishedOn":"2018-07-05T18:50:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Each week on The Xamarin Show we explore the latest and greatest in Xamarin development by looking at new features built into Visual Studio, build native cross-platform user interfaces with...","Href":"https://blog.xamarin.com/xamarin-show-ux-xamarinforms-apis-xamarin-essentials/","RawContent":null},{"Title":"Xamarin Podcast: What’s New in Visual Studio 2017, Xamarin.Forms, and the Android designer","PublishedOn":"2018-07-02T19:36:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, Pierce Boggan and James Montemagno discuss the latest &#038; greatest in mobile .NET development, including Xamarin.Forms 3.0 and 3.1, Visual Studio 2017...","Href":"https://blog.xamarin.com/xamarin-podcast-vs2017-xamarinforms-android-designer/","RawContent":null},{"Title":"Use MSBuild to Define Advanced Android VersionCode","PublishedOn":"2018-06-28T16:20:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With the introduction of Xamarin.Android v7.2, two new MSBuild properties were also introduced in order to make maintaining Android VersionCode for Android apps even easier: AndroidVersionCodePattern...","Href":"https://blog.xamarin.com/advanced-android-versioncode/","RawContent":null},{"Title":"What’s New In the Xamarin Android Designer","PublishedOn":"2018-06-25T20:10:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Backed by your feedback, our team has been able to improve the Xamarin Android Designer significantly since it&#8217;s initial release a few years back. Now, we have a ton of new and exciting work...","Href":"https://blog.xamarin.com/future-xamarin-android-designer/","RawContent":null},{"Title":"Getting Android Apps Ready for Google Play’s Target API Level Requirements","PublishedOn":"2018-06-21T18:46:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Developing Android applications is a unique experience, as it often involves taking advantage of the latest capabilities of Android while still providing backward compatibility to older Android...","Href":"https://blog.xamarin.com/android-apps-google-play-target-api-level-requirements/","RawContent":null},{"Title":"Supporting iOS 11 and iPhone X in Xamarin.iOS Apps","PublishedOn":"2018-06-18T19:18:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Apple has indicated that starting in July 2018 all new apps and app updates submitted to the App Store must be built with the iOS 11 SDK and support the iPhone X Super Retina display. The following...","Href":"https://blog.xamarin.com/supporting-ios-11-iphone-x-xamarin-apps/","RawContent":null},{"Title":"More Cross-Platform APIs with Xamarin.Essentials Latest Preview","PublishedOn":"2018-06-14T19:11:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We announced Xamarin.Essentials, a core set of cross-platform APIs to help developers build native apps, at Microsoft Build 2018. Xamarin.Essentials gives developers access to over thirty...","Href":"https://blog.xamarin.com/cross-platform-apis-xamarin-essentials-latest-preview/","RawContent":null},{"Title":"Use MongoDB With Your Xamarin Apps","PublishedOn":"2018-06-12T20:01:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"One of the most important decisions that you&#8217;ll make when designing an app is what type of database to use. Not too long ago, the choice was limited to relational databases like SQL server....","Href":"https://blog.xamarin.com/write-apps-using-mongodb-xamarin/","RawContent":null},{"Title":"Build 2018: Conference Vision Demo App","PublishedOn":"2018-06-07T20:43:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Build 2018 we shipped Xamarin.Forms 3.0. Did you miss the announcement? No worries, you can watch it here to catch up on many of the great new things that will help make you more productive...","Href":"https://blog.xamarin.com/build-2018-conference-vision-demo-app/","RawContent":null},{"Title":"Xamarin.Android Firebase Job Dispatcher: Background Scheduling for all Android Devices","PublishedOn":"2018-06-04T16:00:05+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Running tasks in the background is important for Android apps. It&#8217;s what helps keep an app responsive to the user and allows work to get done even when the user isn’t actively engaged with the...","Href":"https://blog.xamarin.com/xamarin-android-firebase-job-dispatcher-background-scheduling-android-devices/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7925514945","Type":"PullRequestEvent","CreatedAt":"2018-07-05T20:55:18","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1930","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] timestamp fixes for incremental builds\" (#1930) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/Xamarin.Forms/blob/42c07d1ae5aa56eb574b7d169499f1a9af7ec080/Xamarin.Forms.ControlGallery.Android/Xamarin.Forms.ControlGallery.Android.csproj\r\n\r\nWhile working on build performance, I noticed two timestamp issues\r\nthat are preventing some targets in Xamarin.Android from building\r\nincrementally. I spotted both of these while timing builds of the\r\n`Xamarin.Forms.ControlGallery.Android` project. It is a good test\r\nsubject, because it builds PCLs, and seven (or so) Xamarin.Android\r\nlibrary projects.\r\n\r\n### _LinkAssembliesNoShrink\r\n\r\nWhile timing builds, I noticed the following when\r\n`_LinkAssembliesNoShrink` runs:\r\n\r\n    Target Name=_LinkAssembliesNoShrink Project=PagesGallery.Droid.csproj\r\n        Building target \"_LinkAssembliesNoShrink\" partially, because some output files are out of date with respect to their input files.\r\n        [ResolvedUserAssemblies: Input=C:\\Users\\myuser\\Desktop\\Git\\Xamarin.Forms\\PagesGallery\\PagesGallery.Droid\\bin\\Debug\\PagesGallery.Droid.dll, Output=obj\\\\Debug\\android\\assets\\PagesGallery.Droid.dll] Input file is newer than output file.\r\n        ...\r\n        Skip linking unchanged file: C:\\Users\\myuser\\Desktop\\Git\\Xamarin.Forms\\PagesGallery\\PagesGallery.Droid\\bin\\Debug\\PagesGallery.Droid.dll\r\n\r\nIt seems there is a case where MSBuild is thinking the target needs to\r\nrun (due to timestamp values), but the `LinkAssemblies` MSBuild task\r\ndoes not copy the file. It actually doesn't need to do any work at all\r\nhere, since this was a build with no changes.\r\n\r\nThe fix here is to apply a timestamp for files that get skipped. This\r\nprevents the target from running again when it doesn't need to.\r\n\r\nI also removed a spot where a `copysrc` variable looks like it was\r\nbeing set an extra time--did not seem to be needed.\r\n\r\n### _GenerateJavaStubs\r\n\r\nAfter fixing `_LinkAssembliesNoShrink`, I noticed another timestamp\r\nissue:\r\n\r\n    Building target \"_GenerateJavaStubs\" completely.\r\n    Input file \"obj\\\\Debug\\android\\assets\\PagesGallery.Droid.dll\" is newer than output file \"obj\\\\Debug\\android\\typemap.jm\".\r\n\r\nLooking at the `GenerateJavaStubs` MSBuild task, it was never setting\r\nthe timestamp on either `typemap.mj` or `typemap.jm`.\r\n\r\nFixing these two issues, I was able to get a build with no-changes in\r\nthis Xamarin.Forms project down from ~23 seconds to ~13 seconds. I\r\nalso updated the `CheckTimestamps` test to validate these changes."},{"Id":"7925056587","Type":"IssuesEvent","CreatedAt":"2018-07-05T19:11:31","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1929","RelatedDescription":"Opened issue \"[Code Behind] Encountering issues when attempting to add use code behind on an activity layout with a root <Merge> element\" (#1929) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\nI've started updating [Topeka](https://github.com/xamarin/monodroid-samples/tree/master/android5.0/Topeka) to use code behind, and the QuizActivity is throwing an error when I attempt to add a xamarin:classes attribute to the <merge> tag in the corresponding [layout file](https://github.com/xamarin/monodroid-samples/blob/master/android5.0/Topeka/Topeka/Resources/layout/activity_quiz.xml).\r\n\r\n1. Download and attempt to build the attached project. \r\n\r\n[Topeka 2.zip](https://github.com/xamarin/xamarin-android/files/2167881/Topeka.2.zip)\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\nCode generation succeeds.\r\n\r\n### Actual Behavior\r\n\r\n```\r\nobj/Debug/generated/Topeka.Activities.QuizActivity.activity_quiz.g.cs(78,10,78,15): error CS0246: The type or namespace name 'merge' could not be found (are you missing a using directive or an assembly reference?)\r\nobj/Debug/generated/Resources/layout/activity_quiz.xml(5,10,5,15): error CS0246: The type or namespace name 'merge' could not be found (are you missing a using directive or an assembly reference?)\r\nobj/Debug/generated/Topeka.Activities.QuizActivity.activity_quiz.g.cs(81,20,81,24): error CS0102: The type 'QuizActivity' already contains a definition for 'icon'\r\nobj/Debug/generated/Resources/layout/activity_quiz.xml(3,3,3,8): error CS0246: The type or namespace name 'merge' could not be found (are you missing a using directive or an assembly reference?)\r\n```\r\n\r\n### Version Information\r\nhttps://gist.github.com/pjcollins/2a51c2c034cac4eec90dc77a2c6277ad\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n[Build-Output-2018-07-05.binlog.zip](https://github.com/xamarin/xamarin-android/files/2167878/Build-Output-2018-07-05.binlog.zip)\r\nhttps://gist.githubusercontent.com/pjcollins/a698a1226e4d73c0a7dc210c69be7060/raw/aff1e084fce339b7e3d64c1a30b8bbc65cfa3725/gistfile1.txt\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7924493102","Type":"IssuesEvent","CreatedAt":"2018-07-05T17:09:32","Actor":"lukepothier","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1928","RelatedDescription":"Opened issue \"Design-time Resource.Designer.cs breaks Intellisense for Resources/xml/* files\" (#1928) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Download attached [App.zip](https://github.com/xamarin/xamarin-android/files/2167502/App.zip)\r\n2. Build App.csproj\r\n\r\n### Expected Behavior\r\n\r\nThe build succeeds, the error list is clear, and there are no Intellisense issues.\r\n\r\n### Actual Behavior\r\n\r\nThe build does succeed, but there's an Intellisense error on line 26 in `MainActivity.cs`. The static Resource ID for `test.xml` is missing, despite it being in a valid `/Resources` folder with the correct build action. The `Resource.Designer.cs` file in `/Resources` contains the expected generated class:\r\n\r\n\tpublic partial class Xml\r\n\t{\r\n\t\t\t\r\n\t\t// aapt resource value: 0x7f070000\r\n\t\tpublic const int test = 2131165184;\r\n\t\t\t\r\n\t\tstatic Xml()\r\n\t\t{\r\n\t\t\tglobal::Android.Runtime.ResourceIdManager.UpdateIdValues();\r\n\t\t}\r\n\t\t\t\r\n\t\tprivate Xml()\r\n\t\t{\r\n\t\t}\r\n\t}\r\n\r\nwhereas it is absent from the design-time `Resource.Designer.cs` in `obj/Debug/designtime`.\r\n\r\n![image](https://user-images.githubusercontent.com/7534682/42337118-015ad4b6-8086-11e8-8620-f1217c64762c.png)\r\n\r\n![image](https://user-images.githubusercontent.com/7534682/42337125-07d16102-8086-11e8-93fd-03389be40d1a.png)\r\n\r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.7.4\r\nVisualStudio.15.Release/15.7.4+27703.2035\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Enterprise\r\n\r\nMono Debugging for Visual Studio   4.10.5-pre (ab58725)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.10.10.2 (35a01d8dc)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.1 (f3257e429)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.3.2 (HEAD/dffc59120)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.12.0.4 (64fece5)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n"},{"Id":"7921746901","Type":"IssuesEvent","CreatedAt":"2018-07-05T08:35:59","Actor":"pasn","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1927","RelatedDescription":"Opened issue \"APK won't be regenerated when linker script is updated\" (#1927) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Deploy Xamarin.Android application to some device\r\n2. Modify custom linker configuration (XML file with Build Action property set to LinkDescription)\r\n3. Deploy to same device\r\n\r\n### Expected Behavior\r\nNew APK is built and deployed to the device (side effect: old application should be uninstalled and closed on this device)\r\n\r\n### Actual Behavior\r\nAPK is not regerated and  old application is still running\r\n\r\n### Version Information\r\nWindows\r\nVisual Studio Enterprise 2017\r\nVersion 15.7.4\r\n"},{"Id":"7920150277","Type":"PullRequestEvent","CreatedAt":"2018-07-04T21:31:41","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1926","RelatedDescription":"Opened pull request \"[linker] Preserve all the jni marshal methods for marked methods\" (#1926) at xamarin/xamarin-android","RelatedBody":"Linker wasn't preserving jni marshal methods for all the marked\r\nmethods. As an example, `IUncaughtExceptionHandlerInvoker` type lost\r\nits `__<$>_jni_marshal_methods` nested type during linking as we\r\ndidn't find registration attribute on `UncaughtException` method.\r\n\r\nThat led to falling back to the old registration code with a lot of\r\nreflection usage."},{"Id":"7919825881","Type":"PullRequestEvent","CreatedAt":"2018-07-04T19:14:37","Actor":"Flash3001","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1925","RelatedDescription":"Opened pull request \"Fix issue #1588\" (#1925) at xamarin/xamarin-android","RelatedBody":"Disconnect callback on cancellation token during ConnectAsync was not making sure the httpConnection.Disconnect() do not happen on the main thread - it can cause Android to throw an exception. For more information read https://github.com/xamarin/xamarin-android/issues/1588 \r\n\r\nTo fix it we changed the ct.Register in ConnectAsync callback to be just like the one in DoProcessRequest"},{"Id":"7919739868","Type":"IssuesEvent","CreatedAt":"2018-07-04T18:40:26","Actor":"dominik-weber","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1924","RelatedDescription":"Opened issue \"AndroidClientHandler doesn't clear Authorization header on redirect\" (#1924) at xamarin/xamarin-android","RelatedBody":"We have discovered that the AndroidClientHandler transmits all headers when following redirects with AllowAutoRedirect=true. I could not find any authoritative info how this should be handled, however the HttpClientHandler seems to clear the Authorization header when redirecting (see https://github.com/dotnet/corefx/blob/master/src/System.Net.Http/src/System/Net/Http/SocketsHttpHandler/RedirectHandler.cs).\r\nFrom my testing, it appears the NSUrlSessionHandler does so too.\r\n\r\nShould we change the AndroidClientHandler to be more consistent with the other platforms on this issue?"},{"Id":"7919717582","Type":"IssuesEvent","CreatedAt":"2018-07-04T18:31:35","Actor":"dominik-weber","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1923","RelatedDescription":"Opened issue \"Redirect to relative url doesn't work with AndroidClientHandler\" (#1923) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Execute this code:\r\n```\r\nvar client = new HttpClient(new AndroidClientHandler());\r\nvar res = await client.GetStringAsync(\"https://nghttp2.org/httpbin/redirect-to?url=/httpbin/get\");\r\n```\r\n\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThe initial request returns a 302 redirect to relative url: **/httpbin/get**. This endpoint returns a JSON string.\r\n\r\n### Actual Behavior\r\nInstead of following the redirect, an exception is thrown:\r\n`System.InvalidCastException: Unable to convert instance of type 'Java.Net.URLConnectionInvoker' to type 'Java.Net.HttpURLConnection'.`\r\nPlease note that the code above works fine when using HttpClientHandler instead of AndroidClientHandler\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\nMicrosoft Visual Studio Enterprise 2017 \r\nVersion 15.7.4\r\nVisualStudio.15.Release/15.7.4+27703.2035\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Enterprise\r\n\r\nXamarin   4.10.10.2 (35a01d8dc)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.12.1 (f3257e429)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.3.3.2 (HEAD/dffc59120)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.12.0.4 (64fece5)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7926835968","Type":"IssuesEvent","CreatedAt":"2018-07-06T04:55:21","Actor":"jamesmontemagno","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3231","RelatedDescription":"Opened issue \"Feature Request - Toolbar Elevation - Android Platform Specific\" (#3231) at xamarin/Xamarin.Forms","RelatedBody":"We have **SetElevation** which works on elements, however there is no way to set the elevation of the toolbar. Currently we have to go into the Toolbar.axml and specify:\r\n"},{"Id":"7926624337","Type":"IssuesEvent","CreatedAt":"2018-07-06T03:21:04","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3230","RelatedDescription":"Opened issue \"ListView Gallery GroupShortNameBinding View broken on iOS, Android\" (#3230) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nIn the ListView gallery, the GroupShortNameBinding sample does not display correctly on iOS and Android.\r\n\r\nNot sure if this is something we've broken in ControlGallery, or if there's a regression in GroupShortName bindings.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open Control Gallery\r\n2. In the bottom list, navigate to ListView Gallery\r\n3. In the Picker, select GroupShortNameBinding View\r\n\r\n### Expected Behavior\r\n\r\nThe ListView sections would display short names in their headers.\r\n\r\n### Actual Behavior\r\n\r\nOn iOS and Android, a class name is displayed instead.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.2\r\n- Last known good version: ???\r\n\r\n\r\n"},{"Id":"7926424260","Type":"IssuesEvent","CreatedAt":"2018-07-06T02:02:18","Actor":"primehalo","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3229","RelatedDescription":"Opened issue \"[Arabic] Hiji date shown on DatePicker while the popup selector shows Gregorian dates\" (#3229) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWhen the app's culture is set to Arabic the date shown on a DatePicker is in the Hijri calendar rather than the Gregorian calendar despite Gregorian dates being shown when the DatePicker is actually opened. There is seemingly no way to force the DatePicker to show the Gregorian date. My workaround was go make a custom DatePicker so I could change `Control.Text = date.ToString(Element.Format)` to `Control.Text = date.ToString(Element.Format, new System.Globalization.CultureInfo(\"en\"))`. It'd be really nice if we could just set the culture of the DatePicker.\r\n\r\n### Steps to Reproduce\r\n1. Set the culture to Arabic\r\n2. Add a DatePicker to a page\r\n3. The date in the DatePicker will show as Hijri\r\n4. Tap on the DatePicker and see a Gregorian calendar in Android or a Picker of Gregorian dates in iOS.\r\n\r\n### Expected Behavior\r\nI would expect the date shown in the date picker to match the dates shown when the picker is open.\r\n\r\n### Actual Behavior\r\nThe DatePicker shows a Hijri date but Gregorian dates are shown when presented with the dates to pick from.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin.Forms v3.1.0.583944\r\n- Last known good version: -\r\n- IDE: Visual Studio 15.7.4\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  11.4\r\n  - Android: 8.0 \r\n  - UWP:  Untested \r\n- Android Support Library Version: v7\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n"},{"Id":"7925806999","Type":"IssuesEvent","CreatedAt":"2018-07-05T22:07:31","Actor":"jamesmontemagno","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3228","RelatedDescription":"Opened issue \"Feature Request - Default Search Directory for UWP Icons (Platform Specific)\" (#3228) at xamarin/Xamarin.Forms","RelatedBody":"I would really like to put all of my icons/images inside of the `Assets` folder, however this creates some not so great looking code:\r\n\r\n```\r\n<Image>\r\n                <Image.Source>\r\n                    <OnPlatform x:TypeArguments=\"ImageSource\">\r\n                        <On Platform=\"iOS\" Value=\"icon_twitter.png\"/>\r\n                        <On Platform=\"Android\" Value=\"icon_twitter.png\"/>\r\n                        <On Platform=\"UWP\" Value=\"Assets/icon_twitter.png\"/>\r\n                    </OnPlatform>\r\n                </Image.Source>\r\n            </Image>\r\n```\r\n\r\nIdeally I would like to do:\r\n\r\n```xml\r\n<Image Source=\"icon_twitter.png\"/>\r\n```\r\n\r\nI could do this if I put it into the UWP root, but that clutters up the project if it is large.\r\n\r\nI would like something like:\r\n\r\n```\r\nOn<UWP>().SetImageSearchDirectory(\"Assets\");\r\n```\r\n\r\nThen my nice pretty Image would work.\r\n"},{"Id":"7925788478","Type":"IssuesEvent","CreatedAt":"2018-07-05T22:02:02","Actor":"davidhardie","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3227","RelatedDescription":"Opened issue \"Xamarin.Forms WebViewRenderer.LoadUrl() does not include Uri.UserInfo\" (#3227) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nThe Xamarin.Forms.Platform.iOS/Renderers/WebViewRenderer does not include Uri.UserInfo when reconstructing the Uri to pass to LoadRequest()\r\n\r\n### Steps to Reproduce\r\n1. Create a new Xamarin Forms project\r\n2. Include a WebView with a Source property resembling https://user:password@server.com/test\r\n3. Run on iOS simulator or device.\r\n\r\n### Expected Behavior\r\nThe WebView renders the Uri on the page\r\n\r\n### Actual Behavior\r\nThe WebView is blank.\r\n\r\n### Basic Information\r\nThe safeHostUri var should also respect the Url.UserInfo Property, if supplied, when reconstructing the Uri for the LoadRequest() call.\r\n\r\n- Version with issue: Xamarin.Forms 3.1.0.583944\r\n- Last known good version: Xamarin.Forms 2.5\r\n- IDE: Visual Studio Mac 7.5.3\r\n- Platform Target Frameworks: iOS\r\n- Affected Devices: iOS all devices running 9.3.5-11.4\r\n\r\n### Reproduction Link\r\nSee the changes to Xamarin.Forms.Platform.iOS/Renderers/WebViewRenderer.cs in https://github.com/xamarin/Xamarin.Forms/commit/3b2be6912c35a0991ff08b26b92414a9eefb1cd0"},{"Id":"7925651171","Type":"IssuesEvent","CreatedAt":"2018-07-05T21:26:39","Actor":"kpespisa","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3226","RelatedDescription":"Opened issue \"Exception has been thrown by the target of an invocation when building with Xaml compilation enabled and setting Margin property on FlexLayout\" (#3226) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nException has been thrown by the target of an invocation when building with XamlC compilation enabled and setting Margin property on FlexLayout\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a Xamarin Forms project\r\n2. Create a content page or view using XAML\r\n3. Include a FlexLayout \r\n4. Set the Margin Property of that FlexLayout\r\n5. Enable Xaml Compilation [assembly: XamlCompilation(XamlCompilationOptions.Compile)]\r\n\r\n### Expected Behavior\r\nMargin values are respected. \r\n\r\n### Actual Behavior\r\nError mentioned above \r\n\r\n### Basic Information\r\nIn the Visual Studio Xaml Preview the margin works fine. This also works fine when building without Xaml compilation.\r\n\r\n- Version with issue:\r\n- Last known good version: Unknown\r\n- IDE: Visual Studio Mac\r\n- Platform Target Frameworks: Xamarin.Forms 3.0 and 3.1\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please u\r\n[FlexLayoutDemos.zip](https://github.com/xamarin/Xamarin.Forms/files/2168281/FlexLayoutDemos.zip)\r\n\r\npload or provide a link to a reproduction case -->\r\n"},{"Id":"7925619850","Type":"PullRequestEvent","CreatedAt":"2018-07-05T21:19:13","Actor":"mohachouch","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/3225","RelatedDescription":"Opened pull request \"[WPF] Fix FontFamily Assignment in platform specific project\" (#3225) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nFix FontFamily Assignment in platform specific project\r\n\r\nFont in current project with namespace : \r\n\r\n- FontFamily = \"/Xamarin.Forms.ControlGallery.WPF;component/Assets/#FontAwesome\"\r\n\r\nFont in current project without namespace : \r\n\r\n- FontFamily = \"/Assets/#FontAwesome\"\r\n\r\nFont in other project : \r\n\r\n- FontFamily = \"/Meziantou.WpfFontAwesome;component/Resources/#FontAwesome\"\r\n\r\n### Issues Resolved ###\r\n\r\n- fixes #2187\r\n\r\n### Platforms Affected ###\r\n\r\n- WPF\r\n\r\n### Image ###\r\n\r\n![image](https://user-images.githubusercontent.com/25939826/42348403-9d48a5e2-80a9-11e8-8fb3-3cd4ae19fac3.png)\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"7925543548","Type":"IssuesEvent","CreatedAt":"2018-07-05T21:01:40","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/3192","RelatedDescription":"Closed issue \"Environment.SpecialFolder.Personal Returns Locked Path\" (#3192) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nThe special folder path Environment.SpecialFolder.Personal on my Galaxy S8 returns a path that I can store files in, but it's in a hidden \"root only\" area that I can't view either when browsing on my PC via USB, or on the device itself (unless I route).\r\n\r\nEven though the path is\r\n\r\n/data/user/0/…\r\n\r\nI can't access the files I'm creating.  I don't know if this is specific to the Galaxy S8.\r\n\r\nThe following all produce the same result,\r\n\r\nSystem.Environment.SpecialFolder.ApplicationData\r\nSystem.Environment.SpecialFolder.MyDocuments\r\nSystem.Environment.SpecialFolder.Personal\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Create a file in Environment.SpecialFolder.Personal\r\n2.  Attempt to find it on your device, using any non-rooted method\r\n3.  Note that you cannot even see the file, but the app can.\r\n\r\n### Expected Behaviour\r\n\r\nI should be able to access anything in Environment.SpecialFolder.Personal, so the path should be accessible.  Otherwise it's not a personal path if the user can't even get to the data within it.\r\n\r\n### Actual Behaviour\r\n\r\nData gets \"lost\", although the application can read/write it fine, the user cannot access it.\r\n\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE:\r\n- Platform Target Frameworks:\r\n  - Android: 8.0.0\r\n- Nuget Packages:\r\n - Xamarin.Android.* (27.0.2.1)\r\n - Xamarin.Forms (3.1.0.583944)\r\n- Affected Devices:\r\n - Galaxy S8\r\n\r\n### Reproduction Link\r\n\r\nhttps://1drv.ms/u/s!AlN90gKdry3-tKdzo__P9p5UuUHaww\r\n\r\n### What Is Your Favourite Colour?\r\n\r\nOrange"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7926712611","Type":"IssuesEvent","CreatedAt":"2018-07-06T03:58:47","Actor":"rajesh-nanda","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4408","RelatedDescription":"Opened issue \"UIPrintPageRenderer returns 'NumberOfPages' as Zero with the big size HTML file with contents CSS and log of SVGs in it. Due to this Empty PDF page is getting created \" (#4408) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Prepare a HTML file with more than 10 pages containing CSS and lot of SVGs (so that it takes long time to render)\r\n2. Develop a code to load this HTML file from bundle to WKWebView\r\n3. Create the UIPrintPageRenderer from WKWebView for printing.\r\n4. Verify that 'NumberOfPages' of the UIPrintPageRenderer returns 0 (Zero). For this, empty page PDF file is getting created.\r\n\r\n### Expected Behavior\r\nDidFinishNavigation should not return until complete HTML page is fully rendered on the View and the UIPrintPageRenderer should correctly return the number of pages based on the 'page rect' size specified.\r\n\r\n### Actual Behavior\r\nThe 'NumberOfPages' of the UIPrintPageRenderer returns 0 (Zero). For this, empty page PDF file is getting created.\r\n### Environment\r\niOS Xamarin (Tested using both Visual studio in Windows and iOS)\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nMicrosoft Visual Studio Professional 2015\r\nVersion 14.0.25431.01 Update 3\r\nMicrosoft .NET Framework\r\nVersion 4.6.01590\r\n\r\nXamarin   4.5.0.443 (c871575)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin.Android   7.3.0.13 (448f54f)\r\nVisual Studio extension to enable development for Xamarin.Android.\r\n\r\nXamarin.iOS   10.10.0.30 (30b6e87)\r\nVisual Studio extension to enable development for Xamarin.iOS.\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n[Html_To_Pdf_Sample.zip](https://github.com/xamarin/xamarin-macios/files/2168974/Html_To_Pdf_Sample.zip)\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"7926513015","Type":"PullRequestEvent","CreatedAt":"2018-07-06T02:36:34","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4406","RelatedDescription":"Merged pull request \"[arkit] Update to Xcode 10 beta 3\" (#4406) at xamarin/xamarin-macios","RelatedBody":"- Updated some ARReferenceObject APIs based on their (better) Swift names. Breaking changes but on new APIs.\n- Update ARReferenceObjectTest for device (center and extent have real values on device).\n- Reuploaded an arobject file from Beta 3 just in case because of: \"ARReferenceObject and ARWorldMap data generated using iOS 12 beta 2 or earlier isn’t compatible with beta 3 or later. Please rescan your objects to generate new ARReferenceObject and ARWorldMap data.\""},{"Id":"7925576018","Type":"PullRequestEvent","CreatedAt":"2018-07-05T21:08:45","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4405","RelatedDescription":"Merged pull request \"[healthkit] Update for Xcode 10 beta 3\" (#4405) at xamarin/xamarin-macios","RelatedBody":"Somehow some of the APIs added there weren't reported as missing by xtro."},{"Id":"7925434563","Type":"PullRequestEvent","CreatedAt":"2018-07-05T20:37:15","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4403","RelatedDescription":"Merged pull request \"[SceneKit] Update bindings to Xcode 10 Beta 3\" (#4403) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"7925430857","Type":"PullRequestEvent","CreatedAt":"2018-07-05T20:36:25","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/4402","RelatedDescription":"Merged pull request \"[Intents|UI] Update bindings to Xcode 10 Beta 3\" (#4402) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1014949294737186816","CreatedAt":"2018-07-05T19:09:03+00:00","UserScreenname":"xamarinhq","Text":"Cool intros to new goodies in &lt;10 minutes! Explore some of the “Snack Pack” episodes that @JamesMontemagno bundled… https://t.co/80gmo35fb6","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":54,"FavoriteCount":21,"RawContent":null},{"Id":"1014903254034141190","CreatedAt":"2018-07-05T16:06:06+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/3RaJk3O0xb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":28,"FavoriteCount":19,"RawContent":null},{"Id":"1014521211970379776","CreatedAt":"2018-07-04T14:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":34,"RawContent":null},{"Id":"1014159326645313537","CreatedAt":"2018-07-03T14:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":25,"RawContent":null},{"Id":"1013873320834445313","CreatedAt":"2018-07-02T19:53:31+00:00","UserScreenname":"xamarinhq","Text":"In today's Xamarin Podcast, @PierceBoggan &amp; @JamesMontemagno talk up latest &amp; greatest in mobile #dotNET dev; Xamar… https://t.co/chy5AhHt86","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":60,"FavoriteCount":42,"RawContent":null},{"Id":"1013805063209455616","CreatedAt":"2018-07-02T15:22:17+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/kdzv9U4084","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":21,"RawContent":null},{"Id":"1013547297437835264","CreatedAt":"2018-07-01T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/JL1SW3MFro","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":27,"RawContent":null},{"Id":"1012399525338595328","CreatedAt":"2018-06-28T18:17:10+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/3QxhuBcUiC v7.2 introduces two new MSBuild properties to make maintaining Android VersionCode for Andr… https://t.co/j469e1DU24","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":84,"FavoriteCount":58,"RawContent":null},{"Id":"1011343460811583489","CreatedAt":"2018-06-25T20:20:45+00:00","UserScreenname":"xamarinhq","Text":"What’s new in the #XamarinAndroid designer: https://t.co/OOHH6tXhia https://t.co/lCAsZQzwls","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":91,"FavoriteCount":39,"RawContent":null},{"Id":"1009871245574332422","CreatedAt":"2018-06-21T18:50:42+00:00","UserScreenname":"xamarinhq","Text":"Get your #Xamarin Android apps ready for Google Play’s target API level requirements: https://t.co/2iFf5ijjj9 https://t.co/iQmylzyQ7o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":34,"RawContent":null},{"Id":"1008802730993967104","CreatedAt":"2018-06-18T20:04:48+00:00","UserScreenname":"xamarinhq","Text":"Get ready for the July 2018 deadline by ensuring your  #Xamarin apps support iOS 11 and iPhone X: https://t.co/1Wx6Bo4TSQ","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":43,"FavoriteCount":18,"RawContent":null},{"Id":"1007343670775963649","CreatedAt":"2018-06-14T19:27:01+00:00","UserScreenname":"xamarinhq","Text":"Get access to more cross-platform APIs with the latest Xamarin.Essentials Preview: https://t.co/WqtCV8OneC https://t.co/FgdScqkpPt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":117,"FavoriteCount":66,"RawContent":null},{"Id":"1007280505820254209","CreatedAt":"2018-06-14T15:16:01+00:00","UserScreenname":"xamarinhq","Text":"Implement drawer and split UI with the #XamarinForms MasterDetailPage: https://t.co/77WkBtKGpx https://t.co/zLa3RTUgaL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":45,"FavoriteCount":21,"RawContent":null},{"Id":"1006915501405167616","CreatedAt":"2018-06-13T15:05:37+00:00","UserScreenname":"xamarinhq","Text":"Using #TensorFlow and #Azure to add image classification to your Android apps: https://t.co/45lGqihW7e https://t.co/U9huu5DdJW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":22,"RawContent":null},{"Id":"1006682387743461376","CreatedAt":"2018-06-12T23:39:19+00:00","UserScreenname":"xamarinhq","Text":"Create your first #Xamarin app using #MongoDB: https://t.co/Nu6lZzYwYX","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":60,"FavoriteCount":25,"RawContent":null},{"Id":"1006563778471788544","CreatedAt":"2018-06-12T15:48:00+00:00","UserScreenname":"xamarinhq","Text":"Check out this handy curated list of awesome #Xamarin books written by other developers in the #Xamarin community: https://t.co/Yu7V3tVSRq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":23,"RawContent":null},{"Id":"1006201893369106433","CreatedAt":"2018-06-11T15:50:00+00:00","UserScreenname":"xamarinhq","Text":"A brief history of #dotNET Standard (and where it's going): https://t.co/AfiPETlRiv","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null},{"Id":"1005923084023582721","CreatedAt":"2018-06-10T21:22:07+00:00","UserScreenname":"xamarinhq","Text":"Learn how to use the iOS 11 drag and drop APIs in your #Xamarin iOS apps: https://t.co/bWru3lL6he https://t.co/OPYTFzsQk4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":68,"FavoriteCount":28,"RawContent":null},{"Id":"1005574764382117888","CreatedAt":"2018-06-09T22:18:01+00:00","UserScreenname":"xamarinhq","Text":"Localize your #XamarinForms apps for right-to-left languages with the help of the new FlowDirection property:… https://t.co/kaQCoeUycf","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":37,"FavoriteCount":22,"RawContent":null}]}},"RunOn":"2018-07-06T05:30:57.1040604Z","RunDurationInMilliseconds":4322}