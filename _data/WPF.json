{"Data":{"GitHub":{"Issues":[{"Id":"561371495","IsPullRequest":true,"CreatedAt":"2020-02-07T02:45:52","Actor":"dotnet-maestro[bot]","Number":"2516","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20200206.2\r\n- **Date Produced**: 2/7/2020 1:24 AM\r\n- **Commit**: 804091a825f723579f18fcd1b82b7b86cb001c04\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-preview.1.20106.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2516","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2516)"},{"Id":"561321215","IsPullRequest":false,"CreatedAt":"2020-02-06T23:02:19","Actor":"vatsan-madhavan","Number":"2515","RawContent":null,"Title":"Replace private .NET 4.8 ref-assembly package with with official one ","State":"open","Body":"[Microsoft.NETFramework.ReferenceAssemblies.net48](https://www.nuget.org/packages/Microsoft.NETFramework.ReferenceAssemblies.net48/)  is now available. \r\n\r\nThe private `net-framework-48-ref-assemblies` can be replaced with the official reference assemblies now. \r\n\r\nhttps://github.com/dotnet/wpf/blob/b30a16a465c9a0ed7e641a9d55df2f6e5c878a81/global.json#L20\r\n\r\n/cc @rladuca ","Url":"https://github.com/dotnet/wpf/issues/2515","RelatedDescription":"Open issue \"Replace private .NET 4.8 ref-assembly package with with official one \" (#2515)"},{"Id":"561292244","IsPullRequest":false,"CreatedAt":"2020-02-06T21:53:52","Actor":"vatsan-madhavan","Number":"2514","RawContent":null,"Title":"VB.NET WPF does not compile on .NET 5, fails with MC1000","State":"open","Body":"@Nukepayload2 \r\n\r\n- .NET Core 3.0/3.1 SDK's do not support VB on WindowsDesktop. \r\n- Building .NET Framework targets using the SDK Style projects are primarily support for migration scenarios only - it is not intended as a new-feature for .NET Framework development. \r\n\r\nSince migration to .NET Core 3.1 is not fully enabled for VB projects, we do not recommend building VB based WindowsDesktop (i.e, WPF or WinForms) projects using SDK style projects on .NET Core 3.x.\r\n\r\n_Originally posted by @vatsan-madhavan in https://github.com/dotnet/wpf/issues/2274#issuecomment-580033712_\r\n\r\nAlso \\originally reported at https://developercommunity.visualstudio.com/comments/893563/view.html by: \r\n\r\n>SeverityCodeDescriptionProjectFileLineSuppression State Error MC1000 Unknown build error, 'Could not find assembly 'mscorlib, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null'. Either explicitly load this assembly using a method such as LoadFromAssemblyPath() or use a MetadataAssemblyResolver that returns a valid assembly.' WpfApp1C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha.1.20064.2\\Sdks\\Microsoft.NET.Sdk.WindowsDesktop\\targets\\Microsoft.WinFX.targets225\r\n\r\nVB will be supported on .NET 5 and this should be fixed there. ","Url":"https://github.com/dotnet/wpf/issues/2514","RelatedDescription":"Open issue \"VB.NET WPF does not compile on .NET 5, fails with MC1000\" (#2514)"},{"Id":"558150009","IsPullRequest":false,"CreatedAt":"2020-02-06T21:53:25","Actor":"mgnsm","Number":"2489","RawContent":null,"Title":"Cannot set PrincipalPolicy","State":"closed","Body":".NET Core Version: 3.1.101\r\nWindows version: 16299.1625\r\nReproducible in .NET Framework 4.8?: No.\r\n\r\nCalling `AppDomain.CurrentDomain.SetPrincipalPolicy` to specify a principal policy of `PrincipalPolicy.UnauthenticatedPrincipal` doesn't seem to work.\r\n\r\nIf I create a new WPF application using the default `WPF App (.NET Core)` template in Visual Studio 2019 16.4.3 and implement the `App.xaml.cs` class like this:\r\n\r\n    public partial class App : Application\r\n    {\r\n        public App()\r\n        {\r\n            AppDomain.CurrentDomain.SetPrincipalPolicy(PrincipalPolicy.UnauthenticatedPrincipal);\r\n            Debug.Assert(Thread.CurrentPrincipal != null); //works\r\n            Debug.Assert(Thread.CurrentPrincipal.GetType() == typeof(GenericPrincipal)); //works\r\n        }\r\n    }\r\n\r\n...and the `MainWindow.xaml.cs` class like this:\r\n\r\n    public partial class MainWindow : Window\r\n    {\r\n        public MainWindow()\r\n        {\r\n            InitializeComponent();\r\n            Debug.Assert(Thread.CurrentPrincipal != null); //fails\r\n        }\r\n    }\r\n\r\n...the assert in the window unexpectedly fails. \r\n\r\nHow do I properly specify a principal policy and set the `Thread.CurrentPrincipal` property in a WPF application running on .NET Core?","Url":"https://github.com/dotnet/wpf/issues/2489","RelatedDescription":"Closed issue \"Cannot set PrincipalPolicy\" (#2489)"},{"Id":"560732909","IsPullRequest":false,"CreatedAt":"2020-02-06T20:00:31","Actor":"vatsan-madhavan","Number":"2508","RawContent":null,"Title":"Possible invalid date when incrementing or decrementing the year on February 29th in a leap year","State":"closed","Body":"https://github.com/dotnet/wpf/blob/b30a16a465c9a0ed7e641a9d55df2f6e5c878a81/src/Microsoft.DotNet.Wpf/src/UIAutomation/UIAutomationClientSideProviders/MS/Internal/UnsupportedAutomationProxies/WindowsCalendar.cs#L1791-L1802\r\n\r\n```\r\nMultiScan.exe -p -v -o %temp%\\results.sarif UIAutomationClientSideProviders\\ms\\Internal\\UnsupportedAutomationProxies\\WindowsCalendar.cs\r\ninfo: Microsoft.EngSys.CodeScan.MultiScan.Core.MultiScanner[0]\r\n      Detected a Git repository at C:\\src\\r2\\wpf\\\r\ndbug: Microsoft.EngSys.CodeScan.MultiScan.Core.MultiScanner[0]\r\n      Scanned UIAutomationClientSideProviders\\ms\\Internal\\UnsupportedAutomationProxies\\WindowsCalendar.cs in 5500.2 ms.\r\nwarn: Microsoft.EngSys.CodeScan.MultiScan.Core.MultiScanner[0]\r\n      Found in UIAutomationClientSideProviders\\ms\\Internal\\UnsupportedAutomationProxies\\WindowsCalendar.cs(1795,56): YearIncrementCSScanner - Possible invalid date when incrementing or decrementing the year on February 29th in a leap year.\r\ninfo: Microsoft.EngSys.CodeScan.MultiScan.Core.MultiScanner[0]\r\n      Found 1 hits in 1 files.\r\ndbug: Microsoft.EngSys.CodeScan.MultiScan.Core.MultiScanner[0]\r\n      Blame took 77 ms for all files.\r\ninfo: Microsoft.EngSys.CodeScan.MultiScan.Core.MultiScanner[0]\r\n      Total Run Time: 00:00:06.088\r\n```\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/2508","RelatedDescription":"Closed issue \"Possible invalid date when incrementing or decrementing the year on February 29th in a leap year\" (#2508)"},{"Id":"561028451","IsPullRequest":true,"CreatedAt":"2020-02-06T14:05:36","Actor":"dotnet-maestro[bot]","Number":"2513","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20200206.1\r\n- **Date Produced**: 2/6/2020 1:31 PM\r\n- **Commit**: eb10d0cf19827b3849bb42d141c8b4d4779882f9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-preview.1.20106.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2513","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2513)"},{"Id":"561022567","IsPullRequest":false,"CreatedAt":"2020-02-06T13:45:23","Actor":"garghimanshu0786","Number":"2512","RawContent":null,"Title":"SourceColection getting garbage collected for ListCollectionView on switching views","State":"open","Body":"\r\n **Problem description:**\r\n\r\nWhile using the same ListCollectionView on different view, the same gets 'DetachedFromSourceCollection' on switching the view.\r\n\r\n **Actual behavior:**\r\n\r\n Void RestoreLiveShaping()\r\nObject reference not set to an instance of an object.\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at System.Windows.Data.ListCollectionView.RestoreLiveShaping()\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n******** Stack Trace *********\r\n\r\n******** BaseStack Trace *********   at System.Windows.Data.ListCollectionView.RestoreLiveShaping()\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\n **Expected behavior:**\r\n User should be able to use a ListCollectionView on different views.\r\n\r\n **Minimal repro:**\r\n\r\n1. Create a listcollectionview from a new collectionviewsource.\r\n2. Add live filtering properties to the collectionviewsource and set 'IsLiveFiltering' to true.\r\n3. Change that property from another view.\r\n4. Switch from that view to some other view.\r\n5. Change the live filtering property again.\r\n6. The code will crash with the above call stack.\r\n\r\nRCA:-\r\nGarbage collector is setting source collection to null on switching to a different view.\r\n","Url":"https://github.com/dotnet/wpf/issues/2512","RelatedDescription":"Open issue \"SourceColection getting garbage collected for ListCollectionView on switching views\" (#2512)"},{"Id":"561012782","IsPullRequest":true,"CreatedAt":"2020-02-06T13:43:41","Actor":"dotnet-maestro[bot]","Number":"2511","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20200206.2\r\n- **Date Produced**: 2/6/2020 9:29 AM\r\n- **Commit**: 274386b74a7a66625756a599a6cd3f0377a97593\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-preview.1.20106.2\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2511","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2511)"},{"Id":"560998591","IsPullRequest":true,"CreatedAt":"2020-02-06T13:32:45","Actor":"dotnet-maestro[bot]","Number":"2510","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 3a1d3bb6-c64d-406d-e8f4-08d648cf64cb\r\n- **Build**: 20200205.2\r\n- **Date Produced**: 2/5/2020 8:49 PM\r\n- **Commit**: b65df96ccb820fd5f7ea226aeba310485f395130\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20105.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20105.2\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2510","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2510)"},{"Id":"560814729","IsPullRequest":true,"CreatedAt":"2020-02-06T07:00:37","Actor":"dotnet-maestro[bot]","Number":"2509","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20200205.4\r\n- **Date Produced**: 2/6/2020 6:29 AM\r\n- **Commit**: aae9e89912c89412e7a53b53b65f0ca1b4abb6f3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-preview.1.20105.4\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2509","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2509)"},{"Id":"560720019","IsPullRequest":true,"CreatedAt":"2020-02-06T01:48:51","Actor":"vatsan-madhavan","Number":"2507","RawContent":null,"Title":"Build orchestration fixups","State":"closed","Body":"A few additional build orchestration fixups needed for an upcoming repo-refactoring. \r\n\r\n**ps:** do not squash this PR - create a merge commit instead;","Url":"https://github.com/dotnet/wpf/pull/2507","RelatedDescription":"Closed or merged PR \"Build orchestration fixups\" (#2507)"},{"Id":"560698320","IsPullRequest":true,"CreatedAt":"2020-02-06T00:15:39","Actor":"dotnet-maestro[bot]","Number":"2506","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20200205.3\r\n- **Date Produced**: 2/5/2020 11:30 PM\r\n- **Commit**: ed7a932ae4a865fea4bb2c7fab106684a2fa17de\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-preview.1.20105.3\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2506","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2506)"},{"Id":"560690658","IsPullRequest":true,"CreatedAt":"2020-02-05T23:45:40","Actor":"dotnet-maestro[bot]","Number":"2505","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20200205.2\r\n- **Date Produced**: 2/5/2020 10:55 PM\r\n- **Commit**: 1d9457dc342b300cf4d428313d65bd6dd5e5bf2f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-preview.1.20105.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2505","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2505)"},{"Id":"560387892","IsPullRequest":true,"CreatedAt":"2020-02-05T14:10:41","Actor":"dotnet-maestro[bot]","Number":"2504","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20200205.1\r\n- **Date Produced**: 2/5/2020 1:32 PM\r\n- **Commit**: a288abd05fc3aff8094cc2fd42710b3fc15c3309\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-preview.1.20105.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2504","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2504)"},{"Id":"560372361","IsPullRequest":true,"CreatedAt":"2020-02-05T13:43:58","Actor":"dotnet-maestro[bot]","Number":"2503","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20200205.2\r\n- **Date Produced**: 2/5/2020 11:33 AM\r\n- **Commit**: d7dff3d4b790b797689de43627651aec398da142\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-preview.1.20105.2\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2503","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2503)"},{"Id":"560357899","IsPullRequest":true,"CreatedAt":"2020-02-05T13:27:43","Actor":"dotnet-maestro[bot]","Number":"2502","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 3a1d3bb6-c64d-406d-e8f4-08d648cf64cb\r\n- **Build**: 20200204.2\r\n- **Date Produced**: 2/5/2020 12:17 AM\r\n- **Commit**: 0b404cb7575c8addc5e10f3fac57e79c596db28e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20104.2\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20104.2\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2502","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2502)"},{"Id":"560104789","IsPullRequest":true,"CreatedAt":"2020-02-05T02:55:37","Actor":"dotnet-maestro[bot]","Number":"2501","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20200204.4\r\n- **Date Produced**: 2/5/2020 2:19 AM\r\n- **Commit**: bca48d0ce040ceaf0bee1d72c225269218095ebc\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-preview.1.20104.4\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2501","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2501)"},{"Id":"560100912","IsPullRequest":true,"CreatedAt":"2020-02-05T02:35:36","Actor":"dotnet-maestro[bot]","Number":"2500","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20200204.3\r\n- **Date Produced**: 2/5/2020 2:05 AM\r\n- **Commit**: 0e543f7b4a3313d807e6cce34717f9031c0aaf25\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-preview.1.20104.3\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2500","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2500)"},{"Id":"560070887","IsPullRequest":true,"CreatedAt":"2020-02-05T01:30:52","Actor":"dotnet-maestro[bot]","Number":"2499","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20200204.2\r\n- **Date Produced**: 2/5/2020 12:04 AM\r\n- **Commit**: 2bd77827f9376c4bd790d91a36c4f7c1740491ab\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-preview.1.20104.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2499","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2499)"},{"Id":"560037904","IsPullRequest":true,"CreatedAt":"2020-02-05T00:34:40","Actor":"rladuca","Number":"2498","RawContent":null,"Title":"Branding updates","State":"closed","Body":"Updating to Preview branding","Url":"https://github.com/dotnet/wpf/pull/2498","RelatedDescription":"Closed or merged PR \"Branding updates\" (#2498)"},{"Id":"559999897","IsPullRequest":true,"CreatedAt":"2020-02-04T22:05:39","Actor":"dotnet-maestro[bot]","Number":"2497","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20200204.1\r\n- **Date Produced**: 2/4/2020 9:17 PM\r\n- **Commit**: f50a5d7c4a72dfdadb3e6495ccafc81706a8c066\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-alpha.1.20104.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2497","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2497)"},{"Id":"559913961","IsPullRequest":false,"CreatedAt":"2020-02-04T18:56:49","Actor":"kaanlab","Number":"2496","RawContent":null,"Title":"Calendar. DisplayMode=\"Year\" blank","State":"open","Body":"* .NET Core Version: 3.1.100\r\n* Windows version: 1903\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n \r\n **Problem description:** Calendar is displayed as an empty square on the Form when you choose DisplayMode=\"Year\" in the calendar settings\r\n \r\n **Minimal repro:** `<Calendar DisplayMode=\"Year\" />`\r\n","Url":"https://github.com/dotnet/wpf/issues/2496","RelatedDescription":"Open issue \"Calendar. DisplayMode=\"Year\" blank\" (#2496)"},{"Id":"559715688","IsPullRequest":true,"CreatedAt":"2020-02-04T13:31:28","Actor":"dotnet-maestro[bot]","Number":"2495","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20200203.7\r\n- **Date Produced**: 2/4/2020 12:28 AM\r\n- **Commit**: 4f58d59655f362e7618181c5ae22338be390aeaf\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-alpha.1.20103.7\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2495","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2495)"},{"Id":"559705469","IsPullRequest":true,"CreatedAt":"2020-02-04T13:17:45","Actor":"dotnet-maestro[bot]","Number":"2494","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 3a1d3bb6-c64d-406d-e8f4-08d648cf64cb\r\n- **Build**: 20200203.5\r\n- **Date Produced**: 2/4/2020 3:04 AM\r\n- **Commit**: 27c8467294a4e64ac6642b4c12ca63495ff126c8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20103.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20103.5\r\n\r\n[marker]: <> (End:3a1d3bb6-c64d-406d-e8f4-08d648cf64cb)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2494","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#2494)"},{"Id":"558017525","IsPullRequest":false,"CreatedAt":"2020-02-01T11:38:40","Actor":"snikeguo","Number":"2488","RawContent":null,"Title":"suggest： script Language support","State":"closed","Body":"Suggest:\r\nMany people think that XAML is too verbose and inflexible （http://paulstovell.com/blog/six-years-of-wpf      china web site :https://www.zhihu.com/question/44666716  ）. Can you add a new \"UI language\" like QML (or TypeScript)?\r\nE.g:\r\nNow has a textblock, name = tb1\r\n1. His text propertyis: \"abcdegf:\" + scrollBar1.Value.toString ()\r\n2. His width property is: if tb1.text == \"abcdegf: 53\", his width is 30\r\nelse his width is 100.\r\n\r\nXAML:\r\n<TextBlock x:Name=\"tb1\"  Text=\"{Binding ElementName=scrollBar1, Path=Value，Convert=......}\"  width={Binding .......}/>\r\n\r\n\r\nQML or  other script:\r\nTextBlock\r\n{\r\n   name:tb1\r\n   text: “abcdegf :”+scrollBar1.Value.toString()\r\n   width:\r\n   {\r\n      if(tb1.Text==\"abcdegf: 53\")\r\n        return 30;\r\n      else\r\n        return 100;\r\n    }\r\n}\r\n---------------end--------\r\ntext: “abcdegf :”+scrollBar1.Value.toString()\r\nIt will generate C # code:  create a Binding instance that contains an anonymous method.like:\r\ntb1.SetValue ( TextBlock.TextProperty,   Binding(()=>\r\n{\r\n  “abcdegf :”+scrollBar1.Value.toString()\r\n});\r\n----------------------------\r\n width:\r\n   {\r\n      if(tb1.Text==\"abcdegf: 53\")\r\n        return 30;\r\n      else\r\n        return 100;\r\n    }\r\n\r\n  tb1.SetValue ( TextBlock.WidthProperty,   Binding(()=>\r\n{\r\n  “abcdegf :”+scrollBar1.Value.toString()\r\n});\r\n\r\n\r\nlike  this.......\r\n---------------------\r\nqml doc:   https://doc.qt.io/qt-5/qtqml-syntax-propertybinding.html\r\n","Url":"https://github.com/dotnet/wpf/issues/2488","RelatedDescription":"Closed issue \"suggest： script Language support\" (#2488)"},{"Id":"558475765","IsPullRequest":false,"CreatedAt":"2020-02-01T04:12:24","Actor":"ssc19940105","Number":"2493","RawContent":null,"Title":"The .Net Core WPF program UI errors","State":"open","Body":"* .NET Core Version: 3.1.1\r\n* Windows version: 10.0.18363\r\n*Graphics card:Geforce RTX 2070\r\n*Graphics driver:441.87\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?:No\r\n* Is this bug related specifically to tooling in Visual Studio ?:Xaml Designer\r\nThe .Net Core WPF program UI may display errors on some computers. UI elements disappear and are replaced by gray blocks.\r\n","Url":"https://github.com/dotnet/wpf/issues/2493","RelatedDescription":"Open issue \"The .Net Core WPF program UI errors\" (#2493)"},{"Id":"558391253","IsPullRequest":false,"CreatedAt":"2020-01-31T21:50:16","Actor":"vsfeedback","Number":"2492","RawContent":null,"Title":"Compilation error MC3064 when importing internal user control from signed class library","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/887201/compilation-error-mc3064-when-importing-internal-u.html)._\n\n---\nThe Wpf project fails to compile with the  error MC3064 when importing signed user control if its visibility set to internal.\n\nNote: The imported library has appropriate directive [InternalsVisibleTo()].\n\nSame control compiles without problem if library is not strongly signed (check attached project to reproduce problem).\n\nThe attached project WpfClientApp will not compile with error:\n1&gt;------ Build started: Project: WpfClientApp, Configuration: Debug Any CPU ------\n1&gt;C:\\Users\\aza\\source\\repos\\WpfClientApp\\MainWindow.xaml(12,10): error MC3064: Only public or internal classes can be used within markup. 'ButtonControl' type is not public or internal.\n\nIf you remove signing of the assembly and the application (Project properties-&gt;Signing tab-&gt;uncheck  &quot;Sign the assembly&quot; and remove PublicKey parameter from the ControlsLibrary\\Properties\\AssemblyInfo.cs), project will compile and run successfully.\n\nThis makes it impossible to distincts controls for public and internal use in the community controls library.\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 1/16/2020, 07:04 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### azatvornitskiy on 1/19/2020, 11:35 PM: \n\nThank you, will be witing.\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/2492","RelatedDescription":"Open issue \"Compilation error MC3064 when importing internal user control from signed class library\" (#2492)"},{"Id":"558390742","IsPullRequest":false,"CreatedAt":"2020-01-31T21:49:07","Actor":"vsfeedback","Number":"2491","RawContent":null,"Title":"Touch bug/issue with ShowDialog and TextBox","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/890778/touch-bugissue-with-showdialog-and-textbox.html)._\n\n---\n<p>Hello I'm developing a WPF application to be used with touch devices (Running Win 10 full).</p> <p>There is one scenario where the touch stops responding as expected. <br>If I have a TextBox and open a dialog (ShowDialog()) then the dialog won't handle any touch and will ignore the user:</p><p>A) 1 touch ignored - if using single touch driver.</p> <p>B) 10 touches ignored - if using multi touch driver.</p> <p>And after that it starts responding normally again.</p> <p>I have attached a video show casing this issue and also a test project so you can easily replicate (using Windows Simulator w/ touch or a touch monitor)<br>In the video you can see that when opening the dialog through a button it responds as expected but if opened through a TextBox it will then have a touch issue.</p> <p><a href=\"https://developercommunityapi.westus.cloudapp.azure.com/storage/attachments/114846-textbox-showdialog-touch-issue.mp4\">textbox-showdialog-touch-issue.mp4</a></p><p><a href=\"https://developercommunity.visualstudio.com/storage/attachments/114847-ms-wpf-testtouchdialogs.zip\">ms-wpf-testtouchdialogs.zip</a></p><p></p><p>The code being used is just this:</p><pre>        private void TextBox_PreviewMouseDown(object sender, System.Windows.Input.MouseButtonEventArgs e)\n        {\n            // This cause touch issues within the dialog.\n            // (1 touch ignored w/ single touch monitor/driver - 10 touches ignored w/ multi touch monitor/driver)\n            new DialogWindow(). ShowDialog();\n        }\n\nprivate void Button_Click(object sender, RoutedEventArgs e)\n        {\n            new DialogWindow(). ShowDialog();\n        }\n\n</pre><p></p><p>Windows 10<br>VS 2019<br>.NET 4.6.1 (but it was also tested with 4.8, exactly same issue)</p>\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 1/20/2020, 06:41 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 1/30/2020, 01:12 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/wpf/issues/2491","RelatedDescription":"Open issue \"Touch bug/issue with ShowDialog and TextBox\" (#2491)"},{"Id":"558389007","IsPullRequest":false,"CreatedAt":"2020-01-31T21:45:12","Actor":"pjchristmas","Number":"2490","RawContent":null,"Title":"WPF Tree View Freeze / Hang","State":"open","Body":"* .NET Framework 4.8 with [latest patch](https://support.microsoft.com/en-us/help/4534130/kb4534130-cumulative-update-for-net-framework) that claimed to fix similar sounding bug.\r\n* Windows version: (`winver`): Win10 1803\r\n\r\n **Problem description:**\r\n Identical to issue [1962](https://github.com/dotnet/wpf/issues/1962)\r\nbut not fixed by [update listed there](https://support.microsoft.com/en-us/help/4534130/kb4534130-cumulative-update-for-net-framework).\r\nWe have a virtualized Tree View with up to 30k items. Going to the bottom and scrolling up 51 times (or using scroll wheel) will cause it to freeze. If I leave it up for an hour it will usually come back(or maybe it's just logging out and back in that kicks it out of the layout loop)\r\nWe've tried changing the virtualization settings (ScrollUnit, VirtualizationCacheLength, VirtualizationCacheLengthUnit and VirtualizationMode.Recycling) but none had any effect.\r\n\r\n **Minimal repro:**\r\nAttached app, just modified the one from previous posting and added reproducing data.\r\n[HangTest.zip](https://github.com/dotnet/wpf/files/4154025/HangTest.zip)\r\n\r\nLooking for a hero @SamBent ","Url":"https://github.com/dotnet/wpf/issues/2490","RelatedDescription":"Open issue \"WPF Tree View Freeze / Hang\" (#2490)"},{"Id":"557807694","IsPullRequest":true,"CreatedAt":"2020-01-30T22:58:56","Actor":"vatsan-madhavan","Number":"2487","RawContent":null,"Title":"[release/3.1] Unescape PresentationBuildTasks.dll paths containing special characters","State":"open","Body":"Fixes #2415 \r\n\r\n### Description \r\n\r\n.NET Core 3.1 SDK installed in paths containing special characters like `'(` fails to build WPF projects. This affects the default WOW64 installation - i.e., x86 MSI installation on x64 system, that typically installs under `%SystemDrive%\\Program Files (x86)\\dotnet`\r\n\r\nThe builds fail with the following error: \r\n\r\n```\r\nc:\\Program Files (x86)\\dotnet\\sdk\\3.1.101\\Sdks\\Microsoft.NET.Sdk.WindowsDesktop\\targets\\Microsoft.WinFX.targets(225,9): \r\nerror MSB4062: The \"Microsoft.Build.Tasks.Windows.MarkupCompilePass1\" task could not be loaded from\r\nthe assembly c:\\Program Files %28x86%29\\dotnet\\sdk\\3.1.101\\Sdks\\Microsoft.NET.Sdk.WindowsDesktop\\tools\\netcoreapp2.1\\PresentationBuildTasks.dll. \r\nCould not load file or assembly 'c:\\Program Files %28x86%29\\dotnet\\sdk\\3.1.101\\Sdks\\Microsoft.NET.Sdk.WindowsDesktop\\tools\\netcoreapp2.1\\PresentationBuildTasks.dll'.\r\nThe system cannot find the path specified. Confirm that the <UsingTask> declaration is correct, that the assembly\r\nand all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask. \r\n```\r\n\r\nWhen the SDK is installed in a path containing special characters, for e.g., under `C:\\Program Files (x86)\\dotnet` (the special characters here being `{'(', ')'}`), calling an MSBuild property function like `$([System.IO.Path]::GetFullPath())` on `$(MSBuildThisFileDirectory)` will result in MSBuild escaping any special characters that are returned.\r\n\r\nNow, this is what the [documentation ](https://docs.microsoft.com/en-us/visualstudio/msbuild/property-functions?view=vs-2019)says about using property functions:\r\n\r\n>String values returned from property functions have[ special characters](https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-special-characters?view=vs-2019) escaped. If you want the value to be treated as though it was put directly in the project file, use `$([MSBuild]::Unescape())` to unescape the special characters.\r\n>...\r\n>In static property functions, you can use any static method or property of these system classes:\r\n> ```\r\n> System.Byte\r\n>...\r\n> System.IO.Path\r\n>...\r\n> Microsoft.Build.Utilities.ToolLocationHelper\r\n> ```\r\n\r\nWhen such an escaping happens, characters like `(` get translated to`%28` etc. When `UsingTask` encounters a value of `$(_PresentationBuildTasksAssembly)` containing encoded characters, it fails.\r\n\r\nWe must unescape these characters by calling `$([MSBuild]::Unescape())` to ensure that `UsingTask` will not fail.\r\n\r\n### Customer Impact \r\n\r\nDevelopers who install x86 SDK on x64 OS are not able to build WPF apps using 3.1.x SDK. \r\n\r\n### Regression \r\n\r\nThis was a regression introduced by #2075, [[release/3.1] Use correct PresentationBuildTasks.dll for VS and MSBuild builds](#2075). \r\n\r\nWe did not catch this during development and testing early on since testing was done using SDK's installed under `%appdata%`, `%temp%` etc., which typically didn't have special characters that are escaped by MSBuild. \r\n\r\nWe are still trying to understand how we failed to catch this in end-to-end testing. The current theory is that the x86 SDK was likely tested directly on an x86 OS installation where this problem would not have manifested itself (since the default install location would have been `%SystemDrive%\\Program Files`, and would not have involved WOW64). \r\n\r\nWe are taking steps to ensure that this scenario is covered in testing. \r\n\r\n### Risk \r\n\r\nLow. \r\n\r\n- The change is being tested by building a corpus of WPF applications on different configurations (x86 SDK on x86 OS, x86 SDK on x64 OS, x64 SDK on x64 OS) x (simple installation path, installation paths with special chars). \r\n- The fix is simple and easy to review for correctness. ","Url":"https://github.com/dotnet/wpf/pull/2487","RelatedDescription":"Open PR \"[release/3.1] Unescape PresentationBuildTasks.dll paths containing special characters\" (#2487)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-02-07T05:30:54.6109532Z","RunDurationInMilliseconds":906}