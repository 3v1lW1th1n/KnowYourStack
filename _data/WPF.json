{"Data":{"GitHub":{"Issues":[{"Id":"596229638","IsPullRequest":true,"CreatedAt":"2020-04-08T00:28:59","Actor":"dotnet-maestro[bot]","Number":"2853","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20200407.1\r\n- **Date Produced**: 4/8/2020 12:09 AM\r\n- **Commit**: a09958989bfa85b490fbc5621b2f14842569d01c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-preview.4.20207.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 5.0.0-preview.4.20205.13 (parent: Microsoft.Private.Winforms)\r\n- **System.CodeDom** -> 5.0.0-preview.4.20205.13 (parent: Microsoft.Private.Winforms)\r\n- **System.Configuration.ConfigurationManager** -> 5.0.0-preview.4.20205.13 (parent: Microsoft.Private.Winforms)\r\n- **System.Diagnostics.EventLog** -> 5.0.0-preview.4.20205.13 (parent: Microsoft.Private.Winforms)\r\n- **System.DirectoryServices** -> 5.0.0-preview.4.20205.13 (parent: Microsoft.Private.Winforms)\r\n- **System.Drawing.Common** -> 5.0.0-preview.4.20205.13 (parent: Microsoft.Private.Winforms)\r\n- **System.Reflection.Emit** -> 5.0.0-alpha.1.19563.6 (parent: Microsoft.Private.Winforms)\r\n- **System.Reflection.MetadataLoadContext** -> 5.0.0-preview.4.20205.13 (parent: Microsoft.Private.Winforms)\r\n- **System.Security.AccessControl** -> 5.0.0-preview.4.20205.13 (parent: Microsoft.Private.Winforms)\r\n- **System.Security.Cryptography.Xml** -> 5.0.0-preview.4.20205.13 (parent: Microsoft.Private.Winforms)\r\n- **System.Security.Permissions** -> 5.0.0-preview.4.20205.13 (parent: Microsoft.Private.Winforms)\r\n- **System.Security.Principal.Windows** -> 5.0.0-preview.4.20205.13 (parent: Microsoft.Private.Winforms)\r\n- **System.Windows.Extensions** -> 5.0.0-preview.4.20205.13 (parent: Microsoft.Private.Winforms)\r\n- **Microsoft.NETCore.Platforms** -> 5.0.0-preview.4.20205.13 (parent: Microsoft.Private.Winforms)\r\n- **System.IO.Packaging** -> 5.0.0-preview.4.20205.13 (parent: Microsoft.Private.Winforms)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 5.0.0-alpha1.19562.1 (parent: Microsoft.Private.Winforms)\r\n- **Microsoft.NETCore.ILDAsm** -> 5.0.0-preview.4.20205.13 (parent: Microsoft.Private.Winforms)\r\n- **Microsoft.NETCore.ILAsm** -> 5.0.0-preview.4.20205.13 (parent: Microsoft.Private.Winforms)\r\n- **System.Resources.Extensions** -> 5.0.0-preview.4.20205.13 (parent: Microsoft.Private.Winforms)\r\n- **Microsoft.NETCore.App.Internal** -> 5.0.0-preview.4.20205.13 (parent: Microsoft.Private.Winforms)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2853","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/winforms\" (#2853)"},{"Id":"596140234","IsPullRequest":true,"CreatedAt":"2020-04-07T23:45:49","Actor":"rladuca","Number":"2851","RawContent":null,"Title":"Ensure PimcContexts are eagerly release when no longer needed","State":"closed","Body":"Fixes #2850 \r\n\r\nI've stress tested this with 100s of windows across multiple threads coming up and going down randomly.  This caused several PenThreads to be allocated as well.  While this was running (for about 10 minutes) I was plugging and unplugging devices and testing that they still received input.  All seemed to be fine.\r\n\r\nWe also have a full test pass with this on .NET Framework 4.8, but the lower risk is to change this in .NET 5 as there is a reasonable workaround (see the issue).","Url":"https://github.com/dotnet/wpf/pull/2851","RelatedDescription":"Closed or merged PR \"Ensure PimcContexts are eagerly release when no longer needed\" (#2851)"},{"Id":"596135569","IsPullRequest":false,"CreatedAt":"2020-04-07T23:45:49","Actor":"rladuca","Number":"2850","RawContent":null,"Title":"Eager Release of WPF Touch/Stylus COM Objects","State":"closed","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`) All\r\n* Windows version: (`winver`) All\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? If yes, please file the issue via the instructions [here](https://docs.microsoft.com/visualstudio/ide/how-to-report-a-problem-with-visual-studio?view=vs-2019).\r\n* Security issues and bugs should be reported privately, learn more via our [responsible disclosure guidelines](https://github.com/dotnet/wpf/blob/master/README.md#reporting-security-issues-and-security-bugs).\r\n \r\n **Problem description:**\r\n When using top-level windows in WPF, unplugging a stylus or touch device can result in temporary loss of touch or stylus input from another device.  This occurs because WPF uses COM objects (`PimcContext`) that wrap COM objects from `WISP`.  When a tablet/stylus is disconnected or a Window is closed, WPF removes these `PimcContexts` from a list in the `PenThread`.  The RCWs are then queued for garbage collection.\r\n\r\nIf a `PimcContext` corresponds with a top-level window, there is a corresponding WISP COM object underneath it that has a top-level hook within WISP (these are not OS input hook, but WISP specific creations).  These hooks are associated with specific HWNDs.  Since the `PimcContext` COM object is still awaiting collection, any tablet/stylus input from a device lower in the hook-chain will now no longer receive input.\r\n\r\nThe solution is to eagerly release the COM object when we are sure we no longer need it.  You can see this code [here](https://github.com/dotnet/wpf/blob/83330faa6104f7e3af8caff1e7a3c5300b1755fc/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Input/Stylus/Wisp/PenThreadWorker.cs#L1134), but conditioned to only run on Windows 7.  This was due to confusion and a mistake that I made when investigating a broader COM issue that WPF eventually worked around (the fix for this is spread widely through the code, but see [here ](https://github.com/dotnet/wpf/blob/83330faa6104f7e3af8caff1e7a3c5300b1755fc/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Input/Stylus/Wisp/PenThreadWorker.cs#L1126)for a very brief comment on it).  There was, in the end, no need for this OS conditional to fix the overall issue and it opened up Win8+ to the same top-level window bugs it originally fixed.\r\n\r\nWe need to remove that OS check so that we always eagerly release `PimcContexts` that we no longer need.\r\n\r\n**Work-around**\r\nYou can force garbage collection whenever a tablet/stylus is removed by doing something like the following:\r\n\r\n```\r\n static MainWindow()\r\n {\r\n     ComponentDispatcher.ThreadFilterMessage += ComponentDispatcher_ThreadFilterMessage;\r\n }\r\n\r\n private const int WM_TABLETDELETED = 0x02C9;\r\n\r\n private static void ComponentDispatcher_ThreadFilterMessage(ref MSG msg, ref bool handled)\r\n {\r\n     if (msg.message == WM_TABLETDELETED)\r\n     {\r\n         System.Windows.Threading.Dispatcher.CurrentDispatcher.BeginInvoke(new Action(() => { GC.Collect(); GC.WaitForPendingFinalizers(); }), System.Windows.Threading.DispatcherPriority.ApplicationIdle);\r\n     }\r\n }\r\n```\r\n\r\nThis should clean up the pending collection of PimcContexts and free up the hook in WISP.","Url":"https://github.com/dotnet/wpf/issues/2850","RelatedDescription":"Closed issue \"Eager Release of WPF Touch/Stylus COM Objects\" (#2850)"},{"Id":"595868219","IsPullRequest":true,"CreatedAt":"2020-04-07T14:03:32","Actor":"dotnet-maestro[bot]","Number":"2849","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20200407.4\r\n- **Date Produced**: 4/7/2020 1:04 PM\r\n- **Commit**: 740946ae5725713ba3ccdd3c16e4707b16b31ba0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-preview.4.20207.4\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2849","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2849)"},{"Id":"595457595","IsPullRequest":false,"CreatedAt":"2020-04-06T22:04:30","Actor":"DigitalPilgrim","Number":"2848","RawContent":null,"Title":"WPF and CLR Net Core as part of C++ and with all DLL for Net Core. How to?","State":"open","Body":"I created test project where is used WPF Core as DLL with CLR (C++/CLI) Core DLL in console C++ application. It runs ok until I tested it in second pc. I realized, that I need installed VC Runtime and NET Core \"runtime\" on second PC. \r\nAs I searched on documentation, NET Core can be deployed as self-contained throught publish button. Problem is NET Core doesn't have that option and WPF Core as ClassLibrary doesn't produce anything except some nupkg. It is strange because I don't select option to publish it as nupkg.\r\n\r\nQuestion is, can be C++ application which use WPF DLL and CLR Core DLL as self-contained? If yes, how? I mean, user doesn't need install any NET Core to run my app. I hope it is possible, because this is main advantage (NET Core) I think.","Url":"https://github.com/dotnet/wpf/issues/2848","RelatedDescription":"Open issue \"WPF and CLR Net Core as part of C++ and with all DLL for Net Core. How to?\" (#2848)"},{"Id":"595423608","IsPullRequest":false,"CreatedAt":"2020-04-06T20:58:52","Actor":"thansen24","Number":"2847","RawContent":null,"Title":"DataBindEngine.CrossThreadThreshold const is ambiguous with code comment","State":"open","Body":"the internal constant DataBindEngine.CrossThreadThreshold is defined as:\r\n\r\n`internal const int CrossThreadThreshold = 50000;   // 50 msec`\r\n\r\nThis const is used in places that compare ticks, so 50000 is actually 5 milliseconds, not 50 as the comment suggests.  I'm happy to push up a fix for this, either the value of the const to reflect 50 msec or the comment to reflect that the value is 5 msec, but it's unclear exactly what the intent is here?","Url":"https://github.com/dotnet/wpf/issues/2847","RelatedDescription":"Open issue \"DataBindEngine.CrossThreadThreshold const is ambiguous with code comment\" (#2847)"},{"Id":"595111623","IsPullRequest":true,"CreatedAt":"2020-04-06T13:42:25","Actor":"dotnet-maestro[bot]","Number":"2846","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20200406.4\r\n- **Date Produced**: 4/6/2020 1:03 PM\r\n- **Commit**: 9a7b18ab030777749ecc3e5f73def266f9617981\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-preview.4.20206.4\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2846","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2846)"},{"Id":"594440062","IsPullRequest":true,"CreatedAt":"2020-04-05T13:26:03","Actor":"dotnet-maestro[bot]","Number":"2845","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20200405.3\r\n- **Date Produced**: 4/5/2020 12:38 PM\r\n- **Commit**: 61aaa8bb241614d5aadac2ebe3a7fa8fc073bc1f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-preview.4.20205.3\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2845","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2845)"},{"Id":"594338748","IsPullRequest":false,"CreatedAt":"2020-04-05T08:51:19","Actor":"TruePluto","Number":"2844","RawContent":null,"Title":"Alias for Grid‘s RowDefinition and ColumnDefinition","State":"open","Body":"I don't know if there is a way to make a alias for Grid‘s cell.  But I want to how to implement the following feature:\r\n```\r\n    <Grid x:Name=\"OuterGird\">\r\n        <Grid.ColumnDefinitions>\r\n            <ColumnDefinition Width=\"Auto\" alias=\"id\"/>\r\n            <ColumnDefinition Width=\"*\" alias=\"name\"/>\r\n            <ColumnDefinition Width=\"Auto\" alias=\"birthday\"/>\r\n        </Grid.ColumnDefinitions>\r\n        <Grid.RowDefinitions>\r\n            <RowDefinition Height=\"auto\" alias=\"title\"/>\r\n            <RowDefinition Height=\"auto\" alias=\"Address Bar\"/>\r\n            <RowDefinition Height=\"auto\" alias=\"document \"/>\r\n            <RowDefinition Height=\"auto\" alias=\"status bar \"/>\r\n        </Grid.RowDefinitions>\r\n\r\n        <Grid x:Name=\"InnerGrid\" Grid.Column=\"id\" Grid.Row=\"title\"/>\r\n        <TextBlock x:Name=\"Address\" Grid.Column=\"id\" Grid.Row=\"Address Bar\"/>\r\n        ...\r\n    </Grid>\r\n```\r\nso when I Change the OuterGrid' columns defintion or rows difinition I don’t need to change the InnerGrid's properties of  Grid.Column or Grid.Row\r\nThank you for your attention","Url":"https://github.com/dotnet/wpf/issues/2844","RelatedDescription":"Open issue \"Alias for Grid‘s RowDefinition and ColumnDefinition\" (#2844)"},{"Id":"594214548","IsPullRequest":true,"CreatedAt":"2020-04-05T02:14:20","Actor":"lindexi","Number":"2843","RawContent":null,"Title":"Using array empty to replace create an empty array","State":"open","Body":"","Url":"https://github.com/dotnet/wpf/pull/2843","RelatedDescription":"Open PR \"Using array empty to replace create an empty array\" (#2843)"},{"Id":"594207487","IsPullRequest":false,"CreatedAt":"2020-04-05T01:52:56","Actor":"vatsan-madhavan","Number":"2842","RawContent":null,"Title":"Make `$(Architecture)` initialization resilient against pre-set values in `$env`","State":"open","Body":"See https://github.com/cmderdev/cmder/issues/2290 for details. \r\n\r\n> I was building [dotnet/wpf](https://github.com/dotnet/wpf) just now and noticed that it had trouble building correctly.\r\n> \r\n> I debugged it down to [these lines](https://github.com/dotnet/wpf/blob/878a6b748b66c6dc464dd50753fff5e5a2e6acdb/eng/WpfArcadeSdk/tools/Wpf.Cpp.props#L19-L21) that fail to initialize the MSBuild property `$(Architecture)` correctly (it's initialized to `64` instead of `x64`), which in turn lead to my (dev) build failures in **dotnet/wpf**.\r\n> \r\n> ```\r\n>     <Architecture Condition=\"'$(Platform)'=='x64' or '$(Platform)'=='x86' or '$(Platform)'=='arm' or '$(Platform)'=='arm64'\">$(Platform)</Architecture>\r\n>     <Architecture Condition=\"'$(Platform)'=='Win32'\">x86</Architecture>\r\n>     <Architecture Condition=\"'$(Architecture)'==''\">x64</Architecture>\r\n> ```\r\n> \r\n\r\n**cmder** sets `$env:architecture` to values like `32`, `64`, which confuses this logic. \r\n\r\nhttps://github.com/cmderdev/cmder/blob/1071221468f2f75f2b63e482deab69c9ca986219/vendor/init.bat#L125-L132\r\n```\r\n:: Pick right version of clink\r\nif \"%PROCESSOR_ARCHITECTURE%\"==\"x86\" (\r\n    set architecture=86\r\n    set architecture_bits=32\r\n) else (\r\n    set architecture=64\r\n    set architecture_bits=64\r\n)\r\n```\r\n\r\nThis only affects dev-builds, and only on some alternate-consoles. Still the fix is trivial and we can make this logic a bit resilient. ","Url":"https://github.com/dotnet/wpf/issues/2842","RelatedDescription":"Open issue \"Make `$(Architecture)` initialization resilient against pre-set values in `$env`\" (#2842)"},{"Id":"594206065","IsPullRequest":true,"CreatedAt":"2020-04-05T01:47:52","Actor":"lindexi","Number":"2841","RawContent":null,"Title":"Fix spelling errors in code comments","State":"open","Body":"","Url":"https://github.com/dotnet/wpf/pull/2841","RelatedDescription":"Open PR \"Fix spelling errors in code comments\" (#2841)"},{"Id":"593846574","IsPullRequest":true,"CreatedAt":"2020-04-04T13:37:49","Actor":"dotnet-maestro[bot]","Number":"2840","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20200404.3\r\n- **Date Produced**: 4/4/2020 12:37 PM\r\n- **Commit**: 24cbc38ab20edc13dd0f69ed5e2b4813011cf380\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-preview.4.20204.3\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2840","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2840)"},{"Id":"593786946","IsPullRequest":true,"CreatedAt":"2020-04-04T09:50:52","Actor":"lindexi","Number":"2839","RawContent":null,"Title":"Using readonly struct","State":"open","Body":"See: [readonly keyword - C# Reference | Microsoft Docs](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/readonly )\r\n\r\n[Readonly references - C# 7.2 specification proposals | Microsoft Docs](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-7.2/readonly-ref )","Url":"https://github.com/dotnet/wpf/pull/2839","RelatedDescription":"Open PR \"Using readonly struct\" (#2839)"},{"Id":"593368033","IsPullRequest":true,"CreatedAt":"2020-04-03T14:50:42","Actor":"dotnet-maestro[bot]","Number":"2838","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20200403.4\r\n- **Date Produced**: 4/3/2020 12:39 PM\r\n- **Commit**: 60fea80248daf05da089122d3ad386fd09f784e7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-preview.4.20203.4\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2838","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2838)"},{"Id":"596165303","IsPullRequest":false,"CreatedAt":"2020-04-03T13:08:04","Actor":"DaveInCaz","Number":"2852","RawContent":null,"Title":" System.Windows.Media.Rotate() does not state units of measure of its parameter","State":"open","Body":"The parameter `angle` needs to be in degrees but this is not stated in the tooltip in VS nor in the comments when you view metadata for the method.\r\n\r\n\r\nHere's what's in the metadata for `Rotate()`:\r\n\r\n        //\r\n        // Summary:\r\n        //     Applies a rotation of the specified angle about the origin of this System.Windows.Media.Matrix\r\n        //     structure.\r\n        //\r\n        // Parameters:\r\n        //   angle:\r\n        //     The angle of rotation.\r\n        public void Rotate(double angle);\r\n\r\nIn contrast `RotateAt()` does state the units:\r\n\r\n        //\r\n        // Summary:\r\n        //     Rotates this matrix about the specified point.\r\n        //\r\n        // Parameters:\r\n        //   angle:\r\n        //     The angle, in degrees, by which to rotate this matrix.\r\n        ...\r\n        public void RotateAt(double angle, double centerX, double centerY);\r\n\r\nThanks","Url":"https://github.com/dotnet/wpf/issues/2852","RelatedDescription":"Open issue \" System.Windows.Media.Rotate() does not state units of measure of its parameter\" (#2852)"},{"Id":"593359150","IsPullRequest":true,"CreatedAt":"2020-04-03T12:49:44","Actor":"v-chmart","Number":"2837","RawContent":null,"Title":"LOC CHECKIN | dotnet/wpf | 20200403","State":"open","Body":"Localization update.","Url":"https://github.com/dotnet/wpf/pull/2837","RelatedDescription":"Open PR \"LOC CHECKIN | dotnet/wpf | 20200403\" (#2837)"},{"Id":"592690182","IsPullRequest":true,"CreatedAt":"2020-04-02T16:12:51","Actor":"dotnet-maestro[bot]","Number":"2836","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20200402.4\r\n- **Date Produced**: 4/2/2020 2:08 PM\r\n- **Commit**: cc010e1ea661da22b3a40f1df1d70e9ddba41cd6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-preview.4.20202.4\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2836","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2836)"},{"Id":"592637710","IsPullRequest":true,"CreatedAt":"2020-04-02T14:46:44","Actor":"dotnet-maestro[bot]","Number":"2835","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20200402.3\r\n- **Date Produced**: 4/2/2020 1:07 PM\r\n- **Commit**: 998a35b1bf9635fc95f178fc302d88f79717b72e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-preview.4.20202.3\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2835","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2835)"},{"Id":"592389819","IsPullRequest":true,"CreatedAt":"2020-04-02T06:58:30","Actor":"dotnet-maestro[bot]","Number":"2834","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20200401.2\r\n- **Date Produced**: 4/2/2020 6:09 AM\r\n- **Commit**: b45c16e905aadce7bb61945395cd0751680f9781\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-preview.4.20201.2\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2834","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2834)"},{"Id":"592381245","IsPullRequest":true,"CreatedAt":"2020-04-02T06:26:55","Actor":"dotnet-maestro[bot]","Number":"2833","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20200401.3\r\n- **Date Produced**: 4/2/2020 5:52 AM\r\n- **Commit**: 69f0480456b5273b6acbbd3e8393ca8432420fd8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-preview.4.20201.3\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2833","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2833)"},{"Id":"592279363","IsPullRequest":true,"CreatedAt":"2020-04-02T00:49:21","Actor":"dotnet-maestro[bot]","Number":"2832","RawContent":null,"Title":"[master] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: 256c8be3-de58-46f5-d219-08d6ba11f126\r\n- **Build**: 20200401.1\r\n- **Date Produced**: 4/2/2020 12:02 AM\r\n- **Commit**: f7bfd6492fb3c14599e088c2c81bb58fea0625e5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-preview.4.20201.1\r\n\r\n[marker]: <> (End:256c8be3-de58-46f5-d219-08d6ba11f126)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2832","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/winforms\" (#2832)"},{"Id":"592226404","IsPullRequest":false,"CreatedAt":"2020-04-01T21:53:38","Actor":"koljaka","Number":"2831","RawContent":null,"Title":"WPF NetCore 3.1 Application crashes with StackoOverflow at Runtime","State":"open","Body":"* .NET Core Version: 3.1.200\r\n* Windows version: 1909 (OS Build 18363.720)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? - No... it a runtime issue\r\n* Security issues and bugs should be reported privately, learn more via our [responsible disclosure guidelines](https://github.com/dotnet/wpf/blob/master/README.md#reporting-security-issues-and-security-bugs).\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:** \r\nAll details are in VS Feedback : https://developercommunity.visualstudio.com/content/problem/964428/40396-designer-process-terminated-unexpectedly.html\r\n\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nApplication crash \r\n\r\n **Expected behavior:**\r\n NO crash\r\n\r\n **Minimal repro:**","Url":"https://github.com/dotnet/wpf/issues/2831","RelatedDescription":"Open issue \"WPF NetCore 3.1 Application crashes with StackoOverflow at Runtime\" (#2831)"},{"Id":"591981081","IsPullRequest":true,"CreatedAt":"2020-04-01T15:26:45","Actor":"dotnet-maestro[bot]","Number":"2830","RawContent":null,"Title":"[release/5.0-preview3] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a1c0e6f8-e3d6-46b7-fcf9-08d7d0f045ee)\r\n## From https://github.com/dotnet/winforms\r\n- **Subscription**: a1c0e6f8-e3d6-46b7-fcf9-08d7d0f045ee\r\n- **Build**: 20200331.1\r\n- **Date Produced**: 3/31/2020 6:47 PM\r\n- **Commit**: 17d421f36541633c21682b297ca30740d8b539e1\r\n- **Branch**: refs/heads/release/5.0-preview3\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 5.0.0-preview.3.20181.1\r\n\r\n[marker]: <> (End:a1c0e6f8-e3d6-46b7-fcf9-08d7d0f045ee)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2830","RelatedDescription":"Closed or merged PR \"[release/5.0-preview3] Update dependencies from dotnet/winforms\" (#2830)"},{"Id":"591916174","IsPullRequest":true,"CreatedAt":"2020-04-01T13:43:08","Actor":"dotnet-maestro[bot]","Number":"2829","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20200401.2\r\n- **Date Produced**: 4/1/2020 1:03 PM\r\n- **Commit**: 87e7cf0981a5ba515a0e487e038bb589dc7ecf23\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-preview.4.20201.2\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2829","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2829)"},{"Id":"591604210","IsPullRequest":false,"CreatedAt":"2020-04-01T04:03:27","Actor":"orrindeng","Number":"2828","RawContent":null,"Title":"WebBrowser crashes with low probability","State":"open","Body":"**OS Version**: Windows 10 Enterprise, 64-bit, build 18363\r\n**.NET Framework**: 4.7.2\r\n\r\n**What we do**:\r\nWe use a WebBrowser control in our application. The WebBrowser source is a local HTML file. We call WebBrowser.InvokeScript method to generate a canvas on the html page and get the canvas base64 data. Then we use the base64 data to create a bitmap image on WPF application and show it for our end-user. \r\n\r\n**What happens**:\r\nIt behaves well at most time. But our application **crashes with low probability**. We found the call stack in Windows Events. \r\n`Application: Forguncy.exe\r\nFramework Version: v4.0.30319\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: exception code c0000005, exception address 00007FF936B14B36\r\nStack:\r\n   at MS.Win32.UnsafeNativeMethods+IDispatchEx.InvokeEx(Int32, Int32, Int32, DISPPARAMS, System.Object ByRef, EXCEPINFO, IServiceProvider)\r\n   at MS.Win32.UnsafeNativeMethods+IDispatchEx.InvokeEx(Int32, Int32, Int32, DISPPARAMS, System.Object ByRef, EXCEPINFO, IServiceProvider)\r\n   at System.Windows.Controls.WebBrowser.InvokeScript(System.String, System.Object[])\r\n   at Forguncy.Common.ListViewPreviewer.InvokeScript(System.String, System.String)\r\n   at Forguncy.Common.ListViewPreviewer+<>c__DisplayClass17_1.<GetListViewPreviewResult>b__0()\r\n   at System.Windows.Threading.DispatcherOperation.InvokeDelegateCore()\r\n   at System.Windows.Threading.DispatcherOperation.InvokeImpl()\r\n   at MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at MS.Internal.CulturePreservingExecutionContext.Run(MS.Internal.CulturePreservingExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Windows.Threading.DispatcherOperation.Invoke()\r\n   at System.Windows.Threading.Dispatcher.ProcessQueue()\r\n   at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef)\r\n   at MS.Win32.HwndWrapper.WndProc(IntPtr, Int32, IntPtr, IntPtr, Boolean ByRef)\r\n   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(System.Object)\r\n   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate, System.Object, Int32)\r\n   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(System.Object, System.Delegate, System.Object, Int32, System.Delegate)\r\n   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(System.Windows.Threading.DispatcherPriority, System.TimeSpan, System.Delegate, System.Object, Int32)\r\n   at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr, Int32, IntPtr, IntPtr)\r\n   at MS.Win32.UnsafeNativeMethods.DispatchMessage(System.Windows.Interop.MSG ByRef)\r\n   at MS.Win32.UnsafeNativeMethods.DispatchMessage(System.Windows.Interop.MSG ByRef)\r\n   at System.Windows.Threading.Dispatcher.PushFrameImpl(System.Windows.Threading.DispatcherFrame)\r\n   at System.Windows.Application.RunDispatcher(System.Object)\r\n   at System.Windows.Application.RunInternal(System.Windows.Window)\r\n   at Forguncy.Program.InitializeMain(System.Action, Boolean)\r\n   at Forguncy.Program.Main(System.String[])`\r\n\r\nThe exception will make our application crashes. So could you help me to solve it?","Url":"https://github.com/dotnet/wpf/issues/2828","RelatedDescription":"Open issue \"WebBrowser crashes with low probability\" (#2828)"},{"Id":"591287326","IsPullRequest":true,"CreatedAt":"2020-04-01T02:43:55","Actor":"dotnet-maestro[bot]","Number":"2826","RawContent":null,"Title":"[release/5.0-preview3] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3e19b39a-03cd-4c7b-ed9f-08d7d0ee12d3)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 3e19b39a-03cd-4c7b-ed9f-08d7d0ee12d3\r\n- **Build**: 20200330.5\r\n- **Date Produced**: 3/30/2020 5:56 PM\r\n- **Commit**: 09bb9d929120b402348c9a0e9c8c951e824059aa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.20180.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.20180.5\r\n\r\n[marker]: <> (End:3e19b39a-03cd-4c7b-ed9f-08d7d0ee12d3)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2826","RelatedDescription":"Closed or merged PR \"[release/5.0-preview3] Update dependencies from dotnet/arcade\" (#2826)"},{"Id":"591292875","IsPullRequest":true,"CreatedAt":"2020-03-31T18:13:48","Actor":"dotnet-maestro[bot]","Number":"2827","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20200331.5\r\n- **Date Produced**: 3/31/2020 5:10 PM\r\n- **Commit**: 6205b66efa6d83a6aff3d2a0baf4ede763991980\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-preview.4.20181.5\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2827","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2827)"},{"Id":"591134746","IsPullRequest":true,"CreatedAt":"2020-03-31T14:25:44","Actor":"dotnet-maestro[bot]","Number":"2825","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20200331.4\r\n- **Date Produced**: 3/31/2020 1:34 PM\r\n- **Commit**: 1a5afa3b7a060790ddd32e41aa90a312edbca985\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-preview.3.20181.4\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2825","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2825)"},{"Id":"591095462","IsPullRequest":true,"CreatedAt":"2020-03-31T13:39:32","Actor":"dotnet-maestro[bot]","Number":"2824","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Subscription**: 46a15fe4-6c2c-480d-9cdd-08d71053b252\r\n- **Build**: 20200331.3\r\n- **Date Produced**: 3/31/2020 12:41 PM\r\n- **Commit**: 7b2eb5aef3b2111fe154dc968080ade568e6a1d5\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 5.0.0-preview.3.20181.3\r\n\r\n[marker]: <> (End:46a15fe4-6c2c-480d-9cdd-08d71053b252)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/2824","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#2824)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-04-08T05:30:49.7512022Z","RunDurationInMilliseconds":592}