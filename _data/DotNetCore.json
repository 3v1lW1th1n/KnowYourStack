{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework December 2018 Security and Quality Rollup","PublishedOn":"2018-12-11T18:23:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the December 2018 Security and Quality Rollup. Security CVE-2018-8540 – Windows Remote Code Execution Vulnerability This security update resolves a vulnerability in Microsoft...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/11/net-framework-december-2018-security-and-quality-rollup/","RawContent":null},{"Title":"Open Sourcing XAML Behaviors for WPF","PublishedOn":"2018-12-10T19:27:32+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are excited to announce that we are open sourcing XAML Behaviors for WPF. In the past, we open sourced XAML Behaviors for UWP which has been a great success and the Behaviors NuGet package...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/10/open-sourcing-xaml-behaviors-for-wpf/","RawContent":null},{"Title":"Take C# 8.0 for a spin","PublishedOn":"2018-12-05T23:51:33+00:00","CommentsCount":47,"FacebookCount":0,"Summary":"Take C# 8.0 for a spin Yesterday we announced the first preview of both Visual Studio 2019 (Making every developer more productive with Visual Studio 2019) and .NET Core 3.0 (Announcing .NET Core 3...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/05/take-c-8-0-for-a-spin/","RawContent":null},{"Title":".NET Framework December 5, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019","PublishedOn":"2018-12-05T22:00:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the December 5, 2018 Preview of .NET Framework Cumulative Update for Windows 10 version 1809 and Windows Server 2019. For more information about the new Cumulative Updates for...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/05/net-framework-december-4-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/","RawContent":null},{"Title":"Announcing .NET Core 3 Preview 1 and Open Sourcing Windows Desktop Frameworks","PublishedOn":"2018-12-04T16:41:34+00:00","CommentsCount":79,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3 Preview 1. It is the first public release of .NET Core 3. We have some exciting new features to share and would love your feedback. You can develop .NET Core 3...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-net-core-3-preview-1-and-open-sourcing-windows-desktop-frameworks/","RawContent":null},{"Title":"Announcing .NET Core 2.2","PublishedOn":"2018-12-04T16:36:50+00:00","CommentsCount":30,"FacebookCount":0,"Summary":"We’re excited to announce the release of .NET Core 2.2. It includes diagnostic improvements to the runtime, support for ARM32 for Windows and Azure Active Directory for SQL Client. The biggest...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-net-core-2-2/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.2","PublishedOn":"2018-12-04T16:30:21+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Today we&#8217;re making the final version of EF Core 2.2 available, alongside ASP.NET Core 2.2 and .NET Core 2.2. This is the latest release of our open-source and cross-platform object-database...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-entity-framework-core-2-2/","RawContent":null},{"Title":"Announcing ML.NET 0.8 – Machine Learning for .NET","PublishedOn":"2018-12-04T16:00:11+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"ML.NET is an open-source and cross-platform framework (Windows, Linux, macOS) which makes machine learning accessible for .NET developers. ML.NET allows you to create and use machine learning models...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/12/04/announcing-ml-net-0-8-machine-learning-for-net/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3694","PublishedOn":"2018-11-29T00:21:07+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"We are happy to let you know that .NET Framework 4.8 is now feature complete and we have an early access build to share with you all! We will continue to stabilize this release and take more fixes...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/28/announcing-net-framework-4-8-early-access-build-3694/","RawContent":null},{"Title":".NET Framework November 2018 Preview of Quality Rollup","PublishedOn":"2018-11-28T01:04:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are releasing the November 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Addressed an issue with...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/27/net-framework-november-2018-preview-of-quality-rollup/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8650911785","Type":"PullRequestEvent","CreatedAt":"2018-11-27T00:35:00","Actor":"JamesNK","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Opened pull request \"Add Newtonsoft.Json\" (#121) at dotnet/foundation","RelatedBody":"// @jongalloway "},{"Id":"8645831625","Type":"PullRequestEvent","CreatedAt":"2018-11-26T09:33:50","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Merged pull request \"Added Telerik info\" (#120) at dotnet/foundation","RelatedBody":""},{"Id":"8645829054","Type":"PullRequestEvent","CreatedAt":"2018-11-26T09:33:23","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Merged pull request \"Added Telerik UWP proj\" (#119) at dotnet/foundation","RelatedBody":""},{"Id":"8645355358","Type":"PullRequestEvent","CreatedAt":"2018-11-26T07:59:20","Actor":"stefanov-stefan","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Opened pull request \"Added Telerik info\" (#120) at dotnet/foundation","RelatedBody":""},{"Id":"8645349176","Type":"PullRequestEvent","CreatedAt":"2018-11-26T07:57:50","Actor":"stefanov-stefan","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Opened pull request \"Added Telerik UWP proj\" (#119) at dotnet/foundation","RelatedBody":""},{"Id":"8637227393","Type":"PullRequestEvent","CreatedAt":"2018-11-23T10:32:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Merged pull request \"Update WorldWide Telescope\" (#118) at dotnet/foundation","RelatedBody":"Some layout fixes, but the main change is that @pkgw is now the project director."},{"Id":"8637225303","Type":"PullRequestEvent","CreatedAt":"2018-11-23T10:31:49","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Merged pull request \"Update identityserver.md\" (#117) at dotnet/foundation","RelatedBody":"significant whitespace"},{"Id":"8615388364","Type":"PullRequestEvent","CreatedAt":"2018-11-19T20:23:18","Actor":"pkgw","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Opened pull request \"Update WorldWide Telescope\" (#118) at dotnet/foundation","RelatedBody":"Some layout fixes, but the main change is that @pkgw is now the project director."},{"Id":"8578587104","Type":"PullRequestEvent","CreatedAt":"2018-11-13T05:53:19","Actor":"leastprivilege","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Opened pull request \"Update identityserver.md\" (#117) at dotnet/foundation","RelatedBody":"significant whitespace"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8741036679","Type":"IssuesEvent","CreatedAt":"2018-12-12T12:56:54","Actor":"bilalMlaik","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92) at dotnet/announcements","RelatedBody":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment"},{"Id":"8740711774","Type":"IssuesEvent","CreatedAt":"2018-12-12T11:57:02","Actor":"bilalMlaik","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Opened issue \".net core Console\" (#92) at dotnet/announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details.\r\nI am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.iothub.simulator:\r\n    image: ${DOCKER_REGISTRY-}ttcoreiothubsimulator\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.IotHub.Simulator/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - mqtt\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.labourtelemetry.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcorelabourtelemetrywebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.LabourTelemetry.WebJob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.telemetry.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoretelemetrywebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Telemetry.WebJob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - mqtt\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  redis:\r\n    image: redis\r\n    command: redis-server --appendonly yes\r\n    ports:\r\n      - '6379:6379'\r\n    volumes:\r\n      - ${APPDATA}/redis:/bitnami/redis/data\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.16\r\n\r\n  mqtt:\r\n    image: eclipse-mosquitto\r\n    hostname: mqtt\r\n    container_name: mqtt\r\n    expose:\r\n      - \"1883\"\r\n      - \"9001\"\r\n    ports:\r\n      - \"1883:1883\"\r\n      - \"9001:9001\"\r\n    volumes:\r\n      - ${APPDATA}/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.8\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\n"},{"Id":"8582735181","Type":"IssuesEvent","CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Opened issue \".NET Core November Update - 2.1.6 and SDK 2.1.500\" (#91) at dotnet/announcements","RelatedBody":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018[(https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8745893613","Type":"PullRequestEvent","CreatedAt":"2018-12-13T05:23:47","Actor":"CarolEidt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21304","RelatedDescription":"Merged pull request \"Don't require BLK nodes for SIMD\" (#21304) at dotnet/coreclr","RelatedBody":""},{"Id":"8745747677","Type":"PullRequestEvent","CreatedAt":"2018-12-13T04:29:48","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21520","RelatedDescription":"Merged pull request \"Suppress unused warnings for events raised by the VM\" (#21520) at dotnet/coreclr","RelatedBody":"Fixes https://github.com/dotnet/coreclr/issues/21516\r\ncc: @jkotas, @BruceForstall "},{"Id":"8745747671","Type":"IssuesEvent","CreatedAt":"2018-12-13T04:29:48","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21516","RelatedDescription":"Closed issue \"Warnings in System.Private.CoreLib build\" (#21516) at dotnet/coreclr","RelatedBody":"There are new warnings in the System.Private.CoreLib build:\r\n```\r\n07:07:14 src\\System\\AppContext.cs(81,60): warning CS0067: The event 'AppContext.UnhandledException' is never used [D:\\j\\workspace\\checked_windo---14fb495b\\src\\System.Private.CoreLib\\System.Private.CoreLib.csproj]\r\n07:07:14 src\\System\\AppContext.cs(83,80): warning CS0067: The event 'AppContext.FirstChanceException' is never used [D:\\j\\workspace\\checked_windo---14fb495b\\src\\System.Private.CoreLib\\System.Private.CoreLib.csproj]\r\n```\r\n\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/checked_windows_nt/10934/consoleFull\r\n\r\nThis appears to be due to https://github.com/dotnet/coreclr/pull/21460\r\n"},{"Id":"8745498539","Type":"IssuesEvent","CreatedAt":"2018-12-13T03:04:24","Actor":"yanzhenms","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/21521","RelatedDescription":"Opened issue \"[Android] Segmentation fault in libcoreclr.so\" (#21521) at dotnet/coreclr","RelatedBody":"Hi, after followed this tutorial https://github.com/qmfrederik/coredroid, I got a lot of binaries successfull. I pushed them to Android /data/local/tmp/ and try to run a HelloWorld sample. It doesn't show \"Hello, world\" but gives me a \"segmentation fault in libcoreclr.so\". \r\n\r\nAre there pre-built binaries or docker for Android cross built so I can save some time?\r\n\r\nThanks~"},{"Id":"8745280601","Type":"PullRequestEvent","CreatedAt":"2018-12-13T01:57:15","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/21520","RelatedDescription":"Opened pull request \"Suppress unused warnings for events raised by the VM\" (#21520) at dotnet/coreclr","RelatedBody":"Fixes https://github.com/dotnet/coreclr/issues/21516\r\ncc: @jkotas, @BruceForstall "}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8744608018","Type":"IssuesEvent","CreatedAt":"2018-12-12T22:51:14","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/10467","RelatedDescription":"Closed issue \"dotnet pack: Cannot change PackageId based on TFM\" (#10467) at dotnet/cli","RelatedBody":"## Scenario\r\n\r\nI'm tyring to package up a console application / tool targeting both `netcoreapp2.1` and `net461`. For .NET Core I want to provide the tool as global tool, for .NET framework, the tool should be packaged as a \"tools\" package (a plain `.exe` inside the `tools` directory). I'd like to create two packages, one for each target platform.\r\n\r\n## Steps to reproduce\r\n\r\n1. Create a new console application: `dotnet new console`\r\n2. Add `net461` as additional target framework\r\n3. Set `PackageId` using a conditional `PropertyGroup`\r\n4. Run `dotnet build` and `dotnet pack`\r\n\r\nProject file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFrameworks>net461;netcoreapp2.1</TargetFrameworks>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\" '$(TargetFramework)' == 'net461' \">\r\n    <IsTool>true</IsTool>    \r\n    <PackageId>Package_MultiTargeted_NetFramework</PackageId>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\" '$(TargetFramework)' == 'netcoreapp2.1' \">\r\n    <PackAsTool>true</PackAsTool>\r\n    <PackageId>Package_MultiTargeted_NetCore</PackageId>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n(Full repo, including a Framework-only and core-only tool can be found [here](https://github.com/ap0llo/repro-dotnet-pack-targetframework-dependent-packageid))\r\n\r\n\r\n## Expected  behavior\r\n`dotnet pack` creates two NuGet packages:\r\n\r\n- one package named `Package_MultiTargeted_NetFramework` containing only the .NET Framework exe inside the `tools` folder\r\n- a second package named `Package_MultiTargeted_NetCore` containing the .NET Core global tool (inside the `tools\\netcoreapp2.1\\any` folder)\r\n\r\n## Actual behavior\r\n\r\nA single package named `MultiTargetedTool` is created, containing \r\n\r\n- the .NET Core global tool\r\n- A `net461` build of the project inside the `lib` folder\r\n- A `netcoreapp2.1` build of the proejct inside the `lib` folder\r\n\r\n![image](https://user-images.githubusercontent.com/2821818/49891736-8c9c8080-fe47-11e8-847e-e775f3d6231e.png)\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.101\r\n Commit:    236713b0b7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.101\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8743882533","Type":"IssuesEvent","CreatedAt":"2018-12-12T20:29:58","Actor":"dagood","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10468","RelatedDescription":"Opened issue \"Add 'dotnet tool install' failure potential reason: 'tool requires a runtime that is not installed'\" (#10468) at dotnet/cli","RelatedBody":"From https://github.com/dotnet/source-build/issues/926#issuecomment-446345298:\r\n\r\n> [@tmds] 'requires a runtime that is not installed' should be added to 'This failure may have been caused by'.\r\n\r\nhttps://github.com/dotnet/cli/blob/22cbfcb49bd9a38292ac6f66a14158b426daefdb/src/dotnet/commands/dotnet-tool/install/LocalizableStrings.resx#L182-L189\r\n\r\nFailure context:\r\n\r\n```\r\n$ dotnet tool install -g dotnet-dev-certs\r\nerror NU1202: Package dotnet-dev-certs 2.2.0 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1) / any. Package dotnet-dev-certs 2.2.0 supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2) / any\r\nThe tool package could not be restored.\r\nTool 'dotnet-dev-certs' failed to install. This failure may have been caused by:\r\n\r\n* You are attempting to install a preview release and did not use the --version option to specify the version.\r\n* A package by this name was found, but it was not a .NET Core tool.\r\n* The required NuGet feed cannot be accessed, perhaps because of an Internet connection problem.\r\n* You mistyped the name of the tool.\r\n```\r\n\r\n/cc @wli3 "}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8744714626","Type":"PullRequestEvent","CreatedAt":"2018-12-12T23:16:03","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1012","RelatedDescription":"Merged pull request \"Add private fields for structs\" (#1012) at dotnet/standard","RelatedBody":"No public API changes, but this fixes #678. \r\n\r\nIn a nutshell, the compiler needs to know whether a struct has any fields in order to apply definitive assignment rules. While stripping all private fields from types is generally OK, we can't do this for structs. Fortunately, for private fields the compiler doesn't really care what they are, but what their characteristics are. For example:\r\n\r\n1. Does the struct have any fields?\r\n\r\n2. Does the struct contain any reference types (to validate generic instantiations that have the unmanaged constraint)?\r\n\r\n3. Does the struct use the generic parameter in a field declaration (to validate cyclic layout problems)?\r\n\r\nThis adds dummy fields to structs to conform to these rules. These aren't computed separately but are instead taken from .NET Core.\r\n\r\nFor more details, see this issue in CoreFX:\r\n\r\nhttps://github.com/dotnet/corefx/issues/6185"},{"Id":"8744714615","Type":"IssuesEvent","CreatedAt":"2018-12-12T23:16:03","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/678","RelatedDescription":"Closed issue \"Add private fields information to netstandard ref\" (#678) at dotnet/standard","RelatedBody":"See https://github.com/dotnet/corefx/issues/6185 we need to update the netstandard ref to include some information about the private fields in structs so the compiler can do its job. "},{"Id":"8744616374","Type":"PullRequestEvent","CreatedAt":"2018-12-12T22:53:05","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1015","RelatedDescription":"Opened pull request \"Enable publishing to build-assets registry\" (#1015) at dotnet/standard","RelatedBody":"Now that Standard is placing build output in `artifacts`, we can opt-in to publishing build assets to the BAR.\r\n\r\n@chcosta @mmitche PTAL"},{"Id":"8743679795","Type":"PullRequestEvent","CreatedAt":"2018-12-12T19:52:20","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1014","RelatedDescription":"Opened pull request \"Add IAsyncDisposable\" (#1014) at dotnet/standard","RelatedBody":"This adds API support for the new C# 8 feature to call dispose asynchronously:\r\n\r\n```C#\r\nawait using(var stream = File.OpenWrite(path))\r\n{\r\n    await data.WriteAsync(stream);\r\n}\r\n```\r\n\r\nFor more details, see:\r\n\r\nhttps://github.com/dotnet/csharplang/blob/master/proposals/async-streams.md"},{"Id":"8743583743","Type":"PullRequestEvent","CreatedAt":"2018-12-12T19:35:17","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1013","RelatedDescription":"Opened pull request \"Add missing readonly modifiers\" (#1013) at dotnet/standard","RelatedBody":"This fixes #842.\r\n\r\n***Before merging, change base to branch.** Can only happen after #1012 is merged*."},{"Id":"8743382497","Type":"IssuesEvent","CreatedAt":"2018-12-12T19:00:28","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/1011","RelatedDescription":"Closed issue \"Add HashSet.TryGetValue to .Net Standard\" (#1011) at dotnet/standard","RelatedBody":"This method is already implemented by .Net Core 2.0 and .Net Framework 4.7.2, so I imagine this would be relatively easy to include in .Net Standard 2.1."},{"Id":"8743352047","Type":"PullRequestEvent","CreatedAt":"2018-12-12T18:55:15","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/999","RelatedDescription":"Merged pull request \"Sync .NET Standard's RefEmit with .NET Framework\" (#999) at dotnet/standard","RelatedBody":"Fixes #987\r\n\r\nThe point of the sync is to get increase parity with .NET Framework and thus making it easier to port more existing code to .NET Standard 2.1 (or any platform implementing it)."},{"Id":"8743351999","Type":"IssuesEvent","CreatedAt":"2018-12-12T18:55:15","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/987","RelatedDescription":"Closed issue \"System.Reflection.*: we should review differences with .NET Framework\" (#987) at dotnet/standard","RelatedBody":"Reflection and Reflection.Emit were heavily subset; we should make sure that we're adding all the APIs back, unless they cause bad dependencies (such as CAS) or not supported on any platform (such as Reflection.Emit persistence)."},{"Id":"8743230877","Type":"PullRequestEvent","CreatedAt":"2018-12-12T18:33:47","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/1012","RelatedDescription":"Opened pull request \"Add private fields for structs\" (#1012) at dotnet/standard","RelatedBody":"This fixes #678. In a nutshell, the compiler needs to know whether a struct has any fields in order to apply definitive assignment rules. While stripping all private fields from types is generally OK, we can't do this for structs. Fortunately, for private fields the compiler doesn't really care what they are, but that their characteristics are. For example:\r\n\r\n1. Does the struct have any fields?\r\n\r\n2. Does the struct contain any reference types (to validate generic instantiations that have the unmanaged constraint)?\r\n\r\n3. Does the struct use the generic parameter in a field declaration (to validate cyclic layout problems)?\r\n\r\nThis adds dummy fields to structs to conform to these rules. These aren't computed separately but are instead taken from .NET Core.\r\n\r\nFor more details, see this issue in CoreFX:\r\n\r\nhttps://github.com/dotnet/corefx/issues/6185"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8745695157","Type":"IssuesEvent","CreatedAt":"2018-12-13T04:10:10","Actor":"madhub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/34061","RelatedDescription":"Opened issue \".NET core 2.1.x  wildcard certificate handling issue\" (#34061) at dotnet/corefx","RelatedBody":"I have web server with wild card certificate ( ***.mdrinc.com**)  running on port 1060.\r\n\r\nWhen I try to reach server using HttpClient I get \"_The remote certificate is invalid according to the validation procedure_\" error . With HttpClient handler with ServerCertificateCustomValidationCallback I see \"_SslPolicyErrors.RemoteCertificateNameMismatch_\". \r\n\r\nSame program works with AppContext.SetSwitch(\"System.Net.Http.UseSocketsHttpHandler\", false); \r\n\r\n### My .NET Environment is\r\n **dotnet --info**\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\n**Runtime Environment:**\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.100/\r\n\r\n**Host (useful for support):**\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n**.NET Core SDKs installed:**\r\n  2.2.100 [/usr/share/dotnet/sdk]\r\n\r\n**.NET Core runtimes installed:**\r\n  Microsoft.AspNetCore.All 2.2.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]_\r\n\r\n\r\n### Example: my server returns following server certificate\r\n\r\n**[Subject]**\r\n  E=joe@mdrinc.com, CN=*.mdrinc.com, OU=Dev, O=mdrinc, L=Bangalore, S=Karnataka, C=IN\r\n  Simple Name: *.mdrinc.com\r\n  Email Name: joe@mdrinc.com\r\n  DNS Name: *.mdrinc.com\r\n\r\n**[Issuer]**\r\n  E=a@b.com, CN=CA.HCPF.COM, OU=CA, O=mdrinc, L=Bangalore, S=Karnataka, C=IN\r\n  Simple Name: CA.HCPF.COM\r\n  Email Name: a@b.com\r\n  DNS Name: CA.HCPF.COM\r\n\r\n[Serial Number]\r\n  01\r\n\r\n[Not Before]\r\n  04/12/18 2:17:36 PM\r\n\r\n[Not After]\r\n  03/12/20 2:17:36 PM\r\n\r\nhttps://gist.github.com/madhub/39c980ff010ba3888e54e8f1527ced6b#file-ssltest-cs\r\n\r\n### Sample Program\r\n\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Net.Http;\r\nusing System.Net.Security;\r\nusing System.Security.Cryptography.X509Certificates;\r\nusing System.Text;\r\n\r\nclass Program\r\n{\r\n    public class MyHttpClientHandler : HttpClientHandler\r\n    {\r\n        public MyHttpClientHandler()\r\n        {\r\n            this.ServerCertificateCustomValidationCallback = delegate (HttpRequestMessage message,\r\n                X509Certificate2 x509Cer2,\r\n                X509Chain chain,\r\n                SslPolicyErrors errors)\r\n            {\r\n                bool validationStatus = true;\r\n                if ((errors & SslPolicyErrors.RemoteCertificateChainErrors) != 0)\r\n                {\r\n                    Console.WriteLine(\"SslPolicyErrors.RemoteCertificateChainErrors\");\r\n                    validationStatus = false;\r\n                }\r\n\r\n                if ((errors & SslPolicyErrors.RemoteCertificateNameMismatch) != 0)\r\n                {\r\n                    Console.WriteLine(\"SslPolicyErrors.RemoteCertificateNameMismatch\");\r\n                    validationStatus = false;\r\n                }\r\n                else if ((errors & SslPolicyErrors.None) != 0)\r\n                {\r\n                    Console.WriteLine(\"SslPolicyErrors.None\");\r\n                    validationStatus = true;\r\n                }\r\n\r\n                Console.WriteLine(x509Cer2.ToString(true));\r\n\r\n                return validationStatus;\r\n            };\r\n        }\r\n\r\n    }\r\n    // this works\r\n    public static void WithAppContextSwitch(string hostUrl)\r\n    {\r\n        AppContext.SetSwitch(\"System.Net.Http.UseSocketsHttpHandler\", false);\r\n        try\r\n        {\r\n            using (var httpClient = new HttpClient())\r\n            {\r\n                var response = httpClient.GetAsync(hostUrl).GetAwaiter().GetResult();\r\n                System.Console.WriteLine(response.StatusCode);\r\n            }\r\n        }\r\n        catch (Exception exp)\r\n        {\r\n\r\n            Console.WriteLine(\"Exception \" + exp);\r\n        }\r\n    }\r\n    // throws RemoteCertificateNameMismatch exception \r\n    public static void WithOutAppContextSwitch(string hostUrl)\r\n    {\r\n\r\n        try\r\n        {\r\n            var httpHandler = new MyHttpClientHandler();\r\n            using (var httpClient = new HttpClient(httpHandler))\r\n            {\r\n                var response = httpClient.GetAsync(hostUrl).GetAwaiter().GetResult();\r\n                System.Console.WriteLine(response.StatusCode);\r\n            }\r\n        }\r\n        catch (Exception exp)\r\n        {\r\n\r\n            Console.WriteLine(\"Exception \" + exp);\r\n        }\r\n    }\r\n\r\n    static void Main(string[] args)\r\n    {\r\n\r\n        string hostUrl = \"https://msrv4.mdrinc.com:1060\";\r\n\r\n        // this works\r\n        WithAppContextSwitch(hostUrl);\r\n\r\n        // throws RemoteCertificateNameMismatch exception \r\n        WithOutAppContextSwitch(hostUrl);\r\n    }\r\n}\r\n\r\n_Originally posted by @madhub in https://github.com/dotnet/corefx/issues/30388#issuecomment-446554623_"},{"Id":"8745592060","Type":"IssuesEvent","CreatedAt":"2018-12-13T03:35:09","Actor":"geoffkizer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/34060","RelatedDescription":"Opened issue \"HTTP2: Consider smarter buffer flushing strategy\" (#34060) at dotnet/corefx","RelatedBody":"Currently, we are flushing the buffer out to the network on every frame write. This is correct but more aggressive than we need to be. We should consider trying to defer flushing (up to some buffer limit, e.g. 64K or whatever).\r\n\r\nWe can defer flushing in potentially two ways:\r\n(1) If we know another writer is waiting on the _writerLock to write, then there's no need to flush immediately. (However, this could be tricky because it's possible the other writer may cancel, in which case we still need to flush.)\r\n(2) Even if there's no other writer pending, it may make sense to wait for a brief period of time to see if another writer shows up. However, in some cases this is probably undesirable -- e.g. when we send an EndStream for a request, delaying the write will mean the server can't send the response right away.\r\n\r\nDoing this properly is pretty nontrivial, so we should be careful to ensure that this is actually worthwhile and correct."},{"Id":"8745517626","Type":"IssuesEvent","CreatedAt":"2018-12-13T03:10:34","Actor":"geoffkizer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/34059","RelatedDescription":"Opened issue \"HTTP2: Respect SETTINGS_INITIAL_WINDOW_SIZE setting\" (#34059) at dotnet/corefx","RelatedBody":"Separating this from #31297 since it requires some additional implementation and refactoring to support properly."},{"Id":"8745468724","Type":"PullRequestEvent","CreatedAt":"2018-12-13T02:55:15","Actor":"geoffkizer","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/34058","RelatedDescription":"Opened pull request \"HTTP2: implement outbound flow control\" (#34058) at dotnet/corefx","RelatedBody":"Fixes #31297\r\n\r\n@dotnet/ncl @stephentoub"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8745688793","Type":"IssuesEvent","CreatedAt":"2018-12-13T04:07:45","Actor":"Pilchie","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31740","RelatedDescription":"Opened issue \"Nullable and attributes with array args don't work\" (#31740) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n2.11.0-beta2-63529-05\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Open the following project in the IDE, observe two errors.\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net472</TargetFramework>\r\n    <LangVersion>8.0</LangVersion>\r\n    <NullableReferenceTypes>true</NullableReferenceTypes>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.NET.Compilers\" Version=\"2.11.0-beta2-63529-05\" PrivateAssets=\"All\" /> \r\n    <PackageReference Include=\"microsoft.visualstudio.shell.15.0\" Version=\"16.0.28316-pre\" />\r\n    <PackageReference Include=\"xunit\" Version=\"2.4.1\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n```c#\r\nusing System;\r\nusing Microsoft.VisualStudio.Shell;\r\nusing Xunit;\r\n\r\n[ProvideUIContextRule(ActivationContextGuid,\r\n    \"Load Managed Project Package\",\r\n\"dotnetcore\",\r\nnew string[] { \"dotnetcore\" },\r\nnew string[] { \"SolutionHasProjectCapability:.NET & CPS\" }\r\n)]\r\npublic class Program\r\n{\r\n    public const string ActivationContextGuid = \"\";\r\n\r\n    [Theory]\r\n    [InlineData(new object[] { new string[] { \"Hi\" } })]\r\n    public void Main(string[] args)\r\n    {\r\n        Assert.NotEmpty(args);\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nCompiles fine\r\n\r\n**Actual Behavior**:\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0182\tAn attribute argument must be a constant expression, typeof expression or array creation expression of an attribute parameter type\tConsoleApp4\tC:\\Users\\kevinpi\\source\\repos\\ConsoleApp4\\ConsoleApp4\\Program.cs\t5\tActive\r\nError\txUnit1010\tThe value is not convertible to the method parameter 'args' of type 'string[]'.\tConsoleApp4\tC:\\Users\\kevinpi\\source\\repos\\ConsoleApp4\\ConsoleApp4\\Program.cs\t16\tActive\r\n"},{"Id":"8745526619","Type":"IssuesEvent","CreatedAt":"2018-12-13T03:13:29","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31739","RelatedDescription":"Opened issue \"FailFast in integration tests\" (#31739) at dotnet/roslyn","RelatedBody":"Observed in the debug leg.\r\nhttps://dnceng.visualstudio.com/public/_build/results?buildId=57289\r\n\r\n```\r\nEvent Time (UTC): 12/12/2018 12:29:07 PM\r\nEvent ID: 1025\r\nData: Application: devenv.exe\r\nFramework Version: v4.0.30319\r\nDescription: The application requested process termination through System.Environment.FailFast(string message).\r\nMessage: System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultBuilder.AppendDiagnostics(Dictionary`2& map, Document documentOpt, Diagnostic diagnostic)\r\n   at Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultBuilder.AddDiagnostics(Dictionary`2& lazyLocals, SyntaxTree tree, IEnumerable`1 diagnostics)\r\n   at Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultBuilder.AddSyntaxDiagnostics(SyntaxTree tree, IEnumerable`1 diagnostics)\r\n   at Microsoft.CodeAnalysis.Diagnostics.Extensions.ToResultBuilderMap(AnalysisResult analysisResult, Project project, VersionStamp version, Compilation compilation, IEnumerable`1 analyzers, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.InProcOrRemoteHostAnalyzerRunner.<AnalyzeInProcAsync>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.InProcOrRemoteHostAnalyzerRunner.<AnalyzeAsync>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.Executor.<AnalyzeAsync>d__16.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.Executor.<ComputeDiagnosticsAsync>d__7.MoveNext()\r\nStack:\r\n   at System.Environment.FailFast(System.String, System.Exception)\r\n   at Microsoft.CodeAnalysis.FailFast.OnFatalException(System.Exception)\r\n   at Microsoft.CodeAnalysis.ErrorReporting.FatalError.Report(System.Exception, System.Action`1<System.Exception>)\r\n   at Microsoft.CodeAnalysis.ErrorReporting.FatalError.Report(System.Exception)\r\n   at Microsoft.CodeAnalysis.ErrorReporting.FatalError.ReportUnlessCanceled(System.Exception)\r\n   at Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer+Executor+<ComputeDiagnosticsAsync>d__7.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(System.Threading.Tasks.Task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter[[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultMap`2[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResult, Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]], Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].GetResult()\r\n   at Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer+Executor+<ComputeDiagnosticsAsync>d__7.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean)\r\n   at System.Threading.Tasks.Task`1[[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultMap`2[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResult, Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]], Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].TrySetException(System.Object)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultMap`2[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResult, Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]], Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].SetException(System.Exception)\r\n   at Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer+Executor+<AnalyzeAsync>d__16.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean)\r\n   at System.Threading.Tasks.Task`1[[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultMap`2[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResult, Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]], Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].TrySetException(System.Object)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultMap`2[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResult, Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]], Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].SetException(System.Exception)\r\n   at Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer+InProcOrRemoteHostAnalyzerRunner+<AnalyzeAsync>d__4.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean)\r\n   at System.Threading.Tasks.Task`1[[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultMap`2[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResult, Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]], Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].TrySetException(System.Object)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultMap`2[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResult, Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]], Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].SetException(System.Exception)\r\n   at Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer+InProcOrRemoteHostAnalyzerRunner+<AnalyzeInProcAsync>d__6.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers+<GetAnalysisResultAsync>d__40.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers+<GetAnalysisResultWithoutStateTrackingAsync>d__47.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.Threading.Tasks.VoidTaskResult)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.Threading.Tasks.VoidTaskResult)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult()\r\n   at Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers+<ComputeAnalyzerDiagnosticsWithoutStateTrackingAsync>d__49.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.ExecuteEntry(Boolean)\r\n   at System.Threading.Tasks.ThreadPoolTaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task, Boolean)\r\n   at System.Threading.Tasks.TaskScheduler.TryRunInline(System.Threading.Tasks.Task, Boolean)\r\n   at System.Threading.Tasks.TaskContinuation.InlineIfPossibleOrElseQueue(System.Threading.Tasks.Task, Boolean)\r\n   at System.Threading.Tasks.StandardTaskContinuation.Run(System.Threading.Tasks.Task, Boolean)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.Threading.Tasks.VoidTaskResult)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.Threading.Tasks.VoidTaskResult)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult()\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver+<ExecutePrimaryAnalysisTaskAsync>d__64.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.Threading.Tasks.VoidTaskResult)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.Threading.Tasks.VoidTaskResult)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult()\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver+<ProcessCompilationEventsAsync>d__87.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver+<ProcessCompilationEventsCoreAsync>d__88.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.Threading.Tasks.VoidTaskResult)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.Threading.Tasks.VoidTaskResult)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult()\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver+<ProcessEventAsync>d__89.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver+<TryProcessEventCoreAsync>d__91.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver+<TryProcessSymbolDeclaredAsync>d__92.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver+<GetPerSymbolAnalyzerActionsAsync>d__108.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver+<GetPerSymbolAnalyzerActionsAsync>d__109.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver+<>c__DisplayClass109_0+<<GetPerSymbolAnalyzerActionsAsync>g__getSymbolActionsCoreAsync|1>d.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerManager+<GetPerSymbolAnalyzerActionsAsync>d__13.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerManager+<GetSymbolAnalysisScopeAsync>d__8.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerManager+<GetSymbolAnalysisScopeCoreAsync>d__9.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.ExecuteEntry(Boolean)\r\n   at System.Threading.Tasks.Task.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\r\n```"},{"Id":"8745484527","Type":"PullRequestEvent","CreatedAt":"2018-12-13T03:00:06","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31736","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#31736) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8745457623","Type":"PullRequestEvent","CreatedAt":"2018-12-13T02:51:52","Actor":"KirillOsenkov","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31738","RelatedDescription":"Opened pull request \"Tolerate snippets where Shortcut is null.\" (#31738) at dotnet/roslyn","RelatedBody":"Simple null-check for snippet.Shortcut in preprocessor context check."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8743013467","Type":"PullRequestEvent","CreatedAt":"2018-12-12T17:55:05","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6681","RelatedDescription":"Opened pull request \"Initial support for GC ref map emission in the CPAOT compiler\" (#6681) at dotnet/corert","RelatedBody":"I have basically forked away ArgIterator and TransitionBlock from\r\nthe calling convention converter and I adapted it to use by the\r\nCPAOT compiler. I have not yet added multi-architecture support,\r\nfor now it only works for the compiler build architecture. There are\r\nalso a few NotImplemented cases I'll fix once I hit them in testing.\r\n\r\nMy initial thinking is that, after finalizing this code and after\r\nwe start working on other architectures, I'll further refactor this\r\ncode based on JanK's suggestion by merging in preprocessed versions\r\nof the ArgIterator source file for the four architectures.\r\n\r\nI also plan to further experiment with runtime architecture\r\nvirtualization that I tried to prototype in a trimmed-down\r\nclone of TransitionBlock I coded up for the purpose of R2RDump\r\nGC ref map decoder and I'm quite pleased with the result which\r\nlooks quite elegant and compact to me.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"8742946211","Type":"IssuesEvent","CreatedAt":"2018-12-12T17:43:28","Actor":"tim241","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6452","RelatedDescription":"Closed issue \"[Arch Linux] R_X86_64_PC32 against symbol `memcpy@@GLIBC_2.14' can not be used \" (#6452) at dotnet/corert","RelatedBody":"clang version:\r\n```\r\nclang version 7.0.0 (tags/RELEASE_700/final)\r\nTarget: x86_64-pc-linux-gnu\r\nThread model: posix\r\nInstalledDir: /usr/bin\r\n```\r\n\r\noutput:\r\nhttps://gist.github.com/tim241/3488247796c9bf9f0bc357d28f8a74c1\r\n\r\nI've already tried to append `-fPIC` to the clang flags, no luck, same error."},{"Id":"8742812054","Type":"PullRequestEvent","CreatedAt":"2018-12-12T17:20:53","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6664","RelatedDescription":"Merged pull request \"Additional fixes for field placement in CPAOT\" (#6664) at dotnet/corert","RelatedBody":"After making improvements to R2RDump to let me smoothly diff CPAOT\r\nand Crossgen code I managed to identify tests crashing to obvious\r\ninconsistencies in access to class / struct fields. There were\r\nmultiple reasons for these inconsistencies and, while I cannot claim\r\nthis change fixes all of them, it fixes quite a few.\r\n\r\nWhile our longer-term plan is to start embedding field placement\r\ninformation in the R2R executables, I believe this change is useful\r\nto both provide immediate fixes for some of the previously failing\r\nCoreCLR tests and to seed the CPAOT field placement algorithm with\r\na closer match to what CoreCLR uses - even if we decide to deviate\r\nfrom that at some point, it's still probably a reasonable starting\r\npoint.\r\n\r\n1) My original implementation of the static field layout placement\r\nwas based on the method Module::BuildStaticsOffsets but that's\r\nincorrect - this method is only used to calculate the required space\r\nfor statics of each type in the module and use this information to\r\ncalculate offsets within a big array that subsequently gets allocated\r\nas part of the DomainLocalModule / ThreadLocalModule structures.\r\nFor the actual field placement, MethodTableBuilder uses the same\r\nalgorithm as the dynamic layout placement so I unified these two\r\nand I refactored the code to cater for the two-level field resolution.\r\n\r\n2) Reverse token lookup for fields was incomplete so I fixed that.\r\n\r\n3) For static struct fields, we must set a special flag in CPAOT,\r\nCORINFO_FIELD_FLAGS.CORINFO_FLG_FIELD_STATIC_IN_HEAP, this triggers\r\nthe proper double indirection code in JIT that caters for implicitly\r\nboxed struct statics in CoreCLR.\r\n\r\n4) For extra-bubble statics, we instead use a special helper\r\nREADYTORUN_HELPER_FieldAddress in accordance with the postprocessing\r\nin ZapInfo::getFieldInfo around lines 2940-2990.\r\n\r\n5) For instance fields, it turns out there's a slight difference in\r\nhow CoreRT vs. CoreCLR decides field layout for structs. In CoreRT,\r\nstructs use sequential layout by default. In CoreCLR, structs use\r\nsequential layout only when they are blittable, otherwise they use\r\nauto layout.\r\n\r\n6) As part of this change I have forked out the method\r\n\"MarshalHelpers.IsBlittableType\" into a separate static class\r\nIsBlittable because the MarshalHelpers carry around a ton of\r\ndependencies that wreak havoc when propagating to all places where\r\nthe blittable check is newly used as part of the field placement\r\nlogic. With this surgical separation I managed to make this change\r\nrequire very few changes to other projects.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"8742239464","Type":"PullRequestEvent","CreatedAt":"2018-12-12T15:59:03","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6680","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6680) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @pentp"},{"Id":"8741929291","Type":"PullRequestEvent","CreatedAt":"2018-12-12T15:15:56","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6669","RelatedDescription":"Merged pull request \"[ILVerify]Check interface method implementation\" (#6669) at dotnet/corert","RelatedBody":"closes https://github.com/dotnet/corert/issues/6203\r\nOutput message:\r\n```\r\n[MD]: Error: Class implements interface but not method, Class: '[InterfaceImplementation]MissingMethod_InvalidType_InterfaceMethodNotImplemented' Interface: '[InterfaceDefinition]Interface' Method: [InterfaceDefinition]Interface.M1()(class:02000004 interface:09000004 method:06000001).\r\n```\r\n\r\n/cc @jkotas @MichalStrehovsky"},{"Id":"8741929267","Type":"IssuesEvent","CreatedAt":"2018-12-12T15:15:55","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6203","RelatedDescription":"Closed issue \"ILVerify does not complain when a class does not implement method from an interface\" (#6203) at dotnet/corert","RelatedBody":"I have used Cecil to create a class that implements an interface, but not its method.\r\n\r\nThe decompiled code for it is:\r\n\r\n```c#\r\ninterface I\r\n{\r\n  void M();\r\n}\r\n\r\nclass C : I { }\r\n```\r\n\r\nCode used to generate it:\r\n\r\n```c#\r\nusing System;\r\nusing Mono.Cecil;\r\n\r\nstatic class Program\r\n{\r\n    static void Main()\r\n    {\r\n        var assemblyName = \"MyAssembly\";\r\n        var assembly = AssemblyDefinition.CreateAssembly(\r\n            new AssemblyNameDefinition(assemblyName, new Version(1, 0)), assemblyName,\r\n            ModuleKind.Dll);\r\n        var module = assembly.MainModule;\r\n\r\n        var i = new TypeDefinition(null, \"I\",\r\n            TypeAttributes.Interface | TypeAttributes.Abstract);\r\n\r\n        var method = new MethodDefinition(\"M\",\r\n            MethodAttributes.Public | MethodAttributes.Abstract | MethodAttributes.Virtual,\r\n            module.TypeSystem.Void);\r\n\r\n        i.Methods.Add(method);\r\n\r\n        module.Types.Add(i);\r\n\r\n        var type = new TypeDefinition(null, \"C\", TypeAttributes.Class,\r\n            module.TypeSystem.Object);\r\n\r\n        type.Interfaces.Add(new InterfaceImplementation(i));\r\n\r\n        module.Types.Add(type);\r\n\r\n        assembly.Write(assemblyName + \".dll\");\r\n    }\r\n}\r\n```\r\n\r\nWhen I verify it using PEVerify, I get the expected error:\r\n\r\n```\r\n>peverify MyAssembly.dll\r\n\r\nMicrosoft (R) .NET Framework PE Verifier.  Version  4.0.30319.0\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\n[MD]: Error: Class implements interface but not method (class:0x02000003; interface:0x02000002; method:0x06000001). [token:0x09000001]\r\n1 Error(s) Verifying MyAssembly.dll\r\n```\r\n\r\nBut when I use ILVerify instead, I get no errors:\r\n\r\n```\r\n>ILVerify.exe -r \"C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.7.2\\mscorlib.dll\" MyAssembly.dll\r\nAll Classes and Methods in C:\\code\\app\\bin\\Debug\\netcoreapp2.1\\MyAssembly.dll Verified.\r\n```\r\n\r\nIt's possible this happens because ILVerify is not completed yet, but I thought reporting this would still be useful."},{"Id":"8741865131","Type":"IssuesEvent","CreatedAt":"2018-12-12T15:06:43","Actor":"kbaladurin","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6404","RelatedDescription":"Closed issue \"[CppCodeGen] Static class initialization isn't thread-safe\" (#6404) at dotnet/corert","RelatedBody":"Static class initialization isn't thread-safe:\r\n```cs\r\nprivate void TriggerCctor(TypeDesc type)\r\n{\r\n    // TODO: Before field init\r\n\r\n    MethodDesc cctor = type.GetStaticConstructor();\r\n    if (cctor == null)\r\n        return;\r\n\r\n    // TODO: Thread safety\r\n\r\n    string ctorHasRun = \"__statics.__cctor_\" + _writer.GetCppTypeName(type).Replace(\"::\", \"__\");\r\n    AppendLine();\r\n    Append(\"if (!\" + ctorHasRun + \") {\");\r\n    Indent();\r\n    AppendLine();\r\n    Append(ctorHasRun + \" = true;\");\r\n    AppendLine();\r\n    Append(_writer.GetCppTypeName(cctor.OwningType));\r\n    Append(\"::\");\r\n    Append(_writer.GetCppMethodName(cctor));\r\n    Append(\"();\");\r\n    Exdent();\r\n    AppendLine();\r\n    Append(\"}\");\r\n\r\n    AddMethodReference(cctor);\r\n}\r\n```"},{"Id":"8741764566","Type":"PullRequestEvent","CreatedAt":"2018-12-12T14:52:37","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6680","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6680) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"8741423891","Type":"IssuesEvent","CreatedAt":"2018-12-12T14:01:12","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6679","RelatedDescription":"Closed issue \"Failed to build Chromely (https://github.com/mattkol/Chromely)\" (#6679) at dotnet/corert","RelatedBody":"Chromely is built using .Net standard 2.0.\r\nI used latest pre- release version (Install-Package Chromely.CefGlue.Winapi -Version 68.0.0-pre01).\r\nPlease find the attached screenshot.\r\n![sh1](https://user-images.githubusercontent.com/3658295/49859167-dc198700-fe1c-11e8-8782-9f575d75dabe.png)\r\n\r\nI followed steps from the link exactly. (https://github.com/mattkol/Chromely/wiki/Getting-Started-CefGlue-Winapi-(.NET-Core)). \r\nWhen I build the program using visual studio, it runs perfectly. \r\n\r\nBut again when I tried to build using CoreRT, I got the native executable in the native folder. It shows an error:-Value can't be null. parameter name :path1. Attached screen shot.\r\n![sc2](https://user-images.githubusercontent.com/3658295/49860871-a8d8f700-fe20-11e8-83d5-01f549154887.png)\r\n\r\n[chromely Sample.zip](https://github.com/mattkol/Chromely/files/2671351/chromely.Sample.zip)\r\n\r\nI am trying to build a native application using chromely. It will be great if you can take a look into this.\r\n\r\n"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2018-11-27T00:35:00","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"open","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Open PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379731798","IsPullRequest":true,"CreatedAt":"2018-11-13T04:22:32","Actor":"leastprivilege","Number":"114","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#114)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"},{"Id":"379733880","IsPullRequest":true,"CreatedAt":"2018-11-13T04:20:23","Actor":"leastprivilege","Number":"115","RawContent":null,"Title":"Create identitymodel.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Closed or merged PR \"Create identitymodel.md\" (#115)"},{"Id":"371941750","IsPullRequest":true,"CreatedAt":"2018-11-01T16:20:07","Actor":"SeanKilleen","Number":"113","RawContent":null,"Title":"Update logo for couchbase-lite in projects.json","State":"closed","Body":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser.","Url":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Closed or merged PR \"Update logo for couchbase-lite in projects.json\" (#113)"},{"Id":"365089074","IsPullRequest":false,"CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Number":"112","RawContent":null,"Title":"Suggest: key  F12  go to source code of dotnetcore  rather then metadata","State":"open","Body":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n","Url":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Open issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112)"},{"Id":"356296763","IsPullRequest":false,"CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Number":"111","RawContent":null,"Title":"Sourcelink location is confusing","State":"open","Body":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section.","Url":"https://github.com/dotnet/foundation/issues/111","RelatedDescription":"Open issue \"Sourcelink location is confusing\" (#111)"},{"Id":"353832272","IsPullRequest":true,"CreatedAt":"2018-08-27T16:21:55","Actor":"jkonicki","Number":"110","RawContent":null,"Title":"Fix - add missing comma","State":"closed","Body":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix.","Url":"https://github.com/dotnet/foundation/pull/110","RelatedDescription":"Closed or merged PR \"Fix - add missing comma\" (#110)"},{"Id":"352736883","IsPullRequest":true,"CreatedAt":"2018-08-23T23:10:07","Actor":"anthonychu","Number":"108","RawContent":null,"Title":"Fix errors in projects.json","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/108","RelatedDescription":"Closed or merged PR \"Fix errors in projects.json\" (#108)"},{"Id":"353536205","IsPullRequest":true,"CreatedAt":"2018-08-23T23:09:07","Actor":"jkonicki","Number":"109","RawContent":null,"Title":"Add Steeltoe to the project listing","State":"closed","Body":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks.","Url":"https://github.com/dotnet/foundation/pull/109","RelatedDescription":"Closed or merged PR \"Add Steeltoe to the project listing\" (#109)"},{"Id":"339545098","IsPullRequest":true,"CreatedAt":"2018-08-17T23:19:54","Actor":"slide","Number":"105","RawContent":null,"Title":"Add DLR/IronPython2/IronPython3","State":"closed","Body":"Add DLR/IronPython2/IronPython3 to project list.","Url":"https://github.com/dotnet/foundation/pull/105","RelatedDescription":"Closed or merged PR \"Add DLR/IronPython2/IronPython3\" (#105)"},{"Id":"336936558","IsPullRequest":false,"CreatedAt":"2018-08-07T07:06:40","Actor":"tomkerkhove","Number":"104","RawContent":null,"Title":"About still mentions CodePlex","State":"closed","Body":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?","Url":"https://github.com/dotnet/foundation/issues/104","RelatedDescription":"Closed issue \"About still mentions CodePlex\" (#104)"},{"Id":"340355507","IsPullRequest":false,"CreatedAt":"2018-07-11T18:28:16","Actor":"Eilon","Number":"107","RawContent":null,"Title":"Links to .NET Foundation web site use HTTP instead of HTTPS","State":"open","Body":"It appears that HTTPS works just fine: https://www.dotnetfoundation.org/\r\n\r\nBut the links at these places use HTTP:\r\n1. The link in the header of https://github.com/dotnet/home\r\n2. The link in the header of https://github.com/dotnet\r\n3. Some links in https://github.com/dotnet/home/blob/master/README.md (both to .NET Foundation, and a GitHub link to another project)\r\n\r\nThese links should all change to HTTPS.","Url":"https://github.com/dotnet/foundation/issues/107","RelatedDescription":"Open issue \"Links to .NET Foundation web site use HTTP instead of HTTPS\" (#107)"},{"Id":"340126921","IsPullRequest":false,"CreatedAt":"2018-07-11T07:41:25","Actor":"glatzert","Number":"106","RawContent":null,"Title":"Updates are not requested from local WSUS","State":"open","Body":"The Team somewhen Mention, that fixes should be installed automatically, if .NET Core is on a Windows Server.\r\nThis seems not to work. What are the prerequisits for this to be working?","Url":"https://github.com/dotnet/foundation/issues/106","RelatedDescription":"Open issue \"Updates are not requested from local WSUS\" (#106)"},{"Id":"326192782","IsPullRequest":true,"CreatedAt":"2018-05-24T16:33:09","Actor":"danmosemsft","Number":"103","RawContent":null,"Title":"Add ML.NET to readme","State":"closed","Body":"cc @shauheen @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/103","RelatedDescription":"Closed or merged PR \"Add ML.NET to readme\" (#103)"},{"Id":"279475345","IsPullRequest":true,"CreatedAt":"2018-05-18T19:10:06","Actor":"heiligerdankgesang","Number":"92","RawContent":null,"Title":"Remove contact email from system.drawing.md","State":"closed","Body":"Contact email is outdated. Mono-project site's community section has better, more up-to-date information.","Url":"https://github.com/dotnet/foundation/pull/92","RelatedDescription":"Closed or merged PR \"Remove contact email from system.drawing.md\" (#92)"},{"Id":"285274998","IsPullRequest":true,"CreatedAt":"2018-05-18T19:09:35","Actor":"onovotny","Number":"93","RawContent":null,"Title":"Add Humanizer","State":"closed","Body":"Onboarding Humanizer: https://github.com/Humanizr/Humanizer/issues/682","Url":"https://github.com/dotnet/foundation/pull/93","RelatedDescription":"Closed or merged PR \"Add Humanizer\" (#93)"},{"Id":"286511421","IsPullRequest":true,"CreatedAt":"2018-05-18T19:07:08","Actor":"ctaggart","Number":"94","RawContent":null,"Title":"add SourceLink","State":"closed","Body":"Adding SourceLink to the project list as per the checklist https://github.com/ctaggart/SourceLink/issues/138","Url":"https://github.com/dotnet/foundation/pull/94","RelatedDescription":"Closed or merged PR \"add SourceLink\" (#94)"},{"Id":"288415599","IsPullRequest":true,"CreatedAt":"2018-05-18T19:06:48","Actor":"bfistein","Number":"95","RawContent":null,"Title":"Fix broken logo URL","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/95","RelatedDescription":"Closed or merged PR \"Fix broken logo URL\" (#95)"},{"Id":"288749196","IsPullRequest":true,"CreatedAt":"2018-05-18T19:06:24","Actor":"galatrash","Number":"96","RawContent":null,"Title":"Adding DNN Platform.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/96","RelatedDescription":"Closed or merged PR \"Adding DNN Platform.\" (#96)"},{"Id":"294070713","IsPullRequest":true,"CreatedAt":"2018-05-18T19:06:02","Actor":"karann-msft","Number":"98","RawContent":null,"Title":"Updates to reflect the latest information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/98","RelatedDescription":"Closed or merged PR \"Updates to reflect the latest information\" (#98)"},{"Id":"316146229","IsPullRequest":true,"CreatedAt":"2018-05-18T19:05:34","Actor":"Cheesebaron","Number":"100","RawContent":null,"Title":"Create mvvmcross.md","State":"closed","Body":"Added MvvmCross as project as part of on-boarding.\r\n\r\nhttps://github.com/MvvmCross/MvvmCross/issues/2415","Url":"https://github.com/dotnet/foundation/pull/100","RelatedDescription":"Closed or merged PR \"Create mvvmcross.md\" (#100)"},{"Id":"321003666","IsPullRequest":true,"CreatedAt":"2018-05-18T19:05:07","Actor":"shauheen","Number":"102","RawContent":null,"Title":"Update projects.json adding MLNET","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/102","RelatedDescription":"Closed or merged PR \"Update projects.json adding MLNET\" (#102)"},{"Id":"321003407","IsPullRequest":true,"CreatedAt":"2018-05-18T19:04:23","Actor":"shauheen","Number":"101","RawContent":null,"Title":"Create mlnet.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/101","RelatedDescription":"Closed or merged PR \"Create mlnet.md\" (#101)"},{"Id":"293777118","IsPullRequest":true,"CreatedAt":"2018-03-29T07:03:03","Actor":"mairaw","Number":"97","RawContent":null,"Title":"update CLA PDF link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/97","RelatedDescription":"Closed or merged PR \"update CLA PDF link\" (#97)"},{"Id":"307656482","IsPullRequest":false,"CreatedAt":"2018-03-22T14:02:36","Actor":"vvavrychuk","Number":"99","RawContent":null,"Title":"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux ","State":"open","Body":"On the page http://www.microsoft.com/net/learn/get-started/linux dropdown \"Linux Distribution\" has no effect on the installation instruction next to him (they are always displayed for RedHat).\r\n\r\n![screenshot from 2018-03-22 16-02-19](https://user-images.githubusercontent.com/152563/37775020-6ec5778e-2dea-11e8-9ea3-b33e26c1c4e1.png)\r\n","Url":"https://github.com/dotnet/foundation/issues/99","RelatedDescription":"Open issue \"not working \"Linux Distribution\" dropdown on http://www.microsoft.com/net/learn/get-started/linux \" (#99)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"390485366","IsPullRequest":true,"CreatedAt":"2018-12-13T04:29:48","Actor":"stephentoub","Number":"21520","RawContent":null,"Title":"Suppress unused warnings for events raised by the VM","State":"closed","Body":"Fixes https://github.com/dotnet/coreclr/issues/21516\r\ncc: @jkotas, @BruceForstall ","Url":"https://github.com/dotnet/coreclr/pull/21520","RelatedDescription":"Closed or merged PR \"Suppress unused warnings for events raised by the VM\" (#21520)"},{"Id":"390476478","IsPullRequest":false,"CreatedAt":"2018-12-13T04:29:48","Actor":"BruceForstall","Number":"21516","RawContent":null,"Title":"Warnings in System.Private.CoreLib build","State":"closed","Body":"There are new warnings in the System.Private.CoreLib build:\r\n```\r\n07:07:14 src\\System\\AppContext.cs(81,60): warning CS0067: The event 'AppContext.UnhandledException' is never used [D:\\j\\workspace\\checked_windo---14fb495b\\src\\System.Private.CoreLib\\System.Private.CoreLib.csproj]\r\n07:07:14 src\\System\\AppContext.cs(83,80): warning CS0067: The event 'AppContext.FirstChanceException' is never used [D:\\j\\workspace\\checked_windo---14fb495b\\src\\System.Private.CoreLib\\System.Private.CoreLib.csproj]\r\n```\r\n\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/checked_windows_nt/10934/consoleFull\r\n\r\nThis appears to be due to https://github.com/dotnet/coreclr/pull/21460\r\n","Url":"https://github.com/dotnet/coreclr/issues/21516","RelatedDescription":"Closed issue \"Warnings in System.Private.CoreLib build\" (#21516)"},{"Id":"390498398","IsPullRequest":false,"CreatedAt":"2018-12-13T03:04:24","Actor":"yanzhenms","Number":"21521","RawContent":null,"Title":"[Android] Segmentation fault in libcoreclr.so","State":"open","Body":"Hi, after followed this tutorial https://github.com/qmfrederik/coredroid, I got a lot of binaries successfull. I pushed them to Android /data/local/tmp/ and try to run a HelloWorld sample. It doesn't show \"Hello, world\" but gives me a \"segmentation fault in libcoreclr.so\". \r\n\r\n```\r\nHWNXT:/data/local/tmp/hello1 $ ../dotnet/corerun  hello\r\nWARNING: linker: /data/local/tmp/dotnet/libcoreclr.so: unused DT entry: type 0xf arg 0xeba\r\nSegmentation fault\r\n```\r\n\r\nAre there pre-built binaries or docker for Android cross built so I can save some time?\r\n\r\nThanks~","Url":"https://github.com/dotnet/coreclr/issues/21521","RelatedDescription":"Open issue \"[Android] Segmentation fault in libcoreclr.so\" (#21521)"},{"Id":"390480387","IsPullRequest":false,"CreatedAt":"2018-12-13T01:30:56","Actor":"BruceForstall","Number":"21519","RawContent":null,"Title":"build warning CS0184: The given expression is never of the provided ('I<object>') type","State":"open","Body":"Build warning:\r\n\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/checked_windows_nt/10934/consoleFull\r\n\r\n```\r\ntests.cs(90,16): warning CS0184: The given expression is never of the provided ('I<object>') type [D:\\j\\workspace\\checked_windo---14fb495b\\tests\\src\\JIT\\opt\\Casts\\tests.csproj]\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/21519","RelatedDescription":"Open issue \"build warning CS0184: The given expression is never of the provided ('I<object>') type\" (#21519)"},{"Id":"390479964","IsPullRequest":true,"CreatedAt":"2018-12-13T01:28:39","Actor":"AndyAyersMS","Number":"21518","RawContent":null,"Title":"JIT: align Tier1 methods at 16 byte boundaries for xarch [WIP]","State":"open","Body":"Align Tier1, small and IBC hot methods to 16 byte boundaries for x64 and x86.\r\nConsensus from various folks I polled was that this isn't as helpful for arm\r\narchitectures, so for now this is xarch only.\r\n\r\nThis ensures that instruction prefetch pulls in as much code as possible.\r\n\r\nIt should also improve performance stability in some benchmarks, as well as\r\nopening the door for possible loop-top aligment padding.\r\n\r\nResolves #16873.","Url":"https://github.com/dotnet/coreclr/pull/21518","RelatedDescription":"Open PR \"JIT: align Tier1 methods at 16 byte boundaries for xarch [WIP]\" (#21518)"},{"Id":"390479415","IsPullRequest":false,"CreatedAt":"2018-12-13T01:26:08","Actor":"BruceForstall","Number":"21517","RawContent":null,"Title":"Warnings in test build: CS0618: 'UnmanagedType.Struct' is obsolete","State":"open","Body":"https://ci.dot.net/job/dotnet_coreclr/job/master/view/x64/job/checked_windows_nt/10934/consoleFull\r\n\r\n```\r\nExplicitLayout.cs(20,36): warning CS0618: 'UnmanagedType.Struct' is obsolete: 'Applying UnmanagedType.Struct is unnecessary when marshalling a struct. Support for UnmanagedType.Struct when marshalling a reference type may be unavailable in future releases.' [D:\\j\\workspace\\checked_windo---14fb495b\\tests\\src\\JIT\\Methodical\\structs\\ExplicitLayout.csproj]\r\nExplicitLayout.cs(23,37): warning CS0618: 'UnmanagedType.Struct' is obsolete: 'Applying UnmanagedType.Struct is unnecessary when marshalling a struct. Support for UnmanagedType.Struct when marshalling a reference type may be unavailable in future releases.' [D:\\j\\workspace\\checked_windo---14fb495b\\tests\\src\\JIT\\Methodical\\structs\\ExplicitLayout.csproj]\r\nexplicitStruct_oddSize.cs(16,33): warning CS0618: 'UnmanagedType.VariantBool' is obsolete: 'Marshalling as VariantBool may be unavailable in future releases.' [D:\\j\\workspace\\checked_windo---14fb495b\\tests\\src\\Loader\\classloader\\explicitlayout\\Regressions\\298006\\explicitStruct_oddSize.csproj]\r\nmanagedcom.cs(8,17): warning CS0618: 'ClassInterfaceType.AutoDual' is obsolete: 'Support for IDispatch may be unavailable in future releases.' [D:\\j\\workspace\\checked_windo---14fb495b\\tests\\src\\baseservices\\exceptions\\regressions\\v4.0\\706099\\ManagedCom.csproj]\r\nStackCommitCommon.cs(17,60): warning CS0618: 'UnmanagedType.Struct' is obsolete: 'Applying UnmanagedType.Struct is unnecessary when marshalling a struct. Support for UnmanagedType.Struct when marshalling a reference type may be unavailable in future releases.' [D:\\j\\workspace\\checked_windo---14fb495b\\tests\\src\\baseservices\\threading\\commitstackonlyasneeded\\DefaultStackCommit.csproj]\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/21517","RelatedDescription":"Open issue \"Warnings in test build: CS0618: 'UnmanagedType.Struct' is obsolete\" (#21517)"},{"Id":"390443462","IsPullRequest":true,"CreatedAt":"2018-12-13T01:11:36","Actor":"briansull","Number":"21512","RawContent":null,"Title":"Fix for PMI assert:  'vnWx != NoVN'","State":"closed","Body":"This assert can fire when rhsVNPair is still set to NoVN, because we set isNewUniq to true and didn't set up rhsVNPair .\r\n \r\nThis fix reorders the check for isNewUniq, so that we avoid calling vnPairApplySelectorsAssign when we will assign the rhsVNPair to  a new unique value number.\r\n\r\nFixes VSO 750014\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/21512","RelatedDescription":"Closed or merged PR \"Fix for PMI assert:  'vnWx != NoVN'\" (#21512)"},{"Id":"390021409","IsPullRequest":true,"CreatedAt":"2018-12-13T00:56:09","Actor":"AndyAyersMS","Number":"21501","RawContent":null,"Title":"JIT: optimize unbox/unbox.any when type is known","State":"closed","Body":"Optimize away the unbox type test when the jit knows the type of object\r\nbeing unboxed and can resolve the type comparison at jit time.\r\n\r\nCloses #14473.","Url":"https://github.com/dotnet/coreclr/pull/21501","RelatedDescription":"Closed or merged PR \"JIT: optimize unbox/unbox.any when type is known\" (#21501)"},{"Id":"390456887","IsPullRequest":true,"CreatedAt":"2018-12-12T23:43:25","Actor":"fiigii","Number":"21515","RawContent":null,"Title":"Fix hardware intrinsc API XML comments","State":"open","Body":"Fix https://github.com/dotnet/coreclr/issues/21514\r\n\r\n@BruceForstall ","Url":"https://github.com/dotnet/coreclr/pull/21515","RelatedDescription":"Open PR \"Fix hardware intrinsc API XML comments\" (#21515)"},{"Id":"390455214","IsPullRequest":false,"CreatedAt":"2018-12-12T23:36:25","Actor":"BruceForstall","Number":"21514","RawContent":null,"Title":"Warning in arm build","State":"open","Body":"https://ci.dot.net/job/dotnet_coreclr/job/master/view/arm/job/arm_cross_checked_windows_nt/4851/consoleFull\r\n```\r\n11:05:11 shared\\System\\Runtime\\Intrinsics\\X86\\Sse2.PlatformNotSupported.cs(1559,22): warning CS1570: XML comment has badly formed XML -- 'The character(s) '' cannot be used at this location.' [D:\\j\\workspace\\arm_cross_che---57645b35\\src\\System.Private.CoreLib\\System.Private.CoreLib.csproj]\r\n11:05:11 shared\\System\\Runtime\\Intrinsics\\X86\\Avx2.PlatformNotSupported.cs(742,13): warning CS1570: XML comment has badly formed XML -- 'End tag was not expected at this location.' [D:\\j\\workspace\\arm_cross_che---57645b35\\src\\System.Private.CoreLib\\System.Private.CoreLib.csproj]\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/21514","RelatedDescription":"Open issue \"Warning in arm build\" (#21514)"},{"Id":"390450306","IsPullRequest":true,"CreatedAt":"2018-12-12T23:16:34","Actor":"jkoritzinsky","Number":"21513","RawContent":null,"Title":"Throw an exception when passing strings by-value as out parameters.","State":"open","Body":"Block users from adding an `[Out]` attribute on strings and modifying them in place to avoid causing crashes with unloadability and string interning. Instead of allowing it, we'll throw a `MarshalDirectiveException`. Fixes #21506.","Url":"https://github.com/dotnet/coreclr/pull/21513","RelatedDescription":"Open PR \"Throw an exception when passing strings by-value as out parameters.\" (#21513)"},{"Id":"390426663","IsPullRequest":true,"CreatedAt":"2018-12-12T21:58:43","Actor":"AndyAyersMS","Number":"21511","RawContent":null,"Title":"JIT: avoid folding operations with relocatable immediates","State":"open","Body":"In general, don't fold operations on relocatable immediates. Only allow EQ/NE as relocation should preserve identity but not bit values or relative comparisons.\r\n\r\nCloses #21483.","Url":"https://github.com/dotnet/coreclr/pull/21511","RelatedDescription":"Open PR \"JIT: avoid folding operations with relocatable immediates\" (#21511)"},{"Id":"390352077","IsPullRequest":false,"CreatedAt":"2018-12-12T18:26:29","Actor":"BruceForstall","Number":"21510","RawContent":null,"Title":"Remove Tests.lst files","State":"open","Body":"We no longer use the smarty test runner for Windows arm32/arm64 test runs, so tests\\arm\\Tests.lst and tests\\arm64\\Tests.lst can be removed.\r\n","Url":"https://github.com/dotnet/coreclr/issues/21510","RelatedDescription":"Open issue \"Remove Tests.lst files\" (#21510)"},{"Id":"390334785","IsPullRequest":true,"CreatedAt":"2018-12-12T17:38:58","Actor":"trylek","Number":"21509","RawContent":null,"Title":"Implement GC ref map parsing and display in R2RDump","State":"open","Body":"As part of my work on CPAOT implementation of GC ref map info\r\nI have implemented decoder of the info so that it can be displayed\r\nnext to the import cell signatures.\r\n\r\nThis also uncovered one possible cause of R2RDump GcInfo-related\r\ncrashes that were observed by Andon and myself. It looks like Amy\r\nin her initial implementation confused the various GC encodings\r\nand used GC info to parse the import section auxiliary data which\r\nactually contains the GC ref map info.\r\n\r\nAs part of this work I have experimentally tried out runtime\r\narchitecture virtualization in the trimmed-down version of\r\nTransitionBlock used by the GC ref map decoder and I'm relatively\r\nhappy with the result so I'm going to investigate whether we might\r\nbe able to do something similar in the compiler and avoid merging\r\nin the four preprocessed versions of the relevant files.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/coreclr/pull/21509","RelatedDescription":"Open PR \"Implement GC ref map parsing and display in R2RDump\" (#21509)"},{"Id":"390216510","IsPullRequest":true,"CreatedAt":"2018-12-12T13:03:17","Actor":"dotnet-maestro[bot]","Number":"21508","RawContent":null,"Title":"Update dependency files","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18611.14\r\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18611.14\r\n\r\n","Url":"https://github.com/dotnet/coreclr/pull/21508","RelatedDescription":"Open PR \"Update dependency files\" (#21508)"},{"Id":"390161496","IsPullRequest":true,"CreatedAt":"2018-12-12T10:32:10","Actor":"janvorli","Number":"21507","RawContent":null,"Title":"Remove invalid test b21296","State":"open","Body":"This test was doing in-place modification of a managed string using\r\nunsafe code which breaks string interning.","Url":"https://github.com/dotnet/coreclr/pull/21507","RelatedDescription":"Open PR \"Remove invalid test b21296\" (#21507)"},{"Id":"390151343","IsPullRequest":false,"CreatedAt":"2018-12-12T10:07:05","Actor":"janvorli","Number":"21506","RawContent":null,"Title":"Interop\\StringMarshalling\\LPTSTR\\LPTSTRTest Marshal_InOut modifies managed string inline","State":"open","Body":"This is another case of a test that modifies the passed in string inline and thus breaks string interning. This test needs to be fixed or removed.","Url":"https://github.com/dotnet/coreclr/issues/21506","RelatedDescription":"Open issue \"Interop\\StringMarshalling\\LPTSTR\\LPTSTRTest Marshal_InOut modifies managed string inline\" (#21506)"},{"Id":"390121294","IsPullRequest":true,"CreatedAt":"2018-12-12T08:48:32","Actor":"kvochko","Number":"21505","RawContent":null,"Title":"Generate ARM CFIs in prolog","State":"open","Body":"Since ARM CFI codes are generated in epilog, they are absent for methods/funclets without an epilog, so these methods can't be unwound in CoreRT ( https://github.com/dotnet/corert/issues/6626 ). It's better to generate CFIs in prolog.\r\nCC @jkotas @alpencolt ","Url":"https://github.com/dotnet/coreclr/pull/21505","RelatedDescription":"Open PR \"Generate ARM CFIs in prolog\" (#21505)"},{"Id":"390095275","IsPullRequest":false,"CreatedAt":"2018-12-12T07:19:04","Actor":"AriNuer","Number":"21504","RawContent":null,"Title":"[arm64/linux] Assertion `listp->slotinfo[cnt].gen <= GL(dl_tls_generation)' failed","State":"open","Body":"**Job:**\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/arm64_cross_checked_ubuntu16.04_r2r_jitstressregs2_tst/14/\r\n**Failed test:**\r\nJIT_Regression._CLR_x86_JIT_V1_M09_5_PDC_b16039_b16039_b16039_._CLR_x86_JIT_V1_M09_5_PDC_b16039_b16039_b16039_sh\r\n\r\n**Failed log:**\r\n```\r\nJIT_Regression._CLR_x86_JIT_V1_M09_5_PDC_b16039_b16039_b16039_._CLR_x86_JIT_V1_M09_5_PDC_b16039_b16039_b16039_sh [FAIL]\r\n        Inconsistency detected by ld.so: dl-tls.c: 493: _dl_allocate_tls_init: Assertion `listp->slotinfo[cnt].gen <= GL(dl_tls_generation)' failed!\r\n        /n/nReturn code:      1/nRaw output file:      /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_r2r_jitstressregs2_tst/bin/tests/Linux.arm64.Checked/JIT/Regression/Reports/JIT.Regression/CLR-x86-JIT/V1-M09.5-PDC/b16039/b16039/b16039.output.txt/nRaw output:/nBEGIN EXECUTION\r\n        in takeLock\r\n        /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_r2r_jitstressregs2_tst/bin/tests/Linux.arm64.Checked/Tests/Core_Root/crossgen /Platform_Assemblies_Paths /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_r2r_jitstressregs2_tst/bin/tests/Linux.arm64.Checked/Tests/Core_Root:/home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_r2r_jitstressregs2_tst/bin/tests/Linux.arm64.Checked/JIT/Regression/CLR-x86-JIT/V1-M09.5-PDC/b16039/b16039/IL:/home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_r2r_jitstressregs2_tst/bin/tests/Linux.arm64.Checked/JIT/Regression/CLR-x86-JIT/V1-M09.5-PDC/b16039/b16039 /in b16039.org /out b16039.exe\r\n        Microsoft (R) CoreCLR Native Image Generator - Version 4.5.30319.0\r\n        Copyright (c) Microsoft Corporation.  All rights reserved.\r\n        \r\n        Native image b16039.exe generated successfully.\r\n        in ReleaseLock\r\n        in takeLock\r\n        /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_r2r_jitstressregs2_tst/bin/tests/Linux.arm64.Checked/Tests/Core_Root/corerun b16039.exe\r\n        in ReleaseLock\r\n        Expected: 100\r\n        Actual: 127\r\n        END EXECUTION - FAILED\r\n        Test Harness Exitcode is : 1\r\n        /nTo run the test:/n> set CORE_ROOT=/home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_r2r_jitstressregs2_tst/bin/tests/Linux.arm64.Checked/Tests/Core_Root/n> /home/robox/j/workspace/dotnet_coreclr/master/jitstress/arm64_cross_checked_ubuntu16.04_r2r_jitstressregs2_tst/bin/tests/Linux.arm64.Checked/JIT/Regression/CLR-x86-JIT/V1-M09.5-PDC/b16039/b16039/b16039.sh/n\r\n        Expected: True\r\n        Actual:   False\r\n        Stack Trace:\r\n          /mnt/j/workspace/dotnet_coreclr/master/arm64_cross_checked_ubuntu16.04/bin/tests/Linux.arm64.Checked/TestWrappers/JIT.Regression/JIT.Regression.XUnitWrapper.cs(5779,0): at JIT_Regression._CLR_x86_JIT_V1_M09_5_PDC_b16039_b16039_b16039_._CLR_x86_JIT_V1_M09_5_PDC_b16039_b16039_b16039_sh()\r\n```","Url":"https://github.com/dotnet/coreclr/issues/21504","RelatedDescription":"Open issue \"[arm64/linux] Assertion `listp->slotinfo[cnt].gen <= GL(dl_tls_generation)' failed\" (#21504)"},{"Id":"390037650","IsPullRequest":true,"CreatedAt":"2018-12-12T02:24:53","Actor":"dotnet-maestro-bot","Number":"21503","RawContent":null,"Title":"Update CoreClr to preview-27212-01 (master)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/21503","RelatedDescription":"Open PR \"Update CoreClr to preview-27212-01 (master)\" (#21503)"},{"Id":"390024226","IsPullRequest":true,"CreatedAt":"2018-12-12T01:19:01","Actor":"echesakovMSFT","Number":"21502","RawContent":null,"Title":"[WIP] Running and visualizing tests in AzureDevOps (Part 1)","State":"open","Body":"1. Enable Azure Pipelines reporter so the test results can be seen in-place - TestRunNamePrefix should encode all the needed information for a test run.\r\n1. Scenarios property should use comma (not semi-colon) to work on non-Windows\r\n1. Specify timeout to test jobs (the numbers are taken from netci.groovy)\r\n1. Specify timeout for Helix work items (the number is taken from buildpipeline)\r\n1. Specify helixType and helixRepo properties to the job and use _HelixType and _HelixSource variables in MSBuild project instead of defining them manually\r\n1. Limit Pri0 Checked test jobs to running against pull requests. This also should be limited in the future by build definition name (or an alternative) - so when we have PR workload selection working we can distinguish between default PR validation pipeline and custom PR triggered pipeline.\r\n\r\nExamples of the pipeline runs for:\r\n* PullRequest: https://dnceng.visualstudio.com/public/_build/results?buildId=56634\r\n* GitHub push: https://dnceng.visualstudio.com/public/_build/results?buildId=56631\r\n","Url":"https://github.com/dotnet/coreclr/pull/21502","RelatedDescription":"Open PR \"[WIP] Running and visualizing tests in AzureDevOps (Part 1)\" (#21502)"},{"Id":"390020559","IsPullRequest":false,"CreatedAt":"2018-12-12T01:01:56","Actor":"sandreenko","Number":"21500","RawContent":null,"Title":"[Regression][JitStressRegs=0x2] Assertion failed '!varDsc->lvIsRegCandidate()'","State":"open","Body":"The test started to fail 4 days ago : [ci example](https://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/arm64_cross_checked_ubuntu16.04_jitstressregs2_tst/61/).\r\n\r\ncc @dotnet/jit-contrib \r\n\r\n\"Don't struct-promote opaque vectors\"  #21314 looks like the most relevant change, @CarolEidt could you please take a look?","Url":"https://github.com/dotnet/coreclr/issues/21500","RelatedDescription":"Open issue \"[Regression][JitStressRegs=0x2] Assertion failed '!varDsc->lvIsRegCandidate()'\" (#21500)"},{"Id":"390016982","IsPullRequest":true,"CreatedAt":"2018-12-12T00:44:23","Actor":"tannergooding","Number":"21499","RawContent":null,"Title":"Removing configEnableISA and fixing up Compiler::compSetProcessor to be consistent with EEJitManager::SetCpuInfo in how ISA support checks are done","State":"open","Body":"We have multiple configuration knobs which control support for the individual HWIntrinsic ISAs and as of https://github.com/dotnet/coreclr/pull/20501, these knobs are available in release mode and meant to match the actual ISA hierarchy (such that disabling `SSE` would also disable anything dependent on `SSE`).\r\n\r\nThis PR fixes up some issues that existed around these configuration knobs to ensure that they properly follow the ISA hierarchy and resolves some issues around the `AVX` configuration knob which was pre-existing and impacted how `S.N.Vector<T>` worked.\r\n\r\nCC. @CarolEidt, @fiigii ","Url":"https://github.com/dotnet/coreclr/pull/21499","RelatedDescription":"Open PR \"Removing configEnableISA and fixing up Compiler::compSetProcessor to be consistent with EEJitManager::SetCpuInfo in how ISA support checks are done\" (#21499)"},{"Id":"390009112","IsPullRequest":true,"CreatedAt":"2018-12-12T00:08:06","Actor":"cshung","Number":"21498","RawContent":null,"Title":"[WIP] Fix the thread store lock reentrancy issue","State":"open","Body":"","Url":"https://github.com/dotnet/coreclr/pull/21498","RelatedDescription":"Open PR \"[WIP] Fix the thread store lock reentrancy issue\" (#21498)"},{"Id":"389992510","IsPullRequest":true,"CreatedAt":"2018-12-11T23:03:33","Actor":"fadimounir","Number":"21497","RawContent":null,"Title":"Change CoreLib native image to be R2R by default on all platforms","State":"open","Body":"Aslo disabling partial ngenning for s.p.corelib.","Url":"https://github.com/dotnet/coreclr/pull/21497","RelatedDescription":"Open PR \"Change CoreLib native image to be R2R by default on all platforms\" (#21497)"},{"Id":"389972340","IsPullRequest":true,"CreatedAt":"2018-12-11T22:00:39","Actor":"kouvel","Number":"21496","RawContent":null,"Title":"Update named mutex PAL tests to include case of file locks being inherited by child process","State":"open","Body":"Included case fixed by https://github.com/dotnet/coreclr/pull/21458. Fixes https://github.com/dotnet/coreclr/issues/21494.","Url":"https://github.com/dotnet/coreclr/pull/21496","RelatedDescription":"Open PR \"Update named mutex PAL tests to include case of file locks being inherited by child process\" (#21496)"},{"Id":"389939150","IsPullRequest":false,"CreatedAt":"2018-12-11T20:26:33","Actor":"fadimounir","Number":"21495","RawContent":null,"Title":"Crossgen should emit a warning when compiling assemblies with the partial NGEN flag, and no embedded IBC data","State":"open","Body":"Currently crossgen generates an output image that has no compiled method, and reports that it successfully compiled the image.\r\n\r\nRepro assembly: Microsoft.CodeAnalysis.dll ","Url":"https://github.com/dotnet/coreclr/issues/21495","RelatedDescription":"Open issue \"Crossgen should emit a warning when compiling assemblies with the partial NGEN flag, and no embedded IBC data\" (#21495)"},{"Id":"389937561","IsPullRequest":false,"CreatedAt":"2018-12-11T20:21:58","Actor":"kouvel","Number":"21494","RawContent":null,"Title":"Update named mutex PAL tests to include case of file locks being inherited by child process","State":"open","Body":"Include case fixed by https://github.com/dotnet/coreclr/pull/21458","Url":"https://github.com/dotnet/coreclr/issues/21494","RelatedDescription":"Open issue \"Update named mutex PAL tests to include case of file locks being inherited by child process\" (#21494)"},{"Id":"389937396","IsPullRequest":true,"CreatedAt":"2018-12-11T20:21:26","Actor":"briansull","Number":"21493","RawContent":null,"Title":"[release/2.2] Port the fix for JIT IMPL_LIMITATION for EntityFramework ","State":"open","Body":"Port the following two fixes that address the JIT's IMPL_LIMITATION associated with offsets > 255 for LclVar with LclVar numbers above 32767.\r\n\r\nAllocate the lvaOutgoingArgSpaceVar early #17793 \r\nThe SIMD types must use the struct code path #19065 \r\n","Url":"https://github.com/dotnet/coreclr/pull/21493","RelatedDescription":"Open PR \"[release/2.2] Port the fix for JIT IMPL_LIMITATION for EntityFramework \" (#21493)"},{"Id":"389934350","IsPullRequest":true,"CreatedAt":"2018-12-11T20:12:48","Actor":"hoyosjs","Number":"21492","RawContent":null,"Title":"[WIP][CI test] Building with Arcade initialized tools","State":"open","Body":"Testing tooling fetching with arcade doesn't break different build scenarios.","Url":"https://github.com/dotnet/coreclr/pull/21492","RelatedDescription":"Open PR \"[WIP][CI test] Building with Arcade initialized tools\" (#21492)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"390362977","IsPullRequest":false,"CreatedAt":"2018-12-12T22:51:13","Actor":"ap0llo","Number":"10467","RawContent":null,"Title":"dotnet pack: Cannot change PackageId based on TFM","State":"closed","Body":"## Scenario\r\n\r\nI'm tyring to package up a console application / tool targeting both `netcoreapp2.1` and `net461`. For .NET Core I want to provide the tool as global tool, for .NET framework, the tool should be packaged as a \"tools\" package (a plain `.exe` inside the `tools` directory). I'd like to create two packages, one for each target platform.\r\n\r\n## Steps to reproduce\r\n\r\n1. Create a new console application: `dotnet new console`\r\n2. Add `net461` as additional target framework\r\n3. Set `PackageId` using a conditional `PropertyGroup`\r\n4. Run `dotnet build` and `dotnet pack`\r\n\r\nProject file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFrameworks>net461;netcoreapp2.1</TargetFrameworks>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\" '$(TargetFramework)' == 'net461' \">\r\n    <IsTool>true</IsTool>    \r\n    <PackageId>Package_MultiTargeted_NetFramework</PackageId>\r\n  </PropertyGroup>\r\n\r\n  <PropertyGroup Condition=\" '$(TargetFramework)' == 'netcoreapp2.1' \">\r\n    <PackAsTool>true</PackAsTool>\r\n    <PackageId>Package_MultiTargeted_NetCore</PackageId>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n(Full repo, including a Framework-only and core-only tool can be found [here](https://github.com/ap0llo/repro-dotnet-pack-targetframework-dependent-packageid))\r\n\r\n\r\n## Expected  behavior\r\n`dotnet pack` creates two NuGet packages:\r\n\r\n- one package named `Package_MultiTargeted_NetFramework` containing only the .NET Framework exe inside the `tools` folder\r\n- a second package named `Package_MultiTargeted_NetCore` containing the .NET Core global tool (inside the `tools\\netcoreapp2.1\\any` folder)\r\n\r\n## Actual behavior\r\n\r\nA single package named `MultiTargetedTool` is created, containing \r\n\r\n- the .NET Core global tool\r\n- A `net461` build of the project inside the `lib` folder\r\n- A `netcoreapp2.1` build of the proejct inside the `lib` folder\r\n\r\n![image](https://user-images.githubusercontent.com/2821818/49891736-8c9c8080-fe47-11e8-847e-e775f3d6231e.png)\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.101\r\n Commit:    236713b0b7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.101\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.101 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10467","RelatedDescription":"Closed issue \"dotnet pack: Cannot change PackageId based on TFM\" (#10467)"},{"Id":"390396402","IsPullRequest":false,"CreatedAt":"2018-12-12T20:29:57","Actor":"dagood","Number":"10468","RawContent":null,"Title":"Add 'dotnet tool install' failure potential reason: 'tool requires a runtime that is not installed'","State":"open","Body":"From https://github.com/dotnet/source-build/issues/926#issuecomment-446345298:\r\n\r\n> [@tmds] 'requires a runtime that is not installed' should be added to 'This failure may have been caused by'.\r\n\r\nhttps://github.com/dotnet/cli/blob/22cbfcb49bd9a38292ac6f66a14158b426daefdb/src/dotnet/commands/dotnet-tool/install/LocalizableStrings.resx#L182-L189\r\n\r\nFailure context:\r\n\r\n```\r\n$ dotnet tool install -g dotnet-dev-certs\r\nerror NU1202: Package dotnet-dev-certs 2.2.0 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1) / any. Package dotnet-dev-certs 2.2.0 supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2) / any\r\nThe tool package could not be restored.\r\nTool 'dotnet-dev-certs' failed to install. This failure may have been caused by:\r\n\r\n* You are attempting to install a preview release and did not use the --version option to specify the version.\r\n* A package by this name was found, but it was not a .NET Core tool.\r\n* The required NuGet feed cannot be accessed, perhaps because of an Internet connection problem.\r\n* You mistyped the name of the tool.\r\n```\r\n\r\n/cc @wli3 ","Url":"https://github.com/dotnet/cli/issues/10468","RelatedDescription":"Open issue \"Add 'dotnet tool install' failure potential reason: 'tool requires a runtime that is not installed'\" (#10468)"},{"Id":"390037621","IsPullRequest":false,"CreatedAt":"2018-12-12T18:13:44","Actor":"xavierjohn","Number":"10465","RawContent":null,"Title":"dotnet 2.1.6 publish with --self-contained false produces apphost.exe that does not work","State":"closed","Body":"Trying to publish a .net core exe without the runtime using the following command\r\n\r\n## Steps to reproduce\r\ndotnet publish --configuration Release --runtime win7-x64 --self-contained false --output c:\\outputfolder\r\n\r\n## Expected  behavior\r\nProduces a {application}.exe\r\n\r\n## Actual behavior\r\nProduces apphost.exe that does not work.\r\n\r\nI can run the program using\r\ndotnet.exe application.dll\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.17134\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\2.1.500\\\r\n\r\nHost (useful for support):\r\nVersion: 2.1.6\r\nCommit: 3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10465","RelatedDescription":"Closed issue \"dotnet 2.1.6 publish with --self-contained false produces apphost.exe that does not work\" (#10465)"},{"Id":"390254603","IsPullRequest":false,"CreatedAt":"2018-12-12T14:38:29","Actor":"nguerrera","Number":"10466","RawContent":null,"Title":"Issues compiling after installing SDK 2.2","State":"open","Body":"_From @SkinnySackboy on December 11, 2018 15:45_\n\nHi,\r\n\r\nHaving already been using .NET Core 2.0 and 2.1 in production already, earlier this week we decided to start upgrading to .NET Core 2.2. On our machines (i.e. in Visual Studio), so far so good - we installed the SDK without having modified any projects and everything still works as it always used to.\r\n\r\nOn our TeamCity agents, we decided to do the same as we have in the past, i.e. to install the .NET Core 2.2 SDK. This is where the interesting problems start. Suddenly, our existing solutions which contain a .NET Core 2.1 project (event unit tests) started failing with the following error:\r\n\r\n**error NU1202: Package Microsoft.NETCore.App 2.2.0 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1). Package Microsoft.NETCore.App 2.2.0 supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2)**\r\n\r\nThis does not happen from Visual Studio - it only seems to happen when using the dotnet CLI. It gets even more interesting as if we first compile from Visual Studio and subsequently run dotnet build from the command line, it all works. If however you delete the bin/obj folders, dotnet build from the command line fails with the previous error.\r\n\r\nHas anyone else come across this issue, as I was not expecting the mere presence of the 2.2 SDK to suddenly cause all previous builds still targeting .NET Core 2.1 to start failing?\r\n\r\nThanks in advance\n\n_Copied from original issue: dotnet/core#2130_","Url":"https://github.com/dotnet/cli/issues/10466","RelatedDescription":"Open issue \"Issues compiling after installing SDK 2.2\" (#10466)"},{"Id":"390022633","IsPullRequest":false,"CreatedAt":"2018-12-12T05:52:07","Actor":"donhuvy","Number":"10464","RawContent":null,"Title":"No webpage was found for the web address: https://localhost:5001/","State":"closed","Body":"## Steps to reproduce\r\nUse Windows 10 Pro, Visual studio 2019 Preview\r\n```\r\ndotnet new webapi\r\ndotnet restore\r\ndotnet run\r\n```\r\n\r\n## Expected  behavior\r\nhttps://localhost:5001/ Show webpage\r\n\r\n## Actual behavior\r\nhttps://localhost:5001/ Error\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\nC:\\Users\\donhuvy>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.600-preview-009426\r\n Commit:    48b4f2105d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.16299\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.600-preview-009426\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.6\r\n  Commit:  3f4f8eebd8\r\n\r\n.NET Core SDKs installed:\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n<img width=\"960\" alt=\"dotnet1\" src=\"https://user-images.githubusercontent.com/1328316/49840337-8d9cc600-fde5-11e8-9969-957e01a3e58a.png\">\r\n<img width=\"800\" alt=\"dotnet2\" src=\"https://user-images.githubusercontent.com/1328316/49840338-8e355c80-fde5-11e8-8c46-d314285e44c2.png\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10464","RelatedDescription":"Closed issue \"No webpage was found for the web address: https://localhost:5001/\" (#10464)"},{"Id":"389996026","IsPullRequest":true,"CreatedAt":"2018-12-11T23:16:47","Actor":"jainaashish","Number":"10463","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview1.5707 into cli","State":"open","Body":"Insert NuGet Build 5.0.0-preview1.5707 into cli","Url":"https://github.com/dotnet/cli/pull/10463","RelatedDescription":"Open PR \"Insert NuGet Build 5.0.0-preview1.5707 into cli\" (#10463)"},{"Id":"389836381","IsPullRequest":true,"CreatedAt":"2018-12-11T17:38:13","Actor":"nugetlurker","Number":"10462","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview1.5707 into cli","State":"closed","Body":"Insert NuGet Build 5.0.0-preview1.5707 into cli release/2.2.2xx branch","Url":"https://github.com/dotnet/cli/pull/10462","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-preview1.5707 into cli\" (#10462)"},{"Id":"388965434","IsPullRequest":false,"CreatedAt":"2018-12-11T17:35:59","Actor":"taori","Number":"10454","RawContent":null,"Title":"CS0118 if folder name ends with \"Application\"","State":"closed","Body":"## Steps to reproduce\r\n- create folder like Company.Desktop.Application\r\n- enter folder\r\n- dotnet new wpf\r\n- dotnet run\r\n\r\n## Expected  behavior\r\nApplication runs\r\n\r\n## Actual behavior\r\nApplication can't compile because of CS0118\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\ndotnet --info\r\n\r\nMicrosoft Windows [Version 6.3.9600]\r\n(c) 2013 Microsoft Corporation. Alle Rechte vorbehalten.\r\n\r\n.NET Core SDK (gemäß \"global.json\"):\r\n Version:   3.0.100-preview-009812\r\n Commit:    e3abf6e935\r\n\r\nLaufzeitumgebung:\r\n OS Name:     Windows\r\n OS Version:  6.3.9600\r\n OS Platform: Windows\r\n RID:         win81-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009812\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27122-01\r\n  Commit:  00c5c8bc40\r\n\r\n.NET Core SDKs installed:\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview-009812 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18579-0056 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27122-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-alpha-27128-4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10454","RelatedDescription":"Closed issue \"CS0118 if folder name ends with \"Application\"\" (#10454)"},{"Id":"389836363","IsPullRequest":true,"CreatedAt":"2018-12-11T16:05:45","Actor":"nugetlurker","Number":"10461","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview1.5707 into cli","State":"open","Body":"Insert NuGet Build 5.0.0-preview1.5707 into cli release/2.1.6xx branch","Url":"https://github.com/dotnet/cli/pull/10461","RelatedDescription":"Open PR \"Insert NuGet Build 5.0.0-preview1.5707 into cli\" (#10461)"},{"Id":"389754456","IsPullRequest":true,"CreatedAt":"2018-12-11T13:03:33","Actor":"dotnet-maestro[bot]","Number":"10460","RawContent":null,"Title":"Update dependency files","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18610.4\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18611.14\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10460","RelatedDescription":"Open PR \"Update dependency files\" (#10460)"},{"Id":"389447196","IsPullRequest":false,"CreatedAt":"2018-12-10T19:17:18","Actor":"seancpeters","Number":"10459","RawContent":null,"Title":"dotnet tool aspnet-codegenerator looks for executable at wrong path","State":"open","Body":"_From @tbureck on December 8, 2018 23:16_\n\nI'm currently following [this guide](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/scaffold-identity?view=aspnetcore-2.1&tabs=netcore-cli#scaffold-identity-into-an-empty-project) in order to scaffold Identity in my existing ASP.NET Core project. When trying to run the scaffolder command with the help option, though, I'm getting this error message:\r\n\r\n```\r\n> dotnet aspnet-codegenerator --help\r\nThe application to execute does not exist: 'C:\\Users\\Tim\\.dotnet\\tools\\.store\\dotnet-aspnet-codegenerator\\2.2.0-rtm-35687\\dotnet-aspnet-codegener\r\nator\\2.2.0-rtm-35687\\tools\\netcoreapp2.1\\any\\dotnet-aspnet-codegenerator.dll'.\r\n```\r\n\r\nI've checked the .dotnet\\tools\\.store directory and the tool seems to be installed correctly. BUT, it is installed in a `2.2.0` directory instead of the `2.2.0-rtm-35687` directory, which dotnet tool is looking in.\r\n\r\nI've opened [a thread on Stackoverflow](https://stackoverflow.com/questions/53676499/dotnet-tool-aspnet-codegenerator-looks-for-executable-at-wrong-path) as well and someone else seems to have the same issue, which is why I'm creating this issue.\r\n\r\nWhy is it that `dotnet tool` is looking in the `2.2.0-rtm-35687` sub directory instead of the `2.2.0` where it is actually installed?\r\n\r\nEdit: my dotnet version is `2.2.100`\n\n_Copied from original issue: aspnet/Scaffolding#932_","Url":"https://github.com/dotnet/cli/issues/10459","RelatedDescription":"Open issue \"dotnet tool aspnet-codegenerator looks for executable at wrong path\" (#10459)"},{"Id":"389058322","IsPullRequest":false,"CreatedAt":"2018-12-10T17:28:27","Actor":"taori","Number":"10457","RawContent":null,"Title":"Feature request: dotnet new wpfcontrollib 3.0.0 Preview 1","State":"closed","Body":"I was able to create a control lib using dotnet new classlib, however this project lacks some attributes for wpf to bind to it properly. + at this stage it seems the targetframework has to be locked to .net461+ in order to reference PresentationCore and other relevant assemblies.\r\n\r\nIdeally that option should exist before netcore 3 is RTM","Url":"https://github.com/dotnet/cli/issues/10457","RelatedDescription":"Closed issue \"Feature request: dotnet new wpfcontrollib 3.0.0 Preview 1\" (#10457)"},{"Id":"389061467","IsPullRequest":false,"CreatedAt":"2018-12-09T20:37:20","Actor":"ConnorChristie","Number":"10458","RawContent":null,"Title":"Adding dotnet tool from custom source doesn't work on Ubuntu","State":"open","Body":"## Steps to reproduce\r\nTry installing the following tool from myget pre-release source:\r\n```\r\ndotnet tool install -g Nethereum.Generator.Console --version 1.0.2-CI-20181129-133640 --add-source https://www.myget.org/F/nethereum/api/v3/index.json\r\n```\r\n\r\n## Expected  behavior\r\n```\r\nYou can invoke the tool using the following command: Nethereum.Generator.Console\r\nTool 'nethereum.generator.console' (version '1.0.2-ci-20181129-133640') was successfully installed.\r\n```\r\n\r\n## Actual behavior\r\n```\r\nThe settings file in the tool's NuGet package is invalid: Failed to retrieve tool configuration: Could not find a part of the path '/home/vsts/.dotnet/tools/.store/nethereum.generator.console/1.0.2-ci-20181129-133640/nethereum.generator.console/1.0.2-CI-20181129-133640/tools/netcoreapp2.1/any/DotnetToolSettings.xml'.\r\nTool 'nethereum.generator.console' failed to install. Please contact the tool author for assistance.\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\n2018-12-09T20:35:08.3469399Z .NET Core SDK (reflecting any global.json):\r\n2018-12-09T20:35:08.3470064Z  Version:   2.1.500\r\n2018-12-09T20:35:08.3476095Z  Commit:    b68b931422\r\n2018-12-09T20:35:08.3476541Z \r\n2018-12-09T20:35:08.3476837Z Runtime Environment:\r\n2018-12-09T20:35:08.3477067Z  OS Name:     ubuntu\r\n2018-12-09T20:35:08.3477314Z  OS Version:  16.04\r\n2018-12-09T20:35:08.3477560Z  OS Platform: Linux\r\n2018-12-09T20:35:08.6814327Z  RID:         ubuntu.16.04-x64\r\n2018-12-09T20:35:08.7161135Z  Base Path:   /usr/share/dotnet/sdk/2.1.500/\r\n2018-12-09T20:35:08.7208165Z \r\n2018-12-09T20:35:08.7208445Z Host (useful for support):\r\n2018-12-09T20:35:08.7208576Z   Version: 2.1.6\r\n2018-12-09T20:35:08.7208682Z   Commit:  3f4f8eebd8\r\n2018-12-09T20:35:08.7208828Z \r\n2018-12-09T20:35:08.7208939Z .NET Core SDKs installed:\r\n2018-12-09T20:35:08.7209048Z   1.0.4 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7209249Z   1.1.4 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7209363Z   1.1.5 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7209467Z   1.1.7 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7209605Z   1.1.8 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7209717Z   1.1.9 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7209819Z   1.1.10 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7209979Z   1.1.11 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210092Z   2.0.0 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210194Z   2.0.3 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210295Z   2.1.2 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210573Z   2.1.4 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210733Z   2.1.100 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210769Z   2.1.101 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210859Z   2.1.102 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210934Z   2.1.103 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7210966Z   2.1.104 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211014Z   2.1.105 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211045Z   2.1.200 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211123Z   2.1.201 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211156Z   2.1.202 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211185Z   2.1.300 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211214Z   2.1.301 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211296Z   2.1.302 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211326Z   2.1.400 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211355Z   2.1.401 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211603Z   2.1.402 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211640Z   2.1.403 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211676Z   2.1.500 [/usr/share/dotnet/sdk]\r\n2018-12-09T20:35:08.7211700Z \r\n2018-12-09T20:35:08.7211738Z .NET Core runtimes installed:\r\n2018-12-09T20:35:08.7211824Z   Microsoft.AspNetCore.All 2.1.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2018-12-09T20:35:08.7211867Z   Microsoft.AspNetCore.All 2.1.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2018-12-09T20:35:08.7212087Z   Microsoft.AspNetCore.All 2.1.2 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2018-12-09T20:35:08.7212174Z   Microsoft.AspNetCore.All 2.1.3 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2018-12-09T20:35:08.7212215Z   Microsoft.AspNetCore.All 2.1.4 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2018-12-09T20:35:08.7212365Z   Microsoft.AspNetCore.All 2.1.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2018-12-09T20:35:08.7212451Z   Microsoft.AspNetCore.All 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n2018-12-09T20:35:08.7212491Z   Microsoft.AspNetCore.App 2.1.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2018-12-09T20:35:08.7212529Z   Microsoft.AspNetCore.App 2.1.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2018-12-09T20:35:08.7212609Z   Microsoft.AspNetCore.App 2.1.2 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2018-12-09T20:35:08.7212650Z   Microsoft.AspNetCore.App 2.1.3 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2018-12-09T20:35:08.7212697Z   Microsoft.AspNetCore.App 2.1.4 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2018-12-09T20:35:08.7212736Z   Microsoft.AspNetCore.App 2.1.5 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2018-12-09T20:35:08.7212819Z   Microsoft.AspNetCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n2018-12-09T20:35:08.7212864Z   Microsoft.NETCore.App 1.0.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7212904Z   Microsoft.NETCore.App 1.0.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7212990Z   Microsoft.NETCore.App 1.0.8 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213029Z   Microsoft.NETCore.App 1.0.9 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213067Z   Microsoft.NETCore.App 1.0.10 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213147Z   Microsoft.NETCore.App 1.0.11 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213196Z   Microsoft.NETCore.App 1.0.12 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213234Z   Microsoft.NETCore.App 1.0.13 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213311Z   Microsoft.NETCore.App 1.1.2 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213351Z   Microsoft.NETCore.App 1.1.4 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213397Z   Microsoft.NETCore.App 1.1.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213507Z   Microsoft.NETCore.App 1.1.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213547Z   Microsoft.NETCore.App 1.1.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213585Z   Microsoft.NETCore.App 1.1.8 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213624Z   Microsoft.NETCore.App 1.1.9 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213706Z   Microsoft.NETCore.App 1.1.10 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213753Z   Microsoft.NETCore.App 2.0.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213791Z   Microsoft.NETCore.App 2.0.3 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213873Z   Microsoft.NETCore.App 2.0.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213920Z   Microsoft.NETCore.App 2.0.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7213957Z   Microsoft.NETCore.App 2.0.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214043Z   Microsoft.NETCore.App 2.0.9 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214083Z   Microsoft.NETCore.App 2.1.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214122Z   Microsoft.NETCore.App 2.1.1 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214203Z   Microsoft.NETCore.App 2.1.2 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214365Z   Microsoft.NETCore.App 2.1.3 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214404Z   Microsoft.NETCore.App 2.1.4 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214443Z   Microsoft.NETCore.App 2.1.5 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n2018-12-09T20:35:08.7214527Z   Microsoft.NETCore.App 2.1.6 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\nThis is an Azure hosted Ubuntu-16.04 environment.\r\n\r\nI am only having this problem on Ubuntu 16.04, otherwise it works on macOS Mojave and Windows 10 as expected.","Url":"https://github.com/dotnet/cli/issues/10458","RelatedDescription":"Open issue \"Adding dotnet tool from custom source doesn't work on Ubuntu\" (#10458)"},{"Id":"388920339","IsPullRequest":true,"CreatedAt":"2018-12-09T18:56:21","Actor":"dotnet-maestro[bot]","Number":"10453","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18607.6\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18608.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10453","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10453)"},{"Id":"389041633","IsPullRequest":false,"CreatedAt":"2018-12-09T18:47:38","Actor":"rrnewton","Number":"10456","RawContent":null,"Title":"Add Warning? dotnet publish --output of multiple projects corrupts dependencies (DLL hell)","State":"closed","Body":"## Steps to reproduce\r\n\r\nBuild two projects with the same output:\r\n\r\n```\r\ndotnet publish --output <absolutepath> A.csproj\r\ndotnet publish --output <absolutepath> B.csproj\r\n```\r\n\r\n## Expected  behavior\r\n\r\nErrors when the A and B projects attempt to copy conflicting versions of some dependency (`Foo.dll`).\r\n\r\nOR \r\n\r\nTells us that we're being very naughty and not to ever publish two projects to the same directory.\r\n\r\n## Actual behavior\r\n\r\nB's version of `Foo.dll` clobbers the second.  Executables installed by A can run with undefined behavior because they pick up the wrong version of this library (reviving DLL hell).\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\nWe're releasing a project that is testing on Mac, Windows, Linux and inside Docker containers.  This is consistent across all the versions of the .NET core SDK we're using (oldest 2.1.202 under Docker, newest is 2.1.500 on Azure DevOps Pipelines hosts).  Here's one example from an ADO run:\r\n\r\n```\r\n .NET Core SDK (reflecting any global.json):\r\nVersion:   2.1.500\r\nCommit:    b68b931422\r\nRuntime Environment:\r\nOS Name:     ubuntu\r\nOS Version:  16.04\r\nOS Platform: Linux\r\nRID:         ubuntu.16.04-x64\r\nBase Path:   /usr/share/dotnet/sdk/2.1.500/\r\n\r\nHost (useful for support):\r\nVersion: 2.1.6\r\nCommit:  3f4f8eebd8\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10456","RelatedDescription":"Closed issue \"Add Warning? dotnet publish --output of multiple projects corrupts dependencies (DLL hell)\" (#10456)"},{"Id":"389037832","IsPullRequest":false,"CreatedAt":"2018-12-09T18:38:21","Actor":"balbarak","Number":"10455","RawContent":null,"Title":"Add command line to upgrade dotnet runtime and SDK","State":"closed","Body":"### Ex:\r\n\r\ndotnet upgrade {version-no}\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10455","RelatedDescription":"Closed issue \"Add command line to upgrade dotnet runtime and SDK\" (#10455)"},{"Id":"388823399","IsPullRequest":false,"CreatedAt":"2018-12-08T17:16:05","Actor":"dsplaisted","Number":"10450","RawContent":null,"Title":"Error when trying to`dotnet run` and using the latest build of .NET Core 3.0 preview","State":"closed","Body":"@pgolebiowski commented on [Mon Nov 26 2018](https://github.com/dotnet/core/issues/2075)\n\n## Steps to reproduce\r\n\r\n1. Go to the page with [daily builds of .NET Core 3.0](https://github.com/dotnet/core-sdk/blob/master/README.md#installers-and-binaries).\r\n2. Download the macOS installer for *Master (3.0.x Runtime)*.\r\n3. Install.\r\n4. Check `dotnet` version and info:\r\n\r\n```bash\r\n↪ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-009784\r\n Commit:    d86a1816c4\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.13\r\n OS Platform: Darwin\r\n RID:         osx.10.13-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/3.0.100-preview-009784/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27122-01\r\n  Commit:  00c5c8bc40\r\n\r\n.NET Core SDKs installed:\r\n  2.1.401 [/usr/local/share/dotnet/sdk]\r\n  2.1.402 [/usr/local/share/dotnet/sdk]\r\n  3.0.100-preview-009784 [/usr/local/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18572-0018 [/usr/local/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27122-01 [/usr/local/share/dotnet/shared/Microsoft.NETCore.App]\r\n```\r\n\r\n5. Create a new console application:\r\n\r\n```bash\r\ndotnet new console -o Test\r\n```\r\n\r\nwhich by default contains:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\n6. Hit `dotnet run`.\r\n\r\n## Error\r\n\r\n```\r\n↪ dotnet run\r\n/usr/local/share/dotnet/sdk/2.1.402/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.TargetFrameworkInference.targets(137,5): error NETSDK1045: The current .NET SDK does not support targeting .NET Core 3.0.  Either target .NET Core 2.1 or lower, or use a version of the .NET SDK that supports .NET Core 3.0. [/Users/pgolebio/patryk/home/apps/hyperflow/src/Test/Test.csproj]\r\n\r\nThe build failed. Please fix the build errors and run again.\r\n```\r\n\r\n## Question\r\n\r\nHow to successfully run this console application? Why does it use 2.1.402 even though when asked for `dotnet --version`, it says `3.0.100-preview-009784`?\n\n---\n\n@karelz commented on [Tue Nov 27 2018](https://github.com/dotnet/core/issues/2075#issuecomment-442176157)\n\n@nguerrera @dsplaisted can you please help route this issue?\n\n---\n\n@pgolebiowski commented on [Fri Dec 07 2018](https://github.com/dotnet/core/issues/2075#issuecomment-445191533)\n\nHey guys, do you have an idea for how to proceed? @karelz @nguerrera @dsplaisted \n\n","Url":"https://github.com/dotnet/cli/issues/10450","RelatedDescription":"Closed issue \"Error when trying to`dotnet run` and using the latest build of .NET Core 3.0 preview\" (#10450)"},{"Id":"388884055","IsPullRequest":false,"CreatedAt":"2018-12-08T04:26:44","Actor":"igormcoelho","Number":"10452","RawContent":null,"Title":"error MSB4018: System.InvalidOperationException: PE image does not have metadata.","State":"open","Body":"## Steps to reproduce\r\nFailure is happening when I try to `dotnet restore` a `.csproj` with the following packages (inside a docker container):\r\n```xml\r\n  <ItemGroup>\r\n    <PackageReference Include=\"FluentAssertions\" Version=\"4.19.4\" />\r\n    <PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"15.3.0\" />\r\n    <PackageReference Include=\"MSTest.TestAdapter\" Version=\"1.2.0\" />\r\n    <PackageReference Include=\"MSTest.TestFramework\" Version=\"1.2.0\" />\r\n    <PackageReference Include=\"Moq\" Version=\"4.7.63\" />\r\n    <PackageReference Include=\"Akka.MultiNodeTestRunner\" Version=\"1.3.10\" />\r\n    <PackageReference Include=\"Akka.TestKit\" Version=\"1.3.10\" />\r\n    <PackageReference Include=\"Akka.TestKit.Xunit2\" Version=\"1.3.10\" />\r\n  </ItemGroup>\r\n```\r\nIf I remove package `<PackageReference Include=\"Akka.MultiNodeTestRunner\" Version=\"1.3.10\" />` the process goes correctly, so it must be something related to it.\r\n\r\n## Expected  behavior\r\n\r\nSome packages download normally, and it finishes with this error:\r\n`error MSB4018: System.InvalidOperationException: PE image does not have metadata.` (followed by many other errors.\r\nAnother error happens just before this one: `/usr/share/dotnet/sdk/2.1.200/Microsoft.Common.CurrentVersion.targets(2106,5): error MSB4018: The \"ResolveAssemblyReference\" task failed unexpectedly.`\r\n\r\n## Actual behavior\r\n\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n.NET Command Line Tools (2.1.200)\r\n\r\nProduct Information:\r\n Version:            2.1.200\r\n Commit SHA-1 hash:  2edba8d7f1\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.200/\r\n\r\nMicrosoft .NET Core Shared Framework Host\r\n\r\n  Version  : 2.0.7\r\n  Build    : 2d61d0b043915bc948ebf98836fefe9ba942be11\r\n\r\n\r\n\r\n(I tried with dotnet core 2.2, but the same happens)\r\n","Url":"https://github.com/dotnet/cli/issues/10452","RelatedDescription":"Open issue \"error MSB4018: System.InvalidOperationException: PE image does not have metadata.\" (#10452)"},{"Id":"388865869","IsPullRequest":false,"CreatedAt":"2018-12-08T00:55:20","Actor":"KirillOsenkov","Number":"10451","RawContent":null,"Title":"Try to avoid first-chance COMException in VSSettings.cs when running outside MSBuild folder","State":"open","Body":"When running outside MSBuild folder there's a first-chance COMException in VSSettings.cs: Element not found (HRESULT 0x80070490).\r\n\r\nIt was introduced here:\r\nhttps://github.com/dotnet/cli/pull/9547\r\n\r\nwith the comment:\r\n```\r\nNeed try/catch around the interop here. Getting COMException when running an msbuild.exe outside of VS folder.\r\n```\r\n\r\nThis is certainly very low pri, but I'd still be curious if there's any way to work around this. Is this because Windows is looking to find the native .dll in the current directory or PATH, and doesn't find it? Wasn't there a trick to add the directory with the .dll to the PATH environment variable to solve this kind of issues?\r\n\r\nWould be nice to fix, but not very blocking or urgent.\r\n\r\nThanks.\r\n\r\nStack:\r\n```\r\n \tMicrosoft.DotNet.MSBuildSdkResolver.dll!Microsoft.DotNet.MSBuildSdkResolver.VSSettings.VSSettings Line 41\tC#\r\n>\tMicrosoft.DotNet.MSBuildSdkResolver.dll!Microsoft.DotNet.MSBuildSdkResolver.VSSettings.VSSettings Line 25\tC#\r\n \t[Native to Managed Transition]\t\r\n \t[Managed to Native Transition]\t\r\n \tMicrosoft.DotNet.MSBuildSdkResolver.dll!Microsoft.DotNet.MSBuildSdkResolver.DotNetMSBuildSdkResolver.DotNetMSBuildSdkResolver Line 38\tC#\r\n \t[Native to Managed Transition]\t\r\n \t[Managed to Native Transition]\t\r\n \tmscorlib.dll!System.RuntimeType.CreateInstanceSlow Line 5430\tC#\r\n \tmscorlib.dll!System.Activator.CreateInstance Line 193\tC#\r\n \tmscorlib.dll!System.Activator.CreateInstance Line 134\tC#\r\n \tMicrosoft.Build.dll!Microsoft.Build.BackEnd.SdkResolution.SdkResolverLoader.LoadResolvers Line 164\tC#\r\n```","Url":"https://github.com/dotnet/cli/issues/10451","RelatedDescription":"Open issue \"Try to avoid first-chance COMException in VSSettings.cs when running outside MSBuild folder\" (#10451)"},{"Id":"388801696","IsPullRequest":true,"CreatedAt":"2018-12-07T21:25:41","Actor":"nguerrera","Number":"10449","RawContent":null,"Title":"Update roslyn","State":"closed","Body":"Matching dotnet/toolset#53 for 2.1.6xx\r\n","Url":"https://github.com/dotnet/cli/pull/10449","RelatedDescription":"Closed or merged PR \"Update roslyn\" (#10449)"},{"Id":"388646327","IsPullRequest":true,"CreatedAt":"2018-12-07T18:14:36","Actor":"dotnet-maestro[bot]","Number":"10447","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18606.9\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10447","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10447)"},{"Id":"388716372","IsPullRequest":false,"CreatedAt":"2018-12-07T17:30:45","Actor":"DoCode","Number":"10448","RawContent":null,"Title":"dotnet restore failed on private (authenticated) feeds on .NET SDK > v2.2.100","State":"closed","Body":"## Steps to reproduce\r\n`dotnet restore project.proj`\r\n\r\n## Expected  behavior\r\nNuGet restore is successful.\r\n\r\n## Actual behavior\r\n```\r\nRetrying 'FindPackagesByIdAsyncCore' for source 'https://xxx.xxx.xxx/f/core-dev/api/v2/FindPackagesById()?id='xxx'&semVerLevel=2.0.0'.\r\nResponse status code does not indicate success: 401 (Unauthorized).\r\n```\r\n\r\nIt works with all version before 2.2.100!  \r\nAll other versions, also 3.x failed.","Url":"https://github.com/dotnet/cli/issues/10448","RelatedDescription":"Closed issue \"dotnet restore failed on private (authenticated) feeds on .NET SDK > v2.2.100\" (#10448)"},{"Id":"388204756","IsPullRequest":true,"CreatedAt":"2018-12-07T00:44:03","Actor":"dotnet-maestro[bot]","Number":"10444","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18605.14\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10444","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#10444)"},{"Id":"388418998","IsPullRequest":false,"CreatedAt":"2018-12-06T22:07:58","Actor":"wli3","Number":"10446","RawContent":null,"Title":"`dotnet new tool-manifest` will put dotnet-tools.json under .config folder","State":"open","Body":"Open this issue for feedback. We hope to use the convention of `.config` folder to avoid the clutter of config file under the repo root. Start from local tools manifest","Url":"https://github.com/dotnet/cli/issues/10446","RelatedDescription":"Open issue \"`dotnet new tool-manifest` will put dotnet-tools.json under .config folder\" (#10446)"},{"Id":"388384314","IsPullRequest":false,"CreatedAt":"2018-12-06T20:26:59","Actor":"aL3891","Number":"10445","RawContent":null,"Title":"Incorrect binding redirect in net471 project with .net core 3 sdk","State":"open","Body":"Hello friends,\r\n\r\nI'm having an odd issue with our existing projects that are targeting net 471. After installing the .net core 3 preview, binding redirects are generated differently, causing runtime exceptions. What's more, setting the sdk version in global.json does not seem to fix the issue, only uninstalling the v3 sdk does the trick. (this seems very strange to me btw, almost to the point that i think i've done something wrong)\r\n\r\nOne webapp that is using signalR on full framework produces this .config snippet without .net core 3 sdk\r\n\r\n```\r\n    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"Microsoft.Owin.Security\" publicKeyToken=\"31bf3856ad364e35\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-4.0.0.0\" newVersion=\"4.0.0.0\" />\r\n      </dependentAssembly>\r\n    </assemblyBinding>\r\n    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"Newtonsoft.Json\" publicKeyToken=\"30ad4fe6b2a6aeed\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-11.0.0.0\" newVersion=\"11.0.0.0\" />\r\n      </dependentAssembly>\r\n    </assemblyBinding>\r\n```\r\n\r\nand with the .net 3 sdk installed (exact same source):\r\n\r\n```\r\n    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"Newtonsoft.Json\" publicKeyToken=\"30ad4fe6b2a6aeed\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-10.0.0.0\" newVersion=\"10.0.0.0\" />\r\n      </dependentAssembly>\r\n    </assemblyBinding>\r\n    <assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n      <dependentAssembly>\r\n        <assemblyIdentity name=\"Microsoft.Owin\" publicKeyToken=\"31bf3856ad364e35\" culture=\"neutral\" />\r\n        <bindingRedirect oldVersion=\"0.0.0.0-2.1.0.0\" newVersion=\"2.1.0.0\" />\r\n      </dependentAssembly>\r\n```\r\n\r\ni can supply binlog files if it would be helpful but our solution is fairly large so i might have to send them directly to someone\r\n\r\nI was just wondering if anyone else has seen something like this. if i set the binding redirects manually to the correct versions everything works, it's just the auto generated ones that seem fail. These project uses the new format.","Url":"https://github.com/dotnet/cli/issues/10445","RelatedDescription":"Open issue \"Incorrect binding redirect in net471 project with .net core 3 sdk\" (#10445)"},{"Id":"387878638","IsPullRequest":true,"CreatedAt":"2018-12-05T23:02:07","Actor":"livarcocc","Number":"10441","RawContent":null,"Title":"Update SDK to 2.2.101-preview3-63605-02","State":"closed","Body":"Contains a matching nuGet version.\r\n","Url":"https://github.com/dotnet/cli/pull/10441","RelatedDescription":"Closed or merged PR \"Update SDK to 2.2.101-preview3-63605-02\" (#10441)"},{"Id":"387968555","IsPullRequest":true,"CreatedAt":"2018-12-05T22:11:17","Actor":"rainersigwald","Number":"10443","RawContent":null,"Title":"MSBuild 16.0.256-preview","State":"open","Body":"This version of MSBuild is in VS `lab/d16.0stg` at the moment.","Url":"https://github.com/dotnet/cli/pull/10443","RelatedDescription":"Open PR \"MSBuild 16.0.256-preview\" (#10443)"},{"Id":"387752546","IsPullRequest":true,"CreatedAt":"2018-12-05T21:47:26","Actor":"singhsarab","Number":"10439","RawContent":null,"Title":"TestPlatform insertion 16.0.0-preview-20181205-02","State":"closed","Body":"Release : https://github.com/Microsoft/vstest/releases/tag/v16.0.0-preview-20181205-02\r\n","Url":"https://github.com/dotnet/cli/pull/10439","RelatedDescription":"Closed or merged PR \"TestPlatform insertion 16.0.0-preview-20181205-02\" (#10439)"},{"Id":"387879538","IsPullRequest":false,"CreatedAt":"2018-12-05T18:06:51","Actor":"livarcocc","Number":"10442","RawContent":null,"Title":"Use flattened runtime packs","State":"open","Body":"","Url":"https://github.com/dotnet/cli/issues/10442","RelatedDescription":"Open issue \"Use flattened runtime packs\" (#10442)"},{"Id":"387877676","IsPullRequest":false,"CreatedAt":"2018-12-05T18:01:32","Actor":"livarcocc","Number":"10440","RawContent":null,"Title":"Switching to using Download only packages to acquire runtime packs","State":"open","Body":"","Url":"https://github.com/dotnet/cli/issues/10440","RelatedDescription":"Open issue \"Switching to using Download only packages to acquire runtime packs\" (#10440)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"390354570","IsPullRequest":true,"CreatedAt":"2018-12-12T23:16:02","Actor":"terrajobst","Number":"1012","RawContent":null,"Title":"Add private fields for structs","State":"closed","Body":"No public API changes, but this fixes #678. \r\n\r\nIn a nutshell, the compiler needs to know whether a struct has any fields in order to apply definitive assignment rules. While stripping all private fields from types is generally OK, we can't do this for structs. Fortunately, for private fields the compiler doesn't really care what they are, but what their characteristics are. For example:\r\n\r\n1. Does the struct have any fields?\r\n\r\n2. Does the struct contain any reference types (to validate generic instantiations that have the unmanaged constraint)?\r\n\r\n3. Does the struct use the generic parameter in a field declaration (to validate cyclic layout problems)?\r\n\r\nThis adds dummy fields to structs to conform to these rules. These aren't computed separately but are instead taken from .NET Core.\r\n\r\nFor more details, see this issue in CoreFX:\r\n\r\nhttps://github.com/dotnet/corefx/issues/6185","Url":"https://github.com/dotnet/standard/pull/1012","RelatedDescription":"Closed or merged PR \"Add private fields for structs\" (#1012)"},{"Id":"390444044","IsPullRequest":true,"CreatedAt":"2018-12-12T22:53:04","Actor":"wtgodbe","Number":"1015","RawContent":null,"Title":"Enable publishing to build-assets registry","State":"open","Body":"Now that Standard is placing build output in `artifacts`, we can opt-in to publishing build assets to the BAR.\r\n\r\n@chcosta @mmitche PTAL","Url":"https://github.com/dotnet/standard/pull/1015","RelatedDescription":"Open PR \"Enable publishing to build-assets registry\" (#1015)"},{"Id":"390383237","IsPullRequest":true,"CreatedAt":"2018-12-12T19:52:20","Actor":"terrajobst","Number":"1014","RawContent":null,"Title":"Add IAsyncDisposable","State":"open","Body":"This adds API support for the new C# 8 feature to call dispose asynchronously:\r\n\r\n```C#\r\nawait using(var stream = File.OpenWrite(path))\r\n{\r\n    await data.WriteAsync(stream);\r\n}\r\n```\r\n\r\nFor more details, see:\r\n\r\nhttps://github.com/dotnet/csharplang/blob/master/proposals/async-streams.md","Url":"https://github.com/dotnet/standard/pull/1014","RelatedDescription":"Open PR \"Add IAsyncDisposable\" (#1014)"},{"Id":"390377097","IsPullRequest":true,"CreatedAt":"2018-12-12T19:35:16","Actor":"terrajobst","Number":"1013","RawContent":null,"Title":"Add missing readonly modifiers","State":"open","Body":"This fixes #842.","Url":"https://github.com/dotnet/standard/pull/1013","RelatedDescription":"Open PR \"Add missing readonly modifiers\" (#1013)"},{"Id":"390224712","IsPullRequest":false,"CreatedAt":"2018-12-12T19:00:27","Actor":"YairHalberstadt","Number":"1011","RawContent":null,"Title":"Add HashSet.TryGetValue to .Net Standard","State":"closed","Body":"This method is already implemented by .Net Core 2.0 and .Net Framework 4.7.2, so I imagine this would be relatively easy to include in .Net Standard 2.1.","Url":"https://github.com/dotnet/standard/issues/1011","RelatedDescription":"Closed issue \"Add HashSet.TryGetValue to .Net Standard\" (#1011)"},{"Id":"388028724","IsPullRequest":true,"CreatedAt":"2018-12-12T18:55:14","Actor":"terrajobst","Number":"999","RawContent":null,"Title":"Sync .NET Standard's RefEmit with .NET Framework","State":"closed","Body":"Fixes #987\r\n\r\nThe point of the sync is to get increase parity with .NET Framework and thus making it easier to port more existing code to .NET Standard 2.1 (or any platform implementing it).","Url":"https://github.com/dotnet/standard/pull/999","RelatedDescription":"Closed or merged PR \"Sync .NET Standard's RefEmit with .NET Framework\" (#999)"},{"Id":"386016375","IsPullRequest":false,"CreatedAt":"2018-12-12T18:55:14","Actor":"terrajobst","Number":"987","RawContent":null,"Title":"System.Reflection.*: we should review differences with .NET Framework","State":"closed","Body":"Reflection and Reflection.Emit were heavily subset; we should make sure that we're adding all the APIs back, unless they cause bad dependencies (such as CAS) or not supported on any platform (such as Reflection.Emit persistence).","Url":"https://github.com/dotnet/standard/issues/987","RelatedDescription":"Closed issue \"System.Reflection.*: we should review differences with .NET Framework\" (#987)"},{"Id":"390052989","IsPullRequest":true,"CreatedAt":"2018-12-12T16:50:02","Actor":"terrajobst","Number":"1009","RawContent":null,"Title":"Clean-up reference assembly","State":"closed","Body":"This aligns the physical representation of the reference assembly with how it look like in .NET Core. No changes to the API surface; it's just to remove noise in future diffs.","Url":"https://github.com/dotnet/standard/pull/1009","RelatedDescription":"Closed or merged PR \"Clean-up reference assembly\" (#1009)"},{"Id":"390215935","IsPullRequest":true,"CreatedAt":"2018-12-12T13:46:59","Actor":"dotnet-maestro[bot]","Number":"1010","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18611.14\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18611.14\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18611.14\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18611.14\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1010","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1010)"},{"Id":"389518834","IsPullRequest":true,"CreatedAt":"2018-12-12T03:42:31","Actor":"terrajobst","Number":"1007","RawContent":null,"Title":"Update FWLinks to use https instead of http","State":"closed","Body":"This change only affects the string for `[Obsolete]` message.\r\n\r\nJustification: It's generally bad to use `http` these day. Plus, it causes noise in the diffs.","Url":"https://github.com/dotnet/standard/pull/1007","RelatedDescription":"Closed or merged PR \"Update FWLinks to use https instead of http\" (#1007)"},{"Id":"389753658","IsPullRequest":true,"CreatedAt":"2018-12-11T13:11:39","Actor":"dotnet-maestro[bot]","Number":"1008","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18610.4\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18610.4\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18610.4\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18610.4\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1008","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1008)"},{"Id":"389020595","IsPullRequest":true,"CreatedAt":"2018-12-09T13:10:59","Actor":"dotnet-maestro[bot]","Number":"1006","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18608.1\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18608.1\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18608.1\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18608.1\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1006","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1006)"},{"Id":"388920215","IsPullRequest":true,"CreatedAt":"2018-12-08T13:10:58","Actor":"dotnet-maestro[bot]","Number":"1005","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18607.6\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18607.6\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18607.6\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18607.6\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1005","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1005)"},{"Id":"388645771","IsPullRequest":true,"CreatedAt":"2018-12-07T13:16:15","Actor":"dotnet-maestro[bot]","Number":"1004","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18606.9\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18606.9\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18606.9\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18606.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1004","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1004)"},{"Id":"388551526","IsPullRequest":false,"CreatedAt":"2018-12-07T08:26:51","Actor":"he-dev","Number":"1003","RawContent":null,"Title":"Documentation still not up-to-date","State":"open","Body":"I'd be great if you could keep the documentation up-to-date. Currently the only place where you can find anything about these two _super-secret_ elements:\r\n\r\n- `AppendTargetFrameworkToOutputPath`\r\n- `AppendRuntimeIdentifierToOutputPath `\r\n\r\nis this [comment](https://github.com/dotnet/standard/issues/512#issuecomment-332291043). Are there any more _hidden_ settings? \r\n\r\nDo you think you could improve this and maybe also add other _unofficial_ yet fully supported settings (if there are any)?","Url":"https://github.com/dotnet/standard/issues/1003","RelatedDescription":"Open issue \"Documentation still not up-to-date\" (#1003)"},{"Id":"388402668","IsPullRequest":true,"CreatedAt":"2018-12-06T22:17:23","Actor":"wtgodbe","Number":"1002","RawContent":null,"Title":"Move build output from `bin` to `artifacts`","State":"closed","Body":"This allows Arcade to take over in deciding where we output our build artifacts, so we no longer have everything going into the `bin` dir. I don't believe there's anywhere else that explicitly depends on Standard's `bin` dir, but please let me know if you think I'm missing anything.\r\n\r\n@ericstj @ViktorHofer @weshaggard PTAL\r\n\r\n@danmosemsft CC","Url":"https://github.com/dotnet/standard/pull/1002","RelatedDescription":"Closed or merged PR \"Move build output from `bin` to `artifacts`\" (#1002)"},{"Id":"388373169","IsPullRequest":true,"CreatedAt":"2018-12-06T20:04:55","Actor":"ericstj","Number":"1001","RawContent":null,"Title":"Remove Trimming package from dotnet/standard","State":"closed","Body":"Fixes: https://github.com/dotnet/standard/issues/788\r\n\r\nThose looking for an officially supported trimming tool should try:\r\nhttps://github.com/dotnet/core/blob/master/samples/linker-instructions.md\r\n\r\nThe assembly level linker has moved to:\r\nhttps://github.com/ericstj/Microsoft.Packaging.Tools.Trimming","Url":"https://github.com/dotnet/standard/pull/1001","RelatedDescription":"Closed or merged PR \"Remove Trimming package from dotnet/standard\" (#1001)"},{"Id":"386996248","IsPullRequest":true,"CreatedAt":"2018-12-06T18:57:40","Actor":"wtgodbe","Number":"991","RawContent":null,"Title":"Dummy commit to trigger CI - don't merge","State":"closed","Body":"Attempting to trigger CI again, please don't merge","Url":"https://github.com/dotnet/standard/pull/991","RelatedDescription":"Closed or merged PR \"Dummy commit to trigger CI - don't merge\" (#991)"},{"Id":"388204009","IsPullRequest":true,"CreatedAt":"2018-12-06T13:11:37","Actor":"dotnet-maestro[bot]","Number":"1000","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18605.14\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18605.14\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18605.14\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18605.14\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1000","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#1000)"},{"Id":"387555933","IsPullRequest":true,"CreatedAt":"2018-12-06T02:14:39","Actor":"terrajobst","Number":"996","RawContent":null,"Title":"List excluded reflection emit APIs","State":"closed","Body":"I did a diff between `System.Reflection.Emit` in .NET Framework and .NET Standard to make sure the APIs we explicitly didn't bring to .NET Standard are listed here. This adds no APIs to .NET Standard, just comments to the source code of the reference assembly.\r\n\r\nI assume the @dotnet/nsboard has no problems with that as it's just book keeping for folks like me. Unless there is push back, I'm going to merge this tomorrow.\r\n\r\n**Update:** I forgot to mention that I plan to add another PR with the APIs we plan to add .NET Standard.","Url":"https://github.com/dotnet/standard/pull/996","RelatedDescription":"Closed or merged PR \"List excluded reflection emit APIs\" (#996)"},{"Id":"387902379","IsPullRequest":true,"CreatedAt":"2018-12-05T20:00:00","Actor":"wtgodbe","Number":"998","RawContent":null,"Title":"Change yml name to azure-pipelines.yml","State":"closed","Body":"In response to https://github.com/dotnet/arcade/issues/690#issuecomment-444562580\r\n\r\nChanges name of our pipeline file to the standard `azure-pipelines.yml`. I'll also update the build defs to reflect this change.\r\n\r\nCC @chcosta ","Url":"https://github.com/dotnet/standard/pull/998","RelatedDescription":"Closed or merged PR \"Change yml name to azure-pipelines.yml\" (#998)"},{"Id":"387746721","IsPullRequest":true,"CreatedAt":"2018-12-05T18:59:29","Actor":"dotnet-maestro[bot]","Number":"997","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18604.15\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18604.15\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18604.15\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18604.15\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/997","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#997)"},{"Id":"387484691","IsPullRequest":true,"CreatedAt":"2018-12-04T23:49:23","Actor":"wtgodbe","Number":"995","RawContent":null,"Title":"Output packages into Artifacts dir","State":"closed","Body":"This outputs packages into `ArtifactsPackagesDir`, so that Arcade can easily find them for signing & publishing (with this, we no longer need a custom `Signing.props` to specify where our packages live).\r\n\r\n@chcosta @ericstj PTAL\r\n\r\nShould fix the build error in https://dnceng.visualstudio.com/internal/_build/results?buildId=52052","Url":"https://github.com/dotnet/standard/pull/995","RelatedDescription":"Closed or merged PR \"Output packages into Artifacts dir\" (#995)"},{"Id":"387041262","IsPullRequest":true,"CreatedAt":"2018-12-04T18:10:15","Actor":"wtgodbe","Number":"993","RawContent":null,"Title":"Don't reference FeedTasksPackage","State":"closed","Body":"Arcade already restores this package when trying to publish: https://github.com/dotnet/arcade/blob/master/src/Microsoft.DotNet.Arcade.Sdk/tools/Tools.proj#L49\r\n\r\nSince the default version in arcade is currently `2.2-xxx` (https://github.com/dotnet/arcade/blob/069237d9a7e83bed62c9f664228125b95ddf91f6/src/Microsoft.DotNet.Arcade.Sdk/tools/DefaultVersions.props#L71), the build would fail when trying to import files from that package, since only the 3.0.0 version was getting restored: https://github.com/dotnet/arcade/blob/master/src/Microsoft.DotNet.Arcade.Sdk/tools/Publish.proj#L30\r\n\r\nCC @safern you'll want to make a similar change in CoreFx if you plan on doing Arcade publishing\r\n\r\n@chcosta PTAL","Url":"https://github.com/dotnet/standard/pull/993","RelatedDescription":"Closed or merged PR \"Don't reference FeedTasksPackage\" (#993)"},{"Id":"387274996","IsPullRequest":true,"CreatedAt":"2018-12-04T13:16:29","Actor":"dotnet-maestro[bot]","Number":"994","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18603.7\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18603.7\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18603.7\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18603.7\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/994","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#994)"},{"Id":"387011624","IsPullRequest":true,"CreatedAt":"2018-12-03T21:47:39","Actor":"wtgodbe","Number":"992","RawContent":null,"Title":"Fix _SignType, Variable Groups in pipebuild","State":"closed","Body":"This PR makes it so that we only access secrets in internal builds, and passes _SignType to the Windows builds.\r\n\r\n@chcosta PTAL","Url":"https://github.com/dotnet/standard/pull/992","RelatedDescription":"Closed or merged PR \"Fix _SignType, Variable Groups in pipebuild\" (#992)"},{"Id":"386963305","IsPullRequest":true,"CreatedAt":"2018-12-03T20:38:05","Actor":"wtgodbe","Number":"990","RawContent":null,"Title":"Dummy commit to test new CI - DO NOT MERGE","State":"closed","Body":"Testing to see if the new dnceng CI will trigger on this PR, and if it works. Please don't merge this.","Url":"https://github.com/dotnet/standard/pull/990","RelatedDescription":"Closed or merged PR \"Dummy commit to test new CI - DO NOT MERGE\" (#990)"},{"Id":"385881132","IsPullRequest":true,"CreatedAt":"2018-12-03T19:07:06","Actor":"wtgodbe","Number":"986","RawContent":null,"Title":"Convert Standard's CI/Pipebuild to YAML","State":"closed","Body":"This will allow us to move Standard's CI & pipebuild into DNCENG. I already have https://dnceng.visualstudio.com/internal/_build?definitionId=246&_a=summary & https://dnceng.visualstudio.com/public/_build?definitionId=235&_a=summary for the internal & public builds, respectively, which I'll have to point at `master` instead of my testing branch once this is merged. I'll also have to remove the triggers (and maybe delete?) the VSTS Standard pipebuild.\r\n\r\n@chcosta @riarenas @safern PTAL\r\n\r\nCC @danmosemsft ","Url":"https://github.com/dotnet/standard/pull/986","RelatedDescription":"Closed or merged PR \"Convert Standard's CI/Pipebuild to YAML\" (#986)"},{"Id":"386456347","IsPullRequest":true,"CreatedAt":"2018-12-01T13:11:15","Actor":"dotnet-maestro[bot]","Number":"989","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18580.13\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18580.13\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18580.13\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18580.13\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/989","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#989)"},{"Id":"386178352","IsPullRequest":true,"CreatedAt":"2018-11-30T13:16:26","Actor":"dotnet-maestro[bot]","Number":"988","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18579.9\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18579.9\r\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18579.9\r\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18579.9\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/988","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#988)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"390510290","IsPullRequest":false,"CreatedAt":"2018-12-13T04:10:10","Actor":"madhub","Number":"34061","RawContent":null,"Title":".NET core 2.1.x  wildcard certificate handling issue","State":"open","Body":"I have web server with wild card certificate ( ***.mdrinc.com**)  running on port 1060.\r\n\r\nWhen I try to reach server using HttpClient I get \"_The remote certificate is invalid according to the validation procedure_\" error . With HttpClient handler with ServerCertificateCustomValidationCallback I see \"_SslPolicyErrors.RemoteCertificateNameMismatch_\". \r\n\r\nSame program works with AppContext.SetSwitch(\"System.Net.Http.UseSocketsHttpHandler\", false); \r\n\r\n### My .NET Environment is\r\n **dotnet --info**\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\n**Runtime Environment:**\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.2.100/\r\n\r\n**Host (useful for support):**\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n**.NET Core SDKs installed:**\r\n  2.2.100 [/usr/share/dotnet/sdk]\r\n\r\n**.NET Core runtimes installed:**\r\n  Microsoft.AspNetCore.All 2.2.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]_\r\n\r\n\r\n### Example: my server returns following server certificate\r\n\r\n**[Subject]**\r\n  E=joe@mdrinc.com, CN=*.mdrinc.com, OU=Dev, O=mdrinc, L=Bangalore, S=Karnataka, C=IN\r\n  Simple Name: *.mdrinc.com\r\n  Email Name: joe@mdrinc.com\r\n  DNS Name: *.mdrinc.com\r\n\r\n**[Issuer]**\r\n  E=a@b.com, CN=CA.HCPF.COM, OU=CA, O=mdrinc, L=Bangalore, S=Karnataka, C=IN\r\n  Simple Name: CA.HCPF.COM\r\n  Email Name: a@b.com\r\n  DNS Name: CA.HCPF.COM\r\n\r\n[Serial Number]\r\n  01\r\n\r\n[Not Before]\r\n  04/12/18 2:17:36 PM\r\n\r\n[Not After]\r\n  03/12/20 2:17:36 PM\r\n\r\nhttps://gist.github.com/madhub/39c980ff010ba3888e54e8f1527ced6b#file-ssltest-cs\r\n\r\n### Sample Program\r\n\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Net.Http;\r\nusing System.Net.Security;\r\nusing System.Security.Cryptography.X509Certificates;\r\nusing System.Text;\r\n\r\nclass Program\r\n{\r\n    public class MyHttpClientHandler : HttpClientHandler\r\n    {\r\n        public MyHttpClientHandler()\r\n        {\r\n            this.ServerCertificateCustomValidationCallback = delegate (HttpRequestMessage message,\r\n                X509Certificate2 x509Cer2,\r\n                X509Chain chain,\r\n                SslPolicyErrors errors)\r\n            {\r\n                bool validationStatus = true;\r\n                if ((errors & SslPolicyErrors.RemoteCertificateChainErrors) != 0)\r\n                {\r\n                    Console.WriteLine(\"SslPolicyErrors.RemoteCertificateChainErrors\");\r\n                    validationStatus = false;\r\n                }\r\n\r\n                if ((errors & SslPolicyErrors.RemoteCertificateNameMismatch) != 0)\r\n                {\r\n                    Console.WriteLine(\"SslPolicyErrors.RemoteCertificateNameMismatch\");\r\n                    validationStatus = false;\r\n                }\r\n                else if ((errors & SslPolicyErrors.None) != 0)\r\n                {\r\n                    Console.WriteLine(\"SslPolicyErrors.None\");\r\n                    validationStatus = true;\r\n                }\r\n\r\n                Console.WriteLine(x509Cer2.ToString(true));\r\n\r\n                return validationStatus;\r\n            };\r\n        }\r\n\r\n    }\r\n    // this works\r\n    public static void WithAppContextSwitch(string hostUrl)\r\n    {\r\n        AppContext.SetSwitch(\"System.Net.Http.UseSocketsHttpHandler\", false);\r\n        try\r\n        {\r\n            using (var httpClient = new HttpClient())\r\n            {\r\n                var response = httpClient.GetAsync(hostUrl).GetAwaiter().GetResult();\r\n                System.Console.WriteLine(response.StatusCode);\r\n            }\r\n        }\r\n        catch (Exception exp)\r\n        {\r\n\r\n            Console.WriteLine(\"Exception \" + exp);\r\n        }\r\n    }\r\n    // throws RemoteCertificateNameMismatch exception \r\n    public static void WithOutAppContextSwitch(string hostUrl)\r\n    {\r\n\r\n        try\r\n        {\r\n            var httpHandler = new MyHttpClientHandler();\r\n            using (var httpClient = new HttpClient(httpHandler))\r\n            {\r\n                var response = httpClient.GetAsync(hostUrl).GetAwaiter().GetResult();\r\n                System.Console.WriteLine(response.StatusCode);\r\n            }\r\n        }\r\n        catch (Exception exp)\r\n        {\r\n\r\n            Console.WriteLine(\"Exception \" + exp);\r\n        }\r\n    }\r\n\r\n    static void Main(string[] args)\r\n    {\r\n\r\n        string hostUrl = \"https://msrv4.mdrinc.com:1060\";\r\n\r\n        // this works\r\n        WithAppContextSwitch(hostUrl);\r\n\r\n        // throws RemoteCertificateNameMismatch exception \r\n        WithOutAppContextSwitch(hostUrl);\r\n    }\r\n}\r\n\r\n_Originally posted by @madhub in https://github.com/dotnet/corefx/issues/30388#issuecomment-446554623_","Url":"https://github.com/dotnet/corefx/issues/34061","RelatedDescription":"Open issue \".NET core 2.1.x  wildcard certificate handling issue\" (#34061)"},{"Id":"390504010","IsPullRequest":false,"CreatedAt":"2018-12-13T03:35:08","Actor":"geoffkizer","Number":"34060","RawContent":null,"Title":"HTTP2: Consider smarter buffer flushing strategy","State":"open","Body":"Currently, we are flushing the buffer out to the network on every frame write. This is correct but more aggressive than we need to be. We should consider trying to defer flushing (up to some buffer limit, e.g. 64K or whatever).\r\n\r\nWe can defer flushing in potentially two ways:\r\n(1) If we know another writer is waiting on the _writerLock to write, then there's no need to flush immediately. (However, this could be tricky because it's possible the other writer may cancel, in which case we still need to flush.)\r\n(2) Even if there's no other writer pending, it may make sense to wait for a brief period of time to see if another writer shows up. However, in some cases this is probably undesirable -- e.g. when we send an EndStream for a request, delaying the write will mean the server can't send the response right away.\r\n\r\nDoing this properly is pretty nontrivial, so we should be careful to ensure that this is actually worthwhile and correct.","Url":"https://github.com/dotnet/corefx/issues/34060","RelatedDescription":"Open issue \"HTTP2: Consider smarter buffer flushing strategy\" (#34060)"},{"Id":"390499531","IsPullRequest":false,"CreatedAt":"2018-12-13T03:10:34","Actor":"geoffkizer","Number":"34059","RawContent":null,"Title":"HTTP2: Respect SETTINGS_INITIAL_WINDOW_SIZE setting from peer","State":"open","Body":"Separating this from #31297 since it requires some additional implementation and refactoring to support properly.","Url":"https://github.com/dotnet/corefx/issues/34059","RelatedDescription":"Open issue \"HTTP2: Respect SETTINGS_INITIAL_WINDOW_SIZE setting from peer\" (#34059)"},{"Id":"390496686","IsPullRequest":true,"CreatedAt":"2018-12-13T02:55:15","Actor":"geoffkizer","Number":"34058","RawContent":null,"Title":"HTTP2: implement outbound flow control","State":"open","Body":"Fixes #31297\r\n\r\n@dotnet/ncl @stephentoub","Url":"https://github.com/dotnet/corefx/pull/34058","RelatedDescription":"Open PR \"HTTP2: implement outbound flow control\" (#34058)"},{"Id":"390476266","IsPullRequest":true,"CreatedAt":"2018-12-13T01:11:50","Actor":"tannergooding","Number":"34057","RawContent":null,"Title":"Modifying System.Numerics.Vectors to no longer user method local constants","State":"open","Body":"This removes the warnings from https://github.com/dotnet/corefx/issues/29861","Url":"https://github.com/dotnet/corefx/pull/34057","RelatedDescription":"Open PR \"Modifying System.Numerics.Vectors to no longer user method local constants\" (#34057)"},{"Id":"390475175","IsPullRequest":true,"CreatedAt":"2018-12-13T01:06:09","Actor":"ericstj","Number":"34056","RawContent":null,"Title":"[Darc-Update] Update dependencies from build 20181212.9 of https://gi…","State":"open","Body":"…thub.com/dotnet/arcade","Url":"https://github.com/dotnet/corefx/pull/34056","RelatedDescription":"Open PR \"[Darc-Update] Update dependencies from build 20181212.9 of https://gi…\" (#34056)"},{"Id":"390464858","IsPullRequest":false,"CreatedAt":"2018-12-13T00:17:39","Actor":"ajcvickers","Number":"34055","RawContent":null,"Title":"NU1605 Package downgrade with EFCore.Sqlite 2.2 on UWP","State":"open","Body":"Moved from https://github.com/aspnet/EntityFrameworkCore/issues/14090 filed by @devsko\r\n\r\nI get this two package downgrade warnings. \r\n```\r\nNU1605: Detected package downgrade: System.IO.FileSystem.Primitives from 4.3.0 to 4.0.1. Reference the package directly from the project to select a different version. \r\n UwpApp -> Microsoft.EntityFrameworkCore.Sqlite 2.2.0 -> Microsoft.EntityFrameworkCore.Sqlite.Core 2.2.0 -> Microsoft.Extensions.DependencyModel 2.1.0 -> Microsoft.DotNet.PlatformAbstractions 2.1.0 -> System.IO.FileSystem 4.0.1 -> runtime.win.System.IO.FileSystem 4.3.0 -> System.IO.FileSystem.Primitives (>= 4.3.0) \r\n UwpApp -> Microsoft.EntityFrameworkCore.Sqlite 2.2.0 -> Microsoft.EntityFrameworkCore.Sqlite.Core 2.2.0 -> Microsoft.Extensions.DependencyModel 2.1.0 -> Microsoft.DotNet.PlatformAbstractions 2.1.0 -> System.IO.FileSystem 4.0.1 -> System.IO.FileSystem.Primitives (>= 4.0.1)\r\nNU1605: Detected package downgrade: System.Reflection.TypeExtensions from 4.3.0 to 4.1.0. Reference the package directly from the project to select a different version. \r\n UwpApp -> Microsoft.EntityFrameworkCore.Sqlite 2.2.0 -> Microsoft.EntityFrameworkCore.Sqlite.Core 2.2.0 -> Microsoft.Extensions.DependencyModel 2.1.0 -> System.Dynamic.Runtime 4.0.11 -> System.Linq.Expressions 4.1.0 -> System.Reflection.Extensions 4.0.1 -> runtime.aot.System.Reflection.Extensions 4.3.0 -> System.Reflection.TypeExtensions (>= 4.3.0) \r\n UwpApp -> Microsoft.EntityFrameworkCore.Sqlite 2.2.0 -> Microsoft.EntityFrameworkCore.Sqlite.Core 2.2.0 -> Microsoft.Extensions.DependencyModel 2.1.0 -> System.Dynamic.Runtime 4.0.11 -> System.Reflection.TypeExtensions (>= 4.1.0)\r\n```\r\nMinimal repro with following references\r\n- UWP Target version 17763 / Min version 16299\r\n- Microsoft.NETCore.UniversalWindowsPlatform 6.1.9\r\n- System.Runtime.WindowsRuntime 4.3.0\r\n- Microsoft.EntityFrameworkCore.Sqlite 2.2.0\r\n","Url":"https://github.com/dotnet/corefx/issues/34055","RelatedDescription":"Open issue \"NU1605 Package downgrade with EFCore.Sqlite 2.2 on UWP\" (#34055)"},{"Id":"390429758","IsPullRequest":true,"CreatedAt":"2018-12-12T23:45:34","Actor":"ericstj","Number":"34041","RawContent":null,"Title":"Revert \"Always set ConfigurationGroup\"","State":"closed","Body":"This reverts commit f94f8a05170fa2c43bf47977ca4b1c239701651d.\r\n\r\nThis introduced race conditions, needs another look.","Url":"https://github.com/dotnet/corefx/pull/34041","RelatedDescription":"Closed or merged PR \"Revert \"Always set ConfigurationGroup\"\" (#34041)"},{"Id":"390448673","IsPullRequest":true,"CreatedAt":"2018-12-12T23:09:55","Actor":"ViktorHofer","Number":"34054","RawContent":null,"Title":"Fix perf builds & remove buildtools dependency","State":"open","Body":"Fixes failing perf runs and move the perf tools away from the Tools folder.","Url":"https://github.com/dotnet/corefx/pull/34054","RelatedDescription":"Open PR \"Fix perf builds & remove buildtools dependency\" (#34054)"},{"Id":"390447831","IsPullRequest":true,"CreatedAt":"2018-12-12T23:06:50","Actor":"ericstj","Number":"34053","RawContent":null,"Title":"Expose  Marshall.LoadLibrary API","State":"open","Body":"@swaroop-sridhar and I worked on this to expose the LoadLibrary api from System.Runtime.InteropServices reference assembly.  \r\n\r\nhttps://github.com/dotnet/coreclr/pull/20871","Url":"https://github.com/dotnet/corefx/pull/34053","RelatedDescription":"Open PR \"Expose  Marshall.LoadLibrary API\" (#34053)"},{"Id":"390447530","IsPullRequest":false,"CreatedAt":"2018-12-12T23:05:47","Actor":"joperezr","Number":"34052","RawContent":null,"Title":"[arm32/Windows] System.Xml.Xsl.XslCompiledTransformApi.Tests failures on arm32 windows","State":"open","Body":"Running the arm32 tests on windows for System.Xml.Xsl.XslCompiledTransformApi.Tests produced the following results: passed 1267/1268 tests.\r\n\r\nThe test that failed was System.Xml.Tests.CTransformRegressionTest.RegressionTest1(xslInputType: URI, readerType: XmlValidatingReader, outputType: Stream, navType: XPathDocument) with:\r\n```\r\nSystem.IO.FileNotFoundException : Could not find file 'C:\\\\Data\\\\Users\\\\Administrator\\\\Documents\\\\tests\\\\System.Xml.Xsl.XslCompiledTransformApi.Tests\\\\netcoreapp-Windows_NT-Release-arm\\\\TestFiles\\\\TestData\\\\XsltApiV2\\\\Straße.xml'.\r\n   at System.IO.FileStream.ValidateFileHandle(SafeFileHandle fileHandle) in E:\\A\\_work\\48\\s\\src\\System.Private.CoreLib\\shared\\System\\IO\\FileStream.Windows.cs:line 1640\r\n   at System.IO.FileStream.CreateFileOpenHandle(FileMode mode, FileShare share, FileOptions options) in E:\\A\\_work\\48\\s\\src\\System.Private.CoreLib\\shared\\System\\IO\\FileStream.Win32.cs:line 46\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options) in E:\\A\\_work\\48\\s\\src\\System.Private.CoreLib\\shared\\System\\IO\\FileStream.cs:line 243\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share) in E:\\A\\_work\\48\\s\\src\\System.Private.CoreLib\\shared\\System\\IO\\FileStream.cs:line 171\r\n   at System.IO.File.Open(String path, FileMode mode, FileAccess access, FileShare share) in F:\\git\\corefx\\src\\System.IO.FileSystem\\src\\System\\IO\\File.cs:line 157\r\n   at System.IO.File.Open(String path, FileMode mode) in F:\\git\\corefx\\src\\System.IO.FileSystem\\src\\System\\IO\\File.cs:line 147\r\n   at System.Xml.Tests.CTransformRegressionTest.RegressionTest1(XslInputType xslInputType, ReaderType readerType, OutputType outputType, NavType navType) in F:\\git\\corefx\\src\\System.Private.Xml\\tests\\Xslt\\XslCompiledTransformApi\\XslCompiledTransform.cs:line 3379\r\n```\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2673901/testResults.zip)\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/34052","RelatedDescription":"Open issue \"[arm32/Windows] System.Xml.Xsl.XslCompiledTransformApi.Tests failures on arm32 windows\" (#34052)"},{"Id":"390446712","IsPullRequest":false,"CreatedAt":"2018-12-12T23:02:36","Actor":"joperezr","Number":"34051","RawContent":null,"Title":"[arm32/Windows] System.Windows.Extensions.Tests failures on arm32 windows","State":"open","Body":"Running the arm32 tests on windows for System.Windows.Extensions.Tests produced the following results: passed 23/38 tests.\r\n\r\nMost failing tests have to do with missing gdpi but there are few tests that are failing with this callstack:\r\n```\r\nSystem.EntryPointNotFoundException : Unable to find an entry point named 'CreateIconFromResourceEx' in DLL 'user32.dll'.\r\n   at System.Drawing.SafeNativeMethods.IntCreateIconFromResourceEx(Byte* pbIconBits, Int32 cbIconBits, Boolean fIcon, Int32 dwVersion, Int32 csDesired, Int32 cyDesired, Int32 flags)\r\n   at System.Drawing.SafeNativeMethods.CreateIconFromResourceEx(Byte* pbIconBits, Int32 cbIconBits, Boolean fIcon, Int32 dwVersion, Int32 csDesired, Int32 cyDesired, Int32 flags) in F:\\git\\corefx\\src\\System.Drawing.Common\\src\\System\\Drawing\\Gdiplus.cs:line 1064\r\n   at System.Drawing.Icon.Initialize(Int32 width, Int32 height) in F:\\git\\corefx\\src\\System.Drawing.Common\\src\\System\\Drawing\\Icon.Windows.cs:line 634\r\n   at System.Drawing.Icon..ctor(String fileName, Int32 width, Int32 height) in F:\\git\\corefx\\src\\System.Drawing.Common\\src\\System\\Drawing\\Icon.Windows.cs:line 77\r\n   at System.Drawing.Icon..ctor(String fileName) in F:\\git\\corefx\\src\\System.Drawing.Common\\src\\System\\Drawing\\Icon.Windows.cs:line 60\r\n   at System.ComponentModel.TypeConverterTests.IconConverterTest..ctor() in F:\\git\\corefx\\src\\System.Windows.Extensions\\tests\\System\\Drawing\\IconConverterTests.cs:line 23\r\n```\r\n\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2673877/testResults.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/34051","RelatedDescription":"Open issue \"[arm32/Windows] System.Windows.Extensions.Tests failures on arm32 windows\" (#34051)"},{"Id":"390391664","IsPullRequest":false,"CreatedAt":"2018-12-12T22:54:46","Actor":"nickbom","Number":"34032","RawContent":null,"Title":"[Uri] Uri.IsWellFormedUriString() different behaviour from net461","State":"closed","Body":"The following unit test for `Uri.IsWellFormedUriString(\"lime://teste_it%C3%A1vel%3Axx@teste.net/8dd3a58vgv\", UriKind.Absolute)`\r\n\r\nreturn true on TargetFramework=net461\r\n\r\nreturn false on TargetFramework=netcoreapp2.1\r\n\r\nIs this different behaviour expected?\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/34032","RelatedDescription":"Closed issue \"[Uri] Uri.IsWellFormedUriString() different behaviour from net461\" (#34032)"},{"Id":"390444218","IsPullRequest":false,"CreatedAt":"2018-12-12T22:53:41","Actor":"joperezr","Number":"34050","RawContent":null,"Title":"[arm32/Windows] System.Security.Cryptography.Xml.Tests failures on arm32 windows","State":"open","Body":"Running the arm32 tests on windows for System.Security.Cryptography.Xml.Tests produced the following results: passed 592/600 tests.\r\n\r\nThe 8 failing tests have the same callstack:\r\n```\r\nInternal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : Keyset does not exist\r\n   at System.Security.Cryptography.CngKey.Open(String keyName, CngProvider provider, CngKeyOpenOptions openOptions) in F:\\git\\corefx\\src\\System.Security.Cryptography.Cng\\src\\System\\Security\\Cryptography\\CngKey.Open.cs:line 43\r\n   at System.Security.Cryptography.CngKey.Open(String keyName, CngProvider provider) in F:\\git\\corefx\\src\\System.Security.Cryptography.Cng\\src\\System\\Security\\Cryptography\\CngKey.Open.cs:line 29\r\n   at Internal.Cryptography.Pal.CertificatePal.GetPrivateKey[T](Func`2 createCsp, Func`2 createCng) in F:\\git\\corefx\\src\\System.Security.Cryptography.X509Certificates\\src\\Internal\\Cryptography\\Pal.Windows\\CertificatePal.PrivateKey.cs:line 196\r\n   at Internal.Cryptography.Pal.CertificatePal.GetRSAPrivateKey() in F:\\git\\corefx\\src\\System.Security.Cryptography.X509Certificates\\src\\Internal\\Cryptography\\Pal.Windows\\CertificatePal.PrivateKey.cs:line 29\r\n   at Internal.Cryptography.Pal.CertificateExtensionsCommon.GetPrivateKey[T](X509Certificate2 certificate, Predicate`1 matchesConstraints) in F:\\git\\corefx\\src\\System.Security.Cryptography.X509Certificates\\src\\Internal\\Cryptography\\CertificateExtensionsCommon.cs:line 53\r\n   at System.Security.Cryptography.X509Certificates.RSACertificateExtensions.GetRSAPrivateKey(X509Certificate2 certificate) in F:\\git\\corefx\\src\\System.Security.Cryptography.X509Certificates\\src\\System\\Security\\Cryptography\\X509Certificates\\RSACertificateExtensions.cs:line 29\r\n   at System.Security.Cryptography.Xml.Tests.EncryptedXmlTest.RsaDecryption(String resourceName) in F:\\git\\corefx\\src\\System.Security.Cryptography.Xml\\tests\\EncryptedXmlTest.cs:line 110\r\n```\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2673856/testResults.zip)\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/34050","RelatedDescription":"Open issue \"[arm32/Windows] System.Security.Cryptography.Xml.Tests failures on arm32 windows\" (#34050)"},{"Id":"390443510","IsPullRequest":true,"CreatedAt":"2018-12-12T22:51:11","Actor":"Wraith2","Number":"34049","RawContent":null,"Title":"Optimize SqlClient rpc parameter usage","State":"open","Body":"I have made changes to the _SqlRPC object which change how the system and user parameters are allocated and stored. Originally the system parameters were allocated each execution, I've altered this so the correct number are allocated as needed and re-used cleanly if the query type changes (between prepare, unprepared, proc and exec). \r\nUser parameters are no longer copied in but referenced by index into the parameter collection. \r\n\r\nThis is a risky change. It needs careful review to ensure compatibility. \r\n\r\nThis PR was split from #32811 and into smaller commits for easier review. It has passed the manual and efcore tests in native mode, the tests cannot be successfully run in managed mode due to #33930 . Performance improvements for this and related PR's are in the original discussion.\r\n/cc @keeratsingh @AfsanehR @saurabh500 @David-Engel","Url":"https://github.com/dotnet/corefx/pull/34049","RelatedDescription":"Open PR \"Optimize SqlClient rpc parameter usage\" (#34049)"},{"Id":"390415501","IsPullRequest":false,"CreatedAt":"2018-12-12T22:47:54","Actor":"joperezr","Number":"34036","RawContent":null,"Title":"[arm32/Windows] System.Net.Http.WinHttpHandler.Unit.Tests failures on arm32 windows","State":"closed","Body":"Running the arm32 tests on windows for System.Net.Http.WinHttpHandler.Unit.Tests produced the following results: passed 171/177 tests.\r\n\r\nAll 6 tests failed with the same exception:\r\n```\r\nInternal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : Access denied.\r\n   at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags) in F:\\git\\corefx\\src\\System.Security.Cryptography.X509Certificates\\src\\Internal\\Cryptography\\Pal.Windows\\CertificatePal.Import.cs:line 152\r\n   at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags) in F:\\git\\corefx\\src\\System.Security.Cryptography.X509Certificates\\src\\Internal\\Cryptography\\Pal.Windows\\CertificatePal.Import.cs:line 88\r\n   at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags) in F:\\git\\corefx\\src\\System.Security.Cryptography.X509Certificates\\src\\Internal\\Cryptography\\Pal.Windows\\CertificatePal.Import.cs:line 21\r\n   at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags) in F:\\git\\corefx\\src\\System.Security.Cryptography.X509Certificates\\src\\System\\Security\\Cryptography\\X509Certificates\\X509Certificate.cs:line 81\r\n   at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password) in F:\\git\\corefx\\src\\System.Security.Cryptography.X509Certificates\\src\\System\\Security\\Cryptography\\X509Certificates\\X509Certificate.cs:line 62\r\n   at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password) in F:\\git\\corefx\\src\\System.Security.Cryptography.X509Certificates\\src\\System\\Security\\Cryptography\\X509Certificates\\X509Certificate2.cs:line 51\r\n   at System.Net.Http.WinHttpHandlerUnitTests.ClientCertificateHelper..ctor() in F:\\git\\corefx\\src\\System.Net.Http.WinHttpHandler\\tests\\UnitTests\\ClientCertificateHelper.cs:line 14\r\n   at System.Net.Http.WinHttpHandlerUnitTests.ClientCertificateScenarioTest.SecureRequest_ClientCertificateOptionAutomatic_CertStoreHasValidAndInvalidCerts_ValidCertificateContextSet() in F:\\git\\corefx\\src\\System.Net.Http.WinHttpHandler\\tests\\UnitTests\\ClientCertificateScenarioTest.cs:line 175\r\n```\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2673574/testResults.zip)\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/34036","RelatedDescription":"Closed issue \"[arm32/Windows] System.Net.Http.WinHttpHandler.Unit.Tests failures on arm32 windows\" (#34036)"},{"Id":"390442057","IsPullRequest":true,"CreatedAt":"2018-12-12T22:46:15","Actor":"Wraith2","Number":"34048","RawContent":null,"Title":"Optimize SqlClient primitive type writes","State":"open","Body":"When writing some primitive types to the tds packet stream small arrays are allocated and passed to the WriteByteArray function. I have changed WriteByteArray to WriteBytes and added a span parameter so that either a span or an array can be passed in (but not both, the priority is explained in the comments). The function will attempt to write using only a span unless it encounters an end of packet and needs to use an async continuation, in that case it will allocate an array and copy the remainder of the span into it. For primitive types this will rarely be needed. \r\n\r\nThese changes can be used to allow the new BitConverter.TryWriteBytes overload with stackalloced buffers to remove memory allocations for writing of 16 and 32 bit reals. This can be extended to guids at a later time.\r\n\r\nThis PR was split from #32811 and into smaller commits for easier review. It has passed the manual and efcore tests in native mode, the tests cannot be successfully run in managed mode due to #33930 . Performance improvements for this and related PR's are in the original discussion.\r\n/cc @keeratsingh @AfsanehR @saurabh500 @David-Engel","Url":"https://github.com/dotnet/corefx/pull/34048","RelatedDescription":"Open PR \"Optimize SqlClient primitive type writes\" (#34048)"},{"Id":"390437699","IsPullRequest":false,"CreatedAt":"2018-12-12T22:43:01","Actor":"joperezr","Number":"34046","RawContent":null,"Title":"[arm32/Windows] System.Runtime.Tests failures on arm32 windows","State":"closed","Body":"Running the arm32 tests on windows for System.Runtime.Tests produced the following results: passed 31427/31439 tests.\r\n\r\nMost of the 12 test failures have to do with DateTime not throwing ARgumentOutOfRange exceptions as well as a TimeZoneInfo issue:\r\n```\r\nAssert.Throws() Failure\\r\\nExpected: typeof(System.ArgumentOutOfRangeException)\\r\\nActual:   (No exception was thrown)\r\n   at System.AssertExtensions.Throws[T](String paramName, Func`1 testCode) in F:\\git\\corefx\\src\\CoreFx.Private.TestUtilities\\src\\System\\AssertExtensions.cs:line 83\r\n   at System.Tests.DateTimeTests.AddMinutes_NewDateOutOfRange_ThrowsArgumentOutOfRangeException(DateTime date, Double minutes) in F:\\git\\corefx\\src\\System.Runtime\\tests\\System\\DateTimeTests.cs:line 523\r\n```\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2673800/testResults.zip)\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/34046","RelatedDescription":"Closed issue \"[arm32/Windows] System.Runtime.Tests failures on arm32 windows\" (#34046)"},{"Id":"390435269","IsPullRequest":false,"CreatedAt":"2018-12-12T22:41:49","Actor":"joperezr","Number":"34045","RawContent":null,"Title":"[arm32/Windows] System.Runtime.Serialization.Formatters.Tests failures on arm32 windows","State":"closed","Body":"Running the arm32 tests on windows for System.Runtime.Serialization.Formatters.Tests produced the following results: passed 155/158 tests.\r\n\r\nThe three failing tests are one more case of missing Gdip.\r\n```\r\nSystem.TypeInitializationException : The type initializer for 'Gdip' threw an exception.\\r\\n---- System.DllNotFoundException : Unable to load DLL 'gdiplus.dll': The specified module could not be found.\r\n   at System.Drawing.SafeNativeMethods.Gdip.GdipCreateFontFamilyFromName(String name, HandleRef fontCollection, IntPtr& FontFamily) in F:\\git\\corefx\\src\\System.Drawing.Common\\src\\System\\Drawing\\GdiplusNative.cs:line 963\r\n   at System.Drawing.FontFamily.CreateFontFamily(String name, FontCollection fontCollection) in F:\\git\\corefx\\src\\System.Drawing.Common\\src\\System\\Drawing\\FontFamily.cs:line 76\r\n   at System.Drawing.FontFamily..ctor(String name, Boolean createDefaultOnFail) in F:\\git\\corefx\\src\\System.Drawing.Common\\src\\System\\Drawing\\FontFamily.cs:line 55\r\n   at System.Drawing.Font.Initialize(String familyName, Single emSize, FontStyle style, GraphicsUnit unit, Byte gdiCharSet, Boolean gdiVerticalFont) in F:\\git\\corefx\\src\\System.Drawing.Common\\src\\System\\Drawing\\Font.Windows.cs:line 197\r\n   at System.Drawing.Font..ctor(String familyName, Single emSize, FontStyle style, GraphicsUnit unit) in F:\\git\\corefx\\src\\System.Drawing.Common\\src\\System\\Drawing\\Font.Windows.cs:line 131\r\n   at System.Runtime.Serialization.Formatters.Tests.BinaryFormatterTests.SerializableObjects()+MoveNext()\r\n   at System.Collections.Generic.LargeArrayBuilder`1.AddRange(IEnumerable`1 items)\r\n   at System.Collections.Generic.EnumerableHelpers.ToArray[T](IEnumerable`1 source)\r\n   at System.Linq.Enumerable.ToArray[TSource](IEnumerable`1 source)\r\n   at System.Runtime.Serialization.Formatters.Tests.BinaryFormatterTests.SerializableObjects_MemberData()\r\n----- Inner Stack Trace -----\r\n   at System.Runtime.InteropServices.FunctionWrapper`1.get_Delegate() in F:\\git\\corefx\\src\\Common\\src\\System\\Runtime\\InteropServices\\FunctionWrapper.cs:line 37\r\n   at System.Drawing.SafeNativeMethods.Gdip.GdiplusStartup(IntPtr& token, StartupInput& input, StartupOutput& output) in F:\\git\\corefx\\src\\System.Drawing.Common\\src\\System\\Drawing\\GdiplusNative.Windows.cs:line 241\r\n   at System.Drawing.SafeNativeMethods.Gdip..cctor() in F:\\git\\corefx\\src\\System.Drawing.Common\\src\\System\\Drawing\\Gdiplus.cs:line 85\r\n```\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2673776/testResults.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/34045","RelatedDescription":"Closed issue \"[arm32/Windows] System.Runtime.Serialization.Formatters.Tests failures on arm32 windows\" (#34045)"},{"Id":"390438845","IsPullRequest":true,"CreatedAt":"2018-12-12T22:35:36","Actor":"Wraith2","Number":"34047","RawContent":null,"Title":"Optimize SqlClient query memory allocation","State":"open","Body":"Many synchronous code paths contain lambda allocations for async usage which capture variables in function scope which cause the allocation and use of closure types to contain them. This set of changes attempts to prevent allocation of a closure by using a state tuple or by breaking the closure machinery into a separate method only called in the async case.\r\n\r\nThe CachedAsyncState field was being allocated in the sync code path, I have refined the logic slightly to avoid this unless it is needed.\r\n\r\nI have introduced a couple of pre-boxed integer constants which prevent the repeated boxing of the default value, these are bof the invalid prepared handle value and the empty read packet.\r\n\r\nI have added an `AsyncHelper.ContinueTaskWithState` function which uses the same logic as the existing `ContinueTask` and adds the ability to pass a state object to each of the delegate parameters, this helps to avoid closures in calling code.\r\n\r\nThis PR was split from https://github.com/dotnet/corefx/pull/32811 and into smaller commits for easier review. It has passed the manual and efcore tests in native mode, the tests cannot be successfully run in managed mode due to https://github.com/dotnet/corefx/issues/33930 . Performance improvements for this and related PR's are in the original discussion.\r\n/cc @keeratsingh @AfsanehR @saurabh500 @David-Engel","Url":"https://github.com/dotnet/corefx/pull/34047","RelatedDescription":"Open PR \"Optimize SqlClient query memory allocation\" (#34047)"},{"Id":"390427821","IsPullRequest":false,"CreatedAt":"2018-12-12T22:33:37","Actor":"joperezr","Number":"34039","RawContent":null,"Title":"[arm32/Windows] System.Runtime.Extensions.Tests failures on arm32 windows","State":"closed","Body":"Running the arm32 tests on windows for System.Runtime.Extensions.Tests produced the following results: passed 6479/6481 tests.\r\n\r\nSystem.Tests.EnvironmentTests.GetFolderPath_Windows theory has 2 failing cases (folder= AdminTools and CommonAdminTools). The callstack is:\r\n```\r\nAssert.NotEmpty() Failure\r\n   at System.Tests.EnvironmentTests.GetFolderPath_Windows(SpecialFolder folder) in F:\\git\\corefx\\src\\System.Runtime.Extensions\\tests\\System\\EnvironmentTests.cs:line 493\r\n```\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2673697/testResults.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/34039","RelatedDescription":"Closed issue \"[arm32/Windows] System.Runtime.Extensions.Tests failures on arm32 windows\" (#34039)"},{"Id":"390421563","IsPullRequest":false,"CreatedAt":"2018-12-12T22:33:05","Actor":"joperezr","Number":"34038","RawContent":null,"Title":"[arm32/Windows] System.Resources.ResourceManager.Tests failures on arm32 windows","State":"closed","Body":"Running the arm32 tests on windows for System.Resources.ResourceManager.Tests produced the following results: passed 94/96 tests.\r\n\r\nBoth test failures are due to missing Gdip dependency. Should they be skipped?\r\n```\r\nSystem.TypeInitializationException : The type initializer for 'Gdip' threw an exception.\\r\\n---- System.DllNotFoundException : Unable to load DLL 'gdiplus.dll': The specified module could not be found.\r\n   at System.Drawing.SafeNativeMethods.Gdip.GdipCreateBitmapFromFile(String filename, IntPtr& bitmap) in F:\\git\\corefx\\src\\System.Drawing.Common\\src\\System\\Drawing\\GdiplusNative.cs:line 1781\r\n   at System.Drawing.Bitmap..ctor(String filename, Boolean useIcm) in F:\\git\\corefx\\src\\System.Drawing.Common\\src\\System\\Drawing\\Bitmap.cs:line 41\r\n   at System.Drawing.Bitmap..ctor(String filename) in F:\\git\\corefx\\src\\System.Drawing.Common\\src\\System\\Drawing\\Bitmap.cs:line 24\r\n   at System.Resources.Tests.ResourceManagerTests.EnglishImageResourceData()+MoveNext() in F:\\git\\corefx\\src\\System.Resources.ResourceManager\\tests\\ResourceManagerTests.cs:line 266\r\n   at System.Linq.Enumerable.SelectEnumerableIterator`2.MoveNext() in F:\\git\\corefx\\src\\System.Linq\\src\\System\\Linq\\Select.cs:line 135\r\n----- Inner Stack Trace -----\r\n   at System.Runtime.InteropServices.FunctionWrapper`1.get_Delegate() in F:\\git\\corefx\\src\\Common\\src\\System\\Runtime\\InteropServices\\FunctionWrapper.cs:line 37\r\n   at System.Drawing.SafeNativeMethods.Gdip.GdiplusStartup(IntPtr& token, StartupInput& input, StartupOutput& output) in F:\\git\\corefx\\src\\System.Drawing.Common\\src\\System\\Drawing\\GdiplusNative.Windows.cs:line 241\r\n   at System.Drawing.SafeNativeMethods.Gdip..cctor() in F:\\git\\corefx\\src\\System.Drawing.Common\\src\\System\\Drawing\\Gdiplus.cs:line 85\r\n```\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2673651/testResults.zip)\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/34038","RelatedDescription":"Closed issue \"[arm32/Windows] System.Resources.ResourceManager.Tests failures on arm32 windows\" (#34038)"},{"Id":"390432281","IsPullRequest":true,"CreatedAt":"2018-12-12T22:15:20","Actor":"Wraith2","Number":"34044","RawContent":null,"Title":"Optimize SqlClient tds state to remove handle boxing","State":"open","Body":"These changes remove constant boxing of session and packet IntPtr when using the native implementation of TdsParserStateObject (native is used in windows non-uap builds) which improves memory performance. Making these changes also allows assertion of the handle types in debug builds which adds safety and testability.\r\n\r\nI have added a project define constant called `FEATURE_INTEROPSNI` so that unix or uap builds which don't include the interop definitions also don't include the IntPtr field in the `PacketHandle` and `SessionHandle` ref structs I have added. I have used ref structs to ensure that the types can only be used to pass information through the abstract methods that define the interface between the core parser logic and the native/managed specific elements, these handles can never be accidentally stored or take part in async activity.\r\n\r\nPerformance profiling results were posted in https://github.com/dotnet/corefx/pull/33155 and show approximately ~13% speed increase on small write performance and lower GC frequency.\r\n\r\nThis PR was split from #33155 for easier review.\r\n/cc @keeratsingh @AfsanehR @saurabh500 @David-Engel","Url":"https://github.com/dotnet/corefx/pull/34044","RelatedDescription":"Open PR \"Optimize SqlClient tds state to remove handle boxing\" (#34044)"},{"Id":"390431532","IsPullRequest":true,"CreatedAt":"2018-12-12T22:13:14","Actor":"ViktorHofer","Number":"34043","RawContent":null,"Title":"[WIP] Test CI","State":"open","Body":"","Url":"https://github.com/dotnet/corefx/pull/34043","RelatedDescription":"Open PR \"[WIP] Test CI\" (#34043)"},{"Id":"390429965","IsPullRequest":false,"CreatedAt":"2018-12-12T22:08:26","Actor":"joperezr","Number":"34042","RawContent":null,"Title":"[arm32/Windows] System.Runtime.InteropServices.Tests failures on arm32 windows","State":"open","Body":"Running the arm32 tests on windows for System.Runtime.InteropServices.Tests produced the following results: passed 1485/1525 tests.\r\n\r\nMost of the 40 test failures have this callstack:\r\n```\r\nSystem.Runtime.InteropServices.COMException : Retrieving the COM class factory for component with CLSID {927971F5-0939-11D1-8BE1-00C04FD8D503} failed due to the following error: 80040154 Class not registered (Exception from HRESULT: 0x80040154 (REGDB_E_CLASSNOTREG)).\r\n   at System.Runtime.InteropServices.Tests.ChangeWrapperHandleStrengthTests.ChangeWrapperHandleStrength_ComObject_TestData()+MoveNext() in F:\\git\\corefx\\src\\System.Runtime.InteropServices\\tests\\System\\Runtime\\InteropServices\\Marshal\\ChangeWrapperHandleStrengthTests.Windows.cs:line 15\r\n   at System.Linq.Enumerable.SelectEnumerableIterator`2.MoveNext() in F:\\git\\corefx\\src\\System.Linq\\src\\System\\Linq\\Select.cs:line 135\r\n```\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2673716/testResults.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/34042","RelatedDescription":"Open issue \"[arm32/Windows] System.Runtime.InteropServices.Tests failures on arm32 windows\" (#34042)"},{"Id":"390429561","IsPullRequest":true,"CreatedAt":"2018-12-12T22:07:13","Actor":"Wraith2","Number":"34040","RawContent":null,"Title":"Update SqlClient manual test feature detection","State":"open","Body":"This changes to the ManualTests to add conditional facts on Udt and ServiceBroker reliant test cases so they won't run if the resources required aren't present or enabled. Without these changes local test runs have many errors and it can be difficult to see real problems for the noise.\r\n\r\nCan a script or bak file for the `UdtTestDb` database be provided by someone who has it? It isn't possible to run a full set of manual tests without it.\r\n\r\nThis PR was split from https://github.com/dotnet/corefx/pull/33155 and into multiple commits for easier review.\r\n\r\n/cc @keeratsingh @AfsanehR @saurabh500 @David-Engel","Url":"https://github.com/dotnet/corefx/pull/34040","RelatedDescription":"Open PR \"Update SqlClient manual test feature detection\" (#34040)"},{"Id":"390420646","IsPullRequest":false,"CreatedAt":"2018-12-12T21:41:09","Actor":"joperezr","Number":"34037","RawContent":null,"Title":"[arm32/Windows] System.Net.Security.Tests failures on arm32 windows","State":"open","Body":"Running the arm32 tests on windows for System.Net.Security.Tests produced the following results: failed 138/4148 tests and we needed to disable all tests in the following classes since they where hanging forever:\r\n```\r\nServerRequireEncryptionTest\r\nServerAllowNoEncryptionTest\r\nServerNoEncryptionTest\r\nTransportContextTest\r\nClientAsyncAuthenticateTest\r\nClientDefaultEncryptionTest\r\n```\r\n\r\nFor the 138 tests that failed, they all failed with the following exception:\r\n```\r\nInternal.Cryptography.CryptoThrowHelper+WindowsCryptographicException : Access denied.\r\n   at Internal.Cryptography.Pal.CertificatePal.FilterPFXStore(Byte[] rawData, SafePasswordHandle password, PfxCertStoreFlags pfxCertStoreFlags) in F:\\git\\corefx\\src\\System.Security.Cryptography.X509Certificates\\src\\Internal\\Cryptography\\Pal.Windows\\CertificatePal.Import.cs:line 152\r\n   at Internal.Cryptography.Pal.CertificatePal.FromBlobOrFile(Byte[] rawData, String fileName, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags) in F:\\git\\corefx\\src\\System.Security.Cryptography.X509Certificates\\src\\Internal\\Cryptography\\Pal.Windows\\CertificatePal.Import.cs:line 88\r\n   at Internal.Cryptography.Pal.CertificatePal.FromBlob(Byte[] rawData, SafePasswordHandle password, X509KeyStorageFlags keyStorageFlags) in F:\\git\\corefx\\src\\System.Security.Cryptography.X509Certificates\\src\\Internal\\Cryptography\\Pal.Windows\\CertificatePal.Import.cs:line 21\r\n   at System.Security.Cryptography.X509Certificates.X509Certificate..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags) in F:\\git\\corefx\\src\\System.Security.Cryptography.X509Certificates\\src\\System\\Security\\Cryptography\\X509Certificates\\X509Certificate.cs:line 81\r\n   at System.Security.Cryptography.X509Certificates.X509Certificate2..ctor(Byte[] rawData, String password, X509KeyStorageFlags keyStorageFlags) in F:\\git\\corefx\\src\\System.Security.Cryptography.X509Certificates\\src\\System\\Security\\Cryptography\\X509Certificates\\X509Certificate2.cs:line 62\r\n   at System.Net.Test.Common.Configuration.Certificates.GetCertificate(String certificateFileName)\r\n   at System.Net.Test.Common.Configuration.Certificates.GetServerCertificate()\r\n   at System.Net.Test.Common.Configuration.Certificates.GetServerCertificateCollection()\r\n   at System.Net.Security.Tests.CertificateValidationClientServer..ctor()\r\n```\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2673643/testResults.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/34037","RelatedDescription":"Open issue \"[arm32/Windows] System.Net.Security.Tests failures on arm32 windows\" (#34037)"},{"Id":"390414944","IsPullRequest":true,"CreatedAt":"2018-12-12T21:24:13","Actor":"pakrym","Number":"34035","RawContent":null,"Title":"Don't lose continuation on multiple FlushAsync call","State":"open","Body":"Fixes: https://github.com/dotnet/corefx/issues/34014","Url":"https://github.com/dotnet/corefx/pull/34035","RelatedDescription":"Open PR \"Don't lose continuation on multiple FlushAsync call\" (#34035)"},{"Id":"390406470","IsPullRequest":false,"CreatedAt":"2018-12-12T20:59:34","Actor":"joperezr","Number":"34034","RawContent":null,"Title":"[arm32/Windows] System.Net.Http.Functional.Tests failures on arm32 windows","State":"open","Body":"Running the arm32 tests on windows for System.Net.Http.Functional.Tests produced the following results: passed 5856/5911 tests.\r\n\r\nAll 55 test failures seem to be caused due to different root causes. Attaching the testResults.xml for further diagnosis.\r\n\r\n[testResults.zip](https://github.com/dotnet/corefx/files/2673507/testResults.zip)\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/34034","RelatedDescription":"Open issue \"[arm32/Windows] System.Net.Http.Functional.Tests failures on arm32 windows\" (#34034)"},{"Id":"390392959","IsPullRequest":false,"CreatedAt":"2018-12-12T20:19:56","Actor":"halter73","Number":"34033","RawContent":null,"Title":"SslStream object disposed exception","State":"open","Body":"_From @timmydo on Saturday, 08 December 2018 21:55:49_\r\n\r\nI'm not sure if this is the right place to report this, but I'm seeing this exception occasionally:\r\n\r\nkubernetes docker pod uname -a:\r\nLinux platform-prod-577cf48b4b-wrg7x 4.15.0-1030-azure #31~16.04.1-Ubuntu SMP Tue Oct 30 \r\n\r\ncontext:\r\nrunning kestrel behind nginx on linux in docker image based on dotnet:2.1-aspnetcore-runtime\r\n```\r\n19:40:01 UTC 2018 x86_64 GNU/Linux\r\nUnhandled Exception: System.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'SslStream'.\r\n   at System.Net.Security.SslState.ThrowIfExceptional()\r\n   at System.Net.Security.SslState.CheckThrow(Boolean authSuccessCheck, Boolean shutdownCheck)\r\n   at System.Net.Security.SslState.CheckOldKeyDecryptedData(Memory`1 buffer)\r\n   at System.Net.Security.SslState.HandleQueuedCallback(Object& queuedStateRequest)\r\n   at System.Net.Security.SslState.FinishHandshakeRead(Int32 newState)\r\n   at System.Net.Security.SslState.FinishHandshake(Exception e, AsyncProtocolRequest asyncRequest)\r\n   at System.Net.Security.SslState.RehandshakeCompleteCallback(IAsyncResult result)\r\n   at System.Net.LazyAsyncResult.Complete(IntPtr userToken)\r\n   at System.Net.LazyAsyncResult.ProtectedInvokeCallback(Object result, IntPtr userToken)\r\n   at System.Net.AsyncProtocolRequest.CompleteUserWithError(Exception e)\r\n   at System.Net.FixedSizeReader.ReadPacketAsync(Stream transport, AsyncProtocolRequest request)\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```\r\n\r\npod error code:\r\n\r\n```\r\nLast State:     Terminated\r\n      Reason:       Error\r\n      Exit Code:    139\r\n      Started:      Fri, 07 Dec 2018 17:06:46 -0800\r\n      Finished:     Fri, 07 Dec 2018 23:48:04 -0800\r\n```\r\n\r\nlet me know if there is more info I could provide. thanks.\r\n\r\n_Copied from original issue: aspnet/KestrelHttpServer#3111_","Url":"https://github.com/dotnet/corefx/issues/34033","RelatedDescription":"Open issue \"SslStream object disposed exception\" (#34033)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"390509886","IsPullRequest":false,"CreatedAt":"2018-12-13T04:07:45","Actor":"Pilchie","Number":"31740","RawContent":null,"Title":"Nullable and attributes with array args don't work","State":"open","Body":"**Version Used**: \r\n2.11.0-beta2-63529-05\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Open the following project in the IDE, observe two errors.\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net472</TargetFramework>\r\n    <LangVersion>8.0</LangVersion>\r\n    <NullableReferenceTypes>true</NullableReferenceTypes>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.NET.Compilers\" Version=\"2.11.0-beta2-63529-05\" PrivateAssets=\"All\" /> \r\n    <PackageReference Include=\"microsoft.visualstudio.shell.15.0\" Version=\"16.0.28316-pre\" />\r\n    <PackageReference Include=\"xunit\" Version=\"2.4.1\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n```c#\r\nusing System;\r\nusing Microsoft.VisualStudio.Shell;\r\nusing Xunit;\r\n\r\n[ProvideUIContextRule(ActivationContextGuid,\r\n    \"Load Managed Project Package\",\r\n\"dotnetcore\",\r\nnew string[] { \"dotnetcore\" },\r\nnew string[] { \"SolutionHasProjectCapability:.NET & CPS\" }\r\n)]\r\npublic class Program\r\n{\r\n    public const string ActivationContextGuid = \"\";\r\n\r\n    [Theory]\r\n    [InlineData(new object[] { new string[] { \"Hi\" } })]\r\n    public void Main(string[] args)\r\n    {\r\n        Assert.NotEmpty(args);\r\n    }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nCompiles fine\r\n\r\n**Actual Behavior**:\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0182\tAn attribute argument must be a constant expression, typeof expression or array creation expression of an attribute parameter type\tConsoleApp4\tC:\\Users\\kevinpi\\source\\repos\\ConsoleApp4\\ConsoleApp4\\Program.cs\t5\tActive\r\nError\txUnit1010\tThe value is not convertible to the method parameter 'args' of type 'string[]'.\tConsoleApp4\tC:\\Users\\kevinpi\\source\\repos\\ConsoleApp4\\ConsoleApp4\\Program.cs\t16\tActive\r\n","Url":"https://github.com/dotnet/roslyn/issues/31740","RelatedDescription":"Open issue \"Nullable and attributes with array args don't work\" (#31740)"},{"Id":"390500035","IsPullRequest":false,"CreatedAt":"2018-12-13T03:13:29","Actor":"sharwell","Number":"31739","RawContent":null,"Title":"FailFast in integration tests","State":"open","Body":"Observed in the debug leg.\r\nhttps://dnceng.visualstudio.com/public/_build/results?buildId=57289\r\n\r\n```\r\nEvent Time (UTC): 12/12/2018 12:29:07 PM\r\nEvent ID: 1025\r\nData: Application: devenv.exe\r\nFramework Version: v4.0.30319\r\nDescription: The application requested process termination through System.Environment.FailFast(string message).\r\nMessage: System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultBuilder.AppendDiagnostics(Dictionary`2& map, Document documentOpt, Diagnostic diagnostic)\r\n   at Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultBuilder.AddDiagnostics(Dictionary`2& lazyLocals, SyntaxTree tree, IEnumerable`1 diagnostics)\r\n   at Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultBuilder.AddSyntaxDiagnostics(SyntaxTree tree, IEnumerable`1 diagnostics)\r\n   at Microsoft.CodeAnalysis.Diagnostics.Extensions.ToResultBuilderMap(AnalysisResult analysisResult, Project project, VersionStamp version, Compilation compilation, IEnumerable`1 analyzers, CancellationToken cancellationToken)\r\n   at Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.InProcOrRemoteHostAnalyzerRunner.<AnalyzeInProcAsync>d__6.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.InProcOrRemoteHostAnalyzerRunner.<AnalyzeAsync>d__4.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.Executor.<AnalyzeAsync>d__16.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\r\n   at Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer.Executor.<ComputeDiagnosticsAsync>d__7.MoveNext()\r\nStack:\r\n   at System.Environment.FailFast(System.String, System.Exception)\r\n   at Microsoft.CodeAnalysis.FailFast.OnFatalException(System.Exception)\r\n   at Microsoft.CodeAnalysis.ErrorReporting.FatalError.Report(System.Exception, System.Action`1<System.Exception>)\r\n   at Microsoft.CodeAnalysis.ErrorReporting.FatalError.Report(System.Exception)\r\n   at Microsoft.CodeAnalysis.ErrorReporting.FatalError.ReportUnlessCanceled(System.Exception)\r\n   at Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer+Executor+<ComputeDiagnosticsAsync>d__7.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(System.Threading.Tasks.Task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1+ConfiguredTaskAwaiter[[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultMap`2[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResult, Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]], Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].GetResult()\r\n   at Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer+Executor+<ComputeDiagnosticsAsync>d__7.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean)\r\n   at System.Threading.Tasks.Task`1[[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultMap`2[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResult, Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]], Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].TrySetException(System.Object)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultMap`2[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResult, Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]], Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].SetException(System.Exception)\r\n   at Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer+Executor+<AnalyzeAsync>d__16.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean)\r\n   at System.Threading.Tasks.Task`1[[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultMap`2[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResult, Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]], Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].TrySetException(System.Object)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultMap`2[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResult, Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]], Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].SetException(System.Exception)\r\n   at Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer+InProcOrRemoteHostAnalyzerRunner+<AnalyzeAsync>d__4.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean)\r\n   at System.Threading.Tasks.Task`1[[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultMap`2[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResult, Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]], Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].TrySetException(System.Object)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResultMap`2[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[Microsoft.CodeAnalysis.Workspaces.Diagnostics.DiagnosticAnalysisResult, Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]], Microsoft.CodeAnalysis.Workspaces, Version=42.42.42.42, Culture=neutral, PublicKeyToken=31bf3856ad364e35]].SetException(System.Exception)\r\n   at Microsoft.CodeAnalysis.Diagnostics.EngineV2.DiagnosticIncrementalAnalyzer+InProcOrRemoteHostAnalyzerRunner+<AnalyzeInProcAsync>d__6.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers+<GetAnalysisResultAsync>d__40.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers+<GetAnalysisResultWithoutStateTrackingAsync>d__47.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.Threading.Tasks.VoidTaskResult)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.Threading.Tasks.VoidTaskResult)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult()\r\n   at Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers+<ComputeAnalyzerDiagnosticsWithoutStateTrackingAsync>d__49.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.ExecuteEntry(Boolean)\r\n   at System.Threading.Tasks.ThreadPoolTaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task, Boolean)\r\n   at System.Threading.Tasks.TaskScheduler.TryRunInline(System.Threading.Tasks.Task, Boolean)\r\n   at System.Threading.Tasks.TaskContinuation.InlineIfPossibleOrElseQueue(System.Threading.Tasks.Task, Boolean)\r\n   at System.Threading.Tasks.StandardTaskContinuation.Run(System.Threading.Tasks.Task, Boolean)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.Threading.Tasks.VoidTaskResult)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.Threading.Tasks.VoidTaskResult)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult()\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver+<ExecutePrimaryAnalysisTaskAsync>d__64.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.Threading.Tasks.VoidTaskResult)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.Threading.Tasks.VoidTaskResult)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult()\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver+<ProcessCompilationEventsAsync>d__87.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver+<ProcessCompilationEventsCoreAsync>d__88.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.Threading.Tasks.VoidTaskResult)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.Threading.Tasks.VoidTaskResult, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.Threading.Tasks.VoidTaskResult)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder.SetResult()\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver+<ProcessEventAsync>d__89.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver+<TryProcessEventCoreAsync>d__91.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver+<TryProcessSymbolDeclaredAsync>d__92.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver+<GetPerSymbolAnalyzerActionsAsync>d__108.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver+<GetPerSymbolAnalyzerActionsAsync>d__109.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerDriver+<>c__DisplayClass109_0+<<GetPerSymbolAnalyzerActionsAsync>g__getSymbolActionsCoreAsync|1>d.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncValueTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerManager+<GetPerSymbolAnalyzerActionsAsync>d__13.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerManager+<GetSymbolAnalysisScopeAsync>d__8.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].TrySetResult(System.__Canon)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1[[System.__Canon, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].SetResult(System.__Canon)\r\n   at Microsoft.CodeAnalysis.Diagnostics.AnalyzerManager+<GetSymbolAnalysisScopeCoreAsync>d__9.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.InvokeMoveNext(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+MoveNextRunner.Run()\r\n   at System.Threading.Tasks.AwaitTaskContinuation.RunOrScheduleAction(System.Action, Boolean, System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.FinishContinuations()\r\n   at System.Threading.Tasks.Task.FinishStageThree()\r\n   at System.Threading.Tasks.Task.FinishStageTwo()\r\n   at System.Threading.Tasks.Task.Finish(Boolean)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef)\r\n   at System.Threading.Tasks.Task.ExecuteEntry(Boolean)\r\n   at System.Threading.Tasks.Task.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()\r\n```","Url":"https://github.com/dotnet/roslyn/issues/31739","RelatedDescription":"Open issue \"FailFast in integration tests\" (#31739)"},{"Id":"390485564","IsPullRequest":true,"CreatedAt":"2018-12-13T03:00:06","Actor":"dotnet-bot","Number":"31736","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/31736","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#31736)"},{"Id":"390496043","IsPullRequest":true,"CreatedAt":"2018-12-13T02:51:52","Actor":"KirillOsenkov","Number":"31738","RawContent":null,"Title":"Tolerate snippets where Shortcut is null.","State":"open","Body":"Simple null-check for snippet.Shortcut in preprocessor context check.","Url":"https://github.com/dotnet/roslyn/pull/31738","RelatedDescription":"Open PR \"Tolerate snippets where Shortcut is null.\" (#31738)"},{"Id":"390489032","IsPullRequest":false,"CreatedAt":"2018-12-13T02:15:28","Actor":"nguerrera","Number":"31737","RawContent":null,"Title":"Roslyn failing on latest coreclr","State":"open","Body":"This is blocking insertion of runtime into core-sdk in https://github.com/dotnet/core-sdk/pull/204\r\n\r\n```\r\nerror MSB4061: The \"Csc\" task could not be instantiated from \"D:\\Src\\core-sdk\\bin\\2\\win-x64\\dotnet\\sdk\\3.0.100-preview-009827\\Roslyn\\Microsoft.Build.Tasks.CodeAnalysis.dll\". \r\n\r\nSystem.TypeInitializationException: The type initializer for 'Microsoft.CodeAnalysis.BuildTasks.ManagedCompiler' threw an exception. \r\n---> System.TypeInitializationException: The type initializer for 'Microsoft.CodeAnalysis.BuildTasks.AssemblyResolution' threw an exception. \r\n---> System.TypeInitializationException: The type initializer for '_AppDomain' threw an exception. \r\n---> System.ArgumentNullException: Value cannot be null.\r\nParameter name: type\r\n   at System.Reflection.IntrospectionExtensions.GetTypeInfo(Type type)\r\n   at Roslyn.Utilities.CorLightup.Desktop._AppDomain..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.CodeAnalysis.BuildTasks.AssemblyResolution..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.CodeAnalysis.BuildTasks.ManagedCompiler..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.CodeAnalysis.BuildTasks.ManagedCompiler..ctor()\r\n   at Microsoft.CodeAnalysis.BuildTasks.Csc..ctor() \r\n```\r\n\r\nWhy is code in CorLightup.*Desktop* running on CoreCLR? It is failing against implementation changes in .NET Core 3.0.\r\n\r\ncc @jaredpar @jkotas","Url":"https://github.com/dotnet/roslyn/issues/31737","RelatedDescription":"Open issue \"Roslyn failing on latest coreclr\" (#31737)"},{"Id":"390455263","IsPullRequest":true,"CreatedAt":"2018-12-13T01:55:37","Actor":"genlu","Number":"31727","RawContent":null,"Title":"Revert #31132","State":"closed","Body":"FYI @jinujoe @chborl ","Url":"https://github.com/dotnet/roslyn/pull/31727","RelatedDescription":"Closed or merged PR \"Revert #31132\" (#31727)"},{"Id":"390476577","IsPullRequest":false,"CreatedAt":"2018-12-13T01:13:13","Actor":"Tanya-Solyanik","Number":"31735","RawContent":null,"Title":"Can't save .cs file after changing the Name property of a Button in Winforms property grid","State":"open","Body":"**Version Used**: \r\nDev16 (d16.0stg branch), works fine in VS 2017\r\nThis is customer feedback from the preview channel - \r\nhttps://developercommunity.visualstudio.com/content/problem/400702/cant-save-cs-file-after-changing-the-name-attribut.html\r\n\r\n**Steps to Reproduce**:\r\n1 Create a Winforms application.\r\n2 Drag and drop a Button control to Form1 designer.\r\n3 Rename the Name property for this Button control.\r\n4 Save the Form1.cs file.\r\n\r\n\r\n**Expected Behavior**:\r\nfile is saved\r\n\r\n**Actual Behavior**:\r\nerror box \r\n<img width=\"519\" alt=\"image\" src=\"https://user-images.githubusercontent.com/15823268/49908799-f9f0e700-fe30-11e8-8fd9-5f9d86029c17.png\">\r\n\r\nMicrosoft.VisualStudio.LanguageServices.Implementation.dll!Microsoft.VisualStudio.LanguageServices.Implementation.CodeModel.AbstractCodeModelService.LookupNode(Microsoft.VisualStudio.LanguageServices.Implementation.CodeModel.SyntaxNodeKey nodeKey, Microsoft.CodeAnalysis.SyntaxTree syntaxTree) Line 153\tC#\r\n  Microsoft.VisualStudio.LanguageServices.Implementation.dll!Microsoft.VisualStudio.LanguageServices.Implementation.CodeModel.InternalElements.AbstractKeyedCodeElement.LookupNode() Line 55\tC#\r\n  Microsoft.VisualStudio.LanguageServices.Implementation.dll!Microsoft.VisualStudio.LanguageServices.Implementation.CodeModel.InternalElements.AbstractCodeElement.GetName() Line 106\tC#\r\n  Microsoft.VisualStudio.LanguageServices.Implementation.dll!Microsoft.VisualStudio.LanguageServices.Implementation.CodeModel.InternalElements.AbstractKeyedCodeElement.GetName() Line 109\tC#\r\n  Microsoft.VisualStudio.LanguageServices.Implementation.dll!Microsoft.VisualStudio.LanguageServices.Implementation.CodeModel.InternalElements.AbstractCodeElement.Name.get() Line 117\tC#\r\n \t[Native to Managed Transition]\t\r\n \t[Managed to Native Transition]\t\r\n  Microsoft.VisualStudio.Design.dll!Microsoft.VisualStudio.Design.Serialization.CodeDom.VSCodeDomGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o)\tUnknown","Url":"https://github.com/dotnet/roslyn/issues/31735","RelatedDescription":"Open issue \"Can't save .cs file after changing the Name property of a Button in Winforms property grid\" (#31735)"},{"Id":"390475556","IsPullRequest":true,"CreatedAt":"2018-12-13T01:08:11","Actor":"heejaechang","Number":"31734","RawContent":null,"Title":"removed IEditorClassificationService that is marked obsolete since 20…","State":"open","Body":"…17 and bunch of other code that only existed for the IEditorClassificationService.\r\n\r\naccording to vso, only F# still has dependency so I talked to them to move to new API (IClassificationService) - https://devdiv.visualstudio.com/DevDiv/_git/DotNet-Source-Build-Tarball?path=%2Fsrc%2Ffsharp%2Fvsintegration%2Fsrc%2FFSharp.Editor%2FClassification%2FColorizationService.fs&version=GBmaster\r\n\r\nand bunch of clean up and move code that has no depdency to editor to lower layers so that I can consume in razor scenario.","Url":"https://github.com/dotnet/roslyn/pull/31734","RelatedDescription":"Open PR \"removed IEditorClassificationService that is marked obsolete since 20…\" (#31734)"},{"Id":"390460848","IsPullRequest":true,"CreatedAt":"2018-12-13T01:00:05","Actor":"dotnet-bot","Number":"31729","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/31729","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#31729)"},{"Id":"390468142","IsPullRequest":false,"CreatedAt":"2018-12-13T00:32:22","Actor":"cston","Number":"31733","RawContent":null,"Title":"Warning reported for dereference after first dereference with `!`","State":"open","Body":"Should not report a warning for `x.GetHashCode()` since the previous dereference in `x!.ToString()` succeeded:\r\n```C#\r\n#nullable enable\r\n\r\nclass Program\r\n{\r\n    static void F(object? x)\r\n    {\r\n        _ = x!.ToString();\r\n        _ = x.GetHashCode(); // warning: may be null\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/31733","RelatedDescription":"Open issue \"Warning reported for dereference after first dereference with `!`\" (#31733)"},{"Id":"390466991","IsPullRequest":false,"CreatedAt":"2018-12-13T00:27:13","Actor":"cston","Number":"31732","RawContent":null,"Title":"Consider making `!` sticky","State":"open","Body":"After `!`, the variable should be considered non-nullable until the value is modified.\r\n\r\nFor instance, there should be no warning for the call to `x.ToString()`:\r\n```c#\r\nclass Program\r\n{\r\n    static void F(bool b, object? x)\r\n    {\r\n        if (b)\r\n        {\r\n            G(x!);\r\n            _ = x.ToString(); // no warning\r\n        }\r\n        _ = x.GetHashCode(); // warning: may be null\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/31732","RelatedDescription":"Open issue \"Consider making `!` sticky\" (#31732)"},{"Id":"390461504","IsPullRequest":true,"CreatedAt":"2018-12-13T00:02:52","Actor":"cston","Number":"31731","RawContent":null,"Title":"Merge 'upstream/master' into 'upstream/features/NullableDogfood'","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/31731","RelatedDescription":"Open PR \"Merge 'upstream/master' into 'upstream/features/NullableDogfood'\" (#31731)"},{"Id":"390460863","IsPullRequest":true,"CreatedAt":"2018-12-13T00:00:31","Actor":"dotnet-bot","Number":"31730","RawContent":null,"Title":"Merge master to features/editorconfig-in-compiler","State":"open","Body":"\nThis is an automatically generated pull request from master into features/editorconfig-in-compiler.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/editorconfig-in-compiler\ngit reset --hard upstream/features/editorconfig-in-compiler\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-features/editorconfig-in-compiler --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/31730","RelatedDescription":"Open PR \"Merge master to features/editorconfig-in-compiler\" (#31730)"},{"Id":"390453340","IsPullRequest":true,"CreatedAt":"2018-12-12T23:49:13","Actor":"cston","Number":"31726","RawContent":null,"Title":"Rename our pipeline YAML files","State":"closed","Body":"See 37a7383794.","Url":"https://github.com/dotnet/roslyn/pull/31726","RelatedDescription":"Closed or merged PR \"Rename our pipeline YAML files\" (#31726)"},{"Id":"390457848","IsPullRequest":true,"CreatedAt":"2018-12-12T23:47:38","Actor":"tmeschter","Number":"31728","RawContent":null,"Title":"Fix incremental build","State":"open","Body":"We currently consider the potential .editorconfig files to be inputs to\r\nthe `CoreCompile` targets. This breaks incremental builds, as MSBuild\r\nwill now always see an \"input\" from a previous build as missing, even\r\nthough it was never there.\r\n\r\nThe fix here is to just remove the potential .editorconfig files from\r\nthe list of inputs.","Url":"https://github.com/dotnet/roslyn/pull/31728","RelatedDescription":"Open PR \"Fix incremental build\" (#31728)"},{"Id":"390430264","IsPullRequest":true,"CreatedAt":"2018-12-12T23:29:15","Actor":"jasonmalinowski","Number":"31723","RawContent":null,"Title":"Add a compat overload for IntelliCode","State":"closed","Body":"This fixes an IntelliCode crash with our bits in master. Having them move to the new code is difficult since their extension needs to support multiple versions.","Url":"https://github.com/dotnet/roslyn/pull/31723","RelatedDescription":"Closed or merged PR \"Add a compat overload for IntelliCode\" (#31723)"},{"Id":"390435503","IsPullRequest":true,"CreatedAt":"2018-12-12T23:25:05","Actor":"genlu","Number":"31725","RawContent":null,"Title":"Remove legacy RPS test from opt-prof run","State":"closed","Body":"@jmarolf @jaredpar ","Url":"https://github.com/dotnet/roslyn/pull/31725","RelatedDescription":"Closed or merged PR \"Remove legacy RPS test from opt-prof run\" (#31725)"},{"Id":"390406096","IsPullRequest":true,"CreatedAt":"2018-12-12T23:20:59","Actor":"333fred","Number":"31721","RawContent":null,"Title":"Fix a bug in the syntax generator with VB constructors and attributes.","State":"closed","Body":"Fixes https://github.com/dotnet/roslyn/issues/31720. @dotnet/roslyn-compiler for a very quick review.","Url":"https://github.com/dotnet/roslyn/pull/31721","RelatedDescription":"Closed or merged PR \"Fix a bug in the syntax generator with VB constructors and attributes.\" (#31721)"},{"Id":"390405020","IsPullRequest":false,"CreatedAt":"2018-12-12T23:20:59","Actor":"333fred","Number":"31720","RawContent":null,"Title":"`InvalidCastException` when calling `VisualBasicSyntaxGenerator.GetAttributes()` with a VB constructor","State":"closed","Body":"As title says. Discovered in an integration test run.","Url":"https://github.com/dotnet/roslyn/issues/31720","RelatedDescription":"Closed issue \"`InvalidCastException` when calling `VisualBasicSyntaxGenerator.GetAttributes()` with a VB constructor\" (#31720)"},{"Id":"390434965","IsPullRequest":true,"CreatedAt":"2018-12-12T22:23:17","Actor":"333fred","Number":"31724","RawContent":null,"Title":"Additional adjustments to the flow graph verifier.","State":"open","Body":"@AlekseyTs @dotnet/roslyn-compiler for review. This should be the last change required for https://github.com/dotnet/roslyn/issues/31450.\r\n\r\n@jaredpar, could you PR the IOperation test changes for CI to this branch so I can mark this as fixing that bug?","Url":"https://github.com/dotnet/roslyn/pull/31724","RelatedDescription":"Open PR \"Additional adjustments to the flow graph verifier.\" (#31724)"},{"Id":"390412432","IsPullRequest":true,"CreatedAt":"2018-12-12T21:17:07","Actor":"agocke","Number":"31722","RawContent":null,"Title":"Add support for number range matching","State":"open","Body":"The EditorConfig spec supports a matching construct '{number..number}'\r\nin the section header language which matches any number between the\r\ntwo given numbers.\r\n\r\nIt turns out that this is a rather obnoxious thing to encode in a regex\r\n(although possible). Instead, I've decided to store the number range in\r\na side list and match any number in the regex, comparing the ranges\r\nafter the fact.","Url":"https://github.com/dotnet/roslyn/pull/31722","RelatedDescription":"Open PR \"Add support for number range matching\" (#31722)"},{"Id":"390387297","IsPullRequest":true,"CreatedAt":"2018-12-12T20:03:26","Actor":"cston","Number":"31719","RawContent":null,"Title":"Annotate NullableWalker","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/31719","RelatedDescription":"Open PR \"Annotate NullableWalker\" (#31719)"},{"Id":"390375606","IsPullRequest":false,"CreatedAt":"2018-12-12T19:31:16","Actor":"AlekseyTs","Number":"31718","RawContent":null,"Title":"Unexpected result of inference for a top level nullability for an array element type","State":"open","Body":"```\r\n        [Fact]\r\n        public void ArrayInitializer_()\r\n        {\r\n            var source =\r\n@\"class A\r\n{\r\n    public static implicit operator B(A? a) => new B();\r\n}\r\nclass B\r\n{\r\n}\r\nclass C\r\n{\r\n    static void F(B x, A? y)\r\n    {\r\n        (new[] { x, y })[0].ToString();\r\n        (new[] { y, x })[0].ToString();\r\n    }\r\n}\";\r\n            var comp = CreateCompilation(new[] { source }, options: WithNonNullTypesTrue());\r\n            comp.VerifyDiagnostics();\r\n        }\r\n```\r\n\r\n```\r\nExpected:\r\nActual:\r\n                // (12,9): warning CS8602: Possible dereference of a null reference.\r\n                //         (new[] { x, y })[0].ToString();\r\n                Diagnostic(ErrorCode.WRN_NullReferenceReceiver, \"(new[] { x, y })[0]\").WithLocation(12, 9),\r\n                // (13,9): warning CS8602: Possible dereference of a null reference.\r\n                //         (new[] { y, x })[0].ToString();\r\n                Diagnostic(ErrorCode.WRN_NullReferenceReceiver, \"(new[] { y, x })[0]\").WithLocation(13, 9)\r\n```\r\n\r\nIt looks like the top level nullability is inferred from source types. I think it should be inferred from nullable states after the conversion to the dominant type is applied.","Url":"https://github.com/dotnet/roslyn/issues/31718","RelatedDescription":"Open issue \"Unexpected result of inference for a top level nullability for an array element type\" (#31718)"},{"Id":"390194353","IsPullRequest":true,"CreatedAt":"2018-12-12T19:04:52","Actor":"dotnet-bot","Number":"31712","RawContent":null,"Title":"Merge master to features/editorconfig-in-compiler","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/editorconfig-in-compiler.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/editorconfig-in-compiler\ngit reset --hard upstream/features/editorconfig-in-compiler\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-features/editorconfig-in-compiler --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/31712","RelatedDescription":"Closed or merged PR \"Merge master to features/editorconfig-in-compiler\" (#31712)"},{"Id":"390194306","IsPullRequest":true,"CreatedAt":"2018-12-12T19:04:37","Actor":"dotnet-bot","Number":"31711","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/31711","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#31711)"},{"Id":"390345523","IsPullRequest":true,"CreatedAt":"2018-12-12T18:08:10","Actor":"sharwell","Number":"31717","RawContent":null,"Title":"Simplify SetForegroundWindow","State":"open","Body":"Switch from `SetForegroundWindow` to `SwitchToThisWindow` to bring a window to the front. The latter is used by Task Manager's \"Switch To\" functionality, and doesn't have the same restrictions regarding the state of the window manager prior to the call.","Url":"https://github.com/dotnet/roslyn/pull/31717","RelatedDescription":"Open PR \"Simplify SetForegroundWindow\" (#31717)"},{"Id":"390333127","IsPullRequest":true,"CreatedAt":"2018-12-12T17:34:29","Actor":"sharwell","Number":"31716","RawContent":null,"Title":"Increase severity of local function naming style to Warning","State":"open","Body":"Helps prevent missed cases like occurred in #31708.","Url":"https://github.com/dotnet/roslyn/pull/31716","RelatedDescription":"Open PR \"Increase severity of local function naming style to Warning\" (#31716)"},{"Id":"390281660","IsPullRequest":false,"CreatedAt":"2018-12-12T15:37:48","Actor":"VasiliyZhushma","Number":"31715","RawContent":null,"Title":"\"using static\" directive is not working for extension methods","State":"open","Body":"**Version Used**: \r\nVisual Studio Enterprise 2017 (15.9.2) / C# 7.0 - 7.3\r\n\r\n**Steps to Reproduce**:\r\nI have removed base class instance methods to a separate static class and made them extension methods:\r\n```\r\npublic static class DataRowExtensions\r\n{\r\n\tpublic static Result<T> GetValue<T>(this DataRow row, string columnName, T defaultValue = default)\r\n\t{\r\n\t\tvar table = row.Table;\r\n\t\treturn table.Columns.Contains(columnName)\r\n\t\t\t\t? Result.Ok(row.IsNull(columnName) ? defaultValue : row.Field<T>(columnName))\r\n\t\t\t\t: Result.Error<T>(new ArgumentException($\"Class {table.TableName} does not contain attribute {columnName}!\"));\r\n\t}\r\n…\r\n}\r\n```\r\nAnd since derived classes have many lines using that methods, I've decided to fix them by adding\r\n```\r\nusing static CompanyName.Common.DataRowExtensions;\r\n```\r\nto the files with derived classes which use those methods.\r\n\r\n**Expected Behavior**:\r\nIt is possible to use extension methods (which are effectively just static methods with ExtensionAttribute added) of DataRowExtensions class without specifying class name:\r\n```\r\nvar myResult = GetValue<string>(dataRow, \"SomeColumn\", \"default value\");\r\n```\r\n\r\n**Actual Behavior**:\r\nI get the compiler error CS0103: The name 'GetValue' does not exist in the current context.\r\nIf I make GetValue method not extension (remove ```this``` in first parameter), then it becomes usable without class name, as soon as \"using static\" directive imports it.\r\n","Url":"https://github.com/dotnet/roslyn/issues/31715","RelatedDescription":"Open issue \"\"using static\" directive is not working for extension methods\" (#31715)"},{"Id":"390261804","IsPullRequest":false,"CreatedAt":"2018-12-12T14:54:30","Actor":"sharwell","Number":"31714","RawContent":null,"Title":"Classification of quick info content is incomplete","State":"open","Body":"This section of the quick info classification isn't using the new semantic classification types.\r\n\r\nhttps://github.com/dotnet/roslyn/blob/1747cbb4dd69e7adcddc4a095cdf18fce6cd190b/src/Features/Core/Portable/Common/TaggedText.cs#L108-L120\r\n\r\n","Url":"https://github.com/dotnet/roslyn/issues/31714","RelatedDescription":"Open issue \"Classification of quick info content is incomplete\" (#31714)"},{"Id":"390234866","IsPullRequest":false,"CreatedAt":"2018-12-12T13:51:13","Actor":"zhangvv","Number":"31713","RawContent":null,"Title":"Static class using Equals method in vs2019 preview occur crash","State":"open","Body":"**vs2019 preview 1.1**: \r\n\r\n**Steps to Reproduce**:\r\n\r\n1. I have a FtpHelper static class.\r\n2. FtpHelper.Equals(obj,obj)  can cause vs crash,as shwon in the figure.\r\n \r\n![bug](https://user-images.githubusercontent.com/18322950/49873087-f6238b80-fe55-11e8-9b1d-17cf212318ea.png)\r\n\r\nby the way:\r\n I install vs2017 and 2019 on my win7, and then the \"report problems\" will not work.Before i install vs2019,it can work on vs2017.\r\n","Url":"https://github.com/dotnet/roslyn/issues/31713","RelatedDescription":"Open issue \"Static class using Equals method in vs2019 preview occur crash\" (#31713)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"390340707","IsPullRequest":true,"CreatedAt":"2018-12-12T17:55:04","Actor":"trylek","Number":"6681","RawContent":null,"Title":"Initial support for GC ref map emission in the CPAOT compiler","State":"open","Body":"I have basically forked away ArgIterator and TransitionBlock from\r\nthe calling convention converter and I adapted it to use by the\r\nCPAOT compiler. I have not yet added multi-architecture support,\r\nfor now it only works for the compiler build architecture. There are\r\nalso a few NotImplemented cases I'll fix once I hit them in testing.\r\n\r\nMy initial thinking is that, after finalizing this code and after\r\nwe start working on other architectures, I'll further refactor this\r\ncode based on JanK's suggestion by merging in preprocessed versions\r\nof the ArgIterator source file for the four architectures.\r\n\r\nI also plan to further experiment with runtime architecture\r\nvirtualization that I tried to prototype in a trimmed-down\r\nclone of TransitionBlock I coded up for the purpose of R2RDump\r\nGC ref map decoder and I'm quite pleased with the result which\r\nlooks quite elegant and compact to me.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/6681","RelatedDescription":"Open PR \"Initial support for GC ref map emission in the CPAOT compiler\" (#6681)"},{"Id":"388854973","IsPullRequest":true,"CreatedAt":"2018-12-12T17:20:52","Actor":"trylek","Number":"6664","RawContent":null,"Title":"Additional fixes for field placement in CPAOT","State":"closed","Body":"After making improvements to R2RDump to let me smoothly diff CPAOT\r\nand Crossgen code I managed to identify tests crashing to obvious\r\ninconsistencies in access to class / struct fields. There were\r\nmultiple reasons for these inconsistencies and, while I cannot claim\r\nthis change fixes all of them, it fixes quite a few.\r\n\r\nWhile our longer-term plan is to start embedding field placement\r\ninformation in the R2R executables, I believe this change is useful\r\nto both provide immediate fixes for some of the previously failing\r\nCoreCLR tests and to seed the CPAOT field placement algorithm with\r\na closer match to what CoreCLR uses - even if we decide to deviate\r\nfrom that at some point, it's still probably a reasonable starting\r\npoint.\r\n\r\n1) My original implementation of the static field layout placement\r\nwas based on the method Module::BuildStaticsOffsets but that's\r\nincorrect - this method is only used to calculate the required space\r\nfor statics of each type in the module and use this information to\r\ncalculate offsets within a big array that subsequently gets allocated\r\nas part of the DomainLocalModule / ThreadLocalModule structures.\r\nFor the actual field placement, MethodTableBuilder uses the same\r\nalgorithm as the dynamic layout placement so I unified these two\r\nand I refactored the code to cater for the two-level field resolution.\r\n\r\n2) Reverse token lookup for fields was incomplete so I fixed that.\r\n\r\n3) For static struct fields, we must set a special flag in CPAOT,\r\nCORINFO_FIELD_FLAGS.CORINFO_FLG_FIELD_STATIC_IN_HEAP, this triggers\r\nthe proper double indirection code in JIT that caters for implicitly\r\nboxed struct statics in CoreCLR.\r\n\r\n4) For extra-bubble statics, we instead use a special helper\r\nREADYTORUN_HELPER_FieldAddress in accordance with the postprocessing\r\nin ZapInfo::getFieldInfo around lines 2940-2990.\r\n\r\n5) For instance fields, it turns out there's a slight difference in\r\nhow CoreRT vs. CoreCLR decides field layout for structs. In CoreRT,\r\nstructs use sequential layout by default. In CoreCLR, structs use\r\nsequential layout only when they are blittable, otherwise they use\r\nauto layout.\r\n\r\n6) As part of this change I have forked out the method\r\n\"MarshalHelpers.IsBlittableType\" into a separate static class\r\nIsBlittable because the MarshalHelpers carry around a ton of\r\ndependencies that wreak havoc when propagating to all places where\r\nthe blittable check is newly used as part of the field placement\r\nlogic. With this surgical separation I managed to make this change\r\nrequire very few changes to other projects.\r\n\r\nThanks\r\n\r\nTomas","Url":"https://github.com/dotnet/corert/pull/6664","RelatedDescription":"Closed or merged PR \"Additional fixes for field placement in CPAOT\" (#6664)"},{"Id":"390260931","IsPullRequest":true,"CreatedAt":"2018-12-12T15:59:02","Actor":"Dotnet-GitSync-Bot","Number":"6680","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @pentp","Url":"https://github.com/dotnet/corert/pull/6680","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6680)"},{"Id":"389384132","IsPullRequest":true,"CreatedAt":"2018-12-12T15:15:55","Actor":"MarcoRossignoli","Number":"6669","RawContent":null,"Title":"[ILVerify]Check interface method implementation","State":"closed","Body":"closes https://github.com/dotnet/corert/issues/6203\r\nOutput message:\r\n```\r\n[MD]: Error: Class implements interface but not method, Class: '[InterfaceImplementation]MissingMethod_InvalidType_InterfaceMethodNotImplemented' Interface: '[InterfaceDefinition]Interface' Method: [InterfaceDefinition]Interface.M1()(class:02000004 interface:09000004 method:06000001).\r\n```\r\n\r\n/cc @jkotas @MichalStrehovsky","Url":"https://github.com/dotnet/corert/pull/6669","RelatedDescription":"Closed or merged PR \"[ILVerify]Check interface method implementation\" (#6669)"},{"Id":"390184149","IsPullRequest":false,"CreatedAt":"2018-12-12T14:01:12","Actor":"jojify","Number":"6679","RawContent":null,"Title":"Failed to build Chromely (https://github.com/mattkol/Chromely)","State":"closed","Body":"Chromely is built using .Net standard 2.0.\r\nI used latest pre- release version (Install-Package Chromely.CefGlue.Winapi -Version 68.0.0-pre01).\r\nPlease find the attached screenshot.\r\n![sh1](https://user-images.githubusercontent.com/3658295/49859167-dc198700-fe1c-11e8-8782-9f575d75dabe.png)\r\n\r\nI followed steps from the link exactly. (https://github.com/mattkol/Chromely/wiki/Getting-Started-CefGlue-Winapi-(.NET-Core)). \r\nWhen I build the program using visual studio, it runs perfectly. \r\n\r\nBut again when I tried to build using CoreRT, I got the native executable in the native folder. It shows an error:-Value can't be null. parameter name :path1. Attached screen shot.\r\n![sc2](https://user-images.githubusercontent.com/3658295/49860871-a8d8f700-fe20-11e8-83d5-01f549154887.png)\r\n\r\n[chromely Sample.zip](https://github.com/mattkol/Chromely/files/2671351/chromely.Sample.zip)\r\n\r\nI am trying to build a native application using chromely. It will be great if you can take a look into this.\r\n\r\n","Url":"https://github.com/dotnet/corert/issues/6679","RelatedDescription":"Closed issue \"Failed to build Chromely (https://github.com/mattkol/Chromely)\" (#6679)"},{"Id":"390121697","IsPullRequest":true,"CreatedAt":"2018-12-12T12:10:26","Actor":"MichalStrehovsky","Number":"6677","RawContent":null,"Title":"Add comment to WinRT SystemSupportsLeapSeconds","State":"closed","Body":"Per https://github.com/dotnet/corert/pull/6672#issuecomment-446430564.","Url":"https://github.com/dotnet/corert/pull/6677","RelatedDescription":"Closed or merged PR \"Add comment to WinRT SystemSupportsLeapSeconds\" (#6677)"},{"Id":"390122572","IsPullRequest":true,"CreatedAt":"2018-12-12T08:52:12","Actor":"kvochko","Number":"6678","RawContent":null,"Title":"Generate ARM CFIs in the correct order","State":"open","Body":"This is a CoreRT counterpart to https://github.com/dotnet/coreclr/pull/21505 . Since CFI codes are now generated in prolog, they are already in reverse order, so we don't need to reverse them in CoreRT.\r\nFixes #6626 \r\nCC @jkotas @alpencolt ","Url":"https://github.com/dotnet/corert/pull/6678","RelatedDescription":"Open PR \"Generate ARM CFIs in the correct order\" (#6678)"},{"Id":"389955581","IsPullRequest":true,"CreatedAt":"2018-12-12T04:40:26","Actor":"Dotnet-GitSync-Bot","Number":"6676","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/6676","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6676)"},{"Id":"389835095","IsPullRequest":true,"CreatedAt":"2018-12-11T16:02:59","Actor":"MichalStrehovsky","Number":"6675","RawContent":null,"Title":"Make it possible to align at 32 byte boundaries","State":"open","Body":"This will be necessary to support computing layout for types that embed `Vector256`.\r\n\r\nFollow up on https://github.com/dotnet/corert/pull/6663#issuecomment-445574774.\r\n\r\nThis is foundational work needed to support the new HW intrinsics. We may or may not end up implementing function multiversioning for ready to run for .NET Core 3.0 CPAOT, but being able to compute the layout will let us at least pregenerate method bodies that pass through vector types without actually calling the intrinsics.\r\n\r\nSee individual commits. I'm flexible on whether we should include 47bacbd.","Url":"https://github.com/dotnet/corert/pull/6675","RelatedDescription":"Open PR \"Make it possible to align at 32 byte boundaries\" (#6675)"},{"Id":"389776056","IsPullRequest":true,"CreatedAt":"2018-12-11T13:55:45","Actor":"MichalStrehovsky","Number":"6674","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6674","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#6674)"},{"Id":"389496528","IsPullRequest":true,"CreatedAt":"2018-12-11T12:18:32","Actor":"Dotnet-GitSync-Bot","Number":"6671","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/6671","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6671)"},{"Id":"389609642","IsPullRequest":true,"CreatedAt":"2018-12-11T10:03:32","Actor":"jkotas","Number":"6673","RawContent":null,"Title":"Delete unnecessary struct initialization","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6673","RelatedDescription":"Closed or merged PR \"Delete unnecessary struct initialization\" (#6673)"},{"Id":"389401689","IsPullRequest":true,"CreatedAt":"2018-12-11T06:06:22","Actor":"MichalStrehovsky","Number":"6670","RawContent":null,"Title":"Rename IlogB -> ILogB","State":"closed","Body":"This was updated in dotnet/coreclr#20912. Fortunately, ApiCompat found it in dotnet/corefx#33956.","Url":"https://github.com/dotnet/corert/pull/6670","RelatedDescription":"Closed or merged PR \"Rename IlogB -> ILogB\" (#6670)"},{"Id":"389560609","IsPullRequest":true,"CreatedAt":"2018-12-11T06:01:27","Actor":"tarekgh","Number":"6672","RawContent":null,"Title":"Fix leap seconds mirrored code","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6672","RelatedDescription":"Closed or merged PR \"Fix leap seconds mirrored code\" (#6672)"},{"Id":"389240063","IsPullRequest":true,"CreatedAt":"2018-12-10T15:53:16","Actor":"Dotnet-GitSync-Bot","Number":"6668","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @stephentoub @tarekgh","Url":"https://github.com/dotnet/corert/pull/6668","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#6668)"},{"Id":"388845374","IsPullRequest":true,"CreatedAt":"2018-12-10T10:38:08","Actor":"Dotnet-GitSync-Bot","Number":"6663","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/6663","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6663)"},{"Id":"389194828","IsPullRequest":true,"CreatedAt":"2018-12-10T09:32:45","Actor":"MichalStrehovsky","Number":"6667","RawContent":null,"Title":"Update RyuJIT","State":"closed","Body":"Probably needed to unblock #6663.","Url":"https://github.com/dotnet/corert/pull/6667","RelatedDescription":"Closed or merged PR \"Update RyuJIT\" (#6667)"},{"Id":"389067443","IsPullRequest":true,"CreatedAt":"2018-12-10T03:28:03","Actor":"MichalStrehovsky","Number":"6666","RawContent":null,"Title":"Fix handling of intrinsic types in RyuJIT","State":"closed","Body":"This should unblock integrations from CoreCLR.","Url":"https://github.com/dotnet/corert/pull/6666","RelatedDescription":"Closed or merged PR \"Fix handling of intrinsic types in RyuJIT\" (#6666)"},{"Id":"389067160","IsPullRequest":false,"CreatedAt":"2018-12-09T21:40:30","Actor":"MichalStrehovsky","Number":"6665","RawContent":null,"Title":"Auto layout algorithm doesn't compute the right size","State":"open","Body":"Found when I was running the tests Tanner added in dotnet/coreclr#15961 (while half of the tests focuses on Vector64/128/256, the second half is a general purpose test and we're failing computing the right sizes).\r\n\r\nI have a fix that is halfway there in https://github.com/MichalStrehovsky/corert/commit/7f94460a4a0e2ea550dfdf26c4c5603bfc22faf3.\r\n\r\nWhat it lacks is handling of Align8 and unit tests.\r\n\r\nFor the record, here's the relevant part of the output of Tanner's test:\r\n\r\n```\r\nUnexpected Size for AutoLayoutMinPacking`1[System.Char].\r\n     Expected: 4; Actual: 3\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.Double].\r\n     Expected: 16; Actual: 9\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.Int16].\r\n     Expected: 4; Actual: 3\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.Int32].\r\n     Expected: 8; Actual: 5\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.Int64].\r\n     Expected: 16; Actual: 9\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.IntPtr].\r\n     Expected: 16; Actual: 9\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.Single].\r\n     Expected: 8; Actual: 5\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.UInt16].\r\n     Expected: 4; Actual: 3\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.UInt32].\r\n     Expected: 8; Actual: 5\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.UInt64].\r\n     Expected: 16; Actual: 9\r\n\r\nUnexpected Size for AutoLayoutMinPacking`1[System.UIntPtr].\r\n     Expected: 16; Actual: 9\r\n```","Url":"https://github.com/dotnet/corert/issues/6665","RelatedDescription":"Open issue \"Auto layout algorithm doesn't compute the right size\" (#6665)"},{"Id":"388342926","IsPullRequest":true,"CreatedAt":"2018-12-08T00:06:44","Actor":"nattress","Number":"6653","RawContent":null,"Title":"Improvements to R2R Test Harness","State":"closed","Body":"To support multi-core testing, associate the test process's PID with the ETW filter so that only assemblies loaded by the runtime the harness started are considered.\r\n\r\nEmit the assembly name for methods that are jitted to allow grouping of methods by their assembly.\r\n\r\nAdd a new parameter, `--include` which configures the ETW filter to include all assemblies in a given folder, instead of having to specify a large number of assemblies individually.\r\n\r\nBug fixes around path casing causing events to be dropped.","Url":"https://github.com/dotnet/corert/pull/6653","RelatedDescription":"Closed or merged PR \"Improvements to R2R Test Harness\" (#6653)"},{"Id":"388347383","IsPullRequest":true,"CreatedAt":"2018-12-07T21:58:05","Actor":"stephentoub","Number":"6655","RawContent":null,"Title":"Fix CancellationTokenRegistration.Token after CTS.Dispose","State":"closed","Body":"Port https://github.com/dotnet/coreclr/pull/21394 to corert","Url":"https://github.com/dotnet/corert/pull/6655","RelatedDescription":"Closed or merged PR \"Fix CancellationTokenRegistration.Token after CTS.Dispose\" (#6655)"},{"Id":"388775575","IsPullRequest":true,"CreatedAt":"2018-12-07T20:23:02","Actor":"Dotnet-GitSync-Bot","Number":"6662","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/6662","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6662)"},{"Id":"388653472","IsPullRequest":true,"CreatedAt":"2018-12-07T14:18:54","Actor":"Dotnet-GitSync-Bot","Number":"6661","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/6661","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#6661)"},{"Id":"388602491","IsPullRequest":true,"CreatedAt":"2018-12-07T13:20:15","Actor":"Dotnet-GitSync-Bot","Number":"6660","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/6660","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6660)"},{"Id":"388400207","IsPullRequest":true,"CreatedAt":"2018-12-07T10:47:49","Actor":"Dotnet-GitSync-Bot","Number":"6657","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/6657","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#6657)"},{"Id":"388601063","IsPullRequest":true,"CreatedAt":"2018-12-07T10:47:02","Actor":"MichalStrehovsky","Number":"6659","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6659","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#6659)"},{"Id":"388588514","IsPullRequest":true,"CreatedAt":"2018-12-07T10:46:28","Actor":"MichalStrehovsky","Number":"6658","RawContent":null,"Title":"Work around an MCG bug","State":"closed","Body":"This is blocking TFS integrations.","Url":"https://github.com/dotnet/corert/pull/6658","RelatedDescription":"Closed or merged PR \"Work around an MCG bug\" (#6658)"},{"Id":"388343215","IsPullRequest":true,"CreatedAt":"2018-12-07T03:23:30","Actor":"nattress","Number":"6654","RawContent":null,"Title":"R2R all methods in entrypoint assemblies","State":"closed","Body":"Our early work retained the split that the classic RyuJit-based CoreRT compiler uses where for assemblies with a `Main` method only the set of methods statically reachable from `Main` were compiled. This was fine for a single-file AOT compiler, because we built the entire call graph across assemblies. For ready-to-run, this can cause methods needed at runtime to not get compiled if they're called in a round-about way (via dependency injection for example).","Url":"https://github.com/dotnet/corert/pull/6654","RelatedDescription":"Closed or merged PR \"R2R all methods in entrypoint assemblies\" (#6654)"},{"Id":"388365422","IsPullRequest":true,"CreatedAt":"2018-12-06T20:56:58","Actor":"Dotnet-GitSync-Bot","Number":"6656","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/6656","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6656)"},{"Id":"388329912","IsPullRequest":true,"CreatedAt":"2018-12-06T19:31:58","Actor":"Dotnet-GitSync-Bot","Number":"6652","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkoritzinsky","Url":"https://github.com/dotnet/corert/pull/6652","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6652)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"390333769","IsPullRequest":false,"CreatedAt":"2018-12-12T17:36:19","Actor":"abpiskunov","Number":"2747","RawContent":null,"Title":"Add publish capabilities for SDK based ClassLibraries and ConsoleApps","State":"open","Body":"Per our discussion with @nguerrera and @davkean we need to switch to new capabilities schema for publish (see below). To accomplish that one of the workitems is to add\r\n\r\n- FolderPublish to SDK-based class libraries and console apps , along with WPF and WinForms (if it is not present yet)\r\n- AppServicePublish to SDK-based class libraries and console apps \r\n\r\nThis needs to happen in P2 and earlier rather than later since Publish would need to commit and test changes after all capabilities are added.\r\n\r\nCapabilities \r\n \r\n•         \"Publish\": all projects that support any kind of publish should contain this capability\r\no    All .NET project types\r\n•         \"FolderPublish\": if project supports publishing to folder\r\no    Class libraries  (classic and core). Note: we don't own Publish for classic class libraries and classic ConsoleApps, ClickOnce does. There should be separate work item tracking ClickOnce support for our publish framework. However we can add capability now and it would light up when ClickOnce adds apublish provider.\r\no    Console app (classic, core). \r\no    WebSites, WAP, Web core\r\no    WPF (core and classic)\r\no    WinForms (classic and core)\r\n•         \"AppServicePublish\": if project is publishable to any web related publish target: Web, AppService, etc \r\no    Console apps (classic and core)\r\no    WebSites, WAP, Web core\r\n \r\nPotential pending capabilities:\r\n•         \"ClickOnce\"\r\no    Classic console apps\r\no    WPF (classic)\r\no    WinForms (classic)\r\n•         \"MSIX\"\r\no    Console apps (classic and core)\r\no    WPF (classic and core)\r\no    WinForms (classic and core)\r\n \r\n \r\n \r\nProviders \r\n \r\n•         FolderProvider: AppliesTo(\"Publish&FolderPublish\")\r\n•         AppServiceProvider: AppliesTo(\"Publish&AppServicePublish\")\r\n•         IISProvider: AppliesTo(\"Publish&Web\")\r\n•         AzureVMProvider: AppliesTo(\"Publish&Web\")\r\n•         AppServiceLinuxProvider: AppliesTo(\"Publish&DotNetCoreWeb\")\r\n•         ContainerRegistryProvider:AppliesTo(Publish&AppServicePublish&(Web|DotnetCoreWeb))\r\n•         ClickOnceProvider:AppliesTo(Publish&ClickOnce)\r\n•         MSIXProvider:AppliesTo(Publish&MSIX)\r\n \r\n \r\nWorkitems:\r\n \r\n•\tAdd FolderPublish to WPF and WinForms (classic and core), Class Libraries and Console Apps (classic and core). Some of them already have it , just make sure all of them have. <- CSharp & SDK\r\n•\tAdd AppServicePublish to Console apps (classic and core) <- CSharp and SDK\r\n•\tAdd AppServicePublish to WebSites, WAP, and Core Web <- WAP and WebSdk\r\n \r\nClickOnce and MSIX I would leave to their owner to request/add when they are ready.\r\n","Url":"https://github.com/dotnet/sdk/issues/2747","RelatedDescription":"Open issue \"Add publish capabilities for SDK based ClassLibraries and ConsoleApps\" (#2747)"},{"Id":"390007564","IsPullRequest":true,"CreatedAt":"2018-12-12T00:01:34","Actor":"dotnet-bot","Number":"2746","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2746","RelatedDescription":"Open PR \"Merge release/2.2.2xx to master\" (#2746)"},{"Id":"389994622","IsPullRequest":true,"CreatedAt":"2018-12-11T23:11:35","Actor":"jainaashish","Number":"2745","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview1.5707 into sdk","State":"open","Body":"Keeping it consistent with 2.2.2xx train","Url":"https://github.com/dotnet/sdk/pull/2745","RelatedDescription":"Open PR \"Insert NuGet Build 5.0.0-preview1.5707 into sdk\" (#2745)"},{"Id":"388856924","IsPullRequest":true,"CreatedAt":"2018-12-11T20:00:15","Actor":"dotnet-bot","Number":"2734","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2734","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to master\" (#2734)"},{"Id":"389616201","IsPullRequest":true,"CreatedAt":"2018-12-11T18:52:09","Actor":"wli3","Number":"2741","RawContent":null,"Title":"Merge/2.1.6xx to 2.2.2xx","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/2741","RelatedDescription":"Closed or merged PR \"Merge/2.1.6xx to 2.2.2xx\" (#2741)"},{"Id":"389836302","IsPullRequest":true,"CreatedAt":"2018-12-11T17:33:37","Actor":"nugetlurker","Number":"2743","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview1.5707 into sdk","State":"closed","Body":"Insert NuGet Build 5.0.0-preview1.5707 into sdk release/2.2.2xx branch","Url":"https://github.com/dotnet/sdk/pull/2743","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-preview1.5707 into sdk\" (#2743)"},{"Id":"389836305","IsPullRequest":true,"CreatedAt":"2018-12-11T17:33:03","Actor":"nugetlurker","Number":"2744","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview1.5707 into sdk","State":"closed","Body":"Insert NuGet Build 5.0.0-preview1.5707 into sdk release/2.1.6xx branch","Url":"https://github.com/dotnet/sdk/pull/2744","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-preview1.5707 into sdk\" (#2744)"},{"Id":"389753827","IsPullRequest":true,"CreatedAt":"2018-12-11T13:02:02","Actor":"dotnet-maestro[bot]","Number":"2742","RawContent":null,"Title":"Update dependency files","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18610.4\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18611.14\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2742","RelatedDescription":"Open PR \"Update dependency files\" (#2742)"},{"Id":"389095908","IsPullRequest":true,"CreatedAt":"2018-12-11T05:51:42","Actor":"dsplaisted","Number":"2738","RawContent":null,"Title":"Support ASP.NET Core PackageReference when targeting .NET Core 3.0 or higher","State":"closed","Body":"Fixes dotnet/cli#10124\r\n\r\nAlso fixes #2527","Url":"https://github.com/dotnet/sdk/pull/2738","RelatedDescription":"Closed or merged PR \"Support ASP.NET Core PackageReference when targeting .NET Core 3.0 or higher\" (#2738)"},{"Id":"389564061","IsPullRequest":true,"CreatedAt":"2018-12-11T01:58:29","Actor":"nguerrera","Number":"2740","RawContent":null,"Title":"Attempt to fix broken official build and run full msbuild tests only on correct leg","State":"open","Body":"Two severe issues:\r\n\r\n1. Official build is failing, and it's apparently at a line where we are attempting to use undefined $env:VSSDKInstall. It is unclear what this line was accomplishing so I've removed it. I suspect it may have been working around past arcade version issues. Does that ring a bell?\r\n\r\n2. In the port to arcade, the act of running tests against full msbuild was coupled to building with full msbuild whereas before it was a custom build argument. Now the latest arcade is always building with VS when available, which means are tests are not running on core on Windows on any leg. I've opportunistically tied it to an env var instead of the build engine.","Url":"https://github.com/dotnet/sdk/pull/2740","RelatedDescription":"Open PR \"Attempt to fix broken official build and run full msbuild tests only on correct leg\" (#2740)"},{"Id":"389501017","IsPullRequest":true,"CreatedAt":"2018-12-11T01:22:12","Actor":"wli3","Number":"2739","RawContent":null,"Title":"Use PackageVersion for shim gen","State":"closed","Body":"fix #2698\r\nPackageVersion should be the source of truth for nuget layout.\r\n\r\nhttps://github.com/NuGet/NuGet.Client/blob/3c9b61826814dc800a2a295f0985ce4f295483d6/src/NuGet.Core/NuGet.Build.Tasks.Pack/NuGet.Build.Tasks.Pack.targets#L28","Url":"https://github.com/dotnet/sdk/pull/2739","RelatedDescription":"Closed or merged PR \"Use PackageVersion for shim gen\" (#2739)"},{"Id":"388920248","IsPullRequest":true,"CreatedAt":"2018-12-09T18:55:11","Actor":"dotnet-maestro[bot]","Number":"2736","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18607.6\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18608.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2736","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2736)"},{"Id":"389031990","IsPullRequest":false,"CreatedAt":"2018-12-09T15:09:06","Actor":"nguerrera","Number":"2737","RawContent":null,"Title":"NetCore2.1->2.2 Upgrade Issue; TargetFramework dropped/not recognized","State":"open","Body":"_From @pinkfloydx33 on December 5, 2018 13:40_\n\nI'm trying to upgrade my web application from netCore 2.1 to 2.2. I have updated the TargetFramework to netcoreapp2.2 and I receive the following errors upon restore/build/clean:\r\n\r\n```\r\nMyProduct.Web.csproj : error NU1202: Package Microsoft.AspNetCore.App 2.2.0 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1). Package Microsoft.AspNetCore.App 2.2.0 supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2)\r\nMyProduct.Web.csproj : error NU1202: Package Microsoft.NETCore.App 2.2.0 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1). Package Microsoft.NETCore.App 2.2.0 supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2)\r\nMyProduct.Web.csproj : error NU1202: Package Microsoft.AspNetCore.App 2.2.0 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1) / win-x64. Package Microsoft.AspNetCore.App 2.2.0 supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2)\r\nMyProduct.Web.csproj : error NU1202: Package Microsoft.NETCore.App 2.2.0 is not compatible with netcoreapp2.1 (.NETCoreApp,Version=v2.1) / win-x64. Package Microsoft.NETCore.App 2.2.0 supports: netcoreapp2.2 (.NETCoreApp,Version=v2.2)\r\n```\r\n\r\nI have also done a manual clean (deleting obj/bin directories). \r\n\r\nI **can** build if I change from using `<TargetFramework>` to `<TargetFrameworks>`, however I'd rather not do this and attempt to locate the underlying issue. I have two test projects in the same solution that reference the main project. I was able to migrate _them_ to netcoreapp2.2 without switching to TargetFramework**s**, I would like to do the same thing for the main web app.\r\n\r\nWhen I use TargetFramework (singular), Visual Studio updates the dependencies graph and removes the SDK node:\r\n![image](https://user-images.githubusercontent.com/395615/49516771-63d52380-f868-11e8-9f5c-49ac2676585f.png)\r\n\r\nI've tried adding a global.json specifying the SDK version directly as 2.2.100 but that doesn't make any difference.\r\n\r\nHere is my .csproj file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n\r\n\t<PropertyGroup>\r\n\t\t<AssemblyName>MyProduct.Web</AssemblyName>\r\n\t\t<OutputType>Exe</OutputType>\r\n\t\t<TargetFramework>netcoreapp2.2</TargetFramework>\r\n\t\t<PreserveCompilationContext>true</PreserveCompilationContext>\r\n\t\t<LangVersion>latest</LangVersion>\r\n\t</PropertyGroup>\r\n\r\n\t<PropertyGroup>\r\n\t\t<GenerateAssemblyInfo>false</GenerateAssemblyInfo>\r\n\t\t<PackageId>$(AssemblyName)</PackageId>\r\n\t\t<Authors>MyCompany</Authors>\r\n\t</PropertyGroup>\r\n\r\n\t<PropertyGroup Condition=\"'$(Configuration)' == 'Debug'\">\r\n\t\t<RazorCompileOnBuild>false</RazorCompileOnBuild>\r\n\t\t<RazorCompileOnPublish>false</RazorCompileOnPublish>\r\n\t</PropertyGroup>\r\n\r\n\t<PropertyGroup Condition=\"'$(Configuration)'=='Debug'\">\r\n\t  <DefineConstants>DEBUG;TRACE</DefineConstants>\r\n\t</PropertyGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<None Update=\"wwwroot\\**\\*\">\r\n\t\t\t<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>\r\n\t\t</None>\r\n\t</ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<ProjectReference Include=\"..\\MyProduct.Web.Core\\MyProduct.Web.Core.csproj\" />\r\n\t\t<ProjectReference Include=\"..\\MyProduct.Web.Api.Contracts\\MyProduct.Web.Api.Contracts.csproj\" />\r\n\t\t<ProjectReference Include=\"..\\MyProduct.Web.ViewModels\\MyProduct.Web.ViewModels.csproj\" />\r\n\t</ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Microsoft.AspNetCore.App\" />\r\n\t\t<PackageReference Include=\"BeginCollectionItemCore\" Version=\"1.0.4\" />\r\n\t\t<PackageReference Include=\"Novell.Directory.Ldap.NETStandard\" Version=\"2.3.5\" />\r\n\t\t<PackageReference Include=\"Microsoft.AspNetCore.Authentication.Cookies\" Version=\"2.2.0\" />\r\n\t\t<PackageReference Include=\"Microsoft.AspNetCore.Authentication.JwtBearer\" Version=\"2.2.0\" />\r\n\t</ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Microsoft.AspNetCore.Razor.Design\" Version=\"2.2.0\" PrivateAssets=\"All\" />\r\n\t\t<PackageReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Design\" Version=\"2.2.0\" PrivateAssets=\"All\" />\r\n\t\t<DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.4\" />\r\n\t</ItemGroup>\r\n\r\n\t<ItemGroup>\r\n\t\t<Content Update=\"Views\\_ViewImports.cshtml\">\r\n\t\t\t<Pack>$(IncludeRazorContentInPack)</Pack>\r\n\t\t</Content>\r\n\t</ItemGroup>\r\n\r\n</Project>\r\n```\n\n_Copied from original issue: dotnet/corefx#33834_","Url":"https://github.com/dotnet/sdk/issues/2737","RelatedDescription":"Open issue \"NetCore2.1->2.2 Upgrade Issue; TargetFramework dropped/not recognized\" (#2737)"},{"Id":"388893591","IsPullRequest":false,"CreatedAt":"2018-12-08T06:49:25","Actor":"yyjdelete","Number":"2735","RawContent":null,"Title":"`Invalid runtimeconfig.json` is produced when duplicate FrameworkReference exists in 3.0preview","State":"open","Body":"Move from aspnet/AspNetCore#4490\r\n\r\n### Step\r\ndotnet sdk 3.0.0-preview-27122-01 is needed.\r\n1. `dotnet new webapi`\r\n2. change the csproj to add an FrameworkReference   `<FrameworkReference Include=\"Microsoft.AspNetCore.App\" />`\r\n3. `dotnet run`\r\n\r\nIt can also be reproduce with `dotnet new console` by add more than one same FrameworkReference\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n    <FrameworkReference Include=\"Microsoft.AspNetCore.App\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n***NOTE:***\r\nWhen the number of duplicated FrameworkReference is changed, the `xxx.runtimeconfig.json` only change after an `dotnet clean` and build, seems the cache and build have different rule in this special case? Not sure if it's another issue, or just an part of this.\r\n\r\n### Expected\r\nBuild error, or run successful.\r\n```json\r\n{\r\n  \"runtimeOptions\": {\r\n    \"tfm\": \"netcoreapp3.0\",\r\n    \"framework\": {\r\n      \"name\": \"Microsoft.AspNetCore.App\",\r\n      \"version\": \"3.0.0-preview-18579-0056\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### Actual\r\nBuild successful, but run failed with `Invalid runtimeconfig.json`. See the duplicate `Microsoft.AspNetCore.App` in `frameworks` here.\r\n```json\r\n{\r\n  \"runtimeOptions\": {\r\n    \"tfm\": \"netcoreapp3.0\",\r\n    \"frameworks\": [\r\n      {\r\n        \"name\": \"Microsoft.AspNetCore.App\",\r\n        \"version\": \"3.0.0-preview-18579-0056\"\r\n      },\r\n      {\r\n        \"name\": \"Microsoft.AspNetCore.App\",\r\n        \"version\": \"3.0.0-preview-18579-0056\"\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n### Details\r\ndotnet --info\r\n.NET Core SDK（反映任何 global.json）:\r\n Version:   3.0.100-preview-009812\r\n Commit:    e3abf6e935\r\n<details>\r\n\r\n运行时环境:\r\n OS Name:     Windows\r\n OS Version:  10.0.18290\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-009812\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27122-01\r\n  Commit:  00c5c8bc40\r\n\r\n.NET Core SDKs installed:\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009404 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009426 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100-preview3-009430 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview-009812 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0-preview3-35497 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0-preview3-35497 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-18579-0056 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0-preview3-27014-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27122-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-alpha-27128-4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n</details>","Url":"https://github.com/dotnet/sdk/issues/2735","RelatedDescription":"Open issue \"`Invalid runtimeconfig.json` is produced when duplicate FrameworkReference exists in 3.0preview\" (#2735)"},{"Id":"388822770","IsPullRequest":false,"CreatedAt":"2018-12-08T00:32:25","Actor":"dagood","Number":"2733","RawContent":null,"Title":"Incorrect \"repository\" element in Microsoft.NET.Sdk's nuspec","State":"closed","Body":"In this nupkg from a recent build:\r\nhttps://dotnetfeed.blob.core.windows.net/dotnet-core/flatcontainer/microsoft.net.sdk/3.0.100-preview.18603.1/microsoft.net.sdk.3.0.100-preview.18603.1.nupkg\r\n\r\nThe nuspec contains this line:\r\n\r\n```\r\n<repository type=\"git\" url=\"https://github.com//\" commit=\"7bb277dbfdfe52a71b9decc88897510cc8d6be42\" />\r\n```\r\n\r\n`https://github.com//` should be `https://github.com/dotnet/sdk`\r\n\r\nThis might be an Arcade issue, failure to detect the source? I'm not familiar enough with how packaging works now to quickly find where this is happening.\r\n\r\n(I was only looking for the commit, but figured I should file this issue for the wrong url anyway.)","Url":"https://github.com/dotnet/sdk/issues/2733","RelatedDescription":"Closed issue \"Incorrect \"repository\" element in Microsoft.NET.Sdk's nuspec\" (#2733)"},{"Id":"388114295","IsPullRequest":false,"CreatedAt":"2018-12-07T18:53:58","Actor":"Szer","Number":"2724","RawContent":null,"Title":"FSharp.Core explicit dependency downgraded to implicit one","State":"closed","Body":"**Problem:**\r\n\r\nIf I put explicit dependency on FSharp.Core higher than implicit one (which for 2.1.500 is 4.5.2) it will downgrade it to implicit one no matter what.\r\n\r\n**Steps to reproduce**\r\n* Net SDK 2.1.500\r\n* FSproj:\r\n```fsproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>netstandard2.0</TargetFramework>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <Compile Include=\"Program.fs\" />\r\n  </ItemGroup> \r\n  \r\n  <ItemGroup>\r\n    <PackageReference Include=\"FSharp.Core\" Version=\"4.5.4\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n* useless Program.fs\r\n```fsharp\r\nmodule A\r\nlet a = 1\r\n```\r\n* `dotnet restore` or `dotnet build`\r\n* check `FSharp.Core` version in `obj\\project.assets.json`\r\n\r\n**Expected**\r\n\r\n`FSharp.Core` should restore to explicit version, to `4.5.4`\r\n\r\n**Actual**\r\n\r\n`FSharp.Core` is being restored to implicit version, to `4.5.2`\r\n\r\n**Known workarounds**\r\n\r\n* Add `<DisableImplicitFSharpCoreReference>true</DisableImplicitFSharpCoreReference>` to fsproj\r\n* Use VisualStudio 15.9.3 `ctrl-shift-B` (strangely it restores OK)\r\n* Use `Paket`\r\n\r\n**Notes**\r\n\r\nThis behavior is the reason for package degradation warnings in case any other packages require something like `>=4.5.4` or `=4.5.4`","Url":"https://github.com/dotnet/sdk/issues/2724","RelatedDescription":"Closed issue \"FSharp.Core explicit dependency downgraded to implicit one\" (#2724)"},{"Id":"388771076","IsPullRequest":false,"CreatedAt":"2018-12-07T18:47:17","Actor":"jainaashish","Number":"2732","RawContent":null,"Title":"Consume NuGet /embed assets group for interop type assemblies from NuGet package","State":"open","Body":"This is the tracking issue to update dotnet build tasks to consume new `/embed` assets group from NuGet packages for interop type assemblies so that Project System passes it as `link` instead of `ref` to compiler.\r\n\r\nCorresponding NuGet issue# https://github.com/NuGet/Home/issues/2365\r\n\r\n@livarcocc @nguerrera @dsplaisted @rrelyea ","Url":"https://github.com/dotnet/sdk/issues/2732","RelatedDescription":"Open issue \"Consume NuGet /embed assets group for interop type assemblies from NuGet package\" (#2732)"},{"Id":"388449684","IsPullRequest":true,"CreatedAt":"2018-12-07T17:24:32","Actor":"dotnet-bot","Number":"2727","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2727","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#2727)"},{"Id":"388645904","IsPullRequest":true,"CreatedAt":"2018-12-07T17:24:10","Actor":"dotnet-maestro[bot]","Number":"2730","RawContent":null,"Title":"Update dependency files","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18606.9\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2730","RelatedDescription":"Closed or merged PR \"Update dependency files\" (#2730)"},{"Id":"388718371","IsPullRequest":false,"CreatedAt":"2018-12-07T16:17:33","Actor":"AArnott","Number":"2731","RawContent":null,"Title":"Building VB console app fails, unable to find \"%TEMP%\\.NETFramework,Version=v4.6.AssemblyAttributes.vb\" file","State":"closed","Body":"Building [a trivially simple VB console app](https://github.com/AArnott/SPSS.NET/blob/5ac57c55aa10611f0f4290fbd3187375ab95c468/src/SimpleDemo/SimpleDemo.vbproj#L1-L10) fails with:\r\n\r\n>vbc : error BC2001: file 'C:\\Users\\andarno\\AppData\\Local\\Temp\\.NETFramework' could not be found [D:\\git\\SPSS.NET\\src\\SimpleDemo\\SimpleDemo.vbproj]\r\nvbc : error BC2001: file 'D:\\git\\SPSS.NET\\src\\SimpleDemo\\Version=v4.6.AssemblyAttributes.vb' could not be found [D:\\git\\SPSS.NET\\src\\SimpleDemo\\SimpleDemo.vbproj]\r\n\r\nThe VB compiler can't find *two* files, neither of which exist. Looking at the msbuild.binlog file, I can see that *one* file is added with assembly attributes by the SDK, but that file has a comma in it, which isn't properly escaped (somewhere) evidently, since by the time it is fed into the vbc.exe tool, it interprets it as two separate files, as shown here:\r\n\r\n![image](https://user-images.githubusercontent.com/3548/49659001-1e476080-f9f8-11e8-9237-834827fd6794.png)\r\n\r\nThis repros on 15.8, 15.9, and 16.0 Preview 1.","Url":"https://github.com/dotnet/sdk/issues/2731","RelatedDescription":"Closed issue \"Building VB console app fails, unable to find \"%TEMP%\\.NETFramework,Version=v4.6.AssemblyAttributes.vb\" file\" (#2731)"},{"Id":"388449696","IsPullRequest":true,"CreatedAt":"2018-12-07T01:30:08","Actor":"dotnet-bot","Number":"2728","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2728","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to master\" (#2728)"},{"Id":"388461573","IsPullRequest":false,"CreatedAt":"2018-12-07T00:57:37","Actor":"NTaylorMullen","Number":"2729","RawContent":null,"Title":"Represent FrameworkReference of transitive projects and packages in the deps.json file.","State":"open","Body":"Today transitive project/package references aren't properly represented in a deps.json. For instance given this project (Bug4332 is a web app, Bug4332RCL is a Razor class library, both targeting netcoreapp3.0):\r\n![image](https://user-images.githubusercontent.com/2008729/49620733-0f6c9980-f977-11e8-8da3-e2d28605a2e1.png)\r\n\r\nToday you get the following `Bug4332.deps.json` entry for `Bug4332RCL`:\r\n```JSON\r\n      \"Bug4332RCL/1.0.0\": {\r\n        \"runtime\": {\r\n          \"Bug4332RCL.dll\": {}\r\n        },\r\n        \"compile\": {\r\n          \"Bug4332RCL.dll\": {}\r\n        }\r\n      },\r\n```\r\n\r\nThe min-bar expectation would be for the deps.json to look something like:\r\n```JSON\r\n      \"Bug4332RCL/1.0.0\": {\r\n        \"dependencies\": {\r\n          \"Microsoft.AspNetCore.App\": \"3.0.0-preview-18579-0056\"\r\n        },\r\n        \"runtime\": {\r\n          \"Bug4332RCL.dll\": {}\r\n        },\r\n        \"compile\": {\r\n          \"Bug4332RCL.dll\": {}\r\n        }\r\n      },\r\n```\r\n\r\nThis is blocking [a core scenario](https://github.com/aspnet/AspNetCore/issues/4332) in ASP.NET Core MVC 3.0 of having Razor views in a class library.\r\n\r\nLastly, I imagine this issue depends on the completion of the following (please correct me if i'm wrong):\r\n- **Referencing a shared framework does not flow across ProjectReference** https://github.com/dotnet/sdk/issues/2420 \r\n- **Represent FrameworkReferences in NuGet packages and assets files** https://github.com/NuGet/Home/issues/7342 \r\n\r\n\r\n@livarcocc @dsplaisted @natemcmaster @mkArtakMSFT @rynowak","Url":"https://github.com/dotnet/sdk/issues/2729","RelatedDescription":"Open issue \"Represent FrameworkReference of transitive projects and packages in the deps.json file.\" (#2729)"},{"Id":"387725123","IsPullRequest":true,"CreatedAt":"2018-12-06T19:54:40","Actor":"dotnet-bot","Number":"2718","RawContent":null,"Title":"Merge release/2.1.5xx to release/2.2.1xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2718","RelatedDescription":"Closed or merged PR \"Merge release/2.1.5xx to release/2.2.1xx\" (#2718)"},{"Id":"387725148","IsPullRequest":true,"CreatedAt":"2018-12-06T19:54:33","Actor":"dotnet-bot","Number":"2719","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2719","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#2719)"},{"Id":"388363069","IsPullRequest":false,"CreatedAt":"2018-12-06T19:38:29","Actor":"sarbjithanjra","Number":"2726","RawContent":null,"Title":"Which one is latest version of .NET Core 2.2.100 or 2.2.200-preview-009648","State":"closed","Body":"Hi on 5 Dec 2018, I downloaded the .NET Core SDK with version 2.2.100 and after install on my sytem, i checked that there is an existing 2.2.200-preview-009648 version is installed. Please let me know which one latest? it seem 2.2.100 is latest as per download page but from version number it seem 2.2.200 is latest.","Url":"https://github.com/dotnet/sdk/issues/2726","RelatedDescription":"Closed issue \"Which one is latest version of .NET Core 2.2.100 or 2.2.200-preview-009648\" (#2726)"},{"Id":"388344039","IsPullRequest":false,"CreatedAt":"2018-12-06T18:38:39","Actor":"zawor","Number":"2725","RawContent":null,"Title":"Uninstalling may be not enough","State":"open","Body":"@KathleenDollard asked me to post dotnet/docs#9412 here so here we go:\r\n\r\nHad a lot of runtimes and sdks accumulated over time on my dev machine. At some point i decided to do the cleanup and uninstalled quite a few from under appwiz.cpl (or add/remove programs). Unfortunately after running `dotnet --list-sdks` or `dotnet --list-runtimes` i still saw those which were uninstalled... Interestingly enough i discovered that installers have left a lot of empty dirs under `C:\\Program Files\\dotnet\\sdk`, `C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All` and `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App`. Removing those made `--list-sdks` and `--list-runtimes` to no longer list uninstalled runtimes/sdks.","Url":"https://github.com/dotnet/sdk/issues/2725","RelatedDescription":"Open issue \"Uninstalling may be not enough\" (#2725)"},{"Id":"387757437","IsPullRequest":false,"CreatedAt":"2018-12-05T19:45:55","Actor":"AArnott","Number":"2720","RawContent":null,"Title":" error NETSDK1005: Assets file 'D:\\a\\1\\s\\...\\project.assets.json' doesn't have a target for '.NETStandard,Version=v1.5'","State":"closed","Body":"Very similar to #1321, except that it works fine on my own machine, but [consistently fails when run in Azure Pipelines](https://dev.azure.com/azure-public/vside/_build/results?buildId=816). \r\n\r\n> C:\\hostedtoolcache\\windows\\dncs\\2.1.500\\x64\\sdk\\2.1.500\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.PackageDependencyResolution.targets(198,5): error NETSDK1005: Assets file 'D:\\a\\1\\s\\obj\\Microsoft.VisualStudio.Composition.LocalizationShell\\project.assets.json' doesn't have a target for '.NETStandard,Version=v1.5'. Ensure that restore has run and that you have included 'netstandard1.5' in the TargetFrameworks for your project. [D:\\a\\1\\s\\src\\Microsoft.VisualStudio.Composition.LocalizationShell\\Microsoft.VisualStudio.Composition.LocalizationShell.csproj]\r\n\r\nThe [LocalizationShell project targets netstandard1.0](https://github.com/Microsoft/vs-mef/blob/7059adf14349b456c8c9e633dc496b0ee1945b4b/src/Microsoft.VisualStudio.Composition.LocalizationShell/Microsoft.VisualStudio.Composition.LocalizationShell.csproj#L7), and is referenced by [a multitargeting project that targets several frameworks including netstandard1.5](https://github.com/Microsoft/vs-mef/blob/7059adf14349b456c8c9e633dc496b0ee1945b4b/src/Microsoft.VisualStudio.Composition/Microsoft.VisualStudio.Composition.csproj#L3).\r\n\r\nThe odd thing is this works on my machine, on AppVeyor, and even on Azure Pipelines in the past. But now it's consistently failing.\r\n\r\nThis *may* be a dupe of #2563","Url":"https://github.com/dotnet/sdk/issues/2720","RelatedDescription":"Closed issue \" error NETSDK1005: Assets file 'D:\\a\\1\\s\\...\\project.assets.json' doesn't have a target for '.NETStandard,Version=v1.5'\" (#2720)"},{"Id":"387825674","IsPullRequest":false,"CreatedAt":"2018-12-05T16:44:33","Actor":"xoofx","Number":"2723","RawContent":null,"Title":"How to debug msbuild?","State":"closed","Body":"Hey,\r\n\r\nSo I would like to investigate a problem related to [slow RAR in msbuild](https://github.com/Microsoft/msbuild/issues/2015) and while I have been able to initially hack something to debug msbuild, that was very convoluted, copying files around from regular Sdk...etc.\r\n\r\nSo I would like to do this more cleanly and follow a more deterministic procedure to debug directly MsBuild project from MsBuild.sln solution  (so it is issuing a dotnet msbuild.dll or msbuild.exe)  for \r\n1.  new csproj with .NET Sdk\r\n2.  regular old csproj \r\n\r\nWhich repository should I build, variable that I should set...etc.? (Or I could avoid building by reusing maybe an installed dotnet folder?)\r\n\r\n## For new csproj\r\n\r\nLet's try just on the new csproj format for now, starting with a plain `dotnet new --name Helloworld`\r\n\r\nAssuming that I built this repository, and I'm setting the MSBuildSDKsPath to point to the `artifacts\\Debug\\bin\\Sdks`\r\n\r\nI'm getting the following error:\r\n\r\n![image](https://user-images.githubusercontent.com/715038/49525579-5a6eaa00-f8ae-11e8-9220-1c9166120934.png)\r\n\r\n```\r\nProject \"C:\\Work\\tmp\\HelloWorld\\Helloworld.csproj\" on node 1 (default targets).\r\nC:\\Code\\dotnet\\sdk\\artifacts\\Debug\\bin\\Sdks\\Microsoft.NET.Sdk\\Sdk\\Sdk.props(33,11): error MSB4226: The imported project\r\n \"C:\\Code\\msbuild\\artifacts\\Debug\\bin\\MSBuild\\net472\\Current\\Microsoft.Common.props\" was not found. Also, tried to find\r\n \"Current\\Microsoft.Common.props\" in the fallback search path(s) for $(MSBuildExtensionsPath) - \"C:\\Program Files (x86)\r\n\\MSBuild\" . These search paths are defined in \"C:\\Code\\msbuild\\artifacts\\Debug\\bin\\MSBuild\\net472\\MSBuild.exe.Config\".\r\nConfirm that the path in the <Import> declaration is correct, and that the file exists on disk in one of the search pat\r\nhs. [C:\\Work\\tmp\\HelloWorld\\Helloworld.csproj]\r\nDone Building Project \"C:\\Work\\tmp\\HelloWorld\\Helloworld.csproj\" (default targets) -- FAILED.\r\n```\r\n\r\nIt is trying to resolve `artifacts\\Debug\\bin\\MSBuild\\net472\\Current\\Microsoft.Common.props` which is not in this folder.\r\nNot sure why it is trying `Current` by default, while the solution seems to build in this file in `artifacts\\Debug\\bin\\15.0\\Microsoft.Common.props` , so assume that the tooling version should be 15.0... but still, can I setup a MsBuild special variable path for pointing to this folder?\r\n\r\nSo likely after that, it will complain about missing NuGet resolver or similar. How do I pass them through?\r\n\r\ncc: @davkean @nguerrera ","Url":"https://github.com/dotnet/sdk/issues/2723","RelatedDescription":"Closed issue \"How to debug msbuild?\" (#2723)"},{"Id":"387824002","IsPullRequest":false,"CreatedAt":"2018-12-05T15:57:16","Actor":"vitek-karas","Number":"2722","RawContent":null,"Title":"RID publish as framework dependent app produces broken app on Linux","State":"open","Body":"The simplest repro:\r\n\r\nOn Linux (I used Ubuntu 18)\r\ninstall .NET Core SDK 2.2.100\r\nrun:\r\n`mkdir webapp`\r\n`cd webapp`\r\n`dotnet new web`\r\n`dotnet publish -c release -r linux-x64 --self-contained false`\r\n`./bin/release/netcoreapp2.2/linux-x64/publish/webapp`\r\n\r\nThis will fail to find a usable framework to run on.\r\n\r\nThe root cause is that when we publish a RID specific (so with apphost) app as framework dependent, for some reason the SDK includes `hostfxr` and `hostpolicy` libraries in the published folder. The `apphost` searches for `hostfxr` first in the local folder, then in global locations. Since it finds it in the local folder it uses that. Then it tries to resolve a framework, but on Linux where there is no global location for frameworks, it looks only in the local folder... and fails.\r\n\r\nOn Windows to works \"by luck\", we still load the `hostfxr` from the app, but then since we do have global location for frameworks, we end up loading the framework from the global location.\r\n\r\nDeleting the `hostfxr` and `hostpolicy` from the publish folder doesn't help, because for some reason they are listed as native runtime assets in the `.deps.json`. In fact there are native assets for `hostpolicy`, `hostfxr` and `apphost` which won't resolve at runtime either.\r\n\r\nThe SDK should not include `hostfxr`, `hostpolixy` in the publish folder and it should not include dependencies to the `Microsoft.NETCore.DotNetHostPolicy`, `Microsoft.NETCore.DotNetHostResolver` and `Microsoft.NETCore.DotNetAppHost` in the `.deps.json` since those bring wrong native assets.","Url":"https://github.com/dotnet/sdk/issues/2722","RelatedDescription":"Open issue \"RID publish as framework dependent app produces broken app on Linux\" (#2722)"},{"Id":"387804807","IsPullRequest":false,"CreatedAt":"2018-12-05T15:18:16","Actor":"NinoFloris","Number":"2721","RawContent":null,"Title":"Could not upgrade projects to new 2.2.100 sdk getting conflict warnings","State":"open","Body":"Could not upgrade all projects to new 2.2.100 sdk, as we got conflict warnings for among others \r\n\r\n```\r\n1:7>/usr/local/share/dotnet/sdk/2.2.100/Microsoft.Common.CurrentVersion.targets(2110,5): warning MSB3277: Found conflicts between different versions of \"Microsoft.AspNetCore.Authentication.Abstractions\" that couldnot be resolved.  These reference conflicts are listed in the build log when log verbosity is set to detailed. [/projpath]\r\n```\r\n\r\n- Microsoft.Extensions.Options\r\n- Microsoft.Extensions.DependencyInjection.Abstractions\r\n- Microsoft.AspNetCore.Http.Abstractions\r\n- Microsoft.Extensions.Configuration.Abstractions\r\n- Microsoft.AspNetCore.Hosting\r\n- Microsoft.AspNetCore.Hosting.Abstractions\r\n- Microsoft.EntityFrameworkCore\r\n- Microsoft.AspNetCore.WebUtilities\r\n- Microsoft.AspNetCore.Authentication.Abstractions\r\n\r\nWhat all of these packages have in common is that they list a 2.2.0 release on nuget.org\r\nhttps://www.nuget.org/packages/Microsoft.Extensions.Options/2.2.0 and if you look carefully they are all at Downloads: 0. \r\n\r\nWhich is why msbuild detailed logs gives errors like these \r\n\r\n```\r\n         Dependency \"Microsoft.Extensions.Options, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\".\r\n             Could not resolve this reference. Could not locate the assembly \"Microsoft.Extensions.Options, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors.\r\n[...]\r\nThere was a conflict between \"Microsoft.Extensions.Options, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\" and \"Microsoft.Extensions.Options, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\".\r\n             \"Microsoft.Extensions.Options, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\" was chosen because it was primary and \"Microsoft.Extensions.Options, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\" was not.\r\n             References which depend on \"Microsoft.Extensions.Options, Version=2.1.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\" [/Users/nfloris/.nuget/packages/microsoft.extensions.options/2.1.0/lib/netstandard2.0/Microsoft.Extensions.Options.dll].\r\n                 /Users/nfloris/.nuget/packages/microsoft.extensions.options/2.1.0/lib/netstandard2.0/Microsoft.Extensions.Options.dll\r\n                   Project file item includes which caused reference \"/Users/nfloris/.nuget/packages/microsoft.extensions.options/2.1.0/lib/netstandard2.0/Microsoft.Extensions.Options.dll\".\r\n                     /Users/nfloris/.nuget/packages/microsoft.extensions.options/2.1.0/lib/netstandard2.0/Microsoft.Extensions.Options.dll\r\n             References which depend on \"Microsoft.Extensions.Options, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\" [].\r\n                 myproj/bin/Debug/netcoreapp2.2/myproj.dll\r\n                   Project file item includes which caused reference \"myproj/bin/Debug/netcoreapp2.2/myproj.dll\".\r\n                     myproj/bin/Debug/netcoreapp2.2/myproj.dll\r\n```\r\n\r\n**Could not resolve this reference. Could not locate the assembly \"Microsoft.Extensions.Options, Version=2.2.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60\".**\r\n\r\nNow that seems like a problem","Url":"https://github.com/dotnet/sdk/issues/2721","RelatedDescription":"Open issue \"Could not upgrade projects to new 2.2.100 sdk getting conflict warnings\" (#2721)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalMlaik","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":".NET Core November Update - 2.1.6 and SDK 2.1.500","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \".NET Core November Update - 2.1.6 and SDK 2.1.500\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"},{"Id":"359151445","IsPullRequest":false,"CreatedAt":"2018-09-11T17:44:50","Actor":"leecow","Number":"84","RawContent":null,"Title":"September 2018 .NET Updates","State":"open","Body":"# September 2018 .NET Updates\r\n\r\nThe following .NET updates were released in September 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework September 2018 Security and Quality Rollup - September 11, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core September 2018 Update - September 11, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.4/2.1.4.md)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/84","RelatedDescription":"Open issue \"September 2018 .NET Updates\" (#84)"},{"Id":"359136325","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:55","Actor":"blowdart","Number":"83","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](https://github.com/aspnet/Announcements/issues/316).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32228\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83)"},{"Id":"357399856","IsPullRequest":false,"CreatedAt":"2018-09-05T20:56:25","Actor":"richlander","Number":"82","RawContent":null,"Title":".NET Core Runtime ARM64 Status","State":"open","Body":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\nSee [Installing .NET Core 3.0 on Linux ARM64](https://gist.github.com/richlander/467813274cea8abc624553ee72b28213) to install .NET Core on your ARM64 machine. Builds are available from the [daily builds page](https://github.com/dotnet/core/blob/master/daily-builds.md).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/coreclr #19843](https://github.com/dotnet/coreclr/issues/19843)\r\n\r\n## Current Status\r\n\r\nARM64 builds are functional, for console apps. ASP.NET Core is not yet functional.\r\n\r\nSee following known issues:\r\n\r\n* [dotnet/core-sdk #75](https://github.com/dotnet/core-sdk/issues/75)\r\n* [dotnet/core-sdk #76](https://github.com/dotnet/core-sdk/issues/76)\r\n\r\n## Bug Queries\r\n\r\nthe following bugs queries are available for ARM64:\r\n\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following operating systems:\r\n\r\n* Ubuntu 16.04\r\n* Windows 10\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)","Url":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Open issue \".NET Core Runtime ARM64 Status\" (#82)"},{"Id":"349693735","IsPullRequest":false,"CreatedAt":"2018-08-22T18:23:01","Actor":"richlander","Number":"80","RawContent":null,"Title":"Improving Performance of ARM32 Docker Images with .NET Core Package Cache","State":"closed","Body":"# Improving Performance of ARM32 Docker Images with .NET Core Package Cache\r\n\r\n.NET Core SDK distributions include a compressed copy of NuGet packages for .NET Core, ASP.NET Core and EF Core. These packages are decompressed upon installation of the .NET Core SDK. The packages are not currently included in ARM32 distributions due to the time and space cost to decompress the packages. Instead, they will be added to [.NET Core ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/), where these costs can be paid as part of image creation.\r\n\r\nThese NuGet packages include content for two purposes:\r\n\r\n- Reference assemblies for .NET Core, for code compilation.\r\n- Pre-compiled assemblies (compiled with [crossgen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md)) for .NET Core, for use in self-contained applications.\r\n\r\nIn both cases, the presence of these packages avoid the need to access remote NuGet feeds for .NET Core assemblies as part of package restore.\r\n\r\nThis change only affects [.NET Core 2.1 SDK ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/). This change will be made in August 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #653](https://github.com/dotnet/dotnet-docker/issues/653)\r\n\r\n## .NET Core SDK NugetFallbackFolder\r\n\r\nThe .NET Core SDK includes a compressed copy of all NuGet package, in LZMA format. It exists at the following version-specific location:\r\n\r\n```\r\nroot@3778032bc43d:/# ls -l /usr/share/dotnet/sdk/2.1.302/*.lzma\r\n-rw-r--r-- 1 1004 sudo 35995936 Jul  2 22:51 /usr/share/dotnet/sdk/2.1.302/nuGetPackagesArchive.lzma\r\n```\r\n\r\nThis file is decompressed to the following location: `/usr/share/dotnet/sdk/NuGetFallbackFolder/`\r\n\r\nA package restore for a .NET Core assembly will restore the assembly from the NuGetFallbackFolder location and copy it to the user NuGet cache. At that point, regular NuGet behavior is used.\r\n\r\n## Impact of this change\r\n\r\nThere should be no functional difference in behavior after this change. .NET SDK commands should complete faster and require fewer package restore network requests.\r\n\r\nThe following examples demonstrates the benefit of this change. The improvement can be observed with package restore. Build times (assuming no restore) are not affected.\r\n\r\n### .NET Core 2.1 SDK image after this change\r\n\r\n> The change has already been made in the `microsoft/dotnet-nightly` repo, as you can see in the example below. In August, this same change will be made available in the `microsoft/dotnet` repo.\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet-nightly:2.1-sdk\r\nroot@416731f24915:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 6.68 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m32.496s\r\nuser    0m35.820s\r\nsys     0m4.280s\r\nroot@416731f24915:/# cd mvcapp/\r\nroot@416731f24915:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.8.138-preview+ge0cd4f1c1f for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 524.78 ms for /mvcapp/mvcapp.csproj.\r\n/usr/share/dotnet/sdk/2.1.401-preview-009081/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(143,5): message NETSDK1057: You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452 [/mvcapp/mvcapp.csproj]\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:09.15\r\n\r\nreal    2m13.377s\r\nuser    1m25.260s\r\nsys     0m9.420s\r\nroot@416731f24915:/mvcapp#\r\n```\r\n\r\n### .NET Core 2.1 SDK image before this change\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet:2.1-sdk\r\nroot@9d1d5e45df6a:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Private.DataContractSerialization 4.3.0.\r\n  Installing System.Security.Principal 4.3.0.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.App 2.1.1.\r\n  Installing runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.AspNetCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Antiforgery 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Session 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.KeyPerFile 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Embedded 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Physical 2.1.1.\r\n  Installing Microsoft.Extensions.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Cookies 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Core 2.1.1.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.Authentication.Google 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Facebook 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting.Abstractions 2.1.1.\r\n  Installing runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.HttpsPolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.MicrosoftAccount 2.1.1.\r\n  Installing Microsoft.Extensions.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.MiddlewareAnalysis 2.1.1.\r\n  Installing Microsoft.Extensions.FileSystemGlobbing 2.1.1.\r\n  Installing Microsoft.Extensions.DiagnosticAdapter 2.1.0.\r\n  Installing Microsoft.Extensions.Identity.Core 2.1.1.\r\n  Installing Microsoft.Extensions.Identity.Stores 2.1.1.\r\n  Installing Microsoft.Extensions.Options.ConfigurationExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Localization.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Abstractions 2.1.1.\r\n  Installing runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Options 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Composite 2.1.1.\r\n  Installing Microsoft.Extensions.Logging 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.TraceSource 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.UserSecrets 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Debug 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Console 2.1.1.\r\n  Installing Microsoft.Extensions.DependencyInjection 2.1.1.\r\n  Installing Microsoft.Extensions.ObjectPool 2.1.1.\r\n  Installing runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Binder 2.1.1.\r\n  Installing runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.FileExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Memory 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.CommandLine 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Abstractions 2.1.1.\r\n  Installing Microsoft.Net.Http.Headers 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.InMemory 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Ini 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.StaticFiles 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Relational 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Https 2.1.1.\r\n  Installing Microsoft.Extensions.Primitives 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel 2.1.1.\r\n  Installing Microsoft.Extensions.WebEncoders 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebUtilities 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR 1.0.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Tools 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Rewrite 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCompression 2.1.1.\r\n  Installing System.Globalization.Extensions 4.3.0.\r\n  Installing Microsoft.AspNetCore.Razor.Language 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.TagHelpers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Runtime 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.RazorPages 2.1.1.\r\n  Installing Microsoft.AspNetCore.Owin 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.ViewCompilation 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Json 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebSockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Cors 2.1.1.\r\n  Installing System.Diagnostics.DiagnosticSource 4.3.0.\r\n  Installing Microsoft.AspNetCore.Mvc.DataAnnotations 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ApiExplorer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.EventSource 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OAuth 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Json 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Protocols.Json 1.0.1.\r\n  Installing Microsoft.AspNetCore.NodeServices 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.JsonPatch 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization.Routing 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.IISIntegration 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.UI 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HttpOverrides 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Features 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cors 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.Internal 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.KeyDerivation 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HostFiltering 2.1.1.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing Microsoft.AspNetCore.CookiePolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1.\r\n  Installing Microsoft.AspNetCore.Html.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Twitter 2.1.1.\r\n  Installing Microsoft.AspNetCore.Connections.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization.Policy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.HttpSys 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.SqlServer 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.SqlServer 2.1.1.\r\n  Installing Microsoft.AspNet.WebApi.Client 5.2.6.\r\n  Installing Microsoft.AspNetCore.SignalR.Core 1.0.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ViewFeatures 2.1.1.\r\n  Installing Microsoft.CodeAnalysis.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.JwtBearer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OpenIdConnect 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.WsFederation 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore 2.1.1.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Core 2.1.1.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.5.0.\r\n  Installing System.ComponentModel.Annotations 4.5.0.\r\n  Installing System.Buffers 4.5.0.\r\n  Installing System.Memory 4.5.1.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.1.\r\n  Installing System.Text.Encodings.Web 4.5.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Net.WebSockets.WebSocketProtocol 4.5.1.\r\n  Installing Newtonsoft.Json 11.0.2.\r\n  Installing System.IO.Pipelines 4.5.0.\r\n  Installing System.Numerics.Vectors 4.5.0.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Threading.Tasks.Extensions 4.5.1.\r\n  Installing System.Security.Cryptography.Cng 4.5.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Xml 4.5.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing System.Reflection.Metadata 1.6.0.\r\n  Installing System.Data.SqlClient 4.5.1.\r\n  Installing Newtonsoft.Json.Bson 1.0.1.\r\n  Installing Newtonsoft.Json 10.0.1.\r\n  Installing System.Threading.Channels 4.5.0.\r\n  Installing System.Reflection.Emit 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.OpenIdConnect 5.2.0.\r\n  Installing System.IdentityModel.Tokens.Jwt 5.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.WsFederation 5.2.0.\r\n  Installing System.Collections.Immutable 1.5.0.\r\n  Installing Remotion.Linq 2.2.0.\r\n  Installing System.Interactive.Async 3.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing System.Security.Cryptography.Pkcs 4.5.0.\r\n  Installing System.Security.Permissions 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing NETStandard.Library 1.6.1.\r\n  Installing System.Text.Encoding.CodePages 4.5.0.\r\n  Installing System.Linq 4.3.0.\r\n  Installing runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing System.Diagnostics.Debug 4.3.0.\r\n  Installing System.Globalization 4.3.0.\r\n  Installing System.IO 4.3.0.\r\n  Installing System.Collections 4.3.0.\r\n  Installing System.Runtime.Serialization.Primitives 4.3.0.\r\n  Installing System.Runtime.Serialization.Formatters 4.3.0.\r\n  Installing System.Xml.XmlDocument 4.3.0.\r\n  Installing System.Threading 4.3.0.\r\n  Installing System.Resources.ResourceManager 4.3.0.\r\n  Installing System.Text.Encoding.Extensions 4.3.0.\r\n  Installing System.Xml.XDocument 4.3.0.\r\n  Installing System.Threading.Tasks 4.3.0.\r\n  Installing System.Linq.Expressions 4.3.0.\r\n  Installing System.Runtime.Numerics 4.3.0.\r\n  Installing System.Text.Encoding 4.3.0.\r\n  Installing System.Reflection.Extensions 4.3.0.\r\n  Installing System.Text.RegularExpressions 4.3.0.\r\n  Installing System.Runtime.Extensions 4.3.0.\r\n  Installing System.Reflection 4.3.0.\r\n  Installing System.ObjectModel 4.3.0.\r\n  Installing System.Dynamic.Runtime 4.3.0.\r\n  Installing System.Xml.ReaderWriter 4.3.0.\r\n  Installing Microsoft.CSharp 4.3.0.\r\n  Installing System.ComponentModel.TypeConverter 4.3.0.\r\n  Installing System.Runtime 4.3.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.3.0.\r\n  Installing System.Reflection.Primitives 4.3.0.\r\n  Installing System.AppContext 4.3.0.\r\n  Installing System.Console 4.3.0.\r\n  Installing System.Collections.Concurrent 4.3.0.\r\n  Installing System.Diagnostics.Tools 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.3.0.\r\n  Installing System.IO.FileSystem 4.3.0.\r\n  Installing System.IO.FileSystem.Primitives 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.3.0.\r\n  Installing System.Collections.Immutable 1.3.1.\r\n  Installing System.Runtime.InteropServices 4.3.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Diagnostics.StackTrace 4.3.0.\r\n  Installing System.Reflection.Metadata 1.4.2.\r\n  Installing System.Threading.Thread 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.Analyzers 1.1.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.3.0.\r\n  Installing System.ValueTuple 4.3.0.\r\n  Installing System.Diagnostics.FileVersionInfo 4.3.0.\r\n  Installing System.Threading.Tasks.Parallel 4.3.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.3.0.\r\n  Installing System.Xml.XPath.XDocument 4.3.0.\r\n  Installing System.Text.Encoding.CodePages 4.3.0.\r\n  Installing System.Runtime.InteropServices 4.1.0.\r\n  Installing Microsoft.IdentityModel.Protocols 5.2.0.\r\n  Installing Microsoft.IdentityModel.Tokens 5.2.0.\r\n  Installing Microsoft.IdentityModel.Xml 5.2.0.\r\n  Installing System.Diagnostics.Debug 4.0.11.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing Microsoft.IdentityModel.Tokens.Saml 5.2.0.\r\n  Installing System.Runtime.Extensions 4.1.0.\r\n  Installing System.Threading 4.0.11.\r\n  Installing System.Collections 4.0.11.\r\n  Installing System.Reflection 4.1.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.Linq.Queryable 4.0.1.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Runtime 4.1.0.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 2.1.0.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.0.\r\n  Installing runtime.win-x64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-x86.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-arm64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing Microsoft.NETCore.Platforms 1.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.3.0.\r\n  Installing System.Net.Sockets 4.3.0.\r\n  Installing System.Diagnostics.Tracing 4.3.0.\r\n  Installing System.IO.Compression.ZipFile 4.3.0.\r\n  Installing System.Globalization.Calendars 4.3.0.\r\n  Installing System.Threading.Timer 4.3.0.\r\n  Installing System.Security.Cryptography.Primitives 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing System.Runtime.Handles 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.3.0.\r\n  Installing System.Net.Http 4.3.0.\r\n  Installing Microsoft.NETCore.Targets 1.1.0.\r\n  Installing System.Net.Primitives 4.3.0.\r\n  Installing System.Reflection.Emit.Lightweight 4.3.0.\r\n  Installing System.Reflection.TypeExtensions 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.3.0.\r\n  Installing System.ComponentModel 4.3.0.\r\n  Installing System.ComponentModel.Primitives 4.3.0.\r\n  Installing System.Collections.NonGeneric 4.3.0.\r\n  Installing System.Collections.Specialized 4.3.0.\r\n  Installing runtime.native.System 4.3.0.\r\n  Installing runtime.native.System.IO.Compression 4.3.0.\r\n  Installing System.Buffers 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.native.System.Net.Http 4.3.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing System.Security.Cryptography.Cng 4.3.0.\r\n  Installing System.Security.Cryptography.Csp 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing System.Xml.XPath 4.3.0.\r\n  Installing Microsoft.IdentityModel.Logging 5.2.0.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Runtime.Serialization.Xml 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 1.0.1.\r\n  Installing Microsoft.NETCore.Targets 1.0.1.\r\n  Installing System.Security.Claims 4.3.0.\r\n  Installing System.Reflection.Primitives 4.0.1.\r\n  Installing System.IO 4.1.0.\r\n  Installing System.Globalization 4.0.11.\r\n  Installing System.Threading.Tasks 4.0.11.\r\n  Installing System.Resources.ResourceManager 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing System.IO.FileSystem.Primitives 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.IO.FileSystem 4.0.1.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Text.Encoding 4.0.11.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Runtime.Handles 4.0.1.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 44.04 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    1m8.386s\r\nuser    1m8.010s\r\nsys     0m18.190s\r\nroot@9d1d5e45df6a:/# cd mvcapp/\r\nroot@9d1d5e45df6a:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 557.76 ms for /mvcapp/mvcapp.csproj.\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:07.34\r\n\r\nreal    2m11.716s\r\nuser    1m22.990s\r\nsys     0m8.880s\r\nroot@9d1d5e45df6a:/mvcapp#\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/80","RelatedDescription":"Closed issue \"Improving Performance of ARM32 Docker Images with .NET Core Package Cache\" (#80)"},{"Id":"350233220","IsPullRequest":false,"CreatedAt":"2018-08-13T23:50:57","Actor":"richlander","Number":"81","RawContent":null,"Title":"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+","State":"open","Body":"# Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\r\n\r\nAn [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md) was discovered with [.NET Framework 4.7.1](https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/). This issue was resolved earlier this year, with the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/). We recently learned that some applications, including Johnson Controls’ C-CURE 9000 Software, were negatively impacted by this change as this update requires all client and server workstations to be updated simultaneously with the appropriate Microsoft updates. The changes made to .NET Framework 4.7.1 were also integrated into .NET Framework 4.6 and later servicing releases. As a result, this advisory applies to .NET Framework 4.6 and later versions.\r\n\r\nThis advisory is provided so that developers can correctly diagnose this issue and be aware of our guidance. We will continue to update this issue as we have new information to share.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #832](https://github.com/Microsoft/dotnet/issues/832)\r\n\r\n## Guidance\r\n\r\nThis guidance only applies to customers that have experienced this issue.\r\n\r\nWe have released [an update for .NET Framework 4.6](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/) and later that resolves the issue. **You must deploy the .NET Framework update for this issue to all .NET Framework 4.6+ machines that communicate via serialized objects**. After doing that, cross-machine serialization will work as expected. \r\n \r\nPlease consult your software vendor to understand if this impacts the software you are using.\r\n\r\n## Technical Context\r\n\r\nIn the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/), we made a change to the internal type CultureAwareComparer to implement ISerializable. We made the change in order to address [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md).\r\n\r\nThe issue reported was that a type that contains an instance of CultureAwareComparer was not able to correctly serialize and deserialize across different versions of the .NET Framework. There are a few types in .NET Framework that do this, the most commonly impacted one being the Dictionary<TKey, TValue> type.\r\n \r\nThe change to implement the ISerializable interface had unintended side effects when exchanging this type across different machines. We have had a small number of reports from customers who have been affected.\r\n\r\nA common, but not unique way, of exchanging objects across machines is to use WCF in conjunction with a serializer. One of the common serializers being DataContractSerializer. The side-effect of the change prevented data serialized on systems where the type implements ISerializable to correctly deserialize of systems where the type does NOT implement ISerializable. The same is true of the opposite case, that systems where the type does not implement ISerializable will not correctly deserialize data from systems where the type does implement ISerializable.\r\n\r\nWe have an updated fix that we intend to release within the next month that will remove the implementation of the ISerializable interface on the type and use a different internal mechanism for ensuring the cross-version serialization continues to work as expected. This change addresses the break experienced with WCF.\r\n\r\nThe upcoming fix will remove the implementation of the ISerializable interface on the type and use a different mechanism for ensuring the cross-version serialization of that type continues to work. This change addresses the break experienced with WCF.\r\n\r\n## Symptoms\r\n\r\nAn application that is affected by this issue will most likely crash when trying to deserialize an object. It may print or log an error message similar to the following one:\r\n\r\n```\r\nThe formatter threw an exception while trying to deserialize the message: \r\nThere was an error while trying to deserialize parameter . The InnerException message was ''EndElement' 'Comparer' from namespace '' is not expected. Expecting element '_compareInfo'.'.  Please see InnerException for more details.\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/81","RelatedDescription":"Open issue \"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\" (#81)"},{"Id":"348162872","IsPullRequest":false,"CreatedAt":"2018-08-07T04:26:40","Actor":"richlander","Number":"79","RawContent":null,"Title":"August 2018 .NET Updates","State":"open","Body":"# August 2018 .NET Updates\r\n\r\nThe following .NET updates were released in August 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [August 2018 .NET Framework Security and Quality Rollup - August 14, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/)\r\n* [Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+](https://github.com/dotnet/announcements/issues/81)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [August 2018 Preview of Quality Rollup - August 30, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core August 2018 Update - August 21, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.3/2.1.3.md)\r\n* [.NET Core 2.1.400 SDK Update - August 14, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.400-SDK/2.1.400-sdk.md)\r\n\r\n## End of Support for Operating System Versions\r\n\r\n.NET Core does not support systems that are out of support. The following operating systems are now out of support. To stay supported, move to a [later version of the given operating system](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md).\r\n\r\n* [Debian 8 -- Jessie](https://lists.debian.org/debian-security-announce/2018/msg00132.html)\r\n* [Ubuntu 17.10 -- Artful Aardvark](https://lists.ubuntu.com/archives/ubuntu-announce/2018-July/000232.html)\r\n\r\nSee [Debian Jessie End of Life -- Impact on .NET Core Docker Images](https://github.com/dotnet/announcements/issues/78)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/79","RelatedDescription":"Open issue \"August 2018 .NET Updates\" (#79)"},{"Id":"348161534","IsPullRequest":false,"CreatedAt":"2018-08-07T04:18:01","Actor":"richlander","Number":"78","RawContent":null,"Title":"Debian Jessie End of Life -- Impact on .NET Core Docker Images","State":"open","Body":"# Debian Jessie End of Life -- Impact on .NET Core Docker Images\r\n\r\nDebian Jessie (AKA Debian 8) is now [out of support](https://lists.debian.org/debian-security-announce/2018/msg00132.html). Debian Jessie is no longer a supported operating system for .NET Core. Docker users need to switch to Debian Stretch-based (AKA Debian 9) images to stay in support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #647](https://github.com/dotnet/dotnet-docker/issues/647)\r\n\r\n## Context\r\n\r\nJessie-based images are currently provided for .NET Core 1.0, 1.1 and 2.0. .NET Core 1.0 and 1.1 expose multi-arch tags, such as `1.0-runtime` and `1.1-sdk`, that support Debian Jessie. When pulled for a Linux Docker daemon (on Linux or Windows), these tags pull Jessie-based images. .NET Core 2.0 supports Jessie, but it is not the default. .NET Core 2.0 multi-arch tags, such as `2.0-runtime` and `2.0-sdk`, pull Debian Stretch-based images, when pulled for a Linux Docker daemon. We made a conscious decision with .NET Core 2.0 to move off of Jessie as the default to avoid this problem, based the Jessie 2018 EOL date. .NET Core 2.1 does not support Jessie, only Stretch.\r\n\r\nWe recently posted about our policy for underlying operating system dependencies with Docker:\r\n\r\n> For each major and minor .NET version, we may take a new major operating system version dependency. As I mentioned earlier, we adopted Debian 9 as the base image for .NET Core 2.0. We stayed with Debian 9 for .NET Core 2.1, since Debian 10 (AKA “Buster”) has not been released. Debian 9 will remain the default base image for .NET Core 2.1 for the life of .NET Core 2.1. **Once we adopt an underlying operating system major version, we will not change it for the life of that given .NET release.**\r\n\r\nSource: https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/\r\n\r\n## Plan\r\n\r\nWe will continue to re-build .NET Core 1.0 and 1.1 multi-arch tags on top of Jessie for the remaining [supported lifetime of .NET Core 1.0 and 1.1](https://github.com/dotnet/core/blob/master/microsoft-support.md). We will also provide a Stretch-based image for .NET Core 1.1. This tag will look like the following: `1.1-runtime-stretch` or `1.1.9-sdk-stretch`. This is same format that Jessie has used.\r\n\r\nWe will produce Jessie-based images for NET Core 2.0 until October 2018, which is when [.NET Core 2.0 support ends](https://github.com/dotnet/core/blob/master/microsoft-support.md). .NET Core 2.0 multi-arch tags support Debian Stretch, not Jessie, as described above.\r\n\r\nIn summary, .NET Core is no longer supported on Debian Jessie, with Docker or otherwise. We will produce Docker images for Jessie until .NET Core 1.0, 1.1 and 2.0 support ends, respectively, to avoid breaking applications. This aligns with the policy defined above, per [Staying up-to-date with .NET Container Images](https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/).\r\n\r\n## Affected Repos\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)","Url":"https://github.com/dotnet/announcements/issues/78","RelatedDescription":"Open issue \"Debian Jessie End of Life -- Impact on .NET Core Docker Images\" (#78)"},{"Id":"345028102","IsPullRequest":false,"CreatedAt":"2018-07-26T22:31:32","Actor":"leecow","Number":"77","RawContent":null,"Title":"https://dot.net now using TLS 1.2-only","State":"open","Body":"Earlier today, https://dot.net switched to using TLS 1.2-only. Most Windows Powershell instances default to TLS 1.1 and will thus fail with `wget : The underlying connection was closed: An unexpected error occurred on a send. trying to run the previous command.`\r\n\r\nAn example of a PowerShell script fix can be seen in https://github.com/dotnet/docs/pull/6689","Url":"https://github.com/dotnet/announcements/issues/77","RelatedDescription":"Open issue \"https://dot.net now using TLS 1.2-only\" (#77)"},{"Id":"343360319","IsPullRequest":false,"CreatedAt":"2018-07-21T22:29:05","Actor":"richlander","Number":"76","RawContent":null,"Title":"July 2018 .NET Updates","State":"open","Body":"# July 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework 4.7.2 is available on Windows Update, WSUS and MU Catalog](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-framework-4-7-2-is-available-on-windows-update-wsus-and-mu-catalog/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3632](https://blogs.msdn.microsoft.com/dotnet/2018/07/18/announcing-net-framework-4-8-early-access-build-3632/)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-core-july-2018-update/)\r\n\r\n## .NET Core Support Policies\r\n\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core Supported OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n","Url":"https://github.com/dotnet/announcements/issues/76","RelatedDescription":"Open issue \"July 2018 .NET Updates\" (#76)"},{"Id":"343360017","IsPullRequest":false,"CreatedAt":"2018-07-21T22:22:25","Actor":"richlander","Number":"75","RawContent":null,"Title":"June 2018 .NET Updates","State":"open","Body":"# June 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework June 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/06/13/net-framework-june-2018-security-and-quality-rollup/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3621!](https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core 2.1 June Update](https://blogs.msdn.microsoft.com/dotnet/2018/06/22/net-core-2-1-june-update/)\r\n* [.NET Core 2.0 will reach End of Life on October 1, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core 1.0 and 1.1 EOL Dates Documented](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n\r\n## Previous Updates\r\n\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/75","RelatedDescription":"Open issue \"June 2018 .NET Updates\" (#75)"},{"Id":"343283437","IsPullRequest":false,"CreatedAt":"2018-07-21T00:56:48","Actor":"richlander","Number":"74","RawContent":null,"Title":"Advisory on July 2018 .NET Framework Updates","State":"open","Body":"# Advisory on July 2018 .NET Framework Updates\r\n\r\nUpdated: 08/14/2018\r\n\r\n> A new [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/) has been released that **resolves this advisory for all supported Windows versions**.\r\n\r\n~~A new [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) has been released that resolves this advisory. See Guidance section.~~\r\n\r\n~~Guidance has changed for Windows 7, Windows Server 2008 and Windows Server 2008 R2. See Guidance section.~~\r\n\r\nThe [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) was released earlier this month. We have received multiple customer reports of [applications that fail to start or don't run correctly](https://support.microsoft.com/en-us/help/4345913) after installing the July 2018 update. These reports are specific to applications that initialize a COM component and run with restricted permissions.\r\n\r\nWe have stopped distributing the .NET Framework July 2018 updates on Windows Update and are actively working on fixing and re-shipping this month's updates. If you installed the July 2018 update and have not yet seen any negative behavior, we recommend that you leave your systems as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We discovered while investigating this issue that we have a test hole for the specific combination of COM activation and restricted permissions, including impersonation. We will be mitigating that gap going forward. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this issue and [post](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/) as we have new information.\r\n\r\n## Discussion\r\nPlease share your thoughts/experience on this advisory and see what others are saying at:\r\n\r\n* [microsoft/dotnet #811](https://github.com/Microsoft/dotnet/issues/811)\r\n\r\n## Guidance\r\n\r\nWe strongly recommend that you install [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/).\r\n\r\n~~We recommend that you install [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) on your systems if you experienced the symptoms described in this advisory. If you did not experience these symptoms, we recommend you wait to update your machines until the next regular update, in August.~~\r\n\r\n~~On Windows 7, Windows Server 2008, and Windows Server 2008 R2, we have found that the combination of [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) and  [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) do not resolve all symptoms. On these Windows versions, if you are experiencing these symptoms after installing this combination of patches, we recommend that you uninstall (only) the Monthly Rollup patch and then install the appropriate Security Only patch listed at [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356).~~\r\n\r\n## Technical Context\r\n\r\nThe .NET Framework runtime uses the process token to determine whether the process is being run within an elevated context. These system calls can fail if the required process inspection permissions are not present. This causes an “access denied\" error.\r\n\r\n## Symptoms\r\n\r\nA COM component fails to load because of “access denied,” “class not registered,” or “internal failure occurred for unknown reasons” errors. \r\n\r\nThe most commonly reported failure results in the following error message:\r\n\r\n```console\r\nException type: System.UnauthorizedAccessException\r\nMessage: Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\n### Sharepoint\r\n\r\nWhen users browse to a SharePoint site they may see the following HTTP 403 message:\r\n\r\n```console\r\n\"The Web Site declined to show this webpage\"\r\n```\r\n\r\nThe SharePoint ULS Logs will contain a message like the following:  \r\n\r\n```console\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 0000       High                UnauthorizedAccessException for the request. 403 Forbidden will be returned. Error=An error occurred creating the configuration section handler for system.serviceModel/extensions: Could not load file or assembly <AssemblySignature>  or one of its dependencies. Access is denied. (C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\Config\\machine.config line 180)    \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General b6p2      VerboseEx                Sending HTTP response 403:403 FORBIDDEN.      \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 8nca       Verbose                Application error when access /, Error=Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\nWhen crawling a people content source, the request may fail with the following entry logged to the SharePoint ULS Log: \r\n\r\n```console\r\nmssearch.exe (0x118C) 0x203C SharePoint Server Search Crawler:Gatherer Plugin cd11 Warning The start address sps3s://<URLtoSite> cannot be crawled.  Context: Application 'Search_Service_Application', Catalog 'Portal_Content'  Details:  Class not registered   (0x80040154)  \r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive error \"ActiveX component can't create object\" \r\n\r\n.NET Application creates instance of .NET COM application within an Impersonation Context may receive error \"0x80040154 (REGDB_E_CLASSNOTREG)\"\r\n```\r\n\r\n### BizTalk Server Administration Console\r\n\r\nBizTalk Server Administration Console fails to launch properly with the following errors: \r\n\r\n```console\r\nAn internal failure occurred for unknown reasons. (WinMgmt) \r\n\r\nProgram Location:  \r\n\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode, IntPtr errorInfo) \r\n\r\n   at System.Management.ManagementObject.Get() \r\n\r\n   at Microsoft.BizTalk.SnapIn.Framework.WmiProvider.SelectInstance\r\n```\r\n\r\n> Warning: The following workarounds may make a computer or a network more vulnerable to attack by malicious users or by malicious software such as viruses. We do not recommend these workarounds but are providing this information so that you can implement the workarounds at your own discretion. Use these workarounds at your own risk.\r\n\r\nUse the following guidance as a workaround:\r\n\r\n* Add “NETWORK SERVICE” to the local Administrators group. \r\n\r\n### IIS with Classic ASP\r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive the following error: \"ActiveX component can't create object\". Use the following guidance as a workaround.\r\n\r\n* If your web site uses Anonymous Authentication, change the Web Site Anonymous Authentication credentials to use the \"Application pool identity\"\r\n* If your site uses Basic Authentication, log into the application once as the application pool identity and then create an instance of the .NET COM component. All subsequent activations for that .NET COM component should succeed, for any user.\r\n\r\n### .NET applications using COM and impersonation\r\n\r\n.NET Applications that creates instances of .NET COM application within an Impersonation Context may receive the following error: \"0x80040154 (REGDB_E_CLASSNOTREG)\". Use the following guidance as a workaround.\r\n\r\n* Create an instance of the .NET COM component prior to the impersonation context call. Later impersonated create instance calls should work as expected.\r\n* Run the .NET Application in the context of the impersonated user\r\n* Avoid using Impersonation when creating the .NET COM object","Url":"https://github.com/dotnet/announcements/issues/74","RelatedDescription":"Open issue \"Advisory on July 2018 .NET Framework Updates\" (#74)"},{"Id":"339929129","IsPullRequest":false,"CreatedAt":"2018-07-10T17:00:37","Actor":"blowdart","Number":"73","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core does not correctly validate certificates. An attacker who successfully exploited this vulnerability could present an expired certificate when challenged.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle certificate validation.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wcf/issues/3009\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not use Windows Communication Foundation you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, or ASP.NET Core based application that uses System.Private.ServiceModel with a version of 4.5.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Private.ServiceModel | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 |  4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Duplex | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.443 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Http | 4.0.0, 4.0.10, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.NetTcp | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Primitives | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.2 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Security | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n### <a name=\"project-format\"></a>.NET Core Project formats\r\n\r\n.NET Core has two different project file formats, depending on what software created the project.\r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1, .NET Core 2.0 and Microsoft Visual Studio 2017.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file or your `project.json` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n The `System.Private.ServiceModel` package is not meant to be directly depended on and will not appear in your direct dependency list.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects *OR*.\r\n* By examining the `project.lock.json` file contained in the root directory of your project for `project.json` based projects.\r\n\r\nThe `project.assets.json` and `project.lock.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in a csproj based project / Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.ServiceModel.Http` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.3\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"direct-dependencies-vs2015\"></a> Fixing Direct Dependencies in project.json based project / Visual Studio 2015\r\n\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n     \"System.ServiceModel.Http\" : \"4.0.0\"\r\n    }\r\n```\r\n\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Mvc.Core` and `System.ServiceModel.Http`.\r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on a vulnerable package, `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `System.ServiceModel.Http` to 4.4.3.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n    \"System.ServiceModel.Http \": \"4.4.3\"\r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) or the [the `project.lock.json` file](#project-lock-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json (csproj/VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.ServiceModel.Http/4.3.0` is a reference to version 4.3.0 of `System.ServiceModel.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.3.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### <a name=\"project-lock-json\"></a> Manually reviewing project.lock.json (project.json/VS2015)\r\n\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `System.ServiceModel.Http/4.0.1` is a reference to v4.0.1 of `System.ServiceModel.Http`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to a vulnerable version of `System.ServiceModel.Http` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `System.ServiceModel.Http` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"System.ServiceModel.Http\": \"4.1.2\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8356](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8356)\r\n\r\n### Revisions\r\n\r\nV1.1 (July 23, 2018): Updated package versions, as some assemblies were released unsigned.\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2018-07-23_\r\n","Url":"https://github.com/dotnet/announcements/issues/73","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\" (#73)"},{"Id":"329614193","IsPullRequest":false,"CreatedAt":"2018-06-05T20:33:10","Actor":"huanwu","Number":"72","RawContent":null,"Title":"Introducing dotnet-svcutil.xmlserializer for .NET Core","State":"open","Body":"# Introducing dotnet-svcutil.xmlserializer for .NET Core\r\nOn the full .NET Framework you are able to pre-generate a serialization assembly using the tool svcutil. We are providing similar functionality on .NET Core by releasing the dotnet-svcutil.xmlserializer NuGet package. It pre-generates c# serialization code for the types used by WCF Service Contract in the client applications that can be serialized using the XmlSerializer to improve the startup performance of Xml Serialization when serializing or de-serializing objects of those types using XmlSerializer. \r\nYou can start using the tool today by following the [instructions](https://github.com/dotnet/core/blob/master/samples/dotnet-svcutil.xmlserializer-instructions.md). \r\n\r\n## Discussion \r\nPlease share with us any thoughts of questions that you may have at: \r\n\r\n- dotnet/wcf [#2927](https://github.com/dotnet/wcf/issues/2927)\r\n## Details \r\nWhen to use XmlSerializer with WCF in an app to serialize contract data types, it will generate an XmlSerializer during runtime to do the serialization. You can improve the startup performance of Xml serialization by simply adding the reference of dotnet-svcutil.xmlserializer NuGet package to your project. This tool will generate the serialization code and compile it into an assembly next to your output assembly at build time in advance. This assembly can then be deployed and ran with your application. \r\n\r\nPlease create an issue with your feedback at [dotnet/wcf](https://github.com/dotnet/wcf/issues). We are actively looking to improve the tool and your input is a valuable part of the process. ","Url":"https://github.com/dotnet/announcements/issues/72","RelatedDescription":"Open issue \"Introducing dotnet-svcutil.xmlserializer for .NET Core\" (#72)"},{"Id":"327817883","IsPullRequest":false,"CreatedAt":"2018-05-30T17:02:38","Actor":"MichaelSimons","Number":"71","RawContent":null,"Title":".NET Core 2.1 Docker Image Updates","State":"open","Body":"# .NET Core 2.1 Docker Image Updates\r\n\r\nWe have consolidating the set of Docker Hub repositories that we use for .NET Core and ASP.NET Core. We will use [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) as the only repository that we publish to for .NET Core 2.1 and later releases.\r\n\r\nWe added a set of environment variables to .NET Core images to make it easier to host ASP.NET Core sites at any .NET Core image layer and to enable `dotnet watch` in SDK container images without additional configuration.\r\n\r\nAlpine and ARM32 image variants have been added and are supported.\r\n\r\n[.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/blob/master/samples/README.md) have been moved to the [dotnet/dotnet-docker](https://github.com/dotnet/dotnet-docker) repo. The samples have been updated for .NET Core 2.1. New samples have been added, including [Hosting ASP.NET Core Images with Docker over HTTPS](https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/aspnetcore-docker-https.md).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #560](https://github.com/dotnet/dotnet-docker/issues/560)\r\n\r\n## Details\r\n\r\nThe following changes have been made as part of the .NET Core 2.1 release.\r\n\r\n### Repo consolidation\r\n\r\n.NET Core and ASP.NET Core images will be published to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) Docker Hub repo for .NET Core 2.1 and later releases. Co-location of images improves image discovery. The .NET Core runtime and SDK images are already co-located. We are adding the ASP.NET Core runtime images to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo as a third image type. We are [no longer producing the microsoft/aspnetcore-build image](https://github.com/aspnet/Announcements/issues/298) with .NET Core 2.1.\r\n\r\nThe following three tags are now available at the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo:\r\n\r\n* `2.1-sdk`\r\n* `2.1-aspnetcore-runtime`\r\n* `2.1-runtime`\r\n\r\n### Environment variables enable new scenarios\r\n\r\nWe added a set of environment variables to .NET Core docker images, for .NET Core 2.1 and later. These environment variables enable more scenarios to work without additional configuration, such as [developing ASP.NET Core applications in a container](https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/aspnet-docker-dev-in-container.md).\r\n\r\nNew sdk image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/sdk/bionic/amd64/Dockerfile#L28-L32))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n* `DOTNET_USE_POLLING_FILE_WATCHER=true`\r\n\r\nNew Linux runtime-deps image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/runtime-deps/alpine3.7/amd64/Dockerfile#L19-L21))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n\r\nNew Windows runtime image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/runtime/nanoserver-1709/amd64/Dockerfile#L33-L35))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n\r\n### New image variants\r\n\r\nAlpine and ARM32 image variants have been added and are supported as part of the .NET Core 2.1 release. \r\n\r\nFor Alpine, you must [use specific tags to create Alpine-based images](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/README.md#build-and-run-the-sample-for-alpine-with-docker), such as `2.1-runtime-alpine`. \r\n\r\nFor ARM32, you can use the regular multi-arch tags, like `2.1-runtime` and `2.1-sdk` if you are building on an ARM32 device. If you are building on another type of machine, you need to use ARM32-specific tags for the runtime images you create, such as `2.1-runtime-bionic-arm32v7` (for Ubuntu 18.04).\r\n\r\n### Related repos\r\n\r\nThe following repos are related to this announcement:\r\n\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n* [microsoft/dotnet/](https://hub.docker.com/r/microsoft/dotnet/)\r\n","Url":"https://github.com/dotnet/announcements/issues/71","RelatedDescription":"Open issue \".NET Core 2.1 Docker Image Updates\" (#71)"},{"Id":"325815293","IsPullRequest":false,"CreatedAt":"2018-05-23T18:04:46","Actor":"mlacouture","Number":"70","RawContent":null,"Title":"Introducing dotnet-svcutil","State":"open","Body":"# Introducing dotnet-svcutil\r\n\r\nThe Microsoft Windows Communication Foundation (WCF) **dotnet-svcutil** tool is a .NET Core CLI tool that retrieves metadata from a web service on a network location or from a WSDL file, and generates a WCF class containing client proxy methods that you can use to access the web service operations.\r\n\r\nSimilarly to the [Service Model Metadata - svcutil](https://docs.microsoft.com/en-us/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) tool for .NET Framework projects, the **dotnet-svcutil** is a command line tool for generating a web service reference compatible with .NET Core and .NET Standard projects. \r\n\r\nThe **dotnet-svcutil** tool is an alternative option to the [WCF Web Service Reference ](https://docs.microsoft.com/en-us/dotnet/core/additional-tools/wcf-web-service-reference-guide)Visual Studio connected service provider which first shipped with Visual Studio 2017 v15.5.  The **dotnet-svcutil** tool as a .NET Core CLI tool, however, can be run on multiple platforms like Linux and MacOS in addition to Windows.\r\n\r\n# Discussion\r\nPlease share your thoughts with us by commenting on GitHub issue dotnet/wcf#2894\r\n","Url":"https://github.com/dotnet/announcements/issues/70","RelatedDescription":"Open issue \"Introducing dotnet-svcutil\" (#70)"},{"Id":"321374728","IsPullRequest":false,"CreatedAt":"2018-05-08T22:56:33","Actor":"richlander","Number":"68","RawContent":null,"Title":"May 2018 .NET Updates","State":"open","Body":"# May 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803)](https://blogs.msdn.microsoft.com/dotnet/2018/05/23/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-april-2018-update-version-1803/)\r\n* [.NET Framework May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update)](https://blogs.msdn.microsoft.com/dotnet/2018/05/21/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-1709-fall-creators-update/)\r\n* [.NET Framework May 2018 Security and Quality Rollup for Windows 10](https://blogs.msdn.microsoft.com/dotnet/2018/05/17/net-framework-may-2018-preview-of-quality-rollup-for-windows-10/)\r\n* [.NET Framework May 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-framework-may-2018-security-and-quality-rollup/)\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [Windows Server, version 1803](https://docs.microsoft.com/en-us/windows-server/get-started/get-started-with-1803).\r\n\r\n## .NET Core\r\n\r\n* [Announcing .NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/)\r\n* [.NET Core May 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-core-may-2018-update/)\r\n* [.NET Core 2.1 RC1](https://blogs.msdn.microsoft.com/dotnet/2018/05/07/announcing-net-core-2-1-rc-1/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [Windows Server, version 1803](https://docs.microsoft.com/en-us/windows-server/get-started/get-started-with-1803).\r\n\r\n## Previous Updates\r\n\r\n* [April 2018 .NET Updates](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/68","RelatedDescription":"Open issue \"May 2018 .NET Updates\" (#68)"},{"Id":"321269154","IsPullRequest":false,"CreatedAt":"2018-05-08T17:03:39","Actor":"blowdart","Number":"67","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and .NET native version 2.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability that exists when .NET Framework and .NET Core improperly process XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework, .NET Core, or .NET native application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Framework, .NET Core, and .NET native applications handle XML document processing.\r\n\r\nIf your application is an ASP.NET Core application, developers are also advised to update to [ASP.NET Core 2.0.8](https://www.nuget.org/packages/Microsoft.AspNetCore.All/2.0.8).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/29578\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not process signed XML, it is not affected by this vulnerability.\r\n* If your application targets .NET Core 1.x or .NET native 1.x, it is not affected as the vulnerable package is not available for these platforms.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, .NET native, or ASP.NET Core based application that uses System.Security.Cryptography.Xml with a version of 4.4.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Security.Cryptography.Xml | ≤4.4.1 |  4.4.2 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n---\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage:\r\n\r\n* Update its version number to [2.0.8](https://www.nuget.org/packages/Microsoft.AspNetCore.All/2.0.8) to pull in updated packages that update their transitive dependencies to the fixed version of `System.Security.Cryptography.Xml`.\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Security.Cryptography.Xml` version 4.4.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Security.Cryptography.Xml` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.Security.Cryptography.Xml` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n---\r\n\r\nIf you're targeting .NET native for a Universal Windows Platform (UWP) application, you should update your dependencies and republish your application.\r\n\r\nIf you submit an application to the Windows Store with an outdated reference, the store will update the reference automatically, which has the potential for compatibility issues. Thus, we recommend updating your application directly and testing its functionality before resubmitting.\r\n\r\n---\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0787](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-0765)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-05-08_","Url":"https://github.com/dotnet/announcements/issues/67","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\" (#67)"},{"Id":"319701474","IsPullRequest":false,"CreatedAt":"2018-05-02T20:31:57","Actor":"MichaelSimons","Number":"66","RawContent":null,"Title":".NET Framework Docker Samples have moved","State":"open","Body":"# .NET Framework Docker Samples have moved\r\nThe .NET Framework Docker samples have moved to the [samples folder of Microsoft/dotnet-framework-docker](https://github.com/Microsoft/dotnet-framework-docker/tree/master/samples).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #128](https://github.com/Microsoft/dotnet-framework-docker/issues/128)\r\n\r\n## Details\r\nThe .NET Framework Docker samples have been enhanced and moved to the [samples folder of Microsoft/dotnet-framework-docker](https://github.com/Microsoft/dotnet-framework-docker/tree/master/samples).\r\n\r\n- https://github.com/Microsoft/dotnet-framework-docker/pull/126\r\n- https://github.com/Microsoft/dotnet-framework-docker-samples/issues/22\r\n\r\nThe samples show various ways to use the .NET Framework and Docker together. You can use the samples as the basis of your own Docker images or just to play.\r\n\r\nThe samples exercise various levels of functionality. The [.NET Framework Docker sample](https://github.com/Microsoft/dotnet-framework-docker/blob/master/samples/dotnetapp/README.md) includes the most functionality, including build, unit testing, and pushing images to a container registry. The [ASP.NET Docker sample](https://github.com/Microsoft/dotnet-framework-docker/blob/master/samples/aspnetapp/README.md) includes instructions for testing images with [Azure Container Instances](https://azure.microsoft.com/services/container-instances/). The samples include detailed instructions for use with and without Docker.\r\n","Url":"https://github.com/dotnet/announcements/issues/66","RelatedDescription":"Open issue \".NET Framework Docker Samples have moved\" (#66)"},{"Id":"319700544","IsPullRequest":false,"CreatedAt":"2018-05-02T20:28:55","Actor":"MichaelSimons","Number":"65","RawContent":null,"Title":".NET Framework Runtime and Builder Docker repos have merged ","State":"open","Body":"# .NET Framework Runtime and Builder Docker repos have merged\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.  All new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).  The images in the [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo will be retained and serviced accordingly as to not affect existing usage.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #125](https://github.com/Microsoft/dotnet-framework-docker/issues/125)\r\n\r\n## Details\r\n\r\nThe [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) Docker Hub repo has been merged into the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) Docker Hub repo.\r\n\r\n* https://github.com/Microsoft/dotnet-framework-docker/pull/123\r\n* https://github.com/Microsoft/dotnet-framework-docker/issues/78\r\n\r\nIn order to differentiate the runtime and build images, `runtime` and `sdk` distinguishing identifiers have been added to the tags.  For example, `4.7.2-runtime` and `4.7.2-sdk`.\r\n\r\nAll new tags going forward will only be pushed to [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/).   For example, the build images for 4.7.2 which was released today, only exist in [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n\r\nThe existing tags in [microsoft/dotnet-framework-build](https://hub.docker.com/r/microsoft/dotnet-framework-build/) will remain and be serviced accordingly.  For example, the stable tags such as `4.7.1-windowsservercore-1709` will continue to be patched on a monthly basis.\r\n\r\nWe recommend that as you create and maintain your code, you move to use the new `runtime` and `sdk` images from the [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) repo.\r\n","Url":"https://github.com/dotnet/announcements/issues/65","RelatedDescription":"Open issue \".NET Framework Runtime and Builder Docker repos have merged \" (#65)"},{"Id":"315285808","IsPullRequest":false,"CreatedAt":"2018-04-18T00:20:13","Actor":"richlander","Number":"64","RawContent":null,"Title":"April 2018 .NET Updates","State":"open","Body":"# April 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* [Announcing the .NET Framework 4.7.2](https://blogs.msdn.microsoft.com/dotnet/2018/04/30/announcing-the-net-framework-4-7-2/)\r\n* No new patch releases. See: [.NET Framework February 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/02/13/net-framework-february-2018-security-and-quality-rollup/).\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core April 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/04/17/net-core-april-2018-update/)\r\n   * [2.0.7 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.0/2.0.7.md)\r\n   * [1.1.8 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.8.md)\r\n   * [1.0.11 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.11.md)\r\n* [.NET Core 2.1 Preview 2](https://blogs.msdn.microsoft.com/dotnet/2018/04/11/announcing-net-core-2-1-preview-2/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [KB4093112](https://support.microsoft.com/help/4093112) and associated updates.\r\n* Latest .NET Core security release: [.NET Core March 2018 Update](https://github.com/dotnet/core/issues/1341)\r\n\r\n## .NET for UWP\r\n\r\n* No new releases. See: [.NET for UWP January 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/01/09/net-for-uwp-january-2018-update/).\r\n\r\n## Previous Updates\r\n\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/64","RelatedDescription":"Open issue \"April 2018 .NET Updates\" (#64)"},{"Id":"305721744","IsPullRequest":false,"CreatedAt":"2018-03-15T21:13:36","Actor":"mairaw","Number":"63","RawContent":null,"Title":"Transport Layer Security (TLS) best practices with the .NET Framework article published","State":"open","Body":"# Transport Layer Security (TLS) best practices with the .NET Framework article published\r\n\r\nA new article was published that discusses the Transport Layer Security (TLS) best practices for .NET Framework applications at https://docs.microsoft.com/dotnet/framework/network-programming/tls.\r\n\r\nTo ensure .NET Framework applications remain secure, the TLS version should **not** be hardcoded. .NET Framework applications should use the TLS version the operating system (OS) supports.\r\n\r\nThe (TLS) best practices article targets developers who are:\r\n* Directly using the System.Net APIs (for example, `System.Net.Http.HttpClient` and `System.Net.Security.SslStream`).\r\n* Directly using WCF clients and services using the `System.ServiceModel` namespace.\r\n* Using [Azure Cloud Services](https://azure.microsoft.com/services/cloud-services/) Web and Worker roles to host and run your application. See the [Azure Cloud Services](https://docs.microsoft.com/dotnet/framework/network-programming/tls#azure-cloud-services) section.\r\n\r\nThe article explains how to enable the strongest security available for the version of the .NET Framework that your app targets and runs on.\r\n\r\nThe section [Audit your code and make code changes](https://docs.microsoft.com/dotnet/framework/network-programming/tls#audit-your-code-and-make-code-changes) covers auditing and updating your code.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts and have any discussions with us at:\r\n\r\ndotnet/docs#4675","Url":"https://github.com/dotnet/announcements/issues/63","RelatedDescription":"Open issue \"Transport Layer Security (TLS) best practices with the .NET Framework article published\" (#63)"},{"Id":"304852590","IsPullRequest":false,"CreatedAt":"2018-03-13T17:01:52","Actor":"blowdart","Number":"62","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0875: Hash Collision can cause Denial of Service","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0875: Hash Collision can cause Denial of Service\r\n## Executive Summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in the public versions of .NET Core 1.0 and 2.0 (including other minor and patch releases).\r\nThis advisory also provides guidance on what developers can do to update their applications correctly.\r\n\r\nMicrosoft is aware of a security vulnerability in the public versions of .NET Core where a malicious file or web request could cause a denial of service (DoS) attack.\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.10, 1.1.7 or 2.0.6. Developers are advised to update their .NET Core SDK to versions 1.1.8 or 2.1.101.\r\n\r\n## Discussion\r\n\r\nUse https://github.com/dotnet/corefx/issues/28010 for discussion of this advisory.\r\n\r\n### Mitigation Factors\r\nNone\r\n\r\n### Affected Software\r\n\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\n### Advisory FAQ\r\n#### How do I know if I am affected?\r\nAny application running against .NET Core 1.0.9 or lower versions, 1.1.6 or lower minor versions or 2.0.5 or lower minor versions is affected. \r\n\r\nA complete list of runtimes can be discovered by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows\t| `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS\t| `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms\t| `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.10, 1.1.7 and 2.0.6, then any applications targeting the respective major/minor versions, 1.0 or 1.1 or 2.0 of .NET Core are vulnerable.\r\n\r\nAdditionally, if you've deployed self-contained applications targeting any of the impacted versions, these applications are also vulnerable and must be updated to target the updated .NET Core runtime, recompiled and redeployed.\r\n\r\n#### How do I fix my affected application?\r\n\r\nApplications can be fixed by installing the latest .NET Core runtimes or SDKs. Typically, application servers only have runtime packages installed and developer machines have the SDKs installed. \r\nInstallers for the runtimes can be downloaded from the [Runtime and SDK download archive](https://github.com/dotnet/core/blob/master/release-notes/download-archive.md). \r\n.NET Core 1.1.8 SDK installs both versions 1.0.10 and 1.1.7 of the .NET Core runtime.\r\n\r\nIf you've built a self-contained application, you must install the new runtime and SDK, update your application to target the updated .NET Core runtime, recompile and redeploy. To update your runtime version edit the `RuntimeFrameworkVersion` property in the project's .csproj file to indicate the desired target version. For example:\r\n\r\n```xml\r\n<PropertyGroup>\r\n  <RuntimeFrameworkVersion>2.0.6</RuntimeFrameworkVersion>\r\n</PropertyGroup>\r\n```\r\n\r\n#### What if the update breaks my application?\r\nAn application can be pinned to a previous version of the runtime by editing the `{applicationName}.runtimeconfig.json` file for that application., where `{applicationName}` is the name of the executable, for example `example.exe` would have a runtime configuration file titled `example.runtimeconfig.json`. Set the framework version to the desired version and the `rollForward` property to false. These settings should be treated as a temporary measure and the application updated to work with the patched versions of the framework.\r\n\r\nSince the `{applicationName}.runtimeconfig.json` file is an optional file, you may need to create one for each application and add it alongside the executable.\r\n\r\n### Acknowledgments\r\n[Ben Adams](https://twitter.com/ben_a_adams) of [Illyriad Games](https://www.illyriad.co.uk/)\r\n\r\n### External Links\r\n[CVE-2018-0875](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-0875)\r\n\r\n### Revisions\r\n\r\nV1.2 (Mar 26, 2018): Corrected instructions for runtimeconfig.json\r\nV1.1 (Mar 14, 2018): Added instructions for self contained application retargetting.\r\nV1.0 (Mar 13, 2018): Advisory published.\r\n\r\n_Version 1.2_\r\n_Last Updated 2018-03-26_","Url":"https://github.com/dotnet/announcements/issues/62","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0875: Hash Collision can cause Denial of Service\" (#62)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1072638045227270144","CreatedAt":"2018-12-11T23:43:33+00:00","UserScreenname":"dotnet","Text":"Blogged: .NET Framework December 2018 Security and Quality Rollup https://t.co/5PllosL5i2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":6,"RawContent":null},{"Id":"1072146418868064256","CreatedAt":"2018-12-10T15:10:00+00:00","UserScreenname":"dotnet","Text":"Learn about writing tests for @AzureFunctions with Senior Program Manager Jeff Hollan (@jeffhollan) in this episode… https://t.co/18tWdVma7r","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":31,"FavoriteCount":11,"RawContent":null},{"Id":"1070731847620050944","CreatedAt":"2018-12-06T17:29:00+00:00","UserScreenname":"dotnet","Text":"Learn about the latest F# Tooling Updates for Visual Studio 2017 from @_cartermp in this episode of the #OnDotNet s… https://t.co/wSjVH0qlRz","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":28,"FavoriteCount":15,"RawContent":null},{"Id":"1070171866193571840","CreatedAt":"2018-12-05T04:23:50+00:00","UserScreenname":"dotnet","Text":"Imagine you could draw an architecture and have it converted to an Azure environment. Silly? You bet.  But also ins… https://t.co/A13GJJ7iEw","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":61,"FavoriteCount":19,"RawContent":null},{"Id":"1070077811283632130","CreatedAt":"2018-12-04T22:10:05+00:00","UserScreenname":"dotnet","Text":"Happening now @ #MSFTConnect - Join @CoolCSH &amp; Mike Harsh as they explore the latest #dotNET Core release. PLUS, yo… https://t.co/0yWWIL76wp","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":19,"FavoriteCount":2,"RawContent":null},{"Id":"1070033626551721989","CreatedAt":"2018-12-04T19:14:31+00:00","UserScreenname":"dotnet","Text":"#MSFTConnect announcement: #dotNET Core 2.2 is now available for download. \n\n...now w/ improvements to #ASPNET Core… https://t.co/lkrvCr12Oc","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":198,"FavoriteCount":128,"RawContent":null}]}},"RunOn":"2018-12-13T05:30:52.2114077Z","RunDurationInMilliseconds":27569}