{"Data":{"Vue-Issues":{"Issues":[{"Id":"368869550","IsPullRequest":false,"CreatedAt":"2018-10-10T21:49:14","Actor":"BryceBarbara","Number":"8926","RawContent":null,"Title":"Child transitions are triggered when the parent element is hidden","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/BryceBarbara/kv7espnq/](https://jsfiddle.net/BryceBarbara/kv7espnq/)\r\n\r\n### Steps to reproduce\r\n1. Click the \"Toggle Screen\" button.\r\n2. See that the first screen's content is faded out while the second screen's content is already visible.\r\n\r\n### What is expected?\r\nI would expect the transition to not trigger due to the fact that the parent has been hidden and does not have a transition on it.\r\n\r\n### What is actually happening?\r\nThe child element on the first screen is faded out after the second screen's content is already visible.\r\n\r\n---\r\nI assume this is some sort of element re-use situation because adding a key to either the first or second screen elements fixes it. I'm reporting this mainly to call attention to something that doesn't _seem_ intentional and that has very little information on it.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8926","RelatedDescription":"Open issue \"Child transitions are triggered when the parent element is hidden\" (#8926)"},{"Id":"368839791","IsPullRequest":true,"CreatedAt":"2018-10-10T20:30:15","Actor":"derek-li","Number":"8925","RawContent":null,"Title":"fix #8862: cannot watch unicode properties like 'a.中文'","State":"open","Body":"Hi all at Vue!\r\n\r\nThis pull request resolves the issue regarding watchers not watching unicode properties like 'a.中文'.\r\n\r\nMy method for resolving this case is to throw a warning when non-alphanumeric, $, or _ characters are detected. My reasoning behind throwing a warning instead of supporting special characters is that I think  supporting special characters would promote poor naming habits that could only make code more difficult to read and understand.\r\n\r\nI'm pretty new to open source so any feedback would be awesome and please let me know if you'd like to see any changes or improvements!\r\n\r\nLink to issue: https://github.com/vuejs/vue/issues/8862\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)","Url":"https://github.com/vuejs/vue/pull/8925","RelatedDescription":"Open PR \"fix #8862: cannot watch unicode properties like 'a.中文'\" (#8925)"},{"Id":"368801247","IsPullRequest":false,"CreatedAt":"2018-10-10T19:07:16","Actor":"OrbanMia","Number":"8924","RawContent":null,"Title":"setting object1 from another object (object2,)  object1 overwrites the original one (object2) when object1 is modified","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/761079/](https://jsfiddle.net/50wL7mdz/761079/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nMake two variables with the same keys, call them obejct1 and object2.\r\nIf I write object1 = object2 anywhere in my code, after modifying object1's any values, objec2's value will be overwritten.\r\nBut if I write object1.key1 = objec2.key1 and object1.key2 = object2.key2 then I can modify anything in object1, object2 will not change.\r\n\r\n### What is expected?\r\nmodifying object1 won't modify object2\r\n\r\n### What is actually happening?\r\nmodifying object1 modifies object2\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8924","RelatedDescription":"Closed issue \"setting object1 from another object (object2,)  object1 overwrites the original one (object2) when object1 is modified\" (#8924)"},{"Id":"368771930","IsPullRequest":false,"CreatedAt":"2018-10-10T17:35:22","Actor":"sday","Number":"8923","RawContent":null,"Title":"setter for computed property does not get called by INPUT element change when v-model references a property of an object?","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/sday/eywraw8t/411036/](https://jsfiddle.net/sday/eywraw8t/411036/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nrun the fiddle example and click on increment age. Both ages change. If you change the age manually through the input element, only the age that is bound through v-model as a simple variable has the setter called. \r\n\r\n### What is expected?\r\nI would expect that if I change the value bound through the v-model with the input element, that the setter for that v-model would be called. \r\n\r\n### What is actually happening?\r\nOnly the setter for the simple variable is called when changing the value through the input element.\r\n\r\n---\r\nJust trying to make a grid component that is unaware of the data key names so I needed a way to dynamically and generically handle any data object.  I wanted a way to bind each INPUT element to a generic getter/setter so I can handle my own backend calls.   Looks like I will probably just do it using a method.  Pass the data into component through a read only prop.  Any changes made via INPUT element will be sent back to parent through an event to persist the data and push the committed value back through the prop.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8923","RelatedDescription":"Closed issue \"setter for computed property does not get called by INPUT element change when v-model references a property of an object?\" (#8923)"},{"Id":"368665207","IsPullRequest":false,"CreatedAt":"2018-10-10T13:26:40","Actor":"p1pchenk0","Number":"8922","RawContent":null,"Title":"Store list.length in a variable","State":"open","Body":"### What problem does this feature solve?\r\nIncrease performance during Vue preparations. During Vue initialization process there is a function `makeMap`, which splits string of items into array and then create Map-like object. But during for-loop every iteration it checks `list.length` value, which can be stored in separate variable before running for-loop. For arrays of 40  this can improve performance\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\n    function makeMap (str, expectsLowerCase) {\r\n        var map = Object.create(null);\r\n        var list = str.split(',');\r\n        var listLength = list.length;  // <--  here it is\r\n\r\n        for (var i = 0; i < listLength; i++) {\r\n            map[list[i]] = true;\r\n        }\r\n        \r\n        return expectsLowerCase ? function (val) { return map[val.toLowerCase()] } : function (val) { return map[val] }\r\n  }\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8922","RelatedDescription":"Open issue \"Store list.length in a variable\" (#8922)"},{"Id":"368632930","IsPullRequest":false,"CreatedAt":"2018-10-10T12:05:24","Actor":"faiwer","Number":"8921","RawContent":null,"Title":"Vue templates in runtime & compilerOptions","State":"open","Body":"### What problem does this feature solve?\r\nHello. I don't use `.vue` files. Instead of it I use template-string-field in `.js` files. But I can't find any way to set `compilerOptions.preserveWhitespace = false`. I've delved into `vue-template-compiler` and `vue` packages and found out that compiler-function (`compileToFunctions`) is created immediately after importing Vue-package. After that Vue uses that `compileToFunctions` all the time. Is it a deadend? \r\n\r\nAlso it's a bit strange that `compileToFunctions` is called again and again for each instance of one component (in `Vue.prototype.$mount`). When there is a static template string in a component definition I think the result can be cached for the class-component. \r\n\r\n### What does the proposed API look like?\r\nSomething like `vue-loader` for webpack\r\n```\r\nnew Vue({ compilerOptions: {...} });\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8921","RelatedDescription":"Open issue \"Vue templates in runtime & compilerOptions\" (#8921)"},{"Id":"368537721","IsPullRequest":false,"CreatedAt":"2018-10-10T11:15:41","Actor":"index23","Number":"8919","RawContent":null,"Title":"Different behaviour when pass props as object and as property of object","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[http://jsfiddle.net/index23/sdrv3q5x/](http://jsfiddle.net/index23/sdrv3q5x/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Click Property pass and watch console.log.\r\n\r\n2. Click Object pass and watch console.log\r\n\r\n### What is expected?\r\nIt's expected that in both cases just child components should be console logged. But in first case, apart from console log in child component, there is also parent component console log.\r\n\r\n### What is actually happening?\r\nWhen Property pass is clicked both, Parent Updated and Span Counter Updated, will be console logged.\r\n\r\nWhen Object pass is clicked, just Span Object  Updated will be console logged.\r\n\r\n---\r\nClicking on buttons modify data of vue component in same way.  \r\nConsole log is fired on updated hook, so when components are updated. There is difference in behaviour depending how we pass data to child components. When we pass data as single property of object (first case), both, parent and child components are updated. But when we pass entire object (second case) to child component, just child component is updated.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8919","RelatedDescription":"Closed issue \"Different behaviour when pass props as object and as property of object\" (#8919)"},{"Id":"368546536","IsPullRequest":true,"CreatedAt":"2018-10-10T08:23:45","Actor":"laden666666","Number":"8920","RawContent":null,"Title":"Please ignore it.","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8920","RelatedDescription":"Closed or merged PR \"Please ignore it.\" (#8920)"},{"Id":"368526003","IsPullRequest":false,"CreatedAt":"2018-10-10T08:04:14","Actor":"3344567","Number":"8918","RawContent":null,"Title":"/deep/深度选择器，部分情况下无法穿透成功","State":"closed","Body":"### Version\r\n2.3.2\r\n\r\n\r\n### Steps to reproduce\r\n<el-form-item id=\"selectParent\">\r\n                            <el-input \r\n                                class=\"input-with-select\" \r\n                                placeholder=\"请输入关键字\" \r\n                                maxlength=\"50\"\r\n                                v-model=\"searchForm.keywords\">\r\n                                <el-select class=\"select\"  slot=\"prepend\" v-model=\"searchForm.typeName\"\r\n                                        placeholder=\"请选择\">\r\n                                    <el-option\r\n                                        v-for=\"item in typeNameOptions\"\r\n                                        :key=\"item.value\"\r\n                                        :label=\"item.label\"\r\n                                        :value=\"item.value\">\r\n                                    </el-option>\r\n                                </el-select>\r\n                                <i slot=\"prefix\" class=\"el-input__icon\">|</i>\r\n                                <i slot=\"suffix\" @click=\"getAddressOptions()\"\r\n                                class=\"el-input__icon el-icon-search\"></i>\r\n                            </el-input>\r\n                        </el-form-item>\r\n<style scoped>\r\n#selectParent /deep/ .el-input__suffix{\r\n    right: 0;\r\n}\r\n</style>\r\n\r\n\r\n### What is expected?\r\n我想修改elementUI 部分样式时，用深度选择器，使本组件下的.el-input__suffix的right属性从默认的5px改成0\r\n\r\n### What is actually happening?\r\n结果el-input__suffix没有添加上data-**-****属性，导致未成功修改。把deep改成>>>，同样未成功\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8918","RelatedDescription":"Closed issue \"/deep/深度选择器，部分情况下无法穿透成功\" (#8918)"},{"Id":"368491869","IsPullRequest":false,"CreatedAt":"2018-10-10T07:53:14","Actor":"lzhoucs","Number":"8917","RawContent":null,"Title":"_scopeId missing on some slot elements when slot root element is the same as the one its replacing","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codepen.io/lzhoucs/pen/pxeaQq](https://codepen.io/lzhoucs/pen/pxeaQq)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nGo to the provided codepen demo link, click on a group to expand, not all expanded items are in red. `_scopeId` is missing on some items. \r\n\r\n### What is expected?\r\nAll expanded items should be in red\r\n\r\n### What is actually happening?\r\nNot all expanded items are in red. `_scopeId` is missing on some items. \r\n\r\n---\r\nIt works when the root element (h2) of `item` scoped slot is different from the one it is replacing(h1). It doesn't work when they are the same(h1)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8917","RelatedDescription":"Closed issue \"_scopeId missing on some slot elements when slot root element is the same as the one its replacing\" (#8917)"},{"Id":"368308957","IsPullRequest":false,"CreatedAt":"2018-10-09T17:34:33","Actor":"cloudever","Number":"8916","RawContent":null,"Title":"How to add props to children elements using render function?","State":"closed","Body":"### What problem does this feature solve?\r\nSuggest I write a template:\r\n```html\r\n<lib-button-group gutter=\"4px\">\r\n  <lib-button>Default</lib-button>\r\n  <lib-button type=\"primary\">Primary</lib-button>\r\n</lib-button-group>\r\n```\r\n\r\n\r\nI need pass gutter to children without modifying the template code.\r\n\r\nSo I have the following `button-group` component\r\n\r\n```js\r\nexport default {\r\n  name: 'lib-button-group',\r\n  props: {\r\n    gutter: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n  },\r\n  render(h) {\r\n    const className = ['button-group'];\r\n\r\n    return h('div', {\r\n      class: className,\r\n    }, [this.$slots.default]);\r\n  },\r\n};\r\n```\r\n\r\nAnd the `button` component:\r\n\r\n```js\r\nexport default {\r\n  name: 'lib-button',\r\n  props: {\r\n    type: String\r\n  },\r\n  render(h) {\r\n    const style = {\r\n       // How to add it from parent `button-group` another way throught props?\r\n      marginRight: this.$parent.marginRight,\r\n    };\r\n\r\n    return (\r\n      h('button', {\r\n        style,\r\n      }, [this.$slots.default]) // What should I write here?\r\n    );\r\n  },\r\n};\r\n```\r\n\r\n\r\nP.S. I'm react.js coder and new to vue.js\r\n\r\n### What does the proposed API look like?\r\nCan I use something like React.cloneElement?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8916","RelatedDescription":"Closed issue \"How to add props to children elements using render function?\" (#8916)"},{"Id":"368308108","IsPullRequest":false,"CreatedAt":"2018-10-09T17:03:11","Actor":"cloudever","Number":"8915","RawContent":null,"Title":"How to add props to children elements using render function?","State":"closed","Body":"Suggest I write a template:\r\n```html\r\n<lib-button-group gutter=\"4px\">\r\n  <lib-button>Default</lib-button>\r\n  <lib-button type=\"primary\">Primary</lib-button>\r\n</lib-button-group>\r\n```\r\n\r\n\r\nI need pass gutter to children without modifying the template code.\r\n\r\nSo I have the following `button-group` component\r\n\r\n```js\r\nexport default {\r\n  name: 'lib-button-group',\r\n  props: {\r\n    gutter: {\r\n      type: String,\r\n      default: null,\r\n    },\r\n  },\r\n  render(h) {\r\n    const className = ['button-group'];\r\n\r\n    return h('div', {\r\n      class: className,\r\n    }, [this.$slots.default]);\r\n  },\r\n};\r\n```\r\n\r\nAnd the `button` component:\r\n\r\n```js\r\nexport default {\r\n  name: 'lib-button',\r\n  props: {\r\n    marginRight: String\r\n  },\r\n  render(h) {\r\n    const style = {\r\n       // How to add it from parent `button-group` another way throught props?\r\n      marginRight: this.$parent.marginRight,\r\n    };\r\n\r\n    return (\r\n      h('button', {\r\n        style,\r\n      }, [this.$slots.default]) // What should I write here?\r\n    );\r\n  },\r\n};\r\n```\r\n\r\n\r\nP.S. I'm react.js coder and new to vue.js","Url":"https://github.com/vuejs/vue/issues/8915","RelatedDescription":"Closed issue \"How to add props to children elements using render function?\" (#8915)"},{"Id":"368245260","IsPullRequest":false,"CreatedAt":"2018-10-09T15:12:37","Actor":"dgirgenti","Number":"8914","RawContent":null,"Title":"Enhance v-bind with shorthand for values matching property name","State":"closed","Body":"### What problem does this feature solve?\r\nI often find myself passing bound properties into components that are identical to some computed or data property on my current Component. In cases where a bound property's value is equivalent to the property name, it would be nice to not have to repeat the property name.\r\n\r\nThis would feel familiar to the es6 object shorthand notation which allows you to leave out values that are the same as the property name.\r\n\r\nIt can also apply and will feel familiar to attributes that commonly do not include values, like an `input`'s `checked` attribute.\r\n\r\n\r\n### What does the proposed API look like?\r\nAn example can be found here: https://codepen.io/anon/pen/dgNBQK\r\n\r\nEssentially, \r\n`<SomeComponent :someProperty=\"someProperty\" />`\r\nwould become\r\n`<SomeComponent :someProperty />`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8914","RelatedDescription":"Closed issue \"Enhance v-bind with shorthand for values matching property name\" (#8914)"},{"Id":"368228082","IsPullRequest":false,"CreatedAt":"2018-10-09T14:05:56","Actor":"xxbld","Number":"8913","RawContent":null,"Title":"how to debug vue+typescript project create by vuecli3  in vscode?","State":"closed","Body":"i can breakpoint into *.ts file ,but *.vue unsupport !\r\n\r\nwhen i used es6 grammar, debugger is correct\r\nhttps://vuejs.org/v2/cookbook/debugging-in-vscode.html\r\n\r\nlaunch.json like this: \r\n{\r\n\"version\": \"0.2.0\",\r\n\"configurations\": [\r\n{\r\n\"type\": \"chrome\",\r\n\"request\": \"launch\",\r\n\"name\": \"vuejs: chrome\",\r\n\"url\": \"http://localhost:8080\",\r\n\"webRoot\": \"${workspaceFolder}/src\",\r\n\"breakOnLoad\": true,\r\n\"sourceMapPathOverrides\": {\r\n\"webpack:///src/\": \"${webRoot}/\"\r\n}\r\n}\r\n]\r\n}","Url":"https://github.com/vuejs/vue/issues/8913","RelatedDescription":"Closed issue \"how to debug vue+typescript project create by vuecli3  in vscode?\" (#8913)"},{"Id":"368211894","IsPullRequest":false,"CreatedAt":"2018-10-09T13:31:22","Actor":"decademoon","Number":"8912","RawContent":null,"Title":"A deliberately empty slot-scope attribute will not be rendered as a scoped slot","State":"open","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/decademoon/50wL7mdz/759740/](https://jsfiddle.net/decademoon/50wL7mdz/759740/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```\r\n<foo>\r\n  <bar slot-scope/>\r\n</foo>\r\n```\r\n\r\n### What is expected?\r\n`<bar slot-scope>` should be a scoped slot.\r\n\r\n### What is actually happening?\r\n`<bar slot-scope>` is rendered as a child as if `slot-scope` were not present.\r\n\r\n---\r\nAs a workaround, I've been using a dummy variable to force it to be a scoped slot:\r\n\r\n```<bar slot-scope=\"scope\"/>```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8912","RelatedDescription":"Open issue \"A deliberately empty slot-scope attribute will not be rendered as a scoped slot\" (#8912)"},{"Id":"368204479","IsPullRequest":false,"CreatedAt":"2018-10-09T13:18:31","Actor":"monasdyas","Number":"8911","RawContent":null,"Title":"SonarQube Found 5 Blocker Code Smell Issues","State":"closed","Body":"### What problem does this feature solve?\r\n#### 1.\r\n```javascript\r\n{\r\n  strats.el = strats.propsData = function (parent, child, vm, key) {\r\n    if (!vm) {\r\n      warn(\r\n        \"option \\\"\"   key   \"\\\" can only be used during instance \"  \r\n        'creation with the `new` keyword.'\r\n      );\r\n    }\r\n    return defaultStrat(parent, child)\r\n// Move the declaration of \"defaultStrat\" before this usage.\r\n// L1127 Code Smell Blocker\r\n  };\r\n}\r\n// Declaration L1326\r\nvar defaultStrat = function (parentVal, childVal) {\r\n  return childVal === undefined\r\n    ? parentVal\r\n    : childVal\r\n};\r\n```\r\n\r\n#### 2.\r\n```javascript\r\nnew Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);\r\n// Move the declaration of \"Watcher\" before this usage.\r\n// L2795 Code Smell Blocker\r\n// Declaration L3082\r\nvar Watcher = function Watcher (\r\n  vm,\r\n  expOrFn,\r\n  cb,\r\n  options,\r\n  isRenderWatcher\r\n)\r\n```\r\n\r\n#### 3.\r\n```javascript\r\nvar normalizedName = normalize(name);\r\n// Move the declaration of \"normalize\" before this usage.\r\n// L7275 Code Smell Blocker\r\n// Declaration L7292\r\nvar normalize = cached(function (prop) {\r\n```\r\n\r\n#### 4.\r\n```javascript\r\nif (def.css !== false) {\r\n\textend(res, autoCssTransition(def.name || 'v'));\r\n// Move the declaration of \"autoCssTransition\" before this usage.\r\n// L7427 Code Smell Blocker\r\n}\r\n// Declaration L7436\r\nvar autoCssTransition = cached(function (name) {\r\n```\r\n\r\n#### 5.\r\n```javascript\r\nvar end = function () {\r\n\tel.removeEventListener(event, onEnd);\r\n// Move the declaration of \"onEnd\" before this usage.\r\n// L7513 Code Smell Blocker\r\n\tcb();\r\n};\r\n// Declaration L7515\r\nvar onEnd = function (e) {\r\n\tif (e.target === el) {\r\n\t\tif (  ended >= propCount) {\r\n\t\t\tend();\r\n\t\t}\r\n\t}\r\n};\r\n```\r\n\r\n### What does the proposed API look like?\r\n#### SonarQube Explanation\r\n\r\n##### Variables should be declared before they are used  \r\n\r\nVariables declared with var have the special property that regardless of where they're declared in a function they \"float\" to the top of the function and are available for use even before they're declared. That makes scoping confusing, especially for new coders. To keep confusion to a minimum, var declarations should happen before the variables they declare are used for the first time.\r\n\r\n###### Noncompliant Code Example\r\n\r\n\tvar x = 1;\r\n\tfunction fun(){\r\n\t\talert(x); // Noncompliant as x is declared later in the same scope\r\n\t\tif(something) {\r\n\t\t\tvar x = 42; // Declaration in function scope (not block scope!) shadows global variable\r\n\t\t}\r\n\t}\r\n\tfun(); // Unexpectedly alerts \"undefined\" instead of \"1\"\r\n\r\n###### Compliant Solution\r\n\r\n\tvar x = 1;\r\n\tfunction fun() {\r\n\t\tprint(x);\r\n\t\tif (something) {\r\n\t\t\tx = 42;\r\n\t\t}\r\n\t}\r\n\tfun(); // Print \"1\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\n![sonarqube-vuejs-blockers](https://user-images.githubusercontent.com/17085689/46671798-5ee45280-cbde-11e8-84d0-ac49f291d7e3.png)\r\n","Url":"https://github.com/vuejs/vue/issues/8911","RelatedDescription":"Closed issue \"SonarQube Found 5 Blocker Code Smell Issues\" (#8911)"},{"Id":"368198096","IsPullRequest":false,"CreatedAt":"2018-10-09T13:17:13","Actor":"monasdyas","Number":"8910","RawContent":null,"Title":"SonarQube Found 3 Critical Vulnerability Issues (owasp-a1)","State":"closed","Body":"### What problem does this feature solve?\r\n```javascript\r\nfunction checkIdentifier (\r\n  ident,\r\n  type,\r\n  text,\r\n  errors\r\n) {\r\n  if (typeof ident === 'string') {\r\n    try {\r\n      new Function((\"var \"   ident   \"=_\"));\r\n// Review this \"Function\" call and make sure its arguments are properly validated.\r\n// L10636 Critical Vulnerability\r\n    } catch (e) {\r\n      errors.push((\"invalid \"   type   \" \\\"\"   ident   \"\\\" in expression: \"   (text.trim())));\r\n    }\r\n  }\r\n}\r\nfunction checkExpression (exp, text, errors) {\r\n  try {\r\n    new Function((\"return \"   exp));\r\n// Review this \"Function\" call and make sure its arguments are properly validated.\r\n// L10645 Critical Vulnerability\r\n  } catch (e) {\r\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\r\n    if (keywordMatch) {\r\n      errors.push(\r\n        \"avoid using JavaScript keyword as property name: \"  \r\n        \"\\\"\"   (keywordMatch[0])   \"\\\"\\n  Raw expression: \"   (text.trim())\r\n      );\r\n    } else {\r\n      errors.push(\r\n        \"invalid expression: \"   (e.message)   \" in\\n\\n\"  \r\n        \"    \"   exp   \"\\n\\n\"  \r\n        \"  Raw expression: \"   (text.trim())   \"\\n\"\r\n      );\r\n    }\r\n  }\r\n}\r\nfunction createFunction (code, errors) {\r\n  try {\r\n    return new Function(code)\r\n// Review this \"Function\" call and make sure its arguments are properly validated.\r\n// L10667 Critical Vulnerability\r\n  } catch (err) {\r\n    errors.push({ err: err, code: code });\r\n    return noop\r\n  }\r\n}\r\n```\r\n\r\n### What does the proposed API look like?\r\n#### SonarQube Explanation\r\n\r\n##### Function constructors should not be used\r\n\r\nIn addition to being obtuse from a syntax perspective, function constructors are also dangerous: their execution evaluates the constructor's string arguments similar to the way eval works, which could expose your program to random, unintended code which can be both slow and a security risk.\r\n\r\nIn general it is better to avoid it altogether, particularly when used to parse JSON data. You should use ECMAScript 5's built-in JSON functions or a dedicated library.\r\n\r\n###### Noncompliant Code Example\r\n\r\n\tvar obj =  new Function(\"return \"   data)();  // Noncompliant\r\n\t\r\n###### Compliant Solution\r\n\r\n\tvar obj = JSON.parse(data);\r\n\r\n###### Exceptions\r\nFunction calls where the argument is a string literal (e.g. `(Function('return this'))())` are ignored.\r\n\r\n###### See\r\nOWASP Top 10 2017 Category A1 - Injection\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->\r\n\r\n![sonarqube-vuejs-vulnerability-new_function](https://user-images.githubusercontent.com/17085689/46670874-0a3fd800-cbdc-11e8-834e-56c9d15bbbd9.png)\r\n","Url":"https://github.com/vuejs/vue/issues/8910","RelatedDescription":"Closed issue \"SonarQube Found 3 Critical Vulnerability Issues (owasp-a1)\" (#8910)"},{"Id":"368175743","IsPullRequest":false,"CreatedAt":"2018-10-09T12:38:27","Actor":"Jovaage","Number":"8909","RawContent":null,"Title":"Unnecessary update caused by state change in parent component","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/zzq75rm38x](https://codesandbox.io/s/zzq75rm38x)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a component, A, which makes use of `$listeners` in the template somehow.\r\nCreate a component, B,  that includes component A, so that an instance of B is parent of an instance of A.\r\nAttach an event listener to A in B.\r\nUpdate state in component B somehow.\r\n\r\n### What is expected?\r\nComponent B should update, and component A should be unaffected.\r\n\r\n### What is actually happening?\r\nComponent A is updated. It is rendered again, and the update lifecycle hooks are triggered.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8909","RelatedDescription":"Closed issue \"Unnecessary update caused by state change in parent component\" (#8909)"},{"Id":"368164165","IsPullRequest":false,"CreatedAt":"2018-10-09T12:35:45","Actor":"xorik","Number":"8908","RawContent":null,"Title":"Element that removed with animation from 2d table moves to the top-left corner","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/60eqgkx3/](https://jsfiddle.net/60eqgkx3/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick on the test button\r\n\r\n### What is expected?\r\nRemoved element should be faded when deleted without any movement\r\n\r\n### What is actually happening?\r\nRemoved element starts to move to the top-left corner\r\n\r\n---\r\nI can remove the `position: absolute` css rule, but I need it for other cases (for example when new element should be immediately appear at the same time to fade with previous\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8908","RelatedDescription":"Closed issue \"Element that removed with animation from 2d table moves to the top-left corner\" (#8908)"},{"Id":"368053949","IsPullRequest":false,"CreatedAt":"2018-10-09T07:42:45","Actor":"GiantLiu","Number":"8907","RawContent":null,"Title":"input[type='date']的输入框,用v-model绑定数据报格式错误","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/759474/](https://jsfiddle.net/50wL7mdz/759474/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n<input type=\"date\" v-model=\"testDate\">\r\n var productApp = new Vue({\r\n            el: \"#productApp\",\r\n            data: {\r\n                testDate: \"2018-10-09 00:00:00\"\r\n            }\r\n});\r\n如果testDate为“2018-10-09”这样的格式是可以的\r\n但是如果后面多了时间，就不能绑定数据了\r\n\r\n### What is expected?\r\n我感觉要加上官方的日期过滤器，不然一些基础类型支持不好\r\n\r\n### What is actually happening?\r\n一般数据库保存的时间格式都是带时间信息的。只是在前端显示要做格式化而以，到前端转成标准的json就是有时间信息的\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8907","RelatedDescription":"Closed issue \"input[type='date']的输入框,用v-model绑定数据报格式错误\" (#8907)"},{"Id":"368025119","IsPullRequest":false,"CreatedAt":"2018-10-09T05:21:28","Actor":"Emiya0306","Number":"8906","RawContent":null,"Title":"Feature: Provide a new way that parent component can tell child components do something.","State":"closed","Body":"### What problem does this feature solve?\r\nWe need a new way to avoid using this.$refs.xxx.callFn(), but I also would like to let parent component tell child components they can do something at some time.\r\n\r\n### What does the proposed API look like?\r\n```HTML\r\n<!-- Child Component -->\r\n<template>\r\n  <div>{{data}}</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      data: []\r\n    }\r\n  },\r\n  methods: {\r\n    // this logic only belongs to child component\r\n    // if parent use ^freshMyData/^fresh-my-data, this method canbe dispatch by parent\r\n    freshMyData() {\r\n      return axios.get('/api/data')\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\n```HTML\r\n<!-- Parent Component -->\r\n<template>\r\n  <div>\r\n    <!-- if \"fresh-my-data\" is not existed in child, it will be warning -->\r\n    <!-- \"v-emit:\" or \"^\" to declare you can dispatch event (maybe string is not good, is any good idea for that?) -->\r\n    <child-component ^fresh-my-data=\"'refresh'\">\r\n    </child-component>\r\n    <div>\r\n      Status: {{freshed}}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      freshed: false\r\n    }\r\n  },\r\n  async mounted() {\r\n    await this.refreshData()\r\n    this.freshed = true\r\n  },\r\n  methods: {\r\n    refreshData() {\r\n      // if 'refresh' not be defined, it will be warning, not block code.\r\n      return this.$dispatch('refresh')\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8906","RelatedDescription":"Closed issue \"Feature: Provide a new way that parent component can tell child components do something.\" (#8906)"},{"Id":"367903607","IsPullRequest":false,"CreatedAt":"2018-10-08T19:32:32","Actor":"brian-c","Number":"8905","RawContent":null,"Title":"<component is=\"input\"> doesn't bind :value=\"...\" correctly","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/4n9jcgxL/](https://jsfiddle.net/4n9jcgxL/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nChange the text in the \"normal\" input. `value` bindings update as expected.\r\n\r\nChange the text in the \"component\" input. `value` bindings still update as expected.\r\n\r\nChange the text in the \"normal\" input again. The \"component\" input does not update. However, its `value=\"...\"` attribute appears to be correct.\r\n\r\n### What is expected?\r\nThe `<component is=\"input\" :value=\"value\">` should update when `value` changes.\r\n\r\n### What is actually happening?\r\nIt looks like after editing a `<component is=\"input\">` the value property and the value attribute get out of sync, which stops the UI from updating.\r\n\r\n(My use case actually looks something like `<component :is=\"multiline ? 'textarea' : 'input'\"></component>`, for what it's worth.) \r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8905","RelatedDescription":"Closed issue \"<component is=\"input\"> doesn't bind :value=\"...\" correctly\" (#8905)"},{"Id":"367879960","IsPullRequest":true,"CreatedAt":"2018-10-08T17:11:27","Actor":"ManoelLobo","Number":"8904","RawContent":null,"Title":"chore(eslint): Add extension to .eslintrc","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe:\r\nSmall deprecation in eslint configuration file\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nIt is not a big change, but .eslintrc without extension is deprecated (https://eslint.org/docs/user-guide/configuring#configuration-file-formats)","Url":"https://github.com/vuejs/vue/pull/8904","RelatedDescription":"Open PR \"chore(eslint): Add extension to .eslintrc\" (#8904)"},{"Id":"367763190","IsPullRequest":true,"CreatedAt":"2018-10-08T12:43:47","Actor":"caozhong1996","Number":"8903","RawContent":null,"Title":"refactor(core):use destructuring to replace temporary variable","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/8903","RelatedDescription":"Closed or merged PR \"refactor(core):use destructuring to replace temporary variable\" (#8903)"},{"Id":"367462038","IsPullRequest":false,"CreatedAt":"2018-10-07T11:47:21","Actor":"cslee","Number":"8899","RawContent":null,"Title":"SSR hydration issue","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/k3ln8nlmnr](https://codesandbox.io/s/k3ln8nlmnr)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThis code causes hydration issue when run with SSR\r\n```\r\n<template>\r\n  <div>{{ emptyString }}<i v-if=\"falsyValue\">test</i></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      emptyString: '',\r\n      falsyValue: false\r\n    }\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\n### What is expected?\r\nNo hydration issue\r\n\r\n### What is actually happening?\r\n[Vue warn]: The client-side rendered virtual DOM tree is not matching server-rendered content. This is likely caused by incorrect HTML markup, for example nesting block-level elements inside `<p>`, or missing `<tbody>`. Bailing hydration and performing full client-side render.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8899","RelatedDescription":"Closed issue \"SSR hydration issue\" (#8899)"},{"Id":"367524626","IsPullRequest":false,"CreatedAt":"2018-10-07T11:29:29","Actor":"FunnyB0y","Number":"8902","RawContent":null,"Title":"better categorisation of data fields","State":"closed","Body":"### What problem does this feature solve?\r\nCurrently, all of the data fields (data, props, methods, computed) are all accessed under `this`, which can make it quite confusing sometimes while developing as you're unsure whether you should be directly mutating the variable e.g. props. Separating them into their own containers, e.g. this.props, this.computed, would clear up confusion as well as allow a variable name being used for multiple data fields, e.g. `this.computed.getName`, `this.methods.getName`\r\n\r\n### What does the proposed API look like?\r\nprops => this.props\r\ncomputed => this.computed\r\nmethods => this.methods // maybe\r\ndata => this.data // could probably leave it as is too\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8902","RelatedDescription":"Closed issue \"better categorisation of data fields\" (#8902)"},{"Id":"367519896","IsPullRequest":true,"CreatedAt":"2018-10-07T04:20:27","Actor":"omarkdev","Number":"8901","RawContent":null,"Title":"refactor: remove some elses","State":"open","Body":"This pull request has a intention to remove some useless else's to simplify the code.\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [x] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n","Url":"https://github.com/vuejs/vue/pull/8901","RelatedDescription":"Open PR \"refactor: remove some elses\" (#8901)"},{"Id":"367514967","IsPullRequest":false,"CreatedAt":"2018-10-07T03:04:04","Actor":"geongeorge","Number":"8900","RawContent":null,"Title":"Array element in Template syntax is not updating(inside a component)","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vmmz5mykr7](https://codesandbox.io/s/vmmz5mykr7)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen the reproduction link and click on an option. It'll say if you're correct or not. \r\nClick next question. \r\nThe DOM is not updated inside the component. \r\nlog button will log what the array variable options[] contains.\r\neach button in the question component contains one option.\r\n\r\n### What is expected?\r\nEach button in the result is supposed to have the corresponding option on it from the options[] array\r\n\r\n### What is actually happening?\r\noptions array is updated while the button remains to contain the old value.\r\nhttps://i.imgur.com/zDXrhvm.png\r\n\r\n---\r\nI believe this is a bug related to reactivity. I tried vm.$forceUpdate() and it seemed to work.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8900","RelatedDescription":"Closed issue \"Array element in Template syntax is not updating(inside a component)\" (#8900)"},{"Id":"367291135","IsPullRequest":false,"CreatedAt":"2018-10-06T10:49:53","Actor":"NoRabbit","Number":"8898","RawContent":null,"Title":"Watcher does not fire immediately","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Lmn0ehcs/8/](https://jsfiddle.net/Lmn0ehcs/8/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick on the \"Update\" button.\r\n\r\n### What is expected?\r\nThe \"property change watched\" message should be in between the two other logs as the watcher should be fired right after the property has changed.\r\n\r\n- increasing property\r\n- property change watched 1 0\r\n- property increased\r\n\r\n\r\n\r\n### What is actually happening?\r\nThe \"property change watched\" message is dispatched after the two other logs, indicating that the second log was executed before the watcher while it should have executed after the property change.\r\n\r\n- increasing property\r\n- property increased\r\n- property change watched 1 0\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8898","RelatedDescription":"Closed issue \"Watcher does not fire immediately\" (#8898)"},{"Id":"367194048","IsPullRequest":false,"CreatedAt":"2018-10-05T13:52:12","Actor":"Herteby","Number":"8897","RawContent":null,"Title":"Using v-for on a functional component which returns multiple nodes renders \"undefined\"","State":"closed","Body":"### Version\r\n2.5.17\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Herteby/r2nb09eg/](https://jsfiddle.net/Herteby/r2nb09eg/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nAs the title says, or just look at the fiddle :)\r\n\r\n### What is expected?\r\nThe slots should be rendered properly.\r\nThe combination of v-for and \"fragment\" should return an Array of VNodes.\r\n\r\n### What is actually happening?\r\nThe slots render as \"undefined\"\r\nIt returns an Array of Arrays of Vnodes.\r\n\r\n---\r\nThe problem seems to be that the result becomes an Array of Arrays of VNodes. Seems like it ought to be flattened.\r\nFor some reason, if you add an extra element as a sibling, it fixes it.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/8897","RelatedDescription":"Closed issue \"Using v-for on a functional component which returns multiple nodes renders \"undefined\"\" (#8897)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"368679977","IsPullRequest":true,"CreatedAt":"2018-10-10T17:34:36","Actor":"MatthewSaintBull","Number":"2422","RawContent":null,"Title":"[ITALIAN] Translated README in Italian","State":"closed","Body":"Translated readme file in italian. \r\nTrying to translate all the docs files\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2422","RelatedDescription":"Closed or merged PR \"[ITALIAN] Translated README in Italian\" (#2422)"},{"Id":"368574842","IsPullRequest":false,"CreatedAt":"2018-10-10T11:16:36","Actor":"hushenao","Number":"2421","RawContent":null,"Title":"使用addrouters动态添加路由，无法懒加载","State":"closed","Body":"### What problem does this feature solve?\r\n使用addrouters动态添加路由的时候，在添加路由的时候会把所有的路由信息都加载，导致加载慢，有没有方法可以使用懒加载的方式加载动态路由\r\n\r\n### What does the proposed API look like?\r\n最好是可以直接通过webpack或者router配置\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2421","RelatedDescription":"Closed issue \"使用addrouters动态添加路由，无法懒加载\" (#2421)"},{"Id":"368498861","IsPullRequest":false,"CreatedAt":"2018-10-10T05:23:23","Actor":"Yolenna","Number":"2420","RawContent":null,"Title":"'this.$router.push' dosen't work in .net application but it is working in browser with the same code","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nI want to use 'this.$router.push'  go to the path '/question/correct', \r\n`this.$router.push({path: '/question/correct', query:{id: '001'}})`\r\njust like that code\r\nThen I am watching  router in the template '/question/correct.vue' \r\n`beforeRouteEnter(to, from, next) {\r\n            alert(to.path)\r\n            next()\r\n        }`\r\nIt dosen't alert in .net application but had alert in browser. why? \r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2420","RelatedDescription":"Closed issue \"'this.$router.push' dosen't work in .net application but it is working in browser with the same code\" (#2420)"},{"Id":"368478580","IsPullRequest":true,"CreatedAt":"2018-10-10T03:20:36","Actor":"ataylor32","Number":"2419","RawContent":null,"Title":"docs: improve \"Essentials > HTML5 History Mode > Caveat\" (#2418)","State":"open","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2419","RelatedDescription":"Open PR \"docs: improve \"Essentials > HTML5 History Mode > Caveat\" (#2418)\" (#2419)"},{"Id":"368014841","IsPullRequest":false,"CreatedAt":"2018-10-09T07:44:22","Actor":"ataylor32","Number":"2418","RawContent":null,"Title":"[Docs] HTML5 History Mode Caveat Clarification","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/guide/essentials/history-mode.html#caveat](https://router.vuejs.org/guide/essentials/history-mode.html#caveat)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nThe documentation correctly states that using history mode and configuring the server with a catch-all fallback route has the caveat that the server will no longer report 404 errors. It says \"To get around the issue, you should implement a catch-all route within your Vue app to show a 404 page\". In my opinion, that wording implies that implementing a catch-all route within Vue completely fixes the problem. However, with that approach, if a user goes to an invalid URL, the server will respond with a status code of 200 even though the URL is invalid. On some sites (especially dynamic ones), there is a good chance that a URL that is valid today could be invalid tomorrow. Maybe some search engines are smart enough to recognize that it's a \"Page Not Found\" page and treat it as such rather than a valid URL, but I'm guessing that not all search engines are that smart. I think it's important for developers to be aware of this, so I think it would be a good addition to the \"Essentials > HTML5 History Mode >  Caveat\" documentation.\r\n\r\n### What is expected?\r\nThe documentation should mention that the server will respond with a status code of 200 for invalid URLs.\r\n\r\n### What is actually happening?\r\nThe documentation does not mention this.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2418","RelatedDescription":"Closed issue \"[Docs] HTML5 History Mode Caveat Clarification\" (#2418)"},{"Id":"367622274","IsPullRequest":true,"CreatedAt":"2018-10-08T02:37:49","Actor":"chiaweilee","Number":"2417","RawContent":null,"Title":"[vue-router] must call Vue.use(VueRouter) before creating a router","State":"open","Body":"Assert warning if forget to call Vue.use(VueRouter) before creating.","Url":"https://github.com/vuejs/vue-router/pull/2417","RelatedDescription":"Open PR \"[vue-router] must call Vue.use(VueRouter) before creating a router\" (#2417)"},{"Id":"365594628","IsPullRequest":true,"CreatedAt":"2018-10-07T18:05:58","Actor":"Slashgear","Number":"2411","RawContent":null,"Title":"docs(vuepress): move fr gitbook doc to vuepress","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nThe french doc translation was hidden in the previous gitbook configuration.\r\nThis heavy PR moves all the files to the vuepress config.\r\n\r\n- [x] define fr-FR language in conf\r\n- [x] move gitbook doc in vuepress\r\n- [x] reshape API page to match vuepress structure\r\n\r\n😸 Sorry for the long PR, it is mainly doc duplication\r\n\r\nShould the French gitbook documentation be removed ?","Url":"https://github.com/vuejs/vue-router/pull/2411","RelatedDescription":"Closed or merged PR \"docs(vuepress): move fr gitbook doc to vuepress\" (#2411)"},{"Id":"367376297","IsPullRequest":false,"CreatedAt":"2018-10-06T11:29:53","Actor":"wcjr","Number":"2416","RawContent":null,"Title":"Give the Router plugin a config option","State":"closed","Body":"### What problem does this feature solve?\r\nRight now we are required to send in a \"configured router\" to the instantiation options of the Vue instance, example:\r\n\r\n```\r\nimport Vue from 'vue';\r\nimport router from './plugins/router';\r\nimport App from './App.vue';\r\n\r\nnew Vue({\r\n  router,\r\n  render: h => h(App)\r\n}).$mount('#app');\r\n```\r\n**AND**\r\n\r\nwe are also required to \"`use`\" the plugin, example:\r\n```\r\nimport Vue from 'vue';\r\nimport Router from 'vue-router';\r\nimport homeRoutes from '@/home/routes';\r\nimport passwordRoutes from '@/password/routes';\r\nimport profileRoutes from '@/profile/routes';\r\n\r\nVue.use(Router);\r\n\r\nconst configuredRouter = new Router({\r\n  mode: 'history',\r\n  routes: [\r\n    ...homeRoutes,\r\n    ...passwordRoutes,\r\n    ...profileRoutes,\r\n    {\r\n      path: '*',\r\n      component: {\r\n        render: h => h('span', 'page not found')\r\n      }\r\n    }\r\n  ]\r\n});\r\n\r\nexport default configuredRouter;\r\n```\r\n\r\nThis feels a little redundant to me.\r\n\r\n\r\n### What does the proposed API look like?\r\nI'm requesting we be able to configure the Router at time of plugin installation, i.e., `Vue.use(Router, options)`, example:\r\n```\r\nimport Vue from 'vue';\r\nimport Router from 'vue-router';\r\nimport homeRoutes from '@/home/routes';\r\nimport passwordRoutes from '@/password/routes';\r\nimport profileRoutes from '@/profile/routes';\r\n\r\nVue.use(Router, {\r\n  mode: 'history',\r\n  routes: [\r\n    ...homeRoutes,\r\n    ...passwordRoutes,\r\n    ...profileRoutes,\r\n    {\r\n      path: '*',\r\n      component: {\r\n        render: h => h('span', 'page not found')\r\n      }\r\n    }\r\n  ]\r\n});\r\n```\r\n\r\nso the `main.js` could look like this:\r\n```\r\nimport Vue from 'vue';\r\nimport './plugins/router';\r\nimport App from './App.vue';\r\n\r\nnew Vue({\r\n  render: h => h(App)\r\n}).$mount('#app');\r\n```\r\n\r\nDevelopers could save a step in bootstrapping if this were available and I believe it could be done in a backward compatible way.  Vuetify does it this way and it seems like a cleaner approach to me.\r\n\r\nThanks for consideration.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2416","RelatedDescription":"Closed issue \"Give the Router plugin a config option\" (#2416)"},{"Id":"366977430","IsPullRequest":true,"CreatedAt":"2018-10-05T10:42:48","Actor":"HusamIbrahim","Number":"2415","RawContent":null,"Title":"[docs] Fix typo in redirect-and-alias.md","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2415","RelatedDescription":"Closed or merged PR \"[docs] Fix typo in redirect-and-alias.md\" (#2415)"},{"Id":"366238028","IsPullRequest":false,"CreatedAt":"2018-10-03T11:22:34","Actor":"tomerBluevine","Number":"2414","RawContent":null,"Title":"Param not present when pushing the same route name with params","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/TomerShmargadBluevine/7tewd56u/11/](https://jsfiddle.net/TomerShmargadBluevine/7tewd56u/11/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Create a route definition for /user\r\n2. Push user to router\r\n3. Push user to router with params - {id: 'foo'}\r\n\r\n### What is expected?\r\nThe route params will change to {id: 'foo'}\r\n\r\n### What is actually happening?\r\nThe route params is an empty object.\r\n\r\n---\r\nIf you try to:\r\n1. Push user2 to router\r\n3. Push user to router with params - {id: 'foo'}\r\n\r\nIt works!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2414","RelatedDescription":"Closed issue \"Param not present when pushing the same route name with params\" (#2414)"},{"Id":"366160068","IsPullRequest":false,"CreatedAt":"2018-10-03T06:14:06","Actor":"graham-sportsmgmt","Number":"2413","RawContent":null,"Title":"[Docs] Clearly show how to keep router reference after ajax callbacks","State":"closed","Body":"### What problem does this feature solve?\r\nIt is unclear how to maintain a reference to the router once \"this\" changes inside a callback (such as an ajax request)\r\n\r\n### What does the proposed API look like?\r\nPlease change the \"Programmatic Navigation\" documentation to show how to declare a variable outside of the callbacks that keep a reference to the router.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2413","RelatedDescription":"Closed issue \"[Docs] Clearly show how to keep router reference after ajax callbacks\" (#2413)"},{"Id":"365619891","IsPullRequest":false,"CreatedAt":"2018-10-01T21:07:26","Actor":"sarmanulco","Number":"2412","RawContent":null,"Title":"Vue router opened with nodejs outpus me an error on router.push","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://gist.github.com/sarmanulco/9feab4fe1ea84626bb6ffbe7b65ec93c](https://gist.github.com/sarmanulco/9feab4fe1ea84626bb6ffbe7b65ec93c)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ncreate a project like in the package json in the gist on the link I have written and run it with nodejs and not in the browser\r\n\r\n### What is expected?\r\nIn the output should appear:\r\n```\r\n<div>\r\n   <h1>Hola vuex</h1>\r\n   <h1>Foo</h1>\r\n</div>\r\n```\r\n\r\n### What is actually happening?\r\nOutputs the error addressed in the gist github\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2412","RelatedDescription":"Closed issue \"Vue router opened with nodejs outpus me an error on router.push\" (#2412)"},{"Id":"364750282","IsPullRequest":false,"CreatedAt":"2018-09-28T05:52:56","Actor":"jamesjianpeng","Number":"2410","RawContent":null,"Title":"TS2339: Property 'afterEach' does not exist on type 'object'.","State":"closed","Body":" error info:\r\n```\r\n\r\nERROR in /Users/pengjian/Personal/web-FE/base/growing-up-notes/webGl/Three.js/Three.js 开发指南 第2版/learing-TypeScript-and-Three.js/src/app-ts-vue/router/guards.ts\r\n./src/app-ts-vue/router/guards.ts\r\n[tsl] ERROR in /Users/pengjian/Personal/web-FE/base/growing-up-notes/webGl/Three.js/Three.js 开发指南 第2版/learing-TypeScript-and-Three.js/src/app-ts-vue/router/guards.ts(6,12)\r\n      TS2339: Property 'beforeEach' does not exist on type 'object'.\r\n\r\nERROR in /Users/pengjian/Personal/web-FE/base/growing-up-notes/webGl/Three.js/Three.js 开发指南 第2版/learing-TypeScript-and-Three.js/src/app-ts-vue/router/guards.ts\r\n./src/app-ts-vue/router/guards.ts\r\n[tsl] ERROR in /Users/pengjian/Personal/web-FE/base/growing-up-notes/webGl/Three.js/Three.js 开发指南 第2版/learing-TypeScript-and-Three.js/src/app-ts-vue/router/guards.ts(10,12)\r\n      TS2339: Property 'afterEach' does not exist on type 'object'.\r\n``` \r\n\r\n\r\n- package.json\r\n  ```json\r\n     \"@babel/core\": \"^7.1.0\",\r\n    \"@babel/plugin-syntax-dynamic-import\": \"^7.0.0\",\r\n    \"@babel/preset-env\": \"^7.1.0\",\r\n    \"babel-loader\": \"^8.0.2\",\r\n    \"clean-webpack-plugin\": \"^0.1.19\",\r\n    \"commitizen\": \"^2.10.1\",\r\n    \"css-loader\": \"^1.0.0\",\r\n    \"cz-conventional-changelog\": \"^2.1.0\",\r\n    \"html-webpack-plugin\": \"^3.2.0\",\r\n    \"node-sass\": \"^4.9.3\",\r\n    \"sass-loader\": \"^7.1.0\",\r\n    \"ts-loader\": \"^5.2.1\",\r\n    \"typescript\": \"^3.0.3\",\r\n    \"vue\": \"^2.5.17\",\r\n    \"vue-loader\": \"^15.4.2\",\r\n    \"vue-router\": \"^3.0.1\",\r\n    \"vue-style-loader\": \"^4.1.2\",\r\n    \"vue-template-compiler\": \"^2.5.17\",\r\n    \"webpack\": \"^4.20.2\",\r\n    \"webpack-cli\": \"^3.1.1\",\r\n    \"webpack-dev-server\": \"^3.1.9\",\r\n    \"webpack-merge\": \"^4.1.4\"\r\n  ``\r\n\r\n- webpack.ts.vue.conf.js\r\n```js\r\n/**\r\n * @file 只构建 TypeScript and Vue\r\n * @author jamesjianpeng\r\n */\r\nconst path = require('path');\r\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\r\nconst { VueLoaderPlugin } = require('vue-loader');\r\n\r\nmodule.exports = {\r\n    mode: 'none',\r\n    entry: {\r\n        mian: path.resolve(__dirname, '../src/app-ts-vue/index.ts')\r\n    },\r\n    output: {\r\n        path: path.resolve(__dirname, '../dist'),\r\n        publicPath: './',\r\n        filename: '[name].js'\r\n    },\r\n    resolve: {\r\n        // alias: {\r\n        //    /**\r\n        //     * @todo https://cn.vuejs.org/v2/guide/installation.html#%E8%BF%90%E8%A1%8C%E6%97%B6-%E7%BC%96%E8%AF%91%E5%99%A8-vs-%E5%8F%AA%E5%8C%85%E5%90%AB%E8%BF%90%E8%A1%8C%E6%97%B6\r\n        //     * 需要编译\r\n        //     */\r\n        //    'vue$': 'vue/dist/vue.esm.js'\r\n        // }\r\n        // extensions: [ '.ts', '.vue', '.json' ] // extensions 的数组长度大于等于 3\r\n    },\r\n    externals: {\r\n        vue: 'Vue', // 需要知道库中暴露出来的 name，key 是我们在项目 import Vue from 'vue', value 就是 资源中暴露出来的名字\r\n        'vue-router': 'VueRouter'\r\n    },\r\n    module: {\r\n        rules: [\r\n            {\r\n                test: /\\.vue$/,\r\n                loader: 'vue-loader'\r\n            },\r\n            {\r\n                test: /\\.scss/,\r\n                use: [\r\n                    'vue-style-loader',\r\n                    'css-loader',\r\n                    'sass-loader'\r\n                ]\r\n            },\r\n            {\r\n                test: /.ts$/,\r\n                loader: 'ts-loader',\r\n                options: {\r\n                    appendTsSuffixTo: [ /\\.vue$/ ]\r\n                },\r\n                exclude: /node_module/\r\n            }\r\n        ]\r\n    },\r\n    plugins: [\r\n        new VueLoaderPlugin(),\r\n        new HtmlWebpackPlugin({\r\n            template: path.resolve(__dirname, '../src/app-ts-vue/index-ts-vue.html'),\r\n            meta: {\r\n                viewport: 'width=device-width, initial-scale=1, shrink-to-fit=no'\r\n            }\r\n        })\r\n    ]\r\n};\r\n\r\n```\r\n\r\n- 入口文件\r\n```typescript\r\nimport Vue from 'vue';\r\nimport App from './app.vue';\r\nimport router from './router/index.ts';\r\n\r\n/**\r\n * 生成一个 id 为 app 的元素插入到 body 中，在最后一个元素的前面\r\n * @param none\r\n * @returns {string} id名字：'#app'\r\n */\r\nconst createAppId = function() {\r\n    const scriptTag = document.body.lastChild;\r\n    const app = document.createElement('div');\r\n    app.id = 'app';\r\n    document.body.insertBefore(app, scriptTag);\r\n    return '#' + app.id;\r\n};\r\n\r\nnew Vue({\r\n    router,\r\n    el: createAppId(),\r\n    template: `<div>\r\n                    <App />\r\n               </div>`,\r\n    components:{\r\n        App\r\n    }\r\n});\r\n\r\n\r\n```\r\n\r\n- 路由入口文件\r\n```\r\n/**\r\n * @file 路由出口\r\n * @author jamesjianpeng\r\n */\r\nimport Vue from 'vue';\r\nimport VueRouter from 'vue-router';\r\nimport defaultRoutes from './default-routes.ts';\r\nimport globalGuards from './guards.ts';\r\n\r\nVue.use(VueRouter);\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'layoutDefault',\r\n    beforeEnter: (to:object, from:object, next:any) => {\r\n        console.log('%c 路由组件中特有的钩子 %c - beforeEach', 'background: #5C6BC0; color: #fff;', 'background: #fff; color: #5C6BC0;')\r\n        next();\r\n    },\r\n    component: () => import(/* webpackChunkName: \"layout-default\" */'../layout/default.vue'),\r\n    children: defaultRoutes,\r\n  },\r\n];\r\n\r\nconst router = new VueRouter({\r\n  routes\r\n});\r\n\r\nglobalGuards(router);\r\n\r\nexport default router;\r\n```\r\n\r\n- guards.ts 错误来源的文件\r\n```\r\n/**\r\n * @file 全局路由守卫\r\n * @author jamesjianpeng\r\n */\r\nconst globalGuards = function (router:object) {\r\n    router.beforeEach((to:object, from:object, next:any) => {\r\n        console.log('%c 全局路由 %c - beforeEach', 'background: #5C6BC0; color: #fff;', 'background: #fff; color: #5C6BC0;')\r\n        next()\r\n    })\r\n    router.afterEach((to:object, from:object) => {\r\n        console.log('%c 全局路由 %c - afterEach', 'background: #5C6BC0; color: #fff;', 'background: #fff; color: #5C6BC0;')\r\n    })\r\n}\r\n\r\nexport default globalGuards\r\n```","Url":"https://github.com/vuejs/vue-router/issues/2410","RelatedDescription":"Closed issue \"TS2339: Property 'afterEach' does not exist on type 'object'.\" (#2410)"},{"Id":"364209279","IsPullRequest":false,"CreatedAt":"2018-09-27T06:26:32","Actor":"wuservices","Number":"2409","RawContent":null,"Title":"Register router-link and router-view with PascalCase for style guide compatibility","State":"closed","Body":"### What problem does this feature solve?\r\nThe Vue style guide recommends using PascalCase for Vue components in templates. However, since the components are registerd using kebab-case, you can't use PascalCase in the templates:\r\n```\r\n  Vue.component('router-view', View);\r\n  Vue.component('router-link', Link);\r\n```\r\n\r\nIn contrast, they're registered with kebab-case, you'd be able to use them with either kebab-case, or PascalCase:\r\n\r\n```\r\n  Vue.component('RouterView', View);\r\n  Vue.component('RouterLink', Link);\r\n```\r\n\r\nThis is the related style guide recommendation: https://vuejs.org/v2/style-guide/#Component-name-casing-in-templates-strongly-recommended\r\n\r\n### What does the proposed API look like?\r\n```\r\n<RouterView/>\r\n<RouterLink to=\"/foo\">Go to Foo</RouterLink>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2409","RelatedDescription":"Closed issue \"Register router-link and router-view with PascalCase for style guide compatibility\" (#2409)"},{"Id":"364019823","IsPullRequest":false,"CreatedAt":"2018-09-26T13:28:02","Actor":"francoisromain","Number":"2408","RawContent":null,"Title":"Dynamic alias","State":"closed","Body":"### What problem does this feature solve?\r\nWith a route defined like this: \r\n\r\n```\r\n{\r\n    path: '/404',\r\n    alias: '*',\r\n    name: 'error',\r\n    component: Error\r\n}\r\n```\r\n\r\nWhen a user visit `my-site.com/random-inexisting-url`, the url doesn't change and it displays the error page. (this is what we want)\r\n\r\n*** \r\n\r\nNow, how to to do the same with dynamic routes?\r\n\r\nExample: \r\n- there is a route like `my-site.com/pages/:id` \r\n- the user visits `my-site.com/pages/inexisting-id`. \r\n- the `id` param is used to fetch an API. If the API returns null, there is no automatic redirection to the error page. \r\n\r\nIt is possible to manually redirect to the `/error` page with `router.push({ name: 'error' })` or a navigation guard, but it will change the url to `/error`. \r\n\r\n**Is it possible to keep the original url, but still display the error page?** \r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nsomething like `router.aliasTo({name: 'error' })`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2408","RelatedDescription":"Closed issue \"Dynamic alias\" (#2408)"},{"Id":"363637659","IsPullRequest":true,"CreatedAt":"2018-09-26T02:10:38","Actor":"wregis","Number":"2407","RawContent":null,"Title":"Forward args as props to custom child","State":"closed","Body":"When rendering a custom child (\"tag\" prop) forward unhandled args to the component, like a button or something complex.\r\n\r\nI believe this will not break any existing functionality while giving some new capabilities.\r\n\r\nGuess this will fix #1678 and can be related to #2029.","Url":"https://github.com/vuejs/vue-router/pull/2407","RelatedDescription":"Closed or merged PR \"Forward args as props to custom child\" (#2407)"},{"Id":"363554913","IsPullRequest":false,"CreatedAt":"2018-09-25T17:46:07","Actor":"Amorites","Number":"2406","RawContent":null,"Title":"add runtime type-checking & well understood warnings","State":"closed","Body":"### What problem does this feature solve?\r\nIf we accidentally set `to` prop of router-link to `null`, an error `TypeError: Cannot read property 'name' of null` will be thrown. \r\n\r\nAt this line:\r\nhttps://github.com/vuejs/vue-router/blob/dev/src/util/location.js#L18\r\n\r\nThere should be a better error message but not just crash and leave users confused.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nwarn like react\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2406","RelatedDescription":"Closed issue \"add runtime type-checking & well understood warnings\" (#2406)"},{"Id":"362924527","IsPullRequest":true,"CreatedAt":"2018-09-23T08:32:38","Actor":"HikaruSato","Number":"2405","RawContent":null,"Title":"Add Node.js(Express) Usage Example to Docs","State":"open","Body":"I thought that I needed documentation on usage examples in Node.js (Express).\r\nSo I will suggest adding a usage example in Node.js (Express).","Url":"https://github.com/vuejs/vue-router/pull/2405","RelatedDescription":"Open PR \"Add Node.js(Express) Usage Example to Docs\" (#2405)"},{"Id":"362886196","IsPullRequest":false,"CreatedAt":"2018-09-22T19:59:11","Actor":"rightaway","Number":"2404","RawContent":null,"Title":"Set caseSensitive and pathToRegexpOptions defaults on router","State":"open","Body":"### What problem does this feature solve?\r\n`caseSensitive` and `pathToRegexpOptions` are set on each of the routes individually, which is redundant and not clean especially when working a very large number of routes and across multiple files. It would simplify the code to be able to set it as a default on the router itself, and each of the routes will inherit that if they don't override it in their own route config.\r\n\r\n### What does the proposed API look like?\r\n```js\r\nnew VueRouter({\r\n  caseSensitive: true,\r\n  pathToRegexpOptions: {},\r\n  routes: [\r\n    { path: '/example', caseSensitive: false, pathToRegexpOptions: {} }\r\n  ]\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2404","RelatedDescription":"Open issue \"Set caseSensitive and pathToRegexpOptions defaults on router\" (#2404)"},{"Id":"362876398","IsPullRequest":false,"CreatedAt":"2018-09-22T17:43:59","Actor":"smakinson","Number":"2403","RawContent":null,"Title":"route will iframe changes the iframe then the page when hitting back","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/smakinson/pen/JaVbGv](https://codepen.io/smakinson/pen/JaVbGv)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick the first PRESS ME link to move to the page with an iframe.\r\n\r\nNotice the iframe and the VAL.\r\n\r\nClick the next PRESS ME link.\r\n\r\nNotice the iframe and the VAL.\r\n\r\nPress the back button.\r\n\r\nNotice the iframe and the VAL.\r\n\r\nPress the back button again.\r\n\r\nNotice the iframe and the VAL.\r\n\r\n### What is expected?\r\nPressing the browser back button would go back to the previous route on the first press, not first affecting only the iframe.\r\n\r\n### What is actually happening?\r\nPressing back in the browser first affects the iframe, then pressing again affects the route.\r\n\r\n---\r\nReference issue: https://github.com/vuejs/vue-router/issues/1699\r\n\r\nI came across this bug recently in a project I am working on that uses an iframe for video. I had only noticed the issue in Chrome initially, but the pen seems to show it happening in Firefox and Safari as well.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2403","RelatedDescription":"Open issue \"route will iframe changes the iframe then the page when hitting back\" (#2403)"},{"Id":"362523658","IsPullRequest":false,"CreatedAt":"2018-09-22T09:56:35","Actor":"rothsandro","Number":"2401","RawContent":null,"Title":"$router not available in function passed as prop (undefined is not an object)","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/rothsandro/vue-router-issue](https://github.com/rothsandro/vue-router-issue)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Clone the repo\r\n2. Go into the repo folder\r\n3. `npm install`\r\n4. `npm run serve`\r\n5. Open the app (http://localhost:8080/)\r\n6. Click on the button\r\n\r\nThe parent component `HelloWorld` has a property `demo` with a function `run`, passed down to its child component `ChildComponent`. Clicking the button executes the run method in the child component.\r\n\r\nThe run method triggers four alerts:\r\n1. Alert of a property of the class\r\n2. Alert a property from the Vuex store\r\n3. Alert the $router object using a method in the class\r\n4. Alert using this.$router directly instead of a separate function\r\n\r\n\r\n\r\n\r\n### What is expected?\r\nYou should see four alerts, number 3 and 4 should show \"[object Object]\".\r\n\r\n### What is actually happening?\r\nOnly three alerts will be shown, number four produces the following error:\r\n\r\n```\r\nTypeError: undefined is not an object (evaluating 'this._routerRoot._router')\r\n```\r\n\r\nThe same syntax using this.$store works fine. Therefore I assume the problem is related to Vue Router, not Vue or Typescript.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2401","RelatedDescription":"Closed issue \"$router not available in function passed as prop (undefined is not an object)\" (#2401)"},{"Id":"362717132","IsPullRequest":false,"CreatedAt":"2018-09-22T07:47:10","Actor":"Drezdenozk","Number":"2402","RawContent":null,"Title":"Can i make route with asterisk and exception?","State":"closed","Body":"### What problem does this feature solve?\r\nFor works need something like\r\n'path': '*(exclude something like /static/)'\r\nYes, really, root asterisk and exception...\r\n\r\n### What does the proposed API look like?\r\n*(regExp)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2402","RelatedDescription":"Closed issue \"Can i make route with asterisk and exception?\" (#2402)"},{"Id":"362432843","IsPullRequest":false,"CreatedAt":"2018-09-21T14:51:15","Actor":"dongnaebi","Number":"2400","RawContent":null,"Title":"Why encode '(' to 28%","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://abc.com/search?keyword=iPhone%20XS%20Max(A2104)%20%E5%9B%BD%E8%A1%8C%E7%89%88](https://abc.com/search?keyword=iPhone%20XS%20Max(A2104)%20%E5%9B%BD%E8%A1%8C%E7%89%88)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nI use vue-router in ssr,in entry-server.js,got rejection\r\n```javascript\r\n    const { url } = context\r\n    const { fullPath } = router.resolve(url).route\r\n\r\n    if (fullPath !== url) {\r\n      return reject({ url: fullPath })\r\n    }\r\n```\r\nthe URL is `/search?keyword=iPhone%20XS%20Max(A2104)%20%E5%9B%BD%E8%A1%8C%E7%89%88`\r\nget fullPath in express by `req.url` is `/search?keyword=iPhone%20XS%20Max(A2104)%20%E5%9B%BD%E8%A1%8C%E7%89%88`\r\nbut in vue-router `route.fullPath` get `/search?keyword=iPhone%20XS%20Max%28A2104%29%20%E5%9B%BD%E8%A1%8C%E7%89%88`\r\nthe difference is vue-router encode '(' to 28% and ')' to 29%,why do this?\r\n\r\n### What is expected?\r\ndon't endoce `!， '，(，)，*，-，.，_，~，0-9，a-z，A-Z`\r\n\r\n### What is actually happening?\r\ngot error in ssr\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2400","RelatedDescription":"Closed issue \"Why encode '(' to 28%\" (#2400)"},{"Id":"362178487","IsPullRequest":false,"CreatedAt":"2018-09-20T13:11:28","Actor":"Undefined123456789","Number":"2399","RawContent":null,"Title":"有时候会出现不能命中目标路由而直接命中根路由的问题，不是必然，有时候会出现，频率还有点高，在开发阶段没有问题，发布后就会有问题","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://47.95.14.230:10003/dist/index.html#/test1](http://47.95.14.230:10003/dist/index.html#/test1)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n一直点 【router-link】点击跳转test3 ，理论上回会命中目标路由，但会出现直接到根路由的情况。\r\n\r\n### What is expected?\r\n一直都是命中目标路由\r\n\r\n### What is actually happening?\r\n会出现直接到根路由的情况\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2399","RelatedDescription":"Closed issue \"有时候会出现不能命中目标路由而直接命中根路由的问题，不是必然，有时候会出现，频率还有点高，在开发阶段没有问题，发布后就会有问题\" (#2399)"},{"Id":"361766796","IsPullRequest":false,"CreatedAt":"2018-09-19T14:07:12","Actor":"ChrisDSky","Number":"2398","RawContent":null,"Title":"Refresh Page not reloading website","State":"closed","Body":"Hello,\r\n\r\nI have discovered that if your app is using nested routes or params in routes, if you refresh the page, basically the page doesn't get reloaded and it displays a blank page.\r\n\r\nThe only errors I found in the debug console are:\r\n\r\nChris:1 Refused to apply style from 'http://localhost:8080/testProps/main.css' because its MIME type ('text/html') is not a supported stylesheet MIME type, and strict MIME checking is enabled.\r\nChris:13 GET http://localhost:8080/testProps/main.js 404 (Not Found)\r\nChris:1 Refused to execute script from 'http://localhost:8080/testProps/main.js' because its MIME type ('text/html') is not executable, and strict MIME type checking is enabled.\r\n\r\nIf I have only one level of routing like http://www.mydomain.com/RouteOn\r\n\r\nI can reload the page fine.\r\n\r\nbut if I have something like\r\n\r\nhttp://www.mydomain.com/RouteOn/params1 \r\n\r\nor\r\n\r\nhttp://www.mydomain.com/RouteOn/subRoute\r\n\r\nit shows the error I mention above and show a blank page.\r\n\r\nI am unsure why it does that. I am using angular for another website, with nested routes and parameters, and it has no problem reloading the page correctly.\r\n\r\nI have read on another forum, from a Vue developer, that it is just not possible to achieve a reload with nested routes or params properly.\r\n\r\nCould any one let me know if it can be achieved (keep in mind the website is hosted on a bucket on AWS, so no server trick can be involved). If it can be, how would I do that ?\r\n\r\nThank you in advance.\r\n\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2398","RelatedDescription":"Closed issue \"Refresh Page not reloading website\" (#2398)"},{"Id":"361509724","IsPullRequest":true,"CreatedAt":"2018-09-18T22:36:40","Actor":"jnields","Number":"2397","RawContent":null,"Title":"Add access to history state","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\nThis allows developers access to history.state, which you can use for associating extra data to the URL without updating the visible URL, in history mode.  It does not work for hash mode.","Url":"https://github.com/vuejs/vue-router/pull/2397","RelatedDescription":"Open PR \"Add access to history state\" (#2397)"},{"Id":"361186436","IsPullRequest":false,"CreatedAt":"2018-09-18T08:22:15","Actor":"defusioner","Number":"2396","RawContent":null,"Title":"Props params passing with keep-alive","State":"closed","Body":"### Version\r\n2.8.1 & 3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/mo5x4nlq7p](https://codesandbox.io/s/mo5x4nlq7p)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- Open console\r\n- Go to dog, then to home\r\n\r\n### What is expected?\r\nEvery route is in keep-alive, so dog should be kept alive with its `name=dog`\r\n\r\n### What is actually happening?\r\nIn console we see: `missing required prop: \"name\".`\r\nFor this demo it is almost transparent, but in a real project I've faced a problem that the component that is dependent of the incoming parameter won't be rendered (as it uses apollo and computed properties binded on that parameter).\r\n\r\n---\r\nP.S. Without keep-alive it's ok\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2396","RelatedDescription":"Closed issue \"Props params passing with keep-alive\" (#2396)"},{"Id":"361185756","IsPullRequest":false,"CreatedAt":"2018-09-18T08:14:00","Actor":"defusioner","Number":"2395","RawContent":null,"Title":"Props params passing with keep-alive","State":"closed","Body":"**Version**\r\n2.8.1 & 3.0.1\r\n\r\n**Reproduction link**\r\nhttps://codesandbox.io/s/mo5x4nlq7p\r\n\r\n**Steps to reproduce**\r\n- Open console\r\n- Go to dog, then to home\r\n\r\n**What is expected?**\r\nEvery route is in keep-alive, so dog should be kept alive with its `name=dog`\r\n\r\n**What is actually happening?**\r\nIn console we see: `missing required prop: \"name\"`.\r\nFor this demo it is almost transparent, but in a real project I've faced a problem that the component that is dependent of the incoming parameter won't be rendered (as it uses apollo and computed properties binded on that parameter).\r\n\r\nP.S. Without keep-alive it's ok","Url":"https://github.com/vuejs/vue-router/issues/2395","RelatedDescription":"Closed issue \"Props params passing with keep-alive\" (#2395)"},{"Id":"360776064","IsPullRequest":false,"CreatedAt":"2018-09-17T22:50:51","Actor":"lakca","Number":"2393","RawContent":null,"Title":"Expose (store) history state stack","State":"closed","Body":"### What problem does this feature solve?\r\nAs we know,  for security reasons, browsers do not expose visited pages history.\r\nBut if in a single page application , it will be very helpful to access the history stack. \r\nFor example, I can clarify if it should directly back to previous or redirect to specific page when logged in.\r\nalthough I can replace these with other approaches in different scenarios or maintain this by myself.\r\nAppreciate it!\r\n\r\n### What does the proposed API look like?\r\nrouter.history.stack or others are all okay.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2393","RelatedDescription":"Closed issue \"Expose (store) history state stack\" (#2393)"},{"Id":"360793297","IsPullRequest":false,"CreatedAt":"2018-09-17T09:50:14","Actor":"zhengxs2018","Number":"2394","RawContent":null,"Title":"3.0.1 构建失败，找不到错误，问题已关闭","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/issues/2394","RelatedDescription":"Closed issue \"3.0.1 构建失败，找不到错误，问题已关闭\" (#2394)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"358495065","IsPullRequest":false,"CreatedAt":"2018-10-08T15:36:35","Actor":"ankitsinghaniyaz","Number":"1399","RawContent":null,"Title":"How to access Vue(vm) instance in Vuex store?","State":"closed","Body":"### What problem does this feature solve?\r\nI have a `$notify` method on Vue prototype. I need to use that in my action. Is there a way to do that?\r\n\r\nI see that on Vuex we have `this.$_vm` but not sure if that is the right thing to do\r\n\r\n### What does the proposed API look like?\r\n`this.vue.$notify()`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1399","RelatedDescription":"Closed issue \"How to access Vue(vm) instance in Vuex store?\" (#1399)"},{"Id":"363205490","IsPullRequest":false,"CreatedAt":"2018-10-08T15:15:33","Actor":"AshwinTayson","Number":"1405","RawContent":null,"Title":"Dynamic module generation - Nested modules doesn't have proper levels","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/50wL7mdz/749394/](https://jsfiddle.net/50wL7mdz/749394/)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun the program and check the console and the paragraph tag\r\n\r\n### What is expected?\r\n1. There should be two nested modules a and b in the console store[getters].<br>\r\n1.a The two modules should be namespaced with a/aa and b/aa\r\n\r\n2. The first &lt;p&gt; tag should be undefined since namespace a was not given\r\n3. Second &lt;p&gt; tag should get \"module a/aa\"\r\n4. Third &lt;p&gt; tag should get \"module b/aa\"\r\n\r\n### What is actually happening?\r\n1. There is only one getter.(nested namespacing did not work)<br>\r\n1.a The getter is not namespaced by neither a nor b\r\n\r\n2. The first &lt;p&gt; tag is giving value (not respecting namespace)\r\n3. Second &lt;p&gt; tag is undefined since namespace is not registering properly\r\n4. Third &lt;p&gt; tag is undefined since namespace is not registering properly\r\n\r\n---\r\nBut if u check the state property of the store object in the console, you can see the modules registered with the correct namespace.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1405","RelatedDescription":"Closed issue \"Dynamic module generation - Nested modules doesn't have proper levels\" (#1405)"},{"Id":"365285331","IsPullRequest":false,"CreatedAt":"2018-10-08T15:12:15","Actor":"silentmissile","Number":"1411","RawContent":null,"Title":"this is undefined in vuex","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/7jqyyvmqm1](https://codesandbox.io/s/7jqyyvmqm1)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nwin10 x64\r\nnodejs 10.11.0 x64\r\n@vue/cli 3.0.4\r\n@vue/cli-service 3.0.4\r\n@vue/cli-service-global 3.0.4\r\nvue 2.5.17\r\nvue-router 3.0.1\r\n\r\n\r\n<template>\r\n  <div>\r\n    <router-view></router-view>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Initial from './Initial'\r\nexport default {\r\n  components: {\r\n    'initial': Initial,\r\n  },\r\n  data () {\r\n    return {\r\n    }\r\n  },\r\n  methods: {\r\n  },\r\n  created () {\r\n    console.log(this.$store)\r\n    this.$store.dispatch('Init')\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n\r\nwhen running\r\nnpm run serve\r\nthe service runs smoothly\r\n\r\nwhen I visit this component in browser, some error in console\r\n\r\nthis.$store can be recognized and logged correctly, but\r\n\r\n[Vue warn]: Error in created hook: \"TypeError: this is undefined\"\r\n\r\nfound in\r\n\r\n---> <Design> at src/views/initial.vue\r\n       <Entrance> at src/Entrance.vue\r\n         <Root>\r\n\r\n### What is expected?\r\nfix this bug\r\n\r\n### What is actually happening?\r\nthis is undefined if vuex\r\n\r\n---\r\nin codesandbox, it can't be reproduced, maybe it's caused by conflict of some other software like nodejs\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1411","RelatedDescription":"Closed issue \"this is undefined in vuex\" (#1411)"},{"Id":"365418987","IsPullRequest":true,"CreatedAt":"2018-10-08T00:49:57","Actor":"Slashgear","Number":"1412","RawContent":null,"Title":" docs(vuepress): move 🇫🇷 doc in vuepress","State":"closed","Body":"Last week I notice that French Vuex doc was not on Vuepress therefore not very accessible for the french community.\r\n\r\nThis PR fix that.\r\n\r\n- [x] define fr-FR language in conf\r\n- [x] move gitbook doc in vuepress\r\n- [x] reshape API page to match vuepress structure\r\n\r\n😸 Sorry for the long PR, it is mainly doc duplication\r\n\r\nShould the French gitbook documentation be removed ?","Url":"https://github.com/vuejs/vuex/pull/1412","RelatedDescription":"Closed or merged PR \" docs(vuepress): move 🇫🇷 doc in vuepress\" (#1412)"},{"Id":"367476734","IsPullRequest":false,"CreatedAt":"2018-10-07T19:43:38","Actor":"syntacticsolutions","Number":"1416","RawContent":null,"Title":"Support for IndexedDB","State":"closed","Body":"### What problem does this feature solve?\r\nIt should (in theory) make dealing with Big Data Web Visualizations easier and more performant.\r\n\r\nI'm using echarts to render big data vizualizations at the company I work for. The problem is that when my data gets really big (1m records), It's takes way too long to do anything. The app pretty much becomes unresponsive and so now the only alternative I have is to do all of the aggregation on the backend and then return the response.\r\n\r\n### What does the proposed API look like?\r\nI would imagine that the vuex instance would send messages back and forth between the serviceworker and itself. The mutations could then be passed as arguments to the serviceworker. The serviceworker would perform the operation and return the aggregated data. If the user does not have third-party-cookies enabled. It would just fall back to the normal Vuex instance.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1416","RelatedDescription":"Closed issue \"Support for IndexedDB\" (#1416)"},{"Id":"367472752","IsPullRequest":false,"CreatedAt":"2018-10-06T16:28:43","Actor":"nicodmf","Number":"1415","RawContent":null,"Title":"Wrong data for getters at least in actions because getters are mutables","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/fqm3tj5y/3/](https://jsfiddle.net/fqm3tj5y/3/)\r\n\r\n### Steps to reproduce\r\nclic on \"display values\" text\r\n\r\n### What is expected?\r\nwrapper: values ===  getter: value\r\n\r\n### What is actually happening?\r\nwrapper: values !==  getter: value\r\n\r\n---\r\nI change the line 17\r\nfrom \r\n       let begin = getters.begin\r\nto \r\n       let begin = moment(getters.begin;)\r\n\r\nAnd this works. \r\n\r\nAnyway, it seems to me that a getter should'nt change and be a copy in every call. If not this should be good documented with an big warning : \" Attention : a getter is mutable, copy it, if you want to play with its ow properties.\"\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1415","RelatedDescription":"Open issue \"Wrong data for getters at least in actions because getters are mutables\" (#1415)"},{"Id":"367468201","IsPullRequest":false,"CreatedAt":"2018-10-06T15:37:22","Actor":"nicodmf","Number":"1414","RawContent":null,"Title":"Wrong data for getters in actions : Bug?","State":"closed","Body":"Because an exemple is better :\r\n\r\n```js\r\nconst store = new Vuex.Store({\r\n    state: {\r\n        filters: {\r\n            date: moment(),\r\n            period: \"3weeks\",\r\n        },\r\n    },\r\n    getters: {\r\n        begin(state) {\r\n            switch(state.filters.period) {\r\n                case 'day': return moment(state.filters.date).startOf('day');\r\n                case 'week': return moment(state.filters.date).startOf('week');\r\n                case '3weeks': return moment(state.filters.date).subtract(1, 'week').startOf('week');\r\n            }\r\n            return moment();\r\n        },\r\n   },\r\n   actions: {\r\n        async load({commit, state, getters}) {\r\n            console.log(this._wrappedGetters.begin(state).format('YYYY-MM-DD'), getters.begin.format('YYYY-MM-DD'));\r\n            // Here results are identicals at initialisation, but différents after changes :\r\n            // At initialisation    => **2018-10-15** getter(good value) : **2018-10-15**\r\n            // After changes        => **2018-10-22** getter(wrong value): **2018-10-29**\r\n            // After changes        => **2018-10-15** getter(wrong value): **2018-10-22**\r\n            // After another change => **2018-10-08** getter(wrong value): **2018-10-29**\r\n        },\r\n    },\r\n};\r\n```\r\nIn fact, the use of getters in actions isn't largely documented, but as getters are just computed values based on store and because i always mutate store by mutation in this processus, this should not appear IMO.","Url":"https://github.com/vuejs/vuex/issues/1414","RelatedDescription":"Closed issue \"Wrong data for getters in actions : Bug?\" (#1414)"},{"Id":"367434053","IsPullRequest":false,"CreatedAt":"2018-10-06T07:47:58","Actor":"PedroJuan91","Number":"1413","RawContent":null,"Title":"is there a way to access module properties especially in getters with a passing function eg. this.$store.rootGetters.[module].mygetter(passing_val)","State":"open","Body":"### What problem does this feature solve?\r\nevery time i want to filter my array in my modules state properties.\r\ni will write it to my root getters. and its kinda confusing to me like accessing to the root just to make a filter.  \r\nthen its kinda messy accessing something from the modules going to root\r\n\r\n### What does the proposed API look like?\r\n````\r\n//root getters\r\ngetters: {\r\n createMe(state, getters, rootState){\r\n  return function(nameID) {\r\n   return rootState.persons.names.find(function (thisName) {\r\n    return thisName.id === nameID\r\n   })\r\n  }\r\n }\r\n}\r\n//computed \r\nloadname(id){\r\n return this.$store.getters.createMe(id)\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1413","RelatedDescription":"Open issue \"is there a way to access module properties especially in getters with a passing function eg. this.$store.rootGetters.[module].mygetter(passing_val)\" (#1413)"},{"Id":"363671985","IsPullRequest":true,"CreatedAt":"2018-10-02T08:53:50","Actor":"Austio","Number":"1407","RawContent":null,"Title":"Add ability to turn off devtools on vuex by passing an off options","State":"closed","Body":"This PR adds the ability to turn off devtools on a per vuex instance level.  This is useful for cases where you have multiple vuex stores on a single page.  A good example is a scenario where teams maintain their own portions of a single app that are all loaded, some of which will have an independent vuex store.\r\n\r\nWith this option, on the dev side i could turn this off per instance so that I can debug a single store. \r\n\r\nBy default, this mirrors what is already in vuex, it just allows for turning off when specified.\r\n\r\n```\r\nconst store = new Vuex.Store({\r\n  devtools: false\r\n})\r\n```\r\n\r\nFollow through on https://github.com/vuejs/vuex/issues/875\r\n","Url":"https://github.com/vuejs/vuex/pull/1407","RelatedDescription":"Closed or merged PR \"Add ability to turn off devtools on vuex by passing an off options\" (#1407)"},{"Id":"364858237","IsPullRequest":true,"CreatedAt":"2018-09-30T07:24:08","Actor":"Alex-Sokolov","Number":"1410","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1410","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1410)"},{"Id":"363977638","IsPullRequest":true,"CreatedAt":"2018-09-27T08:42:26","Actor":"nulpatrol","Number":"1408","RawContent":null,"Title":"Add helpers to default export type declaration as in sources","State":"closed","Body":"Partially based on #1274\r\nImport Vuex.\r\n```ts\r\nimport Vuex from \"vuex\";\r\n```\r\nUsing before this PR: \r\n```ts\r\n(Vuex as any).mapActions(...)\r\n```\r\n\r\nUsing after:\r\n```\r\nVuex.mapActions(...)\r\n```","Url":"https://github.com/vuejs/vuex/pull/1408","RelatedDescription":"Closed or merged PR \"Add helpers to default export type declaration as in sources\" (#1408)"},{"Id":"364304597","IsPullRequest":true,"CreatedAt":"2018-09-27T08:03:27","Actor":"revelt","Number":"1409","RawContent":null,"Title":"[docs] Update plugins.md","State":"closed","Body":"Let's update the function's name to match the code sample","Url":"https://github.com/vuejs/vuex/pull/1409","RelatedDescription":"Closed or merged PR \"[docs] Update plugins.md\" (#1409)"},{"Id":"363342548","IsPullRequest":false,"CreatedAt":"2018-09-24T22:23:49","Actor":"Hoishin","Number":"1406","RawContent":null,"Title":"Remove TS type definition and move to DefinitelyTyped","State":"open","Body":"### What problem does this feature solve?\r\n#### Background:\r\nIt's hard to say TypeScript type definition development has been active in this repo. [Searching TypeScript tags](https://github.com/vuejs/vuex/labels/typescript), all 7 issues TS-related remain open, and 3 out of 5 PRs are waiting for reviewing, including one opened back in January 2018.\r\n\r\nIf the repository includes type definition, it would be nice if the repository maintainers are responsible for maintaining definition actively as well as library itself.\r\n\r\n#### Suggestion:\r\nRemove TypeScipt type definition in this repository, and move them to [DefinitelyTyped](https://github.com/DefinitelyTyped/DefinitelyTyped), so type definition development wouldn't be the tasks for Vuex maintainers. I would expect type definition development would be more active with this since it'll be easier to review/merge.\r\n\r\n### What does the proposed API look like?\r\nType definition are removed. Users will have to install `@types/vuex`, but it will be more accurate/strict/up-to-date definition.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1406","RelatedDescription":"Open issue \"Remove TS type definition and move to DefinitelyTyped\" (#1406)"},{"Id":"359277072","IsPullRequest":true,"CreatedAt":"2018-09-24T14:49:27","Actor":"kazupon","Number":"1400","RawContent":null,"Title":"update ja docs","State":"closed","Body":"/ping @ktsn ","Url":"https://github.com/vuejs/vuex/pull/1400","RelatedDescription":"Closed or merged PR \"update ja docs\" (#1400)"},{"Id":"361250917","IsPullRequest":false,"CreatedAt":"2018-09-22T23:08:32","Actor":"sjmcdowall","Number":"1403","RawContent":null,"Title":"Typescript definition for interface Dispatch not correct -- should allow non-async return? ","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/sjmcdowall/hzew29g1/](https://jsfiddle.net/sjmcdowall/hzew29g1/)\r\n\r\n\r\n### Steps to reproduce\r\nCreate a typescript Vue project with Vuex\r\nUse a fairly strict tslint that has \"no-floating-promises\" turned on \r\nCode a call to a store.dispatch() without await / async Promise stuff (i.e. normal sync. call)\r\n\r\n### What is expected?\r\nNo linting errors\r\n\r\n### What is actually happening?\r\ntslint complains with \r\nERROR: (no-floating-promises) /Users/sjm/work/mm/mms4/web-ui/src/app/router.ts[91, 5]: Promises must be handled appropriately on this code:\r\n    store.dispatch('event/initState');\r\n\r\n---\r\nI think the interface for Dispatch needs to have more overrides to include the non-Promise versions that return : any ?? \r\n\r\n`export interface Dispatch {\r\n  (type: string, payload?: any, options?: DispatchOptions): Promise<any>;\r\n  <P extends Payload>(payloadWithType: P, options?: DispatchOptions): Promise<any>;\r\n  (type: string, payload?: any, options?: DispatchOptions): any;\r\n  <P extends Payload>(payloadWithType: P, options?: DispatchOptions): any;\r\n}`\r\n\r\n??\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1403","RelatedDescription":"Closed issue \"Typescript definition for interface Dispatch not correct -- should allow non-async return? \" (#1403)"},{"Id":"361542686","IsPullRequest":true,"CreatedAt":"2018-09-19T01:29:50","Actor":"rigor789","Number":"1404","RawContent":null,"Title":"feat(devtool): allow usage in non-browser environments","State":"open","Body":"This allows inspecting vuex state in standalone devtools with non-browser environments such as NativeScript\r\n\r\nChanges taken from\r\nhttps://github.com/vuejs/vue-devtools/blob/4fe7c84d614f1ddf581d65274f30a989b77f9ad3/shells/electron/index.js#L3-L7","Url":"https://github.com/vuejs/vuex/pull/1404","RelatedDescription":"Open PR \"feat(devtool): allow usage in non-browser environments\" (#1404)"},{"Id":"359858860","IsPullRequest":true,"CreatedAt":"2018-09-13T11:42:03","Actor":"escapedcat","Number":"1402","RawContent":null,"Title":"chore(docs): link to vue docs watch for options","State":"open","Body":"> Accepts an optional options object that takes the same options as Vue's vm.$watch method.\r\n\r\nlinking to the actual `watch` of the vue doc might be helpful for others to check options faster. not sure if this is wanted though due to future maintenance efforts.","Url":"https://github.com/vuejs/vuex/pull/1402","RelatedDescription":"Open PR \"chore(docs): link to vue docs watch for options\" (#1402)"},{"Id":"359583716","IsPullRequest":true,"CreatedAt":"2018-09-12T17:40:01","Actor":"TimvdLippe","Number":"1401","RawContent":null,"Title":"Add esm-browser build to dist","State":"open","Body":"This PR is the complement of https://github.com/vuejs/vue/pull/7110 which is already being distributed on NPM for Vue. I have personally ran the build and imported in my project and I can confirm all references to `process` have been removed and that the code is not transpiled.\r\n\r\nFixes #1247","Url":"https://github.com/vuejs/vuex/pull/1401","RelatedDescription":"Open PR \"Add esm-browser build to dist\" (#1401)"},{"Id":"358486841","IsPullRequest":false,"CreatedAt":"2018-09-12T11:55:12","Actor":"the-s0urce","Number":"1398","RawContent":null,"Title":"Mutations or Actions deprecated?","State":"closed","Body":"### What problem does this feature solve?\r\nHello,\r\nas first sorry for abusing the issue system, but did not find any other contact option. On one of the last two vue.js conferences (not sure wich of both it was), you said, that Mutations and Actions will be merged to one call. I was looking for some written news about this now for quite a time. Now we are setting up a new big project and we would really love to get a confirmation about this.\r\nThank you\r\n\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1398","RelatedDescription":"Closed issue \"Mutations or Actions deprecated?\" (#1398)"},{"Id":"358406566","IsPullRequest":false,"CreatedAt":"2018-09-09T19:55:57","Actor":"ClickerMonkey","Number":"1397","RawContent":null,"Title":"Improve Computed Support","State":"open","Body":"### What problem does this feature solve?\r\nBetter support for computed properties with a set function.\r\n\r\n\r\n### What does the proposed API look like?\r\n\r\n```vue\r\nimport { mapComputed } from 'vuex'\r\nnew Vue({\r\n  computed: {\r\n    ...mapComputed({\r\n       'mutationName': 'stateVariable',\r\n       // example:\r\n       'setLoading': 'loading'\r\n    })\r\n  }\r\n})\r\n```\r\n\r\nThis would generate a computed property that would return `stateVariable` and when the value is changed it would call the mutation `mutationName` with the new value.\r\n\r\nThis greatly simplifies directives like `v-model`.\r\n\r\nImplementation:\r\n\r\n```TypeScript\r\ntype VuexComputedMap = { [mutation: string]: string };\r\n\r\nexport function mapComputed(map: VuexComputedMap) {\r\n  const mapped = Object.create(null);\r\n  for (const mutation in map) {\r\n    const variable = map[mutation]\r\n    mapped[variable] = {\r\n      get () {\r\n         return this.$store.state[ variable ]\r\n      },\r\n      set (value) {\r\n        this.$store.commit(mutation, value)\r\n      }\r\n    };\r\n  }\r\n  return mapped;\r\n}\r\n```\r\n\r\n### Problems\r\n\r\nThe implementation would need to be changed to account for modules & namespaces.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1397","RelatedDescription":"Open issue \"Improve Computed Support\" (#1397)"},{"Id":"355668368","IsPullRequest":false,"CreatedAt":"2018-09-09T18:09:20","Actor":"matsieftw","Number":"1389","RawContent":null,"Title":"Documentation Never Actually Walks You Through Set Up","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://thereisntoneandyoushouldnotrequirethis.com](https://thereisntoneandyoushouldnotrequirethis.com)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Go to your docs.\r\n2. Read them.\r\n3. Think about whether they would be helpful to someone trying to set up a Vue app.\r\n\r\n### What is expected?\r\nHelpful documentation walking you through set up of a Vue app using Vuex.\r\n\r\n### What is actually happening?\r\nA lot of info on concepts and no info on actually bringing in Vuex to your application.\r\n\r\n---\r\nVue's documentation in general never actually walks you through setting anything up. It provides a few code snippets and assumes you'll understand. The documentation has been the biggest source of my frustration while using Vue since it never actually explains anything.\r\n\r\nFor example, on the Vuex installation page, sandwiched between CDN/package manager installation and building from source, you've put that Vuex needs to be instantiated in a module set up. You've provided zero context for this. Is this in the store? Is this for every file you need to access the store in? More importantly, it shouldn't be on the installation page, let alone sandwiched in between different installation methods. Vue's documentation is riddled with these issues. Unfortunately, I still don't actually know enough about how Vue actually works to be able to contribute to the documentation in any way. If I didn't have to use Vue for the project I am on, I would be using React, Redux, & RxJs and have access to meaningful, better written documentation that bothers to walk you through the set up. If Vue actually wants to gain any real traction, you're going to need to actually show folks how to use and set up your tools.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1389","RelatedDescription":"Closed issue \"Documentation Never Actually Walks You Through Set Up\" (#1389)"},{"Id":"356482547","IsPullRequest":true,"CreatedAt":"2018-09-03T12:16:11","Actor":"xiaoshude","Number":"1396","RawContent":null,"Title":"feat(helpers): Allow function to be passed as namespace argument for …","State":"open","Body":"…mapState, mapGetters, mapMutati","Url":"https://github.com/vuejs/vuex/pull/1396","RelatedDescription":"Open PR \"feat(helpers): Allow function to be passed as namespace argument for …\" (#1396)"},{"Id":"356481173","IsPullRequest":true,"CreatedAt":"2018-09-03T12:13:04","Actor":"xiaoshude","Number":"1395","RawContent":null,"Title":"feat(helpers): Allow function to be passed as namespace argument for …","State":"closed","Body":"…mapState, mapGetters, mapMutati","Url":"https://github.com/vuejs/vuex/pull/1395","RelatedDescription":"Closed or merged PR \"feat(helpers): Allow function to be passed as namespace argument for …\" (#1395)"},{"Id":"355847188","IsPullRequest":false,"CreatedAt":"2018-09-03T07:21:12","Actor":"Fachher","Number":"1391","RawContent":null,"Title":"Registering Vuex hooks prevents vue rendering.","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/Fachher/vuejsschool.git](https://github.com/Fachher/vuejsschool.git)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nyarn run serve.\r\nopen browser and open http://localhost:8080\r\nYou will see that only the navigationbar is displayed but content is missing.\r\n\r\n### What is expected?\r\nSee the content of each route\r\n\r\n### What is actually happening?\r\ncontent is not rendered\r\n\r\n---\r\nRemoving hook methods from About.vue, Home.vue and ShipmentList.vue leads to working app. This means just adding the hooks does not lead to this behavior.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1391","RelatedDescription":"Closed issue \"Registering Vuex hooks prevents vue rendering.\" (#1391)"},{"Id":"355913234","IsPullRequest":false,"CreatedAt":"2018-09-01T04:09:50","Actor":"imatmati","Number":"1393","RawContent":null,"Title":"Vuex module helpers","State":"closed","Body":"### What problem does this feature solve?\r\nPrevent wrong placement of mapping helpers in component.\r\nI came across a trouble lately with coding calls to modules. I used the helpers but incorrectly. For example, I used an action helper in the computed part of my component. The issue was that it was called only once .\r\n\r\n### What does the proposed API look like?\r\n`mapActions(myComponent,[\"action1\", \"action2\"])`\r\n\r\nBut to prevent any wrong insertion in the component, it would be convenient to register the component in the helpers instead of inserting the helpers in the component which is error prone.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1393","RelatedDescription":"Closed issue \"Vuex module helpers\" (#1393)"},{"Id":"356049299","IsPullRequest":true,"CreatedAt":"2018-09-01T03:52:33","Actor":"yangdan8","Number":"1394","RawContent":null,"Title":"修复d.ts不能支持tsx的bug","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1394","RelatedDescription":"Closed or merged PR \"修复d.ts不能支持tsx的bug\" (#1394)"},{"Id":"355885735","IsPullRequest":false,"CreatedAt":"2018-08-31T08:24:23","Actor":"imatmati","Number":"1392","RawContent":null,"Title":"Vuex module helpers","State":"closed","Body":"Hi,\r\n\r\nI would to propose an enhancement. I came across a trouble lately with coding calls to modules. I used the helpers but incorrectly. For example, I used an action helper in the computed part of my component. The issue was that it was called only once ... But to prevent any wrong insertion in the component, it would be convenient to register the component in the helpers instead of inserting the helpers in the component which is error prone. Why not something like : \r\n`mapActions(myComponent,[\"action1\", \"action2\"])`\r\nIt would insert correctly the helpers in the component.\r\nHave a nice day.\r\n\r\nIvan Matmati\r\n","Url":"https://github.com/vuejs/vuex/issues/1392","RelatedDescription":"Closed issue \"Vuex module helpers\" (#1392)"},{"Id":"355824650","IsPullRequest":false,"CreatedAt":"2018-08-31T03:15:23","Actor":"myadomin","Number":"1390","RawContent":null,"Title":"bug: examples\\todomvc, when press keyboard enter to delete some todoItem, maybe delete two todoItem","State":"open","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/examples/todomvc/store/mutations.js](https://github.com/vuejs/vuex/blob/dev/examples/todomvc/store/mutations.js)\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nwhen edit some one todoItem, clear the todoItem text, then press keyboard enter.\r\n\r\n\r\n### What is expected?\r\ndelete the todoItem\r\n\r\n### What is actually happening?\r\ndelete the todoItem and anothre todoItem\r\n\r\n---\r\nwhen edit some one todoItem, clear the todoItem text, then press keyboard enter.\r\nit will execute @keyup.enter=\"doneEdit\" and @keyup.esc=\"cancelEdit\" (in page TodoItem.vue).\r\nin page vuex\\examples\\todomvc\\store\\mutations.js, mutation:removeTodo.\r\nthe mutation:removeTodo will execute twice, so will delete two todoItem.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1390","RelatedDescription":"Open issue \"bug: examples\\todomvc, when press keyboard enter to delete some todoItem, maybe delete two todoItem\" (#1390)"},{"Id":"355551023","IsPullRequest":true,"CreatedAt":"2018-08-31T03:02:07","Actor":"myadomin","Number":"1388","RawContent":null,"Title":"fix bug: examples/todomvc","State":"closed","Body":"page vuex\\examples\\todomvc\\store\\mutations.js,  method:removeTodo.\r\nwhen edit some one todoItem, clear the todoItem, then press keyboard enter.\r\nbecause execute @keyup.enter=\"doneEdit\" and @keyup.esc=\"cancelEdit\" (in page TodoItem.vue).\r\nso here will execute twice, so will delete two todoItem.\r\nso i suggest change here to .","Url":"https://github.com/vuejs/vuex/pull/1388","RelatedDescription":"Closed or merged PR \"fix bug: examples/todomvc\" (#1388)"},{"Id":"355413687","IsPullRequest":true,"CreatedAt":"2018-08-30T05:01:01","Actor":"leecade","Number":"1387","RawContent":null,"Title":"fix: confused namespace for get module","State":"closed","Body":"see #1386","Url":"https://github.com/vuejs/vuex/pull/1387","RelatedDescription":"Closed or merged PR \"fix: confused namespace for get module\" (#1387)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-10-11T05:30:46.9102212Z","RunDurationInMilliseconds":4316}