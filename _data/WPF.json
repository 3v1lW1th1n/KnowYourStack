{"Data":{"GitHub":{"Issues":[{"Id":"451132571","IsPullRequest":true,"CreatedAt":"2019-06-01T22:58:05","Actor":"rladuca","Number":"808","RawContent":null,"Title":"Add back ValueSerializerAttribute TypeForward to System.Xaml","State":"open","Body":"Fixes #807 ","Url":"https://github.com/dotnet/wpf/pull/808","RelatedDescription":"Open PR \"Add back ValueSerializerAttribute TypeForward to System.Xaml\" (#808)"},{"Id":"451131283","IsPullRequest":false,"CreatedAt":"2019-06-01T22:38:02","Actor":"rladuca","Number":"807","RawContent":null,"Title":"System.Xaml missing TypeForward for System.Windows.Markup.ValueSerializerAttribute","State":"open","Body":"The type forward for ValueSerializerAttribute is [here](https://github.com/dotnet/wpf/blob/master/src/Microsoft.DotNet.Wpf/src/System.Xaml/System/Windows/Markup/ValueSerializerAttribute.cs), but this file is excluded from [System.Xaml.csproj](https://github.com/dotnet/wpf/blob/master/src/Microsoft.DotNet.Wpf/src/System.Xaml/System.Xaml.csproj).  This is due to historical reasons during porting,  We were attempting to support some scenarios (netstandard 2.1) that would not have this type.\r\n\r\nThis is an ApiCompat break and should be fixed.","Url":"https://github.com/dotnet/wpf/issues/807","RelatedDescription":"Open issue \"System.Xaml missing TypeForward for System.Windows.Markup.ValueSerializerAttribute\" (#807)"},{"Id":"451124336","IsPullRequest":false,"CreatedAt":"2019-06-01T21:05:34","Actor":"lobster2012-user","Number":"806","RawContent":null,"Title":"EventSetter. Check of HandlerType","State":"open","Body":"Hi!\r\n(master) \r\n **Problem description:**\r\n\r\n```csharp\r\n//EventSetter.cs\r\nif (_handler.GetType() != _event.HandlerType)\r\n{\r\n                throw new ArgumentException(SR.Get(SRID.HandlerTypeIllegal));\r\n}\r\n\r\n```\r\nWhy is there a strict check?\r\nAnd if I want to set an action handler type ```Action<object, EventArgs>```?\r\nAnd there is such an opportunity (but not through styles)\r\n\r\n[old question](https://social.msdn.microsoft.com/Forums/en-US/7b4ce02d-bdf1-4b7c-97d4-b7526b1792b2/wpfeventsetterstrong-handler-type?forum=wpf)\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/806","RelatedDescription":"Open issue \"EventSetter. Check of HandlerType\" (#806)"},{"Id":"450784330","IsPullRequest":true,"CreatedAt":"2019-06-01T19:10:37","Actor":"dotnet-maestro[bot]","Number":"800","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190530.17\r\n- **Date Produced**: 5/30/2019 8:05 PM\r\n- **Commit**: b96c705081e340c52c677dbab664a8ef5c1c7b91\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview6.19280.17\r\n\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190531.3\r\n- **Date Produced**: 5/31/2019 1:12 PM\r\n- **Commit**: d925bb54b5e9c4086ac6f35d9bd754f1006bc46f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview6.19281.3\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/800","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#800)"},{"Id":"451078204","IsPullRequest":false,"CreatedAt":"2019-06-01T13:48:00","Actor":"eq7755","Number":"804","RawContent":null,"Title":"Cross Platform support","State":"closed","Body":"<!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\nIs there any plan to make WPF with cross platform? This is a very useful and promising feature, isn't it? Thanks for the WPF team of MS.","Url":"https://github.com/dotnet/wpf/issues/804","RelatedDescription":"Closed issue \"Cross Platform support\" (#804)"},{"Id":"451078604","IsPullRequest":true,"CreatedAt":"2019-06-01T12:06:43","Actor":"dotnet-maestro[bot]","Number":"805","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190531.5\r\n- **Date Produced**: 5/31/2019 10:53 PM\r\n- **Commit**: c901850aa1e175c124da771863dacc763743a520\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19281.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19281.5\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/805","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#805)"},{"Id":"450766745","IsPullRequest":true,"CreatedAt":"2019-06-01T12:05:55","Actor":"dotnet-maestro[bot]","Number":"799","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190530.2\r\n- **Date Produced**: 5/30/2019 5:22 PM\r\n- **Commit**: 7c50d548001a83a18449ad4dda370122ede5fbf6\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19280.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19280.2\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/799","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#799)"},{"Id":"451068329","IsPullRequest":false,"CreatedAt":"2019-06-01T09:57:54","Actor":"LokiMidgard","Number":"803","RawContent":null,"Title":"Support for RegisterPropertyChangedCallback","State":"open","Body":"UWP's DependencyObject has a [`RegisterPropertyChangedCallback`](https://docs.microsoft.com/de-de/uwp/api/windows.ui.xaml.dependencyobject.registerpropertychangedcallback?f1url=https%3A%2F%2Fmsdn.microsoft.com%2Fquery%2Fdev15.query%3FappId%3DDev15IDEF1%26l%3DDE-DE%26k%3Dk(Windows.UI.Xaml.DependencyObject.RegisterPropertyChangedCallback)%3Bk(TargetFrameworkMoniker-.NETCore%2CVersion%3Dv5.0)%3Bk(DevLang-csharp)%26rd%3Dtrue) that enables you to be notified when a DependencyProperty changes and can be applied to any DependencyProperty.\r\n\r\nI'm not aware of a way to achieve this in WPF without explicitly implementing events. Which adds even more boilerplate code the already very verbose DependencyProperty declaration. \r\n\r\nAnd if you are not owner of the class, it gets complicated.\r\nYou could inhere the object and override the metadata, or create a binding to a property that fires an event. \r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/803","RelatedDescription":"Open issue \"Support for RegisterPropertyChangedCallback\" (#803)"},{"Id":"450986123","IsPullRequest":true,"CreatedAt":"2019-05-31T21:21:22","Actor":"stevenbrix","Number":"802","RawContent":null,"Title":"Adding initial Helix support","State":"open","Body":"### Testing in Helix\r\nThis PR enables running our DRT tests on Helix. I'd recommend seeing the official Helix [readme](https://github.com/dotnet/arcade/blob/master/src/Microsoft.DotNet.Helix/Sdk/Readme.md) if you are interested in some of the general Helix concepts. I'll briefly outline what we are doing that is a bit unique:\r\n\r\n1. Helix has built-in support for running xUnit tests. Since we are not using xUnit, we have to manually setup our machines so that they work with QualityVault and STI. During the build, we create a payload directory that contains the infrastructure we need. A single project (in our case `DrtXaml`) is responsible for creating this directory (see instances of the MSBuild property `CreateTestPayload`).\r\n2. After the build is done, we utilize Arcade's `AfterSolutionBuild.targets` extension point to finish creating the rest of the payload if the `-test` parameter is passed to the build. Here we add the just built DRTs and if `-ci` was **not** passed into to the build, run the tests. \r\n3. Helix allows you to specify a `HelixCorrelationPayload` directory, where this directory gets deployed to the Helix machine, and is made available in your various helix commands with the `HELIX_CORRELATION_PAYLOAD` environment variable. We use the payload directory created described above.\r\n4. Helix and Azure Pipelines can report xUnit logs, so QualityVault was updated to produce an xUnit compatible log. We then copy that log to a known location for it to be picked up. This location can be in any subfolder of the `HelixWorkItem` working directory. \r\n\r\n## How we are running tests\r\n1. Currently, the `HelixQueues` that we selected are Windows.10.Amd64.Open;Windows.7.Amd64.Open;Windows.10.Amd64.ServerRS5.Open. Essentially, this translates to: \"Latest Windows 10\", \"Windows 7\", and \"Windows 10 RS5 Server\" addition. This enables tests to run on some of the most interesting and important SKUs, without overloading the Helix servers and/or making CI runs take an unnecessarily long time to run.\r\n2. In a similar fashion, we only run test passes for Release builds, mainly to save time and resources running duplicate tests in a near-identical environment.\r\n\r\nFixes #782 ","Url":"https://github.com/dotnet/wpf/pull/802","RelatedDescription":"Open PR \"Adding initial Helix support\" (#802)"},{"Id":"450966630","IsPullRequest":false,"CreatedAt":"2019-05-31T20:21:35","Actor":"rladuca","Number":"801","RawContent":null,"Title":"Remove ref assemblies for WPF extension assemblies","State":"open","Body":"Before preview 7, we need to ensure the extension assemblies are not generating ref assemblies.\r\n\r\nIn .NET Framework, these were never shipped as ref assemblies and shouldn't be included in the .NET Core set either.","Url":"https://github.com/dotnet/wpf/issues/801","RelatedDescription":"Open issue \"Remove ref assemblies for WPF extension assemblies\" (#801)"},{"Id":"450737757","IsPullRequest":true,"CreatedAt":"2019-05-31T10:55:30","Actor":"thomaslevesque","Number":"798","RawContent":null,"Title":"Define Value as the content property for Setter","State":"closed","Body":"Fixes #84 ","Url":"https://github.com/dotnet/wpf/pull/798","RelatedDescription":"Closed or merged PR \"Define Value as the content property for Setter\" (#798)"},{"Id":"450582337","IsPullRequest":true,"CreatedAt":"2019-05-31T02:21:00","Actor":"dotnet-maestro[bot]","Number":"797","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190530.01\r\n- **Date Produced**: 5/30/2019 4:29 PM\r\n- **Commit**: 63abc77da6d99470caa5bfa0465afe244105e595\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 3.0.0-preview6-27730-01\r\n\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-preview6.19279.8 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 4.6.0-preview6.19279.8 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-preview6.19279.8 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-preview6.19279.8 (parent: Microsoft.NETCore.App)\r\n- **System.DirectoryServices** -> 4.6.0-preview6.19279.8 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-preview6.19279.8 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-preview6.19279.8 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.MetadataLoadContext** -> 4.6.0-preview6.19279.8 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-preview6.19279.8 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-preview6.19279.8 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-preview6.19279.8 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-preview6.19279.8 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-preview6.19279.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-preview6.19279.8 (parent: Microsoft.NETCore.App)\r\n- **System.IO.Packaging** -> 4.6.0-preview6.19279.8 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILDAsm** -> 3.0.0-preview6.19280.1 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview6.19280.1 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-preview6.19280.1 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-preview6.19280.1 (parent: Microsoft.NETCore.App)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/797","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/core-setup\" (#797)"},{"Id":"450212741","IsPullRequest":true,"CreatedAt":"2019-05-30T22:53:28","Actor":"vatsan-madhavan","Number":"787","RawContent":null,"Title":"AppContext and *CompatibilityPreferences infrastructure","State":"closed","Body":"This PR brings up a functioning infrastructure for `AppContext` and `*CompatibilityPreferences` infrastructure. \r\n\r\n- `AppContext` based quirks would be set in `runtimeconfig.template.json`\r\n - I haven't tested to verify whether these support registry. \r\n- `*CompatibilityPreferences` would continue being set in `App.config`\r\n\r\nThe new defaults for various quirks are so: \r\n\r\n```JSON\r\n{\r\n  \"configProperties\": {\r\n    /*\r\n    // BuildTasksAppContextSwitches\r\n    \"Switch.System.Windows.Markup.DoNotUseSha256ForMarkupCompilerChecksumAlgorithm\": false,\r\n\r\n    // CoreAppContextSwitches\r\n    \"Switch.System.Windows.DoNotScaleForDpiChanges\": false,\r\n    \"Switch.System.Windows.Media.ImageSourceConverter.OverrideExceptionWithNullReferenceException\": false,\r\n    \"Switch.System.Windows.DoNotUsePresentationDpiCapabilityTier2OrGreater\": false,\r\n    \"Switch.System.Windows.Input.Stylus.DisableStylusAndTouchSupport\": false,\r\n    \"Switch.System.Windows.Input.Stylus.EnablePointerSupport\": false,\r\n    \"Switch.System.Windows.Diagnostics.DisableDiagnostics\": false,\r\n    \"Switch.System.Windows.Diagnostics.AllowChangesDuringVisualTreeChanged\": false,\r\n    \"Switch.System.Windows.Input.Stylus.DisableImplicitTouchKeyboardInvocation\": false,\r\n    \"Switch.System.Windows.Media.ShouldRenderEvenWhenNoDisplayDevicesAreAvailable\": false,\r\n    \"Switch.System.Windows.Media.ShouldNotRenderInNonInteractiveWindowStation\": false,\r\n    \"Switch.System.Windows.DoNotUsePresentationDpiCapabilityTier3OrGreater\": false, // Reserved for future use\r\n    \"Switch.System.Windows.AllowExternalProcessToBlockAccessToTemporaryFiles\": false,\r\n    \"Switch.System.Windows.EnableLegacyDangerousClipboardDeserializationMode\": false,\r\n\r\n    // FrameworkAppContextSwitches\r\n    \"Switch.System.Windows.Controls.Text.UseAdornerForTextboxSelectionRendering\": true,\r\n    \"Switch.MS.Internal.DoNotApplyLayoutRoundingToMarginsAndBorderThickness\": false,\r\n    \"Switch.System.Windows.Controls.Grid.StarDefinitionsCanExceedAvailableSpace\": false,\r\n    \"Switch.System.Windows.Controls.TabControl.SelectionPropertiesCanLagBehindSelectionChangedEvent\": false,\r\n    \"Switch.System.Windows.Data.DoNotUseFollowParentWhenBindingToADODataRelation\": false,\r\n    \"Switch.System.Windows.Data.Binding.IListIndexerHidesCustomIndexer\": false,\r\n    \"Switch.System.Windows.Baml2006.AppendLocalAssemblyVersionForSourceUri\": false,\r\n    \"Switch.System.Windows.Controls.KeyboardNavigationFromHyperlinkInItemsControlIsNotRelativeToFocusedElement\": false,\r\n    \"Switch.System.Windows.Automation.Peers.ItemAutomationPeerKeepsItsItemAlive\": false,\r\n\r\n    // BaseAppContextSwitches\r\n    \"Switch.MS.Internal.DoNotUseCulturePreservingDispatcherOperations\": false,\r\n    \"Switch.MS.Internal.UseSha1AsDefaultHashAlgorithmForDigitalSignatures\": false,\r\n    \"Switch.MS.Internal.DoNotInvokeInWeakEventTableShutdownListener\": false,\r\n    \"Switch.MS.Internal.EnableCleanupSchedulingImprovements\": false,\r\n    \"Switch.MS.Internal.EnableWeakEventMemoryImprovements\": false,\r\n\r\n    // AccessibilitySwitches\r\n    \"Switch.UseLegacyAccessibilityFeatures\": false,\r\n    \"Switch.UseLegacyAccessibilityFeatures.2\": false,\r\n    \"Switch.UseLegacyAccessibilityFeatures.3\": false,\r\n    \"Switch.UseLegacyToolTipDisplay\": false,\r\n    \"Switch.System.Windows.Controls.ItemsControlDoesNotSupportAutomation\": false\r\n  */\r\n  }\r\n}\r\n```\r\n\r\n```XML\r\n<configuration>\r\n  <appSettings>\r\n    <!-- Defined in CoreCompatibilityPreferences -->\r\n    <!-- \r\n    <add key=\"IsAltKeyRequiredInAccessKeyDefaultScope\" value=\"false\"/>\r\n    <add key=\"EnableMultiMonitorDisplayClipping\" value=\"null\"/>\r\n    <add key=\"IncludeAllInkInBoundingBox\" value=\"true\"/>\r\n    -->\r\n    \r\n    \r\n    <!-- Defined in BaseCompatibilityPreferences -->\r\n    <!-- \r\n    <add key=\"ReuseDispatcherSynchronizationContextInstance\" value=\"false\"/>\r\n    <add key=\"FlowDispatcherSynchronizationContextPriority\" value=\"true\"/>\r\n    <add key=\"InlineDispatcherSynchronizationContextSend\" value=\"true\"/>\r\n    <add key=\"HandleDispatcherRequestProcessingFailure\" value=\"Continue\"/>\r\n    <add key=\"MatchPackageSignatureMethodToPackagePartDigestMethod\" value=\"true\"/>\r\n    -->\r\n    \r\n    <!-- Defined in FrameworkCompatibilityPreferenes -->\r\n    <!-- \r\n    <add key=\"AreInactiveSelectionHighlightBrushKeysSupported\" value=\"true\"/>\r\n    <add key=\"KeepTextBoxDisplaySynchronizedWithTextProperty\" value=\"true\"/>\r\n    <add key=\"ShouldThrowOnCopyOrCutFailure\" value=\"false\"/>\r\n    <add key=\"HandleTwoWayBindingToPropertyWithNonPublicSetter\" value=\"Allow\"/>\r\n    <add key=\"UseSetWindowPosForTopmostWindows\" value=\"false\"/>\r\n    <add key=\"VSP45Compat\" value=\"false\"/>\r\n    -->\r\n  </appSettings>\r\n</configuration>\r\n```\r\n\r\nAlso see https://github.com/microsoft/WPF-Samples/pull/87","Url":"https://github.com/dotnet/wpf/pull/787","RelatedDescription":"Closed or merged PR \"AppContext and *CompatibilityPreferences infrastructure\" (#787)"},{"Id":"450508945","IsPullRequest":true,"CreatedAt":"2019-05-30T21:51:22","Actor":"ryalanms","Number":"796","RawContent":null,"Title":"Revert PresentationFramework to .NET Framework translations for DE","State":"closed","Body":"A previous loc check-in translated locked strings, only in DE.   I'm reviewing other loc updates to verify this didn't happen elsewhere.","Url":"https://github.com/dotnet/wpf/pull/796","RelatedDescription":"Closed or merged PR \"Revert PresentationFramework to .NET Framework translations for DE\" (#796)"},{"Id":"450033562","IsPullRequest":false,"CreatedAt":"2019-05-30T20:16:26","Actor":"rladuca","Number":"783","RawContent":null,"Title":"Extension assemblies are not building","State":"closed","Body":"The extension assemblies that were open sourced recently (see: #727 ) were not properly added to the solution file.  As such, they are not building.","Url":"https://github.com/dotnet/wpf/issues/783","RelatedDescription":"Closed issue \"Extension assemblies are not building\" (#783)"},{"Id":"450468249","IsPullRequest":true,"CreatedAt":"2019-05-30T20:15:31","Actor":"ryalanms","Number":"795","RawContent":null,"Title":"Add PresentationFramework extensions to WPF solution","State":"closed","Body":"Adds extensions to the WPF solution file, and includes a minor update to .editorconfig for .sln line endings.","Url":"https://github.com/dotnet/wpf/pull/795","RelatedDescription":"Closed or merged PR \"Add PresentationFramework extensions to WPF solution\" (#795)"},{"Id":"450451233","IsPullRequest":true,"CreatedAt":"2019-05-30T18:45:40","Actor":"rladuca","Number":"794","RawContent":null,"Title":"Remove PresentationCore-CommonResources and move composite fonts to PresentationCore","State":"open","Body":"fixes #793 ","Url":"https://github.com/dotnet/wpf/pull/794","RelatedDescription":"Open PR \"Remove PresentationCore-CommonResources and move composite fonts to PresentationCore\" (#794)"},{"Id":"450450220","IsPullRequest":false,"CreatedAt":"2019-05-30T18:43:15","Actor":"rladuca","Number":"793","RawContent":null,"Title":"Remove PresentationCore-CommonResources","State":"open","Body":"`PresentationCore-CommonResources` is currently used to house the composite font files as a resource due to an issue with getting them to be included when we were building `PresentationCore` as a mixed DLL from a C++/CLI object file and a C# netmodule.\r\n\r\nWe have since removed this (via creating `DirectWriteForwarder`) so the main reason for keeping the resource out of `PresentationCore` directly no longer exists.\r\n\r\nAs such, we should remove this DLL and move the composite font resources into `PresentationCore` directly.","Url":"https://github.com/dotnet/wpf/issues/793","RelatedDescription":"Open issue \"Remove PresentationCore-CommonResources\" (#793)"},{"Id":"450390020","IsPullRequest":false,"CreatedAt":"2019-05-30T16:21:50","Actor":"grubioe","Number":"792","RawContent":null,"Title":"[Accessibility] Narrator saying control type as header for ribbon tab","State":"open","Body":"Copied from VSO ID: 544458\r\n\r\nDoes the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n Narrator saying control type as header for ribbon tab\r\n\r\n **Minimal repro:**\r\n Steps to reproduce:\r\nCreate a ribbon in wpf and add a ribbon tab with some header like\r\n\r\n```\r\n<Ribbon>\r\n        <RibbonTab Header=\"Home\">            \r\n        </RibbonTab>\r\n</Ribbon>\r\n```\r\n\r\nFor above ribbon tab, when narrator focuses, it says its control type as header instead of tab (see attached screenshot).\r\n\r\n![home-header](https://user-images.githubusercontent.com/49078227/58647248-f86e8a80-82bb-11e9-9ac9-63c70796f619.PNG)\r\n\r\n**Initial Commentary from Team:**\r\nFor Ribbons, the header is what receives focus (RibbonTabs are by default not focusable) we attempted to reroute Automation focus to the RibbonTab so that it would get announced correctly, but this lead to strange behaviors when dealing with SelectionPattern.RemoveFromSelection. We may need to re-evaluate the way we expose Ribbon->RibbonTab->RibbonHeader to UIAutomation\r\n","Url":"https://github.com/dotnet/wpf/issues/792","RelatedDescription":"Open issue \"[Accessibility] Narrator saying control type as header for ribbon tab\" (#792)"},{"Id":"450387152","IsPullRequest":false,"CreatedAt":"2019-05-30T16:15:58","Actor":"grubioe","Number":"791","RawContent":null,"Title":"Accessibility: (combobox control) An element of the given type should not support the Scroll pattern.","State":"open","Body":"Copied from VSO ID: 691457\r\n\r\nDoes the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n\r\n **Problem description:**\r\nMAS-4.2.8: (combobox control) An element of the given type should not support the Scroll pattern.\r\n \r\n  **Minimal repro:**\r\n\r\nApplication: WPF Application project in C# with combo box control\r\n\r\nIssue Details\r\nAn element of the given type should not support the Scroll pattern.\r\n\r\nElement path: combo box \"test\"\r\n\r\nTo Reproduce and How to Fix guidance: Please open the attached Keros Test File (*.k4dtest) to reproduce the error in Keros for Desktop.\r\n\r\n[691457.zip](https://github.com/dotnet/wpf/files/3237825/691457.zip)\r\n\r\nThis accessibility issue was found using Keros for Desktop, a tool that helps debug and find accessibility issues earlier. Get more information & download this tool at https://aka.ms/K4D.\r\n\r\n![Screen](https://user-images.githubusercontent.com/49078227/58646909-42a33c00-82bb-11e9-85f6-65a9c4281c73.png)\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/791","RelatedDescription":"Open issue \"Accessibility: (combobox control) An element of the given type should not support the Scroll pattern.\" (#791)"},{"Id":"450384726","IsPullRequest":false,"CreatedAt":"2019-05-30T16:10:36","Actor":"grubioe","Number":"790","RawContent":null,"Title":"Narrator does not annouce HyperLink in reverse (Shift+Tab) on FlowDocumentScrollViewer","State":"open","Body":"Copied from VSO ID: 608596\r\n\r\nDoes the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n\r\nSimple WPF program attached to demonstrate the issue\r\n\r\n[Sample.zip](https://github.com/dotnet/wpf/files/3237805/Sample.zip)\r\n \r\n **Problem description:**\r\nNarrator does not annouce HyperLink in reverse (Shift+Tab) on FlowDocumentScrollViewer\r\n \r\n **Repro:**\r\n 1.Tab to the FlowDocument and Narrator will announce \"Checked out branch Ham, which is out of date. [Pull]() the latest changes to update.\",\r\n2. Tab.  Focus is now on the hyperlink and it correctly says \"Pull hyperlink\"\r\n3. Tab again (focus will be on the Textblock's hyperlink)\r\n4. Shift Tab.  Focus is now on the hyperlink but it says \"Checked out branch Ham, which is out of date. [Pull]() the latest changes to update.\"\r\n5. Shift Tab. Focus is now on the FlowDocument and it will announce \"Checked out branch Ham, which is out of date. [Pull]() the latest changes to update.\",\r\n\r\nStep 4 should announce the same as Step 2.  Going forward or backwards shouldn't change what narrator reads.\r\n\r\nI attached the program for easy replay, but here is the crux of the XAML.  Only changes from default WPF project are in the MainWindow.xaml file.\r\n\r\n    <FlowDocumentScrollViewer Grid.Column=\"1\" AutomationProperties.Name=\"Checked out branch Ham, which is out of date. [Pull]() the latest changes to update.\">\r\n            <FlowDocument>\r\n                <Paragraph>\r\n                    <Run>Checked out branch Ham, which is out of date</Run>\r\n                    <Hyperlink NavigateUri=\"http://www.msn.com\">Pull</Hyperlink>\r\n                    <Run>the latest changes to update.</Run>\r\n                </Paragraph>\r\n            </FlowDocument>               \r\n        </FlowDocumentScrollViewer>\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/790","RelatedDescription":"Open issue \"Narrator does not annouce HyperLink in reverse (Shift+Tab) on FlowDocumentScrollViewer\" (#790)"},{"Id":"450381238","IsPullRequest":false,"CreatedAt":"2019-05-30T16:02:38","Actor":"grubioe","Number":"789","RawContent":null,"Title":"Unexpected UIA TextRange navigation results when moving through hyperlink UI hosted in a RichTextBox","State":"open","Body":"Copied from VSO ID 607015\r\n\r\nDoes the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n\r\n\r\n **Problem description:**\r\nUnexpected UIA TextRange navigation results when moving through hyperlink UI hosted in a RichTextBox\r\n \r\n **Repro:**\r\n\r\nSteps to reproduce:\r\n\r\n1. Create a new WPF in VS, and add the following XAML:\r\n\r\n<RichTextBox VerticalAlignment=\"Center\" HorizontalAlignment=\"Center\" FontSize=\"14\">\r\n\r\n    <FlowDocument>\r\n\r\n        <Paragraph>First <Bold>Second</Bold> Third <Hyperlink>This is a link</Hyperlink> Final</Paragraph>\r\n\r\n    </FlowDocument>\r\n\r\n</RichTextBox>\r\n\r\n\r\n2. Run the app.\r\n3. Point the Keros For Desktop tool or Inspect SDK tool at the text in the app.\r\n4. Use the tool's text navigation functionality to move through the text by format.\r\n5. Move through the text as expected up to moving onto the hyperlink. \r\n6. Try to move beyond the hyperlink.\r\n\r\nResult: The tool stays at the hyperlink.\r\nExpected. The tool moves to the text following the hyperlink, just as it does with similar text in Wordpad or Word.\r\n\r\nThis bug was logged in response to the JAWS screen reader becoming unresponsive when interacting with the UI in the above app, and also at similar WPF UI in VS 2017.\r\n \r\n","Url":"https://github.com/dotnet/wpf/issues/789","RelatedDescription":"Open issue \"Unexpected UIA TextRange navigation results when moving through hyperlink UI hosted in a RichTextBox\" (#789)"},{"Id":"450274819","IsPullRequest":true,"CreatedAt":"2019-05-30T12:19:08","Actor":"dotnet-maestro[bot]","Number":"788","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190529.5\r\n- **Date Produced**: 5/30/2019 3:41 AM\r\n- **Commit**: fb62c6377a6bd163af2a7516260f064498942585\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19279.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19279.5\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/788","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#788)"},{"Id":"450212213","IsPullRequest":false,"CreatedAt":"2019-05-30T09:22:58","Actor":"BackDoorManUC","Number":"786","RawContent":null,"Title":"SharedSizeGroup and Visibility.Collapsed","State":"open","Body":"* .NET Core Version: 3.0\r\n* Windows version: 1803 (17763.437)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n\r\nhttps://stackoverflow.com/questions/9977344/grid-column-with-sharedsizegroup-does-not-reclaim-the-size-when-it-is-collapse\r\n\r\n> I have the following xaml:\r\n> \r\n> ```xaml\r\n> <Window x:Class=\"SharedSizeGroupBug.MainWindow\"\r\n>     xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\r\n>     xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\r\n>     Title=\"MainWindow\" Height=\"350\" Width=\"525\">\r\n> <Window.Resources>\r\n>     <BooleanToVisibilityConverter x:Key=\"BooleanToVisibilityConverter\" />\r\n> </Window.Resources>\r\n> \r\n> <StackPanel Grid.IsSharedSizeScope=\"True\">\r\n>     <ToggleButton IsChecked=\"False\" Name=\"TB\" Content=\"Toggle\" />\r\n> \r\n>     <Grid>\r\n>         <Grid.ColumnDefinitions>\r\n>             <ColumnDefinition Width=\"Auto\" SharedSizeGroup=\"DZG\" />\r\n>             <ColumnDefinition Width=\"Auto\" />\r\n>         </Grid.ColumnDefinitions>\r\n> \r\n>         <TextBlock Text=\"A1\" Width=\"100\" />\r\n>         <TextBlock Text=\"A2\" Grid.Column=\"1\" />\r\n>     </Grid>\r\n> \r\n>     <Grid Visibility=\"{Binding IsChecked, ElementName=TB, Converter={StaticResource BooleanToVisibilityConverter}}\">\r\n>         <Grid.ColumnDefinitions>\r\n>             <ColumnDefinition Width=\"Auto\" SharedSizeGroup=\"DZG\" />\r\n>             <ColumnDefinition Width=\"Auto\" />\r\n>         </Grid.ColumnDefinitions>\r\n> \r\n>         <TextBlock Text=\"B1\" Width=\"200\" />\r\n>         <TextBlock Text=\"B2\" Grid.Column=\"1\" />\r\n>     </Grid>\r\n> </StackPanel>\r\n> </Window>\r\n> ```\r\n> When you try this, the initial state the first column is 100 wide. When the button is pressed and the second grid is made visible, the first column is made 200 wide. However, when you press the button again, the column will still be 200 wide.\r\n\r\n \r\nApparently, it works with Visibility.Hidden but it doesn't with Visibility.Collapsed. Columns/rows don't get remeasured.","Url":"https://github.com/dotnet/wpf/issues/786","RelatedDescription":"Open issue \"SharedSizeGroup and Visibility.Collapsed\" (#786)"},{"Id":"450098693","IsPullRequest":false,"CreatedAt":"2019-05-30T05:02:47","Actor":"DaZiYuan","Number":"785","RawContent":null,"Title":" Screen.AllScreens return different size ","State":"closed","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n* Windows version: (`winver`)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: Yes/No\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n Screen.AllScreens return different size between framework and netcore ,system DPI 125%\r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n net core\r\n![image](https://user-images.githubusercontent.com/80653/58603529-b1849300-82c3-11e9-8afc-7dee8439d1fc.png)\r\n\r\n **Expected behavior:**\r\n framework 4.7.2\r\n![image](https://user-images.githubusercontent.com/80653/58603550-c9f4ad80-82c3-11e9-8143-64efed9d4c22.png)\r\n\r\n **Minimal repro:**\r\n https://github.com/giantapp-libraries/LiveWallpaperEngine/blob/master/LiveWallpaperEngine/LiveWallpaperEngineManager.cs\r\n\r\nLine:56\r\n","Url":"https://github.com/dotnet/wpf/issues/785","RelatedDescription":"Closed issue \" Screen.AllScreens return different size \" (#785)"},{"Id":"450078219","IsPullRequest":false,"CreatedAt":"2019-05-30T00:41:16","Actor":"grubioe","Number":"784","RawContent":null,"Title":"Watson/Telemetry for .NET Core ","State":"open","Body":"EPIC to Track Watson/Telemetry related items","Url":"https://github.com/dotnet/wpf/issues/784","RelatedDescription":"Open issue \"Watson/Telemetry for .NET Core \" (#784)"},{"Id":"450018276","IsPullRequest":false,"CreatedAt":"2019-05-29T21:00:11","Actor":"stevenbrix","Number":"782","RawContent":null,"Title":"Get CI builds running in Helix","State":"open","Body":"","Url":"https://github.com/dotnet/wpf/issues/782","RelatedDescription":"Open issue \"Get CI builds running in Helix\" (#782)"},{"Id":"449944413","IsPullRequest":false,"CreatedAt":"2019-05-29T19:31:10","Actor":"stevenbrix","Number":"781","RawContent":null,"Title":"Fix developer guide and copy script","State":"closed","Body":"some minor typos in those things\r\n","Url":"https://github.com/dotnet/wpf/issues/781","RelatedDescription":"Closed issue \"Fix developer guide and copy script\" (#781)"},{"Id":"449798825","IsPullRequest":true,"CreatedAt":"2019-05-29T13:19:42","Actor":"dotnet-maestro[bot]","Number":"780","RawContent":null,"Title":"[master] Update dependencies from dnceng/internal/dotnet-wpf-int","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://dev.azure.com/dnceng/internal/_git/dotnet-wpf-int\r\n- **Build**: 20190528.10\r\n- **Date Produced**: 5/28/2019 9:17 PM\r\n- **Commit**: 15c3713f381b6208032e951e577be263152c310e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Wpf.DncEng** -> 4.8.0-preview6.19278.10\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/780","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dnceng/internal/dotnet-wpf-int\" (#780)"},{"Id":"449769678","IsPullRequest":true,"CreatedAt":"2019-05-29T12:19:17","Actor":"dotnet-maestro[bot]","Number":"779","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190528.1\r\n- **Date Produced**: 5/28/2019 6:41 PM\r\n- **Commit**: 11f90a2a260422201895de58e57170131ab4efe7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19278.1\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19278.1\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/779","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#779)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-06-02T05:30:45.7798375Z","RunDurationInMilliseconds":548}