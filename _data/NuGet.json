{"Data":{"Blog":{"FeedItems":[{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null},{"Title":"Introducing signed package submissions to NuGet.org","PublishedOn":"2018-05-22T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In September 2017, we announced our plans to improve the security of the NuGet ecosystem by introducing the ability for package authors to sign packages. Today, we want to announce support for any...","Href":"https://devblogs.microsoft.com/nuget/introducing-signed-package-submissions/","RawContent":null},{"Title":"NuGet.org will only support MSA/AAD starting June 1st, 2018","PublishedOn":"2018-05-15T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We had previously announced the deprecation of NuGet.org&#8217;s home-grown authentication in favor of Microsoft accounts (MSA) that will allow us to add support for additional security systems such...","Href":"https://devblogs.microsoft.com/nuget/nuget-org-will-only-support-msa-aad-starting-june/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10033524553","Type":"IssuesEvent","CreatedAt":"2019-07-18T00:42:09","Actor":"karann-msft","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7355","RelatedDescription":"Opened issue \"Some repos don't show up under Github usage for some packages\" (#7355) at NuGet/NuGetGallery","RelatedBody":"https://twitter.com/bchavez/status/1151651956445700096?s=21"},{"Id":"10032740952","Type":"IssuesEvent","CreatedAt":"2019-07-17T21:36:22","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7354","RelatedDescription":"Opened issue \"[Queue-Back] Handle check validator messages in orchestrator\" (#7354) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10032195842","Type":"PullRequestEvent","CreatedAt":"2019-07-17T20:08:35","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7353","RelatedDescription":"Merged pull request \"Consider a 403 from search in the circuit breaker configuration\" (#7353) at NuGet/NuGetGallery","RelatedBody":"Stopped Azure web apps return HTTP 403. We should consider this case for the circuit breaker configuration in light of moving search to web app (for Azure Search).\r\n\r\nNote that we do not retry in 403 case as we do with HTTP 500+.\r\n\r\nProgress on https://github.com/NuGet/NuGetGallery/issues/7119."},{"Id":"10031670826","Type":"PullRequestEvent","CreatedAt":"2019-07-17T18:47:53","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7353","RelatedDescription":"Opened pull request \"Consider a 403 from search in the circuit breaker configuration\" (#7353) at NuGet/NuGetGallery","RelatedBody":"Stopped Azure web apps return HTTP 403. We should consider this case for the circuit breaker configuration in light of moving search to web app (for Azure Search)."},{"Id":"10031667387","Type":"IssuesEvent","CreatedAt":"2019-07-17T18:47:24","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7352","RelatedDescription":"Opened issue \"Consolidate catalog SDKs\" (#7352) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\nThere are several catalog SDKs in our code base:\r\n\r\n1. https://github.com/NuGet/Samples/tree/master/CatalogReaderExample/NuGet.Protocol.Catalog\r\n  * This is what our docs refer to, but this SDK is outdated\r\n2.  https://github.com/NuGet/NuGet.Services.Metadata/tree/master/src/NuGet.Protocol.Catalog\r\n  * This is an updated copy of the first SDK, and is used by Azure Search \r\n3. https://github.com/NuGet/NuGet.Services.Metadata/tree/master/src/Catalog\r\n  * This is an old SDK that is used by most of nuget.org's jobs.\r\n\r\n### Describe the solution you'd like\r\nWe should consolidate these catalog SDKs into a single package that's published to nuget.org. Our documentation should be updated to point to this new SDK\r\n\r\n### Additional context\r\nN/A"},{"Id":"10031517328","Type":"PullRequestEvent","CreatedAt":"2019-07-17T18:25:30","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7349","RelatedDescription":"Merged pull request \"Update jQuery\" (#7349) at NuGet/NuGetGallery","RelatedBody":"Taking the update to jQuery 3.x\r\n\r\nMitigates an XSS attack.\r\n\r\nRemoved reference to removed apis.\r\nUsed https://github.com/jquery/jquery-migrate/blob/master/warnings.md#jqmigrate-jqueryfndelegate-is-deprecated for warning and https://jquery.com/upgrade-guide/3.0/ for upgrade assistance.\r\n\r\nDid not remove use of deprecated apis."},{"Id":"10025421446","Type":"IssuesEvent","CreatedAt":"2019-07-17T02:11:02","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7351","RelatedDescription":"Opened issue \"[Azure Search] Search queries with mismatched quotes cause 500\" (#7351) at NuGet/NuGetGallery","RelatedBody":"`Tags:\"\"Bing\"`\r\n`Tags:\"\"windows\"`\r\n\r\nThese throw an exception.\r\n\r\n`\r\nFailed to parse query string at line 1, column 7. See https://aka.ms/azure-search-full-query for supported syntax.\r\n`\r\n\r\n\r\n"},{"Id":"10025140211","Type":"PullRequestEvent","CreatedAt":"2019-07-17T00:49:19","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7350","RelatedDescription":"Merged pull request \"Pull lodash up so we can use the latest.\" (#7350) at NuGet/NuGetGallery","RelatedBody":"Lifts our lodash dependency so we can reference the latest security fixes."},{"Id":"10025076591","Type":"PullRequestEvent","CreatedAt":"2019-07-17T00:30:56","Actor":"ryuyu","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7350","RelatedDescription":"Opened pull request \"Pull lodash up so we can use the latest.\" (#7350) at NuGet/NuGetGallery","RelatedBody":"Lifts our lodash dependency so we can reference the latest security fixes."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10034401771","Type":"IssuesEvent","CreatedAt":"2019-07-18T04:54:14","Actor":"davkean","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8343","RelatedDescription":"Opened issue \"NuGet.VisualStudio has dependencies on unofficial Microsoft packages\" (#8343) at NuGet/Home","RelatedBody":"This package: https://www.nuget.org/packages/NuGet.VisualStudio/5.1.0 has a dependency on this package https://www.nuget.org/packages/VSSDK.TemplateWizardInterface/ and a bunch of other non-Microsoft provided packages.\r\n\r\nThis indirectly causes http://github.com/dotnet/project-system to have a dependency on these packages. Please remove this dependency, it is causing us to have duplicate references/double-writes to the following assemblies:\r\n\r\n![image](https://user-images.githubusercontent.com/1103906/61429998-c6001600-a96b-11e9-87db-6dc69345f280.png)\r\n\r\nThe assemblies with the vssdk prefix are not Microsoft-provided packages.\r\n"},{"Id":"10032866870","Type":"IssuesEvent","CreatedAt":"2019-07-17T22:00:05","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8260","RelatedDescription":"Closed issue \"Locked-mode restore fails with sha512 errors & installs new packages when a project's RuntimeIdentifier is changed\" (#8260) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\ndotnet.exe --version: Both 3.0.100-preview5-011568 and 2.2.204\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n### Automated repro\r\nI've created a self-contained automated repro. You can run it by downloading \r\n[repro_runtimeIdLockFile.zip](https://github.com/NuGet/Home/files/3322730/repro_runtimeIdLockFile.zip) and running repro.bat\r\n\r\n### General behavior:\r\n1. Create a csproj targeting runtime identifier A\r\n2. `dotnet restore --use-locked-file`\r\n3. Change the runtime identifier to B\r\n4. `dotnet restore --locked-mode`\r\n\r\n### Expected behavior\r\n1. The second restore should fail with ` error NU1004: The packages lock file is inconsistent with the project dependencies so restore can't be run in locked mode. Please disable RestoreLockedMode MSBuild property or pass explicit --force-evaluate flag to run restore to update the lock file.`\r\n2. The second restore should **not** install any packages (it's in locked mode)\r\n\r\n### Actual behavior\r\n1. The second restore fails with `error NU1403: The package runtime.osx-x64.Microsoft.NETCore.App.2.1.10 sha512 validation failed. The package is different than the last restore.`\r\n2. The second restore installs OSX runtime packages"},{"Id":"10031624358","Type":"IssuesEvent","CreatedAt":"2019-07-17T18:41:12","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8342","RelatedDescription":"Opened issue \"Add automation for inserting into Core-SDK\" (#8342) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nOur Release Pipeline should have a new step to insert into the new [.NET Core-SDK Repo](https://github.com/dotnet/core-sdk)"},{"Id":"10031229734","Type":"IssuesEvent","CreatedAt":"2019-07-17T17:42:36","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8339","RelatedDescription":"Closed issue \"The PM UI should not be refreshed if the UI is not visible\" (#8339) at NuGet/Home","RelatedBody":"It's a waste of cycles, as the reload would happen happen anyways, when the control is loaded (the loaded event).\r\n\r\nRelated: \r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.windows.frameworkelement.loaded?view=netframework-4.8\r\nhttps://blogs.msdn.microsoft.com/mikehillberg/2006/09/19/the-loaded-event-and-the-initialized-event/\r\n\r\n//cc @dtivel "},{"Id":"10028844371","Type":"PullRequestEvent","CreatedAt":"2019-07-17T12:41:48","Actor":"absgomz66","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/pull/8341","RelatedDescription":"Opened pull request \"Alpanov/restore manager spec\" (#8341) at NuGet/Home","RelatedBody":"restoration program"},{"Id":"10028205419","Type":"IssuesEvent","CreatedAt":"2019-07-17T11:03:57","Actor":"ganesanviji","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8340","RelatedDescription":"Opened issue \"Binding redirect not added when update the NuGet packages\" (#8340) at NuGet/Home","RelatedBody":"Hi  \r\n\r\nI have tried to update the NuGet packages in my ASP.NET MVC Project. NuGet packages updated to the latest assembly, but the bonding redirect entries is not added in the web config file. \r\n\r\nReplication:\r\n1. Create the ASP.NET MVC application\r\n2. Update the NuGet packages using NuGet update command\r\n3. Check the web config entries and the binding redirect is not updated in the web config file \r\n\r\n![image](https://user-images.githubusercontent.com/8706341/61370682-a5bf5100-a8b0-11e9-8b25-27f274681f46.png)\r\n\r\n\r\nCould you please suggest the solution on this?\r\n\r\nThanks\r\n\r\nGanesan R.\r\n"},{"Id":"10025339724","Type":"IssuesEvent","CreatedAt":"2019-07-17T01:48:16","Actor":"bender2k14","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8327","RelatedDescription":"Closed issue \"Used -DependencyVersion Highest but non-latest version installed\" (#8327) at NuGet/Home","RelatedBody":"I am confused about the behavior of `Install-Package` when executed from Visual Studio's Package Manager Console.  I am using `-DependencyVersion Highest` but a less-than-highest version is being installed, and I don't understand why.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used: Package Manager Console Host Version 5.1.0.6013\r\nNuGet version: 3.5.0.1938\r\nVS version: Visual Studio Enterprise 2019 version 16.1.5\r\nOS version: Windows 10 v1803 (17134.885)\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Observe that the [NuGet package of `Serilog.AspNetCore`](https://www.nuget.org/packages/Serilog.AspNetCore/2.1.1) depends on `Microsoft.Extensions.Logging (>= 2.0.0)`.\r\n\r\n2. Observe that the latest release (i.e., non-preview) version of [`Microsoft.Extensions.Logging`](https://www.nuget.org/packages/Microsoft.Extensions.Logging/) (as of this writing) is 2.2.0.\r\n\r\n3. In the Package Manager Console of Visual Studio, run `Install-Package Serilog.AspNetCore -DependencyVersion Highest`.\r\n\r\n4.  Observe that version 2.0.0 of `Microsoft.Extensions.Logging` was installed (also see logs below).\r\n\r\n## Expected behavior\r\n\r\nI expected version 2.2.0 of `Microsoft.Extensions.Logging` to be installed since I used `-DependencyVersion Highest`.\r\n\r\nSomething I wonder is if there are additional implicit constraints that caused 2.0.0 to be installed instead of 2.2.0.  That would explain this behavior, but then I want to know how to make those implicit constraints explicit.\r\n\r\n## Other suggested things\r\n\r\n### (Non-Verbose) Logs\r\n```\r\nPM> Install-Package Serilog.AspNetCore -DependencyVersion Highest\r\nRestoring packages for C:\\Users\\twilliams\\Documents\\Visual Studio 2017\\Projects\\Temp\\Temp\\Temp.csproj...\r\nInstalling NuGet package Serilog.AspNetCore 2.1.1.\r\nCommitting restore...\r\nWriting assets file to disk. Path: C:\\Users\\twilliams\\Documents\\Visual Studio 2017\\Projects\\Temp\\Temp\\obj\\project.assets.json\r\nRestore completed in 212.54 ms for C:\\Users\\twilliams\\Documents\\Visual Studio 2017\\Projects\\Temp\\Temp\\Temp.csproj.\r\nSuccessfully installed 'Microsoft.AspNetCore.Hosting.Abstractions 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.AspNetCore.Hosting.Server.Abstractions 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.AspNetCore.Http.Abstractions 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.AspNetCore.Http.Features 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.Extensions.Configuration.Abstractions 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.Extensions.DependencyInjection 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.Extensions.DependencyInjection.Abstractions 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.Extensions.FileProviders.Abstractions 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.Extensions.Hosting.Abstractions 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.Extensions.Logging 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.Extensions.Logging.Abstractions 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.Extensions.Options 2.0.0' to Temp\r\nSuccessfully installed 'Microsoft.Extensions.Primitives 2.0.0' to Temp\r\nSuccessfully installed 'Serilog 2.5.0' to Temp\r\nSuccessfully installed 'Serilog.AspNetCore 2.1.1' to Temp\r\nSuccessfully installed 'Serilog.Extensions.Logging 2.0.0' to Temp\r\nSuccessfully installed 'System.Runtime.CompilerServices.Unsafe 4.4.0' to Temp\r\nSuccessfully installed 'System.Text.Encodings.Web 4.4.0' to Temp\r\nExecuting nuget actions took 622.13 ms\r\nTime Elapsed: 00:00:01.3739645\r\n```\r\n\r\n### Sample Project\r\n\r\nHere is a zip of the solution I used to create the above logs.\r\n\r\n[Temp.zip](https://github.com/NuGet/Home/files/3387928/Temp.zip)\r\n"},{"Id":"10024597063","Type":"IssuesEvent","CreatedAt":"2019-07-16T22:26:46","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8339","RelatedDescription":"Opened issue \"The PM UI should not be refreshed if the UI is not visible\" (#8339) at NuGet/Home","RelatedBody":"It's a waste of cycles, as the reload would happen happen anyways, when the control is loaded (the loaded event).\r\n\r\nRelated: \r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.windows.frameworkelement.loaded?view=netframework-4.8\r\nhttps://blogs.msdn.microsoft.com/mikehillberg/2006/09/19/the-loaded-event-and-the-initialized-event/\r\n\r\n//cc @dtivel "},{"Id":"10024424679","Type":"IssuesEvent","CreatedAt":"2019-07-16T21:51:20","Actor":"cristinamanum","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8338","RelatedDescription":"Opened issue \"Restore with RestoreLockedMode  and no lock file should error.\" (#8338) at NuGet/Home","RelatedBody":"\r\n## Details about Problem\r\n\r\nThe restore with RestoreLockedMode  = true and no lock file does not work or error but a new lock file is created. \r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a project with RestoreLockedMode = true and delete the lock file if present.\r\n\r\n2. Build/restore. \r\n\r\nResult: No error and the lock file is created. \r\n\r\n\r\n\r\n"},{"Id":"10022929053","Type":"IssuesEvent","CreatedAt":"2019-07-16T17:55:16","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8302","RelatedDescription":"Closed issue \"Nuget restore on VS solution open throws exceptions\" (#8302) at NuGet/Home","RelatedBody":"OS version: Win 10 Enterprise (1709) 16299.1217\r\nVisual Studio 2017 15.9.13\r\n\r\nWe recently changed our projects to the sdk-style format (excluding 3 Winforms projects). Since the change, Nuget restore throws several exceptions when opening the solution.\r\n(I understand that Nuget restore is called automatically when the solution opens if you have sdk-style projects)\r\n\r\nError occurred while restoring NuGet packages: System.InvalidOperationException: The operation failed as details for project XYZZY  could not be loaded.\r\n   at NuGet.PackageManagement.VisualStudio.NetCorePackageReferenceProject.GetPackageSpecsAsync(DependencyGraphCacheContext context)\r\n   at NuGet.PackageManagement.DependencyGraphRestoreUtility.<GetSolutionRestoreSpec>d__6.MoveNext()\r\n\r\nManual restore (via the solution context menu) is disabled for 60-90 seconds while this happens, but after that, manual restore is very fast (everything is up to date).\r\nIf I close and open the solution, it happens again, despite the fact that nothing has changed.\r\n\r\nWe have 150 projects in our solution. The nuget exception always occurs on project XYZZY for me (though a colleague sees different projects). This project is a very simple one, with 1 nuget dependency (that every project has) and 1 project dependency.\r\n"},{"Id":"10020813100","Type":"IssuesEvent","CreatedAt":"2019-07-16T13:26:21","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8337","RelatedDescription":"Closed issue \"Tests:  tests not cleaning up\" (#8337) at NuGet/Home","RelatedBody":"Some package signing-related tests open handles on files but do not close them properly. Thus, these tests fail to clean up after themselves."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1124053944269983745","CreatedAt":"2019-05-02T20:51:58+00:00","UserScreenname":"nuget","Text":"https://t.co/F9kiKfvqkS is currently degraded and some pages might take too long to load. We are investigating the… https://t.co/j3saBGKARZ","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":2,"RawContent":null},{"Id":"1121348019914334210","CreatedAt":"2019-04-25T09:39:36+00:00","UserScreenname":"nuget","Text":"Thanks for your contribution. https://t.co/RDrP9LnHU3","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":26,"FavoriteCount":3,"RawContent":null},{"Id":"1116042504854335488","CreatedAt":"2019-04-10T18:17:22+00:00","UserScreenname":"nuget","Text":"We have just published the NuGet Roadmap for Spring 2019. Check it out now! \nhttps://t.co/gt7qR0S3wV","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":24,"FavoriteCount":18,"RawContent":null},{"Id":"1115380341353537538","CreatedAt":"2019-04-08T22:26:10+00:00","UserScreenname":"nuget","Text":"Alert 🚨: Package publishing to @NuGet.org is taking more time than expected. The team is currently investigating th… https://t.co/EuaZ7gBehM","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":1,"FavoriteCount":6,"RawContent":null}]}},"RunOn":"2019-07-18T05:30:44.051445Z","RunDurationInMilliseconds":1982}