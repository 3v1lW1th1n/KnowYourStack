{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin.Forms 3.5: A Little Bindable Love","PublishedOn":"2019-01-11T18:06:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post contributed by Andrei Nitescu, a mobile developer since 2013 and frequent contributor to Xamarin.Forms. He shares about his experiences with other developers on his blog, and...","Href":"https://blog.xamarin.com/xamarin-forms-3-5-a-little-bindable-love/","RawContent":null},{"Title":"Hackathon Superweapon: F# and Fabulous","PublishedOn":"2019-01-10T20:27:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Recently, I participated in Hack for the Sea, a weekend devoted to applying tech to marine conservation. One of our local challenges was a “cross-platform mobile app for reporting marine debris.” A...","Href":"https://blog.xamarin.com/hackathon-superweapon-f-and-fabulous/","RawContent":null},{"Title":"Xamarin and .NET Community Events in January","PublishedOn":"2019-01-02T19:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s a new year with tons of new and awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page....","Href":"https://blog.xamarin.com/xamarin-and-net-community-events-in-january/","RawContent":null},{"Title":"Accessing Native Features the Cross-Platform Way with Xamarin.Essentials","PublishedOn":"2018-12-19T22:46:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Every mobile application requires access to native functionality. When developing native mobile apps with Xamarin, developers are able to integrate deeply into iOS and Android since Xamarin exposes...","Href":"https://blog.xamarin.com/accessing-native-features-xamarin-essentials/","RawContent":null},{"Title":"November 2018 Xamarin and Azure Office Hours Recap","PublishedOn":"2018-12-14T21:08:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"I ❤️ every single developer. And I want to hear your stories. I want to hear about your successes, your &#8220;not-so-much&#8221; successes, and any questions or concerns you may have about our...","Href":"https://blog.xamarin.com/office-hours-november-2018-xamarin-azure/","RawContent":null},{"Title":"Xamarin.Forms 4.0 Feature Preview: An Entirely New Point of (Collection)View","PublishedOn":"2018-12-07T19:00:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of the upcoming Xamarin.Forms 4.0 release, we are implementing the all new CollectionView control. The CollectionView is intended to be a successor to the ListView, improving upon its design...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-feature-preview-an-entirely-new-point-of-collectionview/","RawContent":null},{"Title":"The Future of Mobile Development: Xamarin.Forms 4.0 Preview","PublishedOn":"2018-12-05T19:59:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Yesterday at Microsoft Connect(); 2018 we announced our plans for Xamarin.Forms 4.0 and shared a public preview. Let&#8217;s now take a deeper look at the big changes, starting with Xamarin.Forms...","Href":"https://blog.xamarin.com/xamarin-forms-4-0-preview/","RawContent":null},{"Title":"Connect(); 2018 Xamarin Announcements","PublishedOn":"2018-12-04T16:21:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, at Microsoft Connect(); 2018, we have several exciting announcements about brand new capabilities and foundational improvements in the Xamarin platform driven by your generous feedback....","Href":"https://blog.xamarin.com/connect-2018-xamarin-announcements/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in December","PublishedOn":"2018-12-02T20:46:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-developer-events-in-december/","RawContent":null},{"Title":"Multi-targeting with Android Support Library v28","PublishedOn":"2018-11-28T18:09:29+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting with Xamarin’s Android Support Library version 28, we are introducing multi-targeting. This includes assemblies for older support library versions when your application&#8217;s...","Href":"https://blog.xamarin.com/multi-targeting-with-android-support-library-v28/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8887193342","Type":"IssuesEvent","CreatedAt":"2019-01-15T04:22:13","Actor":"parmendrahsc","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2618","RelatedDescription":"Opened issue \"MvvmCross: Getting error- Error\tCS0182\tAn attribute argument must be a constant expression, typeof expression or array creation expression of an attribute parameter type\" (#2618) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  Create a application with mvvmcross \r\n2.  create a android library project and put some vm and view on library project\r\n3.  Getting error message on fragment line:  [MvxFragmentPresentation(typeof(HomeActivityViewModel), Resource.Id.content_home, true)]\r\n4. Unable to get \"content_home\" and showing error message.\r\n5. when I go to defination of 'content_home' it shwoing property type is 'Static'  public static int content_home = 2130837507; but Its need const type.\r\n6. How to use static value on this or can I can static to const.\r\n### Expected Behavior\r\nIt should run without error.\r\n### Actual Behavior\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS0182\tAn attribute argument must be a constant expression, typeof expression or array creation expression of an attribute parameter type\tAb.MyScan.Core.Droid\tC:\\Users\\e01699\\Desktop\\Framework\\Ab.MyScan\\Ab.MyScan\\Ab.MyScan.Core.Droid\\Views\\Home\\HomeFragment.cs\t15\tActive\r\n\r\n### Version Information\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.9.4\r\nVisualStudio.15.Release/15.9.4+28307.222\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\nXamarin   4.12.3.77 (d15-9@e3f40b477)\r\nXamarin Designer   4.16.13 (45a16efd4)\r\nXamarin Templates   1.1.128 (6f5ebb2)\r\nXamarin.Android SDK   9.1.4.2 (HEAD/8255f42fc)\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.12 (65ec520)"},{"Id":"8887133401","Type":"PullRequestEvent","CreatedAt":"2019-01-15T04:00:25","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2617","RelatedDescription":"Opened pull request \"[libzip] remove CopyToOutputDirectory\" (#2617) at xamarin/xamarin-android","RelatedBody":"Downstream in monodroid, we are getting a build failure such as:\r\n\r\n    \"/Users/builder/jenkins/workspace/monodroid-pr/monodroid/tools/msbuild/Xamarin.Android.Build.Tasks.sln\" (default target) (1) ->\r\n    \"/Users/builder/jenkins/workspace/monodroid-pr/monodroid/tools/msbuild/Xamarin.Android.Build.Debugging.Tasks.csproj\" (default target) (6) ->\r\n    (_CopyOutOfDateSourceItemsToOutputDirectoryAlways target) ->\r\n    /Library/Frameworks/Mono.framework/Versions/5.18.0/lib/mono/msbuild/15.0/bin/Microsoft.Common.CurrentVersion.targets(4584,5): error MSB3027: Could not copy \"/Users/builder/jenkins/workspace/monodroid-pr/monodroid/external/xamarin-android/bin/Release/lib/xamarin.android/xbuild/Xamarin/Android/libzip.5.0.dylib\" to \"/Users/builder/jenkins/workspace/monodroid-pr/monodroid/out/lib/xamarin.android/xbuild/Xamarin/Android/libzip.5.0.dylib\". Exceeded retry count of 10. Failed.  [/Users/builder/jenkins/workspace/monodroid-pr/monodroid/tools/msbuild/Xamarin.Android.Build.Debugging.Tasks.csproj]\r\n    /Library/Frameworks/Mono.framework/Versions/5.18.0/lib/mono/msbuild/15.0/bin/Microsoft.Common.CurrentVersion.targets(4584,5): error MSB3021: Unable to copy file \"/Users/builder/jenkins/workspace/monodroid-pr/monodroid/external/xamarin-android/bin/Release/lib/xamarin.android/xbuild/Xamarin/Android/libzip.5.0.dylib\" to \"/Users/builder/jenkins/workspace/monodroid-pr/monodroid/out/lib/xamarin.android/xbuild/Xamarin/Android/libzip.5.0.dylib\". Sharing violation on path /Users/builder/jenkins/workspace/monodroid-pr/monodroid/external/xamarin-android/bin/Release/lib/xamarin.android/xbuild/Xamarin/Android/libzip.5.0.dylib\" or \"/Users/builder/jenkins/workspace/monodroid-pr/monodroid/out/lib/xamarin.android/xbuild/Xamarin/Android/libzip.5.0.dylib [/Users/builder/jenkins/workspace/monodroid-pr/monodroid/tools/msbuild/Xamarin.Android.Build.Debugging.Tasks.csproj]\r\n\r\n        27 Warning(s)\r\n        2 Error(s)\r\n\r\nOr TLDR:\r\n\r\n    Sharing violation on path /Users/builder/jenkins/workspace/monodroid-pr/monodroid/external/xamarin-android/bin/Release/lib/xamarin.android/xbuild/Xamarin/Android/libzip.5.0.dylib\"\r\n\r\nReviewing `libzip.targets`, we are setting\r\n`%(CopyToOutputDirectory)=Always`, but then still are manually copying\r\nthe file:\r\n\r\n    <Content Include=\"@(_LibZipTarget->'$(_LibZipOutputPath)%(OutputLibrary)')\">\r\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\r\n    </Content>\r\n    ....\r\n    <Copy\r\n        SourceFiles=\"@(_LibZipTarget->'$(IntermediateOutputPath)\\%(Identity)\\%(OutputLibraryPath)')\"\r\n        DestinationFiles=\"@(_LibZipTarget->'$(_LibZipOutputPath)%(OutputLibrary)')\"\r\n    />\r\n\r\nI ran `Build`, `Build`, and `Rebuild` on this project, and the\r\n`Inputs` and `Outputs` appear to be working correctly. We just have a\r\nspot where having various `<ProjectReference/>` to `libzip.csproj`\r\nseems to cause the file sharing issue.\r\n\r\nRemoving the `%(CopyToOutputDirectory)` item metadata fixes the file\r\nsharing violation locally. This seems like the simplest fix."},{"Id":"8883501816","Type":"IssuesEvent","CreatedAt":"2019-01-14T15:50:18","Actor":"manuelelucchi","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2616","RelatedDescription":"Opened issue \"Problem with Java interface binding\" (#2616) at xamarin/xamarin-android","RelatedBody":"Hi, i'm binding the Nordicsemi DFU Library (https://github.com/NordicSemiconductor/Android-DFU-Library/) and there's this strange compilation error. This happens when i link the binding to the final app but not when i do the same to a test app. The error is thrown by 2 interfaces that i don't directly use but some of the classes i uses do. I already set the content to EmbeddedJar (i saw that set it to InputJar could cause a similar problem) and now i have no more ideas. Would anyone help me?\r\n\r\nRegards, \r\nManuele\r\n\r\n![image](https://user-images.githubusercontent.com/17146198/51123224-f5e32b00-181b-11e9-874b-475587e8fc1b.png)\r\n"},{"Id":"8883108228","Type":"PullRequestEvent","CreatedAt":"2019-01-14T14:57:09","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2606","RelatedDescription":"Merged pull request \"[C++-ification] Introducing EmbeddedAssemblies class\" (#2606) at xamarin/xamarin-android","RelatedBody":"   * removed a number of `MONO_API` functions, they don't appear to be used anywhere (were supposed to be used by Mono Unreal Engine, but we're not sure if that's the case). We can restore them if needed\r\n  * Simplified a lot of code\r\n  * Removed `printf` family calls"},{"Id":"8882813661","Type":"IssuesEvent","CreatedAt":"2019-01-14T14:14:40","Actor":"parmendrahsc","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2615","RelatedDescription":"Opened issue \"MVVMCross: Unable to load view from one android project to another project on same solution\" (#2615) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  Create one Android project with first Activity and view model\r\n2.  Create another project with second Activity and view model\r\n3.  Navigate from first VM to second VM\r\n4. Second Activity having two fragment 1 and fragment 2 and each have separate VM.\r\n5. When navigating on second view load first fragment. \r\n\r\n### Expected Behavior\r\nSecond activity should loaded with fragment 1\r\n\r\n### Actual Behavior\r\n\r\nGetting exception on navigating to second activity \"unable to locate view for viewmodel\"\r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.9.4\r\nVisualStudio.15.Release/15.9.4+28307.222\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n 4.12.3.77 (d15-9@e3f40b477)\r\nXamarin Designer   4.16.13 (45a16efd4)\r\nXamarin Templates   1.1.128 (6f5ebb2)\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.12 (65ec520)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n"},{"Id":"8882762003","Type":"IssuesEvent","CreatedAt":"2019-01-14T14:06:42","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2614","RelatedDescription":"Opened issue \"SourceLink support\" (#2614) at xamarin/xamarin-android","RelatedBody":"`csc /sourcelink` is a way for `.pdb` files to contain *url* references to source code, not local filesystem paths.\r\n\r\nMeaning `Mono.Android.pdb` could contain links into this git repo, instead of (meaningless) filesystem paths on the machine that build Xamarin.Android.\r\n\r\nSupporting SourceLink should make the debugging experience nicer.\r\n\r\nSee also:\r\n\r\n  * SourceLink specification: https://github.com/dotnet/sourcelink\r\n  * Mono PR which adds SourceLink support: https://github.com/mono/mono/pull/12403\r\n"},{"Id":"8878670728","Type":"IssuesEvent","CreatedAt":"2019-01-13T15:16:50","Actor":"shaikhawais","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2613","RelatedDescription":"Opened issue \"Abstract class not being converted properly in android Native binding(.aar)\" (#2613) at xamarin/xamarin-android","RelatedBody":"I have come across a problem while binding .AAR library in Xamarin.Android.\r\nThere is an abstract class in library which implements an interface.\r\nNow the problem is, it seems it is not mandatory in java to implement members of interface in abstract class because it will be implemented in the class which implements that abstract class. Whereas in c#,it is mandatory for abstract class to implement members of an interface either abstractly or explicitly.\r\n\r\n### Steps to Reproduce\r\n\r\n```\r\npublic interface MyInterface \r\n{\r\nvoid myMethod();\r\n}\r\n```\r\nJava - \r\n```\r\npublic abstract class MyAbstractClass implements MyInterface\r\n{\r\n//not necessary to implement 'MyInterface' members here..\r\n}\r\n```\r\n\r\nC# - \r\n```\r\npublic abstract class MyAbstractClass implements MyInterface\r\n{\r\n//Necessary to implement 'MyInterface' members here..\r\n//public abstract void myMethod(); OR public void myMethod(){ };\r\n}\r\n```\r\n\r\n### Expected Behavior\r\nIt should abstractly implement the methods of interface in abstract class while creating bindings in c#\r\n\r\n### Actual Behavior\r\nIt gives error that MyAbstractClass does not implement interface members\r\n\r\n\r\n**Please look into this and reply I have been stuck in it for days**\r\n\r\n=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.7.1 (build 15)\r\nInstallation UUID: a43d8067-d536-4a8d-a3fd-e10613bb1d9c\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 516000221\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.16.0.221 (2018-06/b63e5378e38) (64-bit)\r\n\tPackage version: 516000221\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.7.0.5148\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.16.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\n'/Applications/Xamarin Profiler.app' not found\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.1.0.38 (Visual Studio Community)\r\nAndroid SDK: /Users/shaikhawais/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t2.3   (API level 10)\r\n\t\t4.0.3 (API level 15)\r\n\t\t4.4   (API level 19)\r\n\t\t5.0   (API level 21)\r\n\t\t5.1   (API level 22)\r\n\t\t6.0   (API level 23)\r\n\t\t7.0   (API level 24)\r\n\t\t7.1   (API level 25)\r\n\t\t8.0   (API level 26)\r\n\t\t8.1   (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.1\r\nSDK Build Tools Version: 26.0.0\r\n\r\nJava SDK: /Users/shaikhawais/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.9\r\nopenjdk version \"1.8.0-9\"\r\nOpenJDK Runtime Environment (build 1.8.0-9-microsoft-b00)\r\nOpenJDK 64-Bit Server VM (build 25.71-b00, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 7.7.1.0\r\nHash: 06ceaea1\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.2.1.11 (Visual Studio Community)\r\nHash: 5ef73d34\r\nBranch: \r\nBuild date: 2018-11-21 00:03:25-0500\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.2.1.11 (Visual Studio Community)\r\nHash: 5ef73d34\r\nBranch: d15-9\r\nBuild date: 2018-11-21 00:03:24-0500\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 707010015\r\nGit revision: a7ca4daaf7add8fe05ed137fdd51bd9eb77758a7\r\nBuild date: 2018-12-05 20:15:35+00\r\nBuild branch: release-7.7\r\nXamarin extensions: 40f5fc1b44727b10b1e7bb1ada3aae33516569ce\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.0\r\nDarwin 18.0.0 Darwin Kernel Version 18.0.0\r\n    Wed Aug 22 20:13:40 PDT 2018\r\n    root:xnu-4903.201.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nPrism Template Studio and Developer Toolkit 2.2.0.203"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8887071390","Type":"IssuesEvent","CreatedAt":"2019-01-15T03:39:47","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1874","RelatedDescription":"Closed issue \"OnAppearing is called for all the pages in the NavigationStack when resuming the Android app\" (#1874) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nWhen resuming the Android app (turning the screen on) OnAppearing is called for all the pages in the current NavigationStack, not only the last one.\r\nWhen navigating back OnAppearing is not called for the page, because it was already called previously by mistake.\r\n\r\n### Steps to Reproduce\r\n\r\n0. PushAsyncModal(new NavigationPage())\r\n1. Navigation.PushAsync(page1),  Navigation.PushAsync(page2)\r\n2. Turn the screen OFF\r\n3. Turn the screen ON\r\n4. OnAppearing in called for page1 and page2. Expected only page2\r\n5. Press back arrow. OnAppearing is not called for page1, expected to be called\r\n\r\n\r\n### Expected Behavior\r\n\r\nIt is expected that OnAppearing/OnDisappearing would be called only for the current page just as a regular navigation.\r\n\r\n### Actual Behavior\r\nExactly how it is described in the closed issue on bugzilla, even though there were later comments that issue still remains:\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=41322\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.4.0.282\r\n- Last known good version:\r\n- IDE: Visual Studio Community Mac\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - Android: 6.1, 7.1 "},{"Id":"8886596787","Type":"IssuesEvent","CreatedAt":"2019-01-15T01:19:47","Actor":"brminnick","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4987","RelatedDescription":"Opened issue \"Dismissing the Context Action Menu on iOS Prevents Tapping a ViewCell\" (#4987) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nAfter revealing, then dismissing, the Context Action Menu on iOS, the user is unable to tap the `ViewCell`\r\n\r\n### Reproduction Video \r\nhttps://www.dropbox.com/s/rqwu2kyijn0swp5/iOS%20Context%20Menu%20Bug%20Repro.mov?dl=0\r\n\r\n### Reproduction Code\r\nhttps://github.com/brminnick/InvestmentDataSampleApp\r\n\r\n### Expected Behavior\r\nUser should be able to tap the ViewCell after dismissing the Context Action Menu \r\n\r\n### Actual Behavior\r\nNothing happens when the user tries to tap the ViewCell after dismissing the Context Action Menu\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.4.0.1009999\r\n- Last known good version: Unknown\r\n- IDE: Visual Studio Mac v8.0 build 869\r\n- Platform Target Frameworks: \r\n  - iOS:  12.1\r\n- Nuget Packages: Xamarin.Forms v3.4.0.1009999\r\n\r\n### Screenshots\r\n\r\nhttps://www.dropbox.com/s/rqwu2kyijn0swp5/iOS%20Context%20Menu%20Bug%20Repro.mov?dl=0\r\n\r\n### Reproduction Link\r\n\r\nVideo: https://www.dropbox.com/s/rqwu2kyijn0swp5/iOS%20Context%20Menu%20Bug%20Repro.mov?dl=0\r\nCode: https://github.com/brminnick/InvestmentDataSampleApp\r\n\r\n### Environment Information\r\n\r\n=== Visual Studio Enterprise 2019 Preview for Mac ===\r\n\r\nVersion 8.0 Preview (8.0 build 869)\r\nInstallation UUID: 3e30d340-21f3-4344-a25d-43de831b73f6\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.0.0.0 ( / b40230c0)\r\n\r\n\tPackage version: 516000221\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.16.0.221 (2018-06/b63e5378e38) (64-bit)\r\n\tPackage version: 516000221\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.7.0.5148\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.2.0\r\n\t2.2.0-preview3-27014-02\r\n\t2.1.6\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.6\r\n\t2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.2.100/Sdks\r\nSDK Versions:\r\n\t2.2.100\r\n\t2.2.100-preview3-009430\r\n\t2.1.500\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.101\r\n\t2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.16.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.4\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 8\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.1.4.2 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/bramin/Library/Android/sdk\r\n\tSupported Android versions:\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.1\r\nSDK Build Tools Version: 28.0.3\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: /Users/bramin/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.9\r\n1.8.0-9\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 1.2.0.1\r\nHash: 99d7ff4\r\nBranch: remotes/origin/d16-0-p2~1\r\nBuild date: 2018-12-03 21:56:10 UTC\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.2.1.12 (Visual Studio Enterprise)\r\nHash: 65ec520f\r\nBranch: \r\nBuild date: 2018-12-05 12:06:09-0500\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.2.1.12 (Visual Studio Enterprise)\r\nHash: 65ec520f\r\nBranch: d15-9\r\nBuild date: 2018-12-05 12:06:09-0500\r\n\r\n=== Xamarin Designer ===\r\n\r\nVersion: 4.17.1.189\r\nHash: 0e3953bd9\r\nBranch: remotes/origin/d16-0-p1\r\nBuild date: 2018-11-07 13:21:06 UTC\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 800000869\r\nGit revision: 3c7c96b41ce6b823bf58bb89bda695448ccc97f5\r\nBuild date: 2018-12-03 21:59:44+00\r\nBuild branch: release-8.0\r\nXamarin extensions: 87c82bbb37a91ff539738267c414f0d6db88392c\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.2\r\nDarwin 18.2.0 Darwin Kernel Version 18.2.0\r\n    Mon Nov 12 20:24:46 PST 2018\r\n    root:xnu-4903.231.4~2/RELEASE_X86_64 x86_64\r\n\r\n"},{"Id":"8886372040","Type":"IssuesEvent","CreatedAt":"2019-01-15T00:14:24","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4986","RelatedDescription":"Opened issue \"[iOS] OnAppearing not firing when returning to app \" (#4986) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nManual test for 52318 does not match the test instructions. Specifically, the test says \"Only the last page should alert\" when the app is reactivated after hitting the Home button. But currently _no alert_ displays when reactivating the app.\r\n\r\nWe need to determine if this is a regression or simply incorrect test instructions.\r\n\r\nOriginal bug: https://bugzilla.xamarin.com/show_bug.cgi?id=52318\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open the Control Gallery.\r\n2. Navigate to issue 52318\r\n3. Follow the test instructions.\r\n\r\n### Expected Behavior\r\n\r\nInstructions match the behavior of the app.\r\n\r\n### Actual Behavior\r\n\r\nThe app displays different behavior than the instructions.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.5.0\r\n- Last known good version: 2.3.5, assuming the instructions are correct.\r\n"},{"Id":"8886261363","Type":"PullRequestEvent","CreatedAt":"2019-01-14T23:45:01","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4614","RelatedDescription":"Closed pull request \"[iOS] Fixed ListView cannot reset selected status\" (#4614) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nAdded _lastSelected variable in listview renderer to support unselect action\r\n\r\n### Issues Resolved ###\r\nfixes #4394 \r\n\r\n### API Changes ###\r\nNone\r\n\r\n### Platforms Affected ###\r\niOS\r\n\r\n### Behavioral/Visual Changes ###\r\nIn iOS, now you can deselect the last selected item in the list view.\r\n\r\n### Before/After Screenshots ###\r\n## Before ##\r\n![before](https://user-images.githubusercontent.com/18006944/49396812-e85b6f80-f79e-11e8-98ae-82e27289eb51.gif)\r\n\r\n## After ##\r\n![after](https://user-images.githubusercontent.com/18006944/49396823-ec878d00-f79e-11e8-85f8-3f463852b7d5.gif)\r\n\r\n### Testing Procedure ###\r\nStart ControlGallery.iOS, Search and go to G4394 Page in tests screen, you should be able to unselect the selected item now"},{"Id":"8886147281","Type":"IssuesEvent","CreatedAt":"2019-01-14T23:16:26","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2165","RelatedDescription":"Reopened issue \"enable source link support\" (#2165) at xamarin/Xamarin.Forms","RelatedBody":"You can simplify debugging of Xamarin.Forms significantly by enabling source link support. Current process:\r\nhttps://blog.xamarin.com/debugging-xamarin-forms/\r\n\r\nA video example of what it should be like:\r\nhttps://youtu.be/gyRGhCQPkB4?t=1m\r\n\r\nSource link support will need to be enabled in the debugger too. VS 2017 & VS Code have support."}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8885951979","Type":"IssuesEvent","CreatedAt":"2019-01-14T22:33:43","Actor":"abock","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5403","RelatedDescription":"Opened issue \"NSAppearanceCustomization.Appearance should allow for null\" (#5403) at xamarin/xamarin-macios","RelatedBody":"`NSAppearanceCustomization.Appearance` (and `NSAppearanceCustomization_Extensions.SetAppearance`) should be able to receive `null`/`NIL` to indicate that appearance (`NSAppearanceCustomization.EffectiveAppearance`) should be inherited from its appearance source.\r\n\r\nOur bindings are currently throwing `ArgumentNullException` when set to `null`.\r\n\r\nhttps://developer.apple.com/documentation/appkit/nsappearancecustomization/1533925-appearance?language=objc"},{"Id":"8885071989","Type":"PullRequestEvent","CreatedAt":"2019-01-14T19:53:07","Actor":"migueldeicaza","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5402","RelatedDescription":"Opened pull request \"[UIKit] UIGestureRecognizer's custon OnDispose method needs to queue the actual operation on the main thread\" (#5402) at xamarin/xamarin-macios","RelatedBody":"Proposed fixed for:\r\n\r\nhttps://github.com/xamarin/xamarin-macios/issues/5388"},{"Id":"8884267743","Type":"PullRequestEvent","CreatedAt":"2019-01-14T17:37:59","Actor":"mandel-macaque","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5400","RelatedDescription":"Merged pull request \"[XHarness] Remove not needed bcl tests for Mono.Runtime.\" (#5400) at xamarin/xamarin-macios","RelatedBody":"Remove tests that are not provided in the Mono iOS SDK for Mono.Runtime.\r\n\r\nFixes https://github.com/xamarin/maccore/issues/1141"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1083829954515750923","CreatedAt":"2019-01-11T20:56:12+00:00","UserScreenname":"xamarinhq","Text":"...just posted on the Xamarin Blog, Andrei Nitescu shares one of his contributions to Xamarin.Forms, the bindable l… https://t.co/rp3eVPLbYl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":97,"FavoriteCount":36,"RawContent":null},{"Id":"1083399709526503424","CreatedAt":"2019-01-10T16:26:34+00:00","UserScreenname":"xamarinhq","Text":"Our very first Mobile .NET #CommunityStandup will be live in about 30 minutes at 9am Pacific! @maddyleger1,… https://t.co/vmFHIKZTIt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":57,"FavoriteCount":19,"RawContent":null},{"Id":"1080559862642282502","CreatedAt":"2019-01-02T20:22:01+00:00","UserScreenname":"xamarinhq","Text":"It’s a new year with tons of new and awesome Xamarin and .NET Community events coming this month. Get the full list… https://t.co/ZOykEyCRBN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":22,"RawContent":null},{"Id":"1075783769876033536","CreatedAt":"2018-12-20T16:03:32+00:00","UserScreenname":"xamarinhq","Text":"Introducing Xamarin.Essentials, a new library that abstracts native APIs into a set of cross-platform APIs giving y… https://t.co/EMM97iFY9o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":269,"FavoriteCount":119,"RawContent":null},{"Id":"1072256672498966533","CreatedAt":"2018-12-10T22:28:06+00:00","UserScreenname":"xamarinhq","Text":"CarouselView is Here! Xamarin.Forms 4.0 now includes an entirely new point of view. ...as part of the upcoming rele… https://t.co/Vh8UMRM4ez","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":153,"FavoriteCount":69,"RawContent":null},{"Id":"1070425707770195968","CreatedAt":"2018-12-05T21:12:30+00:00","UserScreenname":"xamarinhq","Text":"Yesterday at Microsoft Connect(); 2018 we announced our plans &amp; preview for Xamarin.Forms 4.0. This post will give… https://t.co/oNXLJGsrQ8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":144,"FavoriteCount":74,"RawContent":null},{"Id":"1070075277101944833","CreatedAt":"2018-12-04T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"Today, at #MSFTConnect 2018, we have several exciting announcements about brand new capabilities and foundational i… https://t.co/olEK9QjR1j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":38,"RawContent":null},{"Id":"1069721699225088008","CreatedAt":"2018-12-03T22:35:02+00:00","UserScreenname":"xamarinhq","Text":"Here's what we have coming up this month for #Xamarin and #dotNET Developer Events in December:… https://t.co/oAMbLqXh9f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":45,"FavoriteCount":18,"RawContent":null},{"Id":"1068601941339582469","CreatedAt":"2018-11-30T20:25:31+00:00","UserScreenname":"xamarinhq","Text":"Now announcing multi-targeting with Android Support Library v28. \n\n...but what is multi-targeting you ask? Well, no… https://t.co/oBJ1j9vP6P","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":53,"RawContent":null},{"Id":"1067915081495846913","CreatedAt":"2018-11-28T22:56:10+00:00","UserScreenname":"xamarinhq","Text":"The Xamarin #Android team has been working hard on improving Build Performance &amp; Reliability in both #VS2017 v15.9… https://t.co/c4iSbZJDy9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":82,"FavoriteCount":45,"RawContent":null},{"Id":"1063457672048058371","CreatedAt":"2018-11-16T15:44:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing the release of Xamarin.Forms 3.4.0 w/ even more bug fixes and another new highly requested feature, an I… https://t.co/EJadLHYi73","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":178,"FavoriteCount":105,"RawContent":null},{"Id":"1063145593562902528","CreatedAt":"2018-11-15T19:03:56+00:00","UserScreenname":"xamarinhq","Text":"Build and deploy #ethereum smart contracts using the new @trufflesuite extension for #VSCode from @MSFTBlockchain… https://t.co/nEbiFUYaM2","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1062819180100100099","CreatedAt":"2018-11-14T21:26:53+00:00","UserScreenname":"xamarinhq","Text":"Want to get started w/ mobile dev using C# &amp; #Xamarin? We've got a Twitch Workshop for that.\n\nComing Friday, Nov 16… https://t.co/ce2vH9dC4t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":114,"FavoriteCount":61,"RawContent":null},{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":43,"FavoriteCount":26,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":31,"RawContent":null},{"Id":"1052217100041945088","CreatedAt":"2018-10-16T15:18:00+00:00","UserScreenname":"xamarinhq","Text":"A full day of community-driven sessions on cross-platform mobile application development with Xamarin, DevOps with… https://t.co/07SVz6rgLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":53,"FavoriteCount":22,"RawContent":null},{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":29,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":38,"RawContent":null}]}},"RunOn":"2019-01-15T05:31:03.4024574Z","RunDurationInMilliseconds":2955}