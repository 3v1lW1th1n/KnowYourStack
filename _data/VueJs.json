{"Data":{"Vue-Issues":{"Issues":[{"Id":"416230116","IsPullRequest":false,"CreatedAt":"2019-03-01T18:40:37","Actor":"datpham96","Number":"9604","RawContent":null,"Title":"How to reload file .css and file .js when next router use vue-router in laravel?","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/9604","RelatedDescription":"Closed issue \"How to reload file .css and file .js when next router use vue-router in laravel?\" (#9604)"},{"Id":"416159696","IsPullRequest":true,"CreatedAt":"2019-03-01T15:41:58","Actor":"sh7dm","Number":"9603","RawContent":null,"Title":"feat(types): improve some type definitions","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it):\r\nImprove type definition for TypeScript users to make Vue stronger typed\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9603","RelatedDescription":"Open PR \"feat(types): improve some type definitions\" (#9603)"},{"Id":"415928088","IsPullRequest":true,"CreatedAt":"2019-03-01T14:56:13","Actor":"gzzhanghao","Number":"9598","RawContent":null,"Title":"fix(compiler): set end location for incomplete elements","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n\r\nEnd location for incomplete tags are missing, which makes error message looks weird:\r\n\r\n```\r\n  tag <incomplete-tag> has no matching end tag.\r\n\r\n  2  |  <div>\r\n  3  |    <div>\r\n  4  |      <incomplete-tag>\r\n     |      ^^^^^^^^^^^^^^^^\r\n  5  |    </div>\r\n     |  ^^^^^^^^\r\n  6  |  </div>\r\n     |  ^^^^^^\r\n```\r\n\r\n**Expected:**\r\n\r\n```\r\n  tag <incomplete-tag> has no matching end tag.\r\n\r\n  2  |  <div>\r\n  3  |    <div>\r\n  4  |      <incomplete-tag>\r\n     |      ^^^^^^^^^^^^^^^^\r\n  5  |    </div>\r\n  6  |  </div>\r\n```\r\n\r\n","Url":"https://github.com/vuejs/vue/pull/9598","RelatedDescription":"Closed or merged PR \"fix(compiler): set end location for incomplete elements\" (#9598)"},{"Id":"416072537","IsPullRequest":false,"CreatedAt":"2019-03-01T12:14:13","Actor":"Ti-webdev","Number":"9602","RawContent":null,"Title":"Vue.extend prototype","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://repl.it/@Ti_webdev/Vue-extend](https://repl.it/@Ti_webdev/Vue-extend)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```javascript\r\nconst Vue2 = Vue.extend({})\r\nVue2.prototype.$foo = 'bar'\r\n\r\nconst Child = {\r\n  render (h) {\r\n    return h('h1', 'Hello Vue.extend! '   this.$foo)\r\n  }\r\n}\r\n\r\nnew Vue2({\r\n  render (h) {\r\n    return h(Child)\r\n  },\r\n  el: \"#app\"\r\n}).$mount()\r\n```\r\n### What is expected?\r\nHello Vue.extend! bar\r\n\r\n### What is actually happening?\r\nHello Vue.extend! undefined\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9602","RelatedDescription":"Closed issue \"Vue.extend prototype\" (#9602)"},{"Id":"416072307","IsPullRequest":true,"CreatedAt":"2019-03-01T12:01:42","Actor":"sh7dm","Number":"9601","RawContent":null,"Title":"feat(global-api): warn when plugin is invalid","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it):\r\nuser should be able to see issue with plugin\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9601","RelatedDescription":"Open PR \"feat(global-api): warn when plugin is invalid\" (#9601)"},{"Id":"416007854","IsPullRequest":false,"CreatedAt":"2019-03-01T09:45:45","Actor":"mohsen158","Number":"9600","RawContent":null,"Title":"dynamically change public path in vue js","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n\r\n\r\n### Steps to reproduce\r\nwhen you want create dynamicaly public path \r\n\r\n### What is expected?\r\ndynamic  set for base url \r\n\r\n### What is actually happening?\r\nstatic base url \r\n\r\n---\r\ni want put my vue js project in ipfs . and because of that i have to change my baseuri or public path to be :\r\n\r\n    /ipfs/[hash string which i get after file added to ipfs]\r\n\r\nbut i cant do that\r\n\r\nmeans i want to set public path be dynamically depends on real url\r\nsomethink like this :\r\n     \r\n     module.exports = {\r\n    publicPath: process.env.NODE_ENV === 'production' ?\r\n        '/ipfs/[hash string which i get after file added to ipfs]/' : '/'\r\n    } \r\nwhats your idea to solve this problem?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9600","RelatedDescription":"Closed issue \"dynamically change public path in vue js\" (#9600)"},{"Id":"416005073","IsPullRequest":false,"CreatedAt":"2019-03-01T09:05:08","Actor":"mohsen158","Number":"9599","RawContent":null,"Title":"dynamically change public path in vue js","State":"closed","Body":"i want put my vue js project in ipfs . and because of that i have to change my baseuri or public path to be :\r\n\r\n    /ipfs/[hash string which i get after file added to ipfs]\r\n\r\nbut i cant do that\r\n\r\nmeans i want to set public path be dynamically depends on real url\r\nsomethink like this :\r\n     \r\n     module.exports = {\r\n    publicPath: process.env.NODE_ENV === 'production' ?\r\n        '/ipfs/[hash string which i get after file added to ipfs]/' : '/'\r\n    } \r\nwhats your idea to solve this problem?","Url":"https://github.com/vuejs/vue/issues/9599","RelatedDescription":"Closed issue \"dynamically change public path in vue js\" (#9599)"},{"Id":"415771556","IsPullRequest":false,"CreatedAt":"2019-02-28T22:25:40","Actor":"sustained","Number":"9597","RawContent":null,"Title":"Odd behaviour with setTimeout.","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/sustained/zody8sf4/](https://jsfiddle.net/sustained/zody8sf4/)\r\n\r\n### Steps to reproduce\r\nJust look at the code/result for the `test-3` component.\r\n\r\n### What is expected?\r\nI'd personally expect `test-3` to work, if `test-2` and `test-1` do.\r\n\r\nAnd I honestly have no idea why `test-5` works at all, especially if `test-3` doesn't.\r\n\r\nSomething seems a bit weird here.\r\n\r\n### What is actually happening?\r\nIt doesn't.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9597","RelatedDescription":"Closed issue \"Odd behaviour with setTimeout.\" (#9597)"},{"Id":"415715148","IsPullRequest":false,"CreatedAt":"2019-02-28T19:37:54","Actor":"KaelWD","Number":"9596","RawContent":null,"Title":"Scoped slot content doesn't update from array change","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://codepen.io/anon/pen/rROQJz?editors=1010](https://codepen.io/anon/pen/rROQJz?editors=1010)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick the button next to \"foo\"\r\n\r\n### What is expected?\r\n\"bar 0\" should be shown\r\n\r\n### What is actually happening?\r\n\"bar 1\" is shown\r\n\r\n---\r\nOriginal issue: https://github.com/vuetifyjs/vuetify/issues/6643\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9596","RelatedDescription":"Closed issue \"Scoped slot content doesn't update from array change\" (#9596)"},{"Id":"415684760","IsPullRequest":true,"CreatedAt":"2019-02-28T17:10:39","Actor":"sodatea","Number":"9595","RawContent":null,"Title":"fix: avoid compression of unicode sequences by using regexps, closes #9456 ","State":"closed","Body":"closes #9456\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9595","RelatedDescription":"Closed or merged PR \"fix: avoid compression of unicode sequences by using regexps, closes #9456 \" (#9595)"},{"Id":"414571713","IsPullRequest":false,"CreatedAt":"2019-02-28T14:37:23","Actor":"drozdzynski","Number":"9577","RawContent":null,"Title":"Deep object as dynamic argument in custom directive [RFC-0003]","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/3qbky0z7/4/](https://jsfiddle.net/3qbky0z7/4/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate custom directive with a dynamic argument:\r\n```v-test:[deep.arg]=\"value\"```\r\n\r\n### What is expected?\r\nIt should get the value from path `deep.arg`.\r\n\r\n### What is actually happening?\r\nInside the binding object of a custom directive, `arg` key have value `[deep`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9577","RelatedDescription":"Closed issue \"Deep object as dynamic argument in custom directive [RFC-0003]\" (#9577)"},{"Id":"415097657","IsPullRequest":true,"CreatedAt":"2019-02-28T14:36:47","Actor":"Shasharoman","Number":"9585","RawContent":null,"Title":"fix(#9577): support deep object as dynamic arguments","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [x] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\nFixed issue #9577.\r\n\r\nThe old modifier matching pattern is `/\\.[^.]+/g`, It does not take into account that dynamic arguments may contain `.`，so I updated it and hope it is correct.\r\n\r\ncode example:\r\n\r\n``` {javascript}\r\nconst before = /\\.[^.]+/g;\r\nconst after = /\\.[^.\\]]+(?=\\.|$)/g;\r\n\r\nlet s = 'name:[a.b].c.d';\r\n\r\nconsole.log(s.match(before)); // [\".b]\", \".c\", \".d\"]\r\nconsole.log(s.match(after));    // [\".c\", \".d\"]\r\n```","Url":"https://github.com/vuejs/vue/pull/9585","RelatedDescription":"Closed or merged PR \"fix(#9577): support deep object as dynamic arguments\" (#9585)"},{"Id":"415616863","IsPullRequest":false,"CreatedAt":"2019-02-28T13:12:35","Actor":"651778286","Number":"9594","RawContent":null,"Title":"How to use vue with scratch?","State":"closed","Body":"How to use vue with scratch?Is there a example?\r\n\r\nThank you for the first","Url":"https://github.com/vuejs/vue/issues/9594","RelatedDescription":"Closed issue \"How to use vue with scratch?\" (#9594)"},{"Id":"415599510","IsPullRequest":false,"CreatedAt":"2019-02-28T12:29:04","Actor":"ziaxdk","Number":"9593","RawContent":null,"Title":"Setting max-height with scrollHeight in before-leave transistion fails","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/oovq6y1k36](https://codesandbox.io/s/oovq6y1k36)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nClick on \"This is a header\" and it animates to open\r\nClick again and it doesn't animates\r\nEnable hack in line 47 in App.Vue and repeat and it works\r\n\r\n### What is expected?\r\nThis transition should work without the \"read\" hack\r\n\r\n### What is actually happening?\r\nIt just collapses without transition\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9593","RelatedDescription":"Closed issue \"Setting max-height with scrollHeight in before-leave transistion fails\" (#9593)"},{"Id":"415598477","IsPullRequest":false,"CreatedAt":"2019-02-28T12:25:14","Actor":"ziaxdk","Number":"9592","RawContent":null,"Title":"before-leave on scrollHeight","State":"closed","Body":"\r\n### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n https://codesandbox.io/s/oovq6y1k36\r\n\r\n### Steps to reproduce\r\n1. Click on \"This is a header\" and it animates to open\r\n2. Click again and it doesn't animates\r\n3. Enable hack in line 47 in App.Vue and repeat and it works\r\n\r\n### What is expected?\r\nTo animate without hack\r\n\r\n### What is actually happening?\r\nSeems like scrollHeight has to be read to work\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/9592","RelatedDescription":"Closed issue \"before-leave on scrollHeight\" (#9592)"},{"Id":"415483714","IsPullRequest":false,"CreatedAt":"2019-02-28T10:08:33","Actor":"qinkaiyuan","Number":"9590","RawContent":null,"Title":"There is a delay in communication between the parent and child components","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://output.jsbin.com/nejugupaxo/1](https://output.jsbin.com/nejugupaxo/1)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n父组件传入age\r\n子组件接收age\r\n父组件改变age\r\n父组件调用子组件的printAge方法输出age，发现子组件的age值未改变\r\n\r\nclick change age button, then please see console log\r\n\r\n### What is expected?\r\nThere is no delay in passing the value of the parent and child components.\r\n\r\n### What is actually happening?\r\nDelayed\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9590","RelatedDescription":"Closed issue \"There is a delay in communication between the parent and child components\" (#9590)"},{"Id":"415500283","IsPullRequest":true,"CreatedAt":"2019-02-28T08:21:57","Actor":"sh7dm","Number":"9591","RawContent":null,"Title":"feat: add access to context from serverPrefetch (fix #9447)","State":"open","Body":"**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [x] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\nFirst argument of hook will be `context`, not `vm`\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n#9447\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/9591","RelatedDescription":"Open PR \"feat: add access to context from serverPrefetch (fix #9447)\" (#9591)"},{"Id":"415388536","IsPullRequest":false,"CreatedAt":"2019-02-28T00:21:40","Actor":"mouraggui","Number":"9589","RawContent":null,"Title":"KeyboardEvent returns the key value as \"Unidentified\"","State":"closed","Body":"","Url":"https://github.com/vuejs/vue/issues/9589","RelatedDescription":"Closed issue \"KeyboardEvent returns the key value as \"Unidentified\"\" (#9589)"},{"Id":"414810527","IsPullRequest":false,"CreatedAt":"2019-02-27T17:02:18","Actor":"cicsolutions","Number":"9580","RawContent":null,"Title":"New v-slot directive format has the 'elm' property in the slot node as 'undefined'","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/cicsolutions/9trsg8nm/38/](https://jsfiddle.net/cicsolutions/9trsg8nm/38/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIn the fiddle, you'll see two approaches to slotting content (1) using the old slot syntax and (2) using the new v-slot directive.  In the console, you'll see a log for each slot and the contents of the slot node 'elm' property.  With the old slot syntax, the slot[0].elm is set as the slot div element, whereas with the new directive syntax, the slot[0].elm property is 'undefined'.\r\n\r\n### What is expected?\r\nI was expecting the new slot directive to behave in the same manner as the old approach to slotting content.  This may not be the case, given that v-slot is a directive.  However, if the old syntax for slots will be deprecated in the future, how would one go about getting their hands on the 'elm' property using the new v-slot directive?\r\n\r\n### What is actually happening?\r\nthe new v-slot directive returns the slot node with the 'elm' property 'undefined'\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9580","RelatedDescription":"Closed issue \"New v-slot directive format has the 'elm' property in the slot node as 'undefined'\" (#9580)"},{"Id":"415152536","IsPullRequest":true,"CreatedAt":"2019-02-27T14:30:04","Actor":"vue-bot","Number":"9588","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/9588","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#9588)"},{"Id":"415108349","IsPullRequest":false,"CreatedAt":"2019-02-27T13:16:06","Actor":"golgote","Number":"9587","RawContent":null,"Title":"Support Vueify","State":"closed","Body":"### What problem does this feature solve?\r\nWe have noticed that the Vueify repository on Github is being **archived** so we cannot post issues there anymore and I don't know where else to post this opinion. We use **Vueify** and Browserify to deploy our components. We don't build full SPA or Apps, we just enhance some parts of our websites with Vue. I bet a lot of other users also use Vue this way, because this is one of Vue strength as mentioned on the frontpage.\r\n\r\n> An incrementally adoptable ecosystem that scales between a library and a full-featured framework.\r\n\r\nWe also don't really use nodejs, we are a PHP shop, so we try to mix both Vue and PHP together without diving too much into the nodejs ecosystem. Browserify has been a mean to do that and it serves us well by allowing us to use npm packages in the browser without too much troubles. Is this going against progress? I don't know. I have had a look at webpack and rollup, and all I can say is that it is not for us because there is too much configuration involved. I also tried VueCLI and it's great, but it seems to be designed for building full apps. If some day we have requests for full apps, we will definitely use it because it makes a great job at hiding the webpack complexities. \r\n\r\nBut for today, all I am asking is that you unarchive the Vueify repository and maybe grant admin access to someone who might have the time and willingness to maintain it and keep it alive? (not me, I don't have time nor skill to do it, sorry)\r\n\r\nOr if you consider it is really dead, maybe you could write a little tutorial on how to achieve the same things with webpack, just for people who need to migrate (ie. take modules from node_modules and bundle them for use with require() and parse .vue SFC and bundle css in css directory and js in the js bundle). \r\n\r\nThanks very much.\r\n\r\n### What does the proposed API look like?\r\nTrying to keep a command like this alive:\r\n\r\n`browserify -t [ envify --NODE_ENV production ] -t vueify -p [ vueify/plugins/extract-css -o public/css/bundle.css ] main.js -o public/js/bundle.js`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9587","RelatedDescription":"Closed issue \"Support Vueify\" (#9587)"},{"Id":"415104190","IsPullRequest":false,"CreatedAt":"2019-02-27T13:15:55","Actor":"leevigraham","Number":"9586","RawContent":null,"Title":"empty v-bind:value not removed on checkbox and radios","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://codepen.io/leevigraham/pen/OqVbeK](https://codepen.io/leevigraham/pen/OqVbeK)\r\n\r\n### Steps to reproduce\r\nInspect the checkbox and radio elements.\r\n\r\n### What is expected?\r\ncheckbox and input shouldn't have an empty value attribute\r\n\r\n### What is actually happening?\r\ncheckbox and input have an empty value attribute\r\n\r\n---\r\nThe documentation says:\r\n\r\n> If isButtonDisabled has the value of null, undefined, or false, the disabled attribute will not even be included in the rendered element.\r\n\r\nhttps://vuejs.org/v2/guide/syntax.html#Attributes\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9586","RelatedDescription":"Closed issue \"empty v-bind:value not removed on checkbox and radios\" (#9586)"},{"Id":"415028068","IsPullRequest":false,"CreatedAt":"2019-02-27T09:58:31","Actor":"wsd-msp","Number":"9583","RawContent":null,"Title":"Directive empty modifiers object is shared between instances","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/62spywer/1/](https://jsfiddle.net/62spywer/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCheck the console.log and open the outputted objects\r\n\r\n### What is expected?\r\nThe objects from the first 2 instances of the directive should contain it's own value.\r\nThe first object should be {foo: \"test\"} and the second object should be {foo: \"test2\"}\r\n\r\n### What is actually happening?\r\nThe first 2 instances shares the modifier object, hence the second instance overrides the first instances value.\r\nBoth the first and second object is {foo: \"test2\"}\r\n\r\n---\r\nThe third instance is just to show that it's only a problem if no modifiers are passed in the HTML.\r\n\r\nI think it's because of: https://github.com/vuejs/vue/blob/4c98f9de39e18703ec3dbd05b596a1bbc3d0c8e3/src/core/vdom/modules/directives.js#L82,L105\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9583","RelatedDescription":"Closed issue \"Directive empty modifiers object is shared between instances\" (#9583)"},{"Id":"415036947","IsPullRequest":false,"CreatedAt":"2019-02-27T09:56:01","Actor":"waspar","Number":"9584","RawContent":null,"Title":"Props` validator doesn't work in webpack production mode but works in dev|watch mode","State":"closed","Body":"Perhaps this is a stupid issue, but I did not expect the validation of the parameters to be worked out only in the \"watch\" mode.\r\n\r\nEverything I found in the documentation is - \r\n\r\n> Note that props are validated before a component instance is created, so instance properties (e.g. data, computed, etc) will not be available inside default or validator functions.\r\n\r\nBut in my opinion there is no explicit warning about the difference in operating modes.\r\n\r\n```\r\nresolve: {\r\n...\r\n\talias: {\r\n\t\t// vue\r\n\t\t'vue': 'vue/dist/vue.esm.js' // Use the full build\r\n```\r\n\r\n```\r\nfield: {\r\n\ttype: Object,\r\n\trequired: true,\r\n\tvalidator: function (prop) {\r\n\t\talert('validator field');\r\n```\r\n\r\nnode - 8.14.1\r\nwebpack - 4.29.2\r\nvue - 3.4.0\r\n- \"vue-html-loader\": \"1.2.4\",\r\n- \"vue-loader\": \"15.6.4\",\r\n- \"vue-style-loader\": \"4.1.2\",\r\n- \"vue-template-compiler\": \"2.6.7\"","Url":"https://github.com/vuejs/vue/issues/9584","RelatedDescription":"Closed issue \"Props` validator doesn't work in webpack production mode but works in dev|watch mode\" (#9584)"},{"Id":"415027310","IsPullRequest":false,"CreatedAt":"2019-02-27T09:37:10","Actor":"duuliy","Number":"9582","RawContent":null,"Title":"Suggest that you get rid of this bug","State":"closed","Body":"### What problem does this feature solve?\r\nWhen I test with unit jest and e2e, I report errors：localStorage is not available for opaque origins。\r\nThe configuration file is jsdom by default，Suggestion to change to node。\r\n \"jest\": {\r\n    \"verbose\": true,\r\n    \"testURL\": \"http://localhost/\"\r\n  }\r\n\r\n### What does the proposed API look like?\r\nWhen I initialize the project, I can use it directly instead of reporting errors.thanks\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9582","RelatedDescription":"Closed issue \"Suggest that you get rid of this bug\" (#9582)"},{"Id":"415004117","IsPullRequest":false,"CreatedAt":"2019-02-27T08:39:50","Actor":"github923665892","Number":"9581","RawContent":null,"Title":"组件命名为Title时会警告","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://new-issue.vuejs.org/](https://new-issue.vuejs.org/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n组件命名为Title时会警告\r\nThere are multiple modules with names that only differ in casing.\r\nThis can lead to unexpected behavior when compiling on a filesystem with other case-semantic.\r\n\r\n### What is expected?\r\nnull\r\n\r\n### What is actually happening?\r\n100%\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9581","RelatedDescription":"Closed issue \"组件命名为Title时会警告\" (#9581)"},{"Id":"414781524","IsPullRequest":false,"CreatedAt":"2019-02-26T19:44:22","Actor":"cicsolutions","Number":"9579","RawContent":null,"Title":"'key' property in render data object seems to have no effect in the rendered component","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/cicsolutions/qzkdew80/52/](https://jsfiddle.net/cicsolutions/qzkdew80/52/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a main component that is a wrapper for a `<transition-group>` component, in which the default slot of our wrapper component becomes the separate items in the transition group.  Each item in the transition group is another Vue component, each with their own render function.  Because each item in the transition group needs to be have a unique key, the only approach I can think of to set that key on slot content would be to use a render function and set a unique key in the data object of the render function.\r\n\r\n### What is expected?\r\nA unique key would be applied to Vnode so that each item/component in the transition group has it's own unique key.\r\n\r\nI've attempted setting the 'ref' value in the data object, and it does create the ref as expected.  I'm not sure why supplying a unique key in the data object does not give the component a key.\r\n\r\n### What is actually happening?\r\nSetting the 'key' property of the data object in a render function does not apply the provided key to the rendered component.  By using the console to inspect the component in the example fiddle above, you'll note the error related to transition group children requiring keys.\r\n\r\n---\r\nWhile it is certainly possible to manually provide a component key, my aim is to create an open source component that others can use, in which case, I do not want to require them to add the key to each component in the default slot.  I would prefer to programmatically add the key through the render function or any other approach.  Seems like the 'key' property in the data object was intended for this type of approach, but I'm sill learning!\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9579","RelatedDescription":"Closed issue \"'key' property in render data object seems to have no effect in the rendered component\" (#9579)"},{"Id":"414430611","IsPullRequest":false,"CreatedAt":"2019-02-26T14:39:00","Actor":"aimergenge","Number":"9575","RawContent":null,"Title":"$forceUpdate doesn't affect checkbox","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/v8n1p04v85](https://codesandbox.io/s/v8n1p04v85)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. have a look at code in BreakDemo.vue\r\n2. input some text in the text input, after 1s, the value reset to default\r\n3. select another option, after 1s , the value reset to default\r\n4. click on the checkbox, after 1s, the value doesn’t reset to default\r\n\r\n### What is expected?\r\nthe value of checkbox is resetted\r\n\r\n### What is actually happening?\r\nthe value of checkbox is not resetted\r\n\r\n---\r\nIt seems that $forceUpdate doesn't affect checkbox\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9575","RelatedDescription":"Closed issue \"$forceUpdate doesn't affect checkbox\" (#9575)"},{"Id":"414626628","IsPullRequest":false,"CreatedAt":"2019-02-26T14:35:42","Actor":"gmanish","Number":"9578","RawContent":null,"Title":"Vue transition-group not working with slots?","State":"closed","Body":"### Version\r\n2.6.7\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/gmanish/L3y8j57s/](https://jsfiddle.net/gmanish/L3y8j57s/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nSee that there's a <slot> within an opening/closing transition-group tags in the `tabs` component template.\r\nClick on the tab headers to switch between tabs. \r\n\r\n### What is expected?\r\nExpected to see the transition between tabs happening with the specified transition `out-left`. \r\n\r\n### What is actually happening?\r\nWhile the tab contents switch as expected, the transition-group seems to have no effect. The transitions are not rendered.\r\n\r\n---\r\nSimilar flattened code, i.e. without the components and slots, works just fine. \r\nI ran into this issue while trying to create a carousel slide component with transitions left-out/right-out transitions depending on whether we're moving to the next/previous slide.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/9578","RelatedDescription":"Closed issue \"Vue transition-group not working with slots?\" (#9578)"},{"Id":"414490515","IsPullRequest":false,"CreatedAt":"2019-02-26T08:37:31","Actor":"hutameint","Number":"9576","RawContent":null,"Title":"Parameterized Path and  public_url","State":"closed","Body":"When I create a structure that can send parameters in Route.js, when I send a parameter to a page, the url path of the image files I get from the database on that page is incorrect, the public url path is incorrect. However, if I do not specify the parameter definition in Route.js, the problem disappears. My English is not very good, thank you.\r\n\r\n<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/9576","RelatedDescription":"Closed issue \"Parameterized Path and  public_url\" (#9576)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"416314158","IsPullRequest":false,"CreatedAt":"2019-03-01T23:03:51","Actor":"joshua-s","Number":"2633","RawContent":null,"Title":"Multiple named views in single vue file","State":"open","Body":"### What problem does this feature solve?\r\nIt would be great if I could specify multiple named views in a single .vue file. This would make it easier and more centralized to manage applications that require multiple views for each route. By having all the code in one file, it would also make it easy to update both components simultaneously.\r\n\r\n### What does the proposed API look like?\r\nFor instance, if I had header and content views:\r\n```html\r\n<!-- Named slot -->\r\n<template slot=\"header\">\r\n  <div>\r\n    Header content\r\n  </div>\r\n</template>\r\n\r\n<!-- Default slot -->\r\n<template>\r\n  <div>\r\n    Body content\r\n  </div>\r\n</template>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2633","RelatedDescription":"Open issue \"Multiple named views in single vue file\" (#2633)"},{"Id":"415722332","IsPullRequest":true,"CreatedAt":"2019-02-28T22:39:52","Actor":"gengjiawen","Number":"2632","RawContent":null,"Title":"chore(ci): use official image","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2632","RelatedDescription":"Closed or merged PR \"chore(ci): use official image\" (#2632)"},{"Id":"415703323","IsPullRequest":false,"CreatedAt":"2019-02-28T16:13:30","Actor":"ch3njust1n","Number":"2631","RawContent":null,"Title":"Dynamic Route Appending Query","State":"closed","Body":"Couldn't find anything on Stack or in the doc for [router push](https://router.vuejs.org/guide/essentials/navigation.html#router-push-location-oncomplete-onabort). Leaving this here in case anyone else runs into this issue. Please update the docs.\r\n\r\n### Problem\r\nIn the code below, if I navigate to the Content vue and then search using the Search component it imported, the dynamic route will append the search to the content path instead of changing the path and bringing up the search page e.g.  `localhost:9090/content/search?term=foo` instead of `localhost:9090/search?term=foo` This is caused by the dynamic route `:id`.\r\n\r\n### Solution\r\nPrepend `/` to the path string in the object you pass to `router.push()` as shown below with `/search`.\r\n\r\n**Search:**\r\n```\r\n<input \r\n   type=\"search\"\r\n   name=\"q\"\r\n   v-on:keydown.enter.prevent=\"search()\"\r\n   v-model=\"query\">\r\n...\r\nsearch() {\r\n   router.push({path: '/search', query: {term: this.query} })\r\n}\r\n...\r\n```\r\n\r\n**Content:**\r\n```\r\n<template>\r\n   <Search></Search>\r\n</template>\r\n...\r\n```\r\n\r\n**Router:**\r\n```\r\nexport default new Router({\r\n\tmode: 'history',\r\n\tbase: process.env.BASE_URL,\r\n\troutes: [\r\n           {\r\n              path: '/content/:id',\r\n              name: 'content',\r\n              component: () => import('./views/Content.vue')\r\n           },\r\n           {\r\n              path: '/search',\r\n              name: 'search',\r\n              component: () => import('./views/Search.vue')\r\n           }\r\n        ]\r\n})\r\n```","Url":"https://github.com/vuejs/vue-router/issues/2631","RelatedDescription":"Closed issue \"Dynamic Route Appending Query\" (#2631)"},{"Id":"415105366","IsPullRequest":false,"CreatedAt":"2019-02-27T13:02:35","Actor":"Ihor-Shevtsov","Number":"2629","RawContent":null,"Title":"Components for child routes doesn't show","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codepen.io/ih-shevtsov/pen/ywNVEe](https://codepen.io/ih-shevtsov/pen/ywNVEe)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Click on \"Go to nested route 1\" -> route changed to  /home/nested-route-1\r\n2. Click on \"Go to nested route 2\" -> route changed to  /home/nested-route-2\r\n\r\n### What is expected?\r\nComponents for specific child route must be shown. \r\n\r\n### What is actually happening?\r\nComponents for child routes doesn't show. It is works only for \"parent\" route.\r\n\r\n---\r\nI tried to research this issue in router's code. Seems like incorrect router depth for any reason (https://github.com/vuejs/vue-router/blob/v3.0.2/dist/vue-router.esm.js#L58-L69)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2629","RelatedDescription":"Closed issue \"Components for child routes doesn't show\" (#2629)"},{"Id":"415107355","IsPullRequest":false,"CreatedAt":"2019-02-27T12:58:08","Actor":"yangzhuq","Number":"2630","RawContent":null,"Title":"关于router用query传参时的格式问题","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://jsbin.com/yujepuwamo/edit?html](https://jsbin.com/yujepuwamo/edit?html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n当使用 如下方法传递参数时\r\n this.$router.push({\r\n        path: \"/xxx\",\r\n        query: {\r\n          id: “yyy”\r\n        }\r\n      });\r\n\r\n### What is expected?\r\n按照URL的标准格式 将会跳转至如下格式\r\nscheme://host:port/path?id=yyy/#/xxx\r\n\r\n### What is actually happening?\r\n然而生成路径时是如下格式\r\nscheme://host:port/path/#/xxx?id=yyy\r\n\r\n---\r\n这样的结果是在URL不符合路径传参的规则，当然这不影响用 this.$route.query的方法拿到所要传递的参数。但是当用window.location.search的方法时会发现参数被存放在hash的内容了。是否能统一格式呢？\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2630","RelatedDescription":"Closed issue \"关于router用query传参时的格式问题\" (#2630)"},{"Id":"415008055","IsPullRequest":false,"CreatedAt":"2019-02-27T08:58:42","Actor":"piotrek-horodenski","Number":"2628","RawContent":null,"Title":"query string parameters disappears when pasting url to the browser","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/6motza4y/1/](https://jsfiddle.net/6motza4y/1/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. prepare components and routing with nested route\r\n2. run app\r\n3. paste absolute url into the browser with query parameters added to the path to the nested route\r\n4. query params disappears and are not accessible thru `$route` object\r\n\r\n### What is expected?\r\nquery params should endure\r\n\r\n### What is actually happening?\r\nquery params are lost\r\n\r\n---\r\njsfiddle doesn't enable navigating to it by pasting query params to the url, so it should be reproduced locally\r\n\r\nThis does not occur when route path is not nested\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2628","RelatedDescription":"Closed issue \"query string parameters disappears when pasting url to the browser\" (#2628)"},{"Id":"414969564","IsPullRequest":false,"CreatedAt":"2019-02-27T08:26:43","Actor":"zhuxianbin","Number":"2627","RawContent":null,"Title":"希望vue-router能支持查询跳转后的地址","State":"closed","Body":"### What problem does this feature solve?\r\nrouter 通过 与 push 一样的方式 不进行跳转而获取一个预跳转地址,与push的地址保持一致性;\r\n可解决用于hybrid 开发模式中,A页面打开新窗口到B页面的代码书写不优雅问题;\r\n\r\n### What does the proposed API look like?\r\nconst url  =  this.$router.query({name:\"namespace.one.two\",params:{id:1001,type:\"default\"}})\r\nor\r\nconst url  =  this.$router.push({},{prevent:true}) // Options\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2627","RelatedDescription":"Closed issue \"希望vue-router能支持查询跳转后的地址\" (#2627)"},{"Id":"414339555","IsPullRequest":false,"CreatedAt":"2019-02-25T22:34:12","Actor":"olavoasantos","Number":"2626","RawContent":null,"Title":"Convert RouterLink to functional component","State":"closed","Body":"### What problem does this feature solve?\r\nAs this is a simple component which doesn't use state and can be used in several places on the application, the conversion to a functional component could generate performance improvements for the application.\r\n\r\n### What does the proposed API look like?\r\nThe RouterLink component API would not change. The conversion can easily be done by modifying the `./src/components/link.js` component to:\r\n\r\n```js\r\nexport default {\r\n  name: 'RouterLink',\r\n  props: { /**...*/ },\r\n  functional: true,\r\n  render (h, { parent, props, children }) {\r\n    const router = parent.$router\r\n    const current = parent.$route\r\n    const { location, route, href } = router.resolve(props.to, current, props.append)\r\n\r\n    const classes = {}\r\n    const globalActiveClass = router.options.linkActiveClass\r\n    const globalExactActiveClass = router.options.linkExactActiveClass\r\n\r\n    const activeClassFallback = globalActiveClass == null\r\n      ? 'router-link-active'\r\n      : globalActiveClass\r\n    const exactActiveClassFallback = globalExactActiveClass == null\r\n      ? 'router-link-exact-active'\r\n      : globalExactActiveClass\r\n    const activeClass = props.activeClass == null\r\n      ? activeClassFallback\r\n      : props.activeClass\r\n    const exactActiveClass = props.exactActiveClass == null\r\n      ? exactActiveClassFallback\r\n      : props.exactActiveClass\r\n    const compareTarget = location.path\r\n      ? createRoute(null, location, null, router)\r\n      : route\r\n\r\n    classes[exactActiveClass] = isSameRoute(current, compareTarget)\r\n    classes[activeClass] = props.exact\r\n      ? classes[exactActiveClass]\r\n      : isIncludedRoute(current, compareTarget)\r\n\r\n    const handler = e => {\r\n      if (guardEvent(e)) {\r\n        if (props.replace) {\r\n          router.replace(location)\r\n        } else {\r\n          router.push(location)\r\n        }\r\n      }\r\n    }\r\n\r\n    const on = { click: guardEvent }\r\n    if (Array.isArray(props.event)) {\r\n      props.event.forEach(e => { on[e] = handler })\r\n    } else {\r\n      on[props.event] = handler\r\n    }\r\n\r\n    const data = {\r\n      class: classes\r\n    }\r\n\r\n    if (props.tag === 'a') {\r\n      data.on = on\r\n      data.attrs = { href }\r\n    } else {\r\n      const a = findAnchor(children)\r\n      if (a) {\r\n        a.isStatic = false\r\n        const aData = a.data = extend({}, a.data)\r\n        aData.on = on\r\n        const aAttrs = a.data.attrs = extend({}, a.data.attrs)\r\n        aAttrs.href = href\r\n      } else {\r\n        data.on = on\r\n      }\r\n    }\r\n\r\n    return h(props.tag, data, children)\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2626","RelatedDescription":"Closed issue \"Convert RouterLink to functional component\" (#2626)"},{"Id":"413996035","IsPullRequest":true,"CreatedAt":"2019-02-25T08:57:22","Actor":"gekowa","Number":"2625","RawContent":null,"Title":"修正大小写","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2625","RelatedDescription":"Open PR \"修正大小写\" (#2625)"},{"Id":"413413328","IsPullRequest":true,"CreatedAt":"2019-02-22T19:52:35","Actor":"delenamalan","Number":"2623","RawContent":null,"Title":"docs: Fix small grammatical error in redirect-and-alias","State":"closed","Body":"\"A redirect means when the user visits `/a`, **and** URL will be replaced by `/b`\" so I replace the **and** with **the**.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2623","RelatedDescription":"Closed or merged PR \"docs: Fix small grammatical error in redirect-and-alias\" (#2623)"},{"Id":"413417885","IsPullRequest":false,"CreatedAt":"2019-02-22T14:04:51","Actor":"nirmalraghavan","Number":"2624","RawContent":null,"Title":"Not able to update query parameter from navigation guard","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/nr0m1vw7/](https://jsfiddle.net/nr0m1vw7/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nInside `beforeEnter` try to modify query parameters by passing `next({ query: {'my-param': 'new-value'} })`\r\n\r\n### What is expected?\r\nQuery parameter will be updated with the new value and the URL will also update.\r\n\r\n### What is actually happening?\r\nURL still having the same old value for `my-param`.\r\n\r\n---\r\nEven though the query parameter value is not updated in the URL, `this.$route.query['my-param']` value is updated with the new value.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2624","RelatedDescription":"Open issue \"Not able to update query parameter from navigation guard\" (#2624)"},{"Id":"412225670","IsPullRequest":false,"CreatedAt":"2019-02-22T13:37:10","Actor":"iGarym","Number":"2617","RawContent":null,"Title":"Reserve optional dynamic parameters?","State":"closed","Body":"### What problem does this feature solve?\r\nrepo: [jsfiddle](https://jsfiddle.net/zcgj5Lh4/)\r\n\r\nWhen using `router-link` to navigate, the optional dynamic parameter `moduleId` is missing. In order to retain the parameters, we must manually provide the parameter or use router hooks. Non-optional parameters do not have this problem. Can we reserve the optional parameters when navigate?\r\n\r\n******\r\n\r\n使用 `router-link` 跳转时，可选的动态参数 `moduleId` 丢失了。为了保留参数，需要手动传参或者在路由钩子里处理。非可选的参数不会有这个问题，所以能否在跳转的时候保留可选的参数呢？\r\n\r\n### What does the proposed API look like?\r\nNo new api.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2617","RelatedDescription":"Closed issue \"Reserve optional dynamic parameters?\" (#2617)"},{"Id":"413249173","IsPullRequest":false,"CreatedAt":"2019-02-22T13:25:21","Actor":"hzsrc","Number":"2622","RawContent":null,"Title":"The addRoutes  method need to suport  adding dynamic routes as children to an existing route","State":"closed","Body":"### What problem does this feature solve?\r\nThe addRoutes method currently only suport add new routes to root routes.  But if can not add routes as children to an existing route.\r\n\r\n\r\n### What does the proposed API look like?\r\nrouter.addRoutes(routes: Array<RouteConfig>, parent ? : Location)\r\n\r\nLike:\r\nrouter.addRoutes([...childRoutes],  '/main')\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2622","RelatedDescription":"Closed issue \"The addRoutes  method need to suport  adding dynamic routes as children to an existing route\" (#2622)"},{"Id":"413135990","IsPullRequest":true,"CreatedAt":"2019-02-21T21:39:55","Actor":"pRizz","Number":"2621","RawContent":null,"Title":"chore: ignore WebStorm IDE files","State":"open","Body":"","Url":"https://github.com/vuejs/vue-router/pull/2621","RelatedDescription":"Open PR \"chore: ignore WebStorm IDE files\" (#2621)"},{"Id":"413134137","IsPullRequest":true,"CreatedAt":"2019-02-21T21:34:52","Actor":"pRizz","Number":"2620","RawContent":null,"Title":"docs: simplify installing from GitHub","State":"open","Body":"Simplify the docs for installing dev from GutHub","Url":"https://github.com/vuejs/vue-router/pull/2620","RelatedDescription":"Open PR \"docs: simplify installing from GitHub\" (#2620)"},{"Id":"412828239","IsPullRequest":false,"CreatedAt":"2019-02-21T09:33:13","Actor":"FF128","Number":"2619","RawContent":null,"Title":"Allow nested routes in middleware","State":"closed","Body":"Hello, i want to allow these paths with parameter. But this redirected me to login (next(\"/login\"))\r\n\r\n![image](https://user-images.githubusercontent.com/46515242/53158233-1ada7300-35fe-11e9-9477-36427a727cec.png)\r\n\r\n![image](https://user-images.githubusercontent.com/46515242/53158282-32196080-35fe-11e9-8bfa-06e51b4c1c88.png)\r\n","Url":"https://github.com/vuejs/vue-router/issues/2619","RelatedDescription":"Closed issue \"Allow nested routes in middleware\" (#2619)"},{"Id":"412230262","IsPullRequest":false,"CreatedAt":"2019-02-20T03:40:22","Actor":"esappear","Number":"2618","RawContent":null,"Title":"Memory leak when calling this.$router.replace in the created hook","State":"closed","Body":"### Version: 3.0.2\r\n### Code \r\n```vue\r\n<template>\r\n</template>\r\n<script>\r\nexport default {\r\n  created() {\r\n    this.$router.replace({\r\n      name: 'bro'\r\n    });\r\n  }\r\n}\r\n</script>\r\n```\r\nAs the title says, when calling `this.$router.replace` in the created hook, it leads to memory leak.\r\nWhen debugging on poll method in `vue-router.common.js` as below, poll methods calls in an infinite loop.\r\n```js\r\nfunction poll (\r\n  cb, // somehow flow cannot infer this is a function\r\n  instances,\r\n  key,\r\n  isValid\r\n) {\r\n  if (\r\n    instances[key] &&\r\n    !instances[key]._isBeingDestroyed // do not reuse being destroyed instance\r\n  ) {\r\n    cb(instances[key]);\r\n  } else if (isValid()) {\r\n    setTimeout(function () {\r\n      console.log('poll: ', instances, key, isValid());\r\n      poll(cb, instances, key, isValid);\r\n    }, 16);\r\n  }\r\n}\r\n```\r\nThough I should not call `this.$router.replace` in created hook on SSR, I wonder why.","Url":"https://github.com/vuejs/vue-router/issues/2618","RelatedDescription":"Closed issue \"Memory leak when calling this.$router.replace in the created hook\" (#2618)"},{"Id":"411279663","IsPullRequest":false,"CreatedAt":"2019-02-18T09:04:18","Actor":"wangjingf","Number":"2616","RawContent":null,"Title":"dynamic routing support","State":"closed","Body":"### What problem does this feature solve?\r\ndynamic routing like react-router-v4\r\n\r\n### What does the proposed API look like?\r\nAre there plans to upgrade vue-router to dynamic routing (like react-router-v4)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2616","RelatedDescription":"Closed issue \"dynamic routing support\" (#2616)"},{"Id":"409708492","IsPullRequest":false,"CreatedAt":"2019-02-13T09:50:24","Actor":"hwlv","Number":"2615","RawContent":null,"Title":"https://router.vuejs.org/   can't open ","State":"closed","Body":"### Version\r\n2.6.0\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/ ](https://router.vuejs.org/ )\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nhttps://router.vuejs.org/   can't open \r\n\r\n### What is expected?\r\nWeb page display normally\r\n\r\n### What is actually happening?\r\nWeb page display exception\r\n\r\n---\r\nPlease repair it as soon as possible.  It's seriously\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2615","RelatedDescription":"Closed issue \"https://router.vuejs.org/   can't open \" (#2615)"},{"Id":"409503817","IsPullRequest":false,"CreatedAt":"2019-02-13T09:40:46","Actor":"smellyshovel","Number":"2614","RawContent":null,"Title":"beforeRouteUpdate fires when it must not if is used with cyrillic symbols","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/rmnq4605oo](https://codesandbox.io/s/rmnq4605oo)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Add the following to the path (right in the browser preview): \"fm/русский\"\r\n\r\n    The address bar should now look something like this: `https://rmnq4605oo.codesandbox.io/fm/русский`\r\n\r\n1. Click enter so to pretend that it's router's initial state (without any previous navigation via vue-router (because the page actually gets reloaded and vue-router isn't involved in this))\r\n\r\n1. Open the console (F12)\r\n\r\n1. Double-click the \"русский\" word\r\n\r\n### What is expected?\r\nThe `beforeRouteUpdate` must not be fired.\r\n\r\n### What is actually happening?\r\nIt actually gets fired. As far as I understand it happens because \"русский\" gets substituted with \"%D1%80%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9\" as you can see from the console output.\r\n\r\n---\r\nDon't know if it's only due to cyrillic symbols, but I'm pretty sure that it's expected for all the non-ascii charecters.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2614","RelatedDescription":"Closed issue \"beforeRouteUpdate fires when it must not if is used with cyrillic symbols\" (#2614)"},{"Id":"409272152","IsPullRequest":false,"CreatedAt":"2019-02-12T12:48:28","Actor":"GHakopian","Number":"2613","RawContent":null,"Title":"// makes route invalid","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/jzr5nojn39](https://codesandbox.io/s/jzr5nojn39)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nwhen in history mode with a basePath setup,\r\nnavigating to server:123/basePath/subPath navigates to the right component\r\nbut if you add an extra / after server:234, \r\nnavigating to server:123//basePath/subPath returns 404 \r\n\r\n\r\n### What is expected?\r\nnavigating to server//basePath/subPathnavigates to configured component\r\n\r\n### What is actually happening?\r\nnavigating to server:123//basePath/subPath returns 404 \r\n\r\n---\r\nIs this a bug? i think the extra / should not change the end route, this is an issue in my case as my legacy backend application can redirect with an extra / at random. if this is intended can we then add something like \"*/basePath\" to only consider the path starting from basePath.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2613","RelatedDescription":"Closed issue \"// makes route invalid\" (#2613)"},{"Id":"408907359","IsPullRequest":false,"CreatedAt":"2019-02-11T18:04:42","Actor":"wadetandy","Number":"2612","RawContent":null,"Title":"v-if/else Causes incorrect router-link to be followed when conditional changes","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/q3mp33l879](https://codesandbox.io/s/q3mp33l879)\r\n\r\n### Steps to reproduce\r\n- Observe the navigation has links for \"Register\" and \"Sign In\"\r\n- Click the \"Sign In\" link\r\n- Click \"click here to sign in\" on the page\r\n- Observe the navigation will change to a \"signed in\" state with \"User Profile\" and \"Sign Out\" links\r\n- Click the \"User Profile\" or \"Sign Out\" links\r\n\r\n### What is expected?\r\nIf clicking \"User Profile\", the page should change to `/profile` and have the text \"hello user\"\r\nIf clicking \"Sign Out\", the page should change to `/sign_out` and be a sign out placeholder page\r\n\r\n### What is actually happening?\r\nIf clicking \"User Profile\", the page changes to `/register` and loads the corresponding component\r\nIf clicking \"Sign Out\", the page should change to `/sign_in` and loads the corresponding component\r\n\r\nIt seems the navigation link elements are not being replaced when the conditional flips, but instead the inner html is being switched out.  This causes the original click handlers to be preserved on each link, which results in the \"signed in\" links firing the click handlers of the element that corresponded to its position in the list for the \"signed out\" path.\r\n\r\n---\r\nThis may be a core vue runtime bug, but since I have run into the issue only with `router-link` I opened it here.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2612","RelatedDescription":"Open issue \"v-if/else Causes incorrect router-link to be followed when conditional changes\" (#2612)"},{"Id":"408448967","IsPullRequest":false,"CreatedAt":"2019-02-09T17:00:16","Actor":"stevenadams","Number":"2611","RawContent":null,"Title":"Support for activeStyle and exactActiveStyle","State":"open","Body":"### What problem does this feature solve?\r\nComing from React and using React Router, there is support for activeStyle property. Like activeClass but a style object of styles to apply to an element when active. This helps for things like theming where the theme color is plucked from store and needs to be applied to an element when active.\r\n\r\n### What does the proposed API look like?\r\ntakes a prop activeStyle and exactActiveStyle, both type object, works identically to activeClass and exactActiveClass\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2611","RelatedDescription":"Open issue \"Support for activeStyle and exactActiveStyle\" (#2611)"},{"Id":"408321425","IsPullRequest":false,"CreatedAt":"2019-02-08T21:31:14","Actor":"CarlosOnline","Number":"2610","RawContent":null,"Title":"Dynamic route doesn't work if route parameter contains a dot followed by text.","State":"closed","Body":"### Version\r\n2.5.1\r\n\r\n### Reproduction link\r\n[https://github.com/CarlosOnline/VueRouterBug.git](https://github.com/CarlosOnline/VueRouterBug.git)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nCreate a route with dynamic route parameter **:lab**\r\n\r\n* Start app\r\n* Navigate to MyView/**Foo** which works\r\n* Navigate to MyVew/**Number.1234** does not work\r\n\r\n\r\n\r\n```\r\n{\r\n    path: '/MyView/:lab',\r\n    component: MyView,\r\n    display: 'MyView',\r\n    meta: { title: 'MyView' }\r\n},\r\n```\r\n\r\n\r\n### What is expected?\r\nNavigate to route with dynamic parameter when no \r\n\r\n### What is actually happening?\r\nRoute is not found\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2610","RelatedDescription":"Closed issue \"Dynamic route doesn't work if route parameter contains a dot followed by text.\" (#2610)"},{"Id":"408298160","IsPullRequest":true,"CreatedAt":"2019-02-08T19:46:53","Actor":"lyonsbp","Number":"2609","RawContent":null,"Title":"Add example showing how to get HTML5 history mode working with Flask.","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2609","RelatedDescription":"Open PR \"Add example showing how to get HTML5 history mode working with Flask.\" (#2609)"},{"Id":"408267010","IsPullRequest":false,"CreatedAt":"2019-02-08T19:10:04","Actor":"jbmikk","Number":"2608","RawContent":null,"Title":"Improve function mode props with route-view attributes","State":"closed","Body":"### What problem does this feature solve?\r\nWhen passing props to the `router-view` all routed components are forced to implement the same interface if they want to use the data provided by the `router-view`.\r\n\r\nWe usually use the props as a way of avoiding coupling the components to the router. The components simply receive the props and they are not aware they come from the URL.\r\n\r\nI think it would be useful if we could decouple the components from the router-view, just the way we decouple them from the URL.\r\nI think being able to map the router-view attributes to the desired component props is more appropriate and lets our components expose the interface they need to expose, rather than the interface imposed by the router-view.\r\n\r\nI think the right place for solving this problem is the route's function mode props.\r\n\r\n### What does the proposed API look like?\r\nThe router view passes down a couple of parameters as usual:\r\n\r\n    <router-view :param1=\"value1\" :param2=\"value2\"></router-view>\r\n\r\nThe function maps the props both from the route's URL and also the `router-view` attributes.\r\nIt can also resolve conflict names between URL parameters and view parameters and determine which parameter is more important in each case.\r\n\r\n    {\r\n      path: '/test',\r\n      component: Test,\r\n      props: (route, view) => {\r\n        return {\r\n          query: route.query.q\r\n          paramA: view.attrs.param1,\r\n          paramB: view.attrs.param2 || route.query.param2\r\n        }\r\n      }\r\n    } \r\n\r\nI have done some tests with the router's code and it seems to work fine.\r\n\r\nI would like to have some feedback from the community. It is a fairly simple change. We should make sure this doesn't have any unwanted side effects, it's backwards compatible and there isn't a better way to do it.\r\n\r\nHere's a branch with a test I made and it worked for me: https://github.com/jbmikk/vue-router/commits/view-parameter-for-props\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2608","RelatedDescription":"Closed issue \"Improve function mode props with route-view attributes\" (#2608)"},{"Id":"408176071","IsPullRequest":false,"CreatedAt":"2019-02-08T14:30:15","Actor":"rocka","Number":"2607","RawContent":null,"Title":"abstract mode's router.back() was aborted when there are 2 same routes in history stack","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Rocka/bhu5vkn8/3/](https://jsfiddle.net/Rocka/bhu5vkn8/3/)\r\n\r\n### Steps to reproduce\r\n1. Click `10. artist`\r\n2. Hit button `togglePlayer`\r\n3. Click `10. artist`\r\n4. Hit button `back` 2 times\r\n\r\n### What is expected?\r\nroute back to `/search`\r\n\r\n### What is actually happening?\r\nnothing happend, route and route-view do not change\r\n\r\n---\r\n'cause I didn't figure out how to determine wether the route is going forward or backword, I decided to use `abstract` mode and traverse the router stack to find out which direction the route is going, then hit into this bug. The demo works fine if change router's mode to `hash` or `history`.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2607","RelatedDescription":"Open issue \"abstract mode's router.back() was aborted when there are 2 same routes in history stack\" (#2607)"},{"Id":"407467218","IsPullRequest":false,"CreatedAt":"2019-02-06T22:49:21","Actor":"ronald-d-rogers","Number":"2606","RawContent":null,"Title":"SSR memory leak in poll method","State":"open","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/ronald_d_rogers/5mxdpkLj/2/](https://jsfiddle.net/ronald_d_rogers/5mxdpkLj/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nMake `router-view` appearance conditional based on some variable (or simply have it not appear):\r\n```html\r\n<div id=\"app\">\r\n  <div v-if=\"condition\">\r\n    <router-view />\r\n  </div>\r\n</div>\r\n```\r\n\r\nEnsure that the component that matches the route has a `beforeRouteEnter` guard, where a function is passed to the `next(...)` method (e.g. `next(vm => {}`):\r\n```es6\r\nexport default {\r\n  beforeRouteEnter(to, from, next) {\r\n    // Poll happens only if you pass in a function to next(...)\r\n    next(vm => {})\r\n  }\r\n}\r\n```\r\n\r\nVisit that route.\r\n```sh\r\ncurl http://localhost:8080/route\r\n```\r\n\r\nA poll will happen infinitely until `router-view` is created.\r\n\r\nIn a typical SSR application where an app is created per request, it will never be created. \r\nThe end result is a memory leak with an event loop filled with poll's every 16ms.\r\n\r\nIn the reproduction JS Fiddle, a leak occurs every time you press the `SSR Request` button.\r\nIf you set `dontLeak` to true, the leak stops.\r\n\r\nThe leak can be verified in the JS Fiddle by clicking on the `SSR Request` button a few times (say 20 times), opening Chrome Developer Tools, going to the Performance tab, and in the recording looking at the contents of \"Frame\".\r\n\r\n![capture](https://user-images.githubusercontent.com/4047399/52432208-e338da80-2ad7-11e9-9632-7e56eb414e3b.JPG)\r\n\r\nHere is an example repo as well:\r\nhttps://github.com/ronald-d-rogers/vue-router-ssr-memory-leak\r\n\r\n### What is expected?\r\nA new poll does not recurse infinitely for every SSR request.\r\n\r\n### What is actually happening?\r\nA new poll recurses infinitely for every SSR request.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2606","RelatedDescription":"Open issue \"SSR memory leak in poll method\" (#2606)"},{"Id":"406924907","IsPullRequest":false,"CreatedAt":"2019-02-05T21:14:03","Actor":"soyersoyer","Number":"2605","RawContent":null,"Title":"Typescript: `Location` interface typing for query should include null","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://router.vuejs.org/guide/essentials/navigation.html](https://router.vuejs.org/guide/essentials/navigation.html)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWhen programmatically navigating on vue router, pass through a dictionary with a param as null. E.g.\r\n\r\n```json\r\n{\r\n  \"foo\": null\r\n}\r\n```\r\n\r\n### What is expected?\r\nTypes are expected to work.\r\nThe url should be ?foo.\r\n\r\n### What is actually happening?\r\nIt works, but with an error:\r\n\r\nType '{ foo: null; }' is not assignable to type 'Dictionary<string | string[]>'.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2605","RelatedDescription":"Closed issue \"Typescript: `Location` interface typing for query should include null\" (#2605)"},{"Id":"406758040","IsPullRequest":false,"CreatedAt":"2019-02-05T12:26:27","Actor":"pikax","Number":"2604","RawContent":null,"Title":"Passing new params to the current route when props=true, doesn't update router-view","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/k50j5wn8or](https://codesandbox.io/s/k50j5wn8or)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- set mode to history\r\n- Add a route with `props: true` \r\n- Add props to that route component\r\n- App.vue beforeMount, add a `router.replace` or `router.push` with a the route `name` and `params` object.\r\n- If the route path is the same as the current route, it won't update the route\r\n\r\n### What is expected?\r\nUpdating the component props down based on params\r\n\r\n### What is actually happening?\r\nroute component defaults props\r\n\r\n---\r\nNot sure if this is the expected behaviour, even using ` <router-view :key=\"$route.fullPath\"></router-view>` doesn't do much because of the `params` don't affect the path.\r\n\r\nEncounter this when sending the app to `Error` page with custom props but when I refreshed was getting the expected values or times no props being passed.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2604","RelatedDescription":"Closed issue \"Passing new params to the current route when props=true, doesn't update router-view\" (#2604)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"402616222","IsPullRequest":false,"CreatedAt":"2019-02-23T15:30:03","Actor":"super918180","Number":"1493","RawContent":null,"Title":"I can't export all state from namespace module, I can only export one by one.","State":"closed","Body":"### What problem does this feature solve?\r\nuse mapState with namespace and no state params expprt all state in namespace\r\n\r\n### What does the proposed API look like?\r\nmapState('namespace')\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1493","RelatedDescription":"Closed issue \"I can't export all state from namespace module, I can only export one by one.\" (#1493)"},{"Id":"410330210","IsPullRequest":false,"CreatedAt":"2019-02-23T15:17:55","Actor":"djam90","Number":"1509","RawContent":null,"Title":"Unit tests do not run when importing router into store and store into router","State":"closed","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/djam90/vuex-vue-router-issue](https://github.com/djam90/vuex-vue-router-issue)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRun `npm run test:unit` and see the failure. To get the tests to run again, do not import the store into the router and the router into the store.\r\n\r\n### What is expected?\r\nThe tests should run fine and circular imports should work. They *DO* work in the browser just not in Mocha testing environment. \r\n\r\n### What is actually happening?\r\nError as follows:\r\n\r\n```\r\nTypeError: Cannot read property 'getters' of undefined\r\n    at /home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:261:1\r\n    at Array.forEach (<anonymous>)\r\n    at assertRawModule (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:260:1)\r\n    at ModuleCollection.register (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:186:1)\r\n    at /home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:200:1\r\n    at /home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:75:1\r\n    at Array.forEach (<anonymous>)\r\n    at forEachValue (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:75:1)\r\n    at ModuleCollection.register (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:199:1)\r\n    at new ModuleCollection (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:160:1)\r\n    at new Store (/home/dan/code/vuex-router-issue/dist/webpack:/node_modules/vuex/dist/vuex.esm.js:311:1)\r\n```\r\n\r\n---\r\nMy VueX store needs to be able to import the router so it can do routing things like navigate to another page.\r\nMy router needs to be able to access state from VueX to determine what to do in a `router.beforeEach` handler.\r\n\r\nI have asked for help on Stack Overflow:\r\nhttps://stackoverflow.com/questions/54691789/unable-to-import-vuex-store-into-router-and-router-into-store-in-mocha-tests\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1509","RelatedDescription":"Closed issue \"Unit tests do not run when importing router into store and store into router\" (#1509)"},{"Id":"413266987","IsPullRequest":true,"CreatedAt":"2019-02-22T06:49:03","Actor":"jennyliang220","Number":"1514","RawContent":null,"Title":"doc: change ECMASCript into ECMAScript","State":"open","Body":"![image](https://user-images.githubusercontent.com/8498677/53224814-fa1f2580-36b0-11e9-8f4c-28f387d6161b.png)\r\n","Url":"https://github.com/vuejs/vuex/pull/1514","RelatedDescription":"Open PR \"doc: change ECMASCript into ECMAScript\" (#1514)"},{"Id":"412632780","IsPullRequest":true,"CreatedAt":"2019-02-21T19:16:28","Actor":"perborgen","Number":"1512","RawContent":null,"Title":"Added Scrimba lessons","State":"closed","Body":"Here are the Scrimba lessons localized and with an `override.styl` file for the styling. Did I do it right?","Url":"https://github.com/vuejs/vuex/pull/1512","RelatedDescription":"Closed or merged PR \"Added Scrimba lessons\" (#1512)"},{"Id":"412637975","IsPullRequest":false,"CreatedAt":"2019-02-20T21:31:16","Actor":"tleeaf","Number":"1513","RawContent":null,"Title":"Naming store state array 'queue' results in one dropped array member","State":"closed","Body":"I named one of my store state members 'queue', which resulted in unexpected behavior, namely that one member of the array would disappear when testing the app in-browser. This occurs independently of any other actions or mutations. I confirmed this by checking the result in vue devtools for chrome, in the vuex tab, and also by adding a v-for that produced simple tags dependent on the data in the 'queue' array.\r\n\r\n`export const store = new Vuex.Store({\r\n  state: {\r\n     queue: [ \r\n      {id: 1333333333}, //one of these members will be dropped \r\n      {id: 1222222222},\r\n      {id: 1111111111}\r\n    ],\r\n    vocabulary: [],\r\n    lessons: [],    \r\n  },\r\n  mutations, actions, getters\r\n})`","Url":"https://github.com/vuejs/vuex/issues/1513","RelatedDescription":"Closed issue \"Naming store state array 'queue' results in one dropped array member\" (#1513)"},{"Id":"409173630","IsPullRequest":false,"CreatedAt":"2019-02-18T18:56:17","Actor":"visualjerk","Number":"1505","RawContent":null,"Title":"Infinite Loop With Error Handler And Vuex","State":"closed","Body":"### Version\r\n2.5.0\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/z6ww1zp2q4](https://codesandbox.io/s/z6ww1zp2q4)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n- open browser console\r\n\r\n### What is expected?\r\nNot getting an infinite render loop:\r\n[Vue warn]: You may have an infinite update loop in a component render function.\r\n\r\n### What is actually happening?\r\nGetting an infinite render loop\r\n\r\n---\r\nThis happens when you handle an error that was caused during rendering and try to commit it to the store.\r\n\r\nIt looks like a component that throws an error tries to rerender after the store is updated, even so it doesn't use the store's state.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1505","RelatedDescription":"Closed issue \"Infinite Loop With Error Handler And Vuex\" (#1505)"},{"Id":"411557104","IsPullRequest":true,"CreatedAt":"2019-02-18T17:28:27","Actor":"Jinjiang","Number":"1511","RawContent":null,"Title":"docs(zh): update","State":"closed","Body":"Ref: https://github.com/vuejs/vuex/compare/a6973fa...31e4fbc\r\n/ping @Justineo","Url":"https://github.com/vuejs/vuex/pull/1511","RelatedDescription":"Closed or merged PR \"docs(zh): update\" (#1511)"},{"Id":"411250556","IsPullRequest":true,"CreatedAt":"2019-02-17T23:34:11","Actor":"brophdawg11","Number":"1510","RawContent":null,"Title":"Add support for namespace functions in mapXXX helpers","State":"open","Body":"This is a stab at adding the functionality requested by https://github.com/vuejs/vuex/issues/863.\r\n\r\nI also noticed that there was another attempt at this in https://github.com/vuejs/vuex/pull/924, but the diff seems to be beyond the scope of just the change.\r\n\r\nUnit tests have been added, but no changes have yet been made to TypeScript types or documentation, etc.","Url":"https://github.com/vuejs/vuex/pull/1510","RelatedDescription":"Open PR \"Add support for namespace functions in mapXXX helpers\" (#1510)"},{"Id":"410145165","IsPullRequest":true,"CreatedAt":"2019-02-14T06:15:56","Actor":"parth67","Number":"1508","RawContent":null,"Title":"Fixed issue#1507 : Memory leak happening while using registerModule/u…","State":"open","Body":"Fixes #1507 \r\n\r\nClosure function was fixed with helper function partial which doesn't retain oldVm in environment.","Url":"https://github.com/vuejs/vuex/pull/1508","RelatedDescription":"Open PR \"Fixed issue#1507 : Memory leak happening while using registerModule/u…\" (#1508)"},{"Id":"404581823","IsPullRequest":true,"CreatedAt":"2019-02-13T15:23:18","Actor":"magicdawn","Number":"1496","RawContent":null,"Title":"support jsdelivr npm cdn like vue package does","State":"closed","Body":"see difference here:\r\n\r\n- https://cdn.jsdelivr.net/npm/vue/package.json\r\n- https://cdn.jsdelivr.net/npm/vuex/package.json","Url":"https://github.com/vuejs/vuex/pull/1496","RelatedDescription":"Closed or merged PR \"support jsdelivr npm cdn like vue package does\" (#1496)"},{"Id":"406055885","IsPullRequest":true,"CreatedAt":"2019-02-13T15:21:16","Actor":"tuxinghuan","Number":"1501","RawContent":null,"Title":"docs(zh):fix a small typo","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1501","RelatedDescription":"Closed or merged PR \"docs(zh):fix a small typo\" (#1501)"},{"Id":"409797501","IsPullRequest":false,"CreatedAt":"2019-02-13T13:09:45","Actor":"skkart","Number":"1507","RawContent":null,"Title":"Memory leak happening while using registerModule/unregisterModule.","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mrj8spu0/](https://jsfiddle.net/mrj8spu0/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Open the JSFiddle link mentioned as part of this issue.\r\n2. Check and record the heap memory in the browser on initial stage.\r\n3. Click on the \"Register\" button to dynamically register Module B 100 times\r\n4. Now we will see an increase in heap memory on account of registering module 100 times.\r\n5. Click on \"Un-Register\" button to dynamically un-register Module B 100 times\r\n6. Check the heap memory again, at this point will see an jump in memory usage on account of un-registering 100 module. \r\n\r\n### What is expected?\r\nHeap memory generated on step 3 & 5 must be cleared after step 6. (Final stage)\r\n\r\n### What is actually happening?\r\nHeap memory of the browser is not getting cleared.\r\n\r\n---\r\nWe are observing memory leak of Store._vm while using registerModule/unregisterModule extensively.\r\nOn heap profiling we found that the oldVm instance is not getting garbage collected.\r\n\r\nProbable Solution:\r\nDe-reference the oldVm instance on the same function scope where its getting instantiated (i.e. resetStoreVM() )\r\n\r\nThe above can be achieved by adding following code inside resetStoreVM function.\r\n\r\noldVm.$destroy(); \r\noldVm = null; // This is the missing code\r\n\r\nAttached google chrome (V 72.0.3626.96) heap snapshot and file.\r\n![heapsnapshot](https://user-images.githubusercontent.com/38841241/52727462-4ac0bf80-2fdb-11e9-91ce-7dd012cba4b5.png)\r\n\r\n[Heap-20190213T220212.heaptimeline.zip](https://github.com/vuejs/vuex/files/2861246/Heap-20190213T220212.heaptimeline.zip)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1507","RelatedDescription":"Open issue \"Memory leak happening while using registerModule/unregisterModule.\" (#1507)"},{"Id":"409792179","IsPullRequest":false,"CreatedAt":"2019-02-13T12:56:14","Actor":"skkart","Number":"1506","RawContent":null,"Title":"Memory leak happening while using registerModule/unregisterModule.","State":"closed","Body":"We are observing memory leak of Store._vm while using registerModule/unregisterModule.\r\nOn heap profiling we found that the oldVm instance is not getting garbage collected.\r\n\r\nI have created an demo link to illustrate the above mentioned problem\r\n[jsFiddle link](https://jsfiddle.net/mrj8spu0/)\r\n\r\nProbable Solution:\r\nDe-reference the oldVm instance on the same function scope where its getting instantiated (i.e. resetStoreVM() )\r\n\r\nThe above can be achieved by adding following code inside resetStoreVM function.\r\n**_oldVm.$destroy(); \r\noldVm = null;      // This is the missing code_**\r\n```\r\nfunction resetStoreVM (store, state, hot) {\r\n    var oldVm = store._vm;\r\n\r\n    ...\r\n\t...\r\n\r\n    if (oldVm) {\r\n      if (hot) {\r\n        // dispatch changes in all subscribed watchers\r\n        // to force getter re-evaluation for hot reloading.\r\n        store._withCommit(function () {\r\n          oldVm._data.$$state = null;\r\n        });\r\n      }\r\n\r\n      // Existing Code\r\n      Vue.nextTick(function () { return oldVm.$destroy(); });\r\n       \r\n      // The OldVm Object is still in heap even after destroy\r\n      // Appropriate Code\r\n      oldVm.$destroy(); \r\n      oldVm = null;\r\n    }\r\n  }\r\n```\r\n\r\nAttached google chrome (V 72.0.3626.96) heap snapshot and file.\r\n![heapsnapshot](https://user-images.githubusercontent.com/38841241/52712275-1983c780-2fba-11e9-8c67-43b24afe56e1.png)\r\n\r\n[Heap-20190213T172945.heapsnapshot.zip](https://github.com/vuejs/vuex/files/2860354/Heap-20190213T172945.heapsnapshot.zip)\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1506","RelatedDescription":"Closed issue \"Memory leak happening while using registerModule/unregisterModule.\" (#1506)"},{"Id":"399312235","IsPullRequest":false,"CreatedAt":"2019-02-13T11:24:21","Actor":"mrkstwrt","Number":"1485","RawContent":null,"Title":"Unable to override types/vue.d.ts","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/types/vue.d.ts](https://github.com/vuejs/vuex/blob/dev/types/vue.d.ts)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n`types/vue.d.ts` contains the following\r\n\r\n```\r\ndeclare module \"vue/types/options\" {\r\n  interface ComponentOptions<V extends Vue> {\r\n    store?: Store<any>;\r\n  }\r\n}\r\n\r\ndeclare module \"vue/types/vue\" {\r\n  interface Vue {\r\n    $store: Store<any>;\r\n  }\r\n}\r\n```\r\n\r\n### What is expected?\r\nI feel like it should be possible to override this with `store?: Store<MyState>` and `$store: Store<MyState>` to allow `this.$store` etc. on the Vue instance to be fully typed.\r\n\r\n### What is actually happening?\r\nYou can't redeclare an interface property, so trying to do so will result in a TypeScript error.\r\n\r\n---\r\nIt feels like if you go to all the effort of fully typing out your whole vuex store it's rendered pretty much useless if your app makes heavy use of `this.$store.state.foo`. This is especially an issue for me because I use nuxt and do a lot with `$store` in the `asyncData` functions. I've searched around for a fix or a workaround but not come up with much. Is there something I am missing here?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1485","RelatedDescription":"Closed issue \"Unable to override types/vue.d.ts\" (#1485)"},{"Id":"407854625","IsPullRequest":false,"CreatedAt":"2019-02-13T11:12:36","Actor":"ianwalter","Number":"1504","RawContent":null,"Title":"watch instance method behavior is inconsistent between Vue and Vuex","State":"closed","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/ianwalter/vuex-issue](https://github.com/ianwalter/vuex-issue)\r\n\r\n### Steps to reproduce\r\n1. Register a watcher in a component with a callback function that prints the new data value and old data value\r\n2. Register a watcher on a store instance with a callback function that prints the new data value and old data value\r\n\r\n### What is expected?\r\nThat when both watchers are triggered, both of them print the new data value and the old data value.\r\n\r\n### What is actually happening?\r\nThe component watcher prints the new data value and old data value, while the store watcher only prints the new data value (state) and an empty object (getters, if you haven't defined any). \r\n\r\n---\r\nBefore reading the Vuex documentation more closely, I assumed that this method behaved in the same way as it does in a component. Returning getters to the store watcher callback seems to me like returning computed in the component watcher callback. I think the old state data is more valuable too, especially since it could provide the initial state as the old data, something you can't get in an alternative way (like subscribing to mutations which only gives you the new state as well).\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1504","RelatedDescription":"Closed issue \"watch instance method behavior is inconsistent between Vue and Vuex\" (#1504)"},{"Id":"405256578","IsPullRequest":true,"CreatedAt":"2019-02-10T09:25:00","Actor":"Alex-Sokolov","Number":"1499","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"ref: https://github.com/vuejs/vuex/pull/1484","Url":"https://github.com/vuejs/vuex/pull/1499","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1499)"},{"Id":"407825529","IsPullRequest":false,"CreatedAt":"2019-02-07T17:59:59","Actor":"ianwalter","Number":"1503","RawContent":null,"Title":"Add a subscribeModule instance method","State":"open","Body":"### What problem does this feature solve?\r\nVuex doesn't provide a way for plugins to be notified when modules are added to the store dynamically through `registerModule`. This means that there can be changes in the state tree that are impossible for plugins to know about through the existing subscription methods like `subscribe` and `subscribeAction`. A common use case would be a plugin that saves the Vuex state to local storage. When a module is added through `registerModule`, the local storage plugin will not be able to store it's initial state to local storage.\r\n\r\n### What does the proposed API look like?\r\n`subscribeModule(handler: Function)`\r\n\r\nSubscribe to `registerModule`/`unregisterModule` events. The handler is called with a module object and a namespace when the module is registered. The module object is null when unregistered:\r\n\r\n```js\r\nstore.subscribeModule((mod, namespace) => {\r\n  if (mod) {\r\n    console.log(mod)\r\n  } else {\r\n    console.log(namespace)\r\n  }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1503","RelatedDescription":"Open issue \"Add a subscribeModule instance method\" (#1503)"},{"Id":"407229198","IsPullRequest":false,"CreatedAt":"2019-02-06T13:13:41","Actor":"SumNeuron","Number":"1502","RawContent":null,"Title":"DOCUMENTATION REQUEST: how to publish vuex module on npm. how to publish sfc component library and vuex module on npm","State":"open","Body":"### What problem does this feature solve?\r\nVuex modules, in theory, are divorced of their vue components which access them. One could take the module, register it and (re)make components to utilize the vuex module as desired. However, in (perhaps poor) practice, vuex modules and vue components are often made concurrently; namely, the components serve as the api to the store and it is expected that inclusion of the vue components come _with_ the vuex module.\r\n\r\nHowever turning a vuex module and library of sfcs into reusable chunks does not seem to be straight forward.\r\n\r\nThe expected behavior would be using the vue-cli to create a new project with a vuex store.\r\nthe store would be moved to its own directory:\r\n\r\n```\r\nsrc/\r\n-- store/\r\n---- modules/\r\n------ moduleA/\r\n-------- actions.js\r\n-------- state.js\r\n-------- mutations.js\r\n-------- getters.js\r\n-------- store.js \r\n...\r\n```\r\n\r\nAll components under `src/components` (or nested directories) would be exposed so users could import each constitute component\r\nAll modules under `src/store/modules` would be exposed so users could just import the module if desired \r\n\r\n\r\n### What does the proposed API look like?\r\n```\r\n# install library\r\nnpm install vuex-vue-sfc-library\r\n\r\n# inside app.vue or some other component\r\n// import the vuex modules and components that access the modules \r\nimport {moduleA, nestedComponentB, conglomerateComponentA} from 'vuex-vue-sfc-library\r\n\r\nexport default {\r\n    components: {\r\n        nestedComponentB, conglomerateComponentA\r\n    },\r\n    created() {\r\n        this.$store.registerModule('moduleA', moduleA)\r\n    }\r\n\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1502","RelatedDescription":"Open issue \"DOCUMENTATION REQUEST: how to publish vuex module on npm. how to publish sfc component library and vuex module on npm\" (#1502)"},{"Id":"405681673","IsPullRequest":false,"CreatedAt":"2019-02-01T12:29:01","Actor":"dcrystalj","Number":"1500","RawContent":null,"Title":"Confusing namespaced api","State":"open","Body":"### What problem does this feature solve?\r\nThe most confusing thing when using namespaced vuex is inconsistant api with state and getters.\r\n\r\nExample:\r\nto access state \r\n`this.$store.state.user.name`\r\n\r\nto access getter\r\n`this.$store.getters['user/fullName']`\r\n\r\nThis is so confusing for me and my coworkers. Is there reason to have this inconsistency?\r\n\r\n\r\n\r\nProblem occurs when you try to watch getters\r\nexample:\r\n```\r\nwatch: {\r\n  '$store.state.user.name': {\r\n    handler(name) {\r\n      console.log(name)\r\n    },\r\n  },\r\n  '$store.getters[user/fullName]': { // not working\r\n    handler(fullName) {\r\n      console.log(fullName)\r\n    },\r\n  },\r\n}\r\n```\r\nCurrent solution Is to use mapGetters() helper for getters only. Why? because of weird api.\r\nPlease note that we try to avoid mapGetters, mapState helpers... due to explicitly in large app\r\n\r\n### What does the proposed API look like?\r\nAdd api for getters same as is for state.\r\n\r\nExample:\r\n`$store.gettters.user.fullName`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1500","RelatedDescription":"Open issue \"Confusing namespaced api\" (#1500)"},{"Id":"404720187","IsPullRequest":true,"CreatedAt":"2019-01-31T13:42:34","Actor":"kazupon","Number":"1497","RawContent":null,"Title":"update ja docs","State":"closed","Body":"/ping @ktsn  🙏 ","Url":"https://github.com/vuejs/vuex/pull/1497","RelatedDescription":"Closed or merged PR \"update ja docs\" (#1497)"},{"Id":"404724217","IsPullRequest":false,"CreatedAt":"2019-01-30T11:22:55","Actor":"Yxjhasadream","Number":"1498","RawContent":null,"Title":"How to assign a value to the state ，I tried it ,  but there seems to be something wrong","State":"closed","Body":"I want to assign a value to the state under the root instance, but it seems to have failed, and does anyone know where it's wrong to operate? \r\n(我想在根实例下给state赋值，但是好像失败了，有人知道是哪儿操作不对吗？ )\r\n\r\n![image](https://user-images.githubusercontent.com/35222088/51978122-37363480-24c4-11e9-8d15-18e3cfbe20d0.png)\r\n\r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1498","RelatedDescription":"Closed issue \"How to assign a value to the state ，I tried it ,  but there seems to be something wrong\" (#1498)"},{"Id":"404307621","IsPullRequest":true,"CreatedAt":"2019-01-30T09:09:02","Actor":"Jinjiang","Number":"1495","RawContent":null,"Title":"docs(zh): new subscribeAction options","State":"closed","Body":"https://github.com/vuejs/vuex/compare/da22a6e...48263f8\r\n/ping @justineo","Url":"https://github.com/vuejs/vuex/pull/1495","RelatedDescription":"Closed or merged PR \"docs(zh): new subscribeAction options\" (#1495)"},{"Id":"403435496","IsPullRequest":false,"CreatedAt":"2019-01-26T12:03:22","Actor":"VanquisherMe","Number":"1494","RawContent":null,"Title":"解决 SSR 场景中 cookie 穿透 问题","State":"open","Body":"### What problem does this feature solve?\r\nSSR 场景中 cookie 穿透问题，在服务器入口，创建store的时候可以添加，自定函数，这样我就可以判断是服务端还是客户端来决定 异步请求的逻辑，并且在actions 第一个参数 context，添加上这个自定义函数的对象，就可以在store actions的时候拿到这个请求函数，如此可以完美解决 SSR 场景中 服务端无非带cookie 的问题\r\n\r\n### What does the proposed API look like?\r\n new Vuex.Store({\r\n    method:{\r\n        request(){\r\n           ...请求函数\r\n        }\r\n    }\r\n  });\r\n\r\nactions:{\r\n    getuser({ method }){  method.request(\"url\") }\r\n}\r\n\r\nthis.$store.method.request(\"url\")\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1494","RelatedDescription":"Open issue \"解决 SSR 场景中 cookie 穿透 问题\" (#1494)"},{"Id":"402611473","IsPullRequest":false,"CreatedAt":"2019-01-24T09:20:54","Actor":"super918180","Number":"1492","RawContent":null,"Title":"I can't  export all state from namespace module, I can only export one by one.","State":"closed","Body":"\r\n![image](https://user-images.githubusercontent.com/20025505/51667964-18372e80-1ffc-11e9-92ee-298f979fd8c0.png)\r\nI can't  export all state from namespace module, I can only export one by one.","Url":"https://github.com/vuejs/vuex/issues/1492","RelatedDescription":"Closed issue \"I can't  export all state from namespace module, I can only export one by one.\" (#1492)"},{"Id":"402347190","IsPullRequest":false,"CreatedAt":"2019-01-23T17:22:06","Actor":"GbAlien","Number":"1491","RawContent":null,"Title":"Optional attribute declared as required on typescript declaration","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://github.com/vuejs/vuex/blob/dev/types/index.d.ts](https://github.com/vuejs/vuex/blob/dev/types/index.d.ts)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nTest a mutation without payload on typescript\r\n\r\n### What is expected?\r\nTypescript not complain about missing payload\r\n\r\n### What is actually happening?\r\nTypescript complains about missing payload\r\n\r\n---\r\nchange: \r\n\r\nexport type Mutation<S\\> = (state: S, payload: any) => any;\r\n\r\nto:\r\n\r\nexport type Mutation<S\\> = (state: S, payload?: any) => any;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1491","RelatedDescription":"Open issue \"Optional attribute declared as required on typescript declaration\" (#1491)"},{"Id":"400419899","IsPullRequest":true,"CreatedAt":"2019-01-18T08:42:24","Actor":"Alex-Sokolov","Number":"1488","RawContent":null,"Title":"docs: [RU] Translation update","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1488","RelatedDescription":"Closed or merged PR \"docs: [RU] Translation update\" (#1488)"},{"Id":"400557628","IsPullRequest":false,"CreatedAt":"2019-01-18T03:28:36","Actor":"indirectlylit","Number":"1490","RawContent":null,"Title":"validators and type checks for mutations","State":"open","Body":"### What problem does this feature solve?\r\n\r\nIn vue, prop validation during development is a great way to catch bugs early. A similar feature would be useful for Vuex mutations.\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n\r\n```javascript\r\nconst store = new Vuex.Store({\r\n  state: {\r\n    budget: 0,\r\n    people: {},\r\n  },\r\n  mutations: {\r\n    setBudget: {\r\n      mutation(state, value) {\r\n        state.budget = value;\r\n      },\r\n      type: Number,\r\n    },\r\n    addPerson: {\r\n      mutation(state, value) {\r\n        state.people[value.id] = value;\r\n      },\r\n      type: Object,\r\n      validator(value) {\r\n        return value.id && value.name && value.age;\r\n      }\r\n    }\r\n  }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1490","RelatedDescription":"Open issue \"validators and type checks for mutations\" (#1490)"},{"Id":"400471802","IsPullRequest":false,"CreatedAt":"2019-01-17T21:31:33","Actor":"jmplahitko","Number":"1489","RawContent":null,"Title":"ActionSubscribersObject.after() hook will not be called if action results in a rejected promise","State":"open","Body":"### Version\r\n3.1.0\r\n\r\n### Reproduction link\r\n[https://codepen.io/jmplahitko/pen/EGzMPG](https://codepen.io/jmplahitko/pen/EGzMPG)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nWith console open:\r\nClick Resolved button: before hook consoles, action consoles, after hook consoles.\r\nClick Rejected button: before hook consoles, action consoles, after hook does not console.\r\n\r\n### What is expected?\r\nIf an action results in a rejected promise (for instance, in the case where an HTTP call results in an error), ActionSubscribersObject.after() hooks should still be called. \r\n\r\n### What is actually happening?\r\nIf an action results in a rejected promise, ActionSubscribersObject.after() hooks are not called. \r\n\r\n---\r\nThis was found when integrating with the new ActionSubscribersObject for turning spinners on and off. In the case of an HTTP call resulting in an error, spinners don't go away. Hope this helps.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1489","RelatedDescription":"Open issue \"ActionSubscribersObject.after() hook will not be called if action results in a rejected promise\" (#1489)"},{"Id":"400328191","IsPullRequest":true,"CreatedAt":"2019-01-17T15:25:51","Actor":"Sharpie360","Number":"1487","RawContent":null,"Title":"docs: added wording for rootState access in module mutations","State":"open","Body":"Added content for accessing Store rootState in module mutations by passing through action. included example code snippets that are well explained and brief. Using this pattern in my current project.","Url":"https://github.com/vuejs/vuex/pull/1487","RelatedDescription":"Open PR \"docs: added wording for rootState access in module mutations\" (#1487)"},{"Id":"399771919","IsPullRequest":false,"CreatedAt":"2019-01-16T11:46:35","Actor":"ascolshubhu","Number":"1486","RawContent":null,"Title":"Vuex: Weird question on weird behavior of vuex. I need at least one mutation and a commit to update or assign to my store objects","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vuex\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nI'm trying to set token to my store.token I know this is not a best option without using mutation but I'm doing something like this:\r\n\r\n```\r\nmethods : {\r\n        molestor(){\r\n            const self = this;\r\n            this.$store.state.token = \"new token\";\r\n            this.$store.state.cleavage= \"yes\";\r\n            this.$store.commit('settoken', \"somethingrandom\");\r\n        },  \r\n}\r\n```\r\nThen on my store.js:\r\n\r\n```\r\nexport const store = new Vuex.Store({\r\n    state : {\r\n        token : '',\r\n\r\n    },\r\n    mutations : {\r\n        settoken(state,token){\r\n            console.log(token);\r\n        }\r\n    }\r\n});\r\n```\r\nRight now it works fine... it sets up. But when I remove the mutation from store.js or remove the commit on my molester() it wont assign the value to token. Why is this happening?","Url":"https://github.com/vuejs/vuex/issues/1486","RelatedDescription":"Closed issue \"Vuex: Weird question on weird behavior of vuex. I need at least one mutation and a commit to update or assign to my store objects\" (#1486)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-03-02T05:30:44.2077894Z","RunDurationInMilliseconds":1750}