{"Data":{"Vue":{"Events":[],"ResultType":"GitHubEvent"},"Router":{"Events":[{"Id":"6658578174","Type":"PullRequestEvent","CreatedAt":"2017-09-30T21:06:40","Actor":"posva","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/vuejs/vue-router/pull/1750","RelatedDescription":"Merged pull request \"Update meta.md\" (#1750) at vuejs/vue-router","RelatedBody":"Fix spelling error"},{"Id":"6658064446","Type":"PullRequestEvent","CreatedAt":"2017-09-30T14:39:40","Actor":"Haeresis","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/pull/1776","RelatedDescription":"Opened pull request \"[Doc FR]: last changes and complete additional review.\" (#1776) at vuejs/vue-router","RelatedBody":"Hi @posva !\r\n\r\nHere you will find the last changes added to french translation and a lot of typo fixes by a @rspt review.\r\n\r\nReady for merge in our side.\r\n"},{"Id":"6657658082","Type":"IssuesEvent","CreatedAt":"2017-09-30T08:47:45","Actor":"andrei-zhidkov","Repository":"vuejs/vue-router","Organization":"vuejs","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/vuejs/vue-router/issues/1775","RelatedDescription":"Opened issue \"A way to pass arbitrary data to navigation guards\" (#1775) at vuejs/vue-router","RelatedBody":"### What problem does this feature solve?\r\nWhen using vue-router together with vuex, currently the only option to use the store inside `beforeRouteEnter()` guard is via direct import. While this might be okay in number of cases, I think there's a bunch of problems that may potentially arise, like testing difficulties and circular imports. Besides, the user ends up having both `$store` that's injected and the store that was imported, which makes the usage a bit inconsistent and confusing.\r\nI think this kind of tight coupling can be avoided.\r\n\r\nI understand that vue-router shouldn't know anything about vuex (or about any other state management), so we can't handle the store injection. But I guess we might have a generic way to pass arbitrary data to `beforeRouteEnter` (and, maybe, to other guards as well (?)). Then, the customer code (or wiring libraries like vuex-router-sync) could use that way to pass necessary data to the guard.\r\n\r\nI would love to work on this myself, but I want to make sure that I'm doing the right thing conceptually, so prior to opening a PR I'm creating this issue.\r\n\r\n### What does the proposed API look like?\r\nI propose to add a method `registerGuardOption(name: string, data: any)` on the Router instance, as well as changing the signature of `beforeRouteEnter` from `beforeRouteEnter(to, from, next)` to `beforeRouteEnter(to, from, next, options)`.\r\n\r\nCalling `router.registerGuardOption('store', storeInstance)` should result in `{ store: storeInstance }` being passed to `beforeRouteEnter` as an `options` parameter.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->"}],"ResultType":"GitHubEvent"},"Vuex":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2017-10-01T05:30:28.755938Z","RunDurationInMilliseconds":1880}