{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin API Docs: Open Sourced and Available Now","PublishedOn":"2019-05-09T19:41:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we are happy to announce the release of all Xamarin API Documentation as Open Source! API documentation drives the IntelliSense experience while being one of the best ways to help developers...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-api-docs-open-source-available-now/","RawContent":null},{"Title":"The Next Evolution of Xamarin Training: Microsoft Learn","PublishedOn":"2019-05-06T08:01:53+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re excited to announce two new learning paths on Building Xamarin Apps in Microsoft Learn: A free and interactive learning portal.\nXamarin University Joins MS Learn\nThe Xamarin University...","Href":"https://devblogs.microsoft.com/xamarin/next-evolution-xamarin-training-microsoft-learn/","RawContent":null},{"Title":"Join the Xamarin Team at Microsoft Build 2019","PublishedOn":"2019-05-03T20:27:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Build 2019 kicks off next week in beautiful downtown Seattle Washington and we have a packed schedule for Xamarin developers to look forward to. In addition to sessions, you can find some of...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-team-microsoft-build-2019/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in May","PublishedOn":"2019-04-30T16:01:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Learn about new, exciting releases and tools to help jumpstart your next mobile development project by networking with your local community. You too could get all the latest updates about Xamarin and...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-net-developer-events-may/","RawContent":null},{"Title":"Customer Showcase: Aggreko","PublishedOn":"2019-04-23T18:23:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce a new inclusion to our Xamarin Showcase gallery:\nThe Aggreko Technician App\nA key objective of Aggreko’s company-wide Aggreko18 digital transformation program was to...","Href":"https://devblogs.microsoft.com/xamarin/customer-showcase-aggreko/","RawContent":null},{"Title":"Shrinking Your Android App Size","PublishedOn":"2019-04-22T18:15:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Mobile devices are limited in many ways. Whether it&#8217;s how much of a charge your battery can hold, the amount of storage you have left, or the speed of your internet connection to view more cat...","Href":"https://devblogs.microsoft.com/xamarin/shrinking-android-app-size/","RawContent":null},{"Title":"Xamarin.Forms 4.0 CollectionView Challenge ","PublishedOn":"2019-04-19T17:04:57+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"During March, many of you made submissions to our Visual Challenge. Your feedback has been extremely valuable and you all put together some impressive samples! As a follow up in this series, we now...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-forms-4-0-collectionview-challenge/","RawContent":null},{"Title":"The New & Improved Xamarin Developers YouTube Channel!","PublishedOn":"2019-04-18T18:13:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are so excited to re-launch our Xamarin Developers YouTube channel! Here you will find fresh content on building amazing mobile apps directly from the Xamarin team here at Microsoft. To kick things...","Href":"https://devblogs.microsoft.com/xamarin/new-xamarin-developers-youtube-channel/","RawContent":null},{"Title":"Getting Ready for macOS’s Hardened Runtime and Notary","PublishedOn":"2019-04-15T16:11:14+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"With macOS Mojave, Apple introduced support for Hardened Runtime and Notary service. These two services are designed to improve application security on macOS. Recently Apple has...","Href":"https://devblogs.microsoft.com/xamarin/macos-hardened-runtime-notary/","RawContent":null},{"Title":"Xamarin Podcast: Visual Studio 2019 is released!","PublishedOn":"2019-04-12T17:14:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in Xamarin and cloud development.\nPodcast Highlights\nVisual Studio 2019 has been released and is...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-visual-studio-2019-is-released/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9605563312","Type":"IssuesEvent","CreatedAt":"2019-05-11T01:14:09","Actor":"davidbuckleyni","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3090","RelatedDescription":"Opened issue \"HTTPCLient Panifully slow on local host and via ip address\" (#3090) at xamarin/xamarin-android","RelatedBody":"When I run http client in a standard console app or through the browser to my api i get very fast results however in the http client consumed in xmairan forms its very very slow\r\n\r\nI am using the HttpClient but my results are taking up to 6-8 seconds coming back from the same machine on the same subnet and ip range of 192.168. When I call the api directly from the ip address the results are more or less instant so why is it so slow with httpclient on the same computer.\r\n\r\nI have seen other so's that suggest set to use proxy as false is the best way to go.\r\n\r\nI have also tested this on a stock phone and it takes around 8 seconds for the login to be successful on the phone. When i browse to the api the results as returned in second?.\r\n```\r\n\r\nprivate HttpClient _client;\r\npublic async Task<String> Getusers()\r\n{\r\n        var content = \"\";\r\n        HttpClientHandler hch = new HttpClientHandler();\r\n        hch.Proxy = null;\r\n        hch.UseProxy = false;\r\n        _client = new HttpClient(hch);\r\n        var uri = new Uri(Constants.ApiEndPoint + \"/Users\"); // Your url is here\r\n\r\n        try\r\n        {\r\n            var response = await _client.GetAsync(uri);\r\n            if (response.IsSuccessStatusCode)\r\n            {\r\n                content = await response.Content.ReadAsStringAsync();\r\n            }\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            throw ex;\r\n        }\r\n\r\n        return content;\r\n}\r\n```\r\n\r\n\r\n```\r\nprivate async void BtnLogin_Clicked(object sender, EventArgs e)\r\n{\r\n    string content = await Getusers(); //Sends a GET request to the specified Uri and returns the response body as a string in an asynchronous operation\r\n    List<Users> _users = JsonConvert.DeserializeObject<List<Users>>(content); //Deserializes or converts JSON String into a collection of Post\r\n    var userName = txtUserName.Text;\r\n    var password = txtPassword.Text;\r\n    var isValidUser = _users.Where(w => w.UserName == userName && w.password == password).FirstOrDefault();\r\n    var driverId = _users.Where(w => w.UserName == userName && w.password == password).FirstOrDefault().ID;         \r\n\r\n\r\n    if (isValidUser != null)\r\n    {\r\n\r\n            Application.Current.Properties[\"driverId\"] = driverId;\r\n            Application.Current.MainPage = new MainPage();\r\n    }\r\n    else\r\n    {\r\n            lblError.Text = \"Error your credentials are invalid, please try again\";\r\n    }         \r\n\r\n  }\r\n```"},{"Id":"9605532069","Type":"IssuesEvent","CreatedAt":"2019-05-11T00:56:17","Actor":"sanchobear","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3089","RelatedDescription":"Opened issue \"SmtpClient.Send System.Net.Mail.SmtpException: Message could not be sent\" (#3089) at xamarin/xamarin-android","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nSending email from Android Emulator using SmtpClient fails with System.Net.Mail.SmtpException Connection refused.\r\nUsing identical code in ConsoleApp succeeds.\r\n\r\n### Steps to Reproduce\r\n\r\n1. VS2019(16.0.3)\r\n2. Xamarin.Forms(3.6.0.344457)\r\n3. Android Emulator Android_Accelerated_x86_Oreo API 27\r\n4. Replace gmail account data and password with valid data\r\n```\r\nvar mail = new MailMessage\r\n{\r\n\tFrom = new MailAddress(\"account@googlemail.com\", \"developer\"),\r\n\tSubject = \"Test smtp\",\r\n\tBody = $\"<p>Smpt test message</p><br>\",\r\n\tIsBodyHtml = true\r\n};\r\nmail.To.Add(\"user@othermail.com\");\r\nvar smtpClient = new SmtpClient\r\n{\r\n\tPort = 587,\r\n\tHost = \"smtp.gmail.com\",\r\n\tEnableSsl = true,\r\n\tUseDefaultCredentials = false,\r\n\tCredentials = new System.Net.NetworkCredential(\"account@googlemail.com\", \"***password***\")\r\n};\r\nsmtpClient.Send(mail);\r\n```\r\n### Expected Behavior\r\nEmail received\r\n### Actual Behavior\r\nSystem.Net.Mail.SmtpException Connection refused at smtpClient.Send\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version:\r\n- IDE: VS2019(16.0.3)\r\n- Platform Target Frameworks: \r\n  - Android: Oreo 8.1 API 27  \r\n- Android Support Library Version: \r\n- Nuget Packages:\r\n  - Xamarin.Essentials1.1.0\r\n  - Xamarin.Forms 3.6.0.344457\r\n- Affected Devices:\r\n  - Android Emulator Android_Accelerated_x86_Oreo API 27\r\n\r\n### Reproduction Link\r\n[SmtpTest.zip](https://github.com/xamarin/Xamarin.Forms/files/3162818/SmtpTest.zip)\r\n\r\n\r\n\r\n"},{"Id":"9603091281","Type":"PullRequestEvent","CreatedAt":"2019-05-10T16:06:00","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3004","RelatedDescription":"Merged pull request \"[build] Commercial pipeline build\" (#3004) at xamarin/xamarin-android","RelatedBody":"Perform appropriate build stages when the pipeline is signaled to perform a commercial build\r\n\r\n**New capabilities**\r\n * Stage & publish commercial artifacts from a single, 'flat' package directory\r\n * Generate & publish artifacts.json via build-tasks.exe; include as part of GitHub statuses\r\n * Support for skipTest build configuration setting to skip build, execution and publishing of tests\r\n * Support for skipSigning build configuration setting to skip signing for commercial builds\r\n * Sign packages for commercial CI builds unless skipSigning is set\r\n * Generate and upload UpdateInfo containing setup channel ProductId for commercial builds\r\n * Calculate the gitRepo setting as a replacement for the GitRepo build configuration setting\r\n * Avoid producing OSS packages for commercial builds"},{"Id":"9599256560","Type":"IssuesEvent","CreatedAt":"2019-05-10T05:46:19","Actor":"artcyb","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/3088","RelatedDescription":"Opened issue \"make your android app \" (#3088) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Version Information\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"9598791766","Type":"PullRequestEvent","CreatedAt":"2019-05-10T03:19:08","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3087","RelatedDescription":"Opened pull request \"[docs] Prepare message docs for sync to docs.microsoft.com\" (#3087) at xamarin/xamarin-android","RelatedBody":"I have a couple questions to ask before these changes will be ready to merge:\r\n\r\n1. @conceptdev, is it OK that the metadata in this commit only includes `title` and `ms.date` fields? Did you have other fields in mind to include on these pages? I noticed that the contribution guidelines say the `ms.assetid` is no longer required, so I tentatively omitted that for now. But let me know if I should add `ms.assetid` or any another fields.\r\n2. @conceptdev, @jonpryor, and anyone else on the team who's interested, I think it might work well to update these pages to match the format of the [NuGet error reference](https://docs.microsoft.com/nuget/reference/errors-and-warnings/nu1103) pages. I like the way that format looks. Each page starts with a code block (a pre-formatted section) that shows the error message, followed by an **Issue** section, and then a **Solution** section. There are also examples for how to handle multiple Issues and Solutions for one error code: [NuGet Warning NU3019](https://docs.microsoft.com/nuget/reference/errors-and-warnings/nu3019). Does that look good to you all too? If so, I'll go ahead with reformatting these pages to match.\r\n\r\nThanks!"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9605666225","Type":"PullRequestEvent","CreatedAt":"2019-05-11T02:15:13","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6172","RelatedDescription":"Opened pull request \"Implement CollectionView.ItemsUpdatingScrollMode for Android/iOS\" (#6172) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n<!-- Describe your changes here. -->\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #\r\n\r\n### API Changes ###\r\n\r\n```\r\npublic enum ItemsUpdatingScrollMode\r\n{\r\n\tKeepItemsInView,\r\n\tKeepScrollOffset,\r\n\tKeepLastItemInView\r\n}\r\n```\r\nAdded:\r\n`BindableProperty ItemsView.ItemsUpdatingScrollMode`\r\n\r\n### Platforms Affected ### \r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nAutomated tests in CollectionViewItemsUpdatingScrollMode.cs\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] I've submitted so many of these I check all the boxes without thinking now"},{"Id":"9605625106","Type":"PullRequestEvent","CreatedAt":"2019-05-11T01:50:33","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4132","RelatedDescription":"Closed pull request \"[Android] Add index and null checks to prevent exception when NavigationPage has no root\" (#4132) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nIf a NavigationPage is created using the parameterless constructor and does have a root page pushed onto the stack before the NavigationPageRenderer is attached to the window, the NavigationPageRenderer will throw an ArgumentOutOfRangeException while attempting to update the toolbar.\r\n\r\nThis change adds checks to prevent that crash and subsequent null checks for other root-page-dependent methods.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #4069 \r\n\r\n### API Changes ###\r\n\r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- Android\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [x] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"},{"Id":"9605618044","Type":"IssuesEvent","CreatedAt":"2019-05-11T01:46:23","Actor":"davidbuckleyni","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6171","RelatedDescription":"Opened issue \"[BUG] MSB4018\tThe \"XamlCTask\" task failed unexpectedly.\" (#6171) at xamarin/Xamarin.Forms","RelatedBody":" Get the following of recompilation of a project latest visual studio \r\nXamrin 3.6.0.2\r\n\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tMSB4018\tThe \"XamlCTask\" task failed unexpectedly.\r\nSystem.ArgumentException: An item with the same key has already been added.\r\n\r\nServer stack trace: \r\n   at System.ThrowHelper.ThrowArgumentException(ExceptionResource resource)\r\n   at System.Collections.Generic.Dictionary`2.Insert(TKey key, TValue value, Boolean add)\r\n   at Xamarin.Forms.Xaml.XamlParser.ParseXamlElementFor(IElementNode node, XmlReader reader)\r\n   at Xamarin.Forms.Xaml.XamlParser.ReadNode(XmlReader reader, Boolean nested)\r\n   at Xamarin.Forms.Xaml.XamlParser.ParseXamlElementFor(IElementNode node, XmlReader reader)\r\n   at Xamarin.Forms.Xaml.XamlParser.ParseXaml(RootNode rootNode, XmlReader reader)\r\n   at Xamarin.Forms.Build.Tasks.XamlTask.ParseXaml(Stream stream, TypeReference typeReference)\r\n   at Xamarin.Forms.Build.Tasks.XamlCTask.Execute(IList`1& thrownExceptions)\r\n   at Xamarin.Forms.Build.Tasks.XamlTask.Execute()\r\n   at System.Runtime.Remoting.Messaging.StackBuilderSink._PrivateProcessMessage(IntPtr md, Object[] args, Object server, Object[]& outArgs)\r\n   at System.Runtime.Remoting.Messaging.StackBuilderSink.SyncProcessMessage(IMessage msg)\r\n\r\nException rethrown at [0]: \r\n   at System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage(IMessage reqMsg, IMessage retMsg)\r\n   at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData& msgData, Int32 type)\r\n   at Microsoft.Build.Framework.ITask.Execute()\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n   at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\tFuelStockApp\tC:\\ProgramData\\Xamarin\\NuGet\\xamarin.forms\\3.6.0.264807\\build\\Xamarin.Forms.targets\t107\t\r\n"},{"Id":"9605596507","Type":"PullRequestEvent","CreatedAt":"2019-05-11T01:33:51","Actor":"rmarinho","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6170","RelatedDescription":"Merged pull request \"[iOS] Fix NRE SearchHandler iOS10\" (#6170) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nRunning Shell on iOS10 with get a NRE when trying to get the UIButtons of UISearchBar.\r\n\r\n### Issues Resolved ### \r\n\r\n\r\n\r\n### API Changes ###\r\n<!-- List all API changes here (or just put None), example:\r\n\r\nAdded:\r\n - string ListView.GroupName { get; set; } //Bindable Property\r\n - int ListView.GroupId { get; set; } // Bindable Property\r\n - void ListView.Clear ();\r\n\r\nChanged:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n Removed:\r\n - object ListView.SelectedItem => Cell ListView.SelectedItem\r\n \r\n -->\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n<!-- Describe any changes that may change how a user's app behaves or appears when upgrading to this version of the codebase. -->\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n<!-- If possible, take a screenshot of your test case before these changes were made and another screenshot after the changes were made to show possible visual changes. -->\r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n<!-- Please list the steps that should be taken to properly test these changes on each relevant platform. If you were unable to test these changes yourself on any or all platforms, please let us know. Also, if you are able to attach a video of your test run, you will be our personal hero. -->\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9605570392","Type":"IssuesEvent","CreatedAt":"2019-05-11T01:18:23","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5576","RelatedDescription":"Closed issue \"Firebase deeplink throwing an error in iOS\" (#5576) at xamarin/Xamarin.Forms","RelatedBody":"Issue:- \r\nOn a Xamarin.Forms App, deeplink is redirecting to default page in iOS most of the times.\r\n\r\nVersions:-\r\nXamarin.Firebase.iOS.Analytics:- 4.0.5.1 (updated to 5.5.0)\r\nXamarin.Firebase.iOS.InstanceID:- 2.0.8 (updated to 3.4.0)\r\nXamarin.Firebase.iOS.Core:- 4.0.13.1(updated to 5.2.0)\r\nXamarin.Firebase.iOS.DynamicLinks:- 2.3.1.1 (updated to 3.0.2.1)\r\nXamarin.Forms:- 3.2.0.871581\r\n\r\nSteps to reproduce:-\r\nTap on a deeplink in iOS. Every second or third time, deeplink is empty and throws an error in iOS. the same deeplink in Android works fine always.\r\n\r\nPlatform:-\r\n[] .NET version = 2.1\r\n[] mono version = 5.16\r\n\r\n\r\nExpected behaviour:- \r\nIt should be redirected to the corresponding page and not throw an error.\r\n"},{"Id":"9605557662","Type":"IssuesEvent","CreatedAt":"2019-05-11T01:10:45","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6088","RelatedDescription":"Closed issue \"[Bug]Unable override SetTabIcon in CustomTabbedPageRenderer\" (#6088) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI had create a  CustomTabbedPageRenderer with a CustomTabLayout ,after update to 4.0.0 Pre Release 10, SetTabIcon can not be override any more.\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0.0 Pre Release 10\r\n- Last known good version:4.0.0 Pre Release 8\r\n- IDE: Visual Studio 2019\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9605554576","Type":"IssuesEvent","CreatedAt":"2019-05-11T01:08:59","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6097","RelatedDescription":"Closed issue \"[Material]: `Xamarin.Forms.Material.Android` is missing from the Android Solution \" (#6097) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nThe `Xamarin.Forms.Material.Android` is missing from the Android specific solution:\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/master/.Xamarin.Forms.Android.sln\r\nThis causes the build to fail to build because it can't find it.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open `Xamarin.Forms.Material.Android.sln` from a clean build\r\n2. Build\r\n3. Observe build error\r\n\r\n### Expected Behavior\r\nNewly cloned repo builds on first try\r\n\r\n### Actual Behavior\r\nBuild output:\r\n```\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1350,2): error MSB4018: The \"ResolveLibraryProjectImports\" task failed unexpectedly.\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1350,2): error MSB4018: System.IO.FileNotFoundException: Could not load assembly 'Xamarin.Forms.Material, Version=0.0.0.0, Culture=neutral, PublicKeyToken='. Perhaps it doesn't exist in the Mono for Android profile?\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1350,2): error MSB4018: File name: 'Xamarin.Forms.Material.dll'\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1350,2): error MSB4018:    at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve(AssemblyNameReference reference, ReaderParameters parameters)\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1350,2): error MSB4018:    at Java.Interop.Tools.Cecil.DirectoryAssemblyResolver.Resolve(String fullName)\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1350,2): error MSB4018:    at Xamarin.Android.Tasks.ResolveLibraryProjectImports.Extract(DirectoryAssemblyResolver res, ICollection`1 jars, ICollection`1 resolvedResourceDirectories, ICollection`1 resolvedAssetDirectories, ICollection`1 resolvedEnvironments)\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1350,2): error MSB4018:    at Xamarin.Android.Tasks.ResolveLibraryProjectImports.Execute()\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1350,2): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(1350,2): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n```\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Master branch\r\n- Last known good version: ?\r\n- IDE: VS2019\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n"},{"Id":"9605539271","Type":"IssuesEvent","CreatedAt":"2019-05-11T01:00:17","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6140","RelatedDescription":"Closed issue \"WCF service methods not connected with Xamarin.Forms app (Android, iOS)\" (#6140) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\nI have created a WCF service and called the same from Xamarin Cross-Platform with Dot Net Standard 2 (UWP, iOS, Android), an app using Connected Service approach.\r\n\r\nI checked this service approach in UWP and it works fine. But in Android and iOS project, the service is not connected.\r\n\r\nConnected service call \r\n```\r\nIMobileservice mobileservice = new MobileserviceClient();\r\ntry\r\n{\r\n       ValidateCredentials validateCredentials = await mobileservice.ValidateLoginCredentialsAsync(_param);\r\n       label.Text = validateCredentials.p_UserGroupCodeDesc;\r\n}\r\ncatch (Exception ex)\r\n{\r\n\r\n}\r\n```\r\nAndroid runtime error after clicked button :\r\n\r\n> Unhandled Exception:\r\n> \r\n> System.ServiceModel.FaultException`1[[System.ServiceModel.ExceptionDetail, System.ServiceModel, Version=2.0.5.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35]]: Error in deserializing body of request message for operation 'GetData'. OperationFormatter encountered an invalid Message body. Expected to find node type 'Element' with name 'GetData' and namespace 'http://tempuri.org/'. Found node type 'Element' with name 'GetDataAsync' and namespace 'http://tempuri.org/'\r\n> \r\n\r\niOS runtime error after clicked button :\r\n\r\n> Unhandled Exception:\r\n> \r\n> System.InvalidOperationException: MonoTouch does not support dynamic proxy code generation. Override this method or its caller to return specific client proxy instance\r\n\r\nFunny thing is UWP work fine and return method string just fine.\r\nThis is my first experience to consume WCF in xamarin.forms and I feel maybe I do something wrong."},{"Id":"9605536649","Type":"IssuesEvent","CreatedAt":"2019-05-11T00:58:52","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6143","RelatedDescription":"Closed issue \"[Bug] Maps\" (#6143) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nUsing Xamarin.Forms.Maps Nuget Plugin is crashing Application (Android) and dose not display anything on IOS, \r\n\r\n### Steps to Reproduce\r\n1. ShellApp -> ContentPage \r\n <maps:Map IsShowingUser=\"True\"         \r\n                     MapType=\"Street\" \r\n                     HeightRequest=\"300\"/>\r\n\r\n### Expected Behavior\r\nJava.Lang.NoClassDefFoundError: <Timeout exceeded getting exception details>\r\nApp Crashed\r\n### Actual Behavior\r\nDisplay Geo Maps\r\n### Basic Information\r\n- Version with issue:  Form.Maps Plugin: 3.6.0.344457, Forms 4.0.0.394984-pre10\r\n- Last known good version: 3.6.0.344457\r\n- IDE: Visual Studio [Windows]\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK compiling against: 12.2 -->\r\n  - Android: <!-- The version of the Android SDK  compiling against: 9.0 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages: Xamarin.Forms.Maps\r\n- Affected Devices: Android/IOS\r\n\r\n### Screenshots\r\n![Bug Report Screen Shot](https://user-images.githubusercontent.com/18234947/57443472-2c2b3700-725f-11e9-99b7-2eeb281b2a28.png)\r\n \r\n05-09 13:32:41.501 E/AndroidRuntime(17813): FATAL EXCEPTION: Thread-14\r\n05-09 13:32:41.501 E/AndroidRuntime(17813): Process: com.companyname.OPFalafel, PID: 17813\r\n05-09 13:32:41.501 E/AndroidRuntime(17813): java.lang.NoClassDefFoundError: Failed resolution of: Lorg/apache/http/ProtocolVersion;\r\n05-09 13:32:41.501 E/AndroidRuntime(17813): \tat fb.b(:com.google.android.gms.dynamite_mapsdynamite@16091081@16.0.91 (100400-244116403):3)\r\n05-09 13:32:41.501 E/AndroidRuntime(17813): \tat fa.a(:com.google.android.gms.dynamite_mapsdynamite@16091081@16.0.91 (100400-244116403):3)\r\n05-09 13:32:41.501 E/AndroidRuntime(17813): \tat fc.a(:com.google.android.gms.dynamite_mapsdynamite@16091081@16.0.91 (100400-244116403):15)\r\n05-09 13:32:41.501 E/AndroidRuntime(17813): \tat com.google.maps.api.android.lib6.drd.al.a(:com.google.android.gms.dynamite_mapsdynamite@16091081@16.0.91 (100400-244116403):6)\r\n05-09 13:32:41.501 E/AndroidRuntime(17813): \tat ee.a(:com.google.android.gms.dynamite_mapsdynamite@16091081@16.0.91 (100400-244116403):23)\r\n05-09 13:32:41.501 E/AndroidRuntime(17813): \tat ee.run(:com.google.android.gms.dynamite_mapsdynamite@16091081@16.0.91 (100400-244116403):8)\r\n05-09 13:32:41.501 E/AndroidRuntime(17813): Caused by: java.lang.ClassNotFoundException: Didn't find class \"org.apache.http.ProtocolVersion\" on path: DexPathList[[zip file \"/data/user_de/0/com.google.android.gms/app_chimera/m/00000030/MapsDynamite.apk\"],nativeLibraryDirectories=[/data/user_de/0/com.google.android.gms/app_chimera/m/00000030/MapsDynamite.apk!/lib/arm64-v8a, /system/lib64]]\r\n05-09 13:32:41.501 E/AndroidRuntime(17813): \tat dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:134)\r\n05-09 13:32:41.501 E/AndroidRuntime(17813): \tat java.lang.ClassLoader.loadClass(ClassLoader.java:379)\r\n05-09 13:32:41.501 E/AndroidRuntime(17813): \tat ac.loadClass(:com.google.android.gms.dynamite_dynamiteloader@16091081@16.0.91 (100400-244116403):4)\r\n05-09 13:32:41.501 E/AndroidRuntime(17813): \tat java.lang.ClassLoader.loadClass(ClassLoader.java:312)\r\n05-09 13:32:41.501 E/AndroidRuntime(17813): \t... 6 more\r\nThread started:  #8\r\nUnhandled Exception:\r\n\r\nJava.Lang.NoClassDefFoundError: <Timeout exceeded getting exception details>\r\n\r\n05-09 13:32:42.949 W/DynamiteModule(17813): Local module descriptor class for com.google.android.gms.googlecertificates not found.\r\n05-09 13:32:42.957 I/DynamiteModule(17813): Considering local module com.google.android.gms.googlecertificates:0 and remote module com.google.android.gms.googlecertificates:4\r\n05-09 13:32:42.957 I/DynamiteModule(17813): Selected remote version of com.google.android.gms.googlecertificates, version >= 4\r\n05-09 13:32:42.962 W/yname.OPFalafe(17813): Unsupported class loader\r\n05-09 13:32:43.096 W/yname.OPFalafe(17813): Verification of void q.c() took 112.470ms\r\n\r\n### Reproduction Link\r\n\r\n\r\n"},{"Id":"9605531582","Type":"IssuesEvent","CreatedAt":"2019-05-11T00:56:02","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6145","RelatedDescription":"Closed issue \"[Enhancement] Remove [EditorBrowsable(EditorBrowsableState.Never)], also OnXXX should be protected\" (#6145) at xamarin/Xamarin.Forms","RelatedBody":"The private event handlers and hiding the events from VS editor has no benefit except making it difficult to create subclasses like renderers. For example, I am getting null reference exception on UWP when using WebView.Eval or EvalJavascriptAsync (when using MainThread and no js is called when I don't use it) and I wanted to know what is going wrong by overriding the renderer but it took me time to know why VS is not showing anything to override or listen to, the element events are hidden from the editor, and the event handler of the renderer is private!\r\n"},{"Id":"9605521610","Type":"IssuesEvent","CreatedAt":"2019-05-11T00:50:59","Actor":"samhouts","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6147","RelatedDescription":"Closed issue \"VS 2019 Locks up with XF [Bug] \" (#6147) at xamarin/Xamarin.Forms","RelatedBody":"1. Open VS 2019 in Windows 10\r\n2. Create a new iOS Xamarin Forms app. Hello World.\r\n3. Set it to debug run in the simulator, but on windows.\r\n4. The app is running.\r\n5. Let Windows 10 auto lock by timing out. This is important, it must auto lock after inactivity\r\n6. Unlock Windows by entering your password\r\n\r\nVS 2019 is now unresponsive and can only be closed by Task Manager Kill\r\n \r\n### Basic Information\r\n \r\n- IDE: VS 2019, but also 2017\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  any in the last 6 months\r\n \r\n "}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9605605418","Type":"IssuesEvent","CreatedAt":"2019-05-11T01:38:58","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6043","RelatedDescription":"Closed issue \"I'm having an timeout issue, specifically a WebException.\" (#6043) at xamarin/xamarin-macios","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nSo the issue is I'm running into a WebException (specifically a timeout).\r\n\r\nI have been able to narrow it down to the HTTP Client implementation settings in iOS.\r\n\r\n- When it is set to **Managed** I don't get the error\r\n\r\n- When I set it to **NSUrlSession (iOS 7+)** a timeout exception is being generated after a request has been running longer than 1 minute. \r\n\r\nWe also tested our json request, using Insomnia, and it took about 5 mins as well, but no exception is generated.\r\n\r\nI do not have access to the middle tier, just the server logs that get updated.\r\n\r\nI know about the HttpClient.Timeout property which we have set for large amount of time, are there any other configuration variables for setting the timeout when needing TLS 1.2?\r\n\r\nWhat am I missing?\r\n\r\nMac OS \r\n- XCode 8.3.3\r\n\r\nVisual Studio 2015 for Windows \r\n- Xamarin 4.6.3.4  \r\n- Xamarin.IOS 10.12.3.3\r\n\r\n:: Extra Info That May Be Helpful ::\r\nIt looks as though **NSUrlSession (iOS 7+)** setting forces the native HTTP Client to be used (which has a hard-coded timeout of 60 seconds)\r\n\r\n"},{"Id":"9605563713","Type":"IssuesEvent","CreatedAt":"2019-05-11T01:14:23","Actor":"mhughey-vent","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6043","RelatedDescription":"Opened issue \"I'm having an timeout issue, specifically a WebException.\" (#6043) at xamarin/xamarin-macios","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\n\r\nSo the issue is I'm running into a WebException (specifically a timeout).\r\n\r\nI have been able to narrow it down to the HTTP Client implementation settings in iOS.\r\n\r\n- When it is set to **Managed** I don't get the error\r\n\r\n- When I set it to **NSUrlSession (iOS 7+)** a timeout exception is being generated after a request has been running longer than 1 minute. \r\n\r\nWe also tested our json request, using Insomnia, and it took about 5 mins as well, but no exception is generated.\r\n\r\nI do not have access to the middle tier, just the server logs that get updated.\r\n\r\nI know about the HttpClient.Timeout property which we have set for large amount of time, are there any other configuration variables for setting the timeout when needing TLS 1.2?\r\n\r\nWhat am I missing?\r\n\r\nMac OS \r\n- XCode 8.3.3\r\n\r\nVisual Studio 2015 for Windows \r\n- Xamarin 4.6.3.4  \r\n- Xamarin.IOS 10.12.3.3\r\n\r\n:: Extra Info That May Be Helpful ::\r\nIt looks as though **NSUrlSession (iOS 7+)** setting forces the native HTTP Client to be used (which has a hard-coded timeout of 60 seconds)\r\n\r\n"},{"Id":"9603807301","Type":"IssuesEvent","CreatedAt":"2019-05-10T18:07:13","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/6029","RelatedDescription":"Closed issue \"Unable to build Cocoa App with .NET Standard 2.0 Library reference with Visual Studio for Mac Preview\" (#6029) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\nThis was found with the preview channel on Visual Studio for Mac. I fixed my problem by switching to the stable channel but wanted to report this anyway.\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Use Xamarin.Mac 5.10.150.0\r\n2. Add a .NET Standard project to your solution and add a reference to it in your Xamarin.Mac app.\r\n3. Attempt to build project\r\n\r\n\r\n### Expected Behavior\r\nSuccessful compilation\r\n\r\n### Actual Behavior\r\nFailed compilation with the following error.\r\n```\r\nError CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. (CS0012) (TestApp)\r\nError CS0012: The type 'IPAddress' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. (CS0012) (TestApp)\r\n```\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\n=== Visual Studio Community 2019 (Preview) for Mac ===\r\n\r\nVersion 8.1 Preview (8.1 build 2306)\r\nInstallation UUID: 5b7e2595-a0af-4173-b26e-170c967e7594\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.6.0.25 (d16-0 / 50f75273)\r\n\r\n\tPackage version: 518010024\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.18.1.24 (2018-08/082e1a23463) (64-bit)\r\n\tPackage version: 518010024\r\n\r\n=== NuGet ===\r\n\r\nVersion: 5.0.2.5988\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.2.4\r\n\t2.1.9\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.2.203/Sdks\r\nSDK Versions:\r\n\t2.2.203\r\n\t2.1.505\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.18.1/lib/mono/msbuild/Current/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.4\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.10.0.150 (Visual Studio Community)\r\nHash: 99c0cfab\r\nBranch: d16-1\r\nBuild date: 2019-04-22 17:21:29-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.10.0.150 (Visual Studio Community)\r\nHash: 99c0cfab\r\nBranch: d16-1\r\nBuild date: 2019-04-22 17:21:28-0400\r\n\r\n=== Xamarin Designer ===\r\n\r\nVersion: 16.1.0.445\r\nHash: 1e3152488\r\nBranch: remotes/origin/d16-1-new-document-model\r\nBuild date: 2019-05-03 13:53:00 UTC\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.3.0.19 (Visual Studio Community)\r\nCommit: HEAD/88d8c4f10\r\nAndroid SDK: /Users/kent/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.1 (API level 25)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 25.2.5\r\nSDK Platform Tools Version: 25.0.5\r\nSDK Build Tools Version: 25.0.3\r\n\r\nBuild Information: \r\nMono: mono/mono/2018-08@3f5ec6d95c3\r\nJava.Interop: xamarin/java.interop/d16-1@5ddc3e3\r\nLibZipSharp: grendello/LibZipSharp/d16-1@44de300\r\nLibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\nProGuard: xamarin/proguard/master@905836d\r\nSQLite: xamarin/sqlite/3.27.1@8212a2d\r\nXamarin.Android Tools: xamarin/xamarin-android-tools/d16-1@acabd26\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: /Users/kent/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.9\r\n1.8.0-9\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 1.2.0.44\r\nHash: aac645b\r\nBranch: remotes/origin/d16-1\r\nBuild date: 2019-05-02 19:49:38 UTC\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 801002306\r\nGit revision: 5caddc9fb1dc005cde6f4bcf6b01cded93127576\r\nBuild date: 2019-05-03 21:35:49+00\r\nBuild branch: release-8.1-preview2\r\nXamarin extensions: 4b1f853d36489ffda6650beadf2fbb2331d37c9f\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.2\r\nDarwin 18.2.0 Darwin Kernel Version 18.2.0\r\n    Mon Nov 12 20:24:46 PST 2018\r\n    root:xnu-4903.231.4~2/RELEASE_X86_64 x86_64\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\nhttps://gist.github.com/kfreezen/426670d8b1bd69e29c2952b0738a66d2\r\n\r\n### Example Project (If Possible)\r\n[TestApp.zip](https://github.com/xamarin/xamarin-macios/files/3162317/TestApp.zip)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->"},{"Id":"9602810446","Type":"PullRequestEvent","CreatedAt":"2019-05-10T15:25:04","Actor":"VincentDondain","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/6042","RelatedDescription":"Opened pull request \"[appkit] Make NSCell and NSControl 'Formatter' accept null\" (#6042) at xamarin/xamarin-macios","RelatedBody":"- Fixes #6032: NSTextField.Formatter missing null-allowed\n  (https://github.com/xamarin/xamarin-macios/issues/6032)"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1126613804438233088","CreatedAt":"2019-05-09T22:23:57+00:00","UserScreenname":"xamarinhq","Text":"Xamarin API Docs have gone open-sourced...\nWhat's that mean for you? \nCheck it out: https://t.co/EWHFrQF7a1\n#xamarin https://t.co/o6HskCU7oN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":72,"FavoriteCount":36,"RawContent":null},{"Id":"1125851046939697152","CreatedAt":"2019-05-07T19:53:01+00:00","UserScreenname":"xamarinhq","Text":"The @XamarinU team has joined the #MicrosoftLearn family! Find Xamarin content in Microsoft Learn today at… https://t.co/gWKXwsPUuk","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":132,"FavoriteCount":62,"RawContent":null},{"Id":"1125402214661382146","CreatedAt":"2019-05-06T14:09:31+00:00","UserScreenname":"xamarinhq","Text":"Join the Xamarin Team at Microsoft Build 2019.\nWe have a packed schedule for Xamarin developers.\nCheck out the sche… https://t.co/fFz1nlYVTp","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":65,"FavoriteCount":27,"RawContent":null},{"Id":"1123980358289100801","CreatedAt":"2019-05-02T15:59:34+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8zSXL","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":17,"FavoriteCount":7,"RawContent":null},{"Id":"1123639473726685184","CreatedAt":"2019-05-01T17:25:01+00:00","UserScreenname":"xamarinhq","Text":"On this week's Xamarin.Essential API of the week, we take a look at the Detect Shake API to help you detect when a… https://t.co/rrPQPNYeFY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":33,"FavoriteCount":11,"RawContent":null},{"Id":"1123274432565452802","CreatedAt":"2019-04-30T17:14:28+00:00","UserScreenname":"xamarinhq","Text":"Learn about new, exciting releases and tools to help jump start your next mobile development project by networking… https://t.co/9YpJzAFHml","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":29,"FavoriteCount":11,"RawContent":null},{"Id":"1121888817483530243","CreatedAt":"2019-04-26T21:28:32+00:00","UserScreenname":"xamarinhq","Text":"This week, @JamesMontemagno &amp; Alexandre Costa show us the importance of making mobile apps accessible as they talk… https://t.co/7qsj6o1VYm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":15,"RawContent":null},{"Id":"1121502644189716481","CreatedAt":"2019-04-25T19:54:01+00:00","UserScreenname":"xamarinhq","Text":"We're excited to announce a new inclusion to our Xamarin Showcase gallery... let's take a look at the latest custom… https://t.co/mC9hK1Vmol","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":63,"FavoriteCount":25,"RawContent":null},{"Id":"1120428795440267265","CreatedAt":"2019-04-22T20:46:56+00:00","UserScreenname":"xamarinhq","Text":"When it comes to application size, bigger is not better. It’s one of the key factors a user takes into consideratio… https://t.co/K3s0FDTdqV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":74,"FavoriteCount":39,"RawContent":null},{"Id":"1120357094811680768","CreatedAt":"2019-04-22T16:02:01+00:00","UserScreenname":"xamarinhq","Text":"Say \"Hello!\" to the new Xamarin You Tube Channel.\nCheck it out, and don't forget to subscribe.… https://t.co/KSNaDZg4J0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":118,"FavoriteCount":48,"RawContent":null},{"Id":"1119296356651339777","CreatedAt":"2019-04-19T17:47:01+00:00","UserScreenname":"xamarinhq","Text":"During March, you made submissions to our Visual Challenge. Your feedback and samples have been valuable. ...but wa… https://t.co/S2oMKbh17G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":75,"FavoriteCount":34,"RawContent":null},{"Id":"1119279495238823937","CreatedAt":"2019-04-19T16:40:01+00:00","UserScreenname":"xamarinhq","Text":"We're re-launching our Xamarin Developers YouTube channel! ...find fresh content on building amazing mobile apps di… https://t.co/SDfbKwLV1u","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":44,"RawContent":null},{"Id":"1118990448654200832","CreatedAt":"2019-04-18T21:31:27+00:00","UserScreenname":"xamarinhq","Text":"Find fresh content on building amazing mobile apps directly from the Xamarin team @ Microsoft.\n\nIntroducing the New… https://t.co/S4JC1oCDJU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":117,"FavoriteCount":42,"RawContent":null},{"Id":"1117944446899896322","CreatedAt":"2019-04-16T00:15:01+00:00","UserScreenname":"xamarinhq","Text":"We're getting ready for macOS’s Hardened Runtime and Notary. Learn how to get started; from configuring your entitl… https://t.co/p4W2CszalI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":26,"FavoriteCount":14,"RawContent":null},{"Id":"1116762533346652160","CreatedAt":"2019-04-12T17:58:31+00:00","UserScreenname":"xamarinhq","Text":"There’re tons in store for you in the latest podcast... @codemillmatt and @JamesMontemagno rundown the new features… https://t.co/1TlcD9N8yV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":38,"FavoriteCount":18,"RawContent":null},{"Id":"1115620503232962560","CreatedAt":"2019-04-09T14:20:29+00:00","UserScreenname":"xamarinhq","Text":"Under the Hood: Take an inside look at #DevOps at Microsoft, in this webinar with @abelsquidhead and @Applitools on… https://t.co/qgf7T5OPvM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":38,"FavoriteCount":23,"RawContent":null},{"Id":"1115323538091720704","CreatedAt":"2019-04-08T18:40:27+00:00","UserScreenname":"xamarinhq","Text":"Say 'Hello' to WorkManager - a library that makes it easy to schedule deferrable, asynchronous tasks even if the ap… https://t.co/xOYvf5E0K0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":106,"FavoriteCount":47,"RawContent":null},{"Id":"1113833658920472576","CreatedAt":"2019-04-04T16:00:12+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":31,"FavoriteCount":11,"RawContent":null},{"Id":"1113554700702449664","CreatedAt":"2019-04-03T21:31:44+00:00","UserScreenname":"xamarinhq","Text":"Last week we issued a challenge to the Xamarin community to use the new Material Design controls with Visual by rep… https://t.co/JpaGEihELG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":147,"FavoriteCount":54,"RawContent":null},{"Id":"1113137014768066560","CreatedAt":"2019-04-02T17:52:00+00:00","UserScreenname":"xamarinhq","Text":"News from the #VisualStudio 2019 Launch Event. See what’s new for #Xamarin Developers in #VS2019,… https://t.co/ylrA7eBnQ4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":149,"FavoriteCount":72,"RawContent":null}]}},"RunOn":"2019-05-11T05:30:54.0284359Z","RunDurationInMilliseconds":2370}