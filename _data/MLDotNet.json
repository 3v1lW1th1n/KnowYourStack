{"Data":{"GitHub":{"Issues":[{"Id":"348580141","IsPullRequest":false,"CreatedAt":"2018-08-08T05:28:31","Actor":"rauhs","Number":"663","RawContent":null,"Title":"System.TypeLoadException: Could not load type 'Microsoft.ML.Runtime.ITrainer`2'","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: 10.0.14\r\n- **.NET Version (eg., dotnet --info)**: 2.1.202\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nUpgraded my pipeline to v0.4. It used SDCA multi classification.\r\n\r\nOn the *first* `Train` call it always throws a\r\n\r\n```\r\nSystem.TypeLoadException: Could not load type 'Microsoft.ML.Runtime.ITrainer`2' from assembly 'Microsoft.ML.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\r\n   at System.Reflection.CustomAttribute._CreateCaObject(RuntimeModule pModule, IRuntimeMethodInfo pCtor, Byte** ppBlob, Byte* pEndBlob, Int32* pcNamedArgs)\r\n   at System.Reflection.CustomAttribute.CreateCaObject(RuntimeModule module, IRuntimeMethodInfo ctor, IntPtr& blob, IntPtr blobEnd, Int32& namedArgs)\r\n   at System.Reflection.CustomAttribute.GetCustomAttributes(RuntimeModule decoratedModule, Int32 decoratedMetadataToken, Int32 pcaCount, RuntimeType attributeFilterType, Boolean mustBeInheritable, IList derivedAttributes, Boolean isDecoratedTargetSecurityTransparent)\r\n   at System.Reflection.CustomAttribute.GetCustomAttributes(RuntimeAssembly assembly, RuntimeType caType)\r\n   at System.Attribute.GetCustomAttributes(Assembly element, Type attributeType, Boolean inherit)\r\n   at Microsoft.ML.Runtime.ComponentCatalog.CacheLoadedAssemblies()\r\n   at Microsoft.ML.Runtime.ComponentCatalog.FindLoadableClasses[TSig]()\r\n   at Microsoft.ML.Runtime.EntryPoints.ModuleCatalog..ctor(IExceptionContext ectx)\r\n   at Microsoft.ML.Runtime.EntryPoints.ModuleCatalog.CreateInstance(IExceptionContext ectx)\r\n   at Microsoft.ML.Runtime.Experiment..ctor(IHostEnvironment env)\r\n   at Microsoft.ML.LearningPipeline.Train[TInput,TOutput]()\r\n```\r\n\r\nIt works fine on subsequent training calls to similar pipelines. It worked fine under 0.3","Url":"https://github.com/dotnet/machinelearning/issues/663","RelatedDescription":"Open issue \"System.TypeLoadException: Could not load type 'Microsoft.ML.Runtime.ITrainer`2'\" (#663)"},{"Id":"348522576","IsPullRequest":true,"CreatedAt":"2018-08-07T23:31:47","Actor":"montebhoover","Number":"662","RawContent":null,"Title":"Add reference to ImageAnalytics nuget so image transforms are packaged.","State":"open","Body":"Add reference to ImageAnalytics nuget so image transforms/learners are packaged.\r\n\r\nFixes #661 \r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/662","RelatedDescription":"Open PR \"Add reference to ImageAnalytics nuget so image transforms are packaged.\" (#662)"},{"Id":"348521748","IsPullRequest":false,"CreatedAt":"2018-08-07T23:27:08","Actor":"montebhoover","Number":"661","RawContent":null,"Title":"Microsoft.ML.ImageAnalytics nuget doesn't produce dlls for transforms/learners.","State":"open","Body":"After installing the Microsoft.ML.ImageAnalytics nuget and building, the packages folder for ImageAnalytics is empty.  This is due to the fact that it is not referenced by the Microsoft.ML.ImageAnalytics.csproj file.  The fix would be to add the following line to the .csproj:\r\n\r\n`<IncludeInPackage>Microsoft.ML.ImageAnalytics</IncludeInPackage>`","Url":"https://github.com/dotnet/machinelearning/issues/661","RelatedDescription":"Open issue \"Microsoft.ML.ImageAnalytics nuget doesn't produce dlls for transforms/learners.\" (#661)"},{"Id":"348128489","IsPullRequest":true,"CreatedAt":"2018-08-07T16:31:37","Actor":"GalOshri","Number":"656","RawContent":null,"Title":"Add release notes for ML.NET 0.4","State":"closed","Body":"This adds release notes for ML.NET 0.4. \r\n\r\nNote that some of the documentation links are not available yet. They will start working after the official release.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/656","RelatedDescription":"Closed or merged PR \"Add release notes for ML.NET 0.4\" (#656)"},{"Id":"348385143","IsPullRequest":true,"CreatedAt":"2018-08-07T15:57:57","Actor":"xadupre","Number":"660","RawContent":null,"Title":"Add method AddSerialize to class Experiment to add custom entrypoints.","State":"open","Body":"Fixes #659, all entrypoints in class Experiment are stored in _jsonNodes. The method AddSerialize can appends a new node not necessarily defined in Microsoft.ML.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/660","RelatedDescription":"Open PR \"Add method AddSerialize to class Experiment to add custom entrypoints.\" (#660)"},{"Id":"348381909","IsPullRequest":false,"CreatedAt":"2018-08-07T15:50:03","Actor":"xadupre","Number":"659","RawContent":null,"Title":"Cannot create entry point for a new learner in a package with depends on Microsoft.ML.","State":"open","Body":"The Following instruction ``_jsonNodes.Add(Serialize(\"Data.DataViewReference\", input, output));`` is automatocally generated for every entrypoint but _jsonNodes is private member. I did not find a way to add a custom learner in a package which takes Microsoft.ML as a dependency.","Url":"https://github.com/dotnet/machinelearning/issues/659","RelatedDescription":"Open issue \"Cannot create entry point for a new learner in a package with depends on Microsoft.ML.\" (#659)"},{"Id":"348345674","IsPullRequest":true,"CreatedAt":"2018-08-07T14:26:17","Actor":"Nepomuceno","Number":"658","RawContent":null,"Title":"Including Thread Id in the path to avoid collisions","State":"open","Body":"This pull request it is to try to solve the problem at #568 \r\n\r\nWhat we did was add the Thread ID in the extracted entity this might result in one entity being added more than once in case there are multi thread working int the solution. Would be good to validate that but I was unsure on how to do it. Another solution would be just to not include anything in case the file it is being extracted already. \r\n\r\nWhat it is the desired behavior for this library would be subjected to how it works if someone from the team could help in understanding that I would be grateful.","Url":"https://github.com/dotnet/machinelearning/pull/658","RelatedDescription":"Open PR \"Including Thread Id in the path to avoid collisions\" (#658)"},{"Id":"348287385","IsPullRequest":false,"CreatedAt":"2018-08-07T11:51:09","Actor":"kdcllc","Number":"657","RawContent":null,"Title":"Adding MP3 processing support porting pyAudioAnalysis library","State":"open","Body":"This is a feature request. Currently, I have to use Python libraryhttps://github.com/tyiannak/pyAudioAnalysis in order to process MP3 files and retrieve feature set. I would like to see this library ported to ML.NET functionality.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/657","RelatedDescription":"Open issue \"Adding MP3 processing support porting pyAudioAnalysis library\" (#657)"},{"Id":"348126800","IsPullRequest":false,"CreatedAt":"2018-08-07T00:42:16","Actor":"codemzs","Number":"655","RawContent":null,"Title":"OpemMP support for MKL library and SymSGD.","State":"open","Body":"Current MKL library was not built with parallel option to not have dependency on OpenMP because we are still waiting for guidance from legal department on redistributing open mp binary.","Url":"https://github.com/dotnet/machinelearning/issues/655","RelatedDescription":"Open issue \"OpemMP support for MKL library and SymSGD.\" (#655)"},{"Id":"348120663","IsPullRequest":false,"CreatedAt":"2018-08-07T00:01:53","Actor":"mjmckp","Number":"654","RawContent":null,"Title":"Default value of sigmoid parameter for LightGBM","State":"open","Body":"[The default value of the `sigmoid` parameter for LightGBM is 1](https://github.com/Microsoft/LightGBM/blob/master/docs/Parameters.rst#sigmoid), however in the ML.Net wrapper it is hardwired to 0.5:\r\nhttps://github.com/dotnet/machinelearning/blob/f9d3973a056ad26bc6cc15c2d7a09f8ae47e30da/src/Microsoft.ML.LightGBM/LightGbmArguments.cs#L404\r\n\r\nWhy is this the case? Shouldn't this parameter either be 1 or exposed on the ML.Net API instead?","Url":"https://github.com/dotnet/machinelearning/issues/654","RelatedDescription":"Open issue \"Default value of sigmoid parameter for LightGBM\" (#654)"},{"Id":"348098009","IsPullRequest":true,"CreatedAt":"2018-08-06T22:06:02","Actor":"Ivanidzo4ka","Number":"653","RawContent":null,"Title":"API scenarios implemented with low-level functions","State":"open","Body":"examples for #584 ","Url":"https://github.com/dotnet/machinelearning/pull/653","RelatedDescription":"Open PR \"API scenarios implemented with low-level functions\" (#653)"},{"Id":"347972660","IsPullRequest":true,"CreatedAt":"2018-08-06T20:03:10","Actor":"eerhardt","Number":"652","RawContent":null,"Title":"Fix test output during CI.","State":"closed","Body":"When tests run in CI, we are not displaying the test output to the console. So if a test fails, and for some reason the .trx file isn't parsed correctly, it is impossible to see what test failed and why.\r\n\r\nThe test output isn't being displayed because of https://github.com/Microsoft/vstest/issues/1503.\r\n\r\nTo work around the vstest bug, split CI builds into 2 separate MSBuild invocations: one to do the build (which is multi-proc) and another to run the tests (which doesn't need MSBuild node reuse).\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/652","RelatedDescription":"Closed or merged PR \"Fix test output during CI.\" (#652)"},{"Id":"347946870","IsPullRequest":true,"CreatedAt":"2018-08-06T15:25:00","Actor":"Jongkeun","Number":"651","RawContent":null,"Title":"fixed a spelling from adressing to addressing.","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nfixed #650.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/651","RelatedDescription":"Closed or merged PR \"fixed a spelling from adressing to addressing.\" (#651)"},{"Id":"347946590","IsPullRequest":false,"CreatedAt":"2018-08-06T15:25:00","Actor":"Jongkeun","Number":"650","RawContent":null,"Title":"There is a miss spelling of a `CONTRIBUTING.md` file.","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**:\r\n- **.NET Version (eg., dotnet --info)**: \r\n\r\n### Issue\r\nfixed a spelling of a `CONTRIBUTING.md` file.\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/650","RelatedDescription":"Closed issue \"There is a miss spelling of a `CONTRIBUTING.md` file.\" (#650)"},{"Id":"347894183","IsPullRequest":false,"CreatedAt":"2018-08-06T12:00:02","Actor":"rauhs","Number":"649","RawContent":null,"Title":"Multi class prediction: Best score doesn't always match prediction","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Win10\r\n- **.NET Version (eg., dotnet --info)**: 2.1.202\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n\r\nI wanted to get \"top-k\" or \"best predictions\" from a multi classification problem. The code:\r\n\r\n```C#\r\nmodel.TryGetScoreLabelNames(out var classMapping);\r\n        foreach (var toEval in dataTrain)\r\n        {\r\n          var prediction = model.Predict(toEval);\r\n          var sortedScores = prediction.Score.Zip(classMapping, Tuple.Create).OrderBy(sk => -sk.Item1).ToArray();\r\n          var sum = prediction.Score.Sum(); // correctly usually ~1\r\n          var topPrediction = sortedScores.First().Item2;\r\n          if (topPrediction != prediction.CarrierId)\r\n          {\r\n            Console.WriteLine(\"Dont match. Bad!\");\r\n          }\r\n        }\r\n```\r\nwhere `CarrierId` is my predicted label (a string).\r\n\r\nI'm using `SDCA` with (roughly):\r\n\r\n```C#\r\nreturn new LearningPipeline()\r\n      {\r\n        CollectionDataSource.Create(dataTrain),\r\n        new Dictionarizer((\"CarrierId\", \"Label\")),\r\n       ....\r\n    } \r\n```\r\n\r\n- **What happened?**\r\nSometimes, the predicted label doesn't match the to score in `Scores`.\r\n\r\nNote: The class in `CarrierId` is usually the correct class and the top scored class is not correct.","Url":"https://github.com/dotnet/machinelearning/issues/649","RelatedDescription":"Open issue \"Multi class prediction: Best score doesn't always match prediction\" (#649)"},{"Id":"347352033","IsPullRequest":false,"CreatedAt":"2018-08-06T07:29:14","Actor":"aho81","Number":"642","RawContent":null,"Title":"How to build transform-only pipelines","State":"closed","Body":"I found comments, that there should be a way to use transforms without the need of a trainer/learner (i.e., building a \"processing / transform - pipeline instead of an LearningPipeline, cp.  https://github.com/dotnet/machinelearning/issues/259#issuecomment-393362342). Unfourtunately, I could not find out, how to achieve this.\r\n\r\nIn my usecase, I want to determine similarity of documents with n-gram vectorization and cosine distance. The functionalty for featurization is given by the TextFeaturizer (https://docs.microsoft.com/de-de/dotnet/api/microsoft.ml.transforms.textfeaturizer). In this usecase I don't want to do a training (yet), but am interessted in the output in the result of the TextFeaturizer itself.\r\n\r\nAccessing the results of partial steps could be helpful for debugging LearningPipelines too (cp. discussion here: https://github.com/dotnet/machinelearning/issues/259).\r\n@TomFinley \r\n","Url":"https://github.com/dotnet/machinelearning/issues/642","RelatedDescription":"Closed issue \"How to build transform-only pipelines\" (#642)"},{"Id":"347801684","IsPullRequest":false,"CreatedAt":"2018-08-06T06:59:18","Actor":"codemzs","Number":"648","RawContent":null,"Title":"Pass MKL version to CMAKE from MSBUILD","State":"open","Body":"CMAKE uses MKL library to build native SymSGD library. Currently MKL version is hard-coded to 0.0.0.5 but it would be better it this version information is passed from MSBUILD to CMAKE. MSBUILD would retrieve MKL version that is being used from dependencies.prop file in build directory under root.","Url":"https://github.com/dotnet/machinelearning/issues/648","RelatedDescription":"Open issue \"Pass MKL version to CMAKE from MSBUILD\" (#648)"},{"Id":"347798420","IsPullRequest":true,"CreatedAt":"2018-08-06T06:45:27","Actor":"codemzs","Number":"647","RawContent":null,"Title":"Pass MKL version to CMAKE from MSBUILD.","State":"open","Body":"fixes #648 ","Url":"https://github.com/dotnet/machinelearning/pull/647","RelatedDescription":"Open PR \"Pass MKL version to CMAKE from MSBUILD.\" (#647)"},{"Id":"347558335","IsPullRequest":true,"CreatedAt":"2018-08-03T22:59:32","Actor":"zeahmed","Number":"646","RawContent":null,"Title":"[Part 1] Added comments/description to convenience constructors for a set of transform","State":"open","Body":"This PR partially addresses #524.\r\n\r\nInformative comments/description is added to convenience constructors of transforms so that comments/description appear in the intellisense for users.\r\n\r\nDescription/Comments are obtained from relevant `doc.xml` file and added to C# summary comments section using `<include>` tag. If  `doc.xml` does not contain the required information it is directly added to C# summary comments.\r\n\r\nFollowing is list of transforms covered in this PR.\r\n\r\n- BootstrapSampleTransform\r\n- CategoricalHashTransform\r\n- CategoricalTransform\r\n- ConcatTransform\r\n- CopyColumnsTransform\r\n- CountFeatureSelection\r\n- DropColumnsTransform\r\n- LpNormNormalizerTransform\r\n- NAFilter\r\n- NormalizeTransform\r\n","Url":"https://github.com/dotnet/machinelearning/pull/646","RelatedDescription":"Open PR \"[Part 1] Added comments/description to convenience constructors for a set of transform\" (#646)"},{"Id":"347516565","IsPullRequest":true,"CreatedAt":"2018-08-03T20:46:18","Actor":"eerhardt","Number":"645","RawContent":null,"Title":"Bump the master branch to 0.5","State":"closed","Body":"Now that we have branched for 0.4, we need to bump the master branch to the next version.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/645","RelatedDescription":"Closed or merged PR \"Bump the master branch to 0.5\" (#645)"},{"Id":"347516249","IsPullRequest":true,"CreatedAt":"2018-08-03T20:38:05","Actor":"eerhardt","Number":"644","RawContent":null,"Title":"Merge master into release/preview for 0.4","State":"closed","Body":"This is a merge of the master branch.  It is basically a straight \"accept master\" on any conflict.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/644","RelatedDescription":"Closed or merged PR \"Merge master into release/preview for 0.4\" (#644)"},{"Id":"347432074","IsPullRequest":true,"CreatedAt":"2018-08-03T15:55:11","Actor":"eerhardt","Number":"643","RawContent":null,"Title":"Fix official build failure","State":"closed","Body":"Now that the HalLearners nuget package doesn't have a PackageReference to MlNetMklDeps, the MlNetMklDeps package is no longer getting restored during the official build. Since HalLearners needs the license file from MlNetMklDeps, it is failing to build the nuget package.\r\n\r\nThe fix is to restore all project before building the packages.","Url":"https://github.com/dotnet/machinelearning/pull/643","RelatedDescription":"Closed or merged PR \"Fix official build failure\" (#643)"},{"Id":"347138582","IsPullRequest":true,"CreatedAt":"2018-08-03T13:47:57","Actor":"eerhardt","Number":"635","RawContent":null,"Title":"Copy native assemblies for packages.config","State":"closed","Body":"Whenever we have native assemblies in our nuget packages, we need to have special build logic in order for it to work on packages.config.\r\n\r\nWe already had that logic for Microsoft.ML, but were missing it for CpuMath and HalLearners.\r\n\r\nFix #633","Url":"https://github.com/dotnet/machinelearning/pull/635","RelatedDescription":"Closed or merged PR \"Copy native assemblies for packages.config\" (#635)"},{"Id":"347270264","IsPullRequest":true,"CreatedAt":"2018-08-03T06:04:58","Actor":"codemzs","Number":"641","RawContent":null,"Title":"Make model path mandatory in export to ONNX.","State":"open","Body":"fixes #423 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/641","RelatedDescription":"Open PR \"Make model path mandatory in export to ONNX.\" (#641)"},{"Id":"347204945","IsPullRequest":false,"CreatedAt":"2018-08-03T02:00:39","Actor":"codemzs","Number":"638","RawContent":null,"Title":"Package mkl binaries with Hal Learners nuget.","State":"closed","Body":"Native SymSGD code depends on Mkl libraries during runtime hence both of them should be packaged together to prevent dependency not found issue on macOS and linux.","Url":"https://github.com/dotnet/machinelearning/issues/638","RelatedDescription":"Closed issue \"Package mkl binaries with Hal Learners nuget.\" (#638)"},{"Id":"347131475","IsPullRequest":true,"CreatedAt":"2018-08-03T02:00:39","Actor":"codemzs","Number":"634","RawContent":null,"Title":"package mkl lib with hal learners.","State":"closed","Body":"fixes #638 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/634","RelatedDescription":"Closed or merged PR \"package mkl lib with hal learners.\" (#634)"},{"Id":"347222797","IsPullRequest":true,"CreatedAt":"2018-08-03T00:58:01","Actor":"Ivanidzo4ka","Number":"640","RawContent":null,"Title":"Sketch to support read-only properties","State":"open","Body":"Suggestion how to fix #631 \r\nThis would let user pass partially visible properties, but in same time, use will have to mark some of them if he don't want them to be exposed.","Url":"https://github.com/dotnet/machinelearning/pull/640","RelatedDescription":"Open PR \"Sketch to support read-only properties\" (#640)"},{"Id":"347221914","IsPullRequest":true,"CreatedAt":"2018-08-03T00:51:52","Actor":"Zruty0","Number":"639","RawContent":null,"Title":"API 'getting started' examples","State":"open","Body":"These examples currently do not compile, they depend on both Estimators and static type checks, but let's at least agree that we can all stand behind them in terms of simplicity.\r\n\r\nDo not merge, this is a discussion-only PR.","Url":"https://github.com/dotnet/machinelearning/pull/639","RelatedDescription":"Open PR \"API 'getting started' examples\" (#639)"},{"Id":"347141692","IsPullRequest":true,"CreatedAt":"2018-08-02T22:13:38","Actor":"eerhardt","Number":"636","RawContent":null,"Title":"Change the linux official build queue from test to production.","State":"closed","Body":"We were using a \"test\" build queue because of some limitations with the build lab.  Those limitations are now fixed, so we can start using the \"production\" build queue again.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/636","RelatedDescription":"Closed or merged PR \"Change the linux official build queue from test to production.\" (#636)"},{"Id":"347167178","IsPullRequest":false,"CreatedAt":"2018-08-02T20:43:10","Actor":"sfilipi","Number":"637","RawContent":null,"Title":"Per component examples in the repo,  to reference in the documentation","State":"open","Body":"Our examples in the documentation currently aren't very comprehensive, because they live in XML, and it is not easily maintainable to write longer code snippets embedded in XML. \r\n\r\nThe infrastructure for docs.microsoft.com supports cross-referencing other files within the XML. \r\nThose other files can be C# files and have more fully fledged examples, that compile. \r\n\r\nSetup another folder within Microsoft.ML.Tests, similar to scenarios, that will contain examples for each components. More than one component can be used for the scenario, but they should be kept simple. \r\nThose methods can be reused by the tests.\r\n\r\nThis issue will be considered resolved after  setting up one such example end-to-end. ","Url":"https://github.com/dotnet/machinelearning/issues/637","RelatedDescription":"Open issue \"Per component examples in the repo,  to reference in the documentation\" (#637)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-08-08T05:30:41.6256576Z","RunDurationInMilliseconds":1546}