{"Data":{"Blog":{"FeedItems":[{"Title":"Deprecating TLS 1.0 and 1.1 on NuGet.org","PublishedOn":"2019-11-15T18:58:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Microsoft, using the latest and secure encryption techniques is very important to us to ensure the security and privacy of our customers. TLS 1.0 and TLS 1.1, released in 1999 and 2006...","Href":"https://devblogs.microsoft.com/nuget/deprecating-tls-1-0-and-1-1-on-nuget-org/","RawContent":null},{"Title":"Deprecating packages on nuget.org","PublishedOn":"2019-09-30T18:29:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce that nuget.org now supports package deprecation. This has been a long standing ask that will help the ecosystem use supported packages. As a package publisher on nuget.org,...","Href":"https://devblogs.microsoft.com/nuget/deprecating-packages-on-nuget-org/","RawContent":null},{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":11,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10911318766","Type":"IssuesEvent","CreatedAt":"2019-11-20T22:50:28","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7710","RelatedDescription":"Opened issue \"Figure out secret rotation story for Gallery App Service\" (#7710) at NuGet/NuGetGallery","RelatedBody":"Right now, secret rotation for Gallery Cloud Service relies on a fact, that it is restarted every day.\nApp services don't do that, need to come up with another plan."},{"Id":"10911264245","Type":"PullRequestEvent","CreatedAt":"2019-11-20T22:41:34","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7709","RelatedDescription":"Opened pull request \"Dropped the `DiagnosticMonitorTraceListener` usage.\" (#7709) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/1912\r\n\r\nRemoved some dead code. `DiagnosticMonitorTraceListener` needs to be configured, we don't have any configuration code in the project (or in web.config)."},{"Id":"10911216503","Type":"PullRequestEvent","CreatedAt":"2019-11-20T22:34:06","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7708","RelatedDescription":"Merged pull request \"Removed the perf logging for the external search calls\" (#7708) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/1912\r\n\r\nThe same data is available through AI, so it adds no new data, but adds I/O load on each Gallery instance.\r\n\r\nAlso, removed all the infra that was supporting it since it was the last/only call.\r\n\r\nAll started with changes to `ExternalSearchService.cs`."},{"Id":"10909494005","Type":"IssuesEvent","CreatedAt":"2019-11-20T18:39:34","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7567","RelatedDescription":"Closed issue \"[UX] Unlisting package redirects to package details page\" (#7567) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\nWhen I unlist a package on nuget.org, I am redirected to my package's display package page. This makes it difficult to bulk unlist/relist packages (see https://github.com/NuGet/NuGetGallery/issues/6959).\r\n\r\n### Describe the solution you'd like\r\nDon't redirect to the Package Details page, instead, stay on the Manage Package page.\r\n\r\n/cc @anangaur \r\n"},{"Id":"10909493396","Type":"IssuesEvent","CreatedAt":"2019-11-20T18:39:29","Actor":"skofman1","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7495","RelatedDescription":"Closed issue \"Deprecating package on nuget.org jumps to the package details page after completing deprecation\" (#7495) at NuGet/NuGetGallery","RelatedBody":"Related Epic issue: #6697 \r\n\r\n### Describe the bug\r\nDeprecating package on nuget.org jumps to the package details page after completing deprecation\r\n\r\n### To Reproduce\r\nSteps to reproduce the behavior:\r\n1. Go to package `Manage` \\ `Deprecation`\r\n2. Deprecate one or more version of the package\r\n3. Click on `Save`\r\n\r\n### Expected behavior\r\nPackage deprecation should finish. Have a banner stating the versions that were deprecated on the `Manage` page.\r\n\r\n### Actual behavior\r\nUpon `Save`, I am redirected to the package details page."},{"Id":"10902166349","Type":"PullRequestEvent","CreatedAt":"2019-11-20T00:57:28","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7708","RelatedDescription":"Opened pull request \"Removed the perf logging for the external search calls\" (#7708) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/Engineering/issues/1912\r\n\r\nAlso, removed all the infra that was supporting it since it was the last call."},{"Id":"10902023231","Type":"IssuesEvent","CreatedAt":"2019-11-20T00:26:32","Actor":"loic-sharma","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7707","RelatedDescription":"Opened issue \"Publish NuGet.Server's symbols\" (#7707) at NuGet/NuGetGallery","RelatedBody":"### Is your feature request related to a problem? Please describe.\r\nIt is difficult to debug a NuGet.Server app as its symbols are missing.\r\n\r\n### Describe the solution you'd like\r\nWe should consider publishing NuGet.Server's symbols to NuGet.org's symbol server. \r\n"}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10912038255","Type":"IssuesEvent","CreatedAt":"2019-11-21T01:13:38","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8847","RelatedDescription":"Closed issue \"\"An item with the same key has already been added\" when restoring in Visual Studio\" (#8847) at NuGet/Home","RelatedBody":"Using latest internal preview, or built from latest dev branch only. Latest public preview not affected."},{"Id":"10911282551","Type":"IssuesEvent","CreatedAt":"2019-11-20T22:44:33","Actor":"karann-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8850","RelatedDescription":"Opened issue \"NuGet PM UI for Solution erroneously states \"Blocked by packages.config\" for a solution that contains a C++ project\" (#8850) at NuGet/Home","RelatedBody":"1. create a new c++ project\r\n2. open PM UI for solution\r\n3. search for \"curl\"\r\n4. Observer the \"version\" combobox\r\n\r\n![image](https://user-images.githubusercontent.com/16904420/69284766-3d58e700-0ba4-11ea-9e99-60701510844b.png)\r\n\r\n\r\n"},{"Id":"10910890546","Type":"IssuesEvent","CreatedAt":"2019-11-20T21:46:09","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8849","RelatedDescription":"Opened issue \"Test: GetPackageCollapsesPackageVersionsForListAvailable is flaky \" (#8849) at NuGet/Home","RelatedBody":"[GetPackageCollapsesPackageVersionsForListAvailable](https://github.com/NuGet/NuGet.Client/blob/3803820961f4d61c06d07b179dab1d0439ec0d91/test/EndToEnd/tests/GetPackageTest.ps1#L40) is flaky. It has failed 10 times in the past 1 weeks.\r\nError message:\r\n`Value is not null. At GetPackageTest.ps1: line 49`\r\nCallstack:\r\n`Microsoft.PowerShell.Commands.WriteErrorException: Value is not null. At GetPackageTest.ps1: line 49`"},{"Id":"10910455516","Type":"IssuesEvent","CreatedAt":"2019-11-20T20:46:48","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8848","RelatedDescription":"Opened issue \"Custom nuget.exe on newer mono might break due to the MSBuild SDK Resolver\" (#8848) at NuGet/Home","RelatedBody":"Specifically errors like this can be hit; \r\n\r\n```\r\n/var/folders/c2/10wzh_315rs5wmnc9m3gsxlw0000gq/T/NuGetScratch/6730wwn7.z40.nugetrestore.targets(437,5): error MSB4018: The \\\"GetRestoreProjectStyleTask\\\" task failed unexpectedly. [/Users/buildagent/agent/_work/1/s/.test/work/7536c2b5/16d30884/solution/a/a.csproj]\\n/var/folders/c2/10wzh_315rs5wmnc9m3gsxlw0000gq/T/NuGetScratch/6730wwn7.z40.nugetrestore.targets(437,5): error MSB4018: System.MissingMethodException: Method not found: System.Nullable`1<System.ValueTuple`2<NuGet.ProjectModel.ProjectStyle, bool>> NuGet.Commands.MSBuildRestoreUtility.GetProjectRestoreStyle(string,bool,string,string,string,NuGet.Common.ILogger) [/Users/buildagent/agent/_work/1/s/.test/work/7536c2b5/16d30884/solution/a/a.csproj]\\n/var/folders/c2/10wzh_315rs5wmnc9m3gsxlw0000gq/T/NuGetScratch/6730wwn7.z40.nugetrestore.targets(437,5): error MSB4018: at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <10b73e4bf233421cae439ef765e97ef0>:0 [/Users/buildagent/agent/_work/1/s/.test/work/7536c2b5/16d30884/solution/a/a.csproj]\\n/var/folders/c2/10wzh_315rs5wmnc9m3gsxlw0000gq/T/NuGetScratch/6730wwn7.z40.nugetrestore.targets(437,5): error MSB4018: at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x002a9] in <10b73e4bf233421cae439ef765e97ef0>:0 [/Users/buildagent/agent/_work/1/s/.test/work/7536c2b5/16d30884/solution/a/a.csproj]\\n/var/folders/c2/10wzh_315rs5wmnc9m3gsxlw0000gq/T/NuGetScratch/6730wwn7.z40.nugetrestore.targets(437,5): error MSB4018: The \\\"GetRestoreProjectStyleTask\\\" task failed unexpectedly. [/Users/buildagent/agent/_work/1/s/.test/work/7536c2b5/16d30884/solution/d/d.csproj]\\n/var/folders/c2/10wzh_315rs5wmnc9m3gsxlw0000gq/T/NuGetScratch/6730wwn7.z40.nugetrestore.targets(437,5): error MSB4018: System.MissingMethodException: Method not found: System.Nullable`1<System.ValueTuple`2<NuGet.ProjectModel.ProjectStyle, bool>> NuGet.Commands.MSBuildRestoreUtility.GetProjectRestoreStyle(string,bool,string,string,string,NuGet.Common.ILogger) [/Users/buildagent/agent/_work/1/s/.test/work/7536c2b5/16d30884/solution/d/d.csproj]\\n/var/folders/c2/10wzh_315rs5wmnc9m3gsxlw0000gq/T/NuGetScratch/6730wwn7.z40.nugetrestore.targets(437,5): error MSB4018: at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute () [0x00029] in <10b73e4bf233421cae439ef765e97ef0>:0 [/Users/buildagent/agent/_work/1/s/.test/work/7536c2b5/16d30884/solution/d/d.csproj]\\n/var/folders/c2/10wzh_315rs5wmnc9m3gsxlw0000gq/T/NuGetScratch/6730wwn7.z40.nugetrestore.targets(437,5): error MSB4018: at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask (Microsoft.Build.BackEnd.ITaskExecutionHost taskExecutionHost, Microsoft.Build.BackEnd.Logging.TaskLoggingContext taskLoggingContext, Microsoft.Build.BackEnd.TaskHost taskHost, Microsoft.Build.BackEnd.ItemBucket bucket, Microsoft.Build.BackEnd.TaskExecutionMode howToExecuteTask) [0x002a9] in <10b73e4bf233421cae439ef765e97ef0>:0 [/Users/buildagent/agent/_work/1/s/.test/work/7536c2b5/16d30884/solution/d/d.csproj]\\n/var/folders/c2/10wzh_315rs5wmnc9m3gsxlw0000gq/T/NuGetScratch/6730wwn7.z40.nugetrestore.targets(437,5): error MSB4018: The \\\"GetRestoreProjectStyleTask\\\" task failed unexpectedly. [/Users/buildagent/agent/_work/1/s/.test/work/7536c2b5/16d30884/solution/g/g.csproj]\\n/var/folders/c2/10wzh_315rs5wmnc9m3gsxlw0000gq/T/NuGetScratch/6730wwn7.z40.nugetrestore.targets(437,5): error MSB4018: System.MissingMethodException: Method not found: System.Nullable`1<System.ValueTuple`2<NuGet.ProjectModel.ProjectStyle, bool>> NuGet.Commands.MSBuildRestoreUtility.GetProjectRestoreStyle(string,bool,string,string,string,NuGet.Common.ILogger) [/Users/buildagent/agent/_work/\r\n```"},{"Id":"10910411285","Type":"IssuesEvent","CreatedAt":"2019-11-20T20:40:38","Actor":"jeffkl","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8829","RelatedDescription":"Closed issue \"Logic in RestoreTask should be refactored into a utility\" (#8829) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nIn order to make way for a new method of building a DependencyGraphSpec and executing a restore, the logic that does the restore in `RestoreTask` should be refactored out into a utility class to avoid code duplication.\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): Any\r\n\r\nNuGet version (x.x.x.xxx): Any\r\n\r\ndotnet.exe --version (if appropriate): Any\r\n\r\nVS version (if appropriate): Any\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Any\r\n\r\nWorked before? If so, with which NuGet version: Any\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.\r\n2.\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\n### Sample Project\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"10909325047","Type":"IssuesEvent","CreatedAt":"2019-11-20T18:16:54","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8847","RelatedDescription":"Opened issue \"VS: Error occurred while restoring NuGet packages: An item with the same key has already been added.\" (#8847) at NuGet/Home","RelatedBody":"Using latest internal preview, or built from latest dev branch only. Latest public preview not affected."},{"Id":"10907318132","Type":"IssuesEvent","CreatedAt":"2019-11-20T14:37:58","Actor":"yacoubh","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8846","RelatedDescription":"Opened issue \"nuget pack process loses file attributes\" (#8846) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet.exe\r\n\r\nNuGet version (3.4.4.1321):\r\n\r\nOS version win10 v1607 (14393.321):\r\n\r\nWorked before? Not sure maybe it was always like this:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create a file with read-only attributes\r\n\r\n2. Pack it into a nuget package using nuget pack (and a valid nuspec file)\r\n\r\n3. Extract the file out of the nupkg \r\n\r\n4. Check the file attributes and see that the read-only attribute is gone\r\n\r\nWhy does the packing process lose the read-only file attribute?"},{"Id":"10906524915","Type":"IssuesEvent","CreatedAt":"2019-11-20T13:08:23","Actor":"jzkortee","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8845","RelatedDescription":"Opened issue \"Unable to download any Nuget package\" (#8845) at NuGet/Home","RelatedBody":"I am unable to download any Nuget package. I am getting the following error.\r\n[nuget.org] Unable to load the service index for source https://api.nuget.org/v3/index.json.\r\n\r\nI am using Visual Studio 2019 V16.3.9 Community edition on ]Windows 10 Profession\r\n\r\nThanks"},{"Id":"10904433448","Type":"IssuesEvent","CreatedAt":"2019-11-20T08:43:46","Actor":"HelioVaGator","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8844","RelatedDescription":"Opened issue \"nuget not resolving dependency using what specified in nuget package for Microsoft.Extensions.Logging\" (#8844) at NuGet/Home","RelatedBody":"## Background\r\nI have created a class library for .net core (targetting v`2.2`), and I have a .net core application as well (targetting v`2.2`).\r\nI am trying to export the library as nuget package and install it in my application.\r\nHere is the dependencies for my library\r\n![MyLib dependencies](https://user-images.githubusercontent.com/6700486/69222069-b7866d00-0b9e-11ea-9cad-956c8c667ea9.png)\r\nI am able to export it as nuget package and for now I am storing it in local nuget repo.\r\nBut when I try to install this library package in my application it's not getting installed due to package version conflict for `Microsoft.Extensions.Logging`. Here's package manager console output.\r\n![PackageManagerConsoleOutput](https://user-images.githubusercontent.com/6700486/69222266-2368d580-0b9f-11ea-8fc0-56348e6a2b70.png)\r\n\r\n## Issue: \r\nI have specified the exact version for  `Microsoft.Extensions.Logging` i.e. `[2.2.0]` as we could confirm that in the screenshot showing dependency for my library, then why it's getting resolved to version `3.0.0`?\r\nHow could I resolve this issue?\r\n\r\n## Details about environment\r\n\r\nNuGet product used (Package Manager Console):\r\n\r\nNuGet version: Package Manager Console Host Version 5.3.1.6268\r\n\r\nVS version (if appropriate): Microsoft Visual Studio Community 2019 Version 16.3.8\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Win 10 Ent Version: 1809\r\n"},{"Id":"10903966737","Type":"IssuesEvent","CreatedAt":"2019-11-20T07:31:24","Actor":"MattiasEppler","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8843","RelatedDescription":"Opened issue \"How to copy non assembly files to output directory of application\" (#8843) at NuGet/Home","RelatedBody":"Hello.\r\n\r\nHow is it possible to copy none assembly files, like .xml, .txt .cat, and so on to the output directory of the application which uses my nuget package.\r\n\r\nThis is how my projectfile of my nuget package in visual studio looks like\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net40</TargetFramework>\r\n    <PackageId>SomeId</PackageId>\r\n    <Version>1.0.0.0</Version>\r\n    <Authors>booster</Authors>\r\n    <Company>MyCompany</Company>\r\n    <Product>MyProduct</Product>\r\n    <AssemblyName>MyProduct</AssemblyName>\r\n    <RootNamespace>MyProduct</RootNamespace>\r\n    <Description>SomePackage</Description>\r\n  </PropertyGroup>\r\n \r\n  <ItemGroup>\r\n    <Folder Include=\"Properties\\\" />\r\n    <None Include=\"native\\**\\*.*\">\r\n      <Pack>True</Pack>\r\n      <CopyToOutputDirectory>Always</CopyToOutputDirectory>\r\n      <PackagePath>\\lib\\$(TargetFramework)</PackagePath>\r\n    </None>\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nin native there are some dlls, exe and other files.\r\n```\r\n\\native\r\n     \\some.dll\r\n     \\other.dll\r\n     \\some.exe\r\n     \\otherFile.txt\r\n     \\file.xml\r\n```\r\n\r\nwith the settings in the project file only the assembly files (dll and exe) will be in the output directory of the application which uses the nugetpackage.\r\n\r\nHow to copy also all other files from the native foler?"},{"Id":"10901889583","Type":"IssuesEvent","CreatedAt":"2019-11-19T23:58:58","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8842","RelatedDescription":"Opened issue \"Deadlock in VSSettings init\" (#8842) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): VS \r\n\r\nNuGet version (x.x.x.xxx): 5.5\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate):16.5 P2\r\n\r\n\r\nWorked before? If so, with which NuGet version:\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\nNuGet Side of https://github.com/dotnet/roslyn/issues/39889.\r\n\r\n**Version Used**: Latest 16.5 Preview2 dogfood build (29518.163.master)\r\n\r\n**Repro steps (pretty consistent repro)**\r\n\r\n1. Create a new C# project\r\n2. Add code so you have missing usings. For example, just type out a `Console.Write(...);`, but no `using System;` so you get compiler errors. Place the cursor on the squiggle and click save all.\r\n3. Close VS\r\n4. Restart VS, open the same project\r\n5. Hit Ctrl + Dot - if you do this before the red squiggle shows up, I invariably see this deadlock.\r\n\r\nI think there might be other ways to hit this, but I found this was a pretty consistent repro for me.\r\n\r\nDump shared at: `\\\\<%internal_share%>\\public\\mava`\r\n\r\n\r\n\r\n**Version Used**: Latest 16.5 Preview2 dogfood build (29518.163.master)\r\n\r\n**Repro steps (pretty consistent repro)**\r\n\r\n1. Create a new C# project\r\n2. Add code so you have missing usings. For example, just type out a `Console.Write(...);`, but no `using System;` so you get compiler errors. Place the cursor on the squiggle and click save all.\r\n3. Close VS\r\n4. Restart VS, open the same project\r\n5. Hit Ctrl + Dot - if you do this before the red squiggle shows up, I invariably see this deadlock.\r\n\r\nI think there might be other ways to hit this, but I found this was a pretty consistent repro for me.\r\n\r\nDump shared at: `\\\\<%internal_share%>\\public\\mavasani\\Deadlock_Ctrl_Dot\\devenv.dmp`\r\n\r\n**Main thread:**\r\n\r\n```\r\n>\tMicrosoft.CodeAnalysis.Workspaces.dll!Roslyn.Utilities.TaskExtensions.WaitAndGetResult_CanCallOnBackground<System.Collections.Immutable.ImmutableArray<System.__Canon>>(System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<System.__Canon>task, System.Threading.CancellationToken cancellationToken)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.Wpf.dll!Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionsSourceProvider.SuggestedActionsSource.GetCodeFixes(Microsoft.CodeAnalysis.Editor.Shared.ITextBufferSupportsFeatureService supportsFeatureService, Microsoft.VisualStudio.Language.Intellisense.ISuggestedActionCategorySet requestedActionCategories, Microsoft.CodeAnalysis.Workspace workspace, Microsoft.CodeAnalysis.Document document, Microsoft.VisualStudio.Text.SnapshotSpan range, System.Threading.CancellationToken cancellationToken)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.Wpf.dll!Microsoft.CodeAnalysis.Editor.Implementation.Suggestions.SuggestedActionsSourceProvider.SuggestedActionsSource.GetSuggestedActions(Microsoft.VisualStudio.Language.Intellisense.ISuggestedActionCategorySet requestedActionCategories, Microsoft.VisualStudio.Text.SnapshotSpan range, System.Threading.CancellationToken cancellationToken)\tUnknown\r\n \tMicrosoft.VisualStudio.Platform.VSEditor.dll!Microsoft.VisualStudio.Language.Intellisense.Implementation.LightBulbSession.TryGetSuggestedActionSets.AnonymousMethod__0(Microsoft.VisualStudio.Utilities.IUIThreadOperationContext c)\tUnknown\r\n \tMicrosoft.VisualStudio.Editor.Implementation.dll!Microsoft.VisualStudio.Editor.Implementation.VSUIThreadOperationExecutor.Execute(Microsoft.VisualStudio.Utilities.UIThreadOperationExecutionOptions executionOptions, System.Action<Microsoft.VisualStudio.Utilities.IUIThreadOperationContextaction)\tUnknown\r\n \tMicrosoft.VisualStudio.Editor.Implementation.dll!Microsoft.VisualStudio.Editor.Implementation.VSUIThreadOperationExecutor.Execute(string title, string defaultDescription, bool allowCancellation, bool showProgress, System.Action<Microsoft.VisualStudio.Utilities.IUIThreadOperationContextaction)\tUnknown\r\n \tMicrosoft.VisualStudio.Platform.VSEditor.dll!Microsoft.VisualStudio.Text.Utilities.UIThreadOperationExecutor.Execute(string title, string defaultDescription, bool allowCancellation, bool showProgress, System.Action<Microsoft.VisualStudio.Utilities.IUIThreadOperationContextaction)\tUnknown\r\n \tMicrosoft.VisualStudio.Platform.VSEditor.dll!Microsoft.VisualStudio.Language.Intellisense.Implementation.LightBulbSession.TryGetSuggestedActionSets(out System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.Language.Intellisense.SuggestedActionSetactionSets, Microsoft.VisualStudio.Language.Intellisense.ISuggestedActionCategorySet overrideRequestedActionCategories)\tUnknown\r\n \tMicrosoft.VisualStudio.Platform.VSEditor.dll!Microsoft.VisualStudio.Language.Intellisense.Implementation.LightBulbBroker.CreateSession(Microsoft.VisualStudio.Language.Intellisense.ISuggestedActionCategorySet requestedActionCategories, Microsoft.VisualStudio.Text.Editor.ITextView textView, Microsoft.VisualStudio.Text.ITrackingPoint triggerPoint, Microsoft.VisualStudio.Text.ITrackingSpan triggerSpan, System.Collections.Generic.Dictionary<Microsoft.VisualStudio.Text.SnapshotSpan, System.Collections.Generic.IEnumerable<Microsoft.VisualStudio.Language.Intellisense.ISuggestedActionsSource>subjectSpansAndSources, Microsoft.VisualStudio.Language.Intellisense.ISuggestedActionCategorySet applicableCategories, bool preQuerySuggestedActions, bool trackMouse)\tUnknown\r\n```\r\n\r\n**Background thread:**\r\n\r\n```\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTaskFactory.WaitSynchronouslyCore(System.Threading.Tasks.Task task)\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTaskFactory.WaitSynchronously(System.Threading.Tasks.Task task)\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTask.CompleteOnCurrentThread()\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTask<bool>.CompleteOnCurrentThread()\tUnknown\r\n \tMicrosoft.VisualStudio.Threading.dll!Microsoft.VisualStudio.Threading.JoinableTaskFactory.Run<bool>(System.Func<System.Threading.Tasks.Task<bool>asyncMethod, Microsoft.VisualStudio.Threading.JoinableTaskCreationOptions creationOptions)\tUnknown\r\n \tNuGet.PackageManagement.VisualStudio.dll!NuGet.PackageManagement.VisualStudio.VSSolutionManager.IsSolutionOpen.get()\tUnknown\r\n \tNuGet.PackageManagement.VisualStudio.dll!NuGet.PackageManagement.VisualStudio.VSSettings.ResetSolutionSettingsIfNeeded()\tUnknown\r\n \tNuGet.PackageManagement.VisualStudio.dll!NuGet.PackageManagement.VisualStudio.VSSettings.SolutionSettings.get()\tUnknown\r\n \tNuGet.PackageManagement.VisualStudio.dll!NuGet.PackageManagement.VisualStudio.VSSettings.GetSection(string sectionName)\tUnknown\r\n \tNuGet.Configuration.dll!NuGet.Configuration.PackageSourceProvider.LoadPackageSourceLookup(bool byName, NuGet.Configuration.ISettings settings)\tUnknown\r\n \tNuGet.Configuration.dll!NuGet.Configuration.PackageSourceProvider.LoadPackageSources(NuGet.Configuration.ISettings settings, System.Collections.Generic.IEnumerable<NuGet.Configuration.PackageSourcedefaultPackageSources)\tUnknown\r\n \tNuGet.Configuration.dll!NuGet.Configuration.PackageSourceProvider.LoadPackageSources()\tUnknown\r\n \tNuGet.VisualStudio.Implementation.dll!NuGet.VisualStudio.VsPackageSourceProvider.GetSources(bool includeUnOfficial, bool includeDisabled)\tUnknown\r\n>\tMicrosoft.VisualStudio.LanguageServices.dll!Microsoft.VisualStudio.LanguageServices.Packaging.PackageInstallerService.GetPackageSources()\tUnknown\r\n \tMicrosoft.CodeAnalysis.Features.dll!Microsoft.CodeAnalysis.AddImport.AbstractAddImportCodeFixProvider.RegisterCodeFixesAsync(Microsoft.CodeAnalysis.CodeFixes.CodeFixContext context)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.CodeFixes.CodeFixService.GetCodeFixesAsync(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Text.TextSpan span, Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider fixer, bool isBlocking, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnosticdiagnostics, System.Threading.CancellationToken cancellationToken)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.CodeFixes.CodeFixService.AppendFixesAsync.AnonymousMethod__2(System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnosticdxs)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.CodeFixes.CodeFixService.AppendFixesOrConfigurationsAsync.AnonymousMethod__2()\tUnknown\r\n \tMicrosoft.CodeAnalysis.Workspaces.dll!Microsoft.CodeAnalysis.Extensions.IExtensionManagerExtensions.PerformFunctionAsync<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CodeFixes.CodeFix>>(Microsoft.CodeAnalysis.Extensions.IExtensionManager extensionManager, object extension, System.Func<System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CodeFixes.CodeFix>>function, System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CodeFixes.CodeFixdefaultValue)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.CodeFixes.CodeFixService.AppendFixesOrConfigurationsAsync<Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider>(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Text.TextSpan fixesSpan, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostics.DiagnosticDatadiagnosticsWithSameSpan, bool fixAllForInSpan, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CodeFixes.CodeFixCollectionresult, Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider fixer, System.Func<Microsoft.CodeAnalysis.Diagnostic, boolhasFix, System.Func<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.Diagnostic>, System.Threading.Tasks.Task<System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.CodeFixes.CodeFix>>getFixes, System.Threading.CancellationToken cancellationToken)\tUnknown\r\n \tMicrosoft.CodeAnalysis.EditorFeatures.dll!Microsoft.CodeAnalysis.CodeFixes.CodeFixService.AppendFixesAsync(Microsoft.CodeAnalysis.Document document, Microsoft.CodeAnalysis.Text.TextSpan span, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Diagnostics.DiagnosticDatadiagnostics, bool fixAllForInSpan, bool isBlocking, Microsoft.CodeAnalysis.PooledObjects.ArrayBuilder<Microsoft.CodeAnalysis.CodeFixes.CodeFixCollectionresult, System.Threading.CancellationToken cancellationToken)\tUnknown\r\n```\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10740159942","Type":"IssuesEvent","CreatedAt":"2019-10-29T17:39:29","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/39","RelatedDescription":"Opened issue \"Flag vulnerable packages\" (#39) at NuGet/Announcements","RelatedBody":"The spec for 'Flagging vulnerable packages' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Flag vulnerable packages](https://github.com/NuGet/Home/wiki/Flag-vulnerable-packages) | https://github.com/nuget/home/issues/8087|"},{"Id":"10286366828","Type":"IssuesEvent","CreatedAt":"2019-08-26T13:37:09","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/38","RelatedDescription":"Opened issue \"New and improved NuGet Search is live!\" (#38) at NuGet/Announcements","RelatedBody":"Announcing the new and improved search on NuGet.org leveraging Azure Search.\r\n\r\n[Blogpost](https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/) | [Feedback Issue](https://github.com/NuGet/NuGetGallery/issues/4124)"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1190360390980395008","CreatedAt":"2019-11-01T20:10:07+00:00","UserScreenname":"nuget","Text":"The issue with the publishing pipeline has been resolved and packages are now being published normally. https://t.co/NdK8mVk7UF","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":0,"RawContent":null},{"Id":"1190331936293572608","CreatedAt":"2019-11-01T18:17:03+00:00","UserScreenname":"nuget","Text":"We are experiencing an issue with our publishing pipeline causing a delay in the publishing of new packages. We areâ€¦ https://t.co/gM91QcE1Zc","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":5,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-11-21T05:30:46.0328979Z","RunDurationInMilliseconds":2245}