{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing .NET Standard 2.1","PublishedOn":"2018-11-05T17:42:38+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Since we shipped .NET Standard 2.0 about a year ago, we&#8217;ve shipped two updates to .NET Core 2.1 and are about to release .NET Core 2.2. It&#8217;s time to update the standard to include some of...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/11/05/announcing-net-standard-2-1/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access build 3673","PublishedOn":"2018-10-30T19:27:39+00:00","CommentsCount":12,"FacebookCount":0,"Summary":"We are happy to share the next Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a single package that bundles the .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/30/announcing-net-framework-4-8-early-access-build-3673/","RawContent":null},{"Title":"Bringing .NET application performance analysis to Linux","PublishedOn":"2018-10-24T21:36:02+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"Both the Windows and Linux ecosystems have a swath of battle-hardened performance analysis and investigation tools. But up until recently, developers and platform engineers could use none of these...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/24/bringing-net-application-performance-analysis-to-linux/","RawContent":null},{"Title":".NET Core Source Code Analysis with Intel® VTune™ Amplifier","PublishedOn":"2018-10-23T21:04:49+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"This post was written by Varun Venkatesan, Li Tian, Denis Pravdin, who are engineers at Intel. They are excited to share .NET Core-specific enhancements that Intel has made to VTune Amplifier...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/23/net-core-source-code-analysis-with-intel-vtune-amplifier/","RawContent":null},{"Title":"Call For Participation: .NET and TypeScript at FOSDEM conference","PublishedOn":"2018-10-23T20:16:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The organizers of the FOSDEM 2019 conference have allocated a “Developer Room” on Saturday February 2nd 2019 for .NET and TypeScript discussions in Brussels Belgium.   FOSDEM is one of Europe’s most...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/23/call-for-participation-net-and-typescript-at-fosdem-conference/","RawContent":null},{"Title":".NET Framework October 2018 Preview of Quality Rollup","PublishedOn":"2018-10-18T20:44:34+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are releasing the October 2018 Preview of Quality Rollup. Quality and Reliability This release contains the following quality and reliability improvements. CLR Updated Japanese dates that...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/18/net-framework-october-2018-preview-of-quality-rollup/","RawContent":null},{"Title":"Announcing .NET Core 2.2 Preview 3","PublishedOn":"2018-10-18T01:03:01+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 2.2 Preview 3. We have made more improvements to the overall release that we would love to get your feedback on, either in the comments or at dotnet/core #2004....","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/17/announcing-net-core-2-2-preview-3/","RawContent":null},{"Title":"Announcing Entity Framework Core 2.2 Preview 3","PublishedOn":"2018-10-17T20:10:48+00:00","CommentsCount":22,"FacebookCount":0,"Summary":"Today we are making EF Core 2.2 Preview 3 available, together with a new preview of our data provider for Cosmos DB and updated spatial extensions for various providers. Preview 3 is going to be the...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/17/announcing-entity-framework-core-2-2-preview-3/","RawContent":null},{"Title":"Automating Release Notes with Azure Functions","PublishedOn":"2018-10-16T15:00:44+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We can all agree that tracking the progress of a project enhances productivity and is an effective way to keep everyone involved of its progress. When it comes to managing your project in Azure DevOps...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/16/automating-release-notes-with-azure-functions/","RawContent":null},{"Title":"Guidance for library authors","PublishedOn":"2018-10-15T15:00:05+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We&#8217;ve just published our first cut of the .NET Library Guidance. It&#8217;s brand new set of articles for .NET developers who want to create high-quality libraries for .NET. The guidance...","Href":"https://blogs.msdn.microsoft.com/dotnet/2018/10/15/guidance-for-library-authors/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"8520090559","Type":"PullRequestEvent","CreatedAt":"2018-11-01T16:20:08","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Merged pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser."},{"Id":"8448824845","Type":"PullRequestEvent","CreatedAt":"2018-10-19T12:44:07","Actor":"SeanKilleen","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Opened pull request \"Update logo for couchbase-lite in projects.json\" (#113) at dotnet/foundation","RelatedBody":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65"},{"Id":"8341294365","Type":"IssuesEvent","CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Opened issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112) at dotnet/foundation","RelatedBody":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n"},{"Id":"8203056810","Type":"IssuesEvent","CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/111","RelatedDescription":"Opened issue \"Sourcelink location is confusing\" (#111) at dotnet/home","RelatedBody":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section."},{"Id":"8173033759","Type":"PullRequestEvent","CreatedAt":"2018-08-27T16:21:56","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Merged pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8163761410","Type":"PullRequestEvent","CreatedAt":"2018-08-24T15:35:46","Actor":"jkonicki","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/110","RelatedDescription":"Opened pull request \"Fix - add missing comma\" (#110) at dotnet/home","RelatedBody":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix."},{"Id":"8160074991","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:10:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/108","RelatedDescription":"Merged pull request \"Fix errors in projects.json\" (#108) at dotnet/home","RelatedBody":""},{"Id":"8160071932","Type":"PullRequestEvent","CreatedAt":"2018-08-23T23:09:08","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/109","RelatedDescription":"Merged pull request \"Add Steeltoe to the project listing\" (#109) at dotnet/home","RelatedBody":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"8547162932","Type":"PullRequestEvent","CreatedAt":"2018-11-07T03:52:41","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20857","RelatedDescription":"Opened pull request \"Delete dead code from IdnMapping\" (#20857) at dotnet/coreclr","RelatedBody":"Fixes https://github.com/dotnet/corefx/issues/33269\r\ncc: @tarekgh "},{"Id":"8547149599","Type":"PullRequestEvent","CreatedAt":"2018-11-07T03:48:03","Actor":"wfurt","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20854","RelatedDescription":"Merged pull request \"exclude freebsd symbols from publishing\" (#20854) at dotnet/coreclr","RelatedBody":"One more update. This time I was able to get local repro and verify that freebsd packages are missing in \r\n```\r\nDone executing task \"Message\".\r\nTask \"Message\"\r\n  Publishing C:\\Users\\toweinfu\\source\\repos\\coreclr\\bin\\Product\\Windows_NT.x64.Debug\\.nuget\\symbolpkg\\Microsoft.NET.Sdk.IL.3.0.0-preview-27106-0.symbols.nupkg;C:\\Users\\toweinfu\\sour\r\n  ce\\repos\\coreclr\\bin\\Product\\Windows_NT.x64.Debug\\.nuget\\symbolpkg\\Microsoft.NETCore.ILAsm.3.0.0-preview-27105-0.symbols.nupkg;C:\\Users\\toweinfu\\source\\repos\\coreclr\\bin\\Product\\W\r\n  indows_NT.x64.Debug\\.nuget\\symbolpkg\\Microsoft.NETCore.ILAsm.3.0.0-preview-27106-0.symbols.nupkg;C:\\Users\\toweinfu\\source\\repos\\coreclr\\bin\\Product\\Windows_NT.x64.Debug\\.nuget\\sym\r\n  bolpkg\\Microsoft.NETCore.ILDAsm.3.0.0-preview-27105-0.symbols.nupkg;C:\\Users\\toweinfu\\source\\repos\\coreclr\\bin\\Product\\Windows_NT.x64.Debug\\.nuget\\symbolpkg\\Microsoft.NETCore.ILDA\r\n  sm.3.0.0-preview-27106-0.symbols.nupkg;C:\\Users\\toweinfu\\source\\repos\\coreclr\\bin\\Product\\Windows_NT.x64.Debug\\.nuget\\symbolpkg\\Microsoft.NETCore.Jit.3.0.0-preview-27105-0.symbols\r\n  .nupkg;C:\\Users\\toweinfu\\source\\repos\\coreclr\\bin\\Product\\Windows_NT.x64.Debug\\.nuget\\symbolpkg\\Microsoft.NETCore.Jit.3.0.0-preview-27106-0.symbols.nupkg;C:\\Users\\toweinfu\\source\\\r\n  repos\\coreclr\\bin\\Product\\Windows_NT.x64.Debug\\.nuget\\symbolpkg\\Microsoft.NETCore.Native.3.0.0-preview-27105-0.symbols.nupkg;C:\\Users\\toweinfu\\source\\repos\\coreclr\\bin\\Product\\Win\r\n  dows_NT.x64.Debug\\.nuget\\symbolpkg\\Microsoft.NETCore.Native.3.0.0-preview-27106-0.symbols.nupkg;C:\\Users\\toweinfu\\source\\repos\\coreclr\\bin\\Product\\Windows_NT.x64.Debug\\.nuget\\symb\r\n  olpkg\\Microsoft.NETCore.Runtime.CoreCLR.3.0.0-preview-27105-0.symbols.nupkg;C:\\Users\\toweinfu\\source\\repos\\coreclr\\bin\\Product\\Windows_NT.x64.Debug\\.nuget\\symbolpkg\\Microsoft.NETC\r\n  ore.Runtime.CoreCLR.3.0.0-preview-27106-0.symbols.nupkg;C:\\Users\\toweinfu\\source\\repos\\coreclr\\bin\\Product\\Windows_NT.x64.Debug\\.nuget\\symbolpkg\\Microsoft.NETCore.TestHost.3.0.0-p\r\n  review-27105-0.symbols.nupkg;C:\\Users\\toweinfu\\source\\repos\\coreclr\\bin\\Product\\Windows_NT.x64.Debug\\.nuget\\symbolpkg\\Microsoft.NETCore.TestHost.3.0.0-preview-27106-0.symbols.nupk\r\n  g;C:\\Users\\toweinfu\\source\\repos\\coreclr\\bin\\Product\\Windows_NT.x64.Debug\\.nuget\\symbolpkg\\Microsoft.TargetingPack.Private.CoreCLR.3.0.0-preview-27106-0.symbols.nupkg;C:\\Users\\tow\r\n  einfu\\source\\repos\\coreclr\\bin\\Product\\Windows_NT.x64.Debug\\.nuget\\symbolpkg\\runtime.win-x64.Microsoft.NETCore.ILAsm.3.0.0-preview-27106-0.symbols.nupkg;C:\\Users\\toweinfu\\source\\r\r\n  epos\\coreclr\\bin\\Product\\Windows_NT.x64.Debug\\.nuget\\symbolpkg\\runtime.win-x64.Microsoft.NETCore.ILDAsm.3.0.0-preview-27106-0.symbols.nupkg;C:\\Users\\toweinfu\\source\\repos\\coreclr\\\r\n  bin\\Product\\Windows_NT.x64.Debug\\.nuget\\symbolpkg\\runtime.win-x64.Microsoft.NETCore.Jit.3.0.0-preview-27106-0.symbols.nupkg;C:\\Users\\toweinfu\\source\\repos\\coreclr\\bin\\Product\\Wind\r\n  ows_NT.x64.Debug\\.nuget\\symbolpkg\\runtime.win-x64.Microsoft.NETCore.Runtime.CoreCLR.3.0.0-preview-27106-0.symbols.nupkg;C:\\Users\\toweinfu\\source\\repos\\coreclr\\bin\\Product\\Windows_\r\n  NT.x64.Debug\\.nuget\\symbolpkg\\runtime.win-x64.Microsoft.NETCore.TestHost.3.0.0-preview-27106-0.symbols.nupkg to http://foo.com\r\n```\r\nmessage. It seems like the problem was that the `PackagePatternDir` was not expanded in the Remove/Exclude statements. So I added new variable to hold list of packages to exclude and that seems to work OK. "},{"Id":"8546919080","Type":"PullRequestEvent","CreatedAt":"2018-11-07T02:34:49","Actor":"cshung","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/20809","RelatedDescription":"Merged pull request \"Managed Data Breakpoint\" (#20809) at dotnet/coreclr","RelatedBody":"@dotnet/dotnet-diag "}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"8547241641","Type":"IssuesEvent","CreatedAt":"2018-11-07T04:20:18","Actor":"richlander","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10291","RelatedDescription":"Opened issue \"dotnet run fails on ARM64\" (#10291) at dotnet/cli","RelatedBody":"dotnet run doesn't work for me on Linux ARM64. \r\n\r\n/cc @livarcocc @RussKeldorph \r\n\r\n```\r\nrich@live-pc:~/testapp$ uname -a\r\nLinux live-pc 3.10.105-bsp-1.2 #2 SMP PREEMPT Sat Oct 27 19:24:05 IST 2018 aarch64 aarch64 aarch64 GNU/Linux\r\nch@live-pc:~/testapp$ lsb_release -a\r\nNo LSB modules are available.\r\nDistributor ID: neon\r\nDescription:    KDE neon User Edition 5.14\r\nRelease:        18.04\r\nCodename:       bionic\r\nrich@live-pc:~$ time dotnet new console -o testapp\r\nThe template \"Console Application\" was created successfully.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on testapp/testapp.csproj...\r\n  Restoring packages for /home/rich/testapp/testapp.csproj...\r\n  Generating MSBuild file /home/rich/testapp/obj/testapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /home/rich/testapp/obj/testapp.csproj.nuget.g.targets.\r\n  Restore completed in 2 sec for /home/rich/testapp/testapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m17.732s\r\nuser    0m23.360s\r\nsys     0m1.910s\r\nrich@live-pc:~$ cd testapp/\r\nrich@live-pc:~/testapp$ time dotnet build\r\nMicrosoft (R) Build Engine version 15.9.8-preview+g0a5001fc4d for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 342.77 ms for /home/rich/testapp/testapp.csproj.\r\n/usr/share/dotnet/sdk/3.0.100-alpha1-009697/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(142,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview [/home/rich/testapp/testapp.csproj]\r\n  testapp -> /home/rich/testapp/bin/Debug/netcoreapp3.0/testapp.dll\r\n\r\nBuild succeeded.                                             \r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:00:21.04\r\n\r\nreal    0m25.204s\r\nuser    0m25.080s\r\nsys     0m2.180s\r\nrich@live-pc:~/testapp$ time dotnet run\r\nSystem.ComponentModel.Win32Exception (8): Exec format error\r\n   at Interop.Sys.ForkAndExecProcess(String filename, String[] argv, String[] envp, String cwd, Boolean redirectStdin, Boolean redirectStdout, Boolean redirectStderr, Boolean setUser, UInt32 userId, UInt32 groupId, Int32& lpChildPid, Int32& stdinFd, Int32& stdoutFd, Int32& stderrFd, Boolean shouldThrow) \r\n   at System.Diagnostics.Process.StartCore(ProcessStartInfo startInfo)\r\n   at System.Diagnostics.Process.Start()\r\n   at Microsoft.DotNet.Cli.Utils.Command.Execute()\r\n   at Microsoft.DotNet.Tools.Run.RunCommand.Execute()\r\n   at Microsoft.DotNet.Tools.Run.RunCommand.Run(String[] args)\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient)\r\n   at Microsoft.DotNet.Cli.Program.Main(String[] args)\r\n\r\nreal    0m17.997s\r\nuser    0m23.190s\r\nsys     0m2.150s\r\nrich@live-pc:~/testapp$ time dotnet bin/Debug/netcoreapp3.0/testapp.dll\r\nHello World!\r\n\r\nreal    0m0.682s\r\nuser    0m0.570s\r\nsys     0m0.060s\r\nrich@live-pc:~/testapp$\r\n```\r\n"},{"Id":"8547195057","Type":"IssuesEvent","CreatedAt":"2018-11-07T04:03:15","Actor":"Ibrahim-Islam","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/10290","RelatedDescription":"Opened issue \"dotnet-install.sh not adding dotnet command\" (#10290) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nRun `dotnet-install.sh` on Ubuntu 18.04 : `curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin`\r\nResult:\r\n```\r\ndotnet-install: .NET Core SDK version 2.1.403 is already installed. dotnet-install: Adding to current process PATH:\r\n/home/<!username!>/.dotnet. Note: This change will be visible only when sourcing script. dotnet-install: Installation finished successfully.\r\n```\r\n\r\n## Expected  behavior\r\n`dotnet` command should be available after installation is finished\r\n\r\n## Actual behavior\r\n`Command 'dotnet' not found, but can be installed with: sudo snap install dotnet-sdk`\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"Id":"8546537240","Type":"PullRequestEvent","CreatedAt":"2018-11-07T00:41:38","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/cli/pull/10283","RelatedDescription":null,"RelatedBody":"Updating YAML for official build definition. Also addressing some comments from the move to YAML PR.\r\nI would still like to address the duplicate SDK LKG number comment on this PR. Working on it.\r\n"},{"Id":"8546537002","Type":"PullRequestEvent","CreatedAt":"2018-11-07T00:41:34","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/10283","RelatedDescription":"Closed pull request \"Updating YAML for official build definition.\" (#10283) at dotnet/cli","RelatedBody":"Updating YAML for official build definition. Also addressing some comments from the move to YAML PR.\r\nI would still like to address the duplicate SDK LKG number comment on this PR. Working on it.\r\n"},{"Id":"8546395707","Type":"PullRequestEvent","CreatedAt":"2018-11-07T00:01:30","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10289","RelatedDescription":"Opened pull request \"Merge release/2.1.5xx to release/2.2.1xx\" (#10289) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.5xx into release/2.2.1xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.5xx-to-release/2.2.1xx\ngit reset --hard upstream/release/2.2.1xx\ngit merge upstream/release/2.1.5xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.1.5xx-to-release/2.2.1xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8546199666","Type":"PullRequestEvent","CreatedAt":"2018-11-06T23:11:15","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/cli/pull/10239","RelatedDescription":null,"RelatedBody":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8546199433","Type":"PullRequestEvent","CreatedAt":"2018-11-06T23:11:12","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/pull/10239","RelatedDescription":"Closed pull request \"Merge release/2.2.1xx to release/2.2.2xx\" (#10239) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"8545992349","Type":"PullRequestEvent","CreatedAt":"2018-11-06T22:27:07","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10280","RelatedDescription":"Merged pull request \"Add win arm\" (#10280) at dotnet/cli","RelatedBody":""}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8543148309","Type":"IssuesEvent","CreatedAt":"2018-11-06T14:45:52","Actor":"rtroupin","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/958","RelatedDescription":"Opened issue \"Fails to see certificates in X509Store for StoreLocation.CurrentUser\" (#958) at dotnet/standard","RelatedBody":"Running in UWP application in Visual Studio 2017 on Windows 10 version 1803. Running as Administrator does not change result.  Sees LocalMachine certificates.  Current User should be able to access their own Certificates.  What permissions does a cross platform application need to support seeing own personal certificate store certificates? \r\n\r\ncode sample to illustrate:\r\n\r\nint certCountInStore = 0;\r\nint certCountInMyStore = 0;\r\n//=======Sees machine certs\r\nX509Store machStore = new X509Store(StoreName.TrustedPublisher, StoreLocation.LocalMachine);\r\nmachStore.Open(OpenFlags.ReadOnly);\r\nX509Certificate2Collection machcollection = (X509Certificate2Collection)machStore.Certificates;\r\ncertCountInStore = machcollection.Count;\r\nmachStore.Close();\r\n//==========does not see Current User Certs\r\nX509Store myStore = new X509Store(StoreName.My,StoreLocation.CurrentUser);\r\nmyStore.Open(OpenFlags.ReadOnly);\r\nX509Certificate2Collection mycollection = (X509Certificate2Collection)myStore.Certificates;\r\ncertCountInMyStore = mycollection.Count;\r\nmyStore.Close();\r\n"},{"Id":"8542550595","Type":"PullRequestEvent","CreatedAt":"2018-11-06T13:11:20","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/957","RelatedDescription":"Merged pull request \"[Darc-Update] Update dependencies from build 20181105.4 of https://github.com/dotnet/arcade\" (#957) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18555.4\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18555.4.symbols.nupkg - 2.2.0-beta.18555.4\n- symbols/Microsoft.DotNet.Build.Tasks.Packaging.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.CodeAnalysis.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.SignCheck.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.SwaggerGenerator.CmdLine.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.SwaggerGenerator.MSBuild.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18555.4.symbols.nupkg - 2.4.0-beta.18555.4\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- Microsoft.DotNet.SwaggerGenerator.MSBuild - 1.0.0-beta.18555.4\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18555.4\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18555.4\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18555.4\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18555.4\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18555.4\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18555.4\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.18555.4\n- Microsoft.DotNet.Darc - 1.0.0-beta.18555.4\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18555.4\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18555.4\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18555.4\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18555.4\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18555.4\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18555.4\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18555.4\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18555.4\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18555.4\n- Microsoft.DotNet.SignCheck - 1.0.0-beta.18555.4\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18555.4\n- Microsoft.DotNet.SwaggerGenerator.CmdLine - 1.0.0-beta.18555.4\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18555.4"},{"Id":"8542495442","Type":"PullRequestEvent","CreatedAt":"2018-11-06T13:01:16","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/957","RelatedDescription":"Opened pull request \"[Darc-Update] Update dependencies from build 20181105.4 of https://github.com/dotnet/arcade\" (#957) at dotnet/standard","RelatedBody":"This change updates the dependencies from https://github.com/dotnet/arcade to the following\n\n- Microsoft.AspNetCore.ApiVersioning - 1.0.0-beta.18555.4\n- symbols/Microsoft.AspNetCore.ApiVersioning.Swashbuckle.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.ApiCompat.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.Arcade.Sdk.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.Build.Tasks.Feed.2.2.0-beta.18555.4.symbols.nupkg - 2.2.0-beta.18555.4\n- symbols/Microsoft.DotNet.Build.Tasks.Packaging.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.CodeAnalysis.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.Darc.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.DarcLib.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.Deployment.Tasks.Links.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.AspNetCore.ApiVersioning.Analyzers.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.GenAPI.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.Helix.Client.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.Helix.JobSender.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.Helix.Sdk.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.Maestro.Client.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.Maestro.Tasks.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.SignCheck.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.SignTool.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.SwaggerGenerator.CmdLine.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.SwaggerGenerator.MSBuild.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.GenFacades.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- symbols/Microsoft.DotNet.XUnitExtensions.2.4.0-beta.18555.4.symbols.nupkg - 2.4.0-beta.18555.4\n- symbols/Microsoft.AspNetCore.ApiVersioning.1.0.0-beta.18555.4.symbols.nupkg - 1.0.0-beta.18555.4\n- Microsoft.DotNet.SwaggerGenerator.MSBuild - 1.0.0-beta.18555.4\n- Microsoft.AspNetCore.ApiVersioning.Analyzers - 1.0.0-beta.18555.4\n- Microsoft.AspNetCore.ApiVersioning.Swashbuckle - 1.0.0-beta.18555.4\n- Microsoft.DotNet.ApiCompat - 1.0.0-beta.18555.4\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.18555.4\n- Microsoft.DotNet.Build.Tasks.Feed - 2.2.0-beta.18555.4\n- Microsoft.DotNet.Build.Tasks.Packaging - 1.0.0-beta.18555.4\n- Microsoft.DotNet.CodeAnalysis - 1.0.0-beta.18555.4\n- Microsoft.DotNet.Darc - 1.0.0-beta.18555.4\n- Microsoft.DotNet.DarcLib - 1.0.0-beta.18555.4\n- Microsoft.DotNet.XUnitExtensions - 2.4.0-beta.18555.4\n- Microsoft.DotNet.Deployment.Tasks.Links - 1.0.0-beta.18555.4\n- Microsoft.DotNet.GenFacades - 1.0.0-beta.18555.4\n- Microsoft.DotNet.Helix.Client - 1.0.0-beta.18555.4\n- Microsoft.DotNet.Helix.JobSender - 1.0.0-beta.18555.4\n- Microsoft.DotNet.Helix.Sdk - 1.0.0-beta.18555.4\n- Microsoft.DotNet.Maestro.Client - 1.0.0-beta.18555.4\n- Microsoft.DotNet.Maestro.Tasks - 1.0.0-beta.18555.4\n- Microsoft.DotNet.SignCheck - 1.0.0-beta.18555.4\n- Microsoft.DotNet.SignTool - 1.0.0-beta.18555.4\n- Microsoft.DotNet.SwaggerGenerator.CmdLine - 1.0.0-beta.18555.4\n- Microsoft.DotNet.GenAPI - 1.0.0-beta.18555.4"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"8547316593","Type":"IssuesEvent","CreatedAt":"2018-11-07T04:48:06","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/33296","RelatedDescription":"Opened issue \"Add support for ReadOnlySequence within Utf8JsonReader\" (#33296) at dotnet/corefx","RelatedBody":"Prototype implementation as a starting point: https://github.com/dotnet/corefxlab/blob/63ef1a5db4fdbfcf9822b8cd2cbc3921b3d3cb9e/src/System.Text.JsonLab/System/Text/Json/JsonUtf8Reader.MultiSegment.cs#L12"},{"Id":"8547312038","Type":"IssuesEvent","CreatedAt":"2018-11-07T04:46:12","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/33295","RelatedDescription":"Opened issue \"Implement Utf8JsonReader.Skip() with support for incomplete data\" (#33295) at dotnet/corefx","RelatedBody":"```C#\r\npublic ref partial struct Utf8JsonReader\r\n{\r\n    public bool Skip() {}\r\n}\r\n```\r\n\r\nThe naiive implementation (that doesn't support incomplete data, and returns void) is as follows:\r\n```C#\r\n        public void Skip()\r\n        {\r\n            if (TokenType == JsonTokenType.PropertyName)\r\n            {\r\n                Read();\r\n            }\r\n\r\n            if (TokenType == JsonTokenType.StartObject || TokenType == JsonTokenType.StartArray)\r\n            {\r\n                int depth = CurrentDepth;\r\n                while (Read() && depth < CurrentDepth)\r\n                {\r\n                }\r\n            }\r\n        }\r\n```"},{"Id":"8547297853","Type":"IssuesEvent","CreatedAt":"2018-11-07T04:40:55","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/33294","RelatedDescription":"Opened issue \"Optimize number processing and validation while reading JSON token\" (#33294) at dotnet/corefx","RelatedBody":"Consider removing the `ConsumeNumberResult` internal enum and optimize the implementation of `TryGetNumber`. The way it is implemented currently is not fast enough, likely due to some redundant or unnecessary work. The helper methods may need to be marked as aggressively inlined."},{"Id":"8547289236","Type":"IssuesEvent","CreatedAt":"2018-11-07T04:37:42","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/33293","RelatedDescription":"Opened issue \"Consider line feed, carriage return, or both as an end of single line comment.\" (#33293) at dotnet/corefx","RelatedBody":"Currently, we assume that a single line comment ends with a line feed. We need to change this so that a carriage return also means an end of comment (or both \\r\\n). This way we match the semantics of Json.NET as well."},{"Id":"8547281246","Type":"IssuesEvent","CreatedAt":"2018-11-07T04:34:50","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/33292","RelatedDescription":"Opened issue \"Unescape the JSON string token before returning in TryGetValueAsString\" (#33292) at dotnet/corefx","RelatedBody":"It is possible that the JSON input contains strings containing escaped characters. Before returning a `System.String` to the caller via `TryGetValueAsString`, unescape them first, where necessary.\r\n\r\ncc @GrabYourPitchforks "},{"Id":"8547268254","Type":"IssuesEvent","CreatedAt":"2018-11-07T04:30:15","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/33291","RelatedDescription":"Opened issue \"ReadOnlySequence.Slice which accepts a SequencePosition throws ArgumentOutOfRangeException unexpectedly.\" (#33291) at dotnet/corefx","RelatedBody":"```C#\r\n[Fact]\r\npublic static void ReadOnlySequenceTest()\r\n{\r\n    string jsonString = \"a\";\r\n\r\n    ReadOnlyMemory<byte> dataMemory = Encoding.UTF8.GetBytes(jsonString);\r\n\r\n    var firstSegment = new BufferSegment<byte>(dataMemory.Slice(0, 1));\r\n    ReadOnlyMemory<byte> secondMem = dataMemory.Slice(0, 0);\r\n    BufferSegment<byte> secondSegment = firstSegment.Append(secondMem);\r\n\r\n    // A two segment sequence where the second one is empty: [a]-> []\r\n    var sequence = new ReadOnlySequence<byte>(firstSegment, 0, secondSegment, secondMem.Length);\r\n\r\n    SequencePosition expectedPosition = sequence.GetPosition(1);\r\n    Console.WriteLine(expectedPosition.GetInteger());   // 0\r\n    Console.WriteLine(expectedPosition.GetObject());    // System.Text.Json.Tests.BufferSegment`1[System.Byte]\r\n    Assert.True(((ReadOnlySequenceSegment<byte>)expectedPosition.GetObject()).Memory.IsEmpty);\r\n\r\n    SequencePosition actualPosition = sequence.Slice(1).Start;\r\n    Console.WriteLine(actualPosition.GetInteger()); // 0\r\n    Console.WriteLine(actualPosition.GetObject());  // System.Text.Json.Tests.BufferSegment`1[System.Byte]\r\n    Assert.True(((ReadOnlySequenceSegment<byte>)actualPosition.GetObject()).Memory.IsEmpty);\r\n    Assert.Equal(expectedPosition, actualPosition); // True\r\n\r\n    // System.ArgumentOutOfRangeException : Specified argument was out of the range of valid values.\r\n\r\n    /*\r\n        System.ArgumentOutOfRangeException : Specified argument was out of the range of valid values.\r\n        Parameter name: start\r\n        Stack Trace:\r\n        E:\\GitHub\\Fork\\corefx\\src\\System.Memory\\src\\System\\ThrowHelper.cs(31,0): at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument)\r\n        E:\\GitHub\\Fork\\corefx\\src\\System.Memory\\src\\System\\Buffers\\ReadOnlySequence.cs(281,0): at System.Buffers.ReadOnlySequence`1.Slice(Int64 start, SequencePosition end)\r\n        E:\\GitHub\\Fork\\corefx\\src\\System.Memory\\src\\System\\Buffers\\ReadOnlySequence.cs(388,0): at System.Buffers.ReadOnlySequence`1.Slice(Int32 start, SequencePosition end)\r\n        E:\\GitHub\\Fork\\corefx\\src\\System.Text.Json\\tests\\Utf8JsonReaderTests.TryGet.cs(357,0): at System.Text.Json.Tests.Utf8JsonReaderTests.ReadOnlySequenceTest()\r\n    */\r\n    sequence = sequence.Slice(1, sequence.Start);\r\n}\r\n```\r\n\r\nWe need to use the Slice overload that takes a `SequencePosition` for performance to avoid having to scan the segments from the beginning every time. Using `GetPosition` with `long` is too slow:\r\nhttps://github.com/dotnet/corefxlab/blob/63ef1a5db4fdbfcf9822b8cd2cbc3921b3d3cb9e/src/System.Text.JsonLab/System/Text/Json/JsonUtf8Reader.cs#L112\r\n\r\ncc @pakrym, @davidfowl "},{"Id":"8547154939","Type":"PullRequestEvent","CreatedAt":"2018-11-07T03:49:53","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/33290","RelatedDescription":"Opened pull request \"Temporarily disable Tizen leg on PRs\" (#33290) at dotnet/corefx","RelatedBody":"In order to be able to update the coreclr corefx uses.  We can re-enable this once there's an updated Tizen package.\r\ncc: @gbalykov, @danmosemsft "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"8546970777","Type":"PullRequestEvent","CreatedAt":"2018-11-07T02:50:55","Actor":"333fred","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31010","RelatedDescription":"Opened pull request \"Remove Lazy<T> and delegates from the operation factories\" (#31010) at dotnet/roslyn","RelatedBody":"Fixes https://github.com/dotnet/roslyn/issues/30735\r\n\r\nThis updates the Operation tree to use a different method of lazy creation. Instead of allocating many `Lazy<T>` instances, and delegate instances to populate later, we now use the InterlockedExchange pattern. This requires that the Lazy versions of the Operation types must be language specific, as they need to hold onto the underlying BoundNodes directly, as well as holding onto the operation factories. The basic changes here are as follows:\r\n\r\n1. Standardize naming conventions. Many of the IOperation node implementations still had Expression/Statement in their names. I standardized these to all end in Operation.\r\n2. Turn all the existing LazyXOperations into abstract base classes, and add `CreateX` abstract methods for creating their children. These nodes now test their children for null, and then invoke the appropriate `CreateX` method, and then set the `_lazyX` field via an interlocked exchange. It also verifies the parent for all children in `DEBUG` mode.\r\n3. Implement the CSharpLazyX and VBLazyX nodes.\r\n\r\nWhile I was making changes here, I also standardized the names of our public `OperationKind` enum. A few of these were inconsistent with the general naming pattern. The changes in the test directory are entirely this, and no other changes were made to the actual tests themselves. Tagging personal for now to verify full test runs, then I will tag for review."},{"Id":"8546678837","Type":"PullRequestEvent","CreatedAt":"2018-11-07T01:22:20","Actor":"cshung","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/31009","RelatedDescription":"Opened pull request \"[WIP] Include the member name in the error message when one attempt to explicitly implement an interface event in an interface\" (#31009) at dotnet/roslyn","RelatedBody":"Do NOT merge - this is intended to be an experiment for the actual pull request https://github.com/dotnet/roslyn/pull/30365"},{"Id":"8546585332","Type":"IssuesEvent","CreatedAt":"2018-11-07T00:55:05","Actor":"mavasani","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/31008","RelatedDescription":"Opened issue \"Add editorconfig options to configure special attributes to bail out on reporting unused parameters\" (#31008) at dotnet/roslyn","RelatedBody":"See https://github.com/dotnet/roslyn/pull/30777#discussion_r230604812"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"8546169683","Type":"PullRequestEvent","CreatedAt":"2018-11-06T23:04:23","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6537","RelatedDescription":"Opened pull request \"Bump up default CPAOT test timeout to 2 minutes\" (#6537) at dotnet/corert","RelatedBody":"Early on in CPAOT bring-up I asked Simon to set a short timeout\r\nfor test executions as many tests were timing out due to compiler\r\nbugs. This is no longer the case - we only have a handful of\r\nremaining failing tests and some of them are now suffering from\r\nthe short timeout. For now I have bumped up the timeout from 30\r\nseconds to 2 minutes and that seems to be fixing all Top200 tests\r\nthat used to fail with the -103 exit code (about 5 tests overall).\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"8546029021","Type":"PullRequestEvent","CreatedAt":"2018-11-06T22:34:21","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6503","RelatedDescription":"Merged pull request \"Change the load expression to extend to double when stored typed is float and the requested a double\" (#6503) at dotnet/corert","RelatedBody":"Fixes #6500 \r\n\r\nThis extend floats to doubles when doing comparisons such as ceq.  Previously it was bit stuffing the float into a double.\r\n\r\n@morganbr Not sure what you'll think of this? It changes the LLVM for the load expression to:\r\n```\r\n  store float 0x47EFFFFFE0000000, float* %maxFloat_local2_, !dbg !6860\r\n  %fpext_Loadloc2_ = load float, float* %maxFloat_local2_, !dbg !6861\r\n  %fpextloc2_ = fpext float %fpext_Loadloc2_ to double, !dbg !6861\r\n  %ceq13 = fcmp oeq double %fpextloc2_, 0x47EFFFFFE0000000, !dbg !6861\r\n```\r\nWhich looks fine and passes the tests.  Its not efficient if both operands are floats (like here) as we could presumably just do `fcmp oeq float` but there's no specific enum entry for `StackValueKind` for a single float as opposed to a double.  It could be done differently by pushing this into `ILImporter.ImportCompareOperation` and having some conditional logic depending on the widths and types of the operands which is what I started with but then I thought \"why do I need this for floats when there's nothing here for ints/longs?\".\r\n"},{"Id":"8546028996","Type":"IssuesEvent","CreatedAt":"2018-11-06T22:34:21","Actor":"morganbr","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6500","RelatedDescription":"Closed issue \"wasm: float comparisons operands are bit loaded into doubles, not extended.\" (#6500) at dotnet/corert","RelatedBody":"Add the following test \r\n```\r\n        PrintString(\"Test representation of constant: \");\r\n        var maxFloat = Single.MaxValue;\r\n        if (maxFloat == Single.MaxValue)\r\n        {\r\n            PrintLine(\"Ok.\");\r\n        }\r\n        else\r\n        {\r\n            PrintLine(\"Failed.\");\r\n        }\r\n```\r\nAnd it will print\r\n```\r\nTest representation of constant: Failed.\r\n```\r\nIn the LLVM it has\r\n```\r\n%maxFloat_local2_ = alloca float\r\n```\r\n```\r\n  store float 0x47EFFFFFE0000000, float* %maxFloat_local2_, !dbg !6860\r\n  %CastPtr13 = bitcast float* %maxFloat_local2_ to double*, !dbg !6861\r\n  %Loadloc2_ = load double, double* %CastPtr13, !dbg !6861\r\n  %ceq14 = fcmp oeq double %Loadloc2_, 0x47EFFFFFE0000000, !dbg !686\r\n```\r\n`0x47EFFFFFE0000000` is 64 bits where it should be storing a 32-bit constant.  I'm not sure exactly whats gone wrong here as for the comparison its seems to think that it wants a double, yet its allocated the `%maxFloat_local2_` as a float."},{"Id":"8545118234","Type":"PullRequestEvent","CreatedAt":"2018-11-06T19:46:20","Actor":"MarcoRossignoli","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/pull/6510","RelatedDescription":"Closed pull request \"[NOMERGE][QUESTIONS][ILVerify]Report \"Class implements interface but not method\"\" (#6510) at dotnet/corert","RelatedBody":"I'm working on ILVerify issue 6203(I don't reference issue to avoid noise on that thread, I'll close this and re-open when works will be acceptable)\r\nI need some help...comment are on code"},{"Id":"8544351695","Type":"PullRequestEvent","CreatedAt":"2018-11-06T17:34:13","Actor":"trylek","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6530","RelatedDescription":"Merged pull request \"Initial support for running tests against CPAOT-built framework\" (#6530) at dotnet/corert","RelatedBody":"The pass rate is not super high right now, I'm seeing 109 failing\r\ntests or about 13% pass rate but the main point is that the pass\r\nrate is not zero, we can build on that.\r\n\r\nIn the AVAILABLE_TYPES R2R node, I added provisions for emitting\r\nexported types. This was one of the issues we were hitting - the\r\npartial facade System.Runtime wasn't properly exporting its type\r\nforwards.\r\n\r\nIn the PE builder, I dropped copying of all directories per JanK's\r\nsuggestion, the latest impulse being a mismatch between the debug\r\ndirectory and the CPAOT-compiled executable.\r\n\r\nThanks\r\n\r\nTomas"},{"Id":"8544228931","Type":"IssuesEvent","CreatedAt":"2018-11-06T17:14:42","Actor":"christianscheuer","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6536","RelatedDescription":"Opened issue \"[Question] (Manual) memory profiling support\" (#6536) at dotnet/corert","RelatedBody":"We have a memory leak in our production app that is built on CoreRT / Mac.\r\n\r\nI know this is still somewhat early days, but is there any way that I could somehow get a snapshot or graph of objects that are kept alive?\r\n\r\nIn #6041 @jkotas helped me debug the thread local storage problems and we set some breakpoints in the GC. I was wondering if something like that could be utilized to manually get some idea about 1) what gets (wrongly) GC rooted and 2) maybe even use the output from lldb to get some sort of knowledge of all alive objects grouped by type name.\r\n\r\nI also understand that SOS everywhere could maybe be used for this, maybe some of the Dump* commands. I'm also fine with having to write a little Python lldb script if needed, but I'd need some help navigating the data structures.\r\n\r\nThe best possible solution would be if we could take scripted snapshots of all rooted object types and then do our own script to compare snapshots to see if it all behaves correctly.\r\n\r\nFwiw, I'm assuming this a bug in our own code, not in CoreRT.\r\n\r\nThank you in advance and as always thank you for building a great product."},{"Id":"8543790116","Type":"IssuesEvent","CreatedAt":"2018-11-06T16:12:26","Actor":"iarischenko","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6535","RelatedDescription":"Opened issue \"Linux\\arm Address of exception handler does not match to cpu mode\" (#6535) at dotnet/corert","RelatedBody":"execution of \r\n``` asm\r\nblx  r3\r\n```\r\n command in `/dotnet/corert/src/Native/Runtime/arm/ExceptionHandling.S:RhpCallCatchFunclet:312` leads to SIGILL (Illegal instruction) signal. \r\nAddress of exception handler is not odd and it leads to switch cpu from thumb to arm state. \r\n``` gdb\r\n(gdb) info registers\r\nr3             0x113a2c\t1129004\r\n```\r\n\r\nAddress of the handler comes from `src/Runtime.Base/src/System/Runtime/ExceptionHandling.cs: FindFirstPassHandler`\r\n\r\nIs it enough to add `orr   r3,r3,1 `  befor `blx` or it should be implemented in other way?\r\n"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1055215025982398465","CreatedAt":"2018-10-24T21:50:41+00:00","UserScreenname":"dotnet","Text":"Bringing .NET application performance analysis to Linux https://t.co/jivjRwPVBM","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":108,"FavoriteCount":60,"RawContent":null},{"Id":"1054879096981704704","CreatedAt":"2018-10-23T23:35:50+00:00","UserScreenname":"dotnet","Text":".NET Core Source Code Analysis with Intel® VTune™ Amplifier https://t.co/2I1YLWYbKb","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":64,"FavoriteCount":27,"RawContent":null},{"Id":"1054829662738608128","CreatedAt":"2018-10-23T20:19:24+00:00","UserScreenname":"dotnet","Text":"Call For Participation: .NET and TypeScript at FOSDEM conference https://t.co/xjDh49lbko","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":12,"RawContent":null}]}},"RunOn":"2018-11-07T05:30:30.4615657Z","RunDurationInMilliseconds":7651}