{"Data":{"Blog":{"FeedItems":[{"Title":"Take a Break with Azure Functions","PublishedOn":"2017-12-22T05:41:48+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"So, it&#8217;s the Holidays. The office is empty, the boss is away, and you&#8217;ve got a bit of free time on your hands. How about learning a new skill and having some fun? Azure Functions are a...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/21/take-a-break-with-azure-functions/","RawContent":null},{"Title":"Testing ASP.NET Core MVC web apps in-memory","PublishedOn":"2017-12-07T17:00:35+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post was written and submitted by Javier Calvarro Nelson, a developer on the ASP.NET Core MVC team Testing is an important part of the development process of any app. In this blog post...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/12/07/testing-asp-net-core-mvc-web-apps-in-memory/","RawContent":null},{"Title":"Configuring HTTPS in ASP.NET Core across different platforms","PublishedOn":"2017-11-29T17:00:12+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"As the web moves to be more secure by default, it&#8217;s more important than ever to make sure your websites have HTTPS enabled. And if you&#8217;re going to use HTTPS in production its a good idea...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/29/configuring-https-in-asp-net-core-across-different-platforms/","RawContent":null},{"Title":"Improve website performance by optimizing images","PublishedOn":"2017-11-28T18:02:29+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We all want our web applications to load as fast as possible to give the best possible experience to the users. One of the steps to achieve that is to make sure the images we use are as optimized as...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/28/improve-website-performance-by-optimizing-images/","RawContent":null},{"Title":"Orchard Core Beta 1 released","PublishedOn":"2017-11-21T19:32:10+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"This is a guest post by Sebastien Ros on behalf of the Orchard community Two years ago, the Orchard community started developing Orchard on .NET Core. After 1,500 commits, 297,000 lines of code, 127...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/21/orchard-core-beta-annoucement/","RawContent":null},{"Title":"Announcing .NET 4.7.1 Tools for the Cloud","PublishedOn":"2017-11-17T17:41:35+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today we are releasing a set of providers for ASP.NET 4.7.1 that make it easier than ever to deploy your applications to cloud services and take advantage of cloud-scale features.  This release...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/17/announcing-net-4-7-1-tools-for-the-cloud/","RawContent":null},{"Title":"Improvements to Azure Functions in Visual Studio","PublishedOn":"2017-11-15T19:00:43+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"We&#8217;re excited to announce several improvements to the Azure Functions experience in Visual Studio as part of the latest update to the Azure Functions tools on top of Visual Studio 2017 v15.5....","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/15/improvements-to-azure-functions-in-visual-studio/","RawContent":null},{"Title":"Creating a Minimal ASP.NET Core Windows Container","PublishedOn":"2017-11-09T16:18:48+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post by Mike Rousos One of the benefits of containers is their small size, which allows them to be more quickly deployed and more efficiently packed onto a host than virtual machines...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/09/creating-a-minimal-asp-net-core-windows-container/","RawContent":null},{"Title":"Publishing a Web App to an Azure VM from Visual Studio","PublishedOn":"2017-11-01T22:35:42+00:00","CommentsCount":6,"FacebookCount":0,"Summary":"We know virtual machines (VMs) are one of the most popular places to run apps in Azure, but publishing to a VM from Visual Studio has been a tricky experience for some. So, we’re pleased to announce...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/11/01/publishing-a-web-app-to-an-azure-vm-from-visual-studio/","RawContent":null},{"Title":"Recent updates for publishing","PublishedOn":"2017-10-31T18:18:45+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"We have recently added a few interesting features for ASP.NET publishing. The updates include: Container Registry Publish Updates Create publish profile without publishing In this post, we will...","Href":"https://blogs.msdn.microsoft.com/webdev/2017/10/31/recent-updates-for-publishing/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7041783894","Type":"IssuesEvent","CreatedAt":"2017-12-30T00:43:12","Actor":"aspnet-hello","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/154","RelatedDescription":"Closed issue \"Create an Ubuntu/Debian PPA/repo\" (#154) at aspnet/Home","RelatedBody":"While it's very easy to get started playing around with vnext in Windows, if you're looking for feedback from other platforms, it really should be easier to install.  Not just for the sake of testing, but to also demonstrate a commitment to making vnext available for all non-Microsoft platforms.\n\nTo accomplish this, I think you should set up a PPA for the k runtime so that all of it's system-level dependencies in linux can be satisfied with considerably less effort from curious end users (would be adopters!).\nIt might just be a matter of creating a package that also adds (or suggests) the repository found here: http://www.mono-project.com/download/#download-lin -- and then installs KVM/KRE.\n\nA significant number of linux users rely on this mechnism to obtain software and have come to expect it from reputable projects.  While vnext is still under development, I think it's important that this distribution mechanism be established while it's still early days.\n"},{"Id":"7041783711","Type":"IssuesEvent","CreatedAt":"2017-12-30T00:43:01","Actor":"aspnet-hello","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/51","RelatedDescription":"Closed issue \"Create a separate command for packages\" (#51) at aspnet/Home","RelatedBody":"We can use kvm install/upgrade for installing newer versions of KRE, and kpm restore to install packages.\n\nFor packages, I would rather see something like this (pm as in \"package manager\"):\n\n> kpm install\n> kpm update\n> kpm uninstall\n> etc...\n\nThis is more like how Node.js works with npm. You have nvm for installing newer versions of node, and npm for installing packages. \n"},{"Id":"7041597391","Type":"PullRequestEvent","CreatedAt":"2017-12-29T22:25:30","Actor":"Eilon","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/pull/2281","RelatedDescription":"Closed pull request \"Update doc to point to dotnet/templating\" (#2281) at aspnet/Home","RelatedBody":"The document is pointing to [aspnet/Templates](https://github.com/aspnet/Templates), which is obsolete repo. Updated to point to the [dotnet/templating](https://github.com/dotnet/templating)"},{"Id":"7041231967","Type":"IssuesEvent","CreatedAt":"2017-12-29T19:27:06","Actor":"aleha84","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2317","RelatedDescription":"Opened issue \"dotnet core 1.1 web application pending request state\" (#2317) at aspnet/Home","RelatedBody":"Year ago started to develop web service (WEB API) based on dotnet core 1.0 with push notifications ability. \r\nUsed for this SignalR, because I was already familiar with this library from .net framework. \r\n\r\nUnfortunately there wasn't any official release for this library under dncore, so i used this:\r\n \"Microsoft.AspNetCore.SignalR.Server\": \"0.2.0-*\" from https://dotnet.myget.org/F/aspnetcore-ci-dev/api/v3/index.json\r\n\r\nAll works fine as expected. After a few month of development migrated to dot net core 1.1. All was fine.\r\nWeb application is used like a service (widget). Requests send to it from other web site (making initial requests, get js scripts, establishing websocket connection). Month ago was first release to production environment (windows server 2016). Over 500-600 simultaneous connections handling fine.\r\n\r\nAfter this time, lots of work was maded (mostly busines logic and replacing EF to Dapper). And was discovered that locally on dev environment **no more then 10 connection isn't possible to establish**. All other requests to service is in pending state (GET requests). If one previous connection is closed, then next recives response.\r\n\r\nIf i remove establishing of websocket connection from js ($.connection.hub.start()), then all is fine, no pending requests. No exception, no errors or warnings in logs. IIS logs also don't have any entries, like no requests was made.\r\n\r\nOn production, then release was applied, the situation is similar. Just pending state for all requests.\r\n\r\nIf switching back to branch without new features (without Dapper), locally it still handle only 10 connections, but on production all is fine, all the same 500-600 connections are stable.\r\n\r\nDev environment dotnet core sdk versions installed: 1.0.1, 1.0.4, 1.1.0, 1.1.5, 1.1.6, 2.0.2, 2.0.3, 2.1.2\r\nServer dotnet core runtime versions installed: 1.0.4, 1.0.5, 1.0.8, 1.1.1, 1.1.2, 1.1.5, 2.0.3\r\n\r\ndeps.json main diff between working and failing version:\r\n\r\n```\r\n\"Dapper/1.50.2\": {\r\n            \"dependencies\": {\r\n              \"System.Collections\": \"4.3.0\",\r\n              \"System.Collections.Concurrent\": \"4.3.0\",\r\n              \"System.Collections.NonGeneric\": \"4.3.0\",\r\n              \"System.Data.SqlClient\": \"4.3.1\",\r\n              \"System.Dynamic.Runtime\": \"4.3.0\",\r\n              \"System.Linq\": \"4.3.0\",\r\n              \"System.Reflection\": \"4.3.0\",\r\n              \"System.Reflection.Emit\": \"4.3.0\",\r\n              \"System.Reflection.Emit.Lightweight\": \"4.3.0\",\r\n              \"System.Reflection.Extensions\": \"4.3.0\",\r\n              \"System.Reflection.TypeExtensions\": \"4.3.0\",\r\n              \"System.Runtime\": \"4.3.0\",\r\n              \"System.Runtime.Extensions\": \"4.3.0\",\r\n              \"System.Runtime.InteropServices\": \"4.3.0\",\r\n              \"System.Text.RegularExpressions\": \"4.3.0\",\r\n              \"System.Threading\": \"4.3.0\",\r\n              \"System.Xml.XDocument\": \"4.3.0\",\r\n              \"System.Xml.XmlDocument\": \"4.0.1\"\r\n            },\r\n            \"runtime\": {\r\n              \"lib/netstandard1.3/Dapper.dll\": {}\r\n            },\r\n            \"compile\": {\r\n              \"lib/netstandard1.3/Dapper.dll\": {}\r\n            }               \r\n}\r\n.....\r\n\"compile\": {\r\n          \"ref/netstandard1.0/System.Reflection.Emit.Lightweight.dll\": {}\r\n        },\r\n.....\r\n\"Dapper/1.50.2\": {\r\n      \"type\": \"package\",\r\n      \"serviceable\": true,\r\n      \"sha512\": \"sha512-6VcCiiOxVhgMwgMCuQuaff8I5IyDamrzeOjuUH1iMExh8R5TJqwkVCpwdVJGQdwSCqWsQA/PerrrK7T6mONthQ==\"\r\n    },  \r\n}\r\n```"},{"Id":"7037746024","Type":"IssuesEvent","CreatedAt":"2017-12-28T16:29:01","Actor":"Elias-Heydarpour","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2316","RelatedDescription":"Opened issue \"asp.net core mvc application on windows server 2008 r2 is very slow\" (#2316) at aspnet/Home","RelatedBody":"hi ,\r\nwhen i host my asp.net core 1.0.1 mvc application (api controller)on IIS in windows server 2008r2\r\n,responses to http requests are very slow,and application performance is very slow\r\nbut same application's publish when host on iis in windows server2012 R2 ,every thing will be good\r\nand we have no slow performance,\r\nany one has this problem or\r\nany idea for this ?"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7041653272","Type":"PullRequestEvent","CreatedAt":"2017-12-29T23:00:51","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1257","RelatedDescription":"Opened pull request \"Invoke Multiple Users\" (#1257) at aspnet/SignalR","RelatedBody":"Part of #734 "},{"Id":"7041488972","Type":"IssuesEvent","CreatedAt":"2017-12-29T21:24:59","Actor":"mortenbirkelund","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1256","RelatedDescription":"Opened issue \"Extend Chatsample with groups\" (#1256) at aspnet/SignalR","RelatedBody":"Hi\r\nI have a project where I need to use the presence functionality from the chatsample on multiple pages. Therefore I would like to extend the presence functionality from the chatsample, but I am uncertain as to how the hub should be implemented.\r\nThe idea is that the hub can be access from different pages (representing a game between 2 contestant). \r\n\r\nTherefore the user should be added to a group that is specific for the game he is visiting and whenever the `OnUsersJoined` and `OnUsersLeft` is called, it should only be for other users in the same group. \r\n\r\nI just cant figure out how what should be altered in the current chatsample? I hope that i am not the only one that could be needing this functionality, and therefore it could be beneficial with a good example. \r\n\r\nThis is a description of the process. \r\n1. A user visits http://www.domain.com/game/{id}\r\n2. The user is instantly added to the group {id}\r\n3. Only the users in the same group (id) are alerted that a new user joined. \r\n4. When a user leaves, only the users in the group are alerted that a user have left. \r\n\r\nThanks in advance for your time.\r\n"},{"Id":"7040361971","Type":"IssuesEvent","CreatedAt":"2017-12-29T13:30:04","Actor":"Nickname863","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1255","RelatedDescription":"Closed issue \"Signalr SyntaxError in Google Chrome\" (#1255) at aspnet/SignalR","RelatedBody":"It could just be me using the js Client wrong. But when i am adding the client to HTML like this:\r\n\r\n![image](https://user-images.githubusercontent.com/33596703/34428641-5b77a044-ec4f-11e7-86da-13025b89963a.png)\r\n\r\nI get \r\n\r\n![image](https://user-images.githubusercontent.com/33596703/34428672-a312eaee-ec4f-11e7-9483-b1525caca6d1.png)\r\n\r\nHowever when i load the Site in Firefox i don't get this Error and the client seems to work just fine."},{"Id":"7039148433","Type":"IssuesEvent","CreatedAt":"2017-12-29T03:21:22","Actor":"Nickname863","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1255","RelatedDescription":"Opened issue \"Signalr SyntaxError in Google Chrome\" (#1255) at aspnet/SignalR","RelatedBody":"It could just be me using the js Client wrong. But when i am adding the client to HTML like this:\r\n\r\n![image](https://user-images.githubusercontent.com/33596703/34428641-5b77a044-ec4f-11e7-86da-13025b89963a.png)\r\n\r\nI get \r\n\r\n![image](https://user-images.githubusercontent.com/33596703/34428672-a312eaee-ec4f-11e7-9483-b1525caca6d1.png)\r\n\r\nHowever when i load the Site in Firefox i don't get this Error and the client seems to work just fine."},{"Id":"7035597793","Type":"PullRequestEvent","CreatedAt":"2017-12-28T01:29:45","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1254","RelatedDescription":"Opened pull request \"Invoke Multiple Groups\" (#1254) at aspnet/SignalR","RelatedBody":"Part of https://github.com/aspnet/SignalR/issues/734"},{"Id":"7034914645","Type":"PullRequestEvent","CreatedAt":"2017-12-27T19:50:50","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1186","RelatedDescription":"Closed pull request \"Making CallerIP a first class feature on the HubConnectionContext\" (#1186) at aspnet/SignalR","RelatedBody":"Issue: https://github.com/aspnet/SignalR/issues/944\r\n"},{"Id":"7033858435","Type":"IssuesEvent","CreatedAt":"2017-12-27T13:28:54","Actor":"Ryujose","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1253","RelatedDescription":"Closed issue \"[HUB - ERROR] AES 256 bits rinjdael crypto security with binnary formatter fails on authorization attribute override - Class level\" (#1253) at aspnet/SignalR","RelatedBody":"Hello community.\r\n\r\nI'm having an issue when I protect hub methods on class level with \"AuthorizeAttribute\" with an override of the methods.\r\n\r\nI'm using AES 256 bits with rinjdael and binnary formatter to make data secure on connection token and other data that's travel from client to server. The first time that's doing the decryption there isn't any problem, but when it's going to decrypt the second time and more times after it, the error of \"Padding is invalid and cannot be removed\" starts to showing up without stopping.\r\n\r\nI've done unit tests passing with several tests of this behaviour to see if it fails but it doesn't.\r\n\r\nI'm attaching the log file that's logging the errors at Application_Error of global.asax under \"AppDomain.CurrentDomain.FirstChanceException\" and \"AppDomain.CurrentDomain.UnhandledException\".\r\n\r\n[SignalRLog.txt](https://github.com/aspnet/SignalR/files/1589020/SignalRLog.txt)\r\n\r\nRegards,\r\n\r\nJose Luis Guerra Infante."}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7041915259","Type":"IssuesEvent","CreatedAt":"2017-12-30T02:56:25","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6547","RelatedDescription":"Closed issue \"Re-introduce HttpMethodActionConstraint dictionary perf improvement\" (#6547) at aspnet/Mvc","RelatedBody":""},{"Id":"7041915226","Type":"PullRequestEvent","CreatedAt":"2017-12-30T02:56:23","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7170","RelatedDescription":"Merged pull request \"[Fixes #6547] Re-introduce action method dictionary perf improvement\" (#7170) at aspnet/Mvc","RelatedBody":"See https://github.com/aspnet/Mvc/commit/f2a8c1cea707fd73454ce66a8c23c889b8a99f5d#diff-38cbc7b9816a3accb4c69b4e0d44fb9fL65 for details"},{"Id":"7041820154","Type":"PullRequestEvent","CreatedAt":"2017-12-30T01:16:14","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7170","RelatedDescription":"Opened pull request \"[Fixes #6547] Re-introduce action method dictionary perf improvement\" (#7170) at aspnet/Mvc","RelatedBody":"See https://github.com/aspnet/Mvc/commit/f2a8c1cea707fd73454ce66a8c23c889b8a99f5d#diff-38cbc7b9816a3accb4c69b4e0d44fb9fL65 for details"},{"Id":"7041811850","Type":"IssuesEvent","CreatedAt":"2017-12-30T01:08:30","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6423","RelatedDescription":"Closed issue \"What about testing?\" (#6423) at aspnet/Mvc","RelatedBody":"It's not really an issue but still a big problem.\r\nLest me explain: one year ago, we began an important new project and it is mainly about micro services. It was obvious that ASP.NET Core v1 was not production ready and so we have selected .NET 4.6. We were expected Docker for Windows but did not know yet the details...\r\nOne year later it is obvious that if we want to do microservices with .NET and Docker, we have to use .NET Core.\r\nThe preview is out. Most of 3pp libraries are compatible. So it's time to migrate. But what about testing? testing controllers routing, etc. Do you have plan for it?\r\nFrom my point of view, no one will use ASP.NET Core v2 (except for fun) if testing must be as painfulll as descibed in #6399? Waiting for 2.1 is not even serious and the 2.0 would be totally useless.\r\nWe just hope (and pray) that MyTested.AspNetCore.Mvc will be ready soon enough."},{"Id":"7041810233","Type":"IssuesEvent","CreatedAt":"2017-12-30T01:06:55","Actor":"javiercn","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6399","RelatedDescription":"Closed issue \"UnitTesting Controllers with HttpContext/Identity is a fairly complicated process \" (#6399) at aspnet/Mvc","RelatedBody":"I had the fun idea of trying to write unit tests for the default AccountController. But it turned out to be quite the ride.\r\nI ended up with this for my setup.\r\n\r\n```csharp\r\n//Usermanager mocks\r\nvar userStoreMock = Substitute.For<IUserStore<ApplicationUser>>();\r\nvar optionsMock = Substitute.For<IOptions<IdentityOptions>>();\r\nvar passwordHasherMock = Substitute.For<IPasswordHasher<ApplicationUser>>();\r\nvar userValidatorMock = Substitute.For<IEnumerable<IUserValidator<ApplicationUser>>>();\r\nvar passwordValidatorMock = Substitute.For<IEnumerable<IPasswordValidator<ApplicationUser>>>();\r\nvar lookUpNormalizerMock = Substitute.For<ILookupNormalizer>();\r\nvar identityErrorDescriberMock = Substitute.For<IdentityErrorDescriber>();\r\nvar serviceProviderMock = Substitute.For<IServiceProvider>();\r\nvar loggerMock = Substitute.For<ILogger<UserManager<ApplicationUser>>>();\r\n\r\nvar userManagerMock = Substitute.For<UserManager<ApplicationUser>>(\r\n    userStoreMock,\r\n    optionsMock,\r\n    passwordHasherMock,\r\n    userValidatorMock,\r\n    passwordValidatorMock,\r\n    lookUpNormalizerMock,\r\n    identityErrorDescriberMock,\r\n    serviceProviderMock,\r\n    loggerMock);\r\n\r\n//SignInManager mocks\r\nvar contextAccessorMock = Substitute.For<IHttpContextAccessor>();\r\nvar claimsPricipleFactoryMock = Substitute.For<IUserClaimsPrincipalFactory<ApplicationUser>>();\r\nvar loggerMockSM = Substitute.For<ILogger<SignInManager<ApplicationUser>>>();\r\n\r\nvar signInManagerMock = Substitute.For<SignInManager<ApplicationUser>>(\r\n    var userManagerMock,\r\n    contextAccessorMock,\r\n    claimsPricipleFactoryMock,\r\n    optionsMock,\r\n    loggerMockSM);\r\n\r\nvar cookieOptionsMock = Substitute.For<IOptions<IdentityCookieOptions>>();\r\nvar identityOptionsMock = new IdentityCookieOptions();\r\ncookieOptionsMock.Value.Returns(identityOptionsMock);\r\n\r\nvar emailMock = Substitute.For<IEmailSender>();\r\nvar smsMock = Substitute.For<ISmsSender>();\r\n\r\nvar loggerMockCtrl = Substitute.For<ILogger<AccountController>>();\r\n\r\nvar uut = new AccountController(userManagerMock, signInManagerMock, cookieOptionsMock, emailMock, smsMock, loggerMockCtrl);\r\n\r\nvar httpContext = Substitute.For<HttpContext>();\r\nuut.ControllerContext = new ControllerContext\r\n{\r\n    HttpContext = httpContext\r\n};\r\nuut.TempData = Substitute.For<ITempDataDictionary>();\r\nuut.Url = Substitute.For<IUrlHelper>();\r\n```\r\nAnd that is still missing a few things, as described here https://www.danylkoweb.com/Blog/how-to-successfully-mock-httpcontext-BT (+other stuff I probably don't know about)\r\n\r\nIt would be nice if there were some helpers or documentation on how to properly setup controllers for unit testing.\r\nYou did an awesome job on the `TestServer`. So looking for something similar that makes unit testing easier :)"},{"Id":"7041465405","Type":"PullRequestEvent","CreatedAt":"2017-12-29T21:12:45","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7169","RelatedDescription":"Opened pull request \"Document compatiblity switch for input formatter exceptions\" (#7169) at aspnet/Mvc","RelatedBody":""},{"Id":"7041328254","Type":"PullRequestEvent","CreatedAt":"2017-12-29T20:09:30","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7165","RelatedDescription":"Merged pull request \"Update the Enum Invalid Value setting for compat\" (#7165) at aspnet/Mvc","RelatedBody":"Updated the naming to follow guidelines, and set the default for 2.0\r\napps to false. Note that I inverted the naming, which means that I had\r\nto invert the logic in a few places."}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7041870858","Type":"PullRequestEvent","CreatedAt":"2017-12-30T02:08:46","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1548","RelatedDescription":"Opened pull request \"Remove unnecessary dependencies\" (#1548) at aspnet/Identity","RelatedBody":""},{"Id":"7041797236","Type":"IssuesEvent","CreatedAt":"2017-12-30T00:55:24","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1547","RelatedDescription":"Closed issue \"How to get all Roles using asp.net core 2 Identity?\" (#1547) at aspnet/Identity","RelatedBody":"**This is a question, Not an Issue**\r\nI have a custom `IdentityRole` called `ApplicationRole`. I created a RoleManager Service and I was successful in creating new roles using `CreateAsync` method but I am facing  I can't get all roles using this implementation (`GetAllRolesAsync`). I keep getting this error,\r\n\r\n> Cannot implicitly convert type\r\n> 'System.Collections.Generic.List<ApplicationRole>' to\r\n> 'System.Threading.Tasks.Task<ArtNgCore.Controllers.ViewModels.IdentityViewModels.ApplicationRoleViewModel>'\r\n\r\n\r\n\r\nI am posting the relevant code for this implementation.\r\n\r\n  **`ApplicationRole Class`**\r\n\r\n      public class ApplicationRole: IdentityRole\r\n        {\r\n            public string Description { get; set; }\r\n        }\r\n**`ApplicationRoleViewModel class`**\r\n\r\n    public class ApplicationRoleViewModel\r\n    {\r\n        public string RoleId { get; set; }\r\n        [Required]\r\n        [DataType(DataType.Text)]\r\n        [Display(Name = \"Role Name\")]\r\n        public string RoleName { get; set; }\r\n        public string Description { get; set; }\r\n    }\r\n\r\n**Registering `Identity` Service**\r\n\r\n     services.AddIdentity<ApplicationUser, ApplicationRole>\r\n\r\n**`Registering RoleManager Service`**\r\n\r\n    services.AddScoped<IRoleManager, RoleManager>();\r\n\r\n**`RoleManager` Service**\r\n\r\n    public interface IRoleManager\r\n        {\r\n            Task<List<ApplicationRoleViewModel>> GetAllRolesAsync();\r\n            Task<IdentityResult> CreateAsync(ApplicationRoleViewModel model);\r\n            Task<IdentityResult> DeleteAsync(ApplicationRoleViewModel model);\r\n        }\r\n        public class RoleManager : IRoleManager\r\n        {\r\n            private readonly RoleManager<ApplicationRole> roleManager;\r\n            public RoleManager(RoleManager<ApplicationRole> roleManager)\r\n            {\r\n                \r\n                this.roleManager = roleManager;\r\n    \r\n            }\r\n            public Task<IdentityResult> CreateAsync(ApplicationRoleViewModel model)\r\n            {\r\n                ApplicationRole role = new ApplicationRole();\r\n                role.Name = model.RoleName;\r\n                return this.roleManager.CreateAsync((role));\r\n            }\r\n            public Task<IdentityResult> DeleteAsync(ApplicationRoleViewModel model)\r\n            {\r\n                ApplicationRole role = new ApplicationRole();\r\n                role.Name = model.RoleName;\r\n                return this.roleManager.DeleteAsync((role));\r\n            }\r\n    \r\n            public Task<List<ApplicationRoleViewModel>> GetAllRolesAsync()\r\n            {\r\n                var roles = this.roleManager.Roles.ToList();\r\n                return roles;\r\n            }\r\n\r\n        }\r\n\r\n**`UserManagementController`** \r\n\r\n    [HttpGet]\r\n    public async Task<IActionResult> GetAllRoles() {\r\n        var roles = this.roleManager.GetAllRolesAsync();\r\n        return Ok(roles);\r\n    } \r\n\r\n    [HttpDelete]\r\n     public async Task<IActionResult> DeleteIdentityRole([FromBody] ApplicationRoleViewModel model)\r\n        {\r\n            if (!ModelState.IsValid)\r\n                return BadRequest(ModelState);\r\n            IdentityResult result = await this.roleManager.DeleteAsync(model);\r\n            if (result.Succeeded)\r\n                return Ok(model.RoleName + \" role has been created successfully\");\r\n\r\n        return BadRequest(result.Errors);\r\n\r\n    }\r\n\r\n"},{"Id":"7041793443","Type":"IssuesEvent","CreatedAt":"2017-12-30T00:51:49","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1159","RelatedDescription":"Closed issue \"DbUpdateConcurrencyException after success signIn\" (#1159) at aspnet/Identity","RelatedBody":"In my webApp, i want to update some custom fields of the user after success signIn. It is LastLoginDate and LastLogInIp. On my machine (localhost) everythings works fine, but on production server, i got always error:\r\n\r\n```\r\nMicrosoft.EntityFrameworkCore.DbUpdateConcurrencyException: Database operation expected to affect 1 row(s) but actually affected 0 row(s). Data may have been modified or deleted since entities were loaded. See http://go.microsoft.com/fwlink/?LinkId=527962 for information on understanding and handling optimistic concurrency exceptions.\r\n   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ThrowAggregateUpdateConcurrencyException(Int32 commandIndex, Int32 expectedRowsAffected, Int32 rowsAffected)\r\n   at async Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetWithoutPropagationAsync(?)\r\n   at async Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(?)\r\n   at async Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(?)\r\n   at async Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(?)\r\n   at async Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(?)\r\n   at async Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(?)\r\n   at async Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(?)\r\n```\r\nThe user is logged in, but the update of the fields is not completed.\r\n\r\nThis is my Login method:\r\n```\r\npublic async Task<IActionResult> Login(LoginViewModel model)\r\n        {\r\n            if (model == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(model));\r\n            }\r\n            model.SystemName = _appOptions.Value.SystemName;\r\n            model.SystemVersion = _appOptions.Value.SystemVersion;\r\n            if (ModelState.IsValid)\r\n            {\r\n                var result = await _signInManager.PasswordSignInAsync(model.Username, model.Password, false, lockoutOnFailure: false);\r\n                if (result.Succeeded)\r\n                {\r\n                    BackofficeUser user = await _userManagerStore.FindByNameAsync(model.Username);\r\n\r\n                    if (!user.IsEnabled)\r\n                    {\r\n                        ModelState.AddModelError(string.Empty, \"User is disabled\");\r\n                        return View(model);\r\n                    }\r\n\r\n                    var auditEntry = await _auditLog.StartAsync(new AuditLogAction\r\n                    {\r\n                        Action = AuditLogActionType.Login,\r\n                        Parameters = { model.Username },\r\n                        UserId = user.Id,\r\n                        UserName = user.UserName\r\n                    });\r\n\r\n                    user.LastLoginDate = DateTime.UtcNow;\r\n                    user.LastLoginIp = Request.HttpContext.Connection.RemoteIpAddress.ToString();\r\n                    await _userManagerStore.UpdateAsync(user);\r\n                    _logger.LogInformation(1, $\"User {model.Username} logged in.\");\r\n                    auditEntry.Result = AuditLogResultType.Success;\r\n                    await _auditLog.FinishAsync(auditEntry);\r\n                    return RedirectToLocal(model.ReturnUrl);\r\n                }\r\n                if (result.IsLockedOut)\r\n                {\r\n                    ModelState.AddModelError(string.Empty,\r\n                        $\"User locked out for {ModelContext.Configuration.GetValue<int>(\"LockedOutTime\")} minutes.\");\r\n                }\r\n                else\r\n                {\r\n                    var usr = await _userManagerStore.FindByNameAsync(model.Username);\r\n                    if (usr != null)\r\n                    {\r\n                        await _userManagerStore.AccessFailedAsync(usr);\r\n                    }\r\n                    ModelState.AddModelError(string.Empty, \"Invalid login attempt.\");\r\n                }\r\n            }\r\n            return View(model);\r\n        }\r\n```\r\n\r\nThe error occurs on this row:\r\n`await _userManagerStore.UpdateAsync(user);`\r\nThis method just call UpdateAsync of class signInManager.\r\n\r\nThe error disappear when i restart the app pool of my site, but returns randomly."},{"Id":"7041789858","Type":"IssuesEvent","CreatedAt":"2017-12-30T00:48:36","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1390","RelatedDescription":"Closed issue \"ConfirmEmail doesn't work\" (#1390) at aspnet/Identity","RelatedBody":"Moved from https://github.com/aspnet/Home/issues/2152 by @kironet\r\n\r\nHey,\r\n\r\nI was following this tutorial: https://docs.microsoft.com/en-us/aspnet/core/security/authentication/accconfirm?tabs=aspnetcore2x%2Csql-server\r\n\r\nAnd email is sent, I'm getting url like this: \r\n_https://localhost:44343/Account/ConfirmEmail?userId=e714dc1d-1b6b-4dfd-8288-78f8b429d506&amp;code=CfDJ8GPqscMYofFCs%2FRH3ucxQlVR4O2ONj8uPQyVUpllt5vd9QrjduDA46u%2FAI9jDaBK28e5U0uzFfx1zxwKQ2O0c41qpXlkVzya%2FU5D1aeLIiMUsiDTxUqil04U%2FRFs%2B%2FZ3UBXmr62zHd%2FxJdsWyo3R4gU1TMwo82OAc0qWrIzG%2BmkxE4SS%2BR0%2BvVVzDyZxLQm4Fc6B9%2Byep6o7ZzVyvhbVKlraFkE6irltJLhKcNFlT6pgmyObNk8uPANP9MXiOdNRvg%3D%3D_\r\n\r\nBut if I click on it, it does nothing, just redirect to Home/Index and I still can't login, because email is not confirmed.  "},{"Id":"7041783606","Type":"IssuesEvent","CreatedAt":"2017-12-30T00:42:55","Actor":"javiercn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1428","RelatedDescription":"Closed issue \"Remove .vscode files\" (#1428) at aspnet/Identity","RelatedBody":"Those are yours @javiercn - they're not supposed to be in source control :p"},{"Id":"7032175554","Type":"IssuesEvent","CreatedAt":"2017-12-27T00:55:40","Actor":"embryologist","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1547","RelatedDescription":"Opened issue \"How to get all Roles using asp.net core 2 Identity?\" (#1547) at aspnet/Identity","RelatedBody":"**This is a question, Not an Issue**\r\nI have a custom `IdentityRole` called `ApplicationRole`. I created a RoleManager Service but I was successful in creating new roles using `CreateAsync` method but I am facing  I can't get all roles using this implementation (`GetAllRolesAsync`). I keep getting this error,\r\n\r\n> Cannot implicitly convert type\r\n> 'System.Collections.Generic.List<ApplicationRole>' to\r\n\r\n\r\nI am posting the relevant code for this implementation.\r\n\r\n  **`ApplicationRole Class`**\r\n\r\n      public class ApplicationRole: IdentityRole\r\n        {\r\n            public string Description { get; set; }\r\n        }\r\n**`ApplicationRoleViewModel class`**\r\n\r\n    public class ApplicationRoleViewModel\r\n    {\r\n        public string RoleId { get; set; }\r\n        [Required]\r\n        [DataType(DataType.Text)]\r\n        [Display(Name = \"Role Name\")]\r\n        public string RoleName { get; set; }\r\n        public string Description { get; set; }\r\n    }\r\n\r\n**Registering `Identity` Service**\r\n\r\n     services.AddIdentity<ApplicationUser, ApplicationRole>\r\n\r\n**`Registering RoleManager Service`**\r\n\r\n    services.AddScoped<IRoleManager, RoleManager>();\r\n\r\n**`RoleManager` Service**\r\n\r\n    public interface IRoleManager\r\n        {\r\n            Task<List<ApplicationRoleViewModel>> GetAllRolesAsync();\r\n            Task<IdentityResult> CreateAsync(ApplicationRoleViewModel model);\r\n            Task<IdentityResult> DeleteAsync(ApplicationRoleViewModel model);\r\n        }\r\n        public class RoleManager : IRoleManager\r\n        {\r\n            private readonly RoleManager<ApplicationRole> roleManager;\r\n            public RoleManager(RoleManager<ApplicationRole> roleManager)\r\n            {\r\n                \r\n                this.roleManager = roleManager;\r\n    \r\n            }\r\n            public Task<IdentityResult> CreateAsync(ApplicationRoleViewModel model)\r\n            {\r\n                ApplicationRole role = new ApplicationRole();\r\n                role.Name = model.RoleName;\r\n                return this.roleManager.CreateAsync((role));\r\n            }\r\n            public Task<IdentityResult> DeleteAsync(ApplicationRoleViewModel model)\r\n            {\r\n                ApplicationRole role = new ApplicationRole();\r\n                role.Name = model.RoleName;\r\n                return this.roleManager.DeleteAsync((role));\r\n            }\r\n    \r\n            public Task<List<ApplicationRoleViewModel>> GetAllRolesAsync()\r\n            {\r\n                var roles = this.roleManager.Roles.ToList();\r\n                return roles;\r\n            }\r\n\r\n        }\r\n\r\n**`UserManagementController`** \r\n\r\n    [HttpGet]\r\n    public async Task<IActionResult> GetAllRoles() {\r\n        var roles = this.roleManager.GetAllRolesAsync();\r\n        return Ok(roles);\r\n    } \r\n\r\n    [HttpDelete]\r\n     public async Task<IActionResult> DeleteIdentityRole([FromBody] ApplicationRoleViewModel model)\r\n        {\r\n            if (!ModelState.IsValid)\r\n                return BadRequest(ModelState);\r\n            IdentityResult result = await this.roleManager.DeleteAsync(model);\r\n            if (result.Succeeded)\r\n                return Ok(model.RoleName + \" role has been created successfully\");\r\n\r\n        return BadRequest(result.Errors);\r\n\r\n    }\r\n\r\n"},{"Id":"7032111629","Type":"IssuesEvent","CreatedAt":"2017-12-27T00:07:52","Actor":"embryologist","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1546","RelatedDescription":"Opened issue \"Optimistic concurrency failure upon using RoleManager DeleteAsync!\" (#1546) at aspnet/Identity","RelatedBody":"My implementation,\r\n\r\n**`ApplicationRole Class`**\r\n\r\n      public class ApplicationRole: IdentityRole\r\n        {\r\n            public string Description { get; set; }\r\n        }\r\n**`ApplicationRoleViewModel class`**\r\n\r\n    public class ApplicationRoleViewModel\r\n    {\r\n        public string RoleId { get; set; }\r\n        [Required]\r\n        [DataType(DataType.Text)]\r\n        [Display(Name = \"Role Name\")]\r\n        public string RoleName { get; set; }\r\n        public string Description { get; set; }\r\n    }\r\n\r\n**Registering `Identity` Service**\r\n\r\n     services.AddIdentity<ApplicationUser, ApplicationRole>\r\n\r\n**`Registering RoleManager Service`**\r\n\r\n    services.AddScoped<IRoleManager, RoleManager>();\r\n\r\n**`RoleManager` Service**\r\n\r\n    public interface IRoleManager\r\n        {\r\n            Task<IdentityResult> CreateAsync(ApplicationRoleViewModel model);\r\n            Task<IdentityResult> DeleteAsync(ApplicationRoleViewModel model);\r\n        }\r\n        public class RoleManager : IRoleManager\r\n        {\r\n            private readonly RoleManager<ApplicationRole> roleManager;\r\n            public RoleManager(RoleManager<ApplicationRole> roleManager)\r\n            {\r\n                \r\n                this.roleManager = roleManager;\r\n    \r\n            }\r\n            public Task<IdentityResult> CreateAsync(ApplicationRoleViewModel model)\r\n            {\r\n                ApplicationRole role = new ApplicationRole();\r\n                role.Name = model.RoleName;\r\n                return this.roleManager.CreateAsync((role));\r\n            }\r\n            public Task<IdentityResult> DeleteAsync(ApplicationRoleViewModel model)\r\n            {\r\n                ApplicationRole role = new ApplicationRole();\r\n                role.Name = model.RoleName;\r\n                return this.roleManager.DeleteAsync((role));\r\n            }\r\n\r\n        }\r\n\r\n**`UserManagementController`** \r\n\r\n    [HttpDelete]\r\n     public async Task<IActionResult> DeleteIdentityRole([FromBody] ApplicationRoleViewModel model)\r\n        {\r\n            if (!ModelState.IsValid)\r\n                return BadRequest(ModelState);\r\n            IdentityResult result = await this.roleManager.DeleteAsync(model);\r\n            if (result.Succeeded)\r\n                return Ok(model.RoleName + \" role has been created successfully\");\r\n\r\n        return BadRequest(result.Errors);\r\n\r\n    }\r\nI keep receiving this error by calling `DeleteAsync`\r\n> Optimistic concurrency failure, object has been modified."},{"Id":"7032089929","Type":"PullRequestEvent","CreatedAt":"2017-12-26T23:51:43","Actor":"reaction1989","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1545","RelatedDescription":"Opened pull request \"Remove IConfiguration from use development certificate error page\" (#1545) at aspnet/Identity","RelatedBody":"fixes #1221"},{"Id":"7032055918","Type":"PullRequestEvent","CreatedAt":"2017-12-26T23:25:43","Actor":"reaction1989","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1544","RelatedDescription":"Opened pull request \"make Logger non virtual in UserManager\" (#1544) at aspnet/Identity","RelatedBody":"Fixes #1441 "}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7041389709","Type":"PullRequestEvent","CreatedAt":"2017-12-29T20:37:18","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2239","RelatedDescription":"Opened pull request \"Change ApplicationProtocol to ReadOnlyMemory<byte> \" (#2239) at aspnet/KestrelHttpServer","RelatedBody":"#2182 \r\nIn the process I realized the prior change for merging the https and core packages had dropped the new netcoreapp2.1 TFM so all of the HTTP/2 code was disabled. Filed https://github.com/aspnet/KestrelHttpServer/issues/2238 for followup."},{"Id":"7041338212","Type":"IssuesEvent","CreatedAt":"2017-12-29T20:13:52","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2238","RelatedDescription":"Opened issue \"Add functional tests for http2\" (#2238) at aspnet/KestrelHttpServer","RelatedBody":"There are not currently any functional test for the Http2 features. We accidentally disabled the entire feature when merging the https and core packages due to a missing TFM and didn't notice. https://github.com/aspnet/KestrelHttpServer/pull/2224\r\n\r\nThe big blocker here is the lack of consistent client support. However, even if there's one client on one of the OS's then that would be a good start."},{"Id":"7038977298","Type":"PullRequestEvent","CreatedAt":"2017-12-29T01:32:11","Actor":"mgravell","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2237","RelatedDescription":"Closed pull request \"DO NOT MERGE - open PR to track changes\" (#2237) at aspnet/KestrelHttpServer","RelatedBody":"intent: make the kestrel transport usable from client scenarios"},{"Id":"7038976952","Type":"PullRequestEvent","CreatedAt":"2017-12-29T01:31:59","Actor":"mgravell","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2237","RelatedDescription":"Opened pull request \"DO NOT MERGE - open PR to track changes\" (#2237) at aspnet/KestrelHttpServer","RelatedBody":"intent: make the kestrel transport usable from client scenarios"},{"Id":"7038464497","Type":"IssuesEvent","CreatedAt":"2017-12-28T21:02:03","Actor":"NVentimiglia","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2236","RelatedDescription":"Closed issue \"ConnectionResetException -4077 ECONNRESET connection reset by peer\" (#2236) at aspnet/KestrelHttpServer","RelatedBody":"I see a number of related issues. These issues are closed with the understanding that this is the normal behavior when a connection dies. I am opening this issue because this exception is killing my web server. Please advise how I can catch and handle this exception.\r\n\r\n### Stack Trace\r\n\r\n```\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.Internal.ConnectionResetException occurred\r\n  HResult=0x80131620\r\n  Message=Error -4077 ECONNRESET connection reset by peer\r\n  Source=<Cannot evaluate the exception source>\r\n  StackTrace:\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.GetResult(ReadResult& result)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IReadableBufferAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadableBufferAwaitable.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.<ReadAsync>d__22.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameRequestStream.<ReadAsyncInternal>d__21.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<EnsureDataAvailableOrReadAsync>d__38.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<ReadNextFrameAsync>d__37.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<ReceiveAsync>d__36.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Foundation.Net.Transports.WSHostConnection.<UpdateAsync>d__7.MoveNext() in F:\\Projects\\Foundation\\Foundation.Core\\Foundation.Net\\Transports\\WSHostConnection.cs:line 46\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<EnsureDataAvailableOrReadAsync>d__38.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<ReadNextFrameAsync>d__37.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<ReceiveAsync>d__36.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<CloseAsync>d__41.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Foundation.Net.Transports.WSHostConnection.<DisconnectInternal>d__8.MoveNext() in F:\\Projects\\Foundation\\Foundation.Core\\Foundation.Net\\Transports\\WSHostConnection.cs:line 81\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n\r\nInner Exception 1:\r\nUvException: Error -4077 ECONNRESET connection reset by peer\r\n```\r\n\r\n## My Code\r\n\r\n```\r\n\r\npublic async Task UpdateAsync()\r\n        {\r\n            try\r\n            {\r\n                while (Socket != null && Socket.State == WebSocketState.Open)\r\n                {\r\n                    ReadSerializer.Reset();\r\n                    ReadSerializer.IsWriting = false;\r\n\r\n                    var segment = new ArraySegment<byte>(ReadSerializer.Data);\r\n\r\n                    //Stack Trace points to this line\r\n                    var received = await Socket.ReceiveAsync(segment, CancellationToken.None);\r\n\r\n                    if (!received.EndOfMessage)\r\n                        continue;\r\n\r\n                    if (Socket == null || Socket.State != WebSocketState.Open)\r\n                        return;\r\n\r\n                    if (received.MessageType == WebSocketMessageType.Binary)\r\n                    {\r\n                        RaiseMessage(ReadSerializer);\r\n                    }\r\n                    else if (received.MessageType == WebSocketMessageType.Close)\r\n                    {\r\n#if VERBOSE\r\n                        Logger.Info(\"Received Closed \" + ConnectionId);\r\n#endif\r\n                    }\r\n                }\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Logger.Exception(ex);\r\n            }\r\n        }\r\n```\r\nNotice that I am catching the exception, what else can I do ?\r\n\r\nMicrosoft.AspNetCore 2.01\r\nMicrosoft.AspNetCore.Http.Abstractions 2.01\r\nMicrosoft.AspNetCore.Websockets.Server 0.1.0\r\n"},{"Id":"7034658992","Type":"IssuesEvent","CreatedAt":"2017-12-27T18:09:38","Actor":"NVentimiglia","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2236","RelatedDescription":"Opened issue \"ConnectionResetException -4077 ECONNRESET connection reset by peer\" (#2236) at aspnet/KestrelHttpServer","RelatedBody":"I see a number of related issues. These issues are closed with the understanding that this is the normal behavior when a connection dies. I am opening this issue because this exception is killing my web server. Please advise how I can catch and handle this exception.\r\n\r\n### Stack Trace\r\n\r\n```\r\nMicrosoft.AspNetCore.Server.Kestrel.Transport.Abstractions.Internal.ConnectionResetException occurred\r\n  HResult=0x80131620\r\n  Message=Error -4077 ECONNRESET connection reset by peer\r\n  Source=<Cannot evaluate the exception source>\r\n  StackTrace:\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.PipeCompletion.ThrowFailed()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.GetResult(ReadResult& result)\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.Pipe.Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.IReadableBufferAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Internal.System.IO.Pipelines.ReadableBufferAwaitable.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.MessageBody.<ReadAsync>d__22.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.FrameRequestStream.<ReadAsyncInternal>d__21.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<EnsureDataAvailableOrReadAsync>d__38.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<ReadNextFrameAsync>d__37.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<ReceiveAsync>d__36.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Foundation.Net.Transports.WSHostConnection.<UpdateAsync>d__7.MoveNext() in F:\\Projects\\Foundation\\Foundation.Core\\Foundation.Net\\Transports\\WSHostConnection.cs:line 46\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<EnsureDataAvailableOrReadAsync>d__38.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<ReadNextFrameAsync>d__37.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<ReceiveAsync>d__36.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.AspNetCore.WebSockets.Protocol.CommonWebSocket.<CloseAsync>d__41.MoveNext()\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Foundation.Net.Transports.WSHostConnection.<DisconnectInternal>d__8.MoveNext() in F:\\Projects\\Foundation\\Foundation.Core\\Foundation.Net\\Transports\\WSHostConnection.cs:line 81\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n\r\nInner Exception 1:\r\nUvException: Error -4077 ECONNRESET connection reset by peer\r\n```\r\n\r\n## My Code\r\n\r\n```\r\n\r\npublic async Task UpdateAsync()\r\n        {\r\n            try\r\n            {\r\n                while (Socket != null && Socket.State == WebSocketState.Open)\r\n                {\r\n                    ReadSerializer.Reset();\r\n                    SendSerializer.IsWriting = false;\r\n\r\n                    var segment = new ArraySegment<byte>(ReadSerializer.Data);\r\n\r\n                    //Stack Trace points to this line\r\n                    var received = await Socket.ReceiveAsync(segment, CancellationToken.None);\r\n\r\n                    if (!received.EndOfMessage)\r\n                        continue;\r\n\r\n                    if (Socket == null || Socket.State != WebSocketState.Open)\r\n                        return;\r\n\r\n                    if (received.MessageType == WebSocketMessageType.Binary)\r\n                    {\r\n                        RaiseMessage(ReadSerializer);\r\n                    }\r\n                    else if (received.MessageType == WebSocketMessageType.Close)\r\n                    {\r\n#if VERBOSE\r\n                        Logger.Info(\"Received Closed \" + ConnectionId);\r\n#endif\r\n                    }\r\n                }\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Logger.Exception(ex);\r\n            }\r\n        }\r\n```\r\nNotice that I am catching the exception, what else can I do ?"},{"Id":"7034651666","Type":"PullRequestEvent","CreatedAt":"2017-12-27T18:06:43","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2235","RelatedDescription":"Merged pull request \"Use localhost dev cert in sample\" (#2235) at aspnet/KestrelHttpServer","RelatedBody":"The localhost dev cert should be present for anybody using the new tooling. The aspnet.test cert is only installed by some functional tests."},{"Id":"7034453749","Type":"PullRequestEvent","CreatedAt":"2017-12-27T16:52:32","Actor":"Tratcher","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2235","RelatedDescription":"Opened pull request \"Use localhost dev cert in sample\" (#2235) at aspnet/KestrelHttpServer","RelatedBody":"The localhost dev cert should be present for anybody using the new tooling. The aspnet.test cert is only installed by some functional tests."}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7041812305","Type":"IssuesEvent","CreatedAt":"2017-12-30T01:08:57","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1836","RelatedDescription":"Closed issue \"Add RazorSyntaxFactsService tests\" (#1836) at aspnet/Razor","RelatedBody":""},{"Id":"7041806355","Type":"PullRequestEvent","CreatedAt":"2017-12-30T01:03:19","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Razor/pull/1891","RelatedDescription":"Merged pull request \"Added test for DefaultRazorSyntaxFactsService\" (#1891) at aspnet/Razor","RelatedBody":"#1836 \r\n\r\nAdded only a couple of basic tests. Didn't seem worth adding more as these tests cover pretty much everything this class does. \r\n\r\nFYI @mkArtakMSFT "},{"Id":"7041377192","Type":"PullRequestEvent","CreatedAt":"2017-12-29T20:31:45","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1894","RelatedDescription":"Opened pull request \"[Design] Add metadata to Razor\" (#1894) at aspnet/Razor","RelatedBody":"This PR introduces standard metadata to Razor. This change begins to\r\nformalize the contract between generated code produced by Razor and\r\nruntimes that want to load and interact with this code.\r\n\r\nThis is a step on making MVC a 'plugin' to Razor rather than the only\r\npossible implementation. Since we're doing MSBuild work - this is the\r\nright time to designate the current interaction between Razor and MVC as\r\n'legacy' and move forward.\r\n\r\nAdditionally, we need the source thumbprinting to make re-compilation of\r\nRazor a thing."},{"Id":"7041157944","Type":"IssuesEvent","CreatedAt":"2017-12-29T18:53:38","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1893","RelatedDescription":"Opened issue \"Formatting of output from RazorCompile is wrong \" (#1893) at aspnet/Razor","RelatedBody":"Snippet of build output:\r\n```\r\nMvcSandbox -> F:\\git\\aspnet\\Mvc\\samples\\MvcSandbox\\bin\\Debug\\netcoreapp2.1\\MvcSandbox.dll\r\nMvcSandbox -> F:\\git\\aspnet\\Mvc\\samples\\MvcSandbox\\bin\\Debug\\netcoreapp2.0\\MvcSandbox.dll\r\nMvcSandbox -> F:\\git\\aspnet\\Mvc\\samples\\MvcSandbox\\bin\\Debug\\net461\\MvcSandbox.exe\r\nobj\\Debug\\netcoreapp2.1\\MvcSandbox.PrecompiledViews.dll -> bin\\Debug\\netcoreapp2.1\\MvcSandbox.PrecompiledViews\r\nobj\\Debug\\netcoreapp2.0\\MvcSandbox.PrecompiledViews.dll -> bin\\Debug\\netcoreapp2.0\\MvcSandbox.PrecompiledViews\r\nobj\\Debug\\net461\\MvcSandbox.PrecompiledViews.dll -> bin\\Debug\\net461\\MvcSandbox.PrecompiledViews\r\n```\r\n\r\nThis should look like `MvcSandbox -> F:\\git\\aspnet\\Mvc\\samples\\MvcSandbox\\bin\\Debug\\$TFM\\MvcSandbox.PrecompiledViews.dll`"},{"Id":"7039157410","Type":"IssuesEvent","CreatedAt":"2017-12-29T03:26:54","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1892","RelatedDescription":"Opened issue \"Consider whether Razor MSBuild support should be an SDK\" (#1892) at aspnet/Razor","RelatedBody":"This might deliver a better UX than building a 'fat' package.\r\n\r\nThis wouldn't prevent us from shipping compiler updates OOB or using nightlies."}],"ResultType":"GitHubEvent"},"Templates":{"Events":[{"Id":"6760798601","Type":"IssuesEvent","CreatedAt":"2017-10-24T22:00:58","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/67","RelatedDescription":"Closed issue \"External Logins does not set the Email\" (#67) at aspnet/Templates","RelatedBody":"- Enable Facebook Login\n- Login using Facebook for the first time\n- Email field is blank. It should be set from what we got from Facebook\n"},{"Id":"6760789807","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:58:48","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/86","RelatedDescription":"Closed issue \"Identity: Consider less generic name for ManageController\" (#86) at aspnet/Templates","RelatedBody":"Manage is a very generic name and you would probably expect http://abcdefg/Manage to be about managing something from your applications business domain rather than user accounts.\n\nManageAccount would probably be a better name.\n"},{"Id":"6760785159","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:57:37","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/115","RelatedDescription":"Closed issue \"Need more templates\" (#115) at aspnet/Templates","RelatedBody":"MVC 6 project templates should include a test project template. And the main ASP.NET 5 Preview Templates / Web Application or ... / Empty templates should have a few more sub-options, enabling for example addition and removal of XML support, creation of a minimal MVC project, or adding in EF (without choosing Individual User Accounts authentication).\n\nHopefully this will allow the new project dialogue to enable the options shown below -- plus a few options specific to MVC 6.\n![disabled project features](https://cloud.githubusercontent.com/assets/6431421/8257821/2a76a606-1665-11e5-8e75-cdb21473f6a1.png)\n"},{"Id":"6760779940","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:56:18","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/104","RelatedDescription":"Closed issue \"OrgAuth: Account Controller should return void\" (#104) at aspnet/Templates","RelatedBody":"Since https://github.com/aspnet/Mvc/issues/2409 is fixed. We should change the AccountController for SSO/ MultiOrg to return void\n"},{"Id":"6760777806","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:46","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/120","RelatedDescription":"Closed issue \"Template feedback\" (#120) at aspnet/Templates","RelatedBody":"Porting from MVC repo https://github.com/aspnet/Mvc/issues/2637\n"},{"Id":"6760775251","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:55:10","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/137","RelatedDescription":"Closed issue \"Need a SPA template\" (#137) at aspnet/Templates","RelatedBody":""},{"Id":"6760770959","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:54:08","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/365","RelatedDescription":"Closed issue \"Poor user and dev experience in Identity email confirmation\" (#365) at aspnet/Templates","RelatedBody":"There are two issues using the default template for identity when using email confirmation.\n\nFollowing the guide here: http://docs.asp.net/en/latest/security/authentication/accconfirm.html\n\nPoor user experience: When you click \"Register\" it sends the email off, but just redirects the user to the Home controller. Redirecting to something else to indicate they have to confirm their account would be a better example. Perhaps the default template should have such a view OOTB.\n\nPoor dev experience: When logging in with an external account (lets say Facebook) if the account doesn't exist you get thrown into AccountController.ExternalLoginConfirmation, great. This screen requires an email, so you complete the registration then you're logged in but never shoots off the email confirmation link here. Perhaps a commented out section in this action to deal with this would improve the dev experience here.\n"},{"Id":"6760770378","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:59","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/382","RelatedDescription":"Closed issue \"MVC Template Should Apply ResponseCache Attribute to Error Action\" (#382) at aspnet/Templates","RelatedBody":"HomeController.Error() should be updated:\n\n```\n    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]\n    public IActionResult Error()\n    {\n        return View();\n    }\n```\n\nThere is no good scenario where you would want errors to be cached, either on the client or via a proxy, or to have error information stored in such caches (especially if it might contain sensitive information in stack traces, etc.).\n"},{"Id":"6760769801","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:51","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/406","RelatedDescription":"Closed issue \"Add a flow for changing email in the Manage page\" (#406) at aspnet/Templates","RelatedBody":"Porting from ASP.NET Identity repo https://github.com/aspnet/Identity/issues/727\n"},{"Id":"6760769204","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:42","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/423","RelatedDescription":"Closed issue \"Don't create Project_Readme.html for ASP.NET 5 Empty\" (#423) at aspnet/Templates","RelatedBody":"I created an empty project for both ASP.NET 4 and ASP.NET 5. The ASP.NET 5 project had a Project_Readme.html and the ASP.NET 4 one did not. I'm not aware if that was on purpose or not, but we should be consistent with the empty projects. I think we should not add the Project_Readme.html for all Empty projects.\n"},{"Id":"6760768174","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:28","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/444","RelatedDescription":"Closed issue \"Support On-Premises option for Work & School Accounts\" (#444) at aspnet/Templates","RelatedBody":"Support this for Web APIs and Web Apps.\n"},{"Id":"6760767634","Type":"IssuesEvent","CreatedAt":"2017-10-24T21:53:19","Actor":"Eilon","Repository":"aspnet/Templates","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Templates/issues/451","RelatedDescription":"Closed issue \"ValidationSummary.All should be replaced with ModelOnly\" (#451) at aspnet/Templates","RelatedBody":"All the views in the Accounts folder use\n`<div asp-validation-summary=\"ValidationSummary.All\" class=\"text-danger\"></div>`\n\nThey should just use \n`<div asp-validation-summary=\"ValidationSummary.ModelOnly\" class=\"text-danger\"></div>`\n\nSo you get each error twice. \n\n![image](https://cloud.githubusercontent.com/assets/3605364/13896326/ae916ee2-ed2b-11e5-8bf5-f9ad5246e82c.png)\n"}],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"6856182602","Type":"PullRequestEvent","CreatedAt":"2017-11-15T02:15:11","Actor":"Andrew-MSFT","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Merged pull request \"Re adding\" (#1064) at aspnet/Tooling","RelatedBody":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end..."},{"Id":"6856061013","Type":"PullRequestEvent","CreatedAt":"2017-11-15T01:32:45","Actor":"cristy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/pull/1064","RelatedDescription":"Opened pull request \"Re adding\" (#1064) at aspnet/Tooling","RelatedBody":"Submitting with the right location. Not sure why the missing-template.md file got tacked on at the end..."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6909206856","Type":"IssuesEvent","CreatedAt":"2017-11-27T20:34:10","Actor":"pranavkm","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/282","RelatedDescription":"Opened issue \"aspnetcore-ci-*, aspnetcore-volatile-* feeds being deprecated\" (#282) at aspnet/Announcements","RelatedBody":"As part of some of our infrastructural changes, we're discontinuing the use of the following feeds and may remove them entirely in the future:\r\n* https://dotnet.myget.org/f/aspnetcore-ci-dev \r\n* https://dotnet.myget.org/f/aspnetcore-ci-release\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-dev\r\n* https://dotnet.myget.org/f/aspnetcore-volatile-release\r\n\r\nIf you're currently using one of these feeds in your projects to pick up our daily builds, we recommend migrating to https://dotnet.myget.org/f/aspnetcore-dev.\r\n\r\nPlease use this discussion topic - https://github.com/aspnet/Home/issues/2292 - for feedback and questions. "}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"944564608404205568","CreatedAt":"2017-12-23T13:45:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz - @csharpfritz and MVP @IrisClasson in about an hour for LIVE CODING and pair programming on… https://t.co/RuFa6Hh6S7","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":14,"FavoriteCount":5,"RawContent":null},{"Id":"943234846289289217","CreatedAt":"2017-12-19T21:41:26+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz (@csharpfritz) in a little more than 2 hours for LIVE CODING. He's working on an @aspnet Core p… https://t.co/wEDxxFaCxu","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":2,"RawContent":null},{"Id":"942039735207448576","CreatedAt":"2017-12-16T14:32:29+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz in 30 minutes for some LIVE CODING and answering your questions about .NET and Visual Studio.  https://t.co/OakzDOKxUB","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":6,"RawContent":null},{"Id":"941295101271212032","CreatedAt":"2017-12-14T13:13:35+00:00","UserScreenname":"aspnet","Text":"Join our Jeff Fritz at 10am ET for a LIVE CODING session.  He'll answer your questions about .NET, Visual Studio, a… https://t.co/aG5z9e5Rgr","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":8,"FavoriteCount":5,"RawContent":null},{"Id":"941015999809249280","CreatedAt":"2017-12-13T18:44:32+00:00","UserScreenname":"aspnet","Text":"Join @csharpfritz in about 15 minutes on Mixer or Twitch for a two-hour LIVE .NET CODING session where he will answ… https://t.co/OC1nGXILjO","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938192857902354432","CreatedAt":"2017-12-05T23:46:22+00:00","UserScreenname":"aspnet","Text":"We're live for the #ASPNET Community Standup now at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":7,"RawContent":null},{"Id":"938163679614214144","CreatedAt":"2017-12-05T21:50:26+00:00","UserScreenname":"aspnet","Text":"Join us for the #aspnet Community Standup today at 3:45 PM Pacific time - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":6,"RawContent":null},{"Id":"931580871378964481","CreatedAt":"2017-11-17T17:52:42+00:00","UserScreenname":"aspnet","Text":"Check out our new ConfigurationBuilders that make it easier than ever to use Azure Key Vault, Environment Variables… https://t.co/itxdVWOnG5","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":36,"FavoriteCount":7,"RawContent":null},{"Id":"917884946324250624","CreatedAt":"2017-10-10T22:49:59+00:00","UserScreenname":"aspnet","Text":"The #aspnet Community Standup starts now - https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":8,"RawContent":null},{"Id":"917877107904036865","CreatedAt":"2017-10-10T22:18:50+00:00","UserScreenname":"aspnet","Text":"Join us in a half hour (3:45 PM Pacific) for this week's #aspnet Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":11,"FavoriteCount":3,"RawContent":null},{"Id":"915262407743647744","CreatedAt":"2017-10-03T17:08:57+00:00","UserScreenname":"aspnet","Text":"We're live at https://t.co/4Ioo9jNSN2 for the exciting #SignalR deep dive. Join us now!","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":34,"FavoriteCount":22,"RawContent":null},{"Id":"915242491774869504","CreatedAt":"2017-10-03T15:49:49+00:00","UserScreenname":"aspnet","Text":"Join us for some #SignalR Core demos at 10 AM PDT (UTC-7) on #ASPNET Community Standup w/ SignalR dev @moozzyk.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":56,"FavoriteCount":26,"RawContent":null}]}},"RunOn":"2017-12-30T05:30:10.6434967Z","RunDurationInMilliseconds":9116}