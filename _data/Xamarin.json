{"Data":{"Blog":{"FeedItems":[{"Title":"Gorilla Player: A Tool to Craft Beautiful XAML UIs for Xamarin.Forms","PublishedOn":"2018-11-08T21:00:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post contributed by Leonardo Rodríguez Viacava. Leo is co-founder and CTO of UXDivers, creators of Grial UIKit and Gorilla Player. UXDivers specializes in designing and coding engaging...","Href":"https://blog.xamarin.com/gorilla-player-a-tool-to-craft-beautiful-xaml-uis-for-xamarin-forms/","RawContent":null},{"Title":"Xamarin and .NET Community Events in November","PublishedOn":"2018-11-01T16:01:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Here are just a few of the awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page. There you will...","Href":"https://blog.xamarin.com/xamarin-and-net-community-events-in-november/","RawContent":null},{"Title":"Xamarin.Forms and Zeplin: Speed Up Your Design to Development Process","PublishedOn":"2018-10-23T18:53:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Arnstein Johansen, a Norwegian software engineer interested in mobile and web development. He works for Itema AS, a consultant agency in Trondheim, Norway and a...","Href":"https://blog.xamarin.com/xamarin-forms-and-zeplin-speed-up-your-design-to-development-process/","RawContent":null},{"Title":"Xamarin.Forms 3.3.0: Little Things, Huge Difference","PublishedOn":"2018-10-18T19:06:38+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin.Forms team has been working closely with our open-source community to help fill in the “little things”. Things you’ve told us are important to building your mobile apps and being supremely...","Href":"https://blog.xamarin.com/xamarin-forms-3-3-0-little-things-huge-difference/","RawContent":null},{"Title":"Complex Animations in Xamarin.Forms using Finite State Machine","PublishedOn":"2018-10-16T17:32:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Slava Chernikoff, a Principal Engineer at Binwell. Microsoft MVP and Xamarin Certified experienced mobile cross-platform and native developer. Also, a previously...","Href":"https://blog.xamarin.com/complex-animations-xamarin-forms-using-finite-state-machine/","RawContent":null},{"Title":"Protect your Xamarin.Android Apps at Runtime with Dotfuscator","PublishedOn":"2018-10-12T18:34:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest blog by Bill Leach. Bill is CTO and co-founder of PreEmptive Solutions, makers of Dotfuscator and DashO application protection tools. Protecting Your Xamarin.Android Apps In a previous...","Href":"https://blog.xamarin.com/protect-xamarin-android-apps-dotfuscator/","RawContent":null},{"Title":"Upgrade Your App with Sentiment Analysis","PublishedOn":"2018-10-04T05:00:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Understanding the sentiment of an email or text message can be difficult. Someone may send a message, intending for it to be encouraging, but it may be accidentally interpreted as mean or...","Href":"https://blog.xamarin.com/upgrade-your-app-with-sentiment-analysis/","RawContent":null},{"Title":"Mobile Developer Events in October","PublishedOn":"2018-10-01T19:00:33+00:00","CommentsCount":0,"FacebookCount":0,"Summary":".NET Conf Local Events Watch all the live sessions from .NET Conf right on Channel 9! With a wide selection of content by feature speakers from the community and .NET product teams, take this...","Href":"https://blog.xamarin.com/mobile-developer-events-in-october/","RawContent":null},{"Title":"Using the Android Designer Split View","PublishedOn":"2018-09-24T05:01:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The ability to see the design view and layout XML at the same time, side by side, was one of our most requested features for the Android Designer. With Split View, new in the Visual Studio 2017...","Href":"https://blog.xamarin.com/split-view-android-designer/","RawContent":null},{"Title":"Get Ready for iOS 12 and Xcode 10","PublishedOn":"2018-09-19T19:49:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Support for iOS 12 and Xcode 10 to accompany Apple’s Xcode Gold Master (GM) release has just been announced! We have also published updated documentation and samples to help you quickly get started...","Href":"https://blog.xamarin.com/ios-12-and-xcode-10/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8570875496","Type":"PullRequestEvent","CreatedAt":"2018-11-12T00:08:31","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2428","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] move $(AdbTarget) out of build.props\" (#2428) at xamarin/xamarin-android","RelatedBody":"`$(IntermediateOutputPath)build.props`, or\r\n`$(_AndroidBuildPropertiesCache)` is a file used as an `Input` to many\r\nMSBuild targets. We write many *important* properties in this file as\r\na mechanism to trigger most of the build to rerun. So for example, if\r\nyou enabled proguard, the `$(AndroidEnableProguard)` MSBuild property\r\nwould re-run a lot of the build, such as `_CompileJava`,\r\n`_CompileDex`, etc.\r\n\r\nRight now there are two problematic properties in this file:\r\n- `$(AdbTarget)`\r\n- `$(AdbOptions)`\r\n\r\nThis means if you switched from a different Android deploy target:\r\nemulator to device, or just a different device--it would run a full\r\nbuild! `$(AdbTarget)` and `$(AdbOptions)` need to trigger MSBuild\r\ntargets related to \"Fast Deployment\" to re-run, but not everything.\r\nWhat makes matters even worse, is sometimes design-time builds will\r\npass a blank `$(AdbTarget)`. This causes expensive targets to run\r\nagain.\r\n\r\nI've moved these properties to a new file:\r\n- `$(IntermediateOutputPath)adb.props` or\r\n- `$(_AdbPropertiesCache)`\r\n\r\nThen downstream in monodroid, there is a single line that needs to be\r\nchanged from `$(_AdbPropertiesCache)` to `$(_AdbPropertiesCache)`.\r\nThis will re-trigger the APK to be installed when devices change."},{"Id":"8570572502","Type":"PullRequestEvent","CreatedAt":"2018-11-11T21:22:12","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2423","RelatedDescription":"Merged pull request \"[docs] Correct a couple links in unix-instructions.md\" (#2423) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8570422417","Type":"IssuesEvent","CreatedAt":"2018-11-11T20:02:29","Actor":"rihadavid","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2427","RelatedDescription":"Opened issue \"Build sometimes fails without any error\" (#2427) at xamarin/xamarin-android","RelatedBody":"Sometimes when I want to build and debug my project, it fails without any error in Output windows or in log files. Next time it works without issues.\r\n\r\nThis is how my output window looks:\r\n```\r\n1>------ Build started: Project: MyApp.Android, Configuration: Debug Any CPU ------\r\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\r\n========== Deploy: 0 succeeded, 0 failed, 0 skipped ==========\r\n```\r\nAnd that's it. Note that I have it on a diagnostic verbosity.\r\n\r\nPlease let me know what can I do to get you more info, it's happening quite often, but conditions are unknown.\r\n\r\n### Version Information\r\n\r\n```\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.8.9\r\nVisualStudio.15.Release/15.8.9+28010.2050\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nASP.NET and Web Tools 2017   15.8.05085.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nAWS Toolkit for Visual Studio 2017   1.14.4.1\r\nAWS Toolkit for Visual Studio 2017.\r\nCopyright 2011-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\nRelease notes: https://aws-vs-toolkit.s3.amazonaws.com/versioninfo.html\r\n\r\nThis software includes third party software subject to the following copyrights:\r\n- Logging from log4net, Apache License \r\n  [http://logging.apache.org/log4net/license.html]\r\n- Putty for PPK to PEM conversion, MIT license \r\n  [http://www.chiark.greenend.org.uk/~sgtatham/putty/licence.html]\r\n- NGit for AWS Elastic Beanstalk incremental push\r\n  [https://github.com/mono/ngit/blob/master/NGit.license.txt]\r\n- NSch dependency for NGit\r\n  [https://github.com/mono/ngit/blob/master/NSch.license.txt]\r\n- Sharpen dependency for NGit\r\n  [https://github.com/mono/ngit/blob/master/Sharpen/AssemblyInfo.cs]\r\n- ICSharpCode.SharpZipLib dependency for NGit\r\n  [http://www.icsharpcode.net/opensource/sharpziplib/]\r\n- Mono.Posix.dll and Mono.Security.dll dependencies for NGit\r\n  [http://mono-project.com/FAQ:_Licensing#Licensing]\r\n- MPFProj for Visual Studio Project Framework\r\n  [http://mpfproj10.codeplex.com/license]\r\n- JSON Checker for JSON validation\r\n  [http://www.raboof.com/projects/jsonchecker/]\r\n- Newtonsoft Json.NET\r\n  [http://www.newtonsoft.com/json] \r\n- YamlDotNet\r\n  [http://aaubry.net/pages/yamldotnet.html] \r\n    \r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMono Debugging for Visual Studio   4.11.11-pre (8fb558f)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nVisual Basic Tools   2.9.0-beta8-63208-01\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 55a3dc3231c95c77f81ee53f7d29152029da7408.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.11.0.779 (d15-8@ff915e800)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.15.12 (d7ff6f39c)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.118 (4217ee9)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.19 (HEAD/a8a3b0ec7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.1.0.15 (cbfb047)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```"},{"Id":"8570224812","Type":"IssuesEvent","CreatedAt":"2018-11-11T18:13:34","Actor":"bgavrilMS","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2426","RelatedDescription":"Opened issue \"Android Binding fails for com.microsoft.identity.client\" (#2426) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nI am trying to create a bindings dll for the Microsoft Identity Client for Android, following the tutorial at https://docs.microsoft.com/en-us/xamarin/android/platform/binding-java-library/binding-an-aar \r\n\r\nArr available at: https://mvnrepository.com/artifact/com.microsoft.identity.client\r\nGitHub repo: https://github.com/AzureAD/microsoft-authentication-library-for-android/\r\n\r\n1. Create a bindings project and add msal-0.2.1.aar in the Jars directory, settings the build action to \"LibraryProjectZip\"\r\n2. Build this bindings project\r\n\r\n### Expected Behavior\r\nProject should build and a managed DLL should be created\r\n\r\n### Actual Behavior\r\n\r\nError\tCS0534\t'ApiEvent.Builder' does not implement inherited abstract member 'Event.Builder.Build()'\t[path]\\binding_aar\\obj\\Debug\\generated\\src\\Com.Microsoft.Identity.Client.Internal.Telemetry.ApiEvent.cs\t14\tActive\r\n\r\nValid Java code that the bindings project cannot work with: \r\nhttps://github.com/AzureAD/microsoft-authentication-library-for-android/blob/dev/msal/src/main/java/com/microsoft/identity/client/internal/telemetry/ApiEvent.java\r\n\r\n\r\n### Version Information\r\n\r\nVisual Studio 15.9.0 Preview 5\r\nBiding project targets Android 8.1 (also repros if I target Android 8.0)\r\n\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\nMicrosoft Visual Studio Enterprise 2017 Preview\r\nVersion 15.9.0 Preview 5.0\r\nVisualStudio.15.Preview/15.9.0-pre.5.0+28302.56\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Enterprise\r\n\r\nArchitecture Diagrams and Analysis Tools   00369-60000-00001-AA934\r\nMicrosoft Architecture Diagrams and Analysis Tools\r\n\r\nVisual C++ 2017   00369-60000-00001-AA934\r\nMicrosoft Visual C++ 2017\r\n\r\nApplication Insights Tools for Visual Studio Package   8.14.11009.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Functions and Web Jobs Tools   15.9.02046.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nGitHub.VisualStudio   2.5.2.2500\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.10730.2\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMLGen Package Extension   1.0\r\nMLGen Package Visual Studio Extension Detailed Info\r\n\r\nMono Debugging for Visual Studio   4.13.11-pre (400cfb1)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSnapshot Debugging Extension   1.0\r\nSnapshot Debugging Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61810.11040\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.9.20918.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Linux Development   1.0.9.28218\r\nVisual C++ for Linux Development\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.28301.59\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.12.3.66 (d15-9@0e1288d9b)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.16.4 (128ba449c)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.126 (0376172)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.0.38 (HEAD/61d16aa23)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.10 (f2a05ed)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### Log File\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8570044505","Type":"IssuesEvent","CreatedAt":"2018-11-11T16:36:05","Actor":"rihadavid","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2425","RelatedDescription":"Opened issue \"VS unresponsive when leaving unsaved layout file\" (#2425) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a sample single view Android App project\r\n2. Open `MainActivity.cs` and `activity_main.axml`\r\n3. Change anything in the axml code and do not save the file\r\n4. Switch to MainActivity.cs\r\n\r\n### Expected Behavior\r\nShould be instant\r\n\r\n### Actual Behavior\r\nWhile switching to the `.cs` file, VS becomes unresponsive for about a second. In my real (much bigger) project this is about 4 seconds.\r\nIt happens on every single switch from the `.axml` file to the `.cs` file, but only if the changes to `.axml` files are not saved.\r\nI believe this is not an intended behaviour, there is probably some stuff that needs to be done when leaving the file (but even that is questionable, since we did not save the file, what needs to be done?), but this should not be done on a UI thread, right?\r\n\r\n### Version Information\r\n```\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.8.9\r\nVisualStudio.15.Release/15.8.9+28010.2050\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Community\r\n\r\nASP.NET and Web Tools 2017   15.8.05085.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nAWS Toolkit for Visual Studio 2017   1.14.4.1\r\nAWS Toolkit for Visual Studio 2017.\r\nCopyright 2011-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n\r\nRelease notes: https://aws-vs-toolkit.s3.amazonaws.com/versioninfo.html\r\n\r\nThis software includes third party software subject to the following copyrights:\r\n- Logging from log4net, Apache License \r\n  [http://logging.apache.org/log4net/license.html]\r\n- Putty for PPK to PEM conversion, MIT license \r\n  [http://www.chiark.greenend.org.uk/~sgtatham/putty/licence.html]\r\n- NGit for AWS Elastic Beanstalk incremental push\r\n  [https://github.com/mono/ngit/blob/master/NGit.license.txt]\r\n- NSch dependency for NGit\r\n  [https://github.com/mono/ngit/blob/master/NSch.license.txt]\r\n- Sharpen dependency for NGit\r\n  [https://github.com/mono/ngit/blob/master/Sharpen/AssemblyInfo.cs]\r\n- ICSharpCode.SharpZipLib dependency for NGit\r\n  [http://www.icsharpcode.net/opensource/sharpziplib/]\r\n- Mono.Posix.dll and Mono.Security.dll dependencies for NGit\r\n  [http://mono-project.com/FAQ:_Licensing#Licensing]\r\n- MPFProj for Visual Studio Project Framework\r\n  [http://mpfproj10.codeplex.com/license]\r\n- JSON Checker for JSON validation\r\n  [http://www.raboof.com/projects/jsonchecker/]\r\n- Newtonsoft Json.NET\r\n  [http://www.newtonsoft.com/json] \r\n- YamlDotNet\r\n  [http://aaubry.net/pages/yamldotnet.html] \r\n    \r\n\r\nC# Tools   2.9.0-beta8-63208-01\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMono Debugging for Visual Studio   4.11.11-pre (8fb558f)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nVisual Basic Tools   2.9.0-beta8-63208-01\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 55a3dc3231c95c77f81ee53f7d29152029da7408.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.11.0.779 (d15-8@ff915e800)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.15.12 (d7ff6f39c)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.118 (4217ee9)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.0.0.19 (HEAD/a8a3b0ec7)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.1.0.15 (cbfb047)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```"},{"Id":"8567068224","Type":"PullRequestEvent","CreatedAt":"2018-11-10T06:35:08","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2424","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Fix Aar directory resolution.\" (#2424) at xamarin/xamarin-android","RelatedBody":"Fixed #2408\r\n\r\nAs part of the speed up process when extracting resources\r\nfrom assemblies and Aar files, we dont re-extract if\r\nthe stamp file is newer than the assembly.\r\n\r\nThe problem with that was in the case of Aar files we\r\nwere NOT adding the `res` or `asset` directories to\r\nthe list of resolved directories when we skipped extraction.\r\nAs a result we got less `res` directories on a second\r\nbuild.\r\n\r\nThis commit fixes that."},{"Id":"8566573987","Type":"PullRequestEvent","CreatedAt":"2018-11-10T00:55:13","Actor":"brendanzagaeski","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2423","RelatedDescription":"Opened pull request \"[docs] Correct a couple links in unix-instructions.md\" (#2423) at xamarin/xamarin-android","RelatedBody":""},{"Id":"8565990015","Type":"PullRequestEvent","CreatedAt":"2018-11-09T21:53:31","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2422","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] <ValidateJavaVersion/> needed for designer\" (#2422) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/issues/2410\r\n\r\nIn 3eb41a0, I added a good performance improvement for the initial\r\ndesign-time build (solution create).\r\n\r\nHowever, we have tests downstream in monodroid that check if MSBuild\r\ntargets called by the Android designer are working. Apparently, these\r\ntargets need `$(_JdkVersion)`, whoops! Glad we have that test!\r\n\r\nThe Android designer also sets\r\n`$(AndroidUseManagedDesignTimeResourceGenerator)` to `False`. We can\r\ncheck for this and allow the `<ValidateJavaVersion/>` MSBuild task to\r\nrun in this case."},{"Id":"8565284533","Type":"PullRequestEvent","CreatedAt":"2018-11-09T19:22:56","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2420","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] locate $(JdkJvmPath) only when needed\" (#2420) at xamarin/xamarin-android","RelatedBody":"Fixes: https://github.com/xamarin/xamarin-android/issues/2409\r\nContext: https://github.com/xamarin/xamarin-android/wiki/Build-Performance-Results\r\n\r\nWhen doing the latest performance comparison, I noticed the\r\n`<ResolveSdks/>` MSBuild task is a bit slower:\r\n\r\n    * VS 15.9\r\n     80 ms  ResolveSdks                                7 calls\r\n    * VS 16.0 p2 (master)\r\n    127 ms  ResolveSdks                                7 calls\r\n\r\nFor `$(AndroidGenerateJniMarshalMethods)` support, we needed to locate\r\na new `$(JdkJvmPath)` location.\r\n\r\nSince `<ResolveSdks/>` finds `$(JdkJvmPath)` on first build, and\r\ndesign-time builds, it is worth making sure this task doesn't get any\r\nslower. The initial design-time build happens on \"solution create\",\r\nwhich is one of the more important metrics the VS team measures.\r\n\r\nSo I split out the logic finding `$(JdkJvmPath)` and put it in a new\r\n`<ResolveJdkJvmPath/>` MSBuild task.\r\n\r\nAlso setup a `Condition`, so it only runs if:\r\n\r\n- Not a `$(DesignTimeBuild)`\r\n- `$(AndroidGenerateJniMarshalMethods)` is enabled\r\n- `$(JdkJvmPath)` is blank\r\n\r\nThis should save ~50ms on DTBs and first builds."},{"Id":"8565284516","Type":"IssuesEvent","CreatedAt":"2018-11-09T19:22:55","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2409","RelatedDescription":"Closed issue \"[ResolveSdks] reorder the lookup of JdkJvmPath\" (#2409) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nRelated to #2374 \r\n\r\n1. Create a new solution in Visual Studio.\r\n2. See a performance regression in the first design-time build. You can also see it in a regular first build, or incremental build if outside the IDE. DTB has the highest performance bar, though.\r\n\r\n### What should we do?\r\n\r\nThe code here: https://github.com/xamarin/xamarin-android/blob/e4c15751253ed56cfedfd9d428d6129a5727462a/src/Xamarin.Android.Build.Tasks/Tasks/ResolveSdksTask.cs#L130-L157\r\n\r\n1. Move the logic finding `JdkJvmPath` to a new MSBuild task\r\n1. Don't run the task if `$(DesignTimeBuild)` is true.\r\n1. Only run the task if `$(AndroidGenerateJniMarshalMethods)` is true.\r\n\r\n/cc @radekdoulik, feel free to take a stab at this if I don't get to it.\n\n> VS bug [#726927](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/726927)"},{"Id":"8564495028","Type":"PullRequestEvent","CreatedAt":"2018-11-09T16:53:49","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2422","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] <ValidateJavaVersion/> needed for designer\" (#2422) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/issues/2410\r\n\r\nIn 3eb41a0, I added a good performance improvement for the initial\r\ndesign-time build (solution create).\r\n\r\nHowever, we have tests downstream in monodroid that check if MSBuild\r\ntargets called by the Android designer are working. Apparently, these\r\ntargets need `$(_JdkVersion)`, whoops! Glad we have that test!\r\n\r\nThe Android designer also sets\r\n`$(AndroidUseManagedDesignTimeResourceGenerator)` to `False`. We can\r\ncheck for this and allow the `<ValidateJavaVersion/>` MSBuild task to\r\nrun in this case."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8570336965","Type":"PullRequestEvent","CreatedAt":"2018-11-11T19:16:01","Actor":"legistek","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4375","RelatedDescription":"Opened pull request \"Gh3847 RelativeSource Binding\" (#4375) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nImplements `RelativeSource` binding mechanism, intended to mimic WPF/UWP behavior and syntax. `Self`, `TemplatedParent`, and `FindAncestor` modes are implemented. (`PreviousData` is much trickier and is left for another day.)\r\n\r\n### Issues Resolved ### \r\n- fixes #3847 \r\n\r\n### API Changes ###\r\nAdded:\r\n\r\nNew items:\r\n- `class RelativeBindingSource` (equivalent to WPF/UWP `RelativeSource` class\r\n- `enum RelativeBindingSourceMode` (equivalent to WPF/UWP `RelativeSourceMode` enum\r\n- `class RelativeSourceExtension`\r\n\r\n- in `Binding`:\r\n- `public RelativeBindingSource RelativeSource`\r\n\r\n- in `BindingExtension`:\r\n- `public RelativeBindingSource RelativeSource`\r\n\r\nChanged:\r\n- `TemplateBinding` is now derived from `Binding` and uses `RelativeSource` mechanism rather than directly deriving from `BindingBase`\r\n\r\n### Platforms Affected ### \r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\nThere should be no changes to existing applications. Developers can now use `RelativeSource` binding in new applications.\r\n\r\n### Before/After Screenshots ### \r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nUnit tests are provided.\r\n\r\n### PR Checklist ###\r\n\r\n- [X] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [X] Rebased on top of the target branch at time of PR\r\n- [X] Changes adhere to coding standard"},{"Id":"8568231071","Type":"PullRequestEvent","CreatedAt":"2018-11-10T19:25:02","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/4328","RelatedDescription":"Merged pull request \"Bring ImageButton API additions in line with current code\" (#4328) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nFixing ImageButotn APIs to match already existing patterns\r\n\r\n### Platforms Affected ### \r\n<!-- Please list all platforms affected by these changes -->\r\n\r\n- Core/XAML (all platforms)\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Testing Procedure ###\r\nTest that Image, Button, ImageButton all look to still work ok. Test setting images on them and swapping out the images\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"8567726723","Type":"IssuesEvent","CreatedAt":"2018-11-10T14:40:27","Actor":"Reveon","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/4374","RelatedDescription":"Opened issue \"Frame is missing elevation and shadow inside ListView\" (#4374) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nFrame shadow and elevation looks different when upgrade from 3.2 to 3.3 or 3.4 pre when used inside ListView. It looks more flat and very similar to  #3532. Tested the issue on Android emulator 8.0 and also on device HTC U11 with Android 8.0\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create Xamarin.Forms project (Blank, .NET Standard, Android)\r\n2. Use Xaml:\r\n `<StackLayout Orientation=\"Vertical\">\r\n            <Frame Padding=\"1\"\r\n                   HasShadow=\"True\">\r\n                <Label Text=\"Test\" />\r\n            </Frame>\r\n            <Frame Padding=\"1\"\r\n                   HasShadow=\"True\">\r\n                <Label Text=\"Test\" />\r\n            </Frame>\r\n            <ListView HasUnevenRows=\"True\"\r\n                      ItemsSource=\"{Binding ListItems}\"\r\n                      SeparatorVisibility=\"None\">\r\n                <ListView.ItemTemplate>\r\n                    <DataTemplate>\r\n                        <ViewCell>\r\n                            <Grid Margin=\"5\">\r\n                                <Grid.RowDefinitions>\r\n                                    <RowDefinition Height=\"50\" />\r\n                                </Grid.RowDefinitions>\r\n                                <Frame Padding=\"1\"\r\n                                       HasShadow=\"True\">\r\n                                    <Label Text=\"{Binding}\" />\r\n                                </Frame>\r\n                            </Grid>\r\n                        </ViewCell>\r\n                    </DataTemplate>\r\n                </ListView.ItemTemplate>\r\n            </ListView>\r\n       </StackLayout>`\r\n\r\n### Expected Behavior\r\nFrame has visible shadow and elevation\r\n\r\n### Actual Behavior\r\nFrame looks flat and does not have a shadow when placed inside ListView\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.3.0.967583, 3.3.0.967583, both of the 3.4 pre versions\r\n- Last known good version: 3.2.0.871581\r\n- IDE: Visual Studio Enterprise 2017 15.8.9\r\n- Platform Target Frameworks:\r\n  - Android: 8.0\r\n- Nuget Packages: default\r\n\r\n### Screenshots\r\nAll fine on 3.2\r\n![obrazek](https://user-images.githubusercontent.com/29383312/48302480-d79c3e80-e4fd-11e8-8f5a-e5b576a19819.png)\r\n\r\nElevation and shadow missing inside ListView on 3.3+\r\n![obrazek](https://user-images.githubusercontent.com/29383312/48302482-dff47980-e4fd-11e8-850a-c5648f7999b2.png)\r\n\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8566443505","Type":"PullRequestEvent","CreatedAt":"2018-11-10T00:03:26","Actor":"dalexsoto","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5119","RelatedDescription":"Opened pull request \"[QuickLook] Add [ThreadSafe] to `QLThumbnailReply`\" (#5119) at xamarin/xamarin-macios","RelatedBody":"`QLThumbnailReply` members are called from a background thread\r\nwithin `QLThumbnailProvider` extension so our check on\r\n`UIApplication.EnsureUIThread ()` is not needed.\r\n\r\nFixes xamarin/xamarin-macios#5117"},{"Id":"8566023541","Type":"PullRequestEvent","CreatedAt":"2018-11-09T22:01:16","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5101","RelatedDescription":"Merged pull request \"[mac] Remove unnecessary PostSnippet and backing fields\" (#5101) at xamarin/xamarin-macios","RelatedBody":"- https://github.com/xamarin/xamarin-macios/issues/3543"},{"Id":"8565994374","Type":"PullRequestEvent","CreatedAt":"2018-11-09T21:54:31","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5115","RelatedDescription":"Merged pull request \"Bump to mono:2018-06\" (#5115) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\r\n\r\n* mono/mono@eee1d634e8b [ios] remove DISABLE_POLICY_EVIDENCE (#11580)\r\n\r\nDiff: https://github.com/mono/mono/compare/4d7b7ab37517a13eee8b966cec9c4308ad772c0a...eee1d634e8b256a6e51bf8a8cf2feac4015fb1bc\r\n\r\nNeeded for green mscorlib tests interp only (mixed mode still has some failures):\r\n<img width=\"1169\" alt=\"screenshot 2018-11-09 at 17 10 48\" src=\"https://user-images.githubusercontent.com/75403/48273953-854a1780-e442-11e8-85ad-559a9c809ef3.png\">\r\n"},{"Id":"8565869433","Type":"PullRequestEvent","CreatedAt":"2018-11-09T21:26:11","Actor":"jstedfast","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5118","RelatedDescription":"Opened pull request \"[msbuild] Pass ProjectGuid and ProjectTypeGuids to Archive task\" (#5118) at xamarin/xamarin-macios","RelatedBody":"This is part of https://devdiv.visualstudio.com/DevDiv/_workitems/edit/705977"},{"Id":"8565438554","Type":"IssuesEvent","CreatedAt":"2018-11-09T19:53:09","Actor":"praeclarum","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5117","RelatedDescription":"Opened issue \"QLThumbnailReply.CreateReply incorrectly calls EnsureUIThread\" (#5117) at xamarin/xamarin-macios","RelatedBody":"```\r\npublic unsafe static QLThumbnailReply CreateReply (CGSize contextSize, Func<CGContext, bool> drawingBlock)\r\n```\r\nCalls `UIApplication.EnsureUIThread ()` but it should not.\r\n\r\nThis method gets called by `QLThumbnailProvider.ProvideThumbnail` which runs on a background thread.\r\n\r\nIf you look at Xcode's template for document apps, you'll see that they don't do any UI thread synchronization.\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create an iOS thumbnail extension\r\n2. Note the crash when you call `CreateReply`\r\n\r\n### Expected Behavior\r\n\r\nCan call the method on the background thread.\r\n\r\n### Actual Behavior\r\n\r\nCrash\r\n\r\n```\r\ndefault\t11:45:37.556627 -0800\tCircuitThumbs\t\r\nUnhandled Exception:\r\nUIKit.UIKitThreadAccessException: UIKit Consistency error: you are calling a UIKit method that can only be invoked from the UI thread.\r\ndefault\t11:45:37.556630 -0800\tCircuitThumbs\t\r\nUnhandled Exception:\r\nUIKit.UIKitThreadAccessException: UIKit Consistency error: you are calling a UIKit method that can only be invoked from the UI thread.\r\ndefault\t11:45:37.556852 -0800\tCircuitThumbs\tUnhandled managed exception:\r\nUIKit Consistency error: you are calling a UIKit method that can only be invoked from the UI thread. (UIKit.UIKitThreadAccessException)\r\n(null)\r\ndefault\t11:45:37.556857 -0800\tCircuitThumbs\tUnhandled managed exception:\r\nUIKit Consistency error: you are calling a UIKit method that can only be invoked from the UI thread. (UIKit.UIKitThreadAccessException)\r\n(null)\r\ndefault\t11:45:37.556975 -0800\tCircuitThumbs\tcritical: Stacktrace:\r\ndefault\t11:45:37.557052 -0800\tCircuitThumbs\tcritical: \r\nNative stacktrace:\r\ndefault\t11:45:37.558009 -0800\tCircuitThumbs\tcritical: \t0   Mono                                0x000000010142f944 mono_handle_native_crash + 244\r\ndefault\t11:45:37.558111 -0800\tCircuitThumbs\tcritical: \t1   libsystem_platform.dylib            0x0000000110ac9b3d _sigtramp + 29\r\ndefault\t11:45:37.558207 -0800\tCircuitThumbs\tcritical: \t2   ???                                 0x0000000000000000 0x0 + 0\r\ndefault\t11:45:37.558308 -0800\tCircuitThumbs\tcritical: \t3   libsystem_c.dylib                   0x000000011084cc45 abort + 127\r\ndefault\t11:45:37.558478 -0800\tCircuitThumbs\tcritical: \t4   CircuitThumbs                       0x00000001010904ff xamarin_unhandled_exception_handler + 47\r\ndefault\t11:45:37.558571 -0800\tCircuitThumbs\tcritical: \t5   Mono                                0x000000010150c3fe mono_invoke_unhandled_exception_hook + 158\r\ndefault\t11:45:37.558687 -0800\tCircuitThumbs\tcritical: \t6   Mono                                0x000000010142f2ec mono_handle_exception_internal + 6140\r\ndefault\t11:45:37.558764 -0800\tCircuitThumbs\tcritical: \t7   Mono                                0x000000010142dae9 mono_handle_exception + 25\r\ndefault\t11:45:37.558844 -0800\tCircuitThumbs\tcritical: \t8   Mono                                0x0000000101495663 mono_amd64_throw_exception + 131\r\ndefault\t11:45:37.558921 -0800\tCircuitThumbs\tcritical: \t9   ???                                 0x000000012e6a05a7 0x0 + 5073667495\r\ndefault\t11:45:37.558989 -0800\tCircuitThumbs\tcritical: \t10  CircuitThumbs                       0x0000000101099dff xamarin_invoke_trampoline + 8175\r\ndefault\t11:45:37.559068 -0800\tCircuitThumbs\tcritical: \t11  CircuitThumbs                       0x00000001010a07fd xamarin_arch_trampoline + 189\r\ndefault\t11:45:37.559141 -0800\tCircuitThumbs\tcritical: \t12  CircuitThumbs                       0x00000001010a1c31 xamarin_x86_64_common_trampoline + 110\r\ndefault\t11:45:37.559207 -0800\tCircuitThumbs\tcritical: \t13  QuickLookSupport                    0x0000000125d2ddee __137-[QLThumbnailServiceContext generateThumbnailOfSize:minimumSize:scale:badgeType:withFileURLHandler:ioSurfaceGenerator:completionHandler:]_block_invoke + 371\r\ndefault\t11:45:37.559287 -0800\tCircuitThumbs\tcritical: \t14  libdispatch.dylib                   0x00000001106ef4e1 _dispatch_call_block_and_release + 12\r\ndefault\t11:45:37.559361 -0800\tCircuitThumbs\tcritical: \t15  libdispatch.dylib                   0x00000001106f054b _dispatch_client_callout + 8\r\ndefault\t11:45:37.559440 -0800\tCircuitThumbs\tcritical: \t16  libdispatch.dylib                   0x00000001106f2f70 _dispatch_continuation_pop + 453\r\ndefault\t11:45:37.559509 -0800\tCircuitThumbs\tcritical: \t17  libdispatch.dylib                   0x00000001106f25dd _dispatch_async_redirect_invoke + 827\r\ndefault\t11:45:37.559579 -0800\tCircuitThumbs\tcritical: \t18  libdispatch.dylib                   0x00000001106ff491 _dispatch_root_queue_drain + 355\r\ndefault\t11:45:37.559645 -0800\tCircuitThumbs\tcritical: \t19  libdispatch.dylib                   0x00000001106ffcfb _dispatch_worker_thread2 + 97\r\ndefault\t11:45:37.559718 -0800\tCircuitThumbs\tcritical: \t20  libsystem_pthread.dylib             0x0000000110ad96ee _pthread_wqthread + 619\r\ndefault\t11:45:37.559784 -0800\tCircuitThumbs\tcritical: \t21  libsystem_pthread.dylib             0x0000000110ad9415 start_wqthread + 13\r\n```\r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Enterprise 2017 for Mac (Preview) ===\r\n\r\nVersion 7.7 Preview (7.7 build 1738)\r\nInstallation UUID: 4ba352e1-73e8-4dab-a9db-28012ca05af8\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 4.4.1.178 (master / eeaeb7e6)\r\n\r\n\tPackage version: 516000208\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.16.0.208 (2018-06/b2915194221) (64-bit)\r\n\tPackage version: 516000208\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.7.0.5148\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.1.2\r\n\t2.1.0-preview2-26406-04\r\n\t2.0.3\r\nSDK: /usr/local/share/dotnet/sdk/2.1.302/Sdks\r\nSDK Versions:\r\n\t2.1.302\r\n\t2.1.300-preview2-008530\r\n\t2.0.3\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.16.0/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.4\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.1 (14460.46)\r\nBuild 10B61\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.2.1.9 (Visual Studio Enterprise)\r\nHash: 62840955\r\nBranch: \r\nBuild date: 2018-10-09 19:53:55-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.2.1.9 (Visual Studio Enterprise)\r\nHash: 62840955\r\nBranch: d15-9\r\nBuild date: 2018-10-09 19:53:55-0400\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.1.0.38 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/fak/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 26.0.3\r\n\r\nJava SDK: /Users/fak/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_1.8.0.9\r\nopenjdk version \"1.8.0-9\"\r\nOpenJDK Runtime Environment (build 1.8.0-9-microsoft-b00)\r\nOpenJDK 64-Bit Server VM (build 25.71-b00, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 7.7.1.0\r\nHash: dd6b1cc3\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 707001738\r\nGit revision: 7dc7716c1cf2bdfb1baafd728a09ef805643c15d\r\nBuild date: 2018-10-23 14:31:07+00\r\nBuild branch: release-7.7\r\nXamarin extensions: c114276813ea8f259a34bc54b015d7bf711d402b\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.0\r\nDarwin 18.0.0 Darwin Kernel Version 18.0.0\r\n    Wed Aug 22 20:13:40 PDT 2018\r\n    root:xnu-4903.201.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nMSBuild Editor 2.0.4\r\n\r\n```\r\n\r\n### Example Project (If Possible)\r\n\r\n[CircuitThumbs.zip](https://github.com/xamarin/xamarin-macios/files/2567317/CircuitThumbs.zip)\r\n\r\n"},{"Id":"8565364708","Type":"IssuesEvent","CreatedAt":"2018-11-09T19:38:50","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/4110","RelatedDescription":"Closed issue \"msbuild-mac tests should be running with msbuild in addition to xbuild\" (#4110) at xamarin/xamarin-macios","RelatedBody":"Initial bug: https://bugzilla.xamarin.com/show_bug.cgi?id=53164 (moving out of bugzilla due to future read-only mode).\r\n\r\nThis is a tracking bug for updating the tests to support msbuild.\r\n\r\nThere are at least two tests that are disabled for now until this is fixed.\r\n\r\nThey can not be enabled yet, so we don't have the infrastructure to build msbuild tests without using the global install, which does not work on bots."},{"Id":"8565363893","Type":"PullRequestEvent","CreatedAt":"2018-11-09T19:38:41","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5113","RelatedDescription":"Merged pull request \"[mac] Enable various msbuild only tests that were disabled\" (#5113) at xamarin/xamarin-macios","RelatedBody":"- https://github.com/xamarin/xamarin-macios/issues/4110"},{"Id":"8564525719","Type":"PullRequestEvent","CreatedAt":"2018-11-09T16:58:42","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5116","RelatedDescription":"Opened pull request \"[mmp] A few framework support bug fixes\" (#5116) at xamarin/xamarin-macios","RelatedBody":"- https://github.com/xamarin/xamarin-macios/issues/3973\r\n- https://github.com/xamarin/xamarin-macios/issues/4066"},{"Id":"8564239163","Type":"PullRequestEvent","CreatedAt":"2018-11-09T16:12:11","Actor":"lewurm","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5115","RelatedDescription":"Opened pull request \"Bump to mono:2018-06\" (#5115) at xamarin/xamarin-macios","RelatedBody":"Commit list for mono/mono:\r\n\r\n* mono/mono@eee1d634e8b [ios] remove DISABLE_POLICY_EVIDENCE (#11580)\r\n\r\nDiff: https://github.com/mono/mono/compare/4d7b7ab37517a13eee8b966cec9c4308ad772c0a...eee1d634e8b256a6e51bf8a8cf2feac4015fb1bc\r\n\r\nNeeded for green mscorlib tests interp only (mixed mode still has some failures):\r\n<img width=\"1169\" alt=\"screenshot 2018-11-09 at 17 10 48\" src=\"https://user-images.githubusercontent.com/75403/48273953-854a1780-e442-11e8-85ad-559a9c809ef3.png\">\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1058039721652297729","CreatedAt":"2018-11-01T16:55:01+00:00","UserScreenname":"xamarinhq","Text":"Get all the links you need for the world-wide, community-run mobile dev engagements happening for the Xamarin &amp;… https://t.co/eiJXYtWfvG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":41,"FavoriteCount":22,"RawContent":null},{"Id":"1053027600086552576","CreatedAt":"2018-10-18T20:58:38+00:00","UserScreenname":"xamarinhq","Text":"TY2 you &amp; the Xamarin.Forms team we've filled in some of the features you’ve told us are important to building your… https://t.co/lwqRjrIFEi","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":60,"FavoriteCount":28,"RawContent":null},{"Id":"1052217100041945088","CreatedAt":"2018-10-16T15:18:00+00:00","UserScreenname":"xamarinhq","Text":"A full day of community-driven sessions on cross-platform mobile application development with Xamarin, DevOps with… https://t.co/07SVz6rgLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":18,"RawContent":null},{"Id":"1050824055014744064","CreatedAt":"2018-10-12T19:02:32+00:00","UserScreenname":"xamarinhq","Text":"Now, in #VisualStudio 15.8, Dotfuscator Community can help protect your https://t.co/FGIvdxOrYa Apps at Runtime by… https://t.co/iPm1GjIrpS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":27,"RawContent":null},{"Id":"1050447051228631040","CreatedAt":"2018-10-11T18:04:28+00:00","UserScreenname":"xamarinhq","Text":"With Xamarin.Forms, the UI and app logic for your app resides in a single codebase and you get to use a single IDE… https://t.co/SMq0XwjtKL","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":61,"FavoriteCount":36,"RawContent":null},{"Id":"1047580523881799680","CreatedAt":"2018-10-03T20:13:54+00:00","UserScreenname":"xamarinhq","Text":"Do both types of testing with your Visual Studio App Center CI/CD pipeline - cover the Data Access Layer with unit… https://t.co/6y14u8p3lQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":31,"RawContent":null},{"Id":"1046875654631886850","CreatedAt":"2018-10-01T21:33:00+00:00","UserScreenname":"xamarinhq","Text":"Microsoft named a leader in 2018 analyst reports on mobile app development. Get complimentary access to reports fro… https://t.co/EWg450kHpI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":30,"RawContent":null},{"Id":"1041764665536196609","CreatedAt":"2018-09-17T19:03:45+00:00","UserScreenname":"xamarinhq","Text":"...released to NuGet today, Xamarin.Forms 3.2.0. We've kicked off another round of updates, and this time we tackle… https://t.co/zyFILHsEUu","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":201,"FavoriteCount":109,"RawContent":null},{"Id":"1039264258511527936","CreatedAt":"2018-09-10T21:28:02+00:00","UserScreenname":"xamarinhq","Text":"Watch #dotNETConf Live! The 3-day virtual developer conference co-organized by the .NET community and Microsoft is… https://t.co/bM5JCj7M0h","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":95,"FavoriteCount":54,"RawContent":null},{"Id":"1037778121582419970","CreatedAt":"2018-09-06T19:02:39+00:00","UserScreenname":"xamarinhq","Text":"Get started with AI without being a machine learning or data science expert... New on the Xamarin Blog: Using Objec… https://t.co/uwpu4pUWFj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":92,"FavoriteCount":45,"RawContent":null},{"Id":"1035572899996987397","CreatedAt":"2018-08-31T16:59:54+00:00","UserScreenname":"xamarinhq","Text":"Xamarin and .NET Developer Events in September\nHere are all the links you'll need to get involved.… https://t.co/YJAa83E61y","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":36,"RawContent":null},{"Id":"1032375788375498753","CreatedAt":"2018-08-22T21:15:43+00:00","UserScreenname":"xamarinhq","Text":"Getting Started with Android Pie. Now you can download the support for #AndroidPie inside https://t.co/7TMjXUsU4u 9… https://t.co/sNrOIuI741","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":42,"RawContent":null},{"Id":"1031653104394096640","CreatedAt":"2018-08-20T21:24:01+00:00","UserScreenname":"xamarinhq","Text":"Hey, Xamarin developers. It's time to explore and learn about the latest and greatest iOS 12 ARKit Capabilities w/… https://t.co/6x3vq5IuEb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":125,"FavoriteCount":80,"RawContent":null}]}},"RunOn":"2018-11-12T05:30:53.420077Z","RunDurationInMilliseconds":4690}