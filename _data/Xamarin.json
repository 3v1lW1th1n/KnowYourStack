{"Data":{"Blog":{"FeedItems":[{"Title":"Join the Xamarin Team at Microsoft Build 2019","PublishedOn":"2019-05-03T20:27:46+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Microsoft Build 2019 kicks off next week in beautiful downtown Seattle Washington and we have a packed schedule for Xamarin developers to look forward to. In addition to sessions, you can find some of...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-team-microsoft-build-2019/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in May","PublishedOn":"2019-04-30T16:01:37+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Learn about new, exciting releases and tools to help jumpstart your next mobile development project by networking with your local community. You too could get all the latest updates about Xamarin and...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-net-developer-events-may/","RawContent":null},{"Title":"Customer Showcase: Aggreko","PublishedOn":"2019-04-23T18:23:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are excited to announce a new inclusion to our Xamarin Showcase gallery:\nThe Aggreko Technician App\nA key objective of Aggreko’s company-wide Aggreko18 digital transformation program was to...","Href":"https://devblogs.microsoft.com/xamarin/customer-showcase-aggreko/","RawContent":null},{"Title":"Shrinking Your Android App Size","PublishedOn":"2019-04-22T18:15:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Mobile devices are limited in many ways. Whether it&#8217;s how much of a charge your battery can hold, the amount of storage you have left, or the speed of your internet connection to view more cat...","Href":"https://devblogs.microsoft.com/xamarin/shrinking-android-app-size/","RawContent":null},{"Title":"Xamarin.Forms 4.0 CollectionView Challenge ","PublishedOn":"2019-04-19T17:04:57+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"During March, many of you made submissions to our Visual Challenge. Your feedback has been extremely valuable and you all put together some impressive samples! As a follow up in this series, we now...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-forms-4-0-collectionview-challenge/","RawContent":null},{"Title":"The New & Improved Xamarin Developers YouTube Channel!","PublishedOn":"2019-04-18T18:13:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are so excited to re-launch our Xamarin Developers YouTube channel! Here you will find fresh content on building amazing mobile apps directly from the Xamarin team here at Microsoft. To kick things...","Href":"https://devblogs.microsoft.com/xamarin/new-xamarin-developers-youtube-channel/","RawContent":null},{"Title":"Getting Ready for macOS’s Hardened Runtime and Notary","PublishedOn":"2019-04-15T16:11:14+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"With macOS Mojave, Apple introduced support for Hardened Runtime and Notary service. These two services are designed to improve application security on macOS. Recently Apple has...","Href":"https://devblogs.microsoft.com/xamarin/macos-hardened-runtime-notary/","RawContent":null},{"Title":"Xamarin Podcast: Visual Studio 2019 is released!","PublishedOn":"2019-04-12T17:14:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in Xamarin and cloud development.\nPodcast Highlights\nVisual Studio 2019 has been released and is...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-visual-studio-2019-is-released/","RawContent":null},{"Title":"Sharing Files & Email Attachments with Xamarin.Essentials Preview Features","PublishedOn":"2019-04-10T19:15:56+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"In the recent release of Xamarin.Essentials (1.1.0), we introduced several new stable features including detect shake, browser customization, and a plethora of platform helpers. The team has also been...","Href":"https://devblogs.microsoft.com/xamarin/sharing-files-attachments-xamarin-essentials/","RawContent":null},{"Title":"Getting Started With WorkManager","PublishedOn":"2019-04-08T18:12:29+00:00","CommentsCount":8,"FacebookCount":0,"Summary":"If you need to schedule a background task on Android, you&#8217;re probably familiar with all of the various ways to accomplish this such as:\nGoogle Cloud Messaging\nFirebase Cloud...","Href":"https://devblogs.microsoft.com/xamarin/getting-started-workmanager/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9562296519","Type":"PullRequestEvent","CreatedAt":"2019-05-04T07:41:13","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3069","RelatedDescription":"Closed pull request \"[tests] Kill adb server before test instrumentation\" (#3069) at xamarin/xamarin-android","RelatedBody":"This will force adb to restart the server, so we should have fresh adb\r\nfor `adb shell am instrument ...`. Hopefully it will help with crashes\r\nof `Mono.Android_Tests` test, we are seeing frequently on Jenkins."},{"Id":"9561861833","Type":"PullRequestEvent","CreatedAt":"2019-05-04T02:54:07","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3071","RelatedDescription":"Merged pull request \"[tests] Increase the emulator RAM size to 3GB\" (#3071) at xamarin/xamarin-android","RelatedBody":"Recently some/many of the tests run out of memory on Jenkins. So lets\r\ntry to increase the emulator memory size to see whether it will help.\r\n\r\nThe emulator is created for every build on CI, like this:\r\n\r\n    Using \"CreateAndroidEmulator\" task from assembly \"/Users/builder/jenkins/workspace/xamarin-android/xamarin-android/build-tools/scripts/../../bin/BuildRelease/Xamarin.Android.Tools.BootstrapTasks.dll\".\r\n    Task \"CreateAndroidEmulator\" (TaskId:110)\r\n      Task Parameter:AndroidAbi=x86 (TaskId:110)\r\n      Task Parameter:AndroidSdkHome=/Users/builder/android-toolchain/sdk (TaskId:110)\r\n      Task Parameter:SdkVersion=28 (TaskId:110)\r\n      Task Parameter:ImageName=XamarinAndroidTestRunner (TaskId:110)\r\n      Task Parameter:ToolExe=avdmanager (TaskId:110)\r\n      Task Parameter:ToolPath=/Users/builder/android-toolchain/sdk/tools/bin (TaskId:110)\r\n      Task Parameter:RamSizeMB=2048 (TaskId:110)\r\n      Task Parameter:DataPartitionSizeMB=4096 (TaskId:110)\r\n      Task CreateAndroidEmulator (TaskId:110)\r\n        AndroidAbi: x86 (TaskId:110)\r\n        AndroidSdkHome: /Users/builder/android-toolchain/sdk (TaskId:110)\r\n        JavaSdkHome:  (TaskId:110)\r\n        ImageName: XamarinAndroidTestRunner (TaskId:110)\r\n        SdkVersion: 28 (TaskId:110)\r\n        TargetId: system-images;android-28;default;x86 (TaskId:110)\r\n        ToolExe: avdmanager (TaskId:110)\r\n        ToolPath: /Users/builder/android-toolchain/sdk/tools/bin (TaskId:110)\r\n      Tool /Users/builder/android-toolchain/sdk/tools/bin/avdmanager execution started with arguments: create avd --abi x86 -f -n XamarinAndroidTestRunner --package \"system-images;android-28;default;x86\" (TaskId:110)\r\n      Environment variables being passed to the tool: (TaskId:110)\r\n            ANDROID_SDK_HOME=\"/Users/builder/android-toolchain/sdk\" (TaskId:110)\r\n    Done executing task \"CreateAndroidEmulator\". (TaskId:110)\r\n\r\nExample out of memory test run:\r\n\r\n    I xUnit   : Test collection finished (TaskId:51)\r\n    I xUnit   :    Time: 0 (TaskId:51)\r\n    I xUnit   :    Total tests run: 0 (TaskId:51)\r\n    I xUnit   :    Skipped tests: 0 (TaskId:51)\r\n    I xUnit   :    Failed tests: 0 (TaskId:51)\r\n    I xUnit   :    Test collection: Test collection for System.Numerics.Tests.op_orTest (TaskId:51)\r\n    V xUnit   :    Associated test case: System.Numerics.Tests.op_orTest.RunOrTests (TaskId:51)\r\n    E mono    :  (TaskId:51)\r\n    E mono    : Unhandled Exception: (TaskId:51)\r\n    E mono    : System.OutOfMemoryException: Insufficient memory to continue the execution of the program. (TaskId:51)\r\n    E mono    :   at (wrapper alloc) System.Object.AllocVector(intptr,intptr) (TaskId:51)\r\n    E mono    :   at System.Collections.Generic.List`1[T].set_Capacity (System.Int32 value) [0x00021] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Collections.Generic.List`1[T].EnsureCapacity (System.Int32 min) [0x00036] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Collections.Generic.List`1[T].AddEnumerable (System.Collections.Generic.IEnumerable`1[T] enumerable) [0x0002e] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Collections.Generic.List`1[T]..ctor (System.Collections.Generic.IEnumerable`1[T] collection) [0x00062] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T] source) [0x00018] in <f506283258c042f6b92c6d09a3e02728>:0  (TaskId:51)\r\n    E mono    :   at Xunit.Sdk.TestAssemblyMessage..ctor (System.Collections.Generic.IEnumerable`1[T] testCases, Xunit.Abstractions.ITestAssembly testAssembly) [0x0000d] in <724f386d8f5b4395a7fa46c7a3a38a2a>:0  (TaskId:51)\r\n    E mono    :   at Xunit.Sdk.TestAssemblyFinished..ctor (System.Collections.Generic.IEnumerable`1[T] testCases, Xunit.Abstractions.ITestAssembly testAssembly, System.Decimal executionTime, System.Int32 testsRun, System.Int32 testsFailed, System.Int32 testsSkipped) [0x00000] in <724f386d8f5b4395a7fa46c7a3a38a2a>:0  (TaskId:51)\r\n    E mono    :   at Xunit.Sdk.TestAssemblyRunner`1[TTestCase].RunAsync () [0x00251] in <724f386d8f5b4395a7fa46c7a3a38a2a>:0  (TaskId:51)\r\n    E mono    :   at Xunit.Sdk.XunitTestFrameworkExecutor.RunTestCases (System.Collections.Generic.IEnumerable`1[T] testCases, Xunit.Abstractions.IMessageSink executionMessageSink, Xunit.Abstractions.ITestFrameworkExecutionOptions executionOptions) [0x00094] in <724f386d8f5b4395a7fa46c7a3a38a2a>:0  (TaskId:51)\r\n    E mono    :   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+<>c.<ThrowAsync>b__7_1 (System.Object state) [0x00000] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context (System.Object state) [0x00007] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading.ExecutionContext.RunInternal (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) [0x00071] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading.ExecutionContext.Run (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) [0x00000] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem () [0x00021] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading.ThreadPoolWorkQueue.Dispatch () [0x00074] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback () [0x00000] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)"},{"Id":"9560908482","Type":"PullRequestEvent","CreatedAt":"2019-05-03T21:04:24","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3071","RelatedDescription":"Opened pull request \"[tests] Increase the emulator RAM size to 3GB\" (#3071) at xamarin/xamarin-android","RelatedBody":"Recently some/many of the tests run out of memory on Jenkins. So lets\r\ntry to increase the emulator memory size to see whether it will help.\r\n\r\nThe emulator is created for every build on CI, like this:\r\n\r\n    Using \"CreateAndroidEmulator\" task from assembly \"/Users/builder/jenkins/workspace/xamarin-android/xamarin-android/build-tools/scripts/../../bin/BuildRelease/Xamarin.Android.Tools.BootstrapTasks.dll\".\r\n    Task \"CreateAndroidEmulator\" (TaskId:110)\r\n      Task Parameter:AndroidAbi=x86 (TaskId:110)\r\n      Task Parameter:AndroidSdkHome=/Users/builder/android-toolchain/sdk (TaskId:110)\r\n      Task Parameter:SdkVersion=28 (TaskId:110)\r\n      Task Parameter:ImageName=XamarinAndroidTestRunner (TaskId:110)\r\n      Task Parameter:ToolExe=avdmanager (TaskId:110)\r\n      Task Parameter:ToolPath=/Users/builder/android-toolchain/sdk/tools/bin (TaskId:110)\r\n      Task Parameter:RamSizeMB=2048 (TaskId:110)\r\n      Task Parameter:DataPartitionSizeMB=4096 (TaskId:110)\r\n      Task CreateAndroidEmulator (TaskId:110)\r\n        AndroidAbi: x86 (TaskId:110)\r\n        AndroidSdkHome: /Users/builder/android-toolchain/sdk (TaskId:110)\r\n        JavaSdkHome:  (TaskId:110)\r\n        ImageName: XamarinAndroidTestRunner (TaskId:110)\r\n        SdkVersion: 28 (TaskId:110)\r\n        TargetId: system-images;android-28;default;x86 (TaskId:110)\r\n        ToolExe: avdmanager (TaskId:110)\r\n        ToolPath: /Users/builder/android-toolchain/sdk/tools/bin (TaskId:110)\r\n      Tool /Users/builder/android-toolchain/sdk/tools/bin/avdmanager execution started with arguments: create avd --abi x86 -f -n XamarinAndroidTestRunner --package \"system-images;android-28;default;x86\" (TaskId:110)\r\n      Environment variables being passed to the tool: (TaskId:110)\r\n            ANDROID_SDK_HOME=\"/Users/builder/android-toolchain/sdk\" (TaskId:110)\r\n    Done executing task \"CreateAndroidEmulator\". (TaskId:110)\r\n\r\nExample out of memory test run:\r\n\r\n    I xUnit   : Test collection finished (TaskId:51)\r\n    I xUnit   :    Time: 0 (TaskId:51)\r\n    I xUnit   :    Total tests run: 0 (TaskId:51)\r\n    I xUnit   :    Skipped tests: 0 (TaskId:51)\r\n    I xUnit   :    Failed tests: 0 (TaskId:51)\r\n    I xUnit   :    Test collection: Test collection for System.Numerics.Tests.op_orTest (TaskId:51)\r\n    V xUnit   :    Associated test case: System.Numerics.Tests.op_orTest.RunOrTests (TaskId:51)\r\n    E mono    :  (TaskId:51)\r\n    E mono    : Unhandled Exception: (TaskId:51)\r\n    E mono    : System.OutOfMemoryException: Insufficient memory to continue the execution of the program. (TaskId:51)\r\n    E mono    :   at (wrapper alloc) System.Object.AllocVector(intptr,intptr) (TaskId:51)\r\n    E mono    :   at System.Collections.Generic.List`1[T].set_Capacity (System.Int32 value) [0x00021] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Collections.Generic.List`1[T].EnsureCapacity (System.Int32 min) [0x00036] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Collections.Generic.List`1[T].AddEnumerable (System.Collections.Generic.IEnumerable`1[T] enumerable) [0x0002e] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Collections.Generic.List`1[T]..ctor (System.Collections.Generic.IEnumerable`1[T] collection) [0x00062] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Linq.Enumerable.ToList[TSource] (System.Collections.Generic.IEnumerable`1[T] source) [0x00018] in <f506283258c042f6b92c6d09a3e02728>:0  (TaskId:51)\r\n    E mono    :   at Xunit.Sdk.TestAssemblyMessage..ctor (System.Collections.Generic.IEnumerable`1[T] testCases, Xunit.Abstractions.ITestAssembly testAssembly) [0x0000d] in <724f386d8f5b4395a7fa46c7a3a38a2a>:0  (TaskId:51)\r\n    E mono    :   at Xunit.Sdk.TestAssemblyFinished..ctor (System.Collections.Generic.IEnumerable`1[T] testCases, Xunit.Abstractions.ITestAssembly testAssembly, System.Decimal executionTime, System.Int32 testsRun, System.Int32 testsFailed, System.Int32 testsSkipped) [0x00000] in <724f386d8f5b4395a7fa46c7a3a38a2a>:0  (TaskId:51)\r\n    E mono    :   at Xunit.Sdk.TestAssemblyRunner`1[TTestCase].RunAsync () [0x00251] in <724f386d8f5b4395a7fa46c7a3a38a2a>:0  (TaskId:51)\r\n    E mono    :   at Xunit.Sdk.XunitTestFrameworkExecutor.RunTestCases (System.Collections.Generic.IEnumerable`1[T] testCases, Xunit.Abstractions.IMessageSink executionMessageSink, Xunit.Abstractions.ITestFrameworkExecutionOptions executionOptions) [0x00094] in <724f386d8f5b4395a7fa46c7a3a38a2a>:0  (TaskId:51)\r\n    E mono    :   at System.Runtime.CompilerServices.AsyncMethodBuilderCore+<>c.<ThrowAsync>b__7_1 (System.Object state) [0x00000] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context (System.Object state) [0x00007] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading.ExecutionContext.RunInternal (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) [0x00071] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading.ExecutionContext.Run (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) [0x00000] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem () [0x00021] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading.ThreadPoolWorkQueue.Dispatch () [0x00074] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)\r\n    E mono    :   at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback () [0x00000] in <b4834163b7c34fdd9789780c9b58c810>:0  (TaskId:51)"},{"Id":"9560774965","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:39:31","Actor":"monojenkins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3070","RelatedDescription":"Opened pull request \"[d16-2] Add support for deferred builds when the IDE supports them\" (#3070) at xamarin/xamarin-android","RelatedBody":"In order to take the most expensive target in a DTB (`UpdateAndroidResources`) out\r\nof the DTB, the IDE can monitor design-time builds and schedule a deferred build\r\nto run after the DTB finishes.\r\n\r\nWhen the IDE supports deferred builds, the  `DeferredBuildSupported` will be\r\ntrue, and in that case, the `DeferredBuild` target will run after the DTB finishes. To\r\nschedule targets to run as part of that deferred build, they need to be added to\r\nthe `DeferredBuildDependsOn` property.\r\n\r\nTargets can selectively disable themselves on DTBs when the deferred build is\r\nsupported by checking for both `'$(DeferredBuildSupported)' == 'true'` and the\r\n`'$(DeferredBuild)' == 'true'` property, which is set for those builds.\r\n\r\nThe deferred build queuing will be based on the following condition: a regular design\r\ntime build was triggered and the targets run were either \"Compile\" or any target\r\nthat contains \"DesignTime\" in its name (this excludes queuing a deferred build\r\nwhen a target like `GetFrameworkPaths` or `GetTargetPath` is run in a DTB, for\r\nexample).\r\n\r\nNote that `Inputs`/`Outputs` on the targets, as well as any `DependsOnTargets`\r\nspecified remain the same as before. The effect is that expensive targets that caused\r\na slow DTB before, can now be scheduled to run *after* the build finishes (this is\r\nwhen the deferred build is queued).\r\n\r\nIt's entirely opt-in (if no targets are specified for `DeferredBuildDependsOn`\r\nit will be essentially a no-op run).\r\n\r\nFinally, when a regular build starts, the existing deferred build will be waited for\r\ncompletion before continuing, to ensure no concurrency happens.\r\n\r\nThe initial `Compile` target is run by the DTB in VS while\r\nskipping the compiler call, at which point the UpdateAndroidResources\r\nshould also be skipped when the `DeferredBuildSupported` is `True`.\r\n\r\nSubsequently, we run the `DeferredBuild` (or rather, the `UpdateAndroidResources`\r\nwhich would be run by the `DeferredBuildDependsOn` we append it to)\r\nwhich should also succeed (it's run with the same global parameters/\r\nproperties as the initial DTB).\r\n\r\nFinally, we run the normal build, at which point everything should\r\nsucceed like before.\r\n\r\nIf an XVS version that supports this feature is installed, you can turn it on\r\nby setting an environment variable `DeferredBuildSupported=true`. An A/B experiment\r\nor remote setting can also set this value.\n\nBackport of #2636.\n\n/cc @kzu "},{"Id":"9560629629","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:12:25","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2636","RelatedDescription":"Merged pull request \"Add support for deferred builds when the IDE supports them\" (#2636) at xamarin/xamarin-android","RelatedBody":"In order to take the most expensive target in a DTB (`UpdateAndroidResources`) out\r\nof the DTB, the IDE can monitor design-time builds and schedule a deferred build\r\nto run after the DTB finishes.\r\n\r\nWhen the IDE supports deferred builds, the  `DeferredBuildSupported` will be\r\ntrue, and in that case, the `DeferredBuild` target will run after the DTB finishes. To\r\nschedule targets to run as part of that deferred build, they need to be added to\r\nthe `DeferredBuildDependsOn` property.\r\n\r\nTargets can selectively disable themselves on DTBs when the deferred build is\r\nsupported by checking for both `'$(DeferredBuildSupported)' == 'true'` and the\r\n`'$(DeferredBuild)' == 'true'` property, which is set for those builds.\r\n\r\nThe deferred build queuing will be based on the following condition: a regular design\r\ntime build was triggered and the targets run were either \"Compile\" or any target\r\nthat contains \"DesignTime\" in its name (this excludes queuing a deferred build\r\nwhen a target like `GetFrameworkPaths` or `GetTargetPath` is run in a DTB, for\r\nexample).\r\n\r\nNote that `Inputs`/`Outputs` on the targets, as well as any `DependsOnTargets`\r\nspecified remain the same as before. The effect is that expensive targets that caused\r\na slow DTB before, can now be scheduled to run *after* the build finishes (this is\r\nwhen the deferred build is queued).\r\n\r\nIt's entirely opt-in (if no targets are specified for `DeferredBuildDependsOn`\r\nit will be essentially a no-op run).\r\n\r\nFinally, when a regular build starts, the existing deferred build will be waited for\r\ncompletion before continuing, to ensure no concurrency happens.\r\n\r\nThe initial `Compile` target is run by the DTB in VS while\r\nskipping the compiler call, at which point the UpdateAndroidResources\r\nshould also be skipped when the `DeferredBuildSupported` is `True`.\r\n\r\nSubsequently, we run the `DeferredBuild` (or rather, the `UpdateAndroidResources`\r\nwhich would be run by the `DeferredBuildDependsOn` we append it to)\r\nwhich should also succeed (it's run with the same global parameters/\r\nproperties as the initial DTB).\r\n\r\nFinally, we run the normal build, at which point everything should\r\nsucceed like before.\r\n\r\nIf an XVS version that supports this feature is installed, you can turn it on\r\nby setting an environment variable `DeferredBuildSupported=true`. An A/B experiment\r\nor remote setting can also set this value."},{"Id":"9560618646","Type":"PullRequestEvent","CreatedAt":"2019-05-03T20:10:21","Actor":"radekdoulik","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/3069","RelatedDescription":"Opened pull request \"[tests] Kill adb server before test instrumentation\" (#3069) at xamarin/xamarin-android","RelatedBody":"This will force adb to restart the server, so we should have fresh adb\r\nfor `adb shell am instrument ...`. Hopefully it will help with crashes\r\nof `Mono.Android_Tests` test, we are seeing frequently on Jenkins."},{"Id":"9560421290","Type":"IssuesEvent","CreatedAt":"2019-05-03T19:34:10","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2873","RelatedDescription":"Closed issue \"F# records are broken when building with Link SDK and User Assemblies in Debug mode\" (#2873) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1.  Define an F# record type\r\n2. Set the Linking option to SDK and User Assemblies\r\n3. Try to create an instance of the record\r\n\r\nIf you try this sample out you can see it happening. Click the FAB. \r\n\r\nWhen set to Link SDK Assemblies Only or None, you will see the record printed in the debug console.\r\n\r\nWhen set to link User Assemblies, it will throw an exception.\r\n\r\nI have tried adding the standard Preserve attribute but it hasn't helped.\r\nI also saw errors in my production app that suggested union case constructors were being removed.\r\n\r\nRemember to clean / rebuild between runs.\r\n\r\n[Test.zip](https://github.com/xamarin/xamarin-android/files/3014145/Test.zip)\r\n\r\n\r\n### Expected Behavior\r\n\r\nThe record should be constructed normally.\r\n\r\n### Actual Behavior\r\n\r\nThe record crashes the application when trying to access its values.\r\n"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9564018192","Type":"IssuesEvent","CreatedAt":"2019-05-04T22:51:49","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6091","RelatedDescription":"Opened issue \"[Bug] rework Image Renderer to use new image loading code used by buttons\" (#6091) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nCode introduced by #4915 should replace the code in `ImageViewExtensions` for loading bitmap images. \r\n\r\nThere are a lot of UI Tests you can use to test this with but Bugzilla51173 is a good one to vet that it all works ok after changes\r\n"},{"Id":"9563787582","Type":"IssuesEvent","CreatedAt":"2019-05-04T20:33:17","Actor":"krdmllr","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6090","RelatedDescription":"Opened issue \"Open up the CollectionView implementation on Android\" (#6090) at xamarin/Xamarin.Forms","RelatedBody":"Pretty much everything in the CollectionView Android implementation is internal and/or sealed. Making these classes accessible would give more room for customizations.\r\n\r\nI'm talking about these classes: https://github.com/xamarin/Xamarin.Forms/tree/master/Xamarin.Forms.Platform.Android \r\n\r\nI would like to override the ItemsViewAdapter OnBindViewHolder method but in order to do that I basicly have to copy the whole folder in my solution to use my own adapter. If the classes would be public, I could extend from the ItemsViewAdapter and override the required methods in the ItemsViewRenderer.\r\n"},{"Id":"9563344980","Type":"PullRequestEvent","CreatedAt":"2019-05-04T16:48:16","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6089","RelatedDescription":"Opened pull request \"[iOS] Add missing call to ReloadData on NotifyCollectionChangedAction.Reset\" (#6089) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nThe iOS adapter for INotifyCollectionChanged is missing a call to `ReloadData` when handling `NotifyCollectionChangedAction.Reset`. This adds the missing call.\r\n\r\n### Issues Resolved ### \r\n\r\n- fixes #5793 \r\n\r\n### API Changes ###\r\n\r\nNone\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n\r\n"},{"Id":"9562004921","Type":"IssuesEvent","CreatedAt":"2019-05-04T04:26:39","Actor":"o1298098","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/6088","RelatedDescription":"Opened issue \"Unable override SetTabIcon in CustomTabbedPageRenderer\" (#6088) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI had create a  CustomTabbedPageRenderer with a CustomTabLayout ,after update to 4.0.0 Pre Release 10, SetTabIcon can not be override any more.\r\n### Steps to Reproduce\r\n\r\n1. \r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\n\r\n### Actual Behavior\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 4.0.0 Pre Release 10\r\n- Last known good version:4.0.0 Pre Release 8\r\n- IDE: Visual Studio 2019\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: <!-- if applicable -->\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9561725528","Type":"PullRequestEvent","CreatedAt":"2019-05-04T01:27:58","Actor":"kingces95","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/6087","RelatedDescription":"Opened pull request \"Profiler v11; No man init\" (#6087) at xamarin/Xamarin.Forms","RelatedBody":"Start up profiler with manual init code but w/o changing any of the existing init code needed to enable partial init. That's causing UITests to fail and will be submitted piecemeal after I get this in."}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9560838277","Type":"IssuesEvent","CreatedAt":"2019-05-03T20:51:21","Actor":"mhughey-vent","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5992","RelatedDescription":"Opened issue \"I'm having an timeout issue, specifically a WebException.\" (#5992) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\nSo the issue I'm running into is a WebException (specifically a timeout).\r\n\r\nI have been able to narrow it down to the HTTP Client implementation settings in iOS.\r\n\r\n- When it is set to **Managed** I don't get the error\r\n\r\n- When I set it to **NSUrlSession (iOS 7+)** a timeout exception is being generated after a request has been running longer than 1 minute.\r\n\r\nWe also tested our json request, using Insomnia, and it took about 5 mins to complete and we got data, but no exception is generated.\r\n\r\nI do not have access to the middle tier, just the server logs that get updated.\r\n\r\nI know about the HttpClient.Timeout property which we have set for large amount of time, are there any other configuration variables for setting the timeout when needing TLS 1.2?\r\n\r\n(The TLS 1.2 is a requirement)\r\n\r\n_:: Extra Info That May Be Helpful ::\r\nIt looks as though NSUrlSession (iOS 7+) setting forces the native HTTP Client to be used (which has a hard-coded timeout of 60 seconds)_\r\n\r\nThis was cross posted at Xamarin.Forms before I new where to post.\r\n\r\n### Expected Behavior\r\nA HTTP response, specifically a  file (size may vary)\r\n\r\n### Actual Behavior\r\nI get a WebException (Request timeout)\r\n\r\n### Environment\r\nMac OS\r\n- XCode 8.3.3\r\n\r\nVisual Studio 2015 for Windows\r\n- Xamarin 4.6.3.4\r\n- Xamarin.IOS 10.12.3.3\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nMicrosoft Visual Studio Professional 2015\r\nVersion 14.0.25420.01 Update 3\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Professional\r\n\r\nLightSwitch for Visual Studio 2015   00325-60003-96533-AA506\r\nMicrosoft LightSwitch for Visual Studio 2015\r\n\r\nVisual Basic 2015   00325-60003-96533-AA506\r\nMicrosoft Visual Basic 2015\r\n\r\nVisual C# 2015   00325-60003-96533-AA506\r\nMicrosoft Visual C# 2015\r\n\r\nVisual C++ 2015   00325-60003-96533-AA506\r\nMicrosoft Visual C++ 2015\r\n\r\nVisual F# 2015   00325-60003-96533-AA506\r\nMicrosoft Visual F# 2015\r\n\r\nWindows Phone SDK 8.0 - ENU   00325-60003-96533-AA506\r\nWindows Phone SDK 8.0 - ENU\r\n\r\nApplication Insights Tools for Visual Studio Package   7.0.20622.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2015.1 (Beta8)   14.1.11107.0\r\nASP.NET and Web Tools 2015.1 (Beta8)\r\n\r\nASP.NET Web Frameworks and Tools 2012.2   4.1.41102.0\r\nFor additional information, visit http://go.microsoft.com/fwlink/?LinkID=309563\r\n\r\nASP.NET Web Frameworks and Tools 2013   5.2.40314.0\r\nFor additional information, visit http://www.asp.net/\r\n\r\nClang with Microsoft CodeGen   14.0.25516\r\nClang with Microsoft CodeGen\r\n\r\nCommon Azure Tools   1.8\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nGitHub.VisualStudio   2.9.0.7614\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nKofePackagePackage Extension   1.0\r\nKofePackagePackage Visual Studio Extension Detailed Info\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Mobile Services Tools   1.4\r\nMicrosoft Azure Mobile Services Tools\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMono Debugging for Visual Studio   4.6.8-pre (ec7034f)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   3.4.4\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nOffice Developer Tools for Visual Studio 2015 ENU   14.0.23025\r\nMicrosoft Office Developer Tools for Visual Studio 2015 ENU\r\n\r\nPreEmptive Analytics Visualizer   1.2\r\nMicrosoft Visual Studio extension to visualize aggregated summaries from the PreEmptive Analytics product.\r\n\r\nPython Tools for Visual Studio   2.2.50113.00\r\nPython Tools for Visual Studio provides IntelliSense, projects, templates, Interactive windows, and other support for Python developers.\r\n\r\nPython Tools for Visual Studio - Django Integration   2.2.50113.00\r\nProvides templates and integration for the Django web framework.\r\n\r\nPython Tools for Visual Studio - Profiling Support   2.2.50113.00\r\nProfiling support for Python projects.\r\n\r\nSQL Server Data Tools   14.0.60519.0\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript   1.8.34.0\r\nTypeScript tools for Visual Studio\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   14.0.25401.00\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual C++ for Cross Platform Mobile Development (iOS)   14.0.25401.00\r\nVisual C++ for Cross Platform Mobile Development (iOS)\r\n\r\nVisual Studio Tools for Apache Cordova   Update 10\r\nVisual Studio Tools for Apache Cordova\r\n\r\nVisual Studio Tools for Universal Windows Apps   14.0.25527.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nWorkflow Manager Tools 1.0   1.0\r\nThis package contains the necessary Visual Studio integration components for Workflow Manager.\r\n\r\nXamarin   4.6.3.4 (0841c2aaf)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin.Android   7.4.3.1 (18558b4)\r\nVisual Studio extension to enable development for Xamarin.Android.\r\n\r\nXamarin.iOS   10.12.3.3 (8a39106)\r\nVisual Studio extension to enable development for Xamarin.iOS.\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"9560651750","Type":"IssuesEvent","CreatedAt":"2019-05-03T20:16:31","Actor":"gdignard","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5991","RelatedDescription":"Opened issue \"VisualStudio constantly changes CFBundleIdentifier for Extensions\" (#5991) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Create an Extension with the CFBundleDisplayName \"My Uploader\"\r\n2. Set the CGBundleIdentifier to \"com.domain.project.uploader\"\r\n3. Save and Close the Solution\r\n4. Open the Solution\r\n5. Open the Extension's Info.plist\r\n\r\n### Expected Behavior\r\n\r\nThe CFBundleIdentifier value is \"com.domain.project.uploader\"\r\n\r\n### Actual Behavior\r\n\r\nThe CFBundleIdentifier value is \"com.domain.project.My Uploader\"\r\n\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```\r\nMicrosoft Visual Studio Professional 2019\r\nVersion 16.0.3\r\nVisualStudio.16.Release/16.0.3+28803.352\r\nMicrosoft .NET Framework\r\nVersion 4.7.03062\r\n\r\nInstalled Version: Professional\r\n\r\nVisual C++ 2019   00435-60000-00000-AA091\r\nMicrosoft Visual C++ 2019\r\n\r\nADL Tools Service Provider   1.0\r\nThis package contains services used by Data Lake tools\r\n\r\nApplication Insights Tools for Visual Studio Package   9.0.20409.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2019   16.0.12313.64372\r\nASP.NET and Web Tools 2019\r\n\r\nASP.NET Web Frameworks and Tools 2019   16.0.12313.64372\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   16.0.12313.64372\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Data Lake Node   1.0\r\nThis package contains the Data Lake integration nodes for Server Explorer.\r\n\r\nAzure Data Lake Tools for Visual Studio   2.3.7000.2\r\nMicrosoft Azure Data Lake Tools for Visual Studio\r\n\r\nAzure Functions and Web Jobs Tools   16.0.12313.64372\r\nAzure Functions and Web Jobs Tools\r\n\r\nAzure Stream Analytics Tools for Visual Studio   2.3.7000.2\r\nMicrosoft Azure Stream Analytics Tools for Visual Studio\r\n\r\nC# Tools   3.0.0-beta4-19218-01+18b0cfb66884840b40491fa0896a8854d68b3959\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.77 (master@24013d5)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nFabric.DiagnosticEvents   1.0\r\nFabric Diagnostic Events\r\n\r\nGitHub.VisualStudio   2.9.0.7614\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nMicrosoft Azure HDInsight Azure Node   2.3.7000.2\r\nHDInsight Node under Azure Node\r\n\r\nMicrosoft Azure Hive Query Language Service   2.3.7000.2\r\nLanguage service for Hive query\r\n\r\nMicrosoft Azure Service Fabric Tools for Visual Studio   2.5\r\nMicrosoft Azure Service Fabric Tools for Visual Studio\r\n\r\nMicrosoft Azure Stream Analytics Language Service   2.3.7000.2\r\nLanguage service for Azure Stream Analytics\r\n\r\nMicrosoft Azure Stream Analytics Node   1.0\r\nAzure Stream Analytics Node under Azure Node\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 0x10 - v2.9.0.0\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   16.0.300 (573eda3)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   5.0.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   16.0.61903.25110\r\nMicrosoft SQL Server Data Tools\r\n\r\nToolWindowHostedEditor   1.0\r\nHosting json editor into a tool window\r\n\r\nTypeScript Tools   16.0.10306.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   3.0.0-beta4-19218-01+18b0cfb66884840b40491fa0896a8854d68b3959\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.4 for F# 4.6   16.0.0.0.  Commit Hash: 809f41207b74a1356208f11b8fa3a15233734050.\r\nMicrosoft Visual F# Tools 10.4 for F# 4.6\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisual Studio Tools for Kubernetes   1.0\r\nVisual Studio Tools for Kubernetes\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   16.0.0.521 (d16-0@7b060b3b9)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.17.4.419 (remotes/origin/d16-0@c5f131be7)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   16.1.47 (31f664d)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.2.3.0 (HEAD/9f6426ab2)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n    Mono: mono/mono/2018-08-rc@5ac37ccd385\r\n    Java.Interop: xamarin/java.interop/d16-0@c987483\r\n    LibZipSharp: grendello/LibZipSharp/d16-1@44de300\r\n    LibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\n    MXE: xamarin/mxe/xamarin@b9cbb535\r\n    ProGuard: xamarin/proguard/master@905836d\r\n    SQLite: xamarin/sqlite/3.26.0@325e91a\r\n    Xamarin.Android Tools: xamarin/xamarin-android-tools/d16-0@0a7edd6\r\n\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.8.0.2 (f2248ae)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"},{"Id":"9559626463","Type":"PullRequestEvent","CreatedAt":"2019-05-03T17:14:54","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5990","RelatedDescription":"Opened pull request \"[apidiff] Use mono-api-[info|html].exe from the mono archive.\" (#5990) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"9559618999","Type":"PullRequestEvent","CreatedAt":"2019-05-03T17:13:34","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5967","RelatedDescription":"Closed pull request \"[builds] package-ios-bcl and package-mac-bcl aren't parallel safe.\" (#5967) at xamarin/xamarin-macios","RelatedBody":"They're not even safe to run sequentially without some manual intervention.\n\nThis will be fixed in mono at some point, and we make this parallelized again."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1123980358289100801","CreatedAt":"2019-05-02T15:59:34+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8zSXL","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":14,"FavoriteCount":7,"RawContent":null},{"Id":"1123639473726685184","CreatedAt":"2019-05-01T17:25:01+00:00","UserScreenname":"xamarinhq","Text":"On this week's Xamarin.Essential API of the week, we take a look at the Detect Shake API to help you detect when a… https://t.co/rrPQPNYeFY","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":32,"FavoriteCount":11,"RawContent":null},{"Id":"1123274432565452802","CreatedAt":"2019-04-30T17:14:28+00:00","UserScreenname":"xamarinhq","Text":"Learn about new, exciting releases and tools to help jump start your next mobile development project by networking… https://t.co/9YpJzAFHml","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":28,"FavoriteCount":11,"RawContent":null},{"Id":"1121888817483530243","CreatedAt":"2019-04-26T21:28:32+00:00","UserScreenname":"xamarinhq","Text":"This week, @JamesMontemagno &amp; Alexandre Costa show us the importance of making mobile apps accessible as they talk… https://t.co/7qsj6o1VYm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":15,"RawContent":null},{"Id":"1121502644189716481","CreatedAt":"2019-04-25T19:54:01+00:00","UserScreenname":"xamarinhq","Text":"We're excited to announce a new inclusion to our Xamarin Showcase gallery... let's take a look at the latest custom… https://t.co/mC9hK1Vmol","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":63,"FavoriteCount":25,"RawContent":null},{"Id":"1120428795440267265","CreatedAt":"2019-04-22T20:46:56+00:00","UserScreenname":"xamarinhq","Text":"When it comes to application size, bigger is not better. It’s one of the key factors a user takes into consideratio… https://t.co/K3s0FDTdqV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":74,"FavoriteCount":39,"RawContent":null},{"Id":"1120357094811680768","CreatedAt":"2019-04-22T16:02:01+00:00","UserScreenname":"xamarinhq","Text":"Say \"Hello!\" to the new Xamarin You Tube Channel.\nCheck it out, and don't forget to subscribe.… https://t.co/KSNaDZg4J0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":118,"FavoriteCount":48,"RawContent":null},{"Id":"1119296356651339777","CreatedAt":"2019-04-19T17:47:01+00:00","UserScreenname":"xamarinhq","Text":"During March, you made submissions to our Visual Challenge. Your feedback and samples have been valuable. ...but wa… https://t.co/S2oMKbh17G","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":75,"FavoriteCount":34,"RawContent":null},{"Id":"1119279495238823937","CreatedAt":"2019-04-19T16:40:01+00:00","UserScreenname":"xamarinhq","Text":"We're re-launching our Xamarin Developers YouTube channel! ...find fresh content on building amazing mobile apps di… https://t.co/SDfbKwLV1u","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":44,"RawContent":null},{"Id":"1118990448654200832","CreatedAt":"2019-04-18T21:31:27+00:00","UserScreenname":"xamarinhq","Text":"Find fresh content on building amazing mobile apps directly from the Xamarin team @ Microsoft.\n\nIntroducing the New… https://t.co/S4JC1oCDJU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":117,"FavoriteCount":42,"RawContent":null},{"Id":"1117944446899896322","CreatedAt":"2019-04-16T00:15:01+00:00","UserScreenname":"xamarinhq","Text":"We're getting ready for macOS’s Hardened Runtime and Notary. Learn how to get started; from configuring your entitl… https://t.co/p4W2CszalI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":26,"FavoriteCount":14,"RawContent":null},{"Id":"1116762533346652160","CreatedAt":"2019-04-12T17:58:31+00:00","UserScreenname":"xamarinhq","Text":"There’re tons in store for you in the latest podcast... @codemillmatt and @JamesMontemagno rundown the new features… https://t.co/1TlcD9N8yV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":37,"FavoriteCount":18,"RawContent":null},{"Id":"1115620503232962560","CreatedAt":"2019-04-09T14:20:29+00:00","UserScreenname":"xamarinhq","Text":"Under the Hood: Take an inside look at #DevOps at Microsoft, in this webinar with @abelsquidhead and @Applitools on… https://t.co/qgf7T5OPvM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":38,"FavoriteCount":23,"RawContent":null},{"Id":"1115323538091720704","CreatedAt":"2019-04-08T18:40:27+00:00","UserScreenname":"xamarinhq","Text":"Say 'Hello' to WorkManager - a library that makes it easy to schedule deferrable, asynchronous tasks even if the ap… https://t.co/xOYvf5E0K0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":106,"FavoriteCount":47,"RawContent":null},{"Id":"1113833658920472576","CreatedAt":"2019-04-04T16:00:12+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":31,"FavoriteCount":11,"RawContent":null},{"Id":"1113554700702449664","CreatedAt":"2019-04-03T21:31:44+00:00","UserScreenname":"xamarinhq","Text":"Last week we issued a challenge to the Xamarin community to use the new Material Design controls with Visual by rep… https://t.co/JpaGEihELG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":147,"FavoriteCount":54,"RawContent":null},{"Id":"1113137014768066560","CreatedAt":"2019-04-02T17:52:00+00:00","UserScreenname":"xamarinhq","Text":"News from the #VisualStudio 2019 Launch Event. See what’s new for #Xamarin Developers in #VS2019,… https://t.co/ylrA7eBnQ4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":149,"FavoriteCount":72,"RawContent":null},{"Id":"1112804184166944768","CreatedAt":"2019-04-01T19:49:27+00:00","UserScreenname":"xamarinhq","Text":"Learn about the new, exciting releases and tooling to help jumpstart your next mobile development project.\n\nJoin us… https://t.co/4AhXCdCrB0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":27,"FavoriteCount":13,"RawContent":null},{"Id":"1111358962681765893","CreatedAt":"2019-03-28T20:06:39+00:00","UserScreenname":"xamarinhq","Text":"Unlock the power of Glide with “GlideX”: a simple library to swap-in Glide’s image loading implementation in-place… https://t.co/bAk49l9er6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":47,"FavoriteCount":25,"RawContent":null},{"Id":"1111318034789158912","CreatedAt":"2019-03-28T17:24:01+00:00","UserScreenname":"xamarinhq","Text":"How are we doing? The #Xamarin March survey is now ready for your feedback: https://t.co/yfktVy49Pl \nIt's only avai… https://t.co/gX2uC9QShF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":55,"FavoriteCount":37,"RawContent":null}]}},"RunOn":"2019-05-05T05:30:51.5492013Z","RunDurationInMilliseconds":2042}