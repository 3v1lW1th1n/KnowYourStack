{"Data":{"Vue-Issues":{"Issues":[{"Id":"475306347","IsPullRequest":false,"CreatedAt":"2019-07-31T19:01:03","Actor":"david27alves","Number":"10333","RawContent":null,"Title":"v-model doesn't work for me","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/mhy1oqed/2/](https://jsfiddle.net/mhy1oqed/2/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nUse v-model\r\n\r\n### What is expected?\r\nUse v-model\r\n\r\n### What is actually happening?\r\nI'm starting on vue\r\n\r\n---\r\nI don't know if I'm doing something wrong, I tested it using the site examples but it didn't work.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10333","RelatedDescription":"Closed issue \"v-model doesn't work for me\" (#10333)"},{"Id":"475304073","IsPullRequest":false,"CreatedAt":"2019-07-31T18:56:59","Actor":"btoo","Number":"10332","RawContent":null,"Title":"Bring Vue component APIs to Vue.observables","State":"closed","Body":"### What problem does this feature solve?\r\nWhile `Vue.observables` are a great way to share states (and their statically inferrable types) across components, they fall short in their lack of other features that would otherwise make them comparable to using Vuex or a `new Vue` bus. For example, computed properties are a really useful feature that are available in Vue instances and Vuex stores (getters), but if you want to use them with a Vue.observable, you have to construct the computed property via either of the aforementioned alternatives, instead of being able to conveniently access it from the observable itself, like you would any other property of the observable. Other features, like watchers and methods would also really come in handy\r\n\r\n### What does the proposed API look like?\r\n```typescript\r\nconst counter = Vue.observable({ count: 0 }, {\r\n  computed: {\r\n    square: observable => observable.count ** 2,\r\n  },\r\n  watch: {\r\n    square: newVal => console.log(`the square is ${newVal}`)\r\n  }\r\n})\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10332","RelatedDescription":"Closed issue \"Bring Vue component APIs to Vue.observables\" (#10332)"},{"Id":"475213737","IsPullRequest":false,"CreatedAt":"2019-07-31T15:30:26","Actor":"r1chm8","Number":"10331","RawContent":null,"Title":"Component is re-renedered when DOM changes around it","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/Richm8/pen/VoWZQZ](https://codepen.io/Richm8/pen/VoWZQZ)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIn the attached codepen, Open console and then click on the toggle button, you'll see that the created and destroyed hooks are called for the `logger` component even though the component is not having any manipulations performed on it.\r\n\r\n### What is expected?\r\nThe created and destroy hooks on `logger` not to be called\r\n\r\n### What is actually happening?\r\nThe created and destroy hooks on `logger` are being called\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10331","RelatedDescription":"Open issue \"Component is re-renedered when DOM changes around it\" (#10331)"},{"Id":"475159395","IsPullRequest":false,"CreatedAt":"2019-07-31T13:54:09","Actor":"dattn","Number":"10330","RawContent":null,"Title":"nested v-slot is not reactive when using abbreviated syntax (v-slot on component itself) combined with an v-if/v-else","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-j1w3r](https://codesandbox.io/s/vue-template-j1w3r)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nIn my example change the value by typing in the input field.\r\nIn the working example both values change.\r\nIn the not working example only the nested value changes.\r\nThe only difference is the wrapping `<template>` node\r\n\r\n### What is expected?\r\nscoped slot params (controllerSlotData) should be reactive in both cases\r\n\r\n### What is actually happening?\r\nscoped slot params (controllerSlotData) is not reative\r\n\r\n---\r\nThe problem exists only when combining v-slot on component itself in combination with v-if/v-else\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10330","RelatedDescription":"Open issue \"nested v-slot is not reactive when using abbreviated syntax (v-slot on component itself) combined with an v-if/v-else\" (#10330)"},{"Id":"474862696","IsPullRequest":true,"CreatedAt":"2019-07-31T07:52:43","Actor":"HusamIbrahim","Number":"10327","RawContent":null,"Title":"chore: fix proxy warning typo","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: fix typo\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10327","RelatedDescription":"Closed or merged PR \"chore: fix proxy warning typo\" (#10327)"},{"Id":"474914923","IsPullRequest":false,"CreatedAt":"2019-07-31T07:17:34","Actor":"ethlyseria","Number":"10329","RawContent":null,"Title":"Vue.JS Cache Refresh if there's new update in production","State":"closed","Body":"### What problem does this feature solve?\r\nGood day,\r\n\r\nI'm trying to find a solution if there's a package or practice on implementing cache refresh whenever I release a new version in the production. Any help please?\r\n\r\n### What does the proposed API look like?\r\nGood day,\r\n\r\nI'm trying to find a solution if there's a package or practice on implementing cache refresh whenever I release a new version in the production. Any help please?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10329","RelatedDescription":"Closed issue \"Vue.JS Cache Refresh if there's new update in production\" (#10329)"},{"Id":"474913629","IsPullRequest":false,"CreatedAt":"2019-07-31T03:13:38","Actor":"ethlyseria","Number":"10328","RawContent":null,"Title":"Vue.JS Cache Refresh if there's new update in production","State":"closed","Body":"Good day,\r\n\r\nI'm trying to find a solution if there's a package or practice on implementing cache refresh whenever I release a new version in the production.  Any help please?","Url":"https://github.com/vuejs/vue/issues/10328","RelatedDescription":"Closed issue \"Vue.JS Cache Refresh if there's new update in production\" (#10328)"},{"Id":"474652393","IsPullRequest":false,"CreatedAt":"2019-07-30T15:25:44","Actor":"craiggeil","Number":"10326","RawContent":null,"Title":"Multiple nested v-for loops ","State":"closed","Body":"So I have more than one nested v-for loop, similar to this --\r\n\r\n<div v-for=\"subject in subjectsA\">\r\n  <div v-for=\"title in subject.titles\">\r\n    {{title.name}}\r\n  </div></div>\r\n\r\n<div v-for=\"subject in subjectsB\">\r\n  <div v-for=\"title in subject.titles\">\r\n    {{title.name}}\r\n  </div></div>\r\n\r\nWhat is happening is **both** title.name values are coming from the subjectsB collection. \r\n","Url":"https://github.com/vuejs/vue/issues/10326","RelatedDescription":"Closed issue \"Multiple nested v-for loops \" (#10326)"},{"Id":"474491001","IsPullRequest":false,"CreatedAt":"2019-07-30T10:01:57","Actor":"Erik5169","Number":"10325","RawContent":null,"Title":"Props 组件默认值问题","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[http://www.nothing.com](http://www.nothing.com)\r\n\r\nBUG比较简单，没有提供具体的代码案例\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n定义子组件接受父组件值的时候， 子组件接收父组件的值为一个对象的时候，default: function(){return {name: '==='}}, 如果父组件传值为null的时候， default值没有启用， 经过测试 在父组件传 undefined的时候， default值启用\r\n\r\n### What is expected?\r\n期望父组件传null或者{}的时候，子组件default的值能够启用\r\n\r\n### What is actually happening?\r\n传null的时候，子组件访问数据会报错\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10325","RelatedDescription":"Closed issue \"Props 组件默认值问题\" (#10325)"},{"Id":"474410825","IsPullRequest":false,"CreatedAt":"2019-07-30T07:46:15","Actor":"Flyrell","Number":"10323","RawContent":null,"Title":"box-shadow style binding does not work in Safari","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/a16gnsmv/](https://jsfiddle.net/a16gnsmv/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nBind the style attribute on any HTML element with the `box-shadow` property. In Chrome & Firefox, it's bound correctly however in Safari it isn't bound at all.\r\n\r\n```html\r\n<div :style=\"{ 'box-shadow': '0 -1px 0 inset #333333' }\"></div>\r\n\r\n<!-- Chrome (v75.0.3770) -->\r\n<div style=\"box-shadow: rgb(51, 51, 51) 0px -1px 0px inset\"></div>\r\n\r\n<!-- Safari (v12.1.1) -->\r\n<div></div>\r\n```\r\n\r\n### What is expected?\r\nThe expected behaviour would be the `box-shadow` property bound in the style attribute to the HTML element in Safari.\r\n\r\n### What is actually happening?\r\nThe box-shadow property is not taken into consideration while rendering the template.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10323","RelatedDescription":"Closed issue \"box-shadow style binding does not work in Safari\" (#10323)"},{"Id":"474413686","IsPullRequest":true,"CreatedAt":"2019-07-30T07:17:16","Actor":"cooleye","Number":"10324","RawContent":null,"Title":"Update README.md","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10324","RelatedDescription":"Closed or merged PR \"Update README.md\" (#10324)"},{"Id":"474408622","IsPullRequest":false,"CreatedAt":"2019-07-30T06:58:57","Actor":"Flyrell","Number":"10322","RawContent":null,"Title":"box-shadow style binding does not work in Safari","State":"closed","Body":"It looks like the Vue.js is unable to bind the `box-shadow` property within the style attribute in Safari. I already mentioned this on the official [forum](https://forum.vuejs.org/t/binding-box-shadow-style-doesnt-work-on-safari-12/68942, but it didn't get much attention.\r\n\r\n```javascript\r\n<div :style=\"{ 'box-shadow': '0 -1px 0 inset #333333' }\"></div>\r\n\r\n// Chrome (v75.0.3770)\r\n// <div style=\"box-shadow: rgb(51, 51, 51) 0px -1px 0px inset\"></div>\r\n\r\n// Safari (v12.1.1)\r\n// <div></div>\r\n```\r\n\r\nHere's the working fiddle: https://jsfiddle.net/a16gnsmv/ \r\n\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue/issues/10322","RelatedDescription":"Closed issue \"box-shadow style binding does not work in Safari\" (#10322)"},{"Id":"474372286","IsPullRequest":false,"CreatedAt":"2019-07-30T04:56:07","Actor":"davidgithub1980","Number":"10321","RawContent":null,"Title":"Vue SSR - SELECT element - n.setAttribute is not a function","State":"closed","Body":"Hello. I would like to ask for help. I have the following piece of code that is server-side rendered:\r\n\r\n    <select\r\n      id=\"form\"\r\n      ref=\"select\"\r\n      v-model=\"selectedCategory\"\r\n      name=\"category\"\r\n      class=\"sitesearch\"\r\n    >\r\n      <option v-for=\"category in searchCategories\" :value=\"category\" :key=\"category.label\">\r\n        {{ category.level === 1 ? '&nbsp;&nbsp;' : '' }} {{ category.label }}\r\n      </option>\r\n    </select>\r\n\r\nThis code is part of a component. This very piece of code however causes issues on a random basis when being server-side rendered. Quite often it generates the following error stack:\r\n\r\n**n.setAttribute is not a function**\r\n\r\nIt comes down to the following code inside the *vue.js* source code:\r\n\r\n    function createElement$1 (tagName, vnode) {\r\n      var elm = document.createElement(tagName);\r\n      if (tagName !== 'select') {\r\n        return elm\r\n      }\r\n      // false or null will remove the attribute but undefined will not\r\n      if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\r\n        **elm.setAttribute('multiple', 'multiple');**\r\n      }\r\n      return elm\r\n    }\r\n\r\nBut everything appears to be standard vue code when it comes to my component code above using the *select* element (the *multiple* attr is not even explicitly used there). Whenever I remove the *select*-related code, the error stack disappears. I would like a push in the right direction as to how to solve this issue.","Url":"https://github.com/vuejs/vue/issues/10321","RelatedDescription":"Closed issue \"Vue SSR - SELECT element - n.setAttribute is not a function\" (#10321)"},{"Id":"473749181","IsPullRequest":true,"CreatedAt":"2019-07-29T18:42:42","Actor":"vue-bot","Number":"10319","RawContent":null,"Title":"[automated] Patreon sponsors update","State":"closed","Body":"This is an automated pull request.","Url":"https://github.com/vuejs/vue/pull/10319","RelatedDescription":"Closed or merged PR \"[automated] Patreon sponsors update\" (#10319)"},{"Id":"473933981","IsPullRequest":false,"CreatedAt":"2019-07-29T09:02:33","Actor":"Shinigami92","Number":"10320","RawContent":null,"Title":"Add JSDoc to types","State":"open","Body":"### What problem does this feature solve?\r\nThis will improve the developer experience when using Vue in editors such as VSCode.\r\n\r\nCurrently, the developer must look up the default value in the [documentation](https://vuejs.org/v2/guide/components-props.html#Prop-Validation). And even there it is not clear, without trying it.\r\n\r\n### What does the proposed API look like?\r\nOne example:\r\n\r\nhttps://github.com/vuejs/vue/blob/b7c2d9366cf731a1551286b8ac712e6e0905070e/types/options.d.ts#L155\r\n\r\nThis line could get a JSDoc like:\r\n```\r\nIndicates whether the property must be set or is optional. Default is `false`.\r\n```\r\n\r\n### Example Result\r\n![Bildschirmfoto 2019-07-29 um 11 03 36](https://user-images.githubusercontent.com/7195563/62035661-91545000-b1f0-11e9-928d-f4f82cd6fb2b.png)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10320","RelatedDescription":"Open issue \"Add JSDoc to types\" (#10320)"},{"Id":"473521990","IsPullRequest":false,"CreatedAt":"2019-07-26T20:24:55","Actor":"BDGrace","Number":"10318","RawContent":null,"Title":"vue-server-renderer can't be compiled server-side with webpack 4","State":"open","Body":"### What problem does this feature solve?\r\nWebpack or likely any other bundler/compiler/sequencer is not going to be able to resolve dynamic require statements:\r\n\r\n#### Example Added in comments (and at fiddle)\r\n```\r\nhttps://jsfiddle.net/te1b83jx/5/\r\n```\r\n\r\n#### Hence the webpack warning:\r\n```\r\nnode_modules/vue-server-renderer/build.dev.js 9295:15-9298:9\r\nCritical dependency: the request of a dependency is an expression\r\n```\r\n\r\nhttps://github.com/vuejs/vue/blob/dev/packages/vue-server-renderer/build.dev.js#L9295\r\n\r\n\r\n\r\n#### Using: \r\n```\r\nconst renderer = eval(\"require\")('vue-server-renderer').createRenderer()\r\n```\r\nAnd including \"vue-server-renderer\" in the node_modules as I would imagine most people do, avoids this inconvenience, however IMO it's really nice to be able to compile system level javascript to a few javascript files (one for each process more or less... etc.)\r\n\r\n\r\n\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\nWell if the module evaluation could be done in a way that doesn't necessitate a dynamic require statements, that would be really cool.  : )\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10318","RelatedDescription":"Open issue \"vue-server-renderer can't be compiled server-side with webpack 4\" (#10318)"},{"Id":"473467482","IsPullRequest":true,"CreatedAt":"2019-07-26T17:46:43","Actor":"HusamIbrahim","Number":"10317","RawContent":null,"Title":"refactor(style): use arrow functions for unit tests","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\nThe majority of unit tests uses arrow functions for _describe_ and _it_ callbacks. This PR fixes the few that don't for a more consistent style.\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [x] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10317","RelatedDescription":"Open PR \"refactor(style): use arrow functions for unit tests\" (#10317)"},{"Id":"473151883","IsPullRequest":false,"CreatedAt":"2019-07-26T07:15:14","Actor":"xiaohaiH","Number":"10316","RawContent":null,"Title":"transition   keep-alive 导致组件加载错误","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://codepen.io/xiaohai/pen/zgKwyZ?editors=1010](https://codepen.io/xiaohai/pen/zgKwyZ?editors=1010)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. 点击二级路由A\r\n2. 点击一级路由\r\n3. 点击二级路由B\r\n此时加载的组件却是 二级路由A\r\n\r\n### What is expected?\r\n修复这个问题\r\n\r\n### What is actually happening?\r\n使用 transition 与 keep-alive 时, transition 的 mode 设置为 out-in, 会导致路由组件加载错误\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10316","RelatedDescription":"Closed issue \"transition   keep-alive 导致组件加载错误\" (#10316)"},{"Id":"473148185","IsPullRequest":false,"CreatedAt":"2019-07-26T02:34:31","Actor":"CuongStf","Number":"10315","RawContent":null,"Title":"I faced a issues when import component in children in vue-router?  How to resolve it?","State":"closed","Body":"```\r\nERROR in /Users/mac/Documents/code/product-project/admin-bus/src/router/index.ts\r\n16:37 Argument of type '{ path: string; component: () => Promise<typeof import(\"/Users/mac/Doc\r\numents/code/product-project/admin-bus/src/views/Students/StudentMain.vue\")>; name: string; }[]\r\n' is not assignable to parameter of type 'Many<{ path: string; component: () => Promise<typeof\r\n import(\"/Users/mac/Documents/code/product-project/admin-bus/src/views/Home/index.vue\")>; name\r\n: string; }>'.\r\n  Type '{ path: string; component: () => Promise<typeof import(\"/Users/mac/Documents/code/prod\r\nuct-project/admin-bus/src/views/Students/StudentMain.vue\")>; name: string; }[]' is not assigna\r\nble to type 'readonly { path: string; component: () => Promise<typeof import(\"/Users/mac/Docum\r\nents/code/product-project/admin-bus/src/views/Home/index.vue\")>; name: string; }[]'.\r\n    Type '{ path: string; component: () => Promise<typeof import(\"/Users/mac/Documents/code/pr\r\noduct-project/admin-bus/src/views/Students/StudentMain.vue\")>; name: string; }' is not assigna\r\nble to type '{ path: string; component: () => Promise<typeof import(\"/Users/mac/Documents/code\r\n/product-project/admin-bus/src/views/Home/index.vue\")>; name: string; }'.\r\n      Types of property 'component' are incompatible.\r\n        Type '() => Promise<typeof import(\"/Users/mac/Documents/code/product-project/admin-bus/src/views/Students/StudentMain.vue\")>' is not assignable to type '() => Promise<typeof import(\"/Users/mac/Documents/code/product-project/admin-bus/src/views/Home/index.vue\")>'.\r\n          Type 'Promise<typeof import(\"/Users/mac/Documents/code/product-project/admin-bus/src/views/Students/StudentMain.vue\")>' is not assignable to type 'Promise<typeof import(\"/Users/mac/Documents/code/product-project/admin-bus/src/views/Home/index.vue\")>'.\r\n            Type 'typeof import(\"/Users/mac/Documents/code/product-project/admin-bus/src/views/Students/StudentMain.vue\")' is not assignable to type 'typeof import(\"/Users/mac/Documents/code/product-project/admin-bus/src/views/Home/index.vue\")'.\r\n              Types of property 'Home' are incompatible.\r\n                Type 'typeof MainStudent' is not assignable to type 'typeof Home'.\r\n                  Property 'cards' is missing in type 'MainStudent' but required in type 'Home'.\r\n    14 |         name: \"app\",\r\n    15 |         component: () => import(\"../App.vue\"),\r\n  > 16 |         children: concat(Dashboard, Student, BusRoute)\r\n       |                                     ^\r\n    17 |       },\r\n    18 |       {\r\n    19 |         path: \"app/*\",\r\n```\r\n_ component dashboard (student and busRoute so on)\r\n```\r\nexport default [\r\n  {\r\n    path: \"home\",\r\n    component: () => import(\"../../views/Home/index.vue\"),\r\n    name: \"home\"\r\n  }\r\n];\r\n```\r\n_ my Routes:\r\n```\r\nroutes: concat(\r\n    [\r\n      {\r\n        path: \"/app\",\r\n        name: \"app\",\r\n        component: () => import(\"../App.vue\"),\r\n        children: concat(Dashboard, Student, BusRoute)\r\n      },\r\n      {\r\n        path: \"app/*\",\r\n        redirect: {\r\n          name: \"home\"\r\n        }\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        path: \"*\",\r\n        redirect: {\r\n          name: \"home\"\r\n        }\r\n      }\r\n    ]\r\n  )\r\n```\r\nIt force component in children must have same about property and data? So why and how resolve it?\r\nCurrently, i'm using vue-cli-3 and typescript\r\n\r\n<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n\r\n中文用户请注意：\r\n请使用上面的链接来创建新的 issue。如果不是用上述工具创建的 issue 会被自动关闭。\r\n-->\r\n\r\n<!--\r\nLove vuejs? Please consider supporting us via Patreon or OpenCollective:\r\n👉  https://www.patreon.com/evanyou\r\n👉  https://opencollective.com/vuejs/donate\r\n-->\r\n","Url":"https://github.com/vuejs/vue/issues/10315","RelatedDescription":"Closed issue \"I faced a issues when import component in children in vue-router?  How to resolve it?\" (#10315)"},{"Id":"472989567","IsPullRequest":true,"CreatedAt":"2019-07-25T17:42:32","Actor":"HusamIbrahim","Number":"10314","RawContent":null,"Title":"chore: remove computed cache:false option","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\nAs mentioned a while ago in another PR this option is deprecated in 2.x. If the maintainers have reservations against merging this PR then I think that at least we should provide a warning when _cache:false_ is used.\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: remove deprecated feature\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [x] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\nCaching invalidation of computed properties will stop working in applications that use this feature. But as explained in the [migration guide](https://vuejs.org/v2/guide/migration.html#cache-false-deprecated) these applications should use normal methods instead, which should have the same result. \r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [x] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10314","RelatedDescription":"Open PR \"chore: remove computed cache:false option\" (#10314)"},{"Id":"472693525","IsPullRequest":false,"CreatedAt":"2019-07-25T07:04:24","Actor":"Pasoul","Number":"10313","RawContent":null,"Title":"Setting 「include=\"\"」 on keep-alive causes components to be cached","State":"closed","Body":"### Version\r\n2.5.20\r\n\r\n### Reproduction link\r\n[https://codepen.io/py419569317/pen/EqywvW](https://codepen.io/py419569317/pen/EqywvW)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1.  add 「include=\"\"」to `keep-alive` like this:\r\n```\r\n<keep-alive include=\"\">\r\n      <router-view></router-view>\r\n</keep-alive>\r\n```\r\n2. it will causes components caching by mistake，to that triggered `activate` function\r\n\r\n### What is expected?\r\ncomponents won't be cached\r\n\r\n### What is actually happening?\r\nevery components will be cached\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10313","RelatedDescription":"Closed issue \"Setting 「include=\"\"」 on keep-alive causes components to be cached\" (#10313)"},{"Id":"472631277","IsPullRequest":false,"CreatedAt":"2019-07-25T07:02:56","Actor":"WillAvudim","Number":"10312","RawContent":null,"Title":"Please explain that \"hook:<>\" events exist and they allow to subscribe to the Vue component lifecycle events","State":"closed","Body":"### What problem does this feature solve?\r\nI've just recently learned from the 3rd sources that\r\n\r\n```\r\nvue_component.$once('hook:beforeDestroy', function () { ... } )\r\n```\r\n\r\ncan be used to subscribe to the lifecycle events of individual components.\r\n\r\nIn my case this is very convenient, it enables me to automatically shut down the no longer necessary websocket connection that is used to receive real-time updates on a certain page of my SPA.\r\n\r\nWould it be possible to mention this great fact in the official documentation? I couldn't find any reference to it anywhere. There are several mentioning of the word hook in the documentation and they all seem to connote some other unrelated things.\r\n\r\n\r\n### What does the proposed API look like?\r\nA documentation enhancement.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10312","RelatedDescription":"Closed issue \"Please explain that \"hook:<>\" events exist and they allow to subscribe to the Vue component lifecycle events\" (#10312)"},{"Id":"472629638","IsPullRequest":false,"CreatedAt":"2019-07-25T02:11:06","Actor":"WillAvudim","Number":"10311","RawContent":null,"Title":"Please explain that \"hook:<>\" events exist and they allow to subscribe to the Vue component lifecycle events","State":"closed","Body":"I've just recently learned from the 3rd sources that \r\n```\r\nvue_component.$once('hook:beforeDestroy', function () { ... } )\r\n```\r\ncan be used to subscribe to the lifecycle events of individual components.\r\n\r\nIn my case this is very convenient, it enables me to automatically shut down the no longer necessary websocket connection that is used to receive real-time updates on a certain page of my SPA.\r\n\r\nWould it be possible to mention this great fact in the official documentation? I couldn't find any reference to it anywhere. There are several mentioning of the word hook in the documentation and they all seem to connote some other unrelated things.","Url":"https://github.com/vuejs/vue/issues/10311","RelatedDescription":"Closed issue \"Please explain that \"hook:<>\" events exist and they allow to subscribe to the Vue component lifecycle events\" (#10311)"},{"Id":"472341937","IsPullRequest":true,"CreatedAt":"2019-07-24T15:16:34","Actor":"HusamIbrahim","Number":"10310","RawContent":null,"Title":"chore: fix injection warning typo","State":"closed","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [x] Other, please describe: fix typo\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10310","RelatedDescription":"Closed or merged PR \"chore: fix injection warning typo\" (#10310)"},{"Id":"472140163","IsPullRequest":false,"CreatedAt":"2019-07-24T08:17:02","Actor":"tonghao12","Number":"10309","RawContent":null,"Title":"windows上打包结果和linux上打包结果不一样","State":"closed","Body":"### What problem does this feature solve?\r\n1.路由懒加载在windows上打包的结果，根据组件分包\r\n2.相同的环境下和相同的代码（通过npm install），在linux服务器上打包的结果，不会根据组件分包，全部都会打在一个js文件里\r\n项目马上要上线，如果打的包过大，会导致首屏显示过慢，影响用户体验\r\n这是为什么呢？\r\n\r\n### What does the proposed API look like?\r\n是否在linux下npm instal下来的包会跟windows不一样，导致这个问题？\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10309","RelatedDescription":"Closed issue \"windows上打包结果和linux上打包结果不一样\" (#10309)"},{"Id":"472133985","IsPullRequest":true,"CreatedAt":"2019-07-24T07:59:23","Actor":"Imon-Haque","Number":"10308","RawContent":null,"Title":"ignore .idea","State":"closed","Body":".gitignore update to ignore Intellij IDEA project files.\r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n\r\n<!-- PULL REQUEST TEMPLATE -->\r\n<!-- (Update \"[ ]\" to \"[x]\" to check a box) -->\r\n\r\n**What kind of change does this PR introduce?** (check at least one)\r\n\r\n- [ ] Bugfix\r\n- [ ] Feature\r\n- [ ] Code style update\r\n- [ ] Refactor\r\n- [ ] Build-related changes\r\n- [ ] Other, please describe:\r\n\r\n**Does this PR introduce a breaking change?** (check one)\r\n\r\n- [ ] Yes\r\n- [ ] No\r\n\r\nIf yes, please describe the impact and migration path for existing applications:\r\n\r\n**The PR fulfills these requirements:**\r\n\r\n- [ ] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch\r\n- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where \"xxx\" is the issue number)\r\n- [ ] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup\r\n- [ ] New/updated tests are included\r\n\r\nIf adding a **new feature**, the PR's description includes:\r\n- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)\r\n\r\n**Other information:**\r\n","Url":"https://github.com/vuejs/vue/pull/10308","RelatedDescription":"Closed or merged PR \"ignore .idea\" (#10308)"},{"Id":"472039138","IsPullRequest":false,"CreatedAt":"2019-07-24T06:52:14","Actor":"aoi-umi","Number":"10307","RawContent":null,"Title":"tsx下使用v-html报错","State":"closed","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://github.com/aoi-umi/demo/commit/b738088f5d934b9c8e53a1f4a3e4a761966af7b0#diff-95d77e7cf3ad25bef47127a93ba4738b](https://github.com/aoi-umi/demo/commit/b738088f5d934b9c8e53a1f4a3e4a761966af7b0#diff-95d77e7cf3ad25bef47127a93ba4738b)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\ntsx下使用v-html\r\n```html\r\n<p v-html={params.row.content}></p>;\r\n```\r\n无法显示，报以下错误\r\nFailed to resolve directive: html\r\n\r\n### What is expected?\r\n正确显示html内容\r\n\r\n### What is actually happening?\r\nFailed to resolve directive: html\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10307","RelatedDescription":"Closed issue \"tsx下使用v-html报错\" (#10307)"},{"Id":"471909098","IsPullRequest":false,"CreatedAt":"2019-07-24T06:51:33","Actor":"btoo","Number":"10305","RawContent":null,"Title":"Facilitate debugging in template","State":"closed","Body":"### What problem does this feature solve?\r\nDebugging from template code is frustratingly impractical because you lose access to the conventional tools available to you in plain javascript. The reference to the `console` is missing because it is not in the scope of the component instance. Yes, you can add it to the component instance or even the global Vue prototype, but to have to do this every time you need to debug, and then remove for the sake of keeping your code clean, is needlessly tedious. \r\n\r\nAdditionally, the `debugger` keyword (for example within an in-template IIFE) is barely of any use because the compiled variables do not match those of the component instance.\r\n\r\nThis has been an issue for me for a while now, but I was more forgiving of it because how incredible Vue otherwise is. However, I recently noticed that [Svelte.js offers a pretty nifty OOTB feature for debugging in templates](https://svelte.dev/docs#debug).\r\n\r\nFrom their docs:\r\n> The {@debug ...} tag offers an alternative to console.log(...). It logs the values of specific variables whenever they change, and pauses code execution if you have devtools open.\r\n> \r\n> It accepts a comma-separated list of variable names (not arbitrary expressions).\r\n> \r\n> The {@debug} tag without any arguments will insert a debugger statement that gets triggered when any state changes, as opposed to the specified variables.\r\n\r\nIs there any way we can bring this into Vue template syntax?\r\n\r\n\r\n### What does the proposed API look like?\r\n```\r\n<template>\r\n  <div>\r\n    {{ @debug }}\r\n    or\r\n    {{ @debug var1, var2, ..., varN }}\r\n  </div>\r\n</template>\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10305","RelatedDescription":"Closed issue \"Facilitate debugging in template\" (#10305)"},{"Id":"472036677","IsPullRequest":false,"CreatedAt":"2019-07-24T01:30:38","Actor":"g4jc","Number":"10306","RawContent":null,"Title":"Click handlers do not work on all UXP applications","State":"open","Body":"### Version\r\n2.6.10\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/pzumygcq/](https://jsfiddle.net/pzumygcq/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n* Download and install any UXP application (Pale Moon, Basilisk, and others).\r\n* Click on show button (this is important, click handlers work if they are bound when currentFlushTimestamp is 0).\r\n* This will show a second button, this button will increment the count variable every time it is clicked, except for UXP applications.\r\n\r\n\r\n### What is expected?\r\ncount variable will increment\r\n\r\n### What is actually happening?\r\nClick handler is not firing.\r\n\r\n---\r\nSeveral sites in production are not working properly on [Pale Moon](https://www.palemoon.org/), and by extension, all other applications currently being built on the [Unified XUL Platform](http://thereisonlyxul.org/).\r\n\r\nI was able to trace this issue back to #9446. Since the string hack only identifies the FireFox Useragent it does not properly send UXP applications down the correct path.\r\n\r\nShort-term, `Goanna` could be used as an identifier which will work for Pale Moon and Basilisk. However, a better implementation would be to test if the `event.timeStamp` is returning the correct values, if yes proceed, if note continue down the FF52 path that was introduced as a bug fix in Issue #9446.\r\n\r\nSince multiple applications are using UXP, Goanna is not a consistent identifier aside from Pale Moon and Basilisk.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue/issues/10306","RelatedDescription":"Open issue \"Click handlers do not work on all UXP applications\" (#10306)"},{"Id":"471831134","IsPullRequest":false,"CreatedAt":"2019-07-23T17:32:25","Actor":"Xationch","Number":"10304","RawContent":null,"Title":"Adding vuejs data on template make scroll event bug","State":"closed","Body":"I found something very very strange : I'm using capacitor (but without Ionic, I'm creating everything myself) for create a iOS app. I try to recreate a refresh style scroll. See my code :\r\n\r\n```javascript\r\n  data() {\r\n    return {\r\n      position: null,\r\n    }\r\n  },\r\n  mounted() {\r\n    document.addEventListener('scroll', this.onScroll, true)\r\n  },\r\n  beforeDestroy() {\r\n    document.removeEventListener('scroll', this.onScroll, true)\r\n  },\r\n  methods: {\r\n    onScroll(event) {\r\n      this.position = event.target.scrollTop\r\n      console.log(event.target.scrollTop)\r\n    }\r\n  }\r\n```\r\n\r\nWith some css help I can create the \"negative\" scroll / bounce. Evertything working well except when I display the data this.position on the <template> ! That mutate (add?) some 0 value to the event.target.scrollTop... And it's only when I scrolling on negative. Nothing append on positive scrolling in both case.\r\n\r\n```javascript\r\n<template>\r\n     ...\r\n    <div :class=\"$style.percentage\">\r\n      {{ position }}\r\n    </div>\r\n     ...\r\n```\r\n![6CLQoOo](https://user-images.githubusercontent.com/24409229/61733602-757c2480-ad80-11e9-8225-4b2dfc584786.png)\r\n\r\nHow is it possible that adding this.position to the template the event.target.scrollTop add some 0? When I remove the data this.position from the template it's working. And when this.position is present but hidden by display: none it's working\r\n```html\r\n<!-- working -->\r\n<span style=\"display: none;\">\r\n{{ this.position }}\r\n</span>\r\n```\r\n![jY7JtZs](https://user-images.githubusercontent.com/24409229/61733601-757c2480-ad80-11e9-8f40-2462077f4f34.png)","Url":"https://github.com/vuejs/vue/issues/10304","RelatedDescription":"Closed issue \"Adding vuejs data on template make scroll event bug\" (#10304)"}],"ResultType":"GitHubIssue"},"Router-Issues":{"Issues":[{"Id":"475455016","IsPullRequest":false,"CreatedAt":"2019-08-01T03:42:16","Actor":"TornadoLess","Number":"2864","RawContent":null,"Title":"vue router transition leave animation performance issue in mobile","State":"closed","Body":"we use transition wrapper the router-view,  when router.go(-1) is called, the current page view will leave the screen transformx(100%), but\n the animation is invisible because of the previous page view node is put after the current one,  so the leave animation is happening under the  current one.\n\nwe use zindex\n to make the leave page animation beyond the previous page but met performance issue in mobile\n\n\nbeg author provide an new transition mode:  put\n the new router view after or before the current router view, then we don’t need to use zindex to control  the view visible\n which has issue in mobile side\n\n\n :octocat: [From gitme iOS](http://flutterchina.club/app/gm.html)","Url":"https://github.com/vuejs/vue-router/issues/2864","RelatedDescription":"Closed issue \"vue router transition leave animation performance issue in mobile\" (#2864)"},{"Id":"475415506","IsPullRequest":false,"CreatedAt":"2019-08-01T00:34:56","Actor":"philBrown","Number":"2863","RawContent":null,"Title":"Improve history mode server configuration documentation to include non-root publicPath","State":"open","Body":"### What problem does this feature solve?\r\nThe documentation for [HTML5 History Mode - Example Server Configurations](https://router.vuejs.org/guide/essentials/history-mode.html#example-server-configurations) assumes all apps are running at the document root (ie `/`). Apps using a non-root [`publicPath`](https://cli.vuejs.org/config/#publicpath) are going to struggle with these config examples.\r\n\r\n### What does the proposed API look like?\r\nUpdate the examples to include `<publicPath>` placeholders, eg\r\n\r\nnginx\r\n```\r\nlocation <publicPath> {\r\n  try_files $uri $uri/ <publicPath>/index.html;\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2863","RelatedDescription":"Open issue \"Improve history mode server configuration documentation to include non-root publicPath\" (#2863)"},{"Id":"474781293","IsPullRequest":true,"CreatedAt":"2019-07-30T19:29:54","Actor":"Mighty683","Number":"2862","RawContent":null,"Title":"feat: return a promise with push and replace","State":"open","Body":"Closing(#1769)\r\n\r\nChanging behaviour of `push` `replace` to return promise when no callback is provided.\r\n","Url":"https://github.com/vuejs/vue-router/pull/2862","RelatedDescription":"Open PR \"feat: return a promise with push and replace\" (#2862)"},{"Id":"472320040","IsPullRequest":false,"CreatedAt":"2019-07-24T14:36:39","Actor":"gebilaofan","Number":"2861","RawContent":null,"Title":"路由切换添加scrollBehavior会出现横向滚动条","State":"closed","Body":"### What problem does this feature solve?\r\n在添加scrollBehavior后，路由切换的时候底部会出现一个横向滚动条(我加了路由动画)一闪而过。\r\n\r\n### What does the proposed API look like?\r\n不要横向的滚动条\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2861","RelatedDescription":"Closed issue \"路由切换添加scrollBehavior会出现横向滚动条\" (#2861)"},{"Id":"471469668","IsPullRequest":false,"CreatedAt":"2019-07-23T07:03:26","Actor":"Max-Law","Number":"2860","RawContent":null,"Title":"子路由嵌套，在一些安卓机型的微信web中切换列表会出现$router.push()跳转失效","State":"closed","Body":"### Version\r\n3.0.7\r\n\r\n### Reproduction link\r\n[https://eoatestdev.sscc.com/sscc-ow-mobile-web/webstatic/weixin/index.html#/inquirePage/inquireList](https://eoatestdev.sscc.com/sscc-ow-mobile-web/webstatic/weixin/index.html#/inquirePage/inquireList)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n在安卓微信（android^8.0重现频繁）中打开这个链接，关注测试环境的公众号并找我要测试账号就可进入列表。当你一直切换底部的三个tab后，再次点击列表的详情跳转将无任何反应。\r\n\r\n首页的代码概要：\r\n```\r\n    <keep-alive>\r\n      <router-view class=\"mid\" :search=\"searchData\"></router-view>\r\n    </keep-alive>\r\n    <footer>\r\n      <router-link\r\n        v-for=\"item in tab\"\r\n        :key=\"item.name\"\r\n        :to=\"`/inquirePage/${item.name}`\"\r\n      >{{item.text}}</router-link>\r\n    </footer>\r\n```\r\n\r\n子路由中的代码概要：\r\n```\r\n<div name=\"我的账单\">\r\n    <Refersh :callback=\"getList\" :option=\"option\" :check=\"check\" ref=\"myBuillRefersh\">\r\n      <ul>\r\n        <li v-for=\"item in items\" :key=\"item.uuid\">\r\n          <router-link :to=\"goTo(item.uuid,item.billStatus)\">\r\n            <div class=\"title\">{{item.billName}}</div>\r\n          </router-link>\r\n        </li>\r\n      </ul>\r\n    </Refersh>\r\n  </div>\r\n```\r\n\r\n### What is expected?\r\n切换tab依旧能正常跳转详情页\r\n\r\n### What is actually happening?\r\n频繁切换tab后不能正常跳转详情页\r\n\r\n---\r\n个人debug过程：\r\n首先我怀疑是因为我用better-scroll导致没有触发点击事件，然而我在最外层用事件委托发现是触发了点击事件只是$router.push()没反应。\r\n后来我从 @click 改到 v-on:click.stop 再改到<router-link>来触发还是不行。\r\n再后来我查issue，他们说vue2.6.9的版本也有click的冒泡问题，我测试了2.9.10与2.5.x的版本依旧出现。\r\n同时，我进入详情再用安卓物理返回键回到列表，有时也会出现点击不太跳转的情况。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2860","RelatedDescription":"Closed issue \"子路由嵌套，在一些安卓机型的微信web中切换列表会出现$router.push()跳转失效\" (#2860)"},{"Id":"470882500","IsPullRequest":false,"CreatedAt":"2019-07-22T04:08:52","Actor":"liaoxuewei","Number":"2859","RawContent":null,"Title":"keep-alive问题？","State":"closed","Body":"```\r\n<keep-alive>\r\n  <router-view v-if=\"$route.meta.keepAlive\"></router-view>\r\n</keep-alive>\r\n<router-view v-if=\"!$route.meta.keepAlive\"></router-view>\r\n\r\n```\r\n本人采用这种做法来实现缓存功能，但是有时可以，有时不行，经过多次测试，发现似乎是Route的层级问题，我的路由定义是：\r\n\r\n```\r\n{\r\n  id: 1,\r\n  ...\r\n  path: \"xxx\",\r\n  children:\r\n  [\r\n    {\r\n      id: 2,\r\n      ...\r\n      path: \"xxx\",\r\n      children:\r\n      [\r\n        {\r\n          id: 3,\r\n          ...\r\n          path: \"xxx\",\r\n          meta: {\r\n            keepAlive: true // 需要被缓存\r\n          },\r\n          children:\r\n          [\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n```\r\nid=3的这个无法缓存，id=2可以缓存（即树的第二级可以缓存，第三级及以后不能缓存）。\r\n这个是不是BUG啊？按理不应该局限这个吧？","Url":"https://github.com/vuejs/vue-router/issues/2859","RelatedDescription":"Closed issue \"keep-alive问题？\" (#2859)"},{"Id":"470676774","IsPullRequest":true,"CreatedAt":"2019-07-20T16:29:28","Actor":"kevinkhill","Number":"2858","RawContent":null,"Title":"Update README.md","State":"closed","Body":"caught a typo","Url":"https://github.com/vuejs/vue-router/pull/2858","RelatedDescription":"Closed or merged PR \"Update README.md\" (#2858)"},{"Id":"469738414","IsPullRequest":false,"CreatedAt":"2019-07-18T12:25:43","Actor":"wizardnet972","Number":"2857","RawContent":null,"Title":"Can't pass data to component from beforeRouteEnter only after component is initialized","State":"closed","Body":"### Version\r\n3.0.7\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-typescript-example-cb9o0](https://codesandbox.io/s/vue-typescript-example-cb9o0)\r\n\r\n### Steps to reproduce\r\nOpen the reproduction.\r\nopen the console.\r\nThen click on the link: go to page.\r\n\r\ncheck the console log.\r\n\r\n### What is expected?\r\nconsole log object\r\n\r\n### What is actually happening?\r\nconsole log undefined.\r\n\r\n---\r\nI think because next function happens after the component is initialized and in setTimeout((), 16) I can't be able to pass to its props before the component is executed.\r\n\r\nI think right now is weird behavior for the router. its miss the expected guard/resolve behavior.\r\n\r\nSo this is why I got undefined at the getter function.\r\n\r\nAny idea how to solve this issue?\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2857","RelatedDescription":"Closed issue \"Can't pass data to component from beforeRouteEnter only after component is initialized\" (#2857)"},{"Id":"469624614","IsPullRequest":false,"CreatedAt":"2019-07-18T08:00:27","Actor":"q379257013","Number":"2856","RawContent":null,"Title":"为什么要用 resetRouter， 请问他解决什么问题了， 一直没有明白了？ ","State":"closed","Body":"","Url":"https://github.com/vuejs/vue-router/issues/2856","RelatedDescription":"Closed issue \"为什么要用 resetRouter， 请问他解决什么问题了， 一直没有明白了？ \" (#2856)"},{"Id":"469374275","IsPullRequest":true,"CreatedAt":"2019-07-18T06:47:43","Actor":"darrylhein","Number":"2855","RawContent":null,"Title":"Adding periods in docs","State":"closed","Body":"very minor\r\n","Url":"https://github.com/vuejs/vue-router/pull/2855","RelatedDescription":"Closed or merged PR \"Adding periods in docs\" (#2855)"},{"Id":"469283566","IsPullRequest":false,"CreatedAt":"2019-07-17T15:21:55","Actor":"atrueresistance","Number":"2854","RawContent":null,"Title":"Why does vue.js report 404 route in production, but not development?","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://stackoverflow.com/questions/57013982/why-does-vue-js-report-404-route-in-production-but-not-development](https://stackoverflow.com/questions/57013982/why-does-vue-js-report-404-route-in-production-but-not-development)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nRunning npm run serve I can visit auth/login, but after npm run build the server returns a 404 on auth/login.\r\n\r\nI get a 404 when going to https://example.com/auth/login but navigating to https://example.com/address-records works just fine. It seems as if only something that is more than a single / deep returns a 404.\r\n\r\nHere is the router code\r\n\r\n```\r\nlet router = new Router({\r\n  mode: \"history\",\r\n  base: process.env.BASE_URL,\r\n  routes: [\r\n    {\r\n      path: \"/\",\r\n      name: \"home\",\r\n      component: Home\r\n    },\r\n    {\r\n      path: \"/auth/login\",\r\n      name: \"Login\",\r\n      component: Login\r\n    },\r\n    {\r\n      path: \"/address-records\",\r\n      name: \"Address\",\r\n      component: Address\r\n    }\r\n  ]\r\n});\r\n```\r\n\r\nIs there something special I need to be doing with Nginx? I have it setup with similar searched questions.\r\n\r\n```\r\n location / {\r\n        try_files $uri $uri/ /index.html;\r\n }\r\n location @rewrites {\r\n         rewrite ^(. )$ /index.html last;\r\n      }\r\n\r\n location ~* \\.(?:ico|css|js|gif|jpe?g|png)$ {\r\n         # Some basic cache-control for static files to be sent to the browser\r\n         expires max;\r\n         add_header Pragma public;\r\n         add_header Cache-Control \"public, must-revalidate, proxy-revalidate\";\r\n  }\r\n```\r\n\r\n### What is expected?\r\n200 status code from auth/login in production\r\n\r\n### What is actually happening?\r\n404 status code from auth/login in production\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2854","RelatedDescription":"Closed issue \"Why does vue.js report 404 route in production, but not development?\" (#2854)"},{"Id":"469007379","IsPullRequest":true,"CreatedAt":"2019-07-17T06:49:12","Actor":"graup","Number":"2853","RawContent":null,"Title":"Add named exports RouterLink, RouterView to es modules","State":"closed","Body":"#1976\r\n","Url":"https://github.com/vuejs/vue-router/pull/2853","RelatedDescription":"Closed or merged PR \"Add named exports RouterLink, RouterView to es modules\" (#2853)"},{"Id":"468804144","IsPullRequest":false,"CreatedAt":"2019-07-16T18:36:51","Actor":"rSammy","Number":"2852","RawContent":null,"Title":"Cannot use router link with @contextmenu","State":"closed","Body":"Hello,\r\n\r\nI figured it's impossible to use @contextmenu event with router-link.\r\n\r\nI first thought I did something wrong before realizing I didn't touch this file, so there shouldn't be any problem with contextmenu.\r\n\r\nBut then I remembered @contextmenu was working when I used div before my previous changes.\r\n\r\n**Line 483** I found this function in **vue-router-esm.js**\r\nI guess instead of just \"return\", the router should emit @contextmenu event or something like this, am I wrong ?\r\n\r\n```\r\nfunction guardEvent (e) {\r\n  // don't redirect with control keys\r\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\r\n  // don't redirect when preventDefault called\r\n  if (e.defaultPrevented) { return }\r\n  // don't redirect on right click\r\n  if (e.button !== undefined && e.button !== 0) { return }\r\n  // don't redirect if `target=\"_blank\"`\r\n  if (e.currentTarget && e.currentTarget.getAttribute) {\r\n    var target = e.currentTarget.getAttribute('target');\r\n    if (/\\b_blank\\b/i.test(target)) { return }\r\n  }\r\n  // this may be a Weex event which doesn't have this method\r\n  if (e.preventDefault) {\r\n    e.preventDefault();\r\n  }\r\n  return true\r\n}\r\n```","Url":"https://github.com/vuejs/vue-router/issues/2852","RelatedDescription":"Closed issue \"Cannot use router link with @contextmenu\" (#2852)"},{"Id":"468772602","IsPullRequest":true,"CreatedAt":"2019-07-16T17:39:50","Actor":"posva","Number":"2851","RawContent":null,"Title":"fix(hash): correctly place query after first hash","State":"closed","Body":"Fixes #2125 \r\n\r\n<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2851","RelatedDescription":"Closed or merged PR \"fix(hash): correctly place query after first hash\" (#2851)"},{"Id":"468535290","IsPullRequest":false,"CreatedAt":"2019-07-16T09:07:44","Actor":"chenguzhen87","Number":"2850","RawContent":null,"Title":"在iphone浏览器下hash路由问题","State":"closed","Body":"### Version\r\n3.0.1\r\n\r\n### Reproduction link\r\n[http://www.lulutopic.com/web/#/login](http://www.lulutopic.com/web/#/login)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1、设置hash路由\r\n2、在iphone下打开带hash路由\r\n3、点击浏览器‘复制’按纽\r\n4、粘贴地址\r\n\r\n### What is expected?\r\n粘贴地址带上hash部分\r\n\r\n### What is actually happening?\r\nhash地址丢失\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2850","RelatedDescription":"Closed issue \"在iphone浏览器下hash路由问题\" (#2850)"},{"Id":"468529272","IsPullRequest":false,"CreatedAt":"2019-07-16T08:54:06","Actor":"chenguzhen87","Number":"2849","RawContent":null,"Title":"在iphone浏览器下hash路由问题","State":"closed","Body":"在浏览器中点击复制链接，但是复制出来的链接hash部分丢失\r\n","Url":"https://github.com/vuejs/vue-router/issues/2849","RelatedDescription":"Closed issue \"在iphone浏览器下hash路由问题\" (#2849)"},{"Id":"468518712","IsPullRequest":false,"CreatedAt":"2019-07-16T08:32:21","Actor":"zhengxsFE","Number":"2848","RawContent":null,"Title":"createHref 方法能否变成公共方法","State":"closed","Body":"### What problem does this feature solve?\r\n**场景一：**\r\n\r\n我的商城 base 是 /h5/shop/:shopId ( node 路由 )\r\n\r\nMy mall 'base' is 'h5/shop/: shopId' (node routing)\r\n\r\n\r\n点击购物车需要跳转到登录页，但是 fullPath 拿到的 path 不包含 base 的内容\r\n\r\nClick on the shopping cart to jump to the login page, but the 'path' of 'fullPath' does not contain the content of 'base'.\r\n\r\n\r\n每次都手动拼接，希望能变成一个公共方法，（ps: 应用有多个，目前左右一个函数在使用）\r\n\r\nHope to make this method public\r\n\r\n\r\n**场景二：**\r\n\r\n购买成功页需要生成海报，海报的地址指向商品详情页，需要生成 url 地址\r\n\r\nBusiness needs to generate URLs for other pages\r\n\r\n\r\n\r\n### What does the proposed API look like?\r\n```javascript\r\n/**\r\n * url join\r\n *\r\n * @param {String|Object} location\r\n * @param {Object} [options=null]\r\n * @param {Boolean} [options.base=false]\r\n *\r\n * @returns {String|Null}\r\n */\r\nrouter.url(location, options?)\r\n\r\n// -> /home\r\nrouter.url('home')\r\n\r\n// -> /h5/shop/3/home\r\nrouter.url('home', {\r\n  base: true\r\n})\r\n\r\n// -> /h5/shop/3/home\r\nrouter.url({ path: 'home' }, {\r\n  base: true\r\n})\r\n\r\n// -> /h5/shop/3/member/123\r\nrouter.url({ name: 'member', params: { memberId: '123' } }, {\r\n  base: true\r\n})\r\n\r\n// -> /h5/shop/3/products?sort=date\r\nrouter.url({ path: 'products', query: { sort: 'date' } }, {\r\n  base: true\r\n})\r\n```\r\n\r\n\r\n```javascript\r\n// 或者 route 添加 href 字段\r\nroute.href = '/h5/shop/1/shopping-cart'\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2848","RelatedDescription":"Closed issue \"createHref 方法能否变成公共方法\" (#2848)"},{"Id":"467233641","IsPullRequest":false,"CreatedAt":"2019-07-12T08:40:45","Actor":"Rolanddoda","Number":"2847","RawContent":null,"Title":"Visiting another page immediately creates the respective component, before disposing the component of the previous page. ","State":"closed","Body":"### Version\r\n3.0.7\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vuex-register-unregister-module-roli-roli-ct4kz](https://codesandbox.io/s/vuex-register-unregister-module-roli-roli-ct4kz)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. When the page loads you are in the home component (/ route)\r\n2. Click the Contact button to navigate to the contact component (/contact route)\r\n3. Observe the error in the console.\r\n\r\nIn the Home and Contact components (or pages) I use store.registerModule and store.unregisterModule to dynamically register/unregister the same module.\r\n\r\n### What is expected?\r\nNo error should be shown. If you go to the Home later About and later Contact page (and vise versa) everything works as expected.\r\n\r\n### What is actually happening?\r\nVue router runs the new component before destroying the old one.\r\n\r\n---\r\nInitially I thought was a vuex issue and I opened one [here](https://github.com/vuejs/vuex/issues/1580). But then I saw that is a vue router issue. I tried to find if that issue already exists and couldn't find something.\r\n\r\nAs a workaround I can use transition mode out-in. And everything works\r\n```js\r\n    <transition mode=\"out-in\">\r\n      <router-view></router-view>\r\n    </transition>\r\n```\r\n\r\nbut to me, it doesn't makes sense to mount a component, before destroying the other one. What I am missing?\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2847","RelatedDescription":"Closed issue \"Visiting another page immediately creates the respective component, before disposing the component of the previous page. \" (#2847)"},{"Id":"466813370","IsPullRequest":false,"CreatedAt":"2019-07-11T10:42:06","Actor":"up-chen","Number":"2846","RawContent":null,"Title":"路由返回错误","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\na页面使用router.push跳到b页面，b页面在beforeEnter钩子里面重定向到了c页面（replace），从c页面返回时直接到了空页面，没有返回到a页面\r\n![image](https://user-images.githubusercontent.com/20765130/61044509-65bd2180-a40b-11e9-9a5d-2bf93aae8e51.png)\r\n![image](https://user-images.githubusercontent.com/20765130/61044538-7372a700-a40b-11e9-99ad-58088c658851.png)\r\n","Url":"https://github.com/vuejs/vue-router/issues/2846","RelatedDescription":"Closed issue \"路由返回错误\" (#2846)"},{"Id":"466782855","IsPullRequest":false,"CreatedAt":"2019-07-11T09:42:58","Actor":"ZhiGang-Fang","Number":"2845","RawContent":null,"Title":"There's no routing rules in history mode that don't match","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\n\r\nIn history mode, no routing rules can be matched, only: path: '/register' can be matched, while path:' /member/register' cannot be matched, nor can dynamic routing attempts be matched\r\n\r\n\r\n`\r\n{\r\n        path: '/member/register',\r\n        name: 'register',\r\n        component: () => import(/* webpackChunkName: \"register\" */ './../../views/member/register.vue'),\r\n        meta: {\r\n          title: '会员注册'\r\n        }\r\n    }\r\n\r\n\r\n{\r\n    path: '/:member',\r\n    component: { render: h => h('router-view') },\r\n    children: [ \r\n      {\r\n        path: 'register',\r\n        name: 'register',\r\n        component: () => import(/* webpackChunkName: \"register\" */ './../../views/member/register.vue'),\r\n        meta: {\r\n          title: '会员注册'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n`\r\n\r\nIn the hash mode, the error is reported as follows: ‘Uncaught SyntaxError: Unexpected token <’\r\n\r\n\r\n\r\n","Url":"https://github.com/vuejs/vue-router/issues/2845","RelatedDescription":"Closed issue \"There's no routing rules in history mode that don't match\" (#2845)"},{"Id":"465619547","IsPullRequest":false,"CreatedAt":"2019-07-09T07:34:18","Actor":"lk8888","Number":"2844","RawContent":null,"Title":"typescript error Property 'matcher' does not exist on type 'VueRouter'.","State":"closed","Body":"<!--\r\nIMPORTANT: Please use the following link to create a new issue:\r\n\r\n  https://new-issue.vuejs.org/?repo=vuejs/vue-router\r\n\r\nIf your issue was not created using the app above, it will be closed immediately.\r\n-->\r\nthis is my code:\r\nconst router = createRouter();\r\n\r\nexport function resetRouter() {\r\n  const newRouter = createRouter();\r\n  router.matcher = newRouter.matcher; // reset router\r\n}\r\nthe error:\r\nTS2339: Property 'matcher' does not exist on type 'VueRouter'.","Url":"https://github.com/vuejs/vue-router/issues/2844","RelatedDescription":"Closed issue \"typescript error Property 'matcher' does not exist on type 'VueRouter'.\" (#2844)"},{"Id":"465472063","IsPullRequest":false,"CreatedAt":"2019-07-09T07:03:50","Actor":"iFgR","Number":"2843","RawContent":null,"Title":"How to extract only components RouterView and RouterLink?","State":"closed","Body":"### What problem does this feature solve?\r\nLoad only the *router-view* and *router-link* will give me the ability to use external VueRouter instance.\r\n\r\nI'm working with web-components and I have an AppShell with VueRouter and I'm using a web-component inside them with another VueRouter.\r\nEverything inside the web-component are working fine but my AppShell can't load the router components.\r\n\r\n### What does the proposed API look like?\r\nI think something like **const { RouterView, RouterLink } = VueRouter** can help\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2843","RelatedDescription":"Closed issue \"How to extract only components RouterView and RouterLink?\" (#2843)"},{"Id":"465416375","IsPullRequest":false,"CreatedAt":"2019-07-08T19:13:27","Actor":"koszar93","Number":"2842","RawContent":null,"Title":"Best way to create vue-router - Online Shop","State":"closed","Body":"i have a little problem with prepare vue-router to my Online Shop. I have two level product category tree view with parent and child item.\r\nMy category view, is built dynamic of data get from the database:\r\n\r\n>     PARENT\r\n>     – CHILD 1\r\n>     – CHILD 2\r\n>     PARENT 2\r\n>     – CHILD 1\r\n>     – CHILD 2\r\n>     PARENT 3\r\n>     - CHILD 1\r\n>     PARENT 4\r\n>     - CHILD 1\r\n>     - CHILD 2\r\n> \r\n\r\netc.\r\nI don’t know how to prepare dynamic router. Now, i do something like that:\r\n\r\n```\r\n    {\r\n            name: 'Produkty',\r\n            display: true,\r\n            meta: { requiresAuth: false, menuType: 'topNav' },\r\n            path: '/product/:categoryId?/:subCategoryId?',\r\n            component: () => import(/* webpackChunkName: \"home\" */ './views/home/product')\r\n          },\r\n          {\r\n            name: 'productDetail',\r\n            display: false,\r\n            meta: { requiresAuth: false },\r\n            path: '/product/:categoryId/:subCategoryId/:productId',\r\n            component: () => import(/* webpackChunkName: \"home\" */ './views/home/product/Details')\r\n          }\r\n```\r\n\r\nI don't know is this a good way? Maybe anyone have better idea for this?\r\nI also want to implement dynamic breadcrumbs base on router path.\r\n\r\nAnd other question:\r\nHow to redirect from: http://localhost/produkt/1234/523/123(productId) to http://localhost/product_name.html for example ? Or.. id from url chage to http://localhost/parent_1/child_1/product_1 ??","Url":"https://github.com/vuejs/vue-router/issues/2842","RelatedDescription":"Closed issue \"Best way to create vue-router - Online Shop\" (#2842)"},{"Id":"464976350","IsPullRequest":true,"CreatedAt":"2019-07-07T17:50:43","Actor":"debs-obrien","Number":"2841","RawContent":null,"Title":"docs: update active class explanation","State":"open","Body":"<!--\r\nPlease make sure to read the Pull Request Guidelines:\r\nhttps://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines\r\n-->\r\n","Url":"https://github.com/vuejs/vue-router/pull/2841","RelatedDescription":"Open PR \"docs: update active class explanation\" (#2841)"},{"Id":"464165688","IsPullRequest":false,"CreatedAt":"2019-07-04T09:33:08","Actor":"ykushev","Number":"2840","RawContent":null,"Title":"Add afterRouteEnter guard","State":"open","Body":"### What problem does this feature solve?\r\nI want execute one function in component after each routing (enter route, reused in the new route)\r\n\r\n### What does the proposed API look like?\r\nvariant 1:\r\n```\r\nbeforeRouteUpdate (to, from, next) {\r\n        console.log('page category beforeRouteUpdate');\r\n        next(() => {\r\n            // this don't calling\r\n            console.log('page category beforeRouteUpdate next');\r\n            this.$store.dispatch('catalog/exec');\r\n        });\r\n    },\r\n```\r\n\r\nvariant 2: add hook named \"afterRouteUpdate\" that will calling after we enter in route and after each time we navigating in this route (foo/2 -> foo/3)\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2840","RelatedDescription":"Open issue \"Add afterRouteEnter guard\" (#2840)"},{"Id":"463845211","IsPullRequest":false,"CreatedAt":"2019-07-03T16:57:38","Actor":"juanescarraga","Number":"2839","RawContent":null,"Title":"Color active state on link does not return to color","State":"closed","Body":"### Version\r\n3.0.2\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/embed/vue-template-lgn63](https://codesandbox.io/embed/vue-template-lgn63)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nOpen the project in the browser.\r\nThe link with the name Say Hello appears in the browser.\r\nThe default color is green of the Say Hello link is green, when hovering or clicking on the link the color changes from green to gray.\r\nThe gray color remains in the Say Hello link, the expected behavior is that once you click and refresh the page the color returns to the original which is green.\r\nIn tests carried out in development environments, low resolutions are being presented with smart phone views.\r\n\r\n### What is expected?\r\nFix the original color state bug, if the mouse cursor is positioned or the link is touched change color and return to its original state.\r\n\r\n### What is actually happening?\r\nThe color of the link in desktop resolutions works correctly when you hover over the link or click. In low resolutions and smart phones when touching the link changes the active state color and does not return to the original color of the normal state.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2839","RelatedDescription":"Closed issue \"Color active state on link does not return to color\" (#2839)"},{"Id":"462388128","IsPullRequest":true,"CreatedAt":"2019-07-02T20:09:24","Actor":"Alexeykhr","Number":"2838","RawContent":null,"Title":"Handle Promise rejection in guards (fix #2833)","State":"closed","Body":"#2833","Url":"https://github.com/vuejs/vue-router/pull/2838","RelatedDescription":"Closed or merged PR \"Handle Promise rejection in guards (fix #2833)\" (#2838)"},{"Id":"461944569","IsPullRequest":false,"CreatedAt":"2019-06-28T09:32:51","Actor":"liho00","Number":"2837","RawContent":null,"Title":"External JavaScript working when changing route","State":"closed","Body":"### What problem does this feature solve?\r\nI am currently facing an issue with the external javascipt stopping when changing routes.\r\n\r\nFor example, when I start from / (root page), then click /shop, then click back / (root page), the external javascript stop working (Eg. plugin.js stop).\r\n\r\nI tried to use a plugin called vue-plugin-load-script. In order to dynamically load external javascript in main.js but the result is still the same, external javascript stops working when changing routes.\r\n\r\nthis feature should allow the javascript works when changing routes. \r\n\r\n### What does the proposed API look like?\r\nThe external javascript is place in index.html\r\n\r\nindex.html\r\n```\r\n\r\n<html>\r\n\r\n<body>\r\n\r\n...\r\n\r\n</body>\r\n\r\n<script src=\"<%= BASE_URL %>js/plugins.js\"></script>\r\n\r\n</html>\r\n```\r\n\r\nroute.js\r\n```\r\n\r\n{\r\n\r\npath: '/',\r\n\r\nname: 'home',\r\n\r\ncomponent: Home\r\n\r\n},\r\n\r\n{\r\n\r\npath: '/shop',\r\n\r\nname: 'shop',\r\n\r\ncomponent: Shop\r\n\r\n},\r\n```\r\n\r\nApp.vue\r\n```\r\n\r\n<template>\r\n\r\n<div id=\"app\">\r\n\r\n<router-view />\r\n\r\n</div>\r\n\r\n</template>\r\n```\r\n\r\nExternal javascript is provided globally, so each page can be used. I wish to request a feature that the same external javascript works in different paths.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2837","RelatedDescription":"Closed issue \"External JavaScript working when changing route\" (#2837)"},{"Id":"461942087","IsPullRequest":false,"CreatedAt":"2019-06-28T09:23:21","Actor":"liho00","Number":"2836","RawContent":null,"Title":"External JavaScript stop working when changing route","State":"closed","Body":"I am currently facing an issue with the external javascipt stopping when changing routes.\r\n\r\nFor example, when I start from / (root page), then click /shop, then click back / (root page), the external javascript stop working (Eg. plugin.js stop).\r\n\r\nI tried to use a plugin called vue-plugin-load-script. In order to dynamically load external javascript in main.js but the result is still the same, external javascript stops working when changing routes.\r\n\r\nThe external javascript is place in index.html\r\n\r\nindex.html\r\n```\r\n\r\n<html>\r\n\r\n<body>\r\n\r\n...\r\n\r\n</body>\r\n\r\n<script src=\"<%= BASE_URL %>js/plugins.js\"></script>\r\n\r\n</html>\r\n```\r\n\r\nroute.js\r\n```\r\n\r\n{\r\n\r\npath: '/',\r\n\r\nname: 'home',\r\n\r\ncomponent: Home\r\n\r\n},\r\n\r\n{\r\n\r\npath: '/shop',\r\n\r\nname: 'shop',\r\n\r\ncomponent: Shop\r\n\r\n},\r\n```\r\n\r\nApp.vue\r\n```\r\n\r\n<template>\r\n\r\n<div id=\"app\">\r\n\r\n<router-view />\r\n\r\n</div>\r\n\r\n</template>\r\n```\r\n\r\nExternal javascript is provided globally, so each page can be used. I wish to request a feature that the same external javascript works with different paths.\r\n","Url":"https://github.com/vuejs/vue-router/issues/2836","RelatedDescription":"Closed issue \"External JavaScript stop working when changing route\" (#2836)"},{"Id":"461913917","IsPullRequest":false,"CreatedAt":"2019-06-28T08:20:25","Actor":"liubin595338764","Number":"2835","RawContent":null,"Title":"base是否能当成params参数来配置？","State":"closed","Body":"### Version\r\n3.0.3\r\n\r\n### Reproduction link\r\n[https://www](https://www)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n现在`base`只能写死为一个固定的字符串`string`\r\n\r\n### What is expected?\r\n希望在history模式的时候可以把`base`当成`params`来处理，\r\n\r\n对于多公司访问通一个应用的时候，这样的链接比较好看，\r\n\r\n比如：\r\n```js\r\nexport default new Router({\r\n    mode: 'history',\r\n    base: '/:company',\r\n    routes: routes\r\n})\r\n```\r\n\r\n### What is actually happening?\r\n现在`base`只能写死为一个固定的字符串`string`\r\n\r\n---\r\n希望能尽快支持哦\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vue-router/issues/2835","RelatedDescription":"Closed issue \"base是否能当成params参数来配置？\" (#2835)"}],"ResultType":"GitHubIssue"},"Vuex-Issues":{"Issues":[{"Id":"474320880","IsPullRequest":false,"CreatedAt":"2019-07-30T01:02:13","Actor":"Rkaede","Number":"1591","RawContent":null,"Title":"Pass payload by value, not by reference","State":"open","Body":"### What problem does this feature solve?\r\nCurrently the payload passed to mutation functions is by reference, not value. This allows the mutation functions to directly update the payload data rather than the state object.\r\n\r\nAs an example see [editTodo() in the todo demo](https://github.com/vuejs/vuex/blob/91f3e69ed9e290cf91f8885c6d5ae2c97fa7ab81/examples/todomvc/store/mutations.js#L17):\r\n\r\n```javascript\r\neditTodo (state, { todo, text = todo.text, done = todo.done }) {\r\n  todo.text = text\r\n  todo.done = done\r\n}\r\n```\r\n\r\nThere are 2 downsides to this.\r\n\r\nThe first is that the function is mutating the payload and not the state. It is not clear here what is being mutated. We now need to traverse all around the app to find out.\r\n\r\nIf the payload was instead passed by value then updating the value would not actually do anything. All mutation functions would need to update the state object. This would make vuex stores more explicit and understandable as well as ensure there is a clear boundary between it and the app. \r\n\r\nThe second is that Vuex plugins cannot log the mutations to a server and replay them back later. Here is a pseudocode example:\r\n\r\n```javascript\r\n// replaying back mutation logs\r\nlet logs = await getLogsFromServer();\r\nfor (log in logs) {\r\n  // any editTodo mutations passed in below will not work\r\n  // as the mutation will update the \"log\" object instead of \r\n  // the actual todo in the state object\r\n  this.store.commit(log.type, log.payload);\r\n}\r\n```\r\n\r\nI'm working on a plugin that does this (similar to [redux-vcr](https://github.com/joshwcomeau/redux-vcr)) and it would be great if there was a systematic guarantee that it would work with all Vuex stores. \r\n\r\n### What does the proposed API look like?\r\nExample - No changes needed\r\n```javascript\r\nmutations: {\r\n  // current: n is passed by reference\r\n  increment (state, n) { \r\n    state.count  = n\r\n  }\r\n}\r\n\r\nmutations: {\r\n  // proposed: n is passed by value\r\n  increment (state, n) { \r\n    state.count  = n\r\n  }\r\n}\r\n```\r\n\r\nExample B - editTodo\r\n\r\n```javascript\r\nmutations: {\r\n  // current - can update payload\r\n  editTodo (state, { todo, text = todo.text, done = todo.done }) {\r\n    todo.text = text\r\n    todo.done = done\r\n  }\r\n}\r\n\r\nmutations: {\r\n  // proposed - with pass by value we \r\n  // must update the state object\r\n  editTodo (state, todo) {\r\n     const index = state.todos.findIndex(t => t.id === todo.id);\r\n     state.todos[index] = todo;\r\n  }\r\n}\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1591","RelatedDescription":"Open issue \"Pass payload by value, not by reference\" (#1591)"},{"Id":"473829497","IsPullRequest":false,"CreatedAt":"2019-07-29T03:15:47","Actor":"juanzi957","Number":"1590","RawContent":null,"Title":"vuex3.1.1版本存在内存泄漏的问题","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://forum.vuejs.org/t/vux/66236](https://forum.vuejs.org/t/vux/66236)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n最近我在用vue-cli3 vuex websocket构建一个项目，发现vuex存在内存泄漏的问题，但是不知道怎么解决，请大家帮忙看下，步骤如下：\r\n1.用vue-cli3创建一个空项目；\r\n2.服务端用node搭建一个简单的每隔50ms用websocket给客户端发消息的服务；\r\n3.客户端每次接收到服务端发送过来的数据都通过vuex来管理，每次都commit（或者dispatch我也试过，效果一样）到vuex管理去，\r\n4.运行十几分钟看不出内存泄漏的问题，运行个把小时就能看出一点，JS栈内存一直在增加，运行一晚上之后，浏览器完全崩溃了；\r\n5.这是服务端发送一个比较小的数据，发送一个很大的数据浏览器崩溃的就更快。\r\n下面是我的数据和代码：\r\n服务端发送的数据：\r\nvar abc = {\r\n‘aaa’: 111,\r\n‘aab’: 1111,\r\n‘aac’: 11111,\r\n‘aad’: 111111,\r\n‘aae’: 1111111,\r\n‘aaf’: 11111111,\r\n‘aag’: 111111111,\r\n‘aah’: 1111111111,\r\n‘aai’: 11111111111\r\n}\r\n\r\n客户端：用VUE-CLI3搭建的空项目，只修改过的Home.vue中的代码，一下代码放在mounted中：\r\nconst webSocketUrl = ‘ws://127.0.0.1:8000’\r\nconst ws = new WebSocket(webSocketUrl)\r\nconst _this = this\r\nws.onmessage = function (ev) {\r\n_this.$store.dispatch(‘setModulesRes’, JSON.parse(ev.data))\r\n}\r\n…\r\n\r\n### What is expected?\r\n不管是以多少频率每秒去更新vuex中的数据，都不应该导致内存泄漏引起浏览器奔溃的情况。\r\n\r\n### What is actually happening?\r\n不管任何时候，内存泄漏都是一个很严重的问题，当遇到需要不断的时时更新vuex中数据的项目，就不能用vue构建了。\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1590","RelatedDescription":"Open issue \"vuex3.1.1版本存在内存泄漏的问题\" (#1590)"},{"Id":"473828352","IsPullRequest":false,"CreatedAt":"2019-07-29T03:10:11","Actor":"juanzi957","Number":"1589","RawContent":null,"Title":"vuex内存泄漏的问题","State":"closed","Body":"https://forum.vuejs.org/t/vux/66236\r\n","Url":"https://github.com/vuejs/vuex/issues/1589","RelatedDescription":"Closed issue \"vuex内存泄漏的问题\" (#1589)"},{"Id":"472762082","IsPullRequest":true,"CreatedAt":"2019-07-25T09:31:31","Actor":"rummanhasnayeen","Number":"1588","RawContent":null,"Title":"intro.md translated into Bengali and added folder","State":"open","Body":"We are a team of four Junior Software Engineers from Bangladesh. Our native language is Bengali and so \r\n we would like to translate the documentation for Vuex into Bengali. \r\nWe have already translated the intro.md in this pull request. If accepted, we will carry on the work of translating the remaining parts of the documentation into Bengali.\r\nPlease review the changes as well as provide the rules and regulations for such contribution in this project.","Url":"https://github.com/vuejs/vuex/pull/1588","RelatedDescription":"Open PR \"intro.md translated into Bengali and added folder\" (#1588)"},{"Id":"472127016","IsPullRequest":false,"CreatedAt":"2019-07-24T10:12:34","Actor":"fvigotti","Number":"1585","RawContent":null,"Title":"add reference (in docs) to static typing libraries available","State":"closed","Body":"### What problem does this feature solve?\r\nstatic typing\r\n\r\n### What does the proposed API look like?\r\nAfter some days with vuex I'm already bored by the lack of refactoring capacity and the slowdown of programming speed when you have to call namespace/method names using strings,\r\nI've already tried with static string references in both methods names and method calls but this is ugly and for big store become also a mess..\r\n\r\nI've found some libraries which brings better typing support to vuex , the best solution obviously would be toadd everything directly in vuex but If you don't find it useful at least I think that a credit in documentation should be added so users we are approaching vuex (which have less knowledge than skilled users which also mantain the docs ) can have an idea of which library choose , and also those library could get more focused support from the community ,\r\n\r\nI vote for this library to get a sort of \"officialization\" as typing library for vuex :\r\nhttps://github.com/championswimmer/vuex-module-decorators\r\n\r\n(the officialization is necessary for the reasons described above), I choose this library because seems to provide the better typed experience even if his documentation is a bit incomplete\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1585","RelatedDescription":"Closed issue \"add reference (in docs) to static typing libraries available\" (#1585)"},{"Id":"472187418","IsPullRequest":false,"CreatedAt":"2019-07-24T09:51:45","Actor":"SergioCrisostomo","Number":"1587","RawContent":null,"Title":"Storing component instances creates a circular reference loop in strict mode","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://jsfiddle.net/Sergio_fiddle/zkrsa4g1/3/](https://jsfiddle.net/Sergio_fiddle/zkrsa4g1/3/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nStore a pointer to a component instance in Vuex with `strict: true`.\r\n\r\n### What is expected?\r\nNo errors. \r\n\r\n### What is actually happening?\r\n> RangeError: Maximum call stack size exceeded\r\n\r\nVuex is adding watchers to all nested properties to warn if there are non-immutable changes inside a object (because of the strict mode help warnings) and does not stop when its entering itself. \r\n\r\nIn other words: when entering a component we can re-enter the store as a component property, and in the store we have a component that has a store etc etc ... we are in a loop\r\n\r\n---\r\nI think either:\r\n - Vuex should officially discourage from saving pointers of instances of Vue components in it\r\n\r\n**or** \r\n\r\n - add a check to stop going deeper if the nested object it the Vuex instance itself\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1587","RelatedDescription":"Open issue \"Storing component instances creates a circular reference loop in strict mode\" (#1587)"},{"Id":"472147077","IsPullRequest":true,"CreatedAt":"2019-07-24T08:26:57","Actor":"rummanhasnayeen","Number":"1586","RawContent":null,"Title":".gitignore update to ignore Intellij IDEA and vscode pr…","State":"open","Body":"…oject files\r\n\r\n.gitignore update to ignore Intellij IDEA project files and vscode project files","Url":"https://github.com/vuejs/vuex/pull/1586","RelatedDescription":"Open PR \".gitignore update to ignore Intellij IDEA and vscode pr…\" (#1586)"},{"Id":"472126314","IsPullRequest":false,"CreatedAt":"2019-07-24T07:36:22","Actor":"fvigotti","Number":"1584","RawContent":null,"Title":"suggestion: add reference (in docs) to static typing libraries available ","State":"closed","Body":"After some days with vuex I'm already bored by the lack of refactoring capacity and the slowdown of programming speed when you have to call namespace/method names using strings,\r\nI've already tried with static string references in both methods names and method calls but this is ugly and for big store become also a mess..\r\n\r\nI've found some libraries which brings better typing support to vuex , the best solution obviously would be toadd everything directly in vuex  but If you don't find it useful at least I think that a credit in documentation should be added so users we are approaching vuex  (which have less knowledge than skilled users which also mantain the docs )  can have an idea of which library choose , and also those library could get more focused support from the community ,\r\n\r\nI vote for this library to get a sort of \"officialization\" as typing library for vuex :\r\nhttps://github.com/championswimmer/vuex-module-decorators\r\n\r\n(the officialization is necessary for the reasons described above),  I choose this library because seems to provide the better typed experience even if his documentation is a bit incomplete \r\n\r\n","Url":"https://github.com/vuejs/vuex/issues/1584","RelatedDescription":"Closed issue \"suggestion: add reference (in docs) to static typing libraries available \" (#1584)"},{"Id":"469975199","IsPullRequest":true,"CreatedAt":"2019-07-18T20:36:22","Actor":"valdezalbertm","Number":"1583","RawContent":null,"Title":"Update README.md","State":"closed","Body":"The URL provided is not existing anymore.","Url":"https://github.com/vuejs/vuex/pull/1583","RelatedDescription":"Closed or merged PR \"Update README.md\" (#1583)"},{"Id":"468913070","IsPullRequest":true,"CreatedAt":"2019-07-16T23:20:37","Actor":"ben-turner","Number":"1582","RawContent":null,"Title":"Update link to flux in README","State":"open","Body":"The current link to flux is broken. Looks like the paths have been updated to not include a file extension.","Url":"https://github.com/vuejs/vuex/pull/1582","RelatedDescription":"Open PR \"Update link to flux in README\" (#1582)"},{"Id":"468441343","IsPullRequest":false,"CreatedAt":"2019-07-16T04:28:09","Actor":"regchiu","Number":"1581","RawContent":null,"Title":"When actions returns promise, the property will be ignored","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vue-template-5rovy](https://codesandbox.io/s/vue-template-5rovy)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n```js\r\nactions: {\r\n    test() {\r\n      let prom = new Promise((resolve) => {\r\n        setTimeout(function(){\r\n          resolve(\"DONE\"); \r\n        }, 3000);\r\n      });\r\n      prom['id'] = 10\r\n      console.log(prom) // Object contains id\r\n      return prom;\r\n    }\r\n  }\r\n```\r\n```js\r\ncreated() {\r\n    let pf = this.$store.dispatch(\"test\");\r\n    console.log(\"PF\", pf); // No id property\r\n    pf.then(res => {\r\n      console.log(res);\r\n    });\r\n  }\r\n```\r\n\r\n### What is expected?\r\nThe properties of the object should be displayed in the console.\r\n\r\n### What is actually happening?\r\nThe properties of the object are ignored.\r\n\r\n---\r\nShare questions from the forum\r\n\r\nhttps://forum.vuejs.org/t/custom-promise-properties-in-actions/\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1581","RelatedDescription":"Open issue \"When actions returns promise, the property will be ignored\" (#1581)"},{"Id":"466821711","IsPullRequest":false,"CreatedAt":"2019-07-12T05:53:05","Actor":"Rolanddoda","Number":"1580","RawContent":null,"Title":"Duplicate getter key: 'something/something' : When register/unregister Vuex module","State":"closed","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codesandbox.io/s/vuex-register-unregister-module-roli-roli-ct4kz](https://codesandbox.io/s/vuex-register-unregister-module-roli-roli-ct4kz)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. When the page loads you are in the home component (`/` route)\r\n2. Click the `Contact` button to navigate to the contact component (`/contact` route)\r\n3. Observe the error in the console.\r\n\r\nIn the Home and Contact  components (or pages) I use `store.registerModule` and `store.unregisterModule` to dynamically register/unregister the same module.\r\n\r\n### What is expected?\r\nNo error should be shown. If you go to the Home later About and later Contact page (and vise versa) everything works as expected.\r\n\r\n### What is actually happening?\r\nAn error is showing in the console that I have duplicate getter keys.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1580","RelatedDescription":"Closed issue \"Duplicate getter key: 'something/something' : When register/unregister Vuex module\" (#1580)"},{"Id":"466177457","IsPullRequest":false,"CreatedAt":"2019-07-10T08:38:57","Actor":"yoyoys","Number":"1579","RawContent":null,"Title":"[Feature Request] mapModule","State":"open","Body":"### What problem does this feature solve?\r\nThis made namespaced module can be use like simple vuex store.\r\n\r\n### What does the proposed API look like?\r\n`store/modules/myModule.ts`\r\n\r\n```ts\r\n\r\nexport const myModule = {\r\n  state: {\r\n    count: 0\r\n  },\r\n  mutations: {\r\n    add(state, payload) {\r\n      state.count = state.count   payload\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n`lib/someLib.ts`\r\n\r\n```ts\r\nimport store from '@/store'\r\n\r\n// the `myModule` is module path\r\nconst myModule = mapModule<IMyModule>(store, 'myModule')\r\n\r\nconsole.log(myModule.state.count) // 0\r\nmyModule.commit('add', 2)\r\nconsole.log(myModule.state.count) // 2\r\n\r\n// for reuse or singleton?\r\nexport myModule\r\n```\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1579","RelatedDescription":"Open issue \"[Feature Request] mapModule\" (#1579)"},{"Id":"465584333","IsPullRequest":false,"CreatedAt":"2019-07-09T05:57:06","Actor":"tinyCucumber","Number":"1578","RawContent":null,"Title":"where will we pass the second param cb for wrappedActionHandler?","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/cucumbers/pen/bPQQeO](https://codepen.io/cucumbers/pen/bPQQeO)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\nin the function registerAction, we will wrap the true handler and push into entry.And the wrapped handler receive two params - payload and cb. But what we can see in function dispatch is that the second param cb will never be passed in.\r\n\r\n### What is expected?\r\nIf the param cb  is useless, remove it.\r\n\r\n### What is actually happening?\r\nThe param cb for wrappedActionHandler is never used;\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1578","RelatedDescription":"Open issue \"where will we pass the second param cb for wrappedActionHandler?\" (#1578)"},{"Id":"465576393","IsPullRequest":false,"CreatedAt":"2019-07-09T05:28:32","Actor":"tinyCucumber","Number":"1577","RawContent":null,"Title":"where will we pass the second param cb for wrappedActionHandler?","State":"closed","Body":"in the function registerAction, we will wrap the true handler and push into entry.And the wrapped handler receive two params - payload and cb. But what we can see in function dispatch is that the second param cb will never be passed in.Can someone answer my doubts?\r\n\r\n**wrappedActionHandler**\r\n\r\n```javascript\r\nfunction registerAction (store, type, handler, local) {\r\n  const entry = store._actions[type] || (store._actions[type] = [])\r\n  entry.push(function wrappedActionHandler (payload, cb) {\r\n    let res = handler.call(store, {\r\n      dispatch: local.dispatch,\r\n      commit: local.commit,\r\n      getters: local.getters,\r\n      state: local.state,\r\n      rootGetters: store.getters,\r\n      rootState: store.state\r\n    }, payload, cb)\r\n    if (!isPromise(res)) {\r\n      res = Promise.resolve(res)\r\n    }\r\n    if (store._devtoolHook) {\r\n      return res.catch(err => {\r\n        store._devtoolHook.emit('vuex:error', err)\r\n        throw err\r\n      })\r\n    } else {\r\n      return res\r\n    }\r\n  })\r\n}\r\n```\r\n\r\n**dispatch**\r\n```javascript\r\n    const {\r\n      type,\r\n      payload\r\n    } = unifyObjectStyle(_type, _payload)\r\n\r\n    const action = { type, payload }\r\n    const entry = this._actions[type]\r\n    if (!entry) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.error(`[vuex] unknown action type: ${type}`)\r\n      }\r\n      return\r\n    }\r\n\r\n    try {\r\n      this._actionSubscribers\r\n        .filter(sub => sub.before)\r\n        .forEach(sub => sub.before(action, this.state))\r\n    } catch (e) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.warn(`[vuex] error in before action subscribers: `)\r\n        console.error(e)\r\n      }\r\n    }\r\n\r\n    const result = entry.length > 1\r\n      ? Promise.all(entry.map(handler => handler(payload)))\r\n      : entry[0](payload)\r\n\r\n    return result.then(res => {\r\n      try {\r\n        this._actionSubscribers\r\n          .filter(sub => sub.after)\r\n          .forEach(sub => sub.after(action, this.state))\r\n      } catch (e) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          console.warn(`[vuex] error in after action subscribers: `)\r\n          console.error(e)\r\n        }\r\n      }\r\n      return res\r\n    })\r\n```\r\n","Url":"https://github.com/vuejs/vuex/issues/1577","RelatedDescription":"Closed issue \"where will we pass the second param cb for wrappedActionHandler?\" (#1577)"},{"Id":"465294713","IsPullRequest":true,"CreatedAt":"2019-07-08T15:53:27","Actor":"hejialianghe","Number":"1576","RawContent":null,"Title":"vuex-cart","State":"closed","Body":"","Url":"https://github.com/vuejs/vuex/pull/1576","RelatedDescription":"Closed or merged PR \"vuex-cart\" (#1576)"},{"Id":"465291851","IsPullRequest":true,"CreatedAt":"2019-07-08T14:32:06","Actor":"hejialianghe","Number":"1575","RawContent":null,"Title":"Create vuex-cart","State":"closed","Body":"1","Url":"https://github.com/vuejs/vuex/pull/1575","RelatedDescription":"Closed or merged PR \"Create vuex-cart\" (#1575)"},{"Id":"465227767","IsPullRequest":true,"CreatedAt":"2019-07-08T12:56:43","Actor":"boomler","Number":"1574","RawContent":null,"Title":"Refactor: extract a method for duplicate environment judgement","State":"closed","Body":"There are 17 times of environment judgement in `store.js`.  Extract it to  `util.js`","Url":"https://github.com/vuejs/vuex/pull/1574","RelatedDescription":"Closed or merged PR \"Refactor: extract a method for duplicate environment judgement\" (#1574)"},{"Id":"463514720","IsPullRequest":true,"CreatedAt":"2019-07-03T02:34:27","Actor":"hugoazevedosoares","Number":"1573","RawContent":null,"Title":"fix(#1571): remove undefined payload from store.dispatch","State":"open","Body":"Fixed the issue #1571\r\n\r\nRunned all tests and they were ok, except for tsc/types that didn't work on my computer, by that was before the change was made. Also, the change has no reason to break this kind of test.\r\n\r\nThe solution was proposed by @gitlab-winnie .","Url":"https://github.com/vuejs/vuex/pull/1573","RelatedDescription":"Open PR \"fix(#1571): remove undefined payload from store.dispatch\" (#1573)"},{"Id":"461385089","IsPullRequest":false,"CreatedAt":"2019-06-27T08:18:24","Actor":"StijnVandermeulen1","Number":"1572","RawContent":null,"Title":"subscribeAction: before and after calls do not wait if we have a promise or await statement inside them.","State":"open","Body":"### What problem does this feature solve?\r\nIf you subscribe to an action an return a promise or use an await statement, the code does not wait for the request to be complete. This is a problem when you implement a component as a plugin. Communication between components can be handled by the subscribeAction. But retrieving data and pushing it into the state using the afore mentioned methods will not result in any data since the service does not wait for it to be completed.\r\n\r\nThis feature would be very usefull for components as plugins that can be fully compartmentalized and plugged into different applications. Configuration retrieval can then be defined in the subscribeAction allowing different implementations over multiple applications.\r\n\r\n### What does the proposed API look like?\r\nExample for before action:\r\n\r\nCurrent code in src/store.js line 132:\r\n\r\n   try {\r\n\r\n      this._actionSubscribers\r\n        .filter(sub => sub.before)\r\n        .forEach(sub => sub.before(action, this.state))\r\n    }\r\n\r\nShould be:\r\n\r\n  try {\r\n\r\n          async function asyncForEach(array, callback) {\r\n             for (let index = 0; index < array.length; index  ) {\r\n                await callback(array[index], index, array);\r\n           }\r\n         }\r\n\r\n         await asyncForEach(this._actionSubscribers\r\n           .filter(function (sub) { return sub.before; }), async function (sub) {\r\n                return await sub.before(action, this$1.state); \r\n           });\r\n        }\r\n\r\ndispatch function should be async as wel.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1572","RelatedDescription":"Open issue \"subscribeAction: before and after calls do not wait if we have a promise or await statement inside them.\" (#1572)"},{"Id":"460917840","IsPullRequest":false,"CreatedAt":"2019-06-26T11:34:51","Actor":"markrian","Number":"1571","RawContent":null,"Title":"Actions mapped to namespaced modules pass unexpected explicit `undefined` payload to `store.dispatch`","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n[https://codepen.io/markrian/pen/vqeGZZ?editors=0010](https://codepen.io/markrian/pen/vqeGZZ?editors=0010)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n1. Open https://codepen.io/markrian/pen/vqeGZZ?editors=0010\r\n1. Open the browser's console\r\n1. Observe the differing logged arguments passed to `store.dispatch` depending on whether it's a root-mapped action or a namespace-mapped action (`[ \"foo\" ]` and `[ \"childModule/foo\", undefined ]` respectively - note the extra `undefined` argument in the second case; the different action name is of course expected)\r\n\r\nNote that this only really applies in a testing scenario, where the test spies on `store.dispatch` to ensure the component dispatches the expected actions.\r\n\r\n### What is expected?\r\n`store.dispatch` receives exactly the same arguments regardless of whether the actions are namespace-mapped or not.\r\n\r\n### What is actually happening?\r\n`store.dispatch` receives a payload argument of `undefined` for namespace-mapped actions.\r\n\r\n---\r\nI encountered this when refactoring a store into a namespaced module, and found that my expectations needed to change: that `store.dispatch` received an extra `undefined` argument.\r\n\r\nI'm not sure if this should be considered a bug in Vuex, or in my testing approach of spying on `store.dispatch` :man_shrugging: \r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1571","RelatedDescription":"Open issue \"Actions mapped to namespaced modules pass unexpected explicit `undefined` payload to `store.dispatch`\" (#1571)"},{"Id":"456973589","IsPullRequest":false,"CreatedAt":"2019-06-17T14:39:06","Actor":"mojodev","Number":"1570","RawContent":null,"Title":"Creating a new module via registerModule firing unrelated module watchers","State":"closed","Body":" i have loaded a module dynamically using registerModule on a page. one of my parent component is watching other module state variable. so while registering module watcher on other module state is firing. same thing happening for unRegisterModule. \r\ni found same issue which is closed only difference is that i am getting this issue in new version of Vuex3.1.1\r\n\r\nAny help will be appreciated :)\r\n","Url":"https://github.com/vuejs/vuex/issues/1570","RelatedDescription":"Closed issue \"Creating a new module via registerModule firing unrelated module watchers\" (#1570)"},{"Id":"456838883","IsPullRequest":false,"CreatedAt":"2019-06-17T09:41:41","Actor":"lemongranule","Number":"1569","RawContent":null,"Title":"This file maybe has a mistake. ","State":"closed","Body":"examples/server.js\r\nOne more \"de\" in the first line","Url":"https://github.com/vuejs/vuex/issues/1569","RelatedDescription":"Closed issue \"This file maybe has a mistake. \" (#1569)"},{"Id":"456589519","IsPullRequest":false,"CreatedAt":"2019-06-17T08:54:29","Actor":"orblazer","Number":"1568","RawContent":null,"Title":"Use interface for Store type definition","State":"closed","Body":"### What problem does this feature solve?\r\nThis could allow extends Store like in Nuxt.JS.\r\nWithout that we don't have clean way for use `this.app` of `this.$router` in vuex actions and mutations.\r\n\r\nWith that we can extends like :\r\n```ts\r\ndeclare module 'vuex/types/index' {\r\n  interface Store<S> {\r\n    app: Vue;\r\n    $route: Route;\r\n  }\r\n}\r\n```\r\n\r\n### What does the proposed API look like?\r\nhttps://github.com/vuejs/vuex/blob/91f3e69ed9e290cf91f8885c6d5ae2c97fa7ab81/types/index.d.ts#L10 Change type of that from `class` to `interface`\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1568","RelatedDescription":"Closed issue \"Use interface for Store type definition\" (#1568)"},{"Id":"454069279","IsPullRequest":false,"CreatedAt":"2019-06-10T09:04:41","Actor":"guanweiwang","Number":"1567","RawContent":null,"Title":"使用registerModule注册嵌套，出现错误","State":"closed","Body":"```js\r\nimport Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nconst store = new Vuex.Store({\r\n  state: {},\r\n  mutations: {},\r\n  actions: {}\r\n})\r\nstore.registerModule(['nested', 'myModule'], {\r\n  // ...\r\n})\r\nexport default store\r\n```\r\n在浏览器上会给出警告\r\n```\r\nvuex.esm.js?2f62:199 Uncaught TypeError: Cannot read property 'addChild' of undefined\r\n    at ModuleCollection.register (vuex.esm.js?2f62:199)\r\n    at Store.registerModule (vuex.esm.js?2f62:464)\r\n    at Store.t.registerModule.t.registerModule (<anonymous>:1:1182)\r\n    at eval (store.js?c0d6:11)\r\n    at Module../src/store.js (app.js:2393)\r\n    at __webpack_require__ (app.js:767)\r\n    at fn (app.js:130)\r\n    at eval (main.js:13)\r\n    at Module../src/main.js (app.js:2369)\r\n    at __webpack_require__ (app.js:767)\r\n```","Url":"https://github.com/vuejs/vuex/issues/1567","RelatedDescription":"Closed issue \"使用registerModule注册嵌套，出现错误\" (#1567)"},{"Id":"453666442","IsPullRequest":false,"CreatedAt":"2019-06-07T19:43:58","Actor":"winniehell","Number":"1566","RawContent":null,"Title":"registerModule does not warn if existing state is overwritten","State":"open","Body":"### Version\r\n3.1.1\r\n\r\n### Reproduction link\r\n\r\n[https://jsfiddle.net/winniehell/enjkob2w/](https://jsfiddle.net/winniehell/enjkob2w/)\r\n\r\n### Steps to reproduce\r\n- create store module with some state\r\n- dynamically register module with same name but different state\r\n\r\n### What is expected?\r\na warning or error is shown\r\n\r\n### What is actually happening?\r\nstate is silently overwritten\r\n\r\n---\r\nThis issue is similar to https://github.com/vuejs/vuex/issues/1363.\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1566","RelatedDescription":"Open issue \"registerModule does not warn if existing state is overwritten\" (#1566)"},{"Id":"453610451","IsPullRequest":true,"CreatedAt":"2019-06-07T17:05:35","Actor":"Douten","Number":"1565","RawContent":null,"Title":"minor typo","State":"open","Body":"","Url":"https://github.com/vuejs/vuex/pull/1565","RelatedDescription":"Open PR \"minor typo\" (#1565)"},{"Id":"451134309","IsPullRequest":true,"CreatedAt":"2019-06-01T23:19:18","Actor":"YongzeYao","Number":"1564","RawContent":null,"Title":"修改病句","State":"open","Body":"加入一个“的”。","Url":"https://github.com/vuejs/vuex/pull/1564","RelatedDescription":"Open PR \"修改病句\" (#1564)"},{"Id":"451113147","IsPullRequest":true,"CreatedAt":"2019-06-01T18:38:55","Actor":"WIStudent","Number":"1563","RawContent":null,"Title":"Typescript: Use generics for payload/result in commit/dispatch","State":"open","Body":"I am using Typescript to write my store, like this for example:\r\n```typescript\r\ninterface State {\r\n    counter: number;\r\n}\r\n\r\ninterface AddToCounterPayload {\r\n    amount: number;\r\n}\r\n\r\ninterface SubstractFromCounterPayload {\r\n    amount: number;\r\n}\r\n\r\ntype SubstractFromCounterResult = number\r\n\r\nconst store = new Store<State>({\r\n    mutations: {\r\n        addToCounter: (state, payload: AddToCounterPayload): void => {\r\n            state.counter += payload.amount;\r\n        }\r\n    },\r\n    actions: {\r\n        substractFromCounter: async (context, payload: SubstractFromCounterPayload): Promise<SubstractFromCounterResult> => {\r\n            const addToCounterPayload: AddToCounterPayload =  {amount: -1 * payload.amount};\r\n            context.commit('addToCounter', addToCounterPayload)\r\n            return context.state.counter;\r\n        }\r\n    },\r\n    state: {\r\n        counter: 0\r\n    }\r\n})\r\n```\r\n\r\nTriggering a mutation like this will currently not check if the payload has the correct type\r\n```typescript\r\n// correct payload type\r\nstore.commit('addToCounter', {amount: 1});\r\n// incorrect payload type\r\nstore.commit('addToCounter', {amount: '1'});\r\n// Current solution to ensure correct type\r\nconst payload: AddToCounterPayload = {\r\n  amount: 1\r\n}\r\nstore.commit('addToCounter', payload);\r\n```\r\nBut there are cases where I would prefer to build the payload inline, that's why I would like to propose using generics to set the payload type:\r\n```typescript\r\nstore.commit<AddToCounterPayload>('addToCounter', {amount: 1});\r\n```\r\n\r\nTriggering actions would work similary but additionaly the type of the returned value can be set using the second generic parameter\r\n```typescript\r\nconst result = store.dispatch<SubstractFromCounterPayload, SubstractFromCounterResult>('substractFromCounter', {amount: 1}); \r\n// type of result will be Promise<SubstractFromCounterResult>\r\n```\r\nBy setting the default values of the generics to `any` the behavior of `commit` and `dispatch` won't change if called without generics.","Url":"https://github.com/vuejs/vuex/pull/1563","RelatedDescription":"Open PR \"Typescript: Use generics for payload/result in commit/dispatch\" (#1563)"},{"Id":"451011749","IsPullRequest":false,"CreatedAt":"2019-05-31T23:13:08","Actor":"winniehell","Number":"1562","RawContent":null,"Title":"Deprecate testAction helper in favor of vuex-mock-store","State":"open","Body":"### What problem does this feature solve?\r\nThe officially documented way to [test actions](https://vuex.vuejs.org/guide/testing.html#testing-actions)\r\n\r\n- has a complex interface (5 positional, required arguments)\r\n- is always asynchronous—even if the action under test is not\r\n- requires copying a helper function from the documentation into a project's code base\r\n- involves manually patching that helper because of some shortcomings (see for example https://github.com/vuejs/vuex/issues/939)\r\n- offers no way to automatically update the copied helper once it changes in the documentation\r\n\r\n### What does the proposed API look like?\r\nRecommend to use https://github.com/posva/vuex-mock-store instead.\r\n\r\n```javascript\r\n// actions.js\r\n\r\nimport shop from '../api/shop'\r\n\r\nexport const getAllProducts = ({ commit }) => {\r\n  commit('REQUEST_PRODUCTS')\r\n  return shop.getProducts().then(products => {\r\n    commit('RECEIVE_PRODUCTS', products)\r\n  })\r\n}\r\n```\r\n\r\n```javascript\r\n// actions.spec.js\r\n\r\nimport { Store } from 'vuex-mock-store'\r\n\r\nconst store = new Store()\r\n\r\nafterEach(() => store.reset())\r\n\r\ndescribe('actions', () => {\r\n  it('getAllProducts', done => {\r\n    actions.getAllProducts(store)\r\n      .then(() => {\r\n        expect(store.commit).toHaveBeenCalledTimes(2)\r\n        expect(store.commit).toHaveBeenCalledWith('REQUEST_PRODUCTS')\r\n        expect(store.commit).toHaveBeenCalledWith('RECEIVE_PRODUCTS',  /* mocked response */)\r\n      })\r\n      .then(done)\r\n      .catch(done.fail)\r\n})\r\n```\r\n\r\nsee also https://github.com/vuejs/vue-test-utils/issues/1060\r\n\r\n<!-- generated by vue-issues. DO NOT REMOVE -->","Url":"https://github.com/vuejs/vuex/issues/1562","RelatedDescription":"Open issue \"Deprecate testAction helper in favor of vuex-mock-store\" (#1562)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-08-01T05:30:54.3683159Z","RunDurationInMilliseconds":1985}