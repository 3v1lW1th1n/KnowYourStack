{"Data":{"Blog":{"FeedItems":[{"Title":"Announcing .NET Core 3 Preview 2","PublishedOn":"2019-01-29T17:57:06+00:00","CommentsCount":28,"FacebookCount":0,"Summary":"Today, we are announcing .NET Core 3 Preview 2. It includes new features in .NET Core 3.0 and C# 8, in addition to the large number of new features in Preview 1. ASP.NET Core 3.0 Preview 2  is...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/29/announcing-net-core-3-preview-2/","RawContent":null},{"Title":"Announcing .NET Framework 4.8 Early Access Build 3734","PublishedOn":"2019-01-29T00:30:43+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We are getting closer to the final version now! This release includes several accessibility, performance and reliability fixes across the major framework libraries. We will continue to stabilize this...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/28/announcing-net-framework-4-8-early-access-build-3734/","RawContent":null},{"Title":"Help us plan the future of .NET and Big Data","PublishedOn":"2019-01-28T22:05:15+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"We’re currently looking into how we can make .NET great for Big Data scenarios.    Please fill out the survey below and help shape how we can improve .NET for Big Data by sharing your experiences,...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/28/help-us-plan-the-future-of-net-and-big-data/","RawContent":null},{"Title":"Debugging .NET Apps with Time Travel Debugging (TTD)","PublishedOn":"2019-01-25T19:32:21+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"When you are debugging an application, there are many tools and techniques you can use, like logs, memory dumps and Event Tracing for Windows (ETW). In this post, we will talk about Time Travel...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/25/debugging-net-apps-with-time-travel-debugging-ttd/","RawContent":null},{"Title":".NET and TypeScript at FOSDEM 2019","PublishedOn":"2019-01-24T20:50:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The schedule for the .NET and Typescript Developer Room at FOSDEM has now been published! FOSDEM is one of the longest running Free and Open Source conferences, and we’re excited to have a .NET and...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/24/net-and-typescript-at-fosdem-2019/","RawContent":null},{"Title":"Do more with patterns in C# 8.0","PublishedOn":"2019-01-24T18:00:30+00:00","CommentsCount":57,"FacebookCount":0,"Summary":"Do more with patterns in C# 8.0 Visual Studio 2019 Preview 2 is out! And with it, a couple more C# 8.0 features are ready for you to try. It&#8217;s mostly about pattern matching, though I&#8217;ll...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/24/do-more-with-patterns-in-c-8-0/","RawContent":null},{"Title":"Announcing F# 4.6 Preview","PublishedOn":"2019-01-24T15:45:40+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We&#8217;re excited to announce that Visual Studio 2019 will ship a new version of F# when it releases: F# 4.6! F# 4.6 is a smaller update to the F# language, making it a &#8220;true&#8221;...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/24/announcing-f-4-6-preview/","RawContent":null},{"Title":".NET Core tooling update for Visual Studio 2019 Preview 2","PublishedOn":"2019-01-24T15:30:31+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Another preview of Visual Studio 2019, another update on the cool stuff going into it! We&#8217;re pleased to announce some updates to the .NET Core tools for Visual Studio 2019. You can try these...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/24/net-core-tooling-update-for-visual-studio-2019-preview-2/","RawContent":null},{"Title":".NET Framework January 22, 2018 Cumulative Update for Windows 10 version 1809 and Windows Server 2019","PublishedOn":"2019-01-22T22:22:08+00:00","CommentsCount":9,"FacebookCount":0,"Summary":"Today, we are releasing the January 22, 2018 .NET Framework Cumulative Update for Windows 10 version 1809 and Windows Server 2019. For more information about the new Cumulative Updates for .NET...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/","RawContent":null},{"Title":"Help us help you! What desktop apps are you bringing to .NET Core 3.0?","PublishedOn":"2019-01-17T16:00:26+00:00","CommentsCount":46,"FacebookCount":0,"Summary":"Windows Desktop applications are coming to .NET Core. The recently released .NET Core 3.0 Preview 1 version includes WinForms and WPF support. To make .NET Core 3.0 viable for as many of you as...","Href":"https://blogs.msdn.microsoft.com/dotnet/2019/01/17/help-us-help-you-what-desktop-apps-are-you-bringing-to-net-core-3-0/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"9001989260","Type":"PullRequestEvent","CreatedAt":"2019-02-04T07:33:23","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Opened pull request \"Update links\" (#131) at dotnet/foundation","RelatedBody":"Replace http links with https where possible - both returned 200 OK."},{"Id":"8997330482","Type":"PullRequestEvent","CreatedAt":"2019-02-02T11:04:15","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Merged pull request \"Update links\" (#130) at dotnet/foundation","RelatedBody":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com."},{"Id":"8887340703","Type":"PullRequestEvent","CreatedAt":"2019-01-15T05:16:12","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Opened pull request \"Update links\" (#130) at dotnet/foundation","RelatedBody":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com."},{"Id":"8860916656","Type":"PullRequestEvent","CreatedAt":"2019-01-09T22:28:14","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Merged pull request \"Update of EF description\" (#128) at dotnet/foundation","RelatedBody":"@divega !"},{"Id":"8837337598","Type":"PullRequestEvent","CreatedAt":"2019-01-05T03:23:40","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Merged pull request \"Update to absolute path\" (#129) at dotnet/foundation","RelatedBody":"Update to absolute path so that when this list is copied the link will actually work"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"8852414845","Type":"IssuesEvent","CreatedAt":"2019-01-08T18:17:46","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Opened issue \"January 2019 .NET Updates\" (#96) at dotnet/announcements","RelatedBody":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"8852318390","Type":"IssuesEvent","CreatedAt":"2019-01-08T18:00:28","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Opened issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Compression.ZipFile | 4.0.0, 4.0.1, 4.3.0 | 4.3.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-01-08_\r\n\r\n"},{"Id":"8852317992","Type":"IssuesEvent","CreatedAt":"2019-01-08T18:00:24","Actor":"blowdart","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Opened issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94) at dotnet/announcements","RelatedBody":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/ **TBD**\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Net.Http | 4.3.0, 4.3.1, 4.3.2, 4.3.3, 4.3.4 | 4.3.5\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-01-08_\r\n"},{"Id":"8752496804","Type":"IssuesEvent","CreatedAt":"2018-12-14T03:22:59","Actor":"1015450578","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93) at dotnet/announcements","RelatedBody":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]"},{"Id":"8752467326","Type":"IssuesEvent","CreatedAt":"2018-12-14T03:12:36","Actor":"1015450578","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Opened issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93) at dotnet/announcements","RelatedBody":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]"},{"Id":"8741036679","Type":"IssuesEvent","CreatedAt":"2018-12-12T12:56:54","Actor":"bilalmalik777","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92) at dotnet/announcements","RelatedBody":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment"},{"Id":"8740711774","Type":"IssuesEvent","CreatedAt":"2018-12-12T11:57:02","Actor":"bilalmalik777","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Opened issue \".net core Console\" (#92) at dotnet/announcements","RelatedBody":"This repo doesn't accept issues. Please see README.md in the root for more details.\r\nI am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.iothub.simulator:\r\n    image: ${DOCKER_REGISTRY-}ttcoreiothubsimulator\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.IotHub.Simulator/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - mqtt\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.labourtelemetry.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcorelabourtelemetrywebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.LabourTelemetry.WebJob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.telemetry.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoretelemetrywebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Telemetry.WebJob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n     - mqtt\r\n     - redis\r\n    networks:\r\n     - app-network\r\n\r\n  redis:\r\n    image: redis\r\n    command: redis-server --appendonly yes\r\n    ports:\r\n      - '6379:6379'\r\n    volumes:\r\n      - ${APPDATA}/redis:/bitnami/redis/data\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.16\r\n\r\n  mqtt:\r\n    image: eclipse-mosquitto\r\n    hostname: mqtt\r\n    container_name: mqtt\r\n    expose:\r\n      - \"1883\"\r\n      - \"9001\"\r\n    ports:\r\n      - \"1883:1883\"\r\n      - \"9001:9001\"\r\n    volumes:\r\n      - ${APPDATA}/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.8\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\n"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"9008525987","Type":"PullRequestEvent","CreatedAt":"2019-02-05T04:37:19","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22417","RelatedDescription":"Merged pull request \"Extract setting __TestTimeout in runtest.py\" (#22417) at dotnet/coreclr","RelatedBody":"Avoid setting or reporting setting it twice"},{"Id":"9008441268","Type":"PullRequestEvent","CreatedAt":"2019-02-05T04:04:35","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22397","RelatedDescription":"Merged pull request \"Fix string.strlen\" (#22397) at dotnet/coreclr","RelatedBody":"Fixes #22393\r\n\r\nWhat's the best approach for adding a coreclr test for this? (e.g. the code from #22393); as the coreclr tests are a little different than corefx.\r\n\r\n/cc @jkotas @stephentoub "},{"Id":"9008441223","Type":"IssuesEvent","CreatedAt":"2019-02-05T04:04:34","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/22393","RelatedDescription":"Closed issue \"Buffer overrun in vectorized string.strlen\" (#22393) at dotnet/coreclr","RelatedBody":"Repro:\r\n\r\n```\r\nusing System;\r\nusing System.Runtime.InteropServices;\r\n\r\nclass My {\r\n\r\n    internal const int MEM_COMMIT = 0x1000;\r\n    internal const int MEM_RESERVE = 0x2000;\r\n    internal const int PAGE_READWRITE = 0x04;\r\n\r\n    [DllImport(\"kernel32.dll\")]\r\n    internal static extern unsafe void* VirtualAlloc(void* lpAddress, UIntPtr dwSize, int flAllocationType, int flProtect);\r\n\r\n    static unsafe void Main()\r\n    {\r\n        void * p = VirtualAlloc(null, new UIntPtr(0x10000), MEM_RESERVE, PAGE_READWRITE);\r\n   \r\n        VirtualAlloc(p, new UIntPtr(0x1000), MEM_COMMIT, PAGE_READWRITE);\r\n        sbyte * s = (sbyte*)p + 0x1000 - 0x1F;\r\n\r\n        for (int i = 0; i < 20; i++) *(s+i) = (sbyte)'a';\r\n\r\n        new string(s); \r\n    }\r\n}\r\n```\r\n\r\nResult:\r\n\r\n```\r\nvpbroadcastb ymm0,xmm0\r\nvmovupd ymm1,ymmword ptr [rsi+rdx] ds:000001f0`b00a0ff0=61 <--- Crash here\r\nvpcmpeqb ymm1,ymm0,ymm1\r\n```"},{"Id":"9008387787","Type":"PullRequestEvent","CreatedAt":"2019-02-05T03:43:11","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22389","RelatedDescription":"Merged pull request \"Move SynchronizationContext to shared partition\" (#22389) at dotnet/coreclr","RelatedBody":""},{"Id":"9008285115","Type":"PullRequestEvent","CreatedAt":"2019-02-05T03:04:40","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/22425","RelatedDescription":"Opened pull request \"Configure MSBuild debug path and save any logs\" (#22425) at dotnet/coreclr","RelatedBody":"We have had many problems in the CI with MSBuild failing, and not\r\ncapturing the failure logs.\r\n\r\nSee https://github.com/dotnet/coreclr/issues/20236.\r\n\r\nSo, for all msbuild invocations, set MSBUILDDEBUGPATH to a new,\r\ndistinguished, subdirectory of the bin\\Logs directory, named\r\n\"MsbuildDebugLogs\". Change the CI to upload any log files found\r\nthere."},{"Id":"9008183972","Type":"IssuesEvent","CreatedAt":"2019-02-05T02:28:56","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/22424","RelatedDescription":"Opened issue \"Save MSBuild logs when CI jobs fail\" (#22424) at dotnet/coreclr","RelatedBody":"Related to https://github.com/dotnet/coreclr/issues/20236.\r\n\r\nChange the CI to create a new directory for saving MSBuild logs, and set the environment variable MSBUILDDEBUGPATH to point to that path. Then, upload all logs stored there, if any are written. Upload them even if any other job failures exist, but don't fail if there are no logs to upload.\r\n"},{"Id":"9008167235","Type":"IssuesEvent","CreatedAt":"2019-02-05T02:23:27","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/22423","RelatedDescription":"Opened issue \"[arm64] !pMDAfterConstraintResolution->IsInterface() in constrainedcall test\" (#22423) at dotnet/coreclr","RelatedBody":"I saw this in both JitStress=1 and JitStress=2, but not without stress.\r\n\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/arm64_cross_checked_ubuntu16.04_jitstress1_tst_prtest/25/consoleFull\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/arm64_cross_checked_ubuntu16.04_jitstress2_tst_prtest/32/consoleFull\r\n\r\n(My PR had no source code changes)\r\n\r\nAssert failure(PID 6447 [0x0000192f], Thread: 6447 [0x192f]): !pMDAfterConstraintResolution->IsInterface()\r\n18:01:00             File: /mnt/j/workspace/dotnet_coreclr/master/arm64_cross_checked_ubuntu16.04_prtest/src/vm/jitinterface.cpp Line: 5218\r\n\r\nTest:\r\nLoader_classloader._DefaultInterfaceMethods_constrainedcall_constrainedcall_constrainedcall_._DefaultInterfaceMethods_constrainedcall_constrainedcall_constrainedcall_sh\r\n\r\n\r\nStack fragment:\r\n```\r\n18:03:32 #8  0x0000ffff9f7fc414 in CEEInfo::getCallInfo (this=0xffffc33a0350, pResolvedToken=0xffffc339dcc0, pConstrainedResolvedToken=0xffffc339dc70, callerHandle=0xffff2746f730, flags=(CORINFO_CALLINFO_ALLOWINSTPARAM | CORINFO_CALLINFO_CALLVIRT | CORINFO_CALLINFO_SECURITYCHECKS), pResult=0xffffc339dda0) at /mnt/j/workspace/dotnet_coreclr/master/arm64_cross_checked_ubuntu16.04_prtest/src/vm/jitinterface.cpp:5218\r\n18:03:32         directMethod = 0xffff274a37a8\r\n18:03:32         fForceUseRuntimeLookup = 0\r\n18:03:32         pTargetMD = <optimized out>\r\n18:03:32         pMD = <optimized out>\r\n18:03:32         resolvedCallVirt = <optimized out>\r\n18:03:32         directCall = <optimized out>\r\n18:03:32         signatureKind = <optimized out>\r\n18:03:32         pMDAfterConstraintResolution = <optimized out>\r\n18:03:32         fResolvedConstraint = 0\r\n18:03:32         __gcHolder = <optimized out>\r\n18:03:32         __pThread = <optimized out>\r\n18:03:32         CURRENT_THREAD = <optimized out>\r\n18:03:32         CURRENT_THREAD = <optimized out>\r\n18:03:32         __fExceptionCatched = false\r\n18:03:32         __pThread = <optimized out>\r\n18:03:32         __pUnCEntryFrame = <optimized out>\r\n18:03:32         CURRENT_THREAD = <optimized out>\r\n18:03:32 #9  0x0000ffff9cde05d8 in Compiler::eeGetCallInfo (this=<optimized out>, pResolvedToken=<optimized out>, pConstrainedToken=0x6, flags=(CORINFO_CALLINFO_ALLOWINSTPARAM | CORINFO_CALLINFO_CALLVIRT | CORINFO_CALLINFO_KINDONLY | CORINFO_CALLINFO_VERIFICATION | CORINFO_CALLINFO_LDFTN | unknown: 6400), pResult=<optimized out>) at /mnt/j/workspace/dotnet_coreclr/master/arm64_cross_checked_ubuntu16.04_prtest/src/jit/ee_il_dll.hpp:40\r\n18:03:32 No locals.\r\n18:03:32 #10 Compiler::impImportBlockCode (this=<optimized out>, block=<optimized out>) at /mnt/j/workspace/dotnet_coreclr/master/arm64_cross_checked_ubuntu16.04_prtest/src/jit/importer.cpp:14078\r\n18:03:32         lclTyp = var_types::TYP_SHORT\r\n18:03:32         clsFlags = 0\r\n18:03:32         resolvedToken = <optimized out>\r\n18:03:32         newObjThisPtr = <optimized out>\r\n18:03:32         isLocal = true\r\n18:03:32         mflags = 0\r\n18:03:32         stelemClsHnd = <optimized out>\r\n18:03:32         op1 = <optimized out>\r\n18:03:32         uns = true\r\n18:03:32         ldelemClsHnd = <optimized out>\r\n18:03:32         op2 = <optimized out>\r\n18:03:32         opcode = <optimized out>\r\n18:03:32         clsHnd = <optimized out>\r\n18:03:32         fieldInfo = <optimized out>\r\n18:03:32         sz = <optimized out>\r\n18:03:32         args = <optimized out>\r\n18:03:32         callInfo = <optimized out>\r\n18:03:32         nxtStmtIndex = <optimized out>\r\n18:03:32         opcodeOffs = <optimized out>\r\n18:03:32         lastSpillOffs = <optimized out>\r\n18:03:32         prevOpcode = CEE_ILLEGAL\r\n18:03:32         numArgs = <optimized out>\r\n18:03:32         codeAddr = <optimized out>\r\n18:03:32         prefixFlags = <optimized out>\r\n18:03:32         codeEndp = <optimized out>\r\n18:03:32         delegateCreateStart = <optimized out>\r\n18:03:32         nxtStmtOffs = <optimized out>\r\n18:03:32         jmpDist = <optimized out>\r\n18:03:32         accessAllowedResult = <optimized out>\r\n18:03:32         tiRetVal = <optimized out>\r\n18:03:32         helper = <optimized out>\r\n18:03:32         arrayNodeFrom = <optimized out>\r\n18:03:32         arrayNodeTo = <optimized out>\r\n18:03:32 #11 0x0000ffff9cdecb0c in Compiler::impImportBlock(BasicBlock*)::$_1::operator()(Compiler::impImportBlock(BasicBlock*)::FilterVerificationExceptionsParam*) const (this=<optimized out>, pParam=<optimized out>) at /mnt/j/workspace/dotnet_coreclr/master/arm64_cross_checked_ubuntu16.04_prtest/src/jit/importer.cpp:17258\r\n18:03:32 No locals.\r\n18:03:32 #12 Compiler::impImportBlock (this=0xe920fa8, block=0xe9294b8) at /mnt/j/workspace/dotnet_coreclr/master/arm64_cross_checked_ubuntu16.04_prtest/src/jit/importer.cpp:17268\r\n18:03:32         __param = 0xffffc339e078\r\n18:03:32         disposition = -1\r\n18:03:32         baseTmp = <optimized out>\r\n18:03:32         reimportSpillClique = <optimized out>\r\n18:03:32         tgtBlock = <optimized out>\r\n18:03:32 #13 0x0000ffff9cdef568 in Compiler::impImport (this=<optimized out>, method=<optimized out>) at /mnt/j/workspace/dotnet_coreclr/master/arm64_cross_checked_ubuntu16.04_prtest/src/jit/importer.cpp:18343\r\n18:03:32         dsc = 0xe9295d8\r\n18:03:32         inlineRoot = <optimized out>\r\n```\r\n"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"9007689455","Type":"PullRequestEvent","CreatedAt":"2019-02-05T00:01:36","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/10704","RelatedDescription":"Opened pull request \"Merge release/2.1.6xx to release/2.2.2xx\" (#10704) at dotnet/cli","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9007395644","Type":"PullRequestEvent","CreatedAt":"2019-02-04T22:53:37","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10690","RelatedDescription":"Merged pull request \"Update FSharp Compiler to: 10.4.1-rtm-190201-03\" (#10690) at dotnet/cli","RelatedBody":"Update FSharp Compiler to match one inserted into VS.\r\n"},{"Id":"9006949980","Type":"PullRequestEvent","CreatedAt":"2019-02-04T21:30:57","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/10691","RelatedDescription":"Merged pull request \"Update FSharp Compiler to: 10.4.1-rtm-190201-03\" (#10691) at dotnet/cli","RelatedBody":"Update FSharp Compiler to match one inserted into VS.\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"8988505913","Type":"IssuesEvent","CreatedAt":"2019-01-31T20:48:53","Actor":"botrif","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/1064","RelatedDescription":"Opened issue \"NETStandard, T4 templates, and System.Numerics.VEctors\" (#1064) at dotnet/standard","RelatedBody":"W have a T4 template to generate code based on reflection of another project. The template project and the other project are SDK style, multitargeted: <TargetFrameworks>netstandard2.0;net46;uap10.0.14393</TargetFrameworks>\r\nThe assembly to reflect on is loaded with <#@ assembly name=…\r\nIf the first target in the list is net46 or uap, reflection works fine: typeof(MyClass).Assembly.GetTypes()\r\nBut with netstandard first in the list, we get ReflectionTypeLoadException containing the following:\r\n\r\nCould not load file or assembly 'System.Numerics.Vectors, Version=4.1.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n\r\n(the reflected-on assembly uses System.Vector.Numerics: <PackageReference Include=\"System.Numerics.Vectors\" Version=\"4.5.0\" Condition=\" '$(TargetFramework)' == 'netstandard2.0' \" />\r\nOur prrevious workaround was to do the build-time code generation on net46 or uap, but we want to move to netstandard only builds soon. How can this error be dealt with?\r\n"},{"Id":"8987877444","Type":"IssuesEvent","CreatedAt":"2019-01-31T19:03:58","Actor":"wtgodbe","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/926","RelatedDescription":"Closed issue \"Track .NET Core similar to other platforms\" (#926) at dotnet/standard","RelatedBody":"@weshaggard started this work in his [wesh/netcoreapp_compat](https://github.com/dotnet/standard/tree/wesh/netcoreapp_compat) branch."},{"Id":"8978890473","Type":"IssuesEvent","CreatedAt":"2019-01-30T15:33:00","Actor":"pranavkm","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/standard/issues/474","RelatedDescription":"Reopened issue \"The type 'Attribute' is defined in an assembly that is not referenced.\" (#474) at dotnet/standard","RelatedBody":"I'm encountering this error when using MSTest and the Microsoft.AspNetCore.TestHost. It all works fine until I call the TestServer to render a view.\r\n\r\nI'm using VS2017 15.3 with the .NET Core 2.0 Sdk with my net.core app targeting .NET Framework 4.6.1.\r\nAny advise on how I might fix this?\r\n\r\n```\r\n\"Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationFailedException: One or more compilation failures occurred:\\r\\ne3s05cht.itf(4,62): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(4,81): error CS0518: Predefined type 'System.String' is not defined or imported\\r\\ne3s05cht.itf(4,109): error CS0518: Predefined type 'System.Type' is not defined or imported\\r\\ne3s05cht.itf(4,11): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(8,11): error CS0246: The type or namespace name 'System' could not be found (are you missing a using directive or an assembly reference?)\\r\\ne3s05cht.itf(9,11): error CS0246: The type or namespace name 'System' could not be found (are you missing a using directive or an assembly reference?)\\r\\ne3s05cht.itf(10,11): error CS0246: The type or namespace name 'System' could not be fou\r\nnd (are you missing a using directive or an assembly reference?)\\r\\ne3s05cht.itf(11,11): error CS0246: The type or namespace name 'System' could not be found (are you missing a using directive or an assembly reference?)\\r\\ne3s05cht.itf(14,36): error CS0234: The type or namespace name 'ViewFeatures' does not exist in the namespace 'Microsoft.AspNetCore.Mvc' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(15,93): error CS1980: Cannot define a class or member that utilizes 'dynamic' because the compiler required type 'System.Runtime.CompilerServices.DynamicAttribute' cannot be found. Are you missing a reference?\\r\\ne3s05cht.itf(15,93): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(15,44): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(18,67): error CS1983: The return type of an async method mus\r\nt be void, Task or Task<T>\\r\\ne3s05cht.itf(18,39): error CS0400: The type or namespace name 'System' could not be found in the global namespace (are you missing an assembly reference?)\\r\\ne3s05cht.itf(70,49): error CS0234: The type or namespace name 'ViewFeatures' does not exist in the namespace 'Microsoft.AspNetCore.Mvc' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(70,118): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(72,49): error CS0234: The type or namespace name 'IUrlHelper' does not exist in the namespace 'Microsoft.AspNetCore.Mvc' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(72,71): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(74,49): error CS0234: The type or namespace name 'IViewComponentHelper' does not exist in the namespace 'Microsoft.AspNetCore.Mvc' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(74,87): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05\r\ncht.itf(76,59): error CS0234: The type or namespace name 'IJsonHelper' does not exist in the namespace 'Microsoft.AspNetCore.Mvc.Rendering' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(76,83): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(78,59): error CS0234: The type or namespace name 'IHtmlHelper<>' does not exist in the namespace 'Microsoft.AspNetCore.Mvc.Rendering' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(78,71): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(78,71): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(78,71): error CS1980: Cannot define a class or member that utilizes 'dynamic' because the compiler required type 'System.Runtime.CompilerServices.DynamicAttribute' cannot be found. Are you missing a reference?\\r\\ne3s05ch\r\nt.itf(78,71): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(78,92): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(18,67): error CS0508: '_Views_PublicApp_cshtml.ExecuteAsync()': return type must be 'Task' to match overridden member 'RazorPageBase.ExecuteAsync()'\\r\\ne3s05cht.itf(18,67): error CS0012: The type 'Task' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(69,58): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(69,10): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(71,58): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a referen\r\nce to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(71,10): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(73,58): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(73,10): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(75,58): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(75,10): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(77,58): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=ne\r\nutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(77,10): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(20,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(20,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(20,26): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(20,29): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(20,34): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(20,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(21,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=\r\nneutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(21,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(21,26): error CS0518: Predefined type 'System.String' is not defined or imported\\r\\ne3s05cht.itf(21,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(36,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(36,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(36,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(43,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(43,13): error CS0518: Predefined ty\r\npe 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(43,26): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(43,31): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(43,36): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(43,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(44,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(44,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(44,26): error CS0518: Predefined type 'System.String' is not defined or imported\\r\\ne3s05cht.itf(44,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(48,13): error CS0012: The type 'Object' is defined in an assembl\r\ny that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(48,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(48,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(56,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(56,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(56,26): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(56,31): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(56,36): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(56,13): error CS0518: Predefined type 'System.Void' is not d\r\nefined or imported\\r\\ne3s05cht.itf(57,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(57,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(57,26): error CS0518: Predefined type 'System.String' is not defined or imported\\r\\ne3s05cht.itf(57,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(58,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(58,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(58,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(64,13): error CS0012: The type 'Object' is defined in an as\r\nsembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(64,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(64,26): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(64,32): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(64,37): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(64,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(65,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(65,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(65,26): error CS0518: Predefined type 'System.String' i\r\ns not defined or imported\\r\\ne3s05cht.itf(65,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(66,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(66,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(66,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(18,67): error CS0161: '_Views_PublicApp_cshtml.ExecuteAsync()': not all code paths return a value\\r\\ne3s05cht.itf(15,18): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\nC:\\\\Source\\\\TFS\\\\ReferenceApp\\\\RefApp.Web\\\\Views\\\\PublicApp.cshtml(15,10): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(RazorCodeDocument codeDocument, String gener\r\natedCode)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(String relativePath)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CreateCacheEntry(String normalizedPath)\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorPageFactoryProvider.CreateFactory(String relativePath)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.CreateCacheResult(HashSet`1 expirationTokens, String relativePath, Boolean isMainPage)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.LocatePageFromPath(String executingFilePath, String pagePath, Boolean isMainPage)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetView(String executingFilePath, String viewPath, Boolean isMainPage)\\r\\n   at Micro\r\nsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.GetView(String executingFilePath, String viewPath, Boolean isMainPage)\\r\\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ViewResultExecutor.FindView(ActionContext actionContext, ViewResult viewResult)\\r\\n   at Microsoft.AspNetCore.Mvc.ViewResult.<ExecuteResultAsync>d__26.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeResultAsync>d__19.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvo\r\nker.<InvokeNextResultFilterAsync>d__24.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResourceFilter>d__22.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task\r\n task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()\\r\\n--- End of stack trace from previous lo\r\ncation where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>d__6.MoveNext()\"\r\n\r\n```\r\n"},{"Id":"8978889066","Type":"IssuesEvent","CreatedAt":"2019-01-30T15:32:50","Actor":"pranavkm","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/standard/issues/474","RelatedDescription":"Closed issue \"The type 'Attribute' is defined in an assembly that is not referenced.\" (#474) at dotnet/standard","RelatedBody":"I'm encountering this error when using MSTest and the Microsoft.AspNetCore.TestHost. It all works fine until I call the TestServer to render a view.\r\n\r\nI'm using VS2017 15.3 with the .NET Core 2.0 Sdk with my net.core app targeting .NET Framework 4.6.1.\r\nAny advise on how I might fix this?\r\n\r\n```\r\n\"Microsoft.AspNetCore.Mvc.Razor.Compilation.CompilationFailedException: One or more compilation failures occurred:\\r\\ne3s05cht.itf(4,62): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(4,81): error CS0518: Predefined type 'System.String' is not defined or imported\\r\\ne3s05cht.itf(4,109): error CS0518: Predefined type 'System.Type' is not defined or imported\\r\\ne3s05cht.itf(4,11): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(8,11): error CS0246: The type or namespace name 'System' could not be found (are you missing a using directive or an assembly reference?)\\r\\ne3s05cht.itf(9,11): error CS0246: The type or namespace name 'System' could not be found (are you missing a using directive or an assembly reference?)\\r\\ne3s05cht.itf(10,11): error CS0246: The type or namespace name 'System' could not be fou\r\nnd (are you missing a using directive or an assembly reference?)\\r\\ne3s05cht.itf(11,11): error CS0246: The type or namespace name 'System' could not be found (are you missing a using directive or an assembly reference?)\\r\\ne3s05cht.itf(14,36): error CS0234: The type or namespace name 'ViewFeatures' does not exist in the namespace 'Microsoft.AspNetCore.Mvc' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(15,93): error CS1980: Cannot define a class or member that utilizes 'dynamic' because the compiler required type 'System.Runtime.CompilerServices.DynamicAttribute' cannot be found. Are you missing a reference?\\r\\ne3s05cht.itf(15,93): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(15,44): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(18,67): error CS1983: The return type of an async method mus\r\nt be void, Task or Task<T>\\r\\ne3s05cht.itf(18,39): error CS0400: The type or namespace name 'System' could not be found in the global namespace (are you missing an assembly reference?)\\r\\ne3s05cht.itf(70,49): error CS0234: The type or namespace name 'ViewFeatures' does not exist in the namespace 'Microsoft.AspNetCore.Mvc' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(70,118): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(72,49): error CS0234: The type or namespace name 'IUrlHelper' does not exist in the namespace 'Microsoft.AspNetCore.Mvc' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(72,71): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(74,49): error CS0234: The type or namespace name 'IViewComponentHelper' does not exist in the namespace 'Microsoft.AspNetCore.Mvc' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(74,87): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05\r\ncht.itf(76,59): error CS0234: The type or namespace name 'IJsonHelper' does not exist in the namespace 'Microsoft.AspNetCore.Mvc.Rendering' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(76,83): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(78,59): error CS0234: The type or namespace name 'IHtmlHelper<>' does not exist in the namespace 'Microsoft.AspNetCore.Mvc.Rendering' (are you missing an assembly reference?)\\r\\ne3s05cht.itf(78,71): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(78,71): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(78,71): error CS1980: Cannot define a class or member that utilizes 'dynamic' because the compiler required type 'System.Runtime.CompilerServices.DynamicAttribute' cannot be found. Are you missing a reference?\\r\\ne3s05ch\r\nt.itf(78,71): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(78,92): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(18,67): error CS0508: '_Views_PublicApp_cshtml.ExecuteAsync()': return type must be 'Task' to match overridden member 'RazorPageBase.ExecuteAsync()'\\r\\ne3s05cht.itf(18,67): error CS0012: The type 'Task' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(69,58): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(69,10): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(71,58): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a referen\r\nce to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(71,10): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(73,58): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(73,10): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(75,58): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(75,10): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(77,58): error CS0012: The type 'Attribute' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=ne\r\nutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(77,10): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(20,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(20,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(20,26): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(20,29): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(20,34): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(20,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(21,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=\r\nneutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(21,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(21,26): error CS0518: Predefined type 'System.String' is not defined or imported\\r\\ne3s05cht.itf(21,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(36,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(36,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(36,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(43,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(43,13): error CS0518: Predefined ty\r\npe 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(43,26): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(43,31): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(43,36): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(43,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(44,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(44,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(44,26): error CS0518: Predefined type 'System.String' is not defined or imported\\r\\ne3s05cht.itf(44,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(48,13): error CS0012: The type 'Object' is defined in an assembl\r\ny that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(48,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(48,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(56,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(56,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(56,26): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(56,31): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(56,36): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(56,13): error CS0518: Predefined type 'System.Void' is not d\r\nefined or imported\\r\\ne3s05cht.itf(57,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(57,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(57,26): error CS0518: Predefined type 'System.String' is not defined or imported\\r\\ne3s05cht.itf(57,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(58,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(58,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(58,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(64,13): error CS0012: The type 'Object' is defined in an as\r\nsembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(64,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(64,26): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(64,32): error CS0518: Predefined type 'System.Int32' is not defined or imported\\r\\ne3s05cht.itf(64,37): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\ne3s05cht.itf(64,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(65,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(65,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(65,26): error CS0518: Predefined type 'System.String' i\r\ns not defined or imported\\r\\ne3s05cht.itf(65,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(66,13): error CS0012: The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'.\\r\\ne3s05cht.itf(66,13): error CS0518: Predefined type 'System.Object' is not defined or imported\\r\\ne3s05cht.itf(66,13): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\ne3s05cht.itf(18,67): error CS0161: '_Views_PublicApp_cshtml.ExecuteAsync()': not all code paths return a value\\r\\ne3s05cht.itf(15,18): error CS0518: Predefined type 'System.Void' is not defined or imported\\r\\nC:\\\\Source\\\\TFS\\\\ReferenceApp\\\\RefApp.Web\\\\Views\\\\PublicApp.cshtml(15,10): error CS0518: Predefined type 'System.Boolean' is not defined or imported\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(RazorCodeDocument codeDocument, String gener\r\natedCode)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(String relativePath)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CreateCacheEntry(String normalizedPath)\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.DefaultRazorPageFactoryProvider.CreateFactory(String relativePath)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.CreateCacheResult(HashSet`1 expirationTokens, String relativePath, Boolean isMainPage)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.LocatePageFromPath(String executingFilePath, String pagePath, Boolean isMainPage)\\r\\n   at Microsoft.AspNetCore.Mvc.Razor.RazorViewEngine.GetView(String executingFilePath, String viewPath, Boolean isMainPage)\\r\\n   at Micro\r\nsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.GetView(String executingFilePath, String viewPath, Boolean isMainPage)\\r\\n   at Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ViewResultExecutor.FindView(ActionContext actionContext, ViewResult viewResult)\\r\\n   at Microsoft.AspNetCore.Mvc.ViewResult.<ExecuteResultAsync>d__26.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeResultAsync>d__19.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvo\r\nker.<InvokeNextResultFilterAsync>d__24.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResourceFilter>d__22.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task\r\n task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()\\r\\n--- End of stack trace from previous location where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\\r\\n   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()\\r\\n--- End of stack trace from previous lo\r\ncation where exception was thrown ---\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\r\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\r\\n   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.<Invoke>d__6.MoveNext()\"\r\n\r\n```\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"9008669271","Type":"PullRequestEvent","CreatedAt":"2019-02-05T05:30:19","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/35097","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#35097) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams"},{"Id":"9008661821","Type":"PullRequestEvent","CreatedAt":"2019-02-05T05:27:40","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/35097","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#35097) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9008652666","Type":"PullRequestEvent","CreatedAt":"2019-02-05T05:24:25","Actor":"jkotas","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/35093","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#35093) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar"},{"Id":"9008624648","Type":"IssuesEvent","CreatedAt":"2019-02-05T05:14:16","Actor":"joshudson","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/35096","RelatedDescription":"Opened issue \"SslStream throws exceptions with error message text of \"See inner exception\"\" (#35096) at dotnet/corefx","RelatedBody":"Don't ever write \"see inner exception for details.\" Instead, concatenate the message with the inner exception's message. \"See inner exception for details\" on IO.IOException gets written to logfile where there's no clue to the problem. I spent way too long tracking this one down.\r\n\r\nOne example: https://stackoverflow.com/questions/40939031/tls-1-2-the-token-supplied-to-the-function-is-invalid/54523827#54523827\r\n\r\n"},{"Id":"9008610844","Type":"IssuesEvent","CreatedAt":"2019-02-05T05:09:08","Actor":"joshudson","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/35095","RelatedDescription":"Opened issue \"SslStream can throw in Dispose()\" (#35095) at dotnet/corefx","RelatedBody":"SslStream can throw ObjectDisposedException in Dispose()\r\n\r\nI shouldn't have to explain how bad that is. A throwing Dispose is something you do in desperation in application code, not for some external IO condition in a library code.\r\n\r\nI got here by disposing the NetworkStream the SslStream was created from because I knew at higher level the NetworkStream was in a dead state. Allowing SslStream to try to call Write() like it did without disposing it first would have resulted in a hang for an unacceptably long time (minutes).\r\n\r\nTrivial fix:\r\n\r\n    public void Dispose\r\n    {\r\n        try {\r\n            Dispose(true);\r\n        } catch (ObjectDisposedException){}\r\n    }\r\n\r\n"},{"Id":"9008572643","Type":"PullRequestEvent","CreatedAt":"2019-02-05T04:55:18","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/35094","RelatedDescription":"Opened pull request \"Implement ArrayBufferWriter to provide an in-box ArrayPool-backed IBufferWriter<byte>\" (#35094) at dotnet/corefx","RelatedBody":"Fixes https://github.com/dotnet/corefx/issues/34894\r\n\r\n**TODO:**\r\n- Add XML comments\r\n- Figure out which assembly to expose this from. We decided on `System.Buffers.dll`, but I am not sure if we can add APIs to that assembly or not given `ArrayPool`, the only API implemented in that assembly, got moved down to corelib (https://github.com/dotnet/corefx/pull/32096). Currently, exposing this from `System.Memory.dll`. cc @safern \r\nhttps://github.com/dotnet/corefx/blob/53a33cf2662ac8c9a45d13067012d80cf0ba6956/src/System.Buffers/src/System.Buffers.csproj#L9-L11\r\n\r\nChanges based on https://github.com/dotnet/apireviews/pull/88:\r\n- No optional argument on the ctor to avoid exposing internal implementation detail around default initial capacity (of 256 bytes).\r\n- Sealed the class\r\n- Renamed `BytesCommitted` to `TotalBytesWritten` for clarity\r\n- Exposing `Capacity` and `BytesAvailable`\r\n- Implementing the `IBufferWriter<byte>` interface explicitly to hide the APIs on ArrayBufferWriter itself.\r\n- The output span/memory properties are now `ReadOnly`\r\n- Renamed `Clear()` to `Reset()` and `CopyToAndClear()` to `CopyToAndReset()` based on feedback from @davidfowl \r\n\r\ncc @davidfowl, @KrzysztofCwalina, @stephentoub, @steveharter, @JeremyKuhne, @pakrym, @layomia "},{"Id":"9008389382","Type":"PullRequestEvent","CreatedAt":"2019-02-05T03:43:49","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/35093","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#35093) at dotnet/corefx","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"9008605213","Type":"PullRequestEvent","CreatedAt":"2019-02-05T05:07:05","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/33133","RelatedDescription":"Opened pull request \"WIP:  Use Arcade VS IBC training infrastructure\" (#33133) at dotnet/roslyn","RelatedBody":""},{"Id":"9008507480","Type":"PullRequestEvent","CreatedAt":"2019-02-05T04:30:08","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/33122","RelatedDescription":"Merged pull request \"Merge dev16.1-preview1 to dev16.1-preview1-vs-deps\" (#33122) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from dev16.1-preview1 into dev16.1-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.1-preview1-to-dev16.1-preview1-vs-deps\ngit reset --hard upstream/dev16.1-preview1-vs-deps\ngit merge upstream/dev16.1-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.1-preview1-to-dev16.1-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9008454200","Type":"PullRequestEvent","CreatedAt":"2019-02-05T04:09:54","Actor":"CyrusNajmabadi","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/33132","RelatedDescription":"Opened pull request \"Avoid a lambda allocation when accessing a cache in a hotpath.\" (#33132) at dotnet/roslyn","RelatedBody":"Mitigation for https://github.com/dotnet/roslyn/issues/33131"},{"Id":"9008354268","Type":"PullRequestEvent","CreatedAt":"2019-02-05T03:30:11","Actor":"dotnet-automerge-bot","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/33115","RelatedDescription":"Merged pull request \"Merge dev16.0-preview3 to master\" (#33115) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from dev16.0-preview3 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-preview3-to-master\ngit reset --hard upstream/master\ngit merge upstream/dev16.0-preview3\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-preview3-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9008339229","Type":"IssuesEvent","CreatedAt":"2019-02-05T03:24:29","Actor":"Therzok","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/33131","RelatedDescription":"Opened issue \"Delegate allocations coming in from ConditionalWeakTable value creators\" (#33131) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n2.10.0-beta2-63410-10 (but looks like it's the same in 3.0.0-beta2-19055-09)\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Run analyzers on a solution (in my case [this](https://github.com/mono/refactoringessentials/tree/monodevelop2) one)\r\n2. Observe a lot of allocations coming in from SymbolTreeInfo.GetMetadataChecksum\r\n\r\n\r\n**Expected Behavior**:\r\nThe lambdas should be static and use the key parameter being passed.\r\n\r\n**Actual Behavior**:\r\nA lot of allocations due to closures. They are coming in from [here](http://source.roslyn.io/#Microsoft.CodeAnalysis.Workspaces/FindSymbols/SymbolTree/SymbolTreeInfo_Metadata.cs,154)\r\n\r\n```\r\nStacktrace:\r\n\r\nMicrosoft.CodeAnalysis.FindSymbols.SymbolTreeInfo.GetMetadataChecksum(Solution solution, PortableExecutableReference reference, CancellationToken cancellationToken)\r\nMicrosoft.CodeAnalysis.IncrementalCaches.SymbolTreeInfoIncrementalAnalyzerProvider+IncrementalAnalyzer+<UpdateReferenceAsync>d__9.MoveNext()\r\nSystem.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<TStateMachine>(TStateMachine stateMachine)\r\n\r\n```\r\n\r\nThis is a heavy contender of allocations in VSMac while typing"},{"Id":"9008327956","Type":"IssuesEvent","CreatedAt":"2019-02-05T03:20:24","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/33130","RelatedDescription":"Opened issue \"Immediate/watch window not formatting DateTimes inside loops\" (#33130) at dotnet/roslyn","RelatedBody":"**Version Used**: Visual Studio 2019 Preview 2\r\n\r\n🔗 Originally filed as https://devdiv.visualstudio.com/DevDiv/_workitems/edit/215428\r\n\r\n**Steps to Reproduce**:\r\n\r\n```csharp\r\nusing System;\r\nusing System.Linq;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            var dt = new DateTime(2016, 3, 2);\r\n            var result = Enumerable.Range(1, 1).Select(x => dt.ToString(\"yyyy\")).First();\r\n            Console.WriteLine(result);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n1. Set a breakpoint on the line with `Console.WriteLine`\r\n2. When the breakpoint is hit, observe the value of `result`\r\n3. In the Immediate window, run the following:\r\n\r\n    ```csharp\r\n    Enumerable.Range(1, 1).Select(x => dt.ToString(\"yyyy\")).First()\r\n    ```\r\n\r\n**Expected Behavior**:\r\n\r\nStep (2) and (3) produce `\"2016\"`.\r\n\r\n**Actual Behavior**:\r\n\r\nStep (2) produces `\"2016\"`.\r\n\r\nStep (3) produces `\"3/2/2016 12:00:00 AM\"`."},{"Id":"9008283632","Type":"IssuesEvent","CreatedAt":"2019-02-05T03:03:58","Actor":"Therzok","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/33129","RelatedDescription":"Opened issue \"A lot of allocations coming in from SourceNamespaceSymbol.DeclaringSyntaxReferences\" (#33129) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n2.10.0-beta2-63410-10 (but looks like it's the same in 3.0.0-beta2-19055-09)\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Run analyzers on a solution (in my case [this](https://github.com/mono/refactoringessentials/tree/monodevelop2) one)\r\n2. Observe a lot of allocations coming in from SourceNamespaceSymbol.DeclaringSyntaxReferences\r\n\r\n**Expected Behavior**:\r\nThese allocations should not be done. There is a comment in [GeneratedCodeUtilities](https://github.com/dotnet/roslyn/blob/a1805016f9a2fae804d69220a9179fba086ba98f/src/Compilers/Core/Portable/InternalUtilities/GeneratedCodeUtilities.cs#L24) which mentions this perf hit.\r\n\r\n**Actual Behavior**:\r\nA lot of allocations. They are coming in from [here](https://github.com/dotnet/roslyn/blob/master/src/Compilers/Core/Portable/DiagnosticAnalyzer/AnalyzerDriver.cs#L1537)\r\n\r\n```\r\nMemory traffic between Snapshot #2 and Snapshot #3\r\n\r\nMicrosoft.CodeAnalysis.CSharp.NamespaceDeclarationSyntaxReference allocated 37499724 B in 3124977 objects on stacktrace:\r\n\r\nMicrosoft.CodeAnalysis.CSharp.Symbols.SourceNamespaceSymbol+<>c.<.cctor>b__49_0(SingleNamespaceDeclaration d)\r\nSystem.Collections.Immutable.ImmutableArray.CreateRange<TSource, TResult>(ImmutableArray<T> items, Func<T, TResult> selector)\r\nMicrosoft.CodeAnalysis.CSharp.Symbols.SourceNamespaceSymbol.get_DeclaringSyntaxReferences()\r\nMicrosoft.CodeAnalysis.CSharp.Symbol.get_DeclaringSyntaxReferences()\r\nMicrosoft.CodeAnalysis.Diagnostics.AnalyzerDriver.IsGeneratedCodeSymbol(ISymbol symbol)\r\nMicrosoft.CodeAnalysis.Diagnostics.AnalyzerDriver.TryProcessSymbolDeclared(SymbolDeclaredCompilationEvent symbolEvent, AnalysisScope analysisScope, AnalysisState analysisStateOpt, CancellationToken cancellationToken)\r\nMicrosoft.CodeAnalysis.Diagnostics.AnalyzerDriver.TryProcessEventCore(CompilationEvent e, AnalysisScope analysisScope, AnalysisState analysisStateOpt, CancellationToken cancellationToken)\r\nMicrosoft.CodeAnalysis.Diagnostics.AnalyzerDriver+<ProcessCompilationEventsCoreAsync>d__70.MoveNext()\r\n```\r\n\r\nThis is one of the heaviest contenders while typing in VSMac."},{"Id":"9008252335","Type":"IssuesEvent","CreatedAt":"2019-02-05T02:53:01","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/33128","RelatedDescription":"Opened issue \"Cannot see all parameters in intellisense\" (#33128) at dotnet/roslyn","RelatedBody":"**Version Used**: Filed against Visual Studio 2013 Update 5\r\n\r\n🔗 Originally filed as https://devdiv.visualstudio.com/DevDiv/_workitems/edit/202782\r\n\r\n## Description\r\n\r\nIf you have a method with a large number of parameters, when calling the method the intellisense parameter prompt box is fixed and cannot display all required parameters. \r\n\r\n## Repro Steps\r\n\r\ncreate a method with so many parameters, that when called from anther piece of code, the list extends beyond the popup window. \r\n\r\n## Impact\r\n\r\nYou have no way of knowing what parameters to supply, when method is inside an external lib."},{"Id":"9008235996","Type":"IssuesEvent","CreatedAt":"2019-02-05T02:46:55","Actor":"sharwell","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/33127","RelatedDescription":"Opened issue \"Visual Studio 2015 moves members to new line\" (#33127) at dotnet/roslyn","RelatedBody":"**Version Used**: Originally filed against Visual Studio 2015\r\n\r\n:link: Originally filed as https://devdiv.visualstudio.com/DevDiv/_workitems/edit/200576\r\n\r\n## Problem Description \r\n\r\nDescription: When we need to use a backing field for a property, we have a practice of combining the backing field with the property it goes to: \r\n\r\n```csharp\r\npublic int MyProperty \r\n{ \r\nget { return _MyProperty; } \r\nset { _MyProperty = value; } \r\n} private int _MyProperty; \r\n```\r\n\r\nWe prefer this greatly to a long list of member variables at the top for many reasons. \r\n\r\n1. You don't have to scroll up and down, you see it all right there. \r\n2. Variable doesn't get left on refactor when property is removed. \r\n3. When copy and pasting things around, you never forget to bring the member variable along. \r\nThe problem: \r\n\r\nIn Visual Studio 2013, there was no problem. \r\n\r\nVisual Studio 2015 is now moving the member variable to the next line when we Press <kbd>Ctrl</kbd>+<kbd>E</kbd>, <kbd>D</kbd> or choose Edit &rarr; Advanced &rarr; Format Document. \r\n\r\n```csharp\r\npublic int MyProperty \r\n{ \r\nget { return _MyProperty; } \r\nset { _MyProperty = value; } \r\n} \r\nprivate int _MyProperty; \r\n```\r\n\r\nI have played with the Tools &rarr; Options &rarr; Text Editor &rarr; C# &rarr; Formatting &rarr; New Lines section. \r\n\r\nAnyone have any idea how to make visual studio stop moving the member variable to a new line? \r\n\r\n## Repro Steps\r\n\r\nCreate a property with a backing field on the last line, same as the last squirly brace: \r\n\r\n```csharp\r\npublic int MyProperty \r\n{ \r\nget { return _MyProperty; } \r\nset { _MyProperty = value; } \r\n} private int _MyProperty; \r\n```\r\n\r\nPress <kbd>Ctrl</kbd>+<kbd>E</kbd>, <kbd>D</kbd> or choose Edit &rarr; Advanced &rarr; Format Document \r\n\r\n\r\n\r\n## Impact\r\n\r\nWe have large files, especially many with INotifyPropertyChanged implement or a lazy implementation where the object is instantiated on first get:. \r\n\r\nOur entire document is changing because so many properties are done this way. \r\n\r\nIt causes significant issues with whitespace checkins. It is blocking us from using our required style. Engineers have to go back and fix the document."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"9008389745","Type":"PullRequestEvent","CreatedAt":"2019-02-05T03:43:58","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6952","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6952) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9006946409","Type":"IssuesEvent","CreatedAt":"2019-02-04T21:30:21","Actor":"letmaik","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6951","RelatedDescription":"Opened issue \"Support for anonymous types\" (#6951) at dotnet/corert","RelatedBody":"I'm trying to serialize JSON using `Newtonsoft.JSON` by making use of anonymous types and even though CoreRT doesn't raise an error I have tried to play around with `rd.xml` to fix this issue, without success:\r\n\r\n```cs\r\nvar a = JObject.FromObject(new { // anonymous type here\r\n  foo = \"bar\"\r\n});\r\nConsole.WriteLine(a.ToString()); // prints {}\r\n\r\n// not relying on reflection works:\r\nvar b = new JObject();\r\nb.Add(\"foo\", \"bar\");\r\nConsole.WriteLine(b.ToString()); // prints { \"foo\": \"bar\" }\r\n```\r\n\r\nIn short, does CoreRT fully support reflection on anonymous types? It's worrying that no error is thrown here if this is an unsupported feature. Or maybe just a bug?"},{"Id":"9006691241","Type":"PullRequestEvent","CreatedAt":"2019-02-04T20:46:25","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6950","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6950) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas"},{"Id":"9006284118","Type":"PullRequestEvent","CreatedAt":"2019-02-04T19:39:03","Actor":"Dotnet-GitSync-Bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/6950","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#6950) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"9005444041","Type":"IssuesEvent","CreatedAt":"2019-02-04T17:21:10","Actor":"alpencolt","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6949","RelatedDescription":"Opened issue \"[Question] Assembly loading\" (#6949) at dotnet/corert","RelatedBody":"I'm interesting in assembly loading functional `Assembly.LoadFile()`. How it can implemented and will it be implemented? I see two ways how to do it:\r\n- First option is using interpreter #5011 (as I see @tonerdo has huge progress)\r\n- Second is using Native Library mode (https://github.com/dotnet/corert/tree/master/samples/NativeLibrary). Libraries can be precopiled an loaded (like `dlopen`). Can it work?\r\n\r\ncc @jkotas @kvochko @iarischenko @kbaladurin "},{"Id":"9005386875","Type":"IssuesEvent","CreatedAt":"2019-02-04T17:12:37","Actor":"davidknise","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/6947","RelatedDescription":"Closed issue \"Assembly.GetEntryAssembly().Location could be the single Exe\" (#6947) at dotnet/corert","RelatedBody":"First, is there a way to get the full path to the executing ***.exe** file?\r\n\r\nI see the reasoning that `Assembly.GetEntryAssembly()` value is an empty string because the assembly which it was built in no longer exists. I actually expected this to be the single executable, no matter where I was, because I wasn't thinking about the code from a pre-compiled/symbols perspective, I was thinking of it from a post-compile. **Should it be the compiled ***.exe**?\r\n\r\n**Scenario:**\r\nI'm building our single-file installer as a small CoreRT CLI. Users can double click it or call it from the command line. The installer sets up a folder structure and drops our latest bits in the right spots. Because of this, I expect the installation directory to be empty, *but it would make sense to allow for the installer to be in the directory*. In addition, I ask them if they would like to clear the directory. I'd like to skip deleting this file or allow it to be the only file in the directory, but I don't know it's name and can't get a file handle to identify it either.\r\n\r\nRelated issues:\r\n[#1773](https://github.com/dotnet/corert/issues/1773) [#5467](https://github.com/dotnet/corert/issues/5467)"},{"Id":"9005032833","Type":"IssuesEvent","CreatedAt":"2019-02-04T16:26:45","Actor":"Sergio0694","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6948","RelatedDescription":"Opened issue \"[.NET Native] Errors ILT0005 and NUTC3033 when building a UWP app with ImageSharp (.NET Standard)\" (#6948) at dotnet/corert","RelatedBody":"Hello,\r\nI'm working on a UWP project (currently targeting SDK 17134), and since I referenced the [ImageSharp library](https://github.com/SixLabors/ImageSharp) (which targets .NET Standard) I can no longer build my UWP app in Release mode.\r\n\r\n[This is the issue](https://github.com/SixLabors/ImageSharp/issues/828) on the ImageSharp repo, but I thought I'd post it here as well, since it's probably caused by the .NET Native compiler more than the library itself.\r\n\r\nHere are the errors I'm getting:\r\n\r\n> ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\runtime.win10-x64.microsoft.net.native.compiler\\2.2.1\\tools\\x64\\ilc\\Tools\\nutc_driver.exe @\"C:\\Users\\Sergi\\source\\repos\\ImageSharpRepro\\ImageSharpRepro\\obj\\x64\\Release\\ilc\\intermediate\\MDIL\\ImageSharpRepro.rsp\"' returned exit code 1\r\n\r\n> Error: NUTC3033:Internal Compiler Error: Invalid MethodImpl body=6000353 decl=600032d when loading type 'SixLabors.ImageSharp.Processing.Processors.Quantization.PaletteQuantizer`1<TPixel>' from assembly 'SixLabors.ImageSharp' while loading MethodImpl list for 'instance SixLabors.ImageSharp.Processing.Processors.Quantization.IFrameQuantizer`1<TPixel1> SixLabors.ImageSharp.Processing.Processors.Quantization.PaletteQuantizer`1<TPixel>.SixLabors.ImageSharp.Processing.Processors.Quantization.IQuantizer.CreateFrameQuantizer<TPixel1>(SixLabors.ImageSharp.Configuration)'. while loading type 'SixLabors.ImageSharp.Processing.Processors.Quantization.PaletteQuantizer`1<TPixel>'. while computing compilation roots.\r\n\r\n### Steps to Reproduce\r\n\r\n- Create a new UWP project (I'm targeting SDK 17134 and using 16299 as minimum)\r\n- Reference the ImageSharp NuGet package (I'm using version `1.0.0-beta0006`)\r\n- Try to build the app in Release mode (either x86 or x64), this fails with the errors above\r\n\r\nI've already sent a repro to dotnetnative@microsoft.com - but the issue can really just be easily reproduced in any UWP app just by referencing ImageSharp and trying to build in Release.\r\n\r\n**NOTE**: I've tried to build the app both using .NETCore.UWP 6.1.9, 6.2.2 and 6.2.3, all of them fail with similar errors. If you have an internal build of the upcoming 6.2.4 package maybe you could try using that one to see if this particular glitch has already been addressed there?\r\n\r\nPlease let me know if you need any more info from me, I'm happy to help!\r\nThank you in advance.\r\nSergio"},{"Id":"9003664470","Type":"PullRequestEvent","CreatedAt":"2019-02-04T13:09:21","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6932","RelatedDescription":"Merged pull request \"Remove code that was moved to System.Native\" (#6932) at dotnet/corert","RelatedBody":"Testing build. I assume the C# P/Invoke prototypes should be moved to shared CoreLib (to be in CoreFX too). Will this be ok with ProjectN?"},{"Id":"9001575439","Type":"IssuesEvent","CreatedAt":"2019-02-04T05:04:37","Actor":"davidknise","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/6947","RelatedDescription":"Opened issue \"Assembly.GetEntryAssembly().Location could be the single Exe\" (#6947) at dotnet/corert","RelatedBody":"First, is there a way to get the full path to the executing ***.exe** file?\r\n\r\nI see the reasoning that `Assembly.GetEntryAssembly()` value is an empty string because the assembly which it was built in no longer exists. I actually expected this to be the single executable, no matter where I was, because I wasn't thinking about the code from a pre-compiled/symbols perspective, I was thinking of it from a post-compile. **Should it be the compiled ***.exe**?\r\n\r\n**Scenario:**\r\nI'm building our single-file installer as a small CoreRT CLI. Users can double click it or call it from the command line. The installer sets up a folder structure and drops our latest bits in the right spots. Because of this, I expect the installation directory to be empty, *but it would make sense to allow for the installer to be in the directory*. In addition, I ask them if they would like to clear the directory. I'd like to skip deleting this file or allow it to be the only file in the directory, but I don't know it's name and can't get a file handle to identify it either.\r\n\r\nRelated issues:\r\n[#1773](https://github.com/dotnet/corert/issues/1773) [#5467](https://github.com/dotnet/corert/issues/5467)"},{"Id":"9001425602","Type":"PullRequestEvent","CreatedAt":"2019-02-04T03:57:07","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/6943","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#6943) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @MichalStrehovsky"}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"9008162265","Type":"IssuesEvent","CreatedAt":"2019-02-05T02:21:52","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2908","RelatedDescription":"Opened issue \"Improve performance of ResolveFrameworkReferences and related tasks/targets\" (#2908) at dotnet/sdk","RelatedBody":"See https://github.com/dotnet/sdk/pull/2887#issuecomment-460488924\r\n"},{"Id":"9007690392","Type":"PullRequestEvent","CreatedAt":"2019-02-05T00:01:48","Actor":"dotnet-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/2907","RelatedDescription":"Opened pull request \"Merge release/2.1.4xx to release/2.1.5xx\" (#2907) at dotnet/sdk","RelatedBody":"\nThis is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.4xx-to-release/2.1.5xx\ngit reset --hard upstream/release/2.1.5xx\ngit merge upstream/release/2.1.4xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.4xx-to-release/2.1.5xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"9007685512","Type":"IssuesEvent","CreatedAt":"2019-02-05T00:00:37","Actor":"pranavkm","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/2906","RelatedDescription":"Opened issue \"Building a project with OutputType = Exe and implicit fx reference disabled causes build to fail.\" (#2906) at dotnet/sdk","RelatedBody":"## Repro steps\r\n\r\n1. dotnet new console\r\n2. Edit the project file to disable implicit fx reference and instead add an explicit reference to `Microsoft.NETCore.App`:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.NETCore.App\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n3. `dotnet build`\r\n\r\nBuild fails saying it was unable to copy the AssemblyName.exe file\r\n\r\n> C:\\Users\\Pranav\\.dotnet\\x64\\sdk\\3.0.100-preview-010184\\Microsoft.Common.CurrentVersion.targets(4560,5): error MSB3030: Could not copy the file \"D:\\temp\\test1\\obj\\Debug\\netcoreapp3.0\\test1.exe\" because it was not found. [D:\\temp\\test1\\test1.csproj]\r\n\r\nSetting `<UseAppHost>false</UseAppHost>` in the project file fixes things.\r\n\r\n*Background*:\r\nThe RazorSdk builds in a separate repo that's an arcade dependency to AspNetCore. The Sdk's test applications build against test shims rather than the actual AspNetCore fx to avoid cyclical dependencies. To do so, they set `DisableImplicitFrameworkReferences = true`."}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-04T07:33:23","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Update links","State":"open","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Open PR \"Update links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"},{"Id":"391459057","IsPullRequest":true,"CreatedAt":"2019-01-03T04:47:09","Actor":"manne","Number":"122","RawContent":null,"Title":"targets the existing document","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/122","RelatedDescription":"Closed or merged PR \"targets the existing document\" (#122)"},{"Id":"384569679","IsPullRequest":true,"CreatedAt":"2019-01-03T04:46:31","Actor":"JamesNK","Number":"121","RawContent":null,"Title":"Add Newtonsoft.Json","State":"closed","Body":"// @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/121","RelatedDescription":"Closed or merged PR \"Add Newtonsoft.Json\" (#121)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2018-12-16T11:57:53","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"open","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Open issue \"No logo provided for Prism\" (#126)"},{"Id":"391459919","IsPullRequest":false,"CreatedAt":"2018-12-16T11:53:31","Actor":"manne","Number":"125","RawContent":null,"Title":"Missing logo for MVVM Light Toolkit","State":"open","Body":"`https://raw.githubusercontent.com/paulcbetts/mvvmlight/master/Installer/InstallItems/html/MVVM_BlackText_190x147.png` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L137-L139","Url":"https://github.com/dotnet/foundation/issues/125","RelatedDescription":"Open issue \"Missing logo for MVVM Light Toolkit\" (#125)"},{"Id":"391459812","IsPullRequest":false,"CreatedAt":"2018-12-16T11:52:07","Actor":"manne","Number":"124","RawContent":null,"Title":"Missing logo for Umbraco","State":"open","Body":"`https://fbcdn-profile-a.akamaihd.net/hprofile-ak-xap1/v/t1.0-1/p160x160/971596_519168901464439_566592989_n.png?oh=ce61e5b4cbd60c0d99c4164cbb05a434&oe=54F091C9&__gda__=1424472439_c9f76213a915bc2af88246f464f29e8b` results in a 404.\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L149-L151","Url":"https://github.com/dotnet/foundation/issues/124","RelatedDescription":"Open issue \"Missing logo for Umbraco\" (#124)"},{"Id":"391459677","IsPullRequest":false,"CreatedAt":"2018-12-16T11:50:29","Actor":"manne","Number":"123","RawContent":null,"Title":"Missing logo for Steeltoe","State":"open","Body":"`https://brandfolder.com/pivotal-assets/attachments/ohxttd-7yxa60-clvf50/pivotal-assets-pivotal-genericfile.png` redirects to a sign in page\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L128-L130","Url":"https://github.com/dotnet/foundation/issues/123","RelatedDescription":"Open issue \"Missing logo for Steeltoe\" (#123)"},{"Id":"384212839","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:50","Actor":"stefanov-stefan","Number":"120","RawContent":null,"Title":"Added Telerik info","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/120","RelatedDescription":"Closed or merged PR \"Added Telerik info\" (#120)"},{"Id":"384212448","IsPullRequest":true,"CreatedAt":"2018-11-26T09:33:22","Actor":"stefanov-stefan","Number":"119","RawContent":null,"Title":"Added Telerik UWP proj","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/119","RelatedDescription":"Closed or merged PR \"Added Telerik UWP proj\" (#119)"},{"Id":"382378851","IsPullRequest":true,"CreatedAt":"2018-11-23T10:32:15","Actor":"pkgw","Number":"118","RawContent":null,"Title":"Update WorldWide Telescope","State":"closed","Body":"Some layout fixes, but the main change is that @pkgw is now the project director.","Url":"https://github.com/dotnet/foundation/pull/118","RelatedDescription":"Closed or merged PR \"Update WorldWide Telescope\" (#118)"},{"Id":"380070557","IsPullRequest":true,"CreatedAt":"2018-11-23T10:31:49","Actor":"leastprivilege","Number":"117","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"significant whitespace","Url":"https://github.com/dotnet/foundation/pull/117","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#117)"},{"Id":"379731798","IsPullRequest":true,"CreatedAt":"2018-11-13T04:22:32","Actor":"leastprivilege","Number":"114","RawContent":null,"Title":"Update identityserver.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/114","RelatedDescription":"Closed or merged PR \"Update identityserver.md\" (#114)"},{"Id":"379777451","IsPullRequest":true,"CreatedAt":"2018-11-13T04:21:35","Actor":"scottbrady91","Number":"116","RawContent":null,"Title":"Update to IdentityManager project","State":"closed","Body":"My employer and I have recently taken over the IdentityManager project from Dom & Brock. I've updated the IdentityManager page to reflect this and the newer version of the core repo.","Url":"https://github.com/dotnet/foundation/pull/116","RelatedDescription":"Closed or merged PR \"Update to IdentityManager project\" (#116)"},{"Id":"379733880","IsPullRequest":true,"CreatedAt":"2018-11-13T04:20:23","Actor":"leastprivilege","Number":"115","RawContent":null,"Title":"Create identitymodel.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/115","RelatedDescription":"Closed or merged PR \"Create identitymodel.md\" (#115)"},{"Id":"371941750","IsPullRequest":true,"CreatedAt":"2018-11-01T16:20:07","Actor":"SeanKilleen","Number":"113","RawContent":null,"Title":"Update logo for couchbase-lite in projects.json","State":"closed","Body":"Uses a working link to the logo.\r\n\r\nResolves https://github.com/dotnet/dotnetfoundation-website/issues/65\r\n\r\nFix can be verified by copying/pasting the URL into a browser.","Url":"https://github.com/dotnet/foundation/pull/113","RelatedDescription":"Closed or merged PR \"Update logo for couchbase-lite in projects.json\" (#113)"},{"Id":"365089074","IsPullRequest":false,"CreatedAt":"2018-09-29T02:45:47","Actor":"athinboy","Number":"112","RawContent":null,"Title":"Suggest: key  F12  go to source code of dotnetcore  rather then metadata","State":"open","Body":"Apology for my poor english!\r\n\r\nI have change to Java due to the boss's decision .   I think dotnet  need a big change. In China, more and more dotnet project go to die,  but new java project continuously increase!\r\n\r\nI suggest:key  F12  go to source code of dotnetcore  rather then metadata(e.g.    ***.dll.source.zip \\****.exe.source.zip),   maybe there is already done,but i don't know. \r\n\r\nthanks!\r\n","Url":"https://github.com/dotnet/foundation/issues/112","RelatedDescription":"Open issue \"Suggest: key  F12  go to source code of dotnetcore  rather then metadata\" (#112)"},{"Id":"356296763","IsPullRequest":false,"CreatedAt":"2018-09-02T16:49:34","Actor":"adamralph","Number":"111","RawContent":null,"Title":"Sourcelink location is confusing","State":"open","Body":"The README has link under the \"Cameron Taggart\" section pointing to https://github.com/ctaggart/SourceLink but the project now seems to live under the \"dotnet\" org in https://github.com/dotnet/sourcelink/ which suggests the link should be changed to that, and moved under the \"Microsoft\" section.","Url":"https://github.com/dotnet/foundation/issues/111","RelatedDescription":"Open issue \"Sourcelink location is confusing\" (#111)"},{"Id":"353832272","IsPullRequest":true,"CreatedAt":"2018-08-27T16:21:55","Actor":"jkonicki","Number":"110","RawContent":null,"Title":"Fix - add missing comma","State":"closed","Body":"@jongalloway - Looks like I missed a comma in my previous PR. Here is the fix.","Url":"https://github.com/dotnet/foundation/pull/110","RelatedDescription":"Closed or merged PR \"Fix - add missing comma\" (#110)"},{"Id":"352736883","IsPullRequest":true,"CreatedAt":"2018-08-23T23:10:07","Actor":"anthonychu","Number":"108","RawContent":null,"Title":"Fix errors in projects.json","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/108","RelatedDescription":"Closed or merged PR \"Fix errors in projects.json\" (#108)"},{"Id":"353536205","IsPullRequest":true,"CreatedAt":"2018-08-23T23:09:07","Actor":"jkonicki","Number":"109","RawContent":null,"Title":"Add Steeltoe to the project listing","State":"closed","Body":"Hi @jongalloway, Here is the PR for adding Steeltoe to the projects listing.  Let me know if you need any changes. \r\nThanks.","Url":"https://github.com/dotnet/foundation/pull/109","RelatedDescription":"Closed or merged PR \"Add Steeltoe to the project listing\" (#109)"},{"Id":"339545098","IsPullRequest":true,"CreatedAt":"2018-08-17T23:19:54","Actor":"slide","Number":"105","RawContent":null,"Title":"Add DLR/IronPython2/IronPython3","State":"closed","Body":"Add DLR/IronPython2/IronPython3 to project list.","Url":"https://github.com/dotnet/foundation/pull/105","RelatedDescription":"Closed or merged PR \"Add DLR/IronPython2/IronPython3\" (#105)"},{"Id":"336936558","IsPullRequest":false,"CreatedAt":"2018-08-07T07:06:40","Actor":"tomkerkhove","Number":"104","RawContent":null,"Title":"About still mentions CodePlex","State":"closed","Body":"About still mentions CodePlex which is now in archive mode.\r\n\r\n![image](https://user-images.githubusercontent.com/4345663/42086259-e0b7d008-7b92-11e8-96c9-02ee61ddc457.png)\r\n\r\nIs this something that I can PR?","Url":"https://github.com/dotnet/foundation/issues/104","RelatedDescription":"Closed issue \"About still mentions CodePlex\" (#104)"},{"Id":"340355507","IsPullRequest":false,"CreatedAt":"2018-07-11T18:28:16","Actor":"Eilon","Number":"107","RawContent":null,"Title":"Links to .NET Foundation web site use HTTP instead of HTTPS","State":"open","Body":"It appears that HTTPS works just fine: https://www.dotnetfoundation.org/\r\n\r\nBut the links at these places use HTTP:\r\n1. The link in the header of https://github.com/dotnet/home\r\n2. The link in the header of https://github.com/dotnet\r\n3. Some links in https://github.com/dotnet/home/blob/master/README.md (both to .NET Foundation, and a GitHub link to another project)\r\n\r\nThese links should all change to HTTPS.","Url":"https://github.com/dotnet/foundation/issues/107","RelatedDescription":"Open issue \"Links to .NET Foundation web site use HTTP instead of HTTPS\" (#107)"},{"Id":"340126921","IsPullRequest":false,"CreatedAt":"2018-07-11T07:41:25","Actor":"glatzert","Number":"106","RawContent":null,"Title":"Updates are not requested from local WSUS","State":"open","Body":"The Team somewhen Mention, that fixes should be installed automatically, if .NET Core is on a Windows Server.\r\nThis seems not to work. What are the prerequisits for this to be working?","Url":"https://github.com/dotnet/foundation/issues/106","RelatedDescription":"Open issue \"Updates are not requested from local WSUS\" (#106)"},{"Id":"326192782","IsPullRequest":true,"CreatedAt":"2018-05-24T16:33:09","Actor":"danmosemsft","Number":"103","RawContent":null,"Title":"Add ML.NET to readme","State":"closed","Body":"cc @shauheen @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/103","RelatedDescription":"Closed or merged PR \"Add ML.NET to readme\" (#103)"},{"Id":"321003666","IsPullRequest":true,"CreatedAt":"2018-05-18T19:05:07","Actor":"shauheen","Number":"102","RawContent":null,"Title":"Update projects.json adding MLNET","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/102","RelatedDescription":"Closed or merged PR \"Update projects.json adding MLNET\" (#102)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"406569785","IsPullRequest":true,"CreatedAt":"2019-02-05T04:37:18","Actor":"BruceForstall","Number":"22417","RawContent":null,"Title":"Extract setting __TestTimeout in runtest.py","State":"closed","Body":"Avoid setting or reporting setting it twice","Url":"https://github.com/dotnet/coreclr/pull/22417","RelatedDescription":"Closed or merged PR \"Extract setting __TestTimeout in runtest.py\" (#22417)"},{"Id":"406393362","IsPullRequest":true,"CreatedAt":"2019-02-05T04:04:31","Actor":"benaadams","Number":"22397","RawContent":null,"Title":"Fix string.strlen","State":"closed","Body":"Fixes #22393\r\n\r\nWhat's the best approach for adding a coreclr test for this? (e.g. the code from #22393); as the coreclr tests are a little different than corefx.\r\n\r\n/cc @jkotas @stephentoub ","Url":"https://github.com/dotnet/coreclr/pull/22397","RelatedDescription":"Closed or merged PR \"Fix string.strlen\" (#22397)"},{"Id":"406611822","IsPullRequest":true,"CreatedAt":"2019-02-05T03:04:37","Actor":"BruceForstall","Number":"22425","RawContent":null,"Title":"Configure MSBuild debug path and save any logs","State":"open","Body":"We have had many problems in the CI with MSBuild failing, and not\r\ncapturing the failure logs.\r\n\r\nSee https://github.com/dotnet/coreclr/issues/20236.\r\n\r\nSo, for all msbuild invocations, set MSBUILDDEBUGPATH to a new,\r\ndistinguished, subdirectory of the bin\\Logs directory, named\r\n\"MsbuildDebugLogs\". Change the CI to upload any log files found\r\nthere.\r\n\r\nFixes https://github.com/dotnet/coreclr/issues/22424\r\n","Url":"https://github.com/dotnet/coreclr/pull/22425","RelatedDescription":"Open PR \"Configure MSBuild debug path and save any logs\" (#22425)"},{"Id":"406605839","IsPullRequest":false,"CreatedAt":"2019-02-05T02:28:56","Actor":"BruceForstall","Number":"22424","RawContent":null,"Title":"Save MSBuild logs when CI jobs fail","State":"open","Body":"Related to https://github.com/dotnet/coreclr/issues/20236.\r\n\r\nChange the CI to create a new directory for saving MSBuild logs, and set the environment variable MSBUILDDEBUGPATH to point to that path. Then, upload all logs stored there, if any are written. Upload them even if any other job failures exist, but don't fail if there are no logs to upload.\r\n","Url":"https://github.com/dotnet/coreclr/issues/22424","RelatedDescription":"Open issue \"Save MSBuild logs when CI jobs fail\" (#22424)"},{"Id":"406604704","IsPullRequest":false,"CreatedAt":"2019-02-05T02:23:26","Actor":"BruceForstall","Number":"22423","RawContent":null,"Title":"assertion failed: !pMDAfterConstraintResolution->IsInterface() in constrainedcall test","State":"open","Body":"I saw this in both JitStress=1 and JitStress=2, but not without stress.\r\n\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/arm64_cross_checked_ubuntu16.04_jitstress1_tst_prtest/25/consoleFull\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/arm64_cross_checked_ubuntu16.04_jitstress2_tst_prtest/32/consoleFull\r\n\r\n(My PR had no source code changes)\r\n\r\nAssert failure(PID 6447 [0x0000192f], Thread: 6447 [0x192f]): !pMDAfterConstraintResolution->IsInterface()\r\n18:01:00             File: /mnt/j/workspace/dotnet_coreclr/master/arm64_cross_checked_ubuntu16.04_prtest/src/vm/jitinterface.cpp Line: 5218\r\n\r\nTest:\r\n```\r\nLoader_classloader._DefaultInterfaceMethods_constrainedcall_constrainedcall_constrainedcall_._DefaultInterfaceMethods_constrainedcall_constrainedcall_constrainedcall_sh\r\n```\r\n\r\nStack fragment:\r\n```\r\n18:03:32 #8  0x0000ffff9f7fc414 in CEEInfo::getCallInfo (this=0xffffc33a0350, pResolvedToken=0xffffc339dcc0, pConstrainedResolvedToken=0xffffc339dc70, callerHandle=0xffff2746f730, flags=(CORINFO_CALLINFO_ALLOWINSTPARAM | CORINFO_CALLINFO_CALLVIRT | CORINFO_CALLINFO_SECURITYCHECKS), pResult=0xffffc339dda0) at /mnt/j/workspace/dotnet_coreclr/master/arm64_cross_checked_ubuntu16.04_prtest/src/vm/jitinterface.cpp:5218\r\n18:03:32         directMethod = 0xffff274a37a8\r\n18:03:32         fForceUseRuntimeLookup = 0\r\n18:03:32         pTargetMD = <optimized out>\r\n18:03:32         pMD = <optimized out>\r\n18:03:32         resolvedCallVirt = <optimized out>\r\n18:03:32         directCall = <optimized out>\r\n18:03:32         signatureKind = <optimized out>\r\n18:03:32         pMDAfterConstraintResolution = <optimized out>\r\n18:03:32         fResolvedConstraint = 0\r\n18:03:32         __gcHolder = <optimized out>\r\n18:03:32         __pThread = <optimized out>\r\n18:03:32         CURRENT_THREAD = <optimized out>\r\n18:03:32         CURRENT_THREAD = <optimized out>\r\n18:03:32         __fExceptionCatched = false\r\n18:03:32         __pThread = <optimized out>\r\n18:03:32         __pUnCEntryFrame = <optimized out>\r\n18:03:32         CURRENT_THREAD = <optimized out>\r\n18:03:32 #9  0x0000ffff9cde05d8 in Compiler::eeGetCallInfo (this=<optimized out>, pResolvedToken=<optimized out>, pConstrainedToken=0x6, flags=(CORINFO_CALLINFO_ALLOWINSTPARAM | CORINFO_CALLINFO_CALLVIRT | CORINFO_CALLINFO_KINDONLY | CORINFO_CALLINFO_VERIFICATION | CORINFO_CALLINFO_LDFTN | unknown: 6400), pResult=<optimized out>) at /mnt/j/workspace/dotnet_coreclr/master/arm64_cross_checked_ubuntu16.04_prtest/src/jit/ee_il_dll.hpp:40\r\n18:03:32 No locals.\r\n18:03:32 #10 Compiler::impImportBlockCode (this=<optimized out>, block=<optimized out>) at /mnt/j/workspace/dotnet_coreclr/master/arm64_cross_checked_ubuntu16.04_prtest/src/jit/importer.cpp:14078\r\n18:03:32         lclTyp = var_types::TYP_SHORT\r\n18:03:32         clsFlags = 0\r\n18:03:32         resolvedToken = <optimized out>\r\n18:03:32         newObjThisPtr = <optimized out>\r\n18:03:32         isLocal = true\r\n18:03:32         mflags = 0\r\n18:03:32         stelemClsHnd = <optimized out>\r\n18:03:32         op1 = <optimized out>\r\n18:03:32         uns = true\r\n18:03:32         ldelemClsHnd = <optimized out>\r\n18:03:32         op2 = <optimized out>\r\n18:03:32         opcode = <optimized out>\r\n18:03:32         clsHnd = <optimized out>\r\n18:03:32         fieldInfo = <optimized out>\r\n18:03:32         sz = <optimized out>\r\n18:03:32         args = <optimized out>\r\n18:03:32         callInfo = <optimized out>\r\n18:03:32         nxtStmtIndex = <optimized out>\r\n18:03:32         opcodeOffs = <optimized out>\r\n18:03:32         lastSpillOffs = <optimized out>\r\n18:03:32         prevOpcode = CEE_ILLEGAL\r\n18:03:32         numArgs = <optimized out>\r\n18:03:32         codeAddr = <optimized out>\r\n18:03:32         prefixFlags = <optimized out>\r\n18:03:32         codeEndp = <optimized out>\r\n18:03:32         delegateCreateStart = <optimized out>\r\n18:03:32         nxtStmtOffs = <optimized out>\r\n18:03:32         jmpDist = <optimized out>\r\n18:03:32         accessAllowedResult = <optimized out>\r\n18:03:32         tiRetVal = <optimized out>\r\n18:03:32         helper = <optimized out>\r\n18:03:32         arrayNodeFrom = <optimized out>\r\n18:03:32         arrayNodeTo = <optimized out>\r\n18:03:32 #11 0x0000ffff9cdecb0c in Compiler::impImportBlock(BasicBlock*)::$_1::operator()(Compiler::impImportBlock(BasicBlock*)::FilterVerificationExceptionsParam*) const (this=<optimized out>, pParam=<optimized out>) at /mnt/j/workspace/dotnet_coreclr/master/arm64_cross_checked_ubuntu16.04_prtest/src/jit/importer.cpp:17258\r\n18:03:32 No locals.\r\n18:03:32 #12 Compiler::impImportBlock (this=0xe920fa8, block=0xe9294b8) at /mnt/j/workspace/dotnet_coreclr/master/arm64_cross_checked_ubuntu16.04_prtest/src/jit/importer.cpp:17268\r\n18:03:32         __param = 0xffffc339e078\r\n18:03:32         disposition = -1\r\n18:03:32         baseTmp = <optimized out>\r\n18:03:32         reimportSpillClique = <optimized out>\r\n18:03:32         tgtBlock = <optimized out>\r\n18:03:32 #13 0x0000ffff9cdef568 in Compiler::impImport (this=<optimized out>, method=<optimized out>) at /mnt/j/workspace/dotnet_coreclr/master/arm64_cross_checked_ubuntu16.04_prtest/src/jit/importer.cpp:18343\r\n18:03:32         dsc = 0xe9295d8\r\n18:03:32         inlineRoot = <optimized out>\r\n```\r\n","Url":"https://github.com/dotnet/coreclr/issues/22423","RelatedDescription":"Open issue \"assertion failed: !pMDAfterConstraintResolution->IsInterface() in constrainedcall test\" (#22423)"},{"Id":"406595668","IsPullRequest":false,"CreatedAt":"2019-02-05T01:36:53","Actor":"tarekgh","Number":"22422","RawContent":null,"Title":"GC_Features._HeapExpansion_bestfit_1_bestfit_1_._HeapExpansion_bestfit_1_bestfit_1_sh failing on coreclr-ci","State":"open","Body":"https://mc.dot.net/#/user/coreclr-pulls/pr~2Fdotnet~2Fcoreclr~2Frefs~2Fpull~2F22331~2Fmerge/test~2Ffunctional~2Fcli~2Fpri0/20190204.734/workItem/GC.Features/analysis/xunit/GC_Features._HeapExpansion_bestfit_1_bestfit_1_~2F_HeapExpansion_bestfit_1_bestfit_1_sh\r\n\r\n```\r\n Xunit.Sdk.TrueException\r\nUbuntu.1404.Arm32.Open-arm-Checked-no_tiered_compilation\r\nGet Repro environment\r\nUnhandled Exception of Type Xunit.Sdk.TrueException\r\nMessage :\r\n\r\nAssert failure(PID 16516 [0x00004084], Thread: 16516 [0x4084]): (chosen_power2 && (i == 0)) || (!chosen_power2) && (i < free_space_count)\r\n    File: /__w/2/s/src/gc/gc.cpp Line: 9084\r\n    Image: /ssd/dotnetbuild/work/a37e46c3-25da-44c7-8522-334270327137/Payload/corerun\r\n\r\n/ssd/dotnetbuild/work/a37e46c3-25da-44c7-8522-334270327137/Work/1c02bafd-705e-4276-af6c-e31b0a86a880/Exec/HeapExpansion/bestfit_1/bestfit_1.sh: line 251: 16516 Aborted                 $_DebuggerFullPath \\\"$CORE_ROOT/corerun\\\" $ExePath $CLRTestExecutionArguments\r\n/n/nReturn code:      1/nRaw output file:      /ssd/dotnetbuild/work/a37e46c3-25da-44c7-8522-334270327137/Work/1c02bafd-705e-4276-af6c-e31b0a86a880/Exec/Reports/GC.Features/HeapExpansion/bestfit_1/bestfit_1.output.txt/nRaw output:/nBEGIN EXECUTION\r\n/ssd/dotnetbuild/work/a37e46c3-25da-44c7-8522-334270327137/Payload/corerun bestfit_1.exe 1 1000 50000\r\nUsing random seed: 2062910439\r\nTook 6861 iterations to reach steady state\r\nExpected: 100\r\nActual: 134\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\n/nTo run the test:/n> set CORE_ROOT=/ssd/dotnetbuild/work/a37e46c3-25da-44c7-8522-334270327137/Payload/n> /ssd/dotnetbuild/work/a37e46c3-25da-44c7-8522-334270327137/Work/1c02bafd-705e-4276-af6c-e31b0a86a880/Exec/HeapExpansion/bestfit_1/bestfit_1.sh/n\r\nExpected: True\r\nActual:   False\r\nStack Trace :\r\n   at GC_Features._HeapExpansion_bestfit_1_bestfit_1_._HeapExpansion_bestfit_1_bestfit_1_sh() in /__w/1/s/bin/tests/Linux.arm.Checked/TestWrappers/GC.Features/GC.Features.XUnitWrapper.cs:line 319\r\n\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22422","RelatedDescription":"Open issue \"GC_Features._HeapExpansion_bestfit_1_bestfit_1_._HeapExpansion_bestfit_1_bestfit_1_sh failing on coreclr-ci\" (#22422)"},{"Id":"406579280","IsPullRequest":true,"CreatedAt":"2019-02-05T00:23:07","Actor":"BruceForstall","Number":"22421","RawContent":null,"Title":"Restrict arm64 parallelism to collections","State":"open","Body":"Attempt to reduce test timeout failures by restricting test parallelism.\r\n\r\nAttempts to address https://github.com/dotnet/coreclr/issues/22419","Url":"https://github.com/dotnet/coreclr/pull/22421","RelatedDescription":"Open PR \"Restrict arm64 parallelism to collections\" (#22421)"},{"Id":"406576804","IsPullRequest":true,"CreatedAt":"2019-02-05T00:11:55","Actor":"jashook","Number":"22420","RawContent":null,"Title":"[WIP] enable lcl vars as dst put arg stack","State":"open","Body":"This is not ready to merge. \r\n\r\nThis will unblock #22276. In addition this builds on some of the first class struct work that has happened.","Url":"https://github.com/dotnet/coreclr/pull/22420","RelatedDescription":"Open PR \"[WIP] enable lcl vars as dst put arg stack\" (#22420)"},{"Id":"406469791","IsPullRequest":true,"CreatedAt":"2019-02-05T00:05:48","Actor":"sdmaclea","Number":"22406","RawContent":null,"Title":"Handle SPC in GetLoadContext","State":"closed","Body":"GetBindingContext() returns NULL for System.Private.CoreLib.  Add support\r\nfor this special case.\r\n\r\nFixes #22402","Url":"https://github.com/dotnet/coreclr/pull/22406","RelatedDescription":"Closed or merged PR \"Handle SPC in GetLoadContext\" (#22406)"},{"Id":"406436589","IsPullRequest":false,"CreatedAt":"2019-02-05T00:05:48","Actor":"sdmaclea","Number":"22402","RawContent":null,"Title":"AssemblyLoadContext.GetLoadContext(SPC) Segfaults","State":"closed","Body":"The call `AssemblyLoadContext.GetLoadContext(a);` Causes a segmentation fault when `a` is `System.Private.CoreLib`.\r\n\r\nThis worked in .NET Core 2.2 is is failing on tip and on .NET Core 3.0 preview 2.\r\n\r\nIn the following code the segfault occurs at the `GetLoadContext`.  The dotnet host terminates immediately, without reporting an exception or reaching the finally.\r\n\r\n```C#\r\nusing System;\r\nusing System.Reflection;\r\nusing System.Runtime.Loader;\r\n\r\nnamespace ALC\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            try\r\n            {\r\n                Console.WriteLine(\"try\");\r\n                AssemblyLoadContext.GetLoadContext(typeof(int).Assembly);\r\n            }\r\n            catch (Exception e)\r\n            {\r\n                Console.WriteLine(e.ToString());\r\n            }\r\n            finally\r\n            {\r\n                Console.WriteLine(\"finally\");\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n/cc @jkotas @vitek-karas\r\n","Url":"https://github.com/dotnet/coreclr/issues/22402","RelatedDescription":"Closed issue \"AssemblyLoadContext.GetLoadContext(SPC) Segfaults\" (#22402)"},{"Id":"406574501","IsPullRequest":false,"CreatedAt":"2019-02-05T00:02:51","Actor":"BruceForstall","Number":"22419","RawContent":null,"Title":"[arm64] Frequent test timeouts","State":"open","Body":"We seem to be seeing more frequent test timeouts recently, especially superpmicollect. When run locally on a Windows arm64 machine, this test finishes in about 3.5 minutes, when run alone (not in parallel with anything else). When run in the CI (on a faster machine) under xunit, with \"-parallel all\", it frequently times out at 15 minutes.\r\n\r\ne.g.,\r\nhttps://ci.dot.net/job/dotnet_coreclr/job/master/view/arm64/job/jitstress/job/arm64_cross_checked_windows_nt_tailcallstress_tst/60/consoleFull#-9820345932d31e50d-1517-49fc-92b3-2ca637122019\r\n","Url":"https://github.com/dotnet/coreclr/issues/22419","RelatedDescription":"Open issue \"[arm64] Frequent test timeouts\" (#22419)"},{"Id":"406572817","IsPullRequest":true,"CreatedAt":"2019-02-04T23:56:06","Actor":"Tomius","Number":"22418","RawContent":null,"Title":" Back patching #21804 to the 2.2 branch","State":"open","Body":"See the issue #22385","Url":"https://github.com/dotnet/coreclr/pull/22418","RelatedDescription":"Open PR \" Back patching #21804 to the 2.2 branch\" (#22418)"},{"Id":"406565625","IsPullRequest":true,"CreatedAt":"2019-02-04T23:25:59","Actor":"BruceForstall","Number":"22416","RawContent":null,"Title":"Fix runtest.py output","State":"open","Body":"Fix https://github.com/dotnet/coreclr/issues/22361\r\n\r\nAlso, add exception handling around potential failure of Unicode conversion.","Url":"https://github.com/dotnet/coreclr/pull/22416","RelatedDescription":"Open PR \"Fix runtest.py output\" (#22416)"},{"Id":"406563587","IsPullRequest":true,"CreatedAt":"2019-02-04T23:18:25","Actor":"adityamandaleeka","Number":"22415","RawContent":null,"Title":"Disable PInvoke inlining within try regions on ARM64","State":"open","Body":"PInvoke inlining within try blocks causes exception handling to lose track of the context pointers during unwind, which in turn causes us to crash when attempting to restore the nonvolatile registers at the end of the exception handling process. This change makes it so ARM64 follows the same behavior as AMD64, where pinvoke inlining is not allowed inside of try regions. \r\n\r\nFixes https://github.com/dotnet/coreclr/issues/21964","Url":"https://github.com/dotnet/coreclr/pull/22415","RelatedDescription":"Open PR \"Disable PInvoke inlining within try regions on ARM64\" (#22415)"},{"Id":"406563097","IsPullRequest":false,"CreatedAt":"2019-02-04T23:16:44","Actor":"sandreenko","Number":"22414","RawContent":null,"Title":"[arm32][Ubuntu] System.Numerics.Tests.ToStringTest.RunRegionSpecificStandardFormatToStringTests fails with timeout","State":"open","Body":"It fails with:\r\n```\r\n[37m  Discovering: System.Runtime.Numerics.Tests (method display = ClassAndMethod, method display options = None)\r\n[m[37m  Discovered:  System.Runtime.Numerics.Tests (found 218 of 234 test cases)\r\n[m[37m  Starting:    System.Runtime.Numerics.Tests (parallel test collections = on, max threads = 4)\r\n[m[31;1m    System.Numerics.Tests.ToStringTest.RunRegionSpecificStandardFormatToStringTests [FAIL]\r\n[m[37m      Timed out after 60000ms waiting for remote process 17733\r\n[m[37m      Expected: True\r\n[m[37m      Actual:   False\r\n[m[30;1m      Stack Trace:\r\n[m[37m        /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_corefx_baseline_prtest/_/fx/src/CoreFx.Private.TestUtilities/src/System/Diagnostics/RemoteExecutorTestBase.cs(350,0): at System.Diagnostics.RemoteExecutorTestBase.RemoteInvokeHandle.Dispose(Boolean disposing)\r\n[m[37m        /mnt/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_corefx_baseline_prtest/_/fx/src/System.Runtime.Numerics/tests/BigInteger/BigIntegerToStringTests.cs(191,0): at System.Numerics.Tests.ToStringTest.RunRegionSpecificStandardFormatToStringTests()\r\n[m[33;1m   System.Runtime.Numerics.Tests: [Long Running Test] 'System.Numerics.Tests.BigIntegerConstructorTest.RunCtorByteArrayTests', Elapsed: 00:04:13\r\n[m[37m  Finished:    System.Runtime.Numerics.Tests\r\n[m[37m=== TEST EXECUTION SUMMARY ===\r\n[m[37m   System.Runtime.Numerics.Tests  Total: 2078, Errors: 0, Failed: 1, Skipped: 0, Time: 558.665s\r\n[m[m/ssd/j/workspace/dotnet_coreclr/master/jitstress/arm_cross_checked_ubuntu_corefx_baseline_tst_prtest/_/fx/artifacts/bin/tests/System.Runtime.Numerics.Tests/netcoreapp-Linux-Release-arm\r\n```\r\n\r\n[ci example](https://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/arm_cross_checked_ubuntu_corefx_jitstress2_tst_prtest/25/)","Url":"https://github.com/dotnet/coreclr/issues/22414","RelatedDescription":"Open issue \"[arm32][Ubuntu] System.Numerics.Tests.ToStringTest.RunRegionSpecificStandardFormatToStringTests fails with timeout\" (#22414)"},{"Id":"406560582","IsPullRequest":false,"CreatedAt":"2019-02-04T23:07:55","Actor":"sandreenko","Number":"22413","RawContent":null,"Title":"[arm32/64][Ubuntu] CoreFX System.Diagnostics.Tests.ProcessTests.Kill_EntireProcessTree_True_EntireTreeTerminated fails","State":"open","Body":"The test fails with:\r\n```\r\nSystem.Diagnostics.Tests.ProcessTests.Kill_EntireProcessTree_True_EntireTreeTerminated [FAIL]\r\nSystem.AggregateException : Not all processes in process tree could be terminated. (No such process)\r\n---- System.ComponentModel.Win32Exception : No such process\r\n\r\n```\r\n[ci example](https://ci.dot.net/job/dotnet_coreclr/job/master/job/jitstress/job/arm64_cross_checked_ubuntu16.04_corefx_baseline_tst/110/)\r\n\r\nFor arm32 the test was excluded under #16001","Url":"https://github.com/dotnet/coreclr/issues/22413","RelatedDescription":"Open issue \"[arm32/64][Ubuntu] CoreFX System.Diagnostics.Tests.ProcessTests.Kill_EntireProcessTree_True_EntireTreeTerminated fails\" (#22413)"},{"Id":"406528212","IsPullRequest":true,"CreatedAt":"2019-02-04T22:38:12","Actor":"BruceForstall","Number":"22411","RawContent":null,"Title":"Always archive build logs","State":"closed","Body":"Even if the build fails. Add archiving in more cases where it was missing.","Url":"https://github.com/dotnet/coreclr/pull/22411","RelatedDescription":"Closed or merged PR \"Always archive build logs\" (#22411)"},{"Id":"406529653","IsPullRequest":true,"CreatedAt":"2019-02-04T21:35:04","Actor":"cshung","Number":"22412","RawContent":null,"Title":"[WIP] Comparing code and debug info sizes","State":"open","Body":"The code passes the size of the code down all the way to the point where the compressed debug info is computed. For now, a simple log statement is used to report the sizes ","Url":"https://github.com/dotnet/coreclr/pull/22412","RelatedDescription":"Open PR \"[WIP] Comparing code and debug info sizes\" (#22412)"},{"Id":"406448823","IsPullRequest":true,"CreatedAt":"2019-02-04T21:33:04","Actor":"echesakovMSFT","Number":"22403","RawContent":null,"Title":"Disable failing tests","State":"closed","Body":"Failed in nightly CI build https://dev.azure.com/dnceng/public/_build/results?buildId=86543 \r\n\r\n**Related issues:** https://github.com/dotnet/coreclr/issues/20358 https://github.com/dotnet/coreclr/issues/22401\r\n\r\n@BruceForstall @jashook \r\n/cc @dotnet/jit-contrib ","Url":"https://github.com/dotnet/coreclr/pull/22403","RelatedDescription":"Closed or merged PR \"Disable failing tests\" (#22403)"},{"Id":"406505782","IsPullRequest":false,"CreatedAt":"2019-02-04T20:30:00","Actor":"tarekgh","Number":"22410","RawContent":null,"Title":"Track fixing tests/src/JIT/Regression/JitBlue/GitHub_20958 test","State":"open","Body":"This test is testing Range type which got changed. we are disabling this test temporary in \\coreclr\\tests\\issues.targets till we got the updated coreclr package which we use to compile the test with.","Url":"https://github.com/dotnet/coreclr/issues/22410","RelatedDescription":"Open issue \"Track fixing tests/src/JIT/Regression/JitBlue/GitHub_20958 test\" (#22410)"},{"Id":"406486586","IsPullRequest":false,"CreatedAt":"2019-02-04T19:39:45","Actor":"jkotas","Number":"22409","RawContent":null,"Title":"Heap corruption in `Interop_PInvoke._IEnumerator_IEnumeratorTest_IEnumeratorTest` ","State":"open","Body":"Failed in https://github.com/dotnet/coreclr/pull/22396:\r\n\r\n```   Interop_PInvoke._IEnumerator_IEnumeratorTest_IEnumeratorTest_._IEnumerator_IEnumeratorTest_IEnumeratorTest_cmd [FAIL]\r\n08:17:13         \r\n08:17:13   \r\n08:17:13   Return code:      1\r\n08:17:13   Raw output file:      D:\\j\\workspace\\x86_release_w---80850631\\bin\\tests\\Windows_NT.x86.Release\\Reports\\Interop.PInvoke\\IEnumerator\\IEnumeratorTest\\IEnumeratorTest.output.txt\r\n08:17:13   Raw output:\r\n08:17:13   BEGIN EXECUTION\r\n08:17:13          \"D:\\j\\workspace\\x86_release_w---80850631\\bin\\tests\\Windows_NT.x86.Release\\Tests\\Core_Root\\corerun.exe\" IEnumeratorTest.exe \r\n08:17:13         Expected: 100\r\n08:17:13         Actual: -1073740940\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22409","RelatedDescription":"Open issue \"Heap corruption in `Interop_PInvoke._IEnumerator_IEnumeratorTest_IEnumeratorTest` \" (#22409)"},{"Id":"406477801","IsPullRequest":true,"CreatedAt":"2019-02-04T19:16:52","Actor":"jkoritzinsky","Number":"22408","RawContent":null,"Title":"Fix marshalling UTF8 string struct member from native to managed.","State":"open","Body":"Fixes #22394","Url":"https://github.com/dotnet/coreclr/pull/22408","RelatedDescription":"Open PR \"Fix marshalling UTF8 string struct member from native to managed.\" (#22408)"},{"Id":"406474703","IsPullRequest":false,"CreatedAt":"2019-02-04T19:08:59","Actor":"AlekseyTs","Number":"22407","RawContent":null,"Title":"A virtual call is performed when an abstract method in an interface is called non-virtually.","State":"open","Body":"Run the following code:\r\n```\r\n//  Microsoft (R) .NET Framework IL Disassembler.  Version 4.6.1055.0\r\n//  Copyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\n\r\n\r\n// Metadata version: v4.0.30319\r\n.assembly extern System.Runtime\r\n{\r\n  .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A )                         // .?_....:\r\n  .ver 4:2:1:0\r\n}\r\n.assembly extern System.Console\r\n{\r\n  .publickeytoken = (B0 3F 5F 7F 11 D5 0A 3A )                         // .?_....:\r\n  .ver 4:1:1:0\r\n}\r\n.assembly debug4\r\n{\r\n  .custom instance void [System.Runtime]System.Runtime.CompilerServices.CompilationRelaxationsAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) \r\n  .custom instance void [System.Runtime]System.Runtime.CompilerServices.RuntimeCompatibilityAttribute::.ctor() = ( 01 00 01 00 54 02 16 57 72 61 70 4E 6F 6E 45 78   // ....T..WrapNonEx\r\n                                                                                                                   63 65 70 74 69 6F 6E 54 68 72 6F 77 73 01 )       // ceptionThrows.\r\n\r\n  // --- The following custom attribute is added automatically, do not uncomment -------\r\n  //  .custom instance void [System.Runtime]System.Diagnostics.DebuggableAttribute::.ctor(valuetype [System.Runtime]System.Diagnostics.DebuggableAttribute/DebuggingModes) = ( 01 00 07 01 00 00 00 00 ) \r\n\r\n  .hash algorithm 0x00008004\r\n  .ver 0:0:0:0\r\n}\r\n.module debug4.exe\r\n// MVID: {BF25DEA9-6A9E-48D2-B381-F5C84106EB57}\r\n.imagebase 0x00400000\r\n.file alignment 0x00000200\r\n.stackreserve 0x00100000\r\n.subsystem 0x0003       // WINDOWS_CUI\r\n.corflags 0x00000001    //  ILONLY\r\n// Image base: 0x006B0000\r\n\r\n\r\n// =============== CLASS MEMBERS DECLARATION ===================\r\n\r\n.class interface public abstract auto ansi B\r\n       implements C\r\n{\r\n  .method private hidebysig virtual final \r\n          instance char  C.F1(int32 pB) cil managed\r\n  {\r\n    .override C::F1\r\n    // Code size       3 (0x3)\r\n    .maxstack  8\r\n    IL_0000:  ldc.i4.s   66\r\n    IL_0002:  ret\r\n  } // end of method B::C.F1\r\n\r\n} // end of class B\r\n\r\n.class interface public abstract auto ansi C\r\n{\r\n  .method public hidebysig newslot abstract virtual \r\n          instance char  F1(int32 pC) cil managed\r\n  {\r\n  } // end of method C::F1\r\n\r\n} // end of class C\r\n\r\n.class private auto ansi beforefieldinit A\r\n       extends [System.Runtime]System.Object\r\n       implements B,\r\n                  C\r\n{\r\n  .method private hidebysig newslot virtual final \r\n          instance char  C.F1(int32 pA) cil managed\r\n  {\r\n    .override C::F1\r\n    // Code size       3 (0x3)\r\n    .maxstack  8\r\n    IL_0000:  ldc.i4.s   65\r\n    IL_0002:  ret\r\n  } // end of method A::C.F1\r\n\r\n  .method private hidebysig instance void \r\n          Test() cil managed\r\n  {\r\n    // Code size       15 (0xf)\r\n    .maxstack  8\r\n    IL_0000:  nop\r\n    IL_0001:  ldarg.0\r\n    IL_0002:  ldc.i4.1\r\n    IL_0003:  call       instance char C::F1(int32)\r\n    IL_0008:  call       void [System.Console]System.Console::WriteLine(char)\r\n    IL_000d:  nop\r\n    IL_000e:  ret\r\n  } // end of method A::Test\r\n\r\n  .method private hidebysig static void  Main() cil managed\r\n  {\r\n    .entrypoint\r\n    // Code size       13 (0xd)\r\n    .maxstack  8\r\n    IL_0000:  nop\r\n    IL_0001:  newobj     instance void A::.ctor()\r\n    IL_0006:  call       instance void A::Test()\r\n    IL_000b:  nop\r\n    IL_000c:  ret\r\n  } // end of method A::Main\r\n\r\n  .method public hidebysig specialname rtspecialname \r\n          instance void  .ctor() cil managed\r\n  {\r\n    // Code size       8 (0x8)\r\n    .maxstack  8\r\n    IL_0000:  ldarg.0\r\n    IL_0001:  call       instance void [System.Runtime]System.Object::.ctor()\r\n    IL_0006:  nop\r\n    IL_0007:  ret\r\n  } // end of method A::.ctor\r\n\r\n} // end of class A\r\n\r\n\r\n// =============================================================\r\n\r\n// *********** DISASSEMBLY COMPLETE ***********************\r\n// WARNING: Created Win32 resource file debug4.res\r\n```\r\n\r\nObserved: 'A' is printed.\r\nExpected: An exception should be thrown, an abstract method in an interface is called non-virtually ```IL_0003:  call       instance char C::F1(int32)```","Url":"https://github.com/dotnet/coreclr/issues/22407","RelatedDescription":"Open issue \"A virtual call is performed when an abstract method in an interface is called non-virtually.\" (#22407)"},{"Id":"406465962","IsPullRequest":false,"CreatedAt":"2019-02-04T18:45:26","Actor":"franksinankaya","Number":"22405","RawContent":null,"Title":"-Wsign-compare warnings in PAL with GNU compiler","State":"open","Body":"[  6%] Building CXX object src/pal/src/CMakeFiles/coreclrpal.dir/loader/modulename.cpp.o\r\nsrc/pal/src/exception/remote-unwind.cpp: In function ‘bool ReadSLEB128(const libunwindInfo*, unw_word_t*, unw_word_t*)’:\r\nsrc/pal/src/exception/remote-unwind.cpp:281:16: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     if ((shift < (8 * sizeof(unw_word_t))) && ((byte & 0x40) != 0)) {\r\n                ^\r\nsrc/pal/src/exception/remote-unwind.cpp: In function ‘bool ParseCie(const libunwindInfo*, unw_word_t, dwarf_cie_info_t*)’:\r\nsrc/pal/src/exception/remote-unwind.cpp:538:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     for (int i = 0; i < sizeof(augmentationString); i++)\r\n                       ^\r\nsrc/pal/src/exception/remote-unwind.cpp:573:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     for (int i = 0; i < sizeof(augmentationString); i++)\r\n                       ^\r\nsrc/pal/src/locale/unicode.cpp: In function ‘BOOL GetUnicodeData(INT, UnicodeDataRec*)’:\r\nsrc/pal/src/locale/unicode.cpp:141:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     if (nUnicodeValue <= UNICODE_DATA_DIRECT_ACCESS)\r\n                       ^\r\nsrc/pal/src/file/path.cpp: In function ‘DWORD GetTempPathA(DWORD, LPSTR)’:\r\nsrc/pal/src/file/path.cpp:500:27: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n         if (defaultDirLen < nBufferLength)\r\n\r\nIn file included from src/pal/src/map/virtual.cpp:21:0:\r\nsrc/pal/src/map/virtual.cpp: In member function ‘void ExecutableMemoryAllocator::TryReserveInitialMemory()’:\r\nsrc/pal/src/map/virtual.cpp:2192:31: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     _ASSERTE(sizeOfAllocation >= (UINT_PTR)m_nextFreeAddress - (UINT_PTR)m_startAddress);\r\n                               ^\r\nsrc/pal/src/include/pal/dbgmsg.h:372:35: note: in definition of macro ‘_ASSERTE’\r\n #define _ASSERTE(expr) do { if (!(expr)) { ASSERT(\"Expression: \" #expr \"\\n\"); } } while(0)\r\n                                   ^\r\nsrc/pal/src/map/virtual.cpp: In member function ‘void* ExecutableMemoryAllocator::AllocateMemory(SIZE_T)’:\r\nsrc/pal/src/map/virtual.cpp:2222:49: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     if ((allocationSize > 0) && (allocationSize <= m_remainingReservedMemory))\r\n                                                 ^\r\nsrc/pal/src/map/virtual.cpp: In member function ‘void* ExecutableMemoryAllocator::AllocateMemoryWithinRange(const void*, const void*, SIZE_T)’:\r\nsrc/pal/src/map/virtual.cpp:2258:47: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     if (allocationSize == 0 || allocationSize > m_remainingReservedMemory)\r\n                                               ^\r\nsrc/pal/src/misc/environ.cpp: In function ‘char* EnvironGetenv(const char*, BOOL)’:\r\nsrc/pal/src/misc/environ.cpp:930:39: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n         if (strlen(palEnvironment[i]) < nameLength)\r\n\r\n[  8%] Building CXX object src/pal/src/CMakeFiles/coreclrpal.dir/safecrt/sscanf_s.cpp.o\r\nsrc/pal/src/misc/miscpalapi.cpp: In function ‘void PAL_Random(LPVOID, DWORD)’:\r\nsrc/pal/src/misc/miscpalapi.cpp:271:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n                 if (n == -1)\r\n                       ^\r\n[  8%] Building CXX object src/pal/src/CMakeFiles/coreclrpal.dir/safecrt/strcat_s.cpp.o\r\nIn file included from src/pal/src/safecrt/splitpath_s.cpp:31:0:\r\nsrc/pal/src/safecrt/tsplitpath_s.inl: In function ‘errno_t _splitpath_s(const char*, char*, size_t, char*, size_t, char*, size_t, char*, size_t)’:\r\nsrc/pal/src/safecrt/tsplitpath_s.inl:144:36: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n             for(iIndex = 0; iIndex < length; iIndex++)\r\n                                    ^\r\n[  9%] Building CXX object src/pal/src/CMakeFiles/coreclrpal.dir/shmemory/shmemory.cpp.o\r\nIn file included from src/pal/src/safecrt/wsplitpath_s.cpp:30:0:\r\nsrc/pal/src/safecrt/tsplitpath_s.inl: In function ‘errno_t _wsplitpath_s(const __wchar_16_cpp__*, __wchar_16_cpp__*, size_t, __wchar_16_cpp__*, size_t, __wchar_16_cpp__*, size_t, __wchar_16_cpp__*, size_t)’:\r\nsrc/pal/src/safecrt/tsplitpath_s.inl:144:36: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n             for(iIndex = 0; iIndex < length; iIndex++)\r\n\r\nIn file included from src/pal/src/sharedmemory/sharedmemory.cpp:7:0:\r\nsrc/pal/src/sharedmemory/sharedmemory.cpp: In static member function ‘static void SharedMemoryHelpers::SetFileSize(int, SIZE_T)’:\r\nsrc/pal/src/sharedmemory/sharedmemory.cpp:318:44: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     _ASSERTE(static_cast<off_t>(byteCount) == byteCount);\r\n                                            ^\r\nsrc/pal/src/include/pal/dbgmsg.h:372:35: note: in definition of macro ‘_ASSERTE’\r\n #define _ASSERTE(expr) do { if (!(expr)) { ASSERT(\"Expression: \" #expr \"\\n\"); } } while(0)\r\n                                   ^\r\nsrc/pal/src/sharedmemory/sharedmemory.cpp: In static member function ‘static void SharedMemoryHelpers::BuildSharedFilesPath(PathCharString&, const char*, int)’:\r\nsrc/pal/src/sharedmemory/sharedmemory.cpp:398:29: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     _ASSERTE(strlen(suffix) == suffixCharCount);\r\n                             ^\r\nsrc/pal/src/include/pal/dbgmsg.h:372:35: note: in definition of macro ‘_ASSERTE’\r\n #define _ASSERTE(expr) do { if (!(expr)) { ASSERT(\"Expression: \" #expr \"\\n\"); } } while(0)\r\n                                   ^\r\nIn file included from src/pal/src/thread/process.cpp:21:0:\r\nsrc/pal/src/thread/process.cpp: In function ‘BOOL GetProcessIdDisambiguationKey(DWORD, UINT64*)’:\r\nsrc/pal/src/thread/process.cpp:2240:33: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     _ASSERTE(chars > 0 && chars <= sizeof(statFileName));\r\n                                 ^\r\nsrc/pal/src/include/pal/dbgmsg.h:372:35: note: in definition of macro ‘_ASSERTE’\r\n #define _ASSERTE(expr) do { if (!(expr)) { ASSERT(\"Expression: \" #expr \"\\n\"); } } while(0)\r\n                                   ^\r\nsrc/pal/src/thread/process.cpp: In function ‘CorUnix::ProcessModules* CreateProcessModules(DWORD, LPDWORD)’:\r\nsrc/pal/src/thread/process.cpp:3038:33: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     _ASSERTE(chars > 0 && chars <= sizeof(mapFileName));\r\n                                 ^\r\nsrc/pal/src/include/pal/dbgmsg.h:372:35: note: in definition of macro ‘_ASSERTE’\r\n #define _ASSERTE(expr) do { if (!(expr)) { ASSERT(\"Expression: \" #expr \"\\n\"); } } while(0)\r\n                                   ^\r\nIn file included from src/pal/src/numa/numa.cpp:19:0:\r\nsrc/pal/src/numa/numa.cpp: In function ‘void GetCurrentProcessorNumberEx(PPROCESSOR_NUMBER)’:\r\nsrc/pal/src/numa/numa.cpp:744:18: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n     _ASSERTE(cpu < g_possibleCpuCount);\r\n                  ^\r\nsrc/pal/src/include/pal/dbgmsg.h:372:35: note: in definition of macro ‘_ASSERTE’\r\n #define _ASSERTE(expr) do { if (!(expr)) { ASSERT(\"Expression: \" #expr \"\\n\"); } } while(0)\r\n                                   ^\r\nsrc/pal/src/numa/numa.cpp: In function ‘void* VirtualAllocExNuma(HANDLE, LPVOID, SIZE_T, DWORD, DWORD, DWORD)’:\r\nsrc/pal/src/numa/numa.cpp:871:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n         if (nndPreferred <= g_highestNumaNode)\r\n                          ^\r\nIn file included from src/pal/src/numa/numa.cpp:19:0:\r\nsrc/pal/src/numa/numa.cpp: In function ‘BOOL SetThreadIdealProcessorEx(HANDLE, PPROCESSOR_NUMBER, PPROCESSOR_NUMBER)’:\r\nsrc/pal/src/numa/numa.cpp:979:26: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\r\n         _ASSERTE(prevCpu < g_possibleCpuCount);\r\n                          ^\r\nsrc/pal/src/include/pal/dbgmsg.h:372:35: note: in definition of macro ‘_ASSERTE’\r\n #define _ASSERTE(expr) do { if (!(expr)) { ASSERT(\"Expression: \" #expr \"\\n\"); } } while(0)\r\n                                   ^\r\n[ 10%] Linking CXX static library libcoreclrpal.a\r\n[ 10%] Built target coreclrpal\r\n","Url":"https://github.com/dotnet/coreclr/issues/22405","RelatedDescription":"Open issue \"-Wsign-compare warnings in PAL with GNU compiler\" (#22405)"},{"Id":"406464445","IsPullRequest":false,"CreatedAt":"2019-02-04T18:41:23","Actor":"franksinankaya","Number":"22404","RawContent":null,"Title":"fpermissive compilation warnings with GNU C++ compiler","State":"open","Body":"src/pal/tests/palsuite/threading/CreateThread/test2/test2.cpp: In function ‘DWORD Thread(LPVOID)’:\r\nsrc/pal/tests/palsuite/threading/CreateThread/test2/test2.cpp:26:25: warning: cast from ‘LPVOID {aka void*}’ to ‘DWORD {aka unsigned int}’ loses precision [-fpermissive]\r\ndwThreadId1[(DWORD) lpParameter] = GetCurrentThreadId();\r\n^\r\nsrc/pal/tests/palsuite/threading/CreateThread/test2/test2.cpp:27:21: warning: cast from ‘LPVOID {aka void*}’ to ‘DWORD {aka unsigned int}’ loses precision [-fpermissive]\r\nbResult[(DWORD) lpParameter] = TRUE;\r\n^\r\nsrc/pal/tests/palsuite/threading/CreateThread/test2/test2.cpp:28:20: warning: cast from ‘LPVOID {aka void*}’ to ‘DWORD {aka unsigned int}’ loses precision [-fpermissive]\r\nreturn (DWORD) lpParameter;\r\nsrc/pal/tests/palsuite/threading/ExitThread/test1/test1.cpp: In function ‘DWORD ExitThreadTestThread(LPVOID)’:\r\nsrc/pal/tests/palsuite/threading/ExitThread/test1/test1.cpp:25:40: warning: cast from ‘LPVOID {aka void*}’ to ‘DWORD {aka unsigned int}’ loses precision [-fpermissive]\r\ndwExitThreadTestParameter = (DWORD)lpParameter;\r\n^\r\nsrc/pal/tests/palsuite/threading/ExitThread/test1/test1.cpp: In function ‘BOOL ExitThreadTest()’:\r\nsrc/pal/tests/palsuite/threading/ExitThread/test1/test1.cpp:80:53: warning: cast from ‘LPVOID {aka void*}’ to ‘DWORD {aka unsigned int}’ loses precision [-fpermissive]\r\nif (dwExitThreadTestParameter != (DWORD)lpParameter)\r\n^\r\nsrc/pal/tests/palsuite/threading/ResumeThread/test1/test1.cpp: In function ‘DWORD ResumeThreadTestThread(LPVOID)’:\r\nsrc/pal/tests/palsuite/threading/ResumeThread/test1/test1.cpp:28:42: warning: cast from ‘LPVOID {aka void*}’ to ‘DWORD {aka unsigned int}’ loses precision [-fpermissive]\r\ndwResumeThreadTestParameter = (DWORD)lpParameter;\r\n^\r\nsrc/pal/tests/palsuite/threading/ResumeThread/test1/test1.cpp: In function ‘BOOL ResumeThreadTest()’:\r\nsrc/pal/tests/palsuite/threading/ResumeThread/test1/test1.cpp:104:67: warning: cast from ‘LPVOID {aka void*}’ to ‘DWORD {aka unsigned int}’ loses precision [-fpermissive]\r\nif (dwResumeThreadTestParameter != (DWORD)lpParameter)\r\nsrc/pal/tests/palsuite/threading/SleepEx/test2/test2.cpp: In function ‘DWORD SleeperProc(LPVOID)’:\r\nsrc/pal/tests/palsuite/threading/SleepEx/test2/test2.cpp:155:24: warning: cast from ‘LPVOID {aka void*}’ to ‘BOOL {aka int}’ loses precision [-fpermissive]\r\nAlertable = (BOOL) lpParameter;\r\nsrc/pal/tests/palsuite/threading/SwitchToThread/test1/test1.cpp: In function ‘void Run_Thread(LPVOID)’:\r\nsrc/pal/tests/palsuite/threading/SwitchToThread/test1/test1.cpp:86:17: warning: cast from ‘LPVOID {aka void*}’ to ‘int’ loses precision [-fpermissive]\r\nint Id=(int)lpParam;\r\nsrc/pal/tests/palsuite/threading/WaitForMultipleObjectsEx/test2/test2.cpp: In function ‘DWORD WaiterProc(LPVOID)’:\r\nsrc/pal/tests/palsuite/threading/WaitForMultipleObjectsEx/test2/test2.cpp:149:24: warning: cast from ‘LPVOID {aka void*}’ to ‘BOOL {aka int}’ loses precision [-fpermissive]\r\nAlertable = (BOOL) lpParameter;\r\nsrc/pal/tests/palsuite/threading/WaitForMultipleObjectsEx/test5/test5.cpp: In function ‘DWORD WaitForProcess(LPVOID)’:\r\nsrc/pal/tests/palsuite/threading/WaitForMultipleObjectsEx/test5/test5.cpp:77:21: warning: cast from ‘LPVOID {aka void*}’ to ‘DWORD {aka unsigned int}’ loses precision [-fpermissive]\r\nindex = (DWORD) lpParameter;\r\nsrc/pal/tests/palsuite/threading/WaitForMultipleObjectsEx/test6/test6.cpp: In function ‘DWORD TestThread(PVOID)’:\r\nsrc/pal/tests/palsuite/threading/WaitForMultipleObjectsEx/test6/test6.cpp:157:26: warning: cast from ‘PVOID {aka void*}’ to ‘DWORD {aka unsigned int}’ loses precision [-fpermissive]\r\nsrc/pal/tests/palsuite/threading/WaitForSingleObject/WFSOExMutexTest/WFSOExMutexTest.cpp: In function ‘DWORD WaiterProc(LPVOID)’:\r\nsrc/pal/tests/palsuite/threading/WaitForSingleObject/WFSOExMutexTest/WFSOExMutexTest.cpp:181:24: warning: cast from ‘LPVOID {aka void*}’ to ‘BOOL {aka int}’ loses precision [-fpermissive]\r\nAlertable = (BOOL) lpParameter;\r\n^\r\nsrc/pal/tests/palsuite/threading/WaitForSingleObject/WFSOExSemaphoreTest/WFSOExSemaphoreTest.cpp: In function ‘DWORD WaiterProc(LPVOID)’:\r\nsrc/pal/tests/palsuite/threading/WaitForSingleObject/WFSOExSemaphoreTest/WFSOExSemaphoreTest.cpp:148:24: warning: cast from ‘LPVOID {aka void*}’ to ‘BOOL {aka int}’ loses precision [-fpermissive]\r\nAlertable = (BOOL) lpParameter;\r\n^\r\nsrc/pal/tests/palsuite/threading/WaitForSingleObject/WFSOExThreadTest/WFSOExThreadTest.cpp: In function ‘DWORD WaiterProc(LPVOID)’:\r\nsrc/pal/tests/palsuite/threading/WaitForSingleObject/WFSOExThreadTest/WFSOExThreadTest.cpp:156:24: warning: cast from ‘LPVOID {aka void*}’ to ‘BOOL {aka int}’ loses precision [-fpermissive]","Url":"https://github.com/dotnet/coreclr/issues/22404","RelatedDescription":"Open issue \"fpermissive compilation warnings with GNU C++ compiler\" (#22404)"},{"Id":"406431513","IsPullRequest":false,"CreatedAt":"2019-02-04T17:14:40","Actor":"echesakovMSFT","Number":"22401","RawContent":null,"Title":"[Unix/x64] [JitStressRegs=4] JIT.SIMD/Vector3Interop_ro","State":"open","Body":"Fails on Linux/x64 and macOS/x64 with the following environment:\r\n\r\n```\r\nexport COMPlus_TieredCompilation=0\r\nexport COMPlus_JitStressRegs=4\r\n``` \r\n\r\nhttps://mc.dot.net/#/user/coreclr-pulls/pr~2Fdotnet~2Fcoreclr~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2Fpri1/20190203.728/workItem/JIT.SIMD/analysis/xunit/JIT_SIMD._Vector3Interop_ro_Vector3Interop_ro_~2F_Vector3Interop_ro_Vector3Interop_ro_sh\r\n```\r\n/n/nReturn code:      1/nRaw output file:      /home/helixbot/dotnetbuild/work/70a1fc20-c39b-4e57-ba5c-96c16fe3a7e6/Work/15e2bab6-19ac-4d30-95f5-9839db244848/Exec/Reports/JIT.SIMD/Vector3Interop_ro/Vector3Interop_ro.output.txt/nRaw output:/nBEGIN EXECUTION\r\n/home/helixbot/dotnetbuild/work/70a1fc20-c39b-4e57-ba5c-96c16fe3a7e6/Payload/corerun Vector3Interop_ro.exe\r\nnativeCall_PInvoke_CheckVector3Size: sizeof(Vector3) == 12\r\nnativeCall_PInvoke_Vector3Arg:\r\n    iVal 123\r\n    sumOfEles(1.000000, 2.000000, 3.000000) = 6.000000\r\n    str  abcdefg\r\n    sumOfEles(10.000000, 11.000000, 12.000000) = 33.000000\r\nnativeCall_PInvoke_Vector3Arg_Unix:\r\n    v3f32_xmm0: 1.000000 2.000000 3.000000\r\n    f32_xmm2 - f32_xmm7: 100.000000 101.000000 102.000000 103.000000 104.000000 105.000000\r\n    f32_mem0: 106.000000\r\n    v3f32_mem1: 10.000000 20.000000 30.000000\r\n    f32_mem2-3: 107.000000 108.000000\r\n    sum = 1002.000000\r\nnativeCall_PInvoke_Vector3Arg_Unix2:\r\n    v3f32_xmm0: 1.000000 2.000000 3.000000\r\n    f32_xmm2 - f32_xmm7: 100.000000 101.000000 102.000000 103.000000 104.000000 105.000000\r\n    f32_mem0: 106.000000\r\n    v3f32_mem1: 4.000000 5.000000 6.000000\r\n    f32_mem2-3: 107.000000 108.000000\r\n    v3f32_mem4: 7.000000 8.000000 9.000000\r\n    f32_mem5: 109.000000\r\n    sum = 1090.000000\r\nnativeCall_PInvoke_Vector3Ret:\r\n    Return value: (1.000000, 2.000000, 3.000000)\r\n    Sum of return scalar values = 6.000000\r\nPInvoke Vector3Ret test failed\r\nExpected: 100\r\nActual: 101\r\nEND EXECUTION - FAILED\r\nTest Harness Exitcode is : 1\r\n/nTo run the test:/n> set CORE_ROOT=/home/helixbot/dotnetbuild/work/70a1fc20-c39b-4e57-ba5c-96c16fe3a7e6/Payload/n> /home/helixbot/dotnetbuild/work/70a1fc20-c39b-4e57-ba5c-96c16fe3a7e6/Work/15e2bab6-19ac-4d30-95f5-9839db244848/Exec/Vector3Interop_ro/Vector3Interop_ro.sh/n\r\nExpected: True\r\nActual:   False\r\n```\r\n\r\n/cc @dotnet/jit-contrib ","Url":"https://github.com/dotnet/coreclr/issues/22401","RelatedDescription":"Open issue \"[Unix/x64] [JitStressRegs=4] JIT.SIMD/Vector3Interop_ro\" (#22401)"},{"Id":"406429046","IsPullRequest":false,"CreatedAt":"2019-02-04T17:08:39","Actor":"RealDotNetDave","Number":"22400","RawContent":null,"Title":"Perf: Collection Count() is Slower in Core than the CLR","State":"open","Body":"I have been benchmarking performance of Count() for a collection. I am seeing that Core is a lot slower than the CLR.\r\n\r\nCount() (Clr) | VM 8.138 | LAPTOP 4.847\r\nCount() (Core) | VM 18.073 | LAPTOP 12.355\r\nCount() with Predicate (Clr) | VM 275,516.47 | LAPTOP 183,284.90\r\nCount() with Predicate (Core) | VM 307,900.18 | LAPTOP 217,629.30\r\n\r\nThe VM above is an Azure VM: Size: Standard D8s v3 (8 vcpus, 32 GB memory)\r\nBenchmarks were done with BenchmarkDotNet.","Url":"https://github.com/dotnet/coreclr/issues/22400","RelatedDescription":"Open issue \"Perf: Collection Count() is Slower in Core than the CLR\" (#22400)"},{"Id":"406422960","IsPullRequest":false,"CreatedAt":"2019-02-04T16:54:40","Actor":"stephentoub","Number":"22399","RawContent":null,"Title":"Two NotSupportedException first-chance exceptions occuring when tracing on Linux","State":"open","Body":"I'm using perfcollect to do some tracing on Linux, against the latest coreclr/corefx bits from master.  My app starts by hooking up an AppDomain.FirstChanceException handler that prints exceptions to the console, and when tracing is enabled, I see the following output:\r\n```\r\nSystem.NotSupportedException: Specified method is not supported.\r\n   at System.Diagnostics.Tracing.EventParameterInfo.GetMetadataLength()\r\nSystem.NotSupportedException: Specified method is not supported.\r\n   at System.Diagnostics.Tracing.EventParameterInfo.GetMetadataLength()\r\n```","Url":"https://github.com/dotnet/coreclr/issues/22399","RelatedDescription":"Open issue \"Two NotSupportedException first-chance exceptions occuring when tracing on Linux\" (#22399)"},{"Id":"406422433","IsPullRequest":false,"CreatedAt":"2019-02-04T16:53:31","Actor":"dagood","Number":"22398","RawContent":null,"Title":"Publish official build versions to dotnet/versions","State":"open","Body":"Tizen uses this information to trigger builds. It looks like the new CoreCLR official yaml defs don't publish, and the old/legacy builds that did got turned off recently: https://github.com/dotnet/versions/commits/master/build-info/dotnet/coreclr/master.\r\n\r\nIn the unknown future, Tizen could use BAR, but there isn't public access: https://github.com/dotnet/arcade/issues/1818.\r\n\r\n@sbomer can you work on adding this?\r\n\r\nhttps://github.com/dotnet/core-setup/issues/4987 had me do this for core-setup.\r\n\r\n/cc @gbalykov @alpencolt ","Url":"https://github.com/dotnet/coreclr/issues/22398","RelatedDescription":"Open issue \"Publish official build versions to dotnet/versions\" (#22398)"},{"Id":"406382054","IsPullRequest":true,"CreatedAt":"2019-02-04T15:28:32","Actor":"stephentoub","Number":"22396","RawContent":null,"Title":"Rename private GetEntryAssembly QCall overload","State":"open","Body":"To avoid issues with existing private reflection-based code that now gets a parameter count mismatch exception.\r\n\r\nFixes https://github.com/dotnet/corefx/issues/35068\r\ncc: @jkotas","Url":"https://github.com/dotnet/coreclr/pull/22396","RelatedDescription":"Open PR \"Rename private GetEntryAssembly QCall overload\" (#22396)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"406574176","IsPullRequest":true,"CreatedAt":"2019-02-05T00:01:36","Actor":"dotnet-bot","Number":"10704","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10704","RelatedDescription":"Open PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#10704)"},{"Id":"405866945","IsPullRequest":true,"CreatedAt":"2019-02-04T22:53:37","Actor":"KevinRansom","Number":"10690","RawContent":null,"Title":"Update FSharp Compiler to: 10.4.1-rtm-190201-03","State":"closed","Body":"Update FSharp Compiler to match one inserted into VS.\r\n","Url":"https://github.com/dotnet/cli/pull/10690","RelatedDescription":"Closed or merged PR \"Update FSharp Compiler to: 10.4.1-rtm-190201-03\" (#10690)"},{"Id":"405867105","IsPullRequest":true,"CreatedAt":"2019-02-04T21:30:57","Actor":"KevinRansom","Number":"10691","RawContent":null,"Title":"Update FSharp Compiler to: 10.4.1-rtm-190201-03","State":"closed","Body":"Update FSharp Compiler to match one inserted into VS.\r\n","Url":"https://github.com/dotnet/cli/pull/10691","RelatedDescription":"Closed or merged PR \"Update FSharp Compiler to: 10.4.1-rtm-190201-03\" (#10691)"},{"Id":"406319318","IsPullRequest":true,"CreatedAt":"2019-02-04T19:34:34","Actor":"dotnet-maestro[bot]","Number":"10699","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19103.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10699","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#10699)"},{"Id":"406445152","IsPullRequest":true,"CreatedAt":"2019-02-04T19:31:17","Actor":"livarcocc","Number":"10703","RawContent":null,"Title":"Update Roslyn to 3.0.0-beta3-19101-04 to match Dev16","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/10703","RelatedDescription":"Closed or merged PR \"Update Roslyn to 3.0.0-beta3-19101-04 to match Dev16\" (#10703)"},{"Id":"406444859","IsPullRequest":true,"CreatedAt":"2019-02-04T19:31:05","Actor":"livarcocc","Number":"10702","RawContent":null,"Title":"Update Roslyn to 3.0.0-beta3-19101-04 to match Dev16","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/10702","RelatedDescription":"Closed or merged PR \"Update Roslyn to 3.0.0-beta3-19101-04 to match Dev16\" (#10702)"},{"Id":"406299344","IsPullRequest":false,"CreatedAt":"2019-02-04T16:18:05","Actor":"wordshaker","Number":"10698","RawContent":null,"Title":"Add support for `dotnet test` to have JUnit style output","State":"closed","Body":"## The Problem\r\n\r\nUsing CircleCI as a build tool, there are some features you can only get access to if your test output is in a JUnit format. XUnit provides a `-junit` argument to transform XUnit output to a JUnit style of output and it seems similar functionality used to be supported: https://stackoverflow.com/questions/39542533/xunit-dotnet-test-cli-to-output-to-nunit-xml-so-that-bamboo-can-read-the-results/47073101 \r\n\r\nI've tried using the `--logger` option in a few ways, but can't find a way of achieving what I want without using another package. \r\n\r\nIs it possible to use the [XUnit Transforms](https://github.com/xunit/xunit/blob/master/src/xunit.console/Utility/TransformFactory.cs) out the box with `dotnet test`?\r\n\r\n## Expected  behavior\r\n\r\n- To be able to run an argument as part of `dotnet test` that enables the test output to be transformed into an expected format.\r\n\r\n## Actual behavior\r\n\r\n- Can use the `--logger` argument to output to xml or trx, but the tool I'm using explicitly needs a trx with JUnit formatting\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10698","RelatedDescription":"Closed issue \"Add support for `dotnet test` to have JUnit style output\" (#10698)"},{"Id":"406400501","IsPullRequest":false,"CreatedAt":"2019-02-04T16:06:45","Actor":"Zeroks77","Number":"10701","RawContent":null,"Title":"dotnet tool install from azure devops failed","State":"open","Body":"## Steps to reproduce\r\n\r\n    1. Ensure .NET SDK 2.2.103 is installed\r\n    2. ```dotnet tool install --add-source \"https://pkgs.dev.azure.com/account/_packaging/feedname/nuget/v3/index.json\" --global ACConfigbuilder```\r\n\r\n## Expected  behavior\r\n\r\nTool \"acconfigbuilder\" (Version 1.1.0) was successfully installed.\r\n\r\n## Actual behavior\r\n\r\n```bash\r\nC:\\Program Files\\dotnet\\sdk\\2.2.103\\NuGet.targets(114,5): error : Failed to retrieve information about 'acconfigbuilder' from remote source 'https://pkgs.dev.azure.com/dominikmangatter/_packaging/artifact_ACB/nuget/v3/index.json'. [C:\\Users\\Tester\\AppData\\Local\\Temp\\h2vj5tjo.mmy\\restore.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\2.2.103\\NuGet.targets(114,5): error : Response status code does not indicate success: 401 (Unauthorized). [C:\\Users\\Tester\\AppData\\Local\\Temp\\h2vj5tjo.mmy\\restore.csproj]\r\n```\r\n\r\nThe tool package could not be restored.\r\n\r\n## Environment data\r\n\r\n```dotnet --info```output:\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.103\r\n Commit:    8edbc2570a\r\n\r\nEnvironment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.103\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.1\r\n  Commit:  878dd11e62\r\n\r\n.NET Core SDKs installed:\r\n  2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n## Notes\r\n\r\nHere is the sample ```NuGet.config```\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<configuration>\r\n <packageSources>\r\n    <!--To inherit the global NuGet package sources remove the <clear/> line below -->\r\n    <clear />\r\n    <add key=\"MyFeed\" value=\"https://pkgs.dev.azure.com/dominikmangatter/_packaging/artifact_ACB/nuget/v3/index.json\" />\r\n    <add key=\"nuget\" value=\"https://api.nuget.org/v3/index.json\" />    \r\n </packageSources>\r\n</configuration>\r\n```\r\n\r\nThe command ```dotnet restore --interactive``` also had no effect and led to the same error.\r\nNote that if you try to use the CredentialProvider.VSS the ```--interactive``` option is not available.\r\n\r\n## My workaround\r\n\r\n1. create a dummy project with dotnet new console.\r\n2. create a nuget.config with dotnet new nugetconfig.\r\n3. now add your own feed to your nuget in the nuget.config.\r\n4. now you can perform dotnet restore --interactive and authenticate yourself.\r\n5. your nuget should now be configured.","Url":"https://github.com/dotnet/cli/issues/10701","RelatedDescription":"Open issue \"dotnet tool install from azure devops failed\" (#10701)"},{"Id":"406319474","IsPullRequest":true,"CreatedAt":"2019-02-04T13:32:22","Actor":"dotnet-maestro[bot]","Number":"10700","RawContent":null,"Title":"Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19103.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10700","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/sdk\" (#10700)"},{"Id":"405981068","IsPullRequest":true,"CreatedAt":"2019-02-03T13:29:06","Actor":"dotnet-maestro[bot]","Number":"10695","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19101.16\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19102.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10695","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#10695)"},{"Id":"406086203","IsPullRequest":true,"CreatedAt":"2019-02-03T13:27:11","Actor":"dotnet-maestro[bot]","Number":"10697","RawContent":null,"Title":"Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19102.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10697","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/sdk\" (#10697)"},{"Id":"405981092","IsPullRequest":true,"CreatedAt":"2019-02-02T13:32:10","Actor":"dotnet-maestro[bot]","Number":"10696","RawContent":null,"Title":"Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19101.3\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10696","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/sdk\" (#10696)"},{"Id":"405513382","IsPullRequest":true,"CreatedAt":"2019-02-02T01:36:25","Actor":"wli3","Number":"10684","RawContent":null,"Title":"Mark exposed newtonsoftjson API internal","State":"closed","Body":"I checked, SDK does not use these specific APIs","Url":"https://github.com/dotnet/cli/pull/10684","RelatedDescription":"Closed or merged PR \"Mark exposed newtonsoftjson API internal\" (#10684)"},{"Id":"405908901","IsPullRequest":true,"CreatedAt":"2019-02-01T23:09:29","Actor":"wli3","Number":"10694","RawContent":null,"Title":"WIP no merge for tests Remove skip first run flag","State":"open","Body":"\r\n","Url":"https://github.com/dotnet/cli/pull/10694","RelatedDescription":"Open PR \"WIP no merge for tests Remove skip first run flag\" (#10694)"},{"Id":"405888779","IsPullRequest":false,"CreatedAt":"2019-02-01T21:55:01","Actor":"rido-min","Number":"10693","RawContent":null,"Title":"Take care of the XBF file produced by WinRT components with UI ","State":"open","Body":"Windows Runtime Components with XAML UI produce a XBF file (Xaml Binary Format). To consume these components the caller looks for the xbf following the next convention:\r\n\r\n```\r\nOutDir\r\n--App.exe\r\n--LibraryName\r\n----ControlName.xbf\r\n```\r\n\r\nTo enable the reference (p2p and NuGet) the caller must set the `AssetTargetCallback` to a compatible TFM. This is done automatically with the imported targets from the new Windows.Sdk.Contracts nupkg.\r\n\r\n/cc @sbanni\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10693","RelatedDescription":"Open issue \"Take care of the XBF file produced by WinRT components with UI \" (#10693)"},{"Id":"405886893","IsPullRequest":false,"CreatedAt":"2019-02-01T21:49:26","Actor":"rido-min","Number":"10692","RawContent":null,"Title":"WinRT implementation DLL should be copied to the right location ","State":"open","Body":"To enable 3rd party Windows Runtime Components to be consumed from .NET Core 3 projects we need to ensure that the `.winmd` and/or `.dll` files are copied to the right location. \r\n\r\n/cc @sbanni","Url":"https://github.com/dotnet/cli/issues/10692","RelatedDescription":"Open issue \"WinRT implementation DLL should be copied to the right location \" (#10692)"},{"Id":"405692706","IsPullRequest":true,"CreatedAt":"2019-02-01T21:10:50","Actor":"dotnet-maestro[bot]","Number":"10689","RawContent":null,"Title":"Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19081.2\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10689","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/sdk\" (#10689)"},{"Id":"405586997","IsPullRequest":false,"CreatedAt":"2019-02-01T20:55:46","Actor":"JiahongJin1","Number":"10686","RawContent":null,"Title":"Error occurred when min-code is specific.","State":"closed","Body":"## Steps to reproduce\r\n1. Create a new console app in VS\r\n2. Modify the csproj with the following: `<Project Sdk=\"Microsoft.NET.Sdk/min=9999\">\r\n`\r\nIt shows as below:\r\n![image](https://user-images.githubusercontent.com/46206739/52108865-6cfb2a80-2636-11e9-88c8-87afa1fa1c84.png)\r\n\r\n3. Reload the project,\r\n## Expected  behavior\r\nThere's a error in error list window:\r\n`\"The current .NET SDK does not support targeting .NET Core 3.0. Either target .NET Core 2.2 or lower, or use a version of the .NET SDK that supports .NET Core 3.0.\"`\r\n\r\n## Actual behavior:\r\nReload the project, it shows the error:\r\n![image](https://user-images.githubusercontent.com/46206739/52108943-bcd9f180-2636-11e9-8c08-3579436e74df.png)\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n```\r\nC:\\Users\\e2euser>dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-010197\r\n Commit:    f80481ad2d\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010197\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview-27330-4\r\n  Commit:  373df9c049\r\n\r\n.NET Core SDKs installed:\r\n  2.1.600-preview-009472 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.200-preview-009748 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview-010197 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview-19080-0484 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview-27330-4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview-27330-15 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10686","RelatedDescription":"Closed issue \"Error occurred when min-code is specific.\" (#10686)"},{"Id":"405126317","IsPullRequest":true,"CreatedAt":"2019-02-01T20:54:22","Actor":"mayankbansal018","Number":"10677","RawContent":null,"Title":"Vstest honor nologo","State":"closed","Body":"Passing /nologo user input to VSTest task\r\n\r\nRelated: https://github.com/Microsoft/vstest/pull/1717\r\n\r\nBug: https://github.com/Microsoft/vstest/issues/1701","Url":"https://github.com/dotnet/cli/pull/10677","RelatedDescription":"Closed or merged PR \"Vstest honor nologo\" (#10677)"},{"Id":"405672672","IsPullRequest":true,"CreatedAt":"2019-02-01T19:23:00","Actor":"dotnet-bot","Number":"10687","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/cli/pull/10687","RelatedDescription":"Closed or merged PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#10687)"},{"Id":"405692564","IsPullRequest":true,"CreatedAt":"2019-02-01T13:27:17","Actor":"dotnet-maestro[bot]","Number":"10688","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19081.3\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10688","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#10688)"},{"Id":"405499620","IsPullRequest":false,"CreatedAt":"2019-02-01T05:42:51","Actor":"jkdey","Number":"10683","RawContent":null,"Title":"Unable to push multiple packages at the same time","State":"closed","Body":"## Steps to reproduce\r\n`dotnet nuget push *.nupkg -k <username>:<password> -s <source_uri>`\r\n\r\n## Expected behavior\r\npush all packages as shown in the last [example](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-nuget-push?tabs=netcore2x#examples)\r\n\r\n## Actual behavior\r\npushes first package only\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.503\r\n Commit:    4c506e0f35\r\n\r\nRuntime Environment:\r\n OS Name:     alpine\r\n OS Version:  3.7\r\n OS Platform: Linux\r\n RID:         alpine.3.7-x64\r\n Base Path:   /usr/share/dotnet/sdk/2.1.503/\r\n\r\nHost (useful for support):\r\n  Version: 2.1.7\r\n  Commit:  cca5d72d48\r\n\r\n.NET Core SDKs installed:\r\n  2.1.503 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [/usr/share/dotnet/shared/Microsoft.NETCore.App]","Url":"https://github.com/dotnet/cli/issues/10683","RelatedDescription":"Closed issue \"Unable to push multiple packages at the same time\" (#10683)"},{"Id":"405437232","IsPullRequest":true,"CreatedAt":"2019-02-01T05:17:42","Actor":"nugetlurker","Number":"10680","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview3.5800 into cli","State":"closed","Body":"Insert NuGet Build 5.0.0-preview3.5800 into cli release/2.2.2xx branch","Url":"https://github.com/dotnet/cli/pull/10680","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-preview3.5800 into cli\" (#10680)"},{"Id":"405533473","IsPullRequest":false,"CreatedAt":"2019-02-01T03:09:13","Actor":"neville-nazerane","Number":"10685","RawContent":null,"Title":"`dotnet add package` fails when --packages-directory has spaces","State":"open","Body":"I am running the latest release version 2.2. I tried running the following: \r\n\r\n    dotnet add package packageName --package-directory \"D:\\Cloud\\Dropbox\\codes\\dotnet samples\\nugets\"\r\n\r\nI get the error: \r\n\r\n> error: Unrecognized command or argument 'samples\\nugets'\r\n\r\nThe error is gone when the folder has no spaces. \r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10685","RelatedDescription":"Open issue \"`dotnet add package` fails when --packages-directory has spaces\" (#10685)"},{"Id":"405437261","IsPullRequest":true,"CreatedAt":"2019-02-01T02:54:54","Actor":"nugetlurker","Number":"10681","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview3.5800 into cli","State":"closed","Body":"Insert NuGet Build 5.0.0-preview3.5800 into cli release/2.1.6xx branch","Url":"https://github.com/dotnet/cli/pull/10681","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-preview3.5800 into cli\" (#10681)"},{"Id":"405455648","IsPullRequest":false,"CreatedAt":"2019-01-31T21:49:13","Actor":"nguerrera","Number":"10682","RawContent":null,"Title":"Mark shipping/non-shipping assets appropriately across all of our repos","State":"open","Body":"The following repos need changes to IsShipping metadata:\r\n\r\n* cli\r\n* cliCommandLineParser\r\n* sdk\r\n* toolset\r\n\r\nNone of these repos ship packages directly. The packages are all transport-only. Therefore, IsShippingPackage should be false for all of them. \r\n\r\n* For each repo, make sure we have https://github.com/dotnet/arcade/pull/1900\r\n\r\n* Make sure all test projects are IsShipping=false (therefore IsShippingAssembly=false, IsShippingPackage=false)\r\n\r\n* Product projects should be IsShippingAssembly=true, IsShippingPackage= false\r\n\r\ncc @chcosta ","Url":"https://github.com/dotnet/cli/issues/10682","RelatedDescription":"Open issue \"Mark shipping/non-shipping assets appropriately across all of our repos\" (#10682)"},{"Id":"405001780","IsPullRequest":false,"CreatedAt":"2019-01-31T18:06:01","Actor":"RealOrko","Number":"10675","RawContent":null,"Title":"Zipping and Unzipping could be unified with the dotnet cli tool offering between various runtimes (win-x64/linux-x64/osx-64)","State":"closed","Body":"## Steps to reproduce\r\n\r\nHave loads of dotnet framework services/ui's hosted on Windows that you would like to migrate to dotnet core/Linux in AWS with a standard way of zipping and unzipping artifacts across win-x64/osx-64/linux-x64 runtimes using the dotnet core cli. \r\n\r\nWe use a hybrid of powershell(Compress-Archive/Expand-Archive)/bash(zip/unzip) at the moment. In some cases on windows we have ruby or various other RAKE, MAKE, FAKE, CAKE ways of achieving this. It would be great if we could bring this into the dotnet cli.\r\n\r\n## Expected  behavior\r\n\r\nCommon dotnet cli command for zipping and unzipping folders/zip across the following RID's: win-x64/osx-x64/linux-x64.\r\n\r\nExample: https://github.com/RealOrko/dotnet-cli-zip\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/issues/10675","RelatedDescription":"Closed issue \"Zipping and Unzipping could be unified with the dotnet cli tool offering between various runtimes (win-x64/linux-x64/osx-64)\" (#10675)"},{"Id":"405235636","IsPullRequest":true,"CreatedAt":"2019-01-31T13:32:48","Actor":"dotnet-maestro[bot]","Number":"10679","RawContent":null,"Title":"Update dependencies from dotnet/sdk","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/sdk\r\n\r\n- Microsoft.NET.Sdk - 3.0.100-preview.19080.1\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10679","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/sdk\" (#10679)"},{"Id":"405235440","IsPullRequest":true,"CreatedAt":"2019-01-31T13:32:25","Actor":"dotnet-maestro[bot]","Number":"10678","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19080.6\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/10678","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#10678)"},{"Id":"405026377","IsPullRequest":false,"CreatedAt":"2019-01-31T00:25:20","Actor":"richlander","Number":"10676","RawContent":null,"Title":"Linux ARM32 RID Incorrect","State":"open","Body":"```console\r\npi@raspberrypi:~/webapp3 $ uname -a\r\nLinux raspberrypi 4.14.79-v7+ #1159 SMP Sun Nov 4 17:50:20 GMT 2018 armv7l GNU/Linux\r\npi@raspberrypi:~/webapp3 $ dotnet --info\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview-010184\r\n Commit:    c57bde4593\r\n\r\nRuntime Environment:\r\n OS Name:     raspbian\r\n OS Version:  9\r\n OS Platform: Linux\r\n RID:         linux-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.100-preview-010184/\r\n```\r\n\r\nRID should be `linux-arm` on this platform.\r\n\r\nThe Linux ARM64 RID is correct (on an ARM64 install).","Url":"https://github.com/dotnet/cli/issues/10676","RelatedDescription":"Open issue \"Linux ARM32 RID Incorrect\" (#10676)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"405434278","IsPullRequest":false,"CreatedAt":"2019-01-31T20:48:53","Actor":"botrif","Number":"1064","RawContent":null,"Title":"NETStandard, T4 templates, and System.Numerics.Vectors","State":"open","Body":"We have a T4 template to generate code based on reflection of another project. The template project and the other project are SDK style, multitargeted: &lt;TargetFrameworks&gt;net46;netstandard2.0;uap10.0.14393&lt;/TargetFramework&gt;\r\nThe assembly to reflect on is loaded with &lt;#@ assembly name=…\r\nIf the first target in the list is net46, reflection works fine: typeof(MyClass).Assembly.GetTypes()\r\nBut with netstandard first in the list, we get ReflectionTypeLoadException containing the following:\r\n\r\nCould not load file or assembly 'System.Numerics.Vectors, Version=4.1.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified.\r\n\r\n(the reflected-on assembly uses System.Vector.Numerics: &lt;PackageReference Include=\"System.Numerics.Vectors\" Version=\"4.5.0\" Condition=\" '$(TargetFramework)' == 'netstandard2.0' \" /&gt;\r\nOur previous workaround was to do the design-time code generation on net46, but we want to move to netstandard builds soon. How can this error be dealt with?","Url":"https://github.com/dotnet/standard/issues/1064","RelatedDescription":"Open issue \"NETStandard, T4 templates, and System.Numerics.Vectors\" (#1064)"},{"Id":"403988291","IsPullRequest":true,"CreatedAt":"2019-01-28T22:28:27","Actor":"wtgodbe","Number":"1062","RawContent":null,"Title":"Add build status badge to Repo home page","State":"closed","Body":"CC @danmosemsft @terrajobst @safern @ViktorHofer ","Url":"https://github.com/dotnet/standard/pull/1062","RelatedDescription":"Closed or merged PR \"Add build status badge to Repo home page\" (#1062)"},{"Id":"404008513","IsPullRequest":false,"CreatedAt":"2019-01-28T21:10:37","Actor":"wtgodbe","Number":"1063","RawContent":null,"Title":"Create shims for new netstandard2.1 assemblies","State":"open","Body":"We need to create Shims for the assemblies added to netstandard2.1 that weren't in netstandard2.0 - This means (as far as I know):\r\n\r\n- System.Memory\r\n- System.Threading.Tasks.Extensions\r\n- System.Reflection.DispatchProxy\r\n- System.Reflection.Emit\r\n- System.Reflection.Emit.ILGeneration\r\n- System.Reflection.Emit.Lightweight\r\n- System.Numerics.Vectors\r\n- System.Buffers\r\n\r\nCC @ericstj @terrajobst ","Url":"https://github.com/dotnet/standard/issues/1063","RelatedDescription":"Open issue \"Create shims for new netstandard2.1 assemblies\" (#1063)"},{"Id":"398564136","IsPullRequest":false,"CreatedAt":"2019-01-24T23:36:09","Actor":"netspiri","Number":"1052","RawContent":null,"Title":"Incorrect dll being copied","State":"closed","Body":"I have\r\n\r\n- ProjectA targeting .Net Standard 2.0 making use of nuget library where the dlls for the different frameworks are named differently\r\n- ProjectB targeting .Net Standard 2.0 references ProjectA\r\n- ProjectC targeting .Net Framework 4.7.2 references ProjectB\r\n- ProjectD targeting .Net Framework 4.7.2 and is a Console app referencing ProjectC\r\n\r\nIf I run ProjectD I get the infamous \"Could not load file or assembly\" for Aspose.Email.Core.dll.\r\n\r\nI played around <RestoreProjectStyle>PackageReference</RestoreProjectStyle> in ProjectC and ProjectD but this results in .net framework dll (i.e Aspose.Email.dll) being copied over from the nuget package and not the .net standard dll (Aspose.Email.Core.dll).  I did not play with binding redirects because I do not think this is related.\r\n\r\nI've migrated manually ProjectC and ProjectD to the new csproj style but this had no effect.\r\n\r\nI do not want to end up with ProjectD referencing the required dlls directly because there must \"the proper way of doing it\".\r\n\r\nI have therefore uploaded a clean barebones project to https://bitbucket.org/netspiri/projectreferencestest.git , so as to see how the experts would do it, in the hope that this might help others. \r\n\r\nI've attached also the output of msbuild ProjectD.csproj /t:rebuild /bl\r\n\r\nIt would be nice if the experts would guide trough thier troubleshooting process.\r\n\r\n[log.txt](https://github.com/dotnet/standard/files/2752202/log.txt)\r\n[msbuild.zip](https://github.com/dotnet/standard/files/2752203/msbuild.zip)\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1052","RelatedDescription":"Closed issue \"Incorrect dll being copied\" (#1052)"},{"Id":"402932649","IsPullRequest":true,"CreatedAt":"2019-01-24T23:21:33","Actor":"wtgodbe","Number":"1060","RawContent":null,"Title":"Set StrongNameKeyID after import sdk.props","State":"closed","Body":"This allows us to set our own default for `StrongNameKeyID` rather than relying on the one from the SDK.\r\n\r\nCC @ericstj ","Url":"https://github.com/dotnet/standard/pull/1060","RelatedDescription":"Closed or merged PR \"Set StrongNameKeyID after import sdk.props\" (#1060)"},{"Id":"402860962","IsPullRequest":true,"CreatedAt":"2019-01-24T21:43:12","Actor":"terrajobst","Number":"1059","RawContent":null,"Title":"Add missing dummy fields","State":"closed","Body":"In ced9376c, we've added dummy fields for structs. Apparently, I missed these two in the diff.","Url":"https://github.com/dotnet/standard/pull/1059","RelatedDescription":"Closed or merged PR \"Add missing dummy fields\" (#1059)"},{"Id":"402275150","IsPullRequest":false,"CreatedAt":"2019-01-24T19:47:05","Actor":"jacobmohl","Number":"1056","RawContent":null,"Title":"Add support for HttpClient.PatchAsync()","State":"closed","Body":"It would make sense to support the HTTP Verb PATCH in HttpClient. Which for now is only supported in .Net Core 2.1 and forward with HttpClient.PatchAsync().","Url":"https://github.com/dotnet/standard/issues/1056","RelatedDescription":"Closed issue \"Add support for HttpClient.PatchAsync()\" (#1056)"},{"Id":"402847550","IsPullRequest":true,"CreatedAt":"2019-01-24T19:39:46","Actor":"wtgodbe","Number":"1058","RawContent":null,"Title":"Re-enable APICompat for netstandard1.x/2.0","State":"closed","Body":"This causes netstandard1.x/2.0 assets to be binplaced at `artifacts\\obj\\CompatShims\\ref` again, which will re-enable the APICompat runs for those TFMs. @ViktorHofer I noticed you removed this line here: https://github.com/dotnet/standard/pull/1040/files#diff-1fea8681058f11db0ecbfc2fc8a5be52L7 - was that intentional?","Url":"https://github.com/dotnet/standard/pull/1058","RelatedDescription":"Closed or merged PR \"Re-enable APICompat for netstandard1.x/2.0\" (#1058)"},{"Id":"400369663","IsPullRequest":false,"CreatedAt":"2019-01-24T19:21:03","Actor":"UnreachableCode","Number":"1055","RawContent":null,"Title":"Android implementation of HTTPClient throwing up java.io.IOException ","State":"closed","Body":"I believe this relates to the bug detailed in Xamarin's old Bugzilla:\r\nhttps://bugzilla.xamarin.com/show_bug.cgi?id=41100\r\n\r\nand is also similar to the issue discussed here:\r\nhttps://github.com/square/okhttp/issues/1517\r\n\r\nHere is the main stacktrace of my issue:\r\n\r\nLoginProvider+<LoginAsync>d__1.MoveNext () C:\\source\\repos\\{MyApp}\\{MyApp}\\{MyApp}\\Services\\LoginProvider.cs:35\r\njava.io.IOException: unexpected end of stream on Connection{testclarity.i-menzies.com:443, proxy=DIRECT@ hostAddress=62.244.173.166 cipherSuite=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 protocol=http/1.1} (recycle count=0)\r\ncom.android.okhttp.internal.http.HttpConnection.readResponse(HttpConnection.java:210)\r\ncom.android.okhttp.internal.http.HttpTransport.readResponseHeaders(HttpTransport.java:80)\r\ncom.android.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:905)\r\ncom.android.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:789)\r\ncom.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:443)\r\ncom.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:388)\r\ncom.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:501)\r\ncom.android.okhttp.internal.huc.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:105)\r\ncom.android.okhttp.internal.huc.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:25)\r\nCaused by: java.io.EOFException: \\n not found: size=0 content=...\r\ncom.android.okhttp.okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:200)\r\ncom.android.okhttp.internal.http.HttpConnection.readResponse(HttpConnection.java:191)\r\n\r\nI have tried setting the connection closed header and setting chunked transfer encoding but neither of these fixes work. I would try to set the OkHTTP.setRetryOnConnectionFailure(true) but I don't think there is a way to do this in the referenced Java source.","Url":"https://github.com/dotnet/standard/issues/1055","RelatedDescription":"Closed issue \"Android implementation of HTTPClient throwing up java.io.IOException \" (#1055)"},{"Id":"402566640","IsPullRequest":true,"CreatedAt":"2019-01-24T06:55:33","Actor":"wtgodbe","Number":"1057","RawContent":null,"Title":"Dummy commit to trigger CI","State":"closed","Body":"","Url":"https://github.com/dotnet/standard/pull/1057","RelatedDescription":"Closed or merged PR \"Dummy commit to trigger CI\" (#1057)"},{"Id":"400334291","IsPullRequest":false,"CreatedAt":"2019-01-18T13:36:41","Actor":"aday12345","Number":"1054","RawContent":null,"Title":".net standard 2.1 targeting question","State":"closed","Body":"i have the .net core 2.2 sdk installed and can target it with no issue, but should i be able to target the netStandard 2.1 library when creating a class library? i only see 2.0 as an option.","Url":"https://github.com/dotnet/standard/issues/1054","RelatedDescription":"Closed issue \".net standard 2.1 targeting question\" (#1054)"},{"Id":"396287501","IsPullRequest":false,"CreatedAt":"2019-01-17T10:59:36","Actor":"gpcaretti","Number":"1044","RawContent":null,"Title":"FAQ: how to understand a package is compatible with NETStandard","State":"closed","Body":"I am developing a library bases on .NETstandard 2.0.\r\n\r\nMy question is: if in my library I need to refer a class defined outside the .NETstandard library (e.g. the `System.ComponentModel.DataAnnotations.DataTypeAttribute` class), how do I understand if I do not break the multiplatfom compatibility of my library by referring the external library `System.ComponentModel.DataAnnotations`?","Url":"https://github.com/dotnet/standard/issues/1044","RelatedDescription":"Closed issue \"FAQ: how to understand a package is compatible with NETStandard\" (#1044)"},{"Id":"396610837","IsPullRequest":true,"CreatedAt":"2019-01-16T21:17:03","Actor":"wtgodbe","Number":"1047","RawContent":null,"Title":"Bump AssemblyVersion for nestandard.dll to 2.1.0.0","State":"closed","Body":"Fixes https://github.com/dotnet/standard/issues/929\r\n\r\nCC @ericstj @terrajobst ","Url":"https://github.com/dotnet/standard/pull/1047","RelatedDescription":"Closed or merged PR \"Bump AssemblyVersion for nestandard.dll to 2.1.0.0\" (#1047)"},{"Id":"399549465","IsPullRequest":false,"CreatedAt":"2019-01-15T21:45:54","Actor":"kaby76","Number":"1053","RawContent":null,"Title":"Qs on NET Standard, Formal Specifications, Type Equivalence, etc.","State":"open","Body":"I've started porting (rewriting) the Net Core framework to the GPU. Part of this very large task is to go through the framework and verify that it indeed satisfies the Net Standard specification because I really don't trust anything/anyone. So, I have several questions regarding Net Standard.\r\n\r\n1) According to Microsoft documentation (https://docs.microsoft.com/en-us/dotnet/standard/net-standard), “[t]he .NET Standard is a formal specification of .NET APIs that are intended to be available on all .NET implementations. The motivation behind the .NET Standard is establishing greater uniformity in the .NET ecosystem. ECMA 335 continues to establish uniformity for .NET implementation behavior, but there's no similar spec for the .NET Base Class Libraries (BCL) for .NET library implementations.”\r\n\r\nQ: Exactly where is the “formal specification” of the API? Is it the MD file for a particular version (e.g., https://raw.githubusercontent.com/dotnet/standard/master/docs/versions/netstandard2.0_ref.md)? Is it the collection of C# files with stub implementations (e.g., the files in https://github.com/dotnet/standard/tree/master/src/netstandard/ref)? Or, is it something else?\r\n\r\n2) Assuming that the C# files in https://github.com/dotnet/standard/tree/master/src/netstandard/ref is the formal definition. I wrote a CSPROJ to build an assembly for the current state of the decls. Then, I wrote a program to go through a framework, following reference assemblies to implementation assemblies, and output a sorted list of all types, all methods, all attributes, for public decls. I compared the reference and implementation assemblies for Net Core with the Standard set forth in the C# code. And yes, there are some non-trivial differences, mostly because the standard is evolving.\r\n\r\nThe following are general questions of type equivalence.\r\n\r\nQ: If there's an attribute (\"[...]\") on a type is in Standard, but missing on the type in Core, does Core still satisfy the Standard?\r\n\r\nQ: If a method and/or type exists in Core, but not in Standard, does the implementation still satisfy the Standard? In other words, can an implementation provide \"extra\" and still satisfy Standard?\r\n\r\nThe full list of the type dump for Standard and Core assemblies is here (https://1drv.ms/f/s!Atb3HX_AxX9ZgaxT-m221N6ut285Vw).\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1053","RelatedDescription":"Open issue \"Qs on NET Standard, Formal Specifications, Type Equivalence, etc.\" (#1053)"},{"Id":"393267915","IsPullRequest":true,"CreatedAt":"2019-01-14T18:45:00","Actor":"ViktorHofer","Number":"1040","RawContent":null,"Title":"Remove the manual config system","State":"closed","Body":"Fixes https://github.com/dotnet/standard/issues/1032","Url":"https://github.com/dotnet/standard/pull/1040","RelatedDescription":"Closed or merged PR \"Remove the manual config system\" (#1040)"},{"Id":"396798571","IsPullRequest":false,"CreatedAt":"2019-01-11T01:19:54","Actor":"duncand","Number":"1050","RawContent":null,"Title":"Proposal to rename Standard 2.1 to 2.2, make 2.1 a Framework compatible subset","State":"closed","Body":"I'm looking to provide input on .NET Standard and this appears to be the best place.\r\n\r\nSee https://blogs.msdn.microsoft.com/dotnet/2018/11/05/announcing-net-standard-2-1/ for reference.\r\n\r\nI propose that what is currently planned for .NET Standard 2.1 be pushed back to .NET Standard 2.2, and that .NET Standard 2.1 instead just have the subset of those changes that are implementable on .NET Framework.\r\n\r\nWhile going forward, .NET Standard after 2.0 is mainly adding new features that are not practical to implement in .NET Framework, some of the proposals for 2.1 contained bringing out some things that already existed but missed the 2.0 window.\r\n\r\nIf we do what I propose, then we have a last chance to increase the API surface that can run everywhere, before it is permanently shut out due to releasing a .NET Standard version that Framework can't run, given that each increasing Standard version is a superset of what came before.","Url":"https://github.com/dotnet/standard/issues/1050","RelatedDescription":"Closed issue \"Proposal to rename Standard 2.1 to 2.2, make 2.1 a Framework compatible subset\" (#1050)"},{"Id":"394796330","IsPullRequest":false,"CreatedAt":"2019-01-11T00:23:25","Actor":"MV10","Number":"1041","RawContent":null,"Title":"System.MathF missing in .NET Standard 2.1 README","State":"closed","Body":"Minor, but `System.MathF` is missing from the [README](https://github.com/dotnet/standard/blob/master/docs/planning/netstandard-2.1/README.md). I figured it would be in the Miscellaneous list at a minimum. (As I understand it, this is still on schedule for .NET Standard 2.1 per  https://github.com/dotnet/corefx/issues/15830, correct?)\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1041","RelatedDescription":"Closed issue \"System.MathF missing in .NET Standard 2.1 README\" (#1041)"},{"Id":"396675175","IsPullRequest":false,"CreatedAt":"2019-01-11T00:22:05","Actor":"Entomy","Number":"1049","RawContent":null,"Title":"String Enhancements","State":"closed","Body":"In .NET Core >=2.1 there exists a `.Join()` method that takes strings and chars, and a `.Split()` method that takes strings and chars. However in .NET Standard, `.Join()` only accepts strings, and `.Split()` only accepts chars. This is an odd seeming, and inconvenient, limitation. Can this be added to a future version?","Url":"https://github.com/dotnet/standard/issues/1049","RelatedDescription":"Closed issue \"String Enhancements\" (#1049)"},{"Id":"397146216","IsPullRequest":false,"CreatedAt":"2019-01-08T23:57:44","Actor":"dsplaisted","Number":"1051","RawContent":null,"Title":"Create targeting pack for .NET Standard","State":"open","Body":"For .NET Core 3.0, we expect to separate targeting packs, which contain the assets needed at build time when targeting .NET Core 3.0 (for example, reference assemblies and intellisense documentation) from \"runtime packs\", which will include the platform-specific runtime components for .NET Core 3.  See dotnet/cli#10006, and [dotnet/designs#50](https://github.com/dotnet/designs/pull/50/files?short_path=ebf265d#diff-ebf265d0476041dd8cab82fa24ab5b0e)\r\n\r\nWe will have targeting pack for each shared framework (.NET Core, ASP.NET Core, and WindowsDesktop), as well as for .NET Standard.  This issue tracks the work required a .NET Standard targeting pack.  Ideally, we should create targeting packs for both .NET Standard 2.1 and 2.0.\r\n\r\nThe work required includes:\r\n\r\n- A new NuGet package including the targeting pack assets.  This should include the reference assemblies, intellisense documentation, and platform manifest file.  The current straw man proposal for the package ID is `Microsoft.NETCore.App.Ref`\r\n- Installers for each supported installer format (msi, deb, pkg, and rpm), which lay out the targeting pack files under `<DOTNET_ROOT>/packs/<PackageId>/version`.  These installers will be bundled or depended on by the corresponding .NET Core SDK installers.\r\n\r\nSome of the details (such as package layout, names, etc) are still [under design](https://github.com/dotnet/designs/pull/50/files?short_path=ebf265d#diff-ebf265d0476041dd8cab82fa24ab5b0e) and may change slightly.","Url":"https://github.com/dotnet/standard/issues/1051","RelatedDescription":"Open issue \"Create targeting pack for .NET Standard\" (#1051)"},{"Id":"396646204","IsPullRequest":true,"CreatedAt":"2019-01-07T22:02:02","Actor":"wtgodbe","Number":"1048","RawContent":null,"Title":" Move source items into src folder","State":"closed","Body":"With this, we group all source items into an `src` folder to match the convention of other repos. I've done a diff of the `artifacts` dir before & after this change to confirm that everything still looks like the same. @ViktorHofer @danmosemsft @terrajobst PTAL\r\n\r\nFixes https://github.com/dotnet/standard/issues/1037","Url":"https://github.com/dotnet/standard/pull/1048","RelatedDescription":"Closed or merged PR \" Move source items into src folder\" (#1048)"},{"Id":"393015237","IsPullRequest":false,"CreatedAt":"2019-01-07T22:02:02","Actor":"ViktorHofer","Number":"1037","RawContent":null,"Title":"Group source items in a src folder","State":"closed","Body":"We should move\r\n- netstandard\r\n- platforms\r\n- apicompat\r\n- dir.traversal.targets\r\n- package.builds\r\n- src.builds\r\n\r\ninto a `src` folder to align with other dotnet repos.\r\n\r\ncc @wtgodbe @danmosemsft @terrajobst","Url":"https://github.com/dotnet/standard/issues/1037","RelatedDescription":"Closed issue \"Group source items in a src folder\" (#1037)"},{"Id":"396598897","IsPullRequest":true,"CreatedAt":"2019-01-07T18:47:02","Actor":"wtgodbe","Number":"1046","RawContent":null,"Title":"Update APICompat baseline","State":"closed","Body":"I see these updates to the APICompat baselines after building from clean - I've confirmed that they weren't present before https://github.com/dotnet/standard/commit/dbb3e847a6dd09a8c9ec0206463ed1b848a5c90b. I figured I'd open a PR to use first as an easy way to view the diff & discuss, then to take into master if we decide it's the right thing. @ViktorHofer did you notice these locally when fixing up APICompat/GenAPI?","Url":"https://github.com/dotnet/standard/pull/1046","RelatedDescription":"Closed or merged PR \"Update APICompat baseline\" (#1046)"},{"Id":"396591596","IsPullRequest":false,"CreatedAt":"2019-01-07T18:06:51","Actor":"wtgodbe","Number":"1045","RawContent":null,"Title":"Convert seed.sh/.cmd files to proj files & update GenAPI invocations","State":"open","Body":"We should convert files like https://github.com/dotnet/standard/blob/8ca3d4c0c9599186d50196781484312176a9b2ad/platforms/xamarin.android/seed.sh to `.proj` files that can be built on-demand (either by direct invocation of `dotnet msbuild`, or a wrapper .ps1/.sh script that builds the project). This way we'll have access to the up-to-date version of `GenAPI`. We should also update the invocation of GenAPI to match the new standard introduced by https://github.com/dotnet/arcade/pull/1676\r\n\r\nCC @ViktorHofer ","Url":"https://github.com/dotnet/standard/issues/1045","RelatedDescription":"Open issue \"Convert seed.sh/.cmd files to proj files & update GenAPI invocations\" (#1045)"},{"Id":"396025237","IsPullRequest":true,"CreatedAt":"2019-01-04T19:25:54","Actor":"ViktorHofer","Number":"1043","RawContent":null,"Title":"Fix GenAPI invocation with new args","State":"closed","Body":"Also need to use DARC to get a GenApi fix in.","Url":"https://github.com/dotnet/standard/pull/1043","RelatedDescription":"Closed or merged PR \"Fix GenAPI invocation with new args\" (#1043)"},{"Id":"395644781","IsPullRequest":true,"CreatedAt":"2019-01-04T16:29:48","Actor":"ViktorHofer","Number":"1042","RawContent":null,"Title":"Respect ApiCompat cmd changes","State":"closed","Body":"Depends on https://github.com/dotnet/arcade/pull/1676","Url":"https://github.com/dotnet/standard/pull/1042","RelatedDescription":"Closed or merged PR \"Respect ApiCompat cmd changes\" (#1042)"},{"Id":"393264404","IsPullRequest":true,"CreatedAt":"2018-12-26T21:14:18","Actor":"terrajobst","Number":"1039","RawContent":null,"Title":"Fix representation of enum values","State":"closed","Body":"We finally fixed the missing feature in our source emitter so that it now includes a human readable bitmask rather than the underlying value.\r\n\r\n***This doesn't change any API surface but makes diffs more human readable.***","Url":"https://github.com/dotnet/standard/pull/1039","RelatedDescription":"Closed or merged PR \"Fix representation of enum values\" (#1039)"},{"Id":"393009607","IsPullRequest":false,"CreatedAt":"2018-12-21T01:08:29","Actor":"ViktorHofer","Number":"1036","RawContent":null,"Title":"Disable Jenkins","State":"closed","Body":"We need to disable Jenkins so I doesn't get queued in a PR anymore and if not already done point mc.dot.net to the new Azure DevOps run. I also noticed that the last official build happened 12/3, maybe the cron job is not configured right?","Url":"https://github.com/dotnet/standard/issues/1036","RelatedDescription":"Closed issue \"Disable Jenkins\" (#1036)"},{"Id":"393171059","IsPullRequest":true,"CreatedAt":"2018-12-20T19:19:30","Actor":"wtgodbe","Number":"1038","RawContent":null,"Title":"Add APICompat run for NetStandard2.0","State":"closed","Body":"Adds ApiCompat coverage for .netstandard2.0\r\n\r\n@ViktorHofer @terrajobst PTAL\r\n\r\nresolves https://github.com/dotnet/standard/issues/1029","Url":"https://github.com/dotnet/standard/pull/1038","RelatedDescription":"Closed or merged PR \"Add APICompat run for NetStandard2.0\" (#1038)"},{"Id":"393005614","IsPullRequest":true,"CreatedAt":"2018-12-20T18:07:43","Actor":"ViktorHofer","Number":"1035","RawContent":null,"Title":"Cleanup files after arcade switch & update baseline","State":"closed","Body":"Cleaning up some leftovers and running the build once to regenerate the baseline files.\r\n\r\nOpened https://github.com/dotnet/standard/issues/1031 and https://github.com/dotnet/standard/issues/1032 which should also be done.\r\n\r\nFailing CI jobs are leftovers: https://github.com/dotnet/standard/issues/1036\r\n\r\ncc @danmosemsft ","Url":"https://github.com/dotnet/standard/pull/1035","RelatedDescription":"Closed or merged PR \"Cleanup files after arcade switch & update baseline\" (#1035)"},{"Id":"393001679","IsPullRequest":true,"CreatedAt":"2018-12-20T11:31:22","Actor":"ViktorHofer","Number":"1034","RawContent":null,"Title":"Cleanup files after arcade switch & update baseline","State":"closed","Body":"Cleaning up some leftovers and running the build once to regenerate the baseline files.\r\n\r\nOpened https://github.com/dotnet/standard/issues/1031 and https://github.com/dotnet/standard/issues/1032 which should also be done.\r\n\r\ncc @danmosemsft ","Url":"https://github.com/dotnet/standard/pull/1034","RelatedDescription":"Closed or merged PR \"Cleanup files after arcade switch & update baseline\" (#1034)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"406635812","IsPullRequest":true,"CreatedAt":"2019-02-05T05:30:19","Actor":"Dotnet-GitSync-Bot","Number":"35097","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @benaadams","Url":"https://github.com/dotnet/corefx/pull/35097","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#35097)"},{"Id":"406617946","IsPullRequest":true,"CreatedAt":"2019-02-05T05:24:24","Actor":"Dotnet-GitSync-Bot","Number":"35093","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corefx/pull/35093","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#35093)"},{"Id":"406633427","IsPullRequest":false,"CreatedAt":"2019-02-05T05:14:15","Actor":"joshudson","Number":"35096","RawContent":null,"Title":"SslStream throws exceptions with error message text of \"See inner exception\"","State":"open","Body":"Don't ever write \"see inner exception for details.\" Instead, concatenate the message with the inner exception's message. \"See inner exception for details\" on IO.IOException gets written to logfile where there's no clue to the problem. I spent way too long tracking this one down.\r\n\r\nOne example: https://stackoverflow.com/questions/40939031/tls-1-2-the-token-supplied-to-the-function-is-invalid/54523827#54523827\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/35096","RelatedDescription":"Open issue \"SslStream throws exceptions with error message text of \"See inner exception\"\" (#35096)"},{"Id":"406632431","IsPullRequest":false,"CreatedAt":"2019-02-05T05:09:08","Actor":"joshudson","Number":"35095","RawContent":null,"Title":"SslStream can throw in Dispose()","State":"open","Body":"SslStream can throw ObjectDisposedException in Dispose()\r\n\r\nI shouldn't have to explain how bad that is. A throwing Dispose is something you do in desperation in application code, not for some external IO condition in a library code.\r\n\r\nI got here by disposing the NetworkStream the SslStream was created from because I knew at higher level the NetworkStream was in a dead state. Allowing SslStream to try to call Write() like it did without disposing it first would have resulted in a hang for an unacceptably long time (minutes).\r\n\r\nTrivial fix:\r\n\r\n    public void Dispose\r\n    {\r\n        try {\r\n            Dispose(true);\r\n        } catch (ObjectDisposedException){}\r\n    }\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/35095","RelatedDescription":"Open issue \"SslStream can throw in Dispose()\" (#35095)"},{"Id":"406629942","IsPullRequest":true,"CreatedAt":"2019-02-05T04:55:15","Actor":"ahsonkhan","Number":"35094","RawContent":null,"Title":"Implement ArrayBufferWriter to provide an in-box ArrayPool-backed IBufferWriter<byte>","State":"open","Body":"Fixes https://github.com/dotnet/corefx/issues/34894\r\n\r\n**TODO:**\r\n- Add XML comments\r\n- Figure out which assembly to expose this from. We decided on `System.Buffers.dll`, but I am not sure if we can add APIs to that assembly or not given `ArrayPool`, the only API implemented in that assembly, got moved down to corelib (https://github.com/dotnet/corefx/pull/32096). Currently, exposing this from `System.Memory.dll`. cc @safern \r\nhttps://github.com/dotnet/corefx/blob/53a33cf2662ac8c9a45d13067012d80cf0ba6956/src/System.Buffers/src/System.Buffers.csproj#L9-L11\r\n\r\nChanges based on https://github.com/dotnet/apireviews/pull/88:\r\n- No optional argument on the ctor to avoid exposing internal implementation detail around default initial capacity (of 256 bytes).\r\n- Sealed the class\r\n- Renamed `BytesCommitted` to `TotalBytesWritten` for clarity\r\n- Exposing `Capacity` and `BytesAvailable`\r\n- Implementing the `IBufferWriter<byte>` interface explicitly to hide the APIs on ArrayBufferWriter itself.\r\n- The output span/memory properties are now `ReadOnly`\r\n- Renamed `Clear()` to `Reset()` and `CopyToAndClear()` to `CopyToAndReset()` based on feedback from @davidfowl \r\n\r\ncc @davidfowl, @KrzysztofCwalina, @stephentoub, @steveharter, @JeremyKuhne, @pakrym, @layomia ","Url":"https://github.com/dotnet/corefx/pull/35094","RelatedDescription":"Open PR \"Implement ArrayBufferWriter to provide an in-box ArrayPool-backed IBufferWriter<byte>\" (#35094)"},{"Id":"406590178","IsPullRequest":true,"CreatedAt":"2019-02-05T01:13:27","Actor":"danmosemsft","Number":"35092","RawContent":null,"Title":"Some test fixes","State":"open","Body":".NET Framework: Disable Media test that is hanging. One above is already disabled probably for same reason.\r\n\r\n.NET Native: Disabled some obvious cases where the failure was definitely expected. There were a few numerical ones where it was not clear to me why they were failing on .NET Native, as the tests had existed for a while. I didn't touch those.","Url":"https://github.com/dotnet/corefx/pull/35092","RelatedDescription":"Open PR \"Some test fixes\" (#35092)"},{"Id":"406586309","IsPullRequest":true,"CreatedAt":"2019-02-05T00:56:18","Actor":"stephentoub","Number":"35091","RawContent":null,"Title":"Remove a lot of allocation from SslStream's handshake","State":"open","Body":"This makes a sizeable dent in the allocation incurred as part of SslStream's handshake (AuthenticateAsClient/Server{Async}), though mainly on Windows; many of these changes also impact Unix, but on Unix there's also substantially more allocation, so the relevant percentage impact is less.\r\n\r\nMain changes:\r\n- X509Certificate2.RawData.  This was being accessed by SslStream in order to store the byte[] away in case the RemoteCertificate property was accessed, in which case it would use it to instantiate an X509Certificate2.  That, however, was resulting in lots of sizeable byte[]s being allocated.  We can instead just instantiate an X509Certificate2 from the original, and while that entails a few additional small allocations, it's a sizeable reduction, and we'd eventually need the cert anyway if the property is accessed.\r\n- X509ChainPolicy.  Every time Reset was called, it would allocate several new collections, but they often weren't used.  Made them lazy.\r\n- X509 object finalization.  A bunch of X509-related objects were being left for finalization.  Those are now aggressively disposed.\r\n- ChainPal.GetChainStatusInformation: every call was P/Invoke'ing to get a string error message for a handful of prechosen error codes... we can just get the strings once upfront and avoid allocating them each time.\r\n- OidCollections.  A bunch of these are created but not actually populated, and each time one is created it was allocating a new List.  Changed to just have it be built around an array.\r\n- SecPkgContext classes.  These have been converted to blittable structs, avoiding the associated allocations and marshaling costs, e.g. SecPkgContext_ApplicationProtocol would end up allocating a byte[] along with the instance itself.\r\n- PtrToStructure.  When QueryContextAttributes was being called, in many cases PtrToStructure was being used.  This has been cleaned up, to avoid the marshaling and just use spans / casting.\r\n- SecurityBuffer[] arrays.  Lots of code was written in terms of SecurityBuffer[], which meant lots of operations allocating these.  However, they were never larger than three items.  We now just stack allocate spans for them.\r\n- Overloads taking both SecurityBuffer and SecurityBuffer[].  I believe because of the arrays, there were some cases where methods would take both a SecurityBuffer argument and a SecurityBuffer[] argument, with one and only one non-null.  Now that we're just passing around allocation-free spans, this has been cleaned up.\r\n- GCHandles and GCHandle[].  Multiple methods were allocating arrays of GCHandles, and then one GCHandle.Alloc (not a managed allocation, but also not free) per SecurityBuffer.  Now that we're known to be limited to at most three, we just used fixed (even if we don't actually have three), avoiding the need for the arrays and for the GCHandle.Alloc, which is more expensive than fixed.\r\n- SecBuffer[] arrays.  Several places were allocating a SecBuffer[]; we can just stackalloc a struct.  These are all limited by the number of SecurityBuffers passed around, which is inherently small (<= 3 in the current code).\r\n- SecureChannel.EnsurePrivateKey.  It was always forcing a certificate's Thumbpring into existence, even though it was rarely needed.\r\n- SecureChannel.AcquireClientCredentials.  It was always forcing a List into existence, even if it wasn't needed.\r\n- SslAuthenticationOptions.  This internal type had several fields for delegates that were never used.  Removed.\r\n- Span.ToArray.  In several places utilize span to create an array from a pointer/length rather than allocating the array and Marshal.Copy'ing.  This is mostly for readability.\r\n- Also cleaned up a few things, like using ?.Dispose across System.Net.Security.\r\n- Protocol version strings.  On Unix we were getting the protocol version constant string from the native string, allocating a managed string for it, and then comparing it against the set of known constant strings.  We don't need to do that.\r\n\r\nThere's still more that can be done.  On Windows, the two big remaining sources of allocation are for byte[]s created for data to send/receive in the handshake, and that will hopefully be addressed by work to combine SslStream/SslStreamInternal/SslState and to rewrite them to use async/await, and the allocation of the actual SecurityBuffers, which should be fairly straightforward to convert to structs (albeit with some care, as they're mutated as they're passed around).  On Unix, there's a ton more allocation, in particular as part of X509Chain building, and that should be investigated separately as part of an effort to improve performance there.\r\n\r\nCloses https://github.com/dotnet/corefx/issues/35032\r\nRelated to https://github.com/dotnet/corefx/issues/35074\r\nRelated to https://github.com/dotnet/corefx/issues/35075\r\nRelated to https://github.com/dotnet/corefx/issues/35086\r\n\r\ncc: @bartonjs, @davidsh, @geoffkizer, @krwq ","Url":"https://github.com/dotnet/corefx/pull/35091","RelatedDescription":"Open PR \"Remove a lot of allocation from SslStream's handshake\" (#35091)"},{"Id":"406581508","IsPullRequest":false,"CreatedAt":"2019-02-05T00:33:41","Actor":"dotnet-mc-bot","Number":"35090","RawContent":null,"Title":"Test failure: CoreXml.Test.XLinq.XNodeBuilderFunctionalTests/RunTests","State":"open","Body":"Opened on behalf of @danmosemsft\n\nThe test `CoreXml.Test.XLinq.XNodeBuilderFunctionalTests/RunTests` has failed.\n\nFailure Message:\n```\nAssert.Equal() Failure\\r\nExpected: 0\\r\nActual:   1\n```\n\nStack Trace:\n```\n   at CoreXml.Test.XLinq.XNodeBuilderFunctionalTests.RunTests() in F:\\vsagent\\10\\s\\src\\System.Private.Xml.Linq\\tests\\xNodeBuilder\\FunctionalTests.cs:line 34\n```\n\nBuild : 3.0 - 20190204.2 (Core Tests)\nFailing configurations:\n- Windows.10.Nano.Amd64-x64\n  - Release\n- Windows.10.Amd64.ClientRS4-x64\n  - Release\n- Windows.10.Amd64.Core-x64\n  - Release\n- Windows.81.Amd64-x64\n  - Release\n- Windows.10.Amd64.ClientRS4-x86\n  - Release\n- Windows.7.Amd64-x64\n  - Release\n- Windows.10.Amd64.Core-x86\n  - Release\n- Fedora.28.Amd64-x64\n  - Release\n- Windows.81.Amd64-x86\n  - Release\n- Windows.7.Amd64-x86\n  - Release\n- Fedora.27.Amd64-x64\n  - Release\n- SLES.15.Amd64-x64\n  - Release\n- SLES.12.Amd64-x64\n  - Release\n- OpenSuse.42.Amd64-x64\n  - Release\n- Ubuntu.1810.Amd64-x64\n  - Release\n- Ubuntu.1804.Amd64-x64\n  - Release\n- Ubuntu.1604.Amd64-x64\n  - Release\n- RedHat.6.Amd64-x64\n  - Release\n- Debian.9.Amd64-x64\n  - Release\n- Alpine.38.Amd64-x64\n  - Release\n- Debian.8.Amd64-x64\n  - Release\n- Alpine.36.Amd64-x64\n  - Release\n- Ubuntu.1604.Arm64-arm64\n  - Release\n- RedHat.7.Amd64-x64\n  - Release\n- Centos.7.Amd64-x64\n  - Release\n- OSX.1014.Amd64-x64\n  - Release\n- OSX.1013.Amd64-x64\n  - Release\n- OSX.1012.Amd64-x64\n  - Release\n","Url":"https://github.com/dotnet/corefx/issues/35090","RelatedDescription":"Open issue \"Test failure: CoreXml.Test.XLinq.XNodeBuilderFunctionalTests/RunTests\" (#35090)"},{"Id":"406579459","IsPullRequest":true,"CreatedAt":"2019-02-05T00:24:02","Actor":"joperezr","Number":"35089","RawContent":null,"Title":"Adding readme to source package and changing the nested file path.","State":"open","Body":"cc: @terrajobst @ahsonkhan \r\n\r\nAddressing feedback on the source package. The only thing that will be missing from the initial feedback is to add a comment on all source files stating that the files shouldn't be modified. That has to be fixed on arcade so I'll separate that change into a different PR.","Url":"https://github.com/dotnet/corefx/pull/35089","RelatedDescription":"Open PR \"Adding readme to source package and changing the nested file path.\" (#35089)"},{"Id":"406513635","IsPullRequest":true,"CreatedAt":"2019-02-04T23:53:04","Actor":"tannergooding","Number":"35083","RawContent":null,"Title":"Adding some tests for double/float roundtripping.","State":"closed","Body":"This just adds tests to validate the new roundtripping behavior for double/floats. We are explicitly testing some edge values and values which were known to previously be incorrect.\r\n\r\nThis resolves https://github.com/dotnet/coreclr/issues/13615\r\nThis resolves https://github.com/dotnet/coreclr/issues/3313","Url":"https://github.com/dotnet/corefx/pull/35083","RelatedDescription":"Closed or merged PR \"Adding some tests for double/float roundtripping.\" (#35083)"},{"Id":"406467149","IsPullRequest":true,"CreatedAt":"2019-02-04T23:52:12","Actor":"ViktorHofer","Number":"35079","RawContent":null,"Title":"Fix uapaot binaryformatter tests","State":"closed","Body":"Fix 700 failing tests in S.R.Serialization.Formatters: https://mc.dot.net/#/product/netcore/30/source/official~2Fdotnet~2Fcorefx~2Frefs~2Fheads~2Fmaster/type/test~2Ffunctional~2Filc~2F/build/20190204.1","Url":"https://github.com/dotnet/corefx/pull/35079","RelatedDescription":"Closed or merged PR \"Fix uapaot binaryformatter tests\" (#35079)"},{"Id":"406567106","IsPullRequest":false,"CreatedAt":"2019-02-04T23:31:49","Actor":"danmosemsft","Number":"35088","RawContent":null,"Title":"Delete tests specific to .NET Framework?","State":"open","Body":"It never was and is never going to be a goal to use CoreFX tests to find bugs in .NET Framework. Really their only value is as documentation, where we intentionally changed behavior, we created two similar tests next to each other. This is an expensive kind of documentation, that runs every day, inevitably fails from time to time (given how many there are, and the fact that .NET Core is more reliable now). It would be enough documentation to have a comment, or the mere fact that a test is excluded from .NET Framework runs.\r\n\r\nThere is still some value in having .NET Framework runs, and making new tests default to running on both. But there is a cost too, and in future more and more often, new tests will not apply to .NET Framework because new tests will mostly be for new API and new behaviors. Several times a week, someone writes a test that fails in CI only on .NET Framework, because they didn't think to exclude it. It would be nice to change the default, so new tests don't run on .NET Framework, but I expect that would be too fiddly (involve marking all our existing tests somehow). At some point we will probably want to stop the .NET Framework runs entirely, relying on the tests we have built up (and taking care when we change their assertions) but perhaps that's going a little too far for now (?)\r\n\r\nSuggestion: make a pass and delete all tests and test branches that are .NET Framework only.  Thoughts?\r\n\r\n@jkotas @safern @stephentoub @ViktorHofer @ericstj @marek-safar @hughbe ","Url":"https://github.com/dotnet/corefx/issues/35088","RelatedDescription":"Open issue \"Delete tests specific to .NET Framework?\" (#35088)"},{"Id":"406561612","IsPullRequest":true,"CreatedAt":"2019-02-04T23:11:32","Actor":"wfurt","Number":"35087","RawContent":null,"Title":"basic support for PooledConnectionLifetime for HTTP2","State":"open","Body":"related to #31294 \r\n\r\nI'm not sure if we need to track expired connections. \r\nI originally started on that path and used HashSet to track them. But disposing Http2Conection seems to do exactly what I wanted e.g. close it when there is no pending request. \r\n\r\nI verified this in my setup with real HTTP2 server. \r\nI look at existing tests and it seems like it is not worth of fixing until #34345 lands. (or something similar)\r\n\r\n ","Url":"https://github.com/dotnet/corefx/pull/35087","RelatedDescription":"Open PR \"basic support for PooledConnectionLifetime for HTTP2\" (#35087)"},{"Id":"406553353","IsPullRequest":false,"CreatedAt":"2019-02-04T22:44:12","Actor":"stephentoub","Number":"35086","RawContent":null,"Title":"X509Chain building is slow on Linux","State":"open","Body":"The boxes running this are not directly comparable, however the magnitude of the difference is such that it doesn't really matter.\r\n\r\nOn my Windows 10 machine, I get numbers like this:\r\n```\r\n1000 iterations: 00:00:00.1357884\r\n1000 iterations: 00:00:00.1070347\r\n1000 iterations: 00:00:00.1002223\r\n1000 iterations: 00:00:00.1117821\r\n1000 iterations: 00:00:00.1120664\r\n```\r\n\r\nOn my Ubuntu 18.04 machine, I get numbers like this:\r\n```\r\n1000 iterations: 00:00:07.8729786\r\n1000 iterations: 00:00:07.4546996\r\n1000 iterations: 00:00:07.2997272\r\n1000 iterations: 00:00:07.3354975\r\n1000 iterations: 00:00:07.4212720\r\n```\r\n\r\nRepro:\r\n```C#\r\nusing System;\r\nusing System.Diagnostics;\r\nusing System.Linq;\r\nusing System.Security.Cryptography.X509Certificates;\r\n\r\nclass Program\r\n{\r\n    static void Main()\r\n    {\r\n        const int Iters = 1000;\r\n\r\n        var sw = new Stopwatch();\r\n        using (X509Certificate2 originalCert = GetServerCertificate())\r\n        {\r\n            while (true)\r\n            {\r\n                Console.Write($\"{Iters} iterations: \");\r\n                sw.Restart();\r\n                for (int i = 0; i < Iters; i++)\r\n                {\r\n                    using (var chain = new X509Chain())\r\n                    using (var cert = new X509Certificate2(originalCert))\r\n                    {\r\n                        chain.Build(cert);\r\n                    }\r\n                }\r\n                sw.Stop();\r\n                Console.WriteLine(sw.Elapsed);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static X509Certificate2 GetServerCertificate()\r\n    {\r\n        var certCollection = new X509Certificate2Collection();\r\n        certCollection.Import(s_testCertBytes, \"testcertificate\", X509KeyStorageFlags.DefaultKeySet);\r\n        return certCollection.Cast<X509Certificate2>().First(c => c.HasPrivateKey);\r\n    }\r\n\r\n    private static readonly byte[] s_testCertBytes = Convert.FromBase64String(@\"MIIVBAIBAzCCFMAGCSqGSIb3DQEHAaCCFLEEghStMIIUqTCCCooGCSqGSIb3DQEHAaCCCnsEggp3MIIKczCCCm8GCyqGSIb3DQEMCgECoIIJfjCCCXowHAYKKoZIhvcNAQwBAzAOBAhCAauyUWggWwICB9AEgglYefzzX/jx0b+BLU/TkAVj1KBpojf0o6qdTXV42drqIGhX/k1WwF1ypVYdHeeuDfhH2eXHImwPTw+0bACY0dSiIHKptm0sb/MskoGI8nlOtHWLi+QBirJ9LSUZcBNOLwoMeYLSFEWWBT69k/sWrc6/SpDoVumkfG4pZ02D9bQgs1+k8fpZjZGoZp1jput8CQXPE3JpCsrkdSdiAbWdbNNnYAy4C9Ej/vdyXJVdBTEsKzPYajAzo6Phj/oS/J3hMxxbReMtj2Z0QkoBBVMc70d+DpAK5OY3et872D5bZjvxhjAYh5JoVTCLTLjbtPRn1g7qh2dQsIpfQ5KrdgqdImshHvxgL92ooC1eQVqQffMnZ0/LchWNb2rMDa89K9CtAefEIF4ve2bOUZUNFqQ6dvd90SgKq6jNfwQf/1u70WKE86+vChXMMcHFeKso6hTE9+/zuUPNVmbRefYAtDd7ng996S15FNVdxqyVLlmfcihX1jGhTLi//WuMEaOfXJ9KiwYUyxdUnMp5QJqO8X/tiwnsuhlFe3NKMXY77jUe8F7I+dv5cjb9iKXAT+q8oYx1LcWu2mj1ER9/b2omnotp2FIaJDwI40Tts6t4QVH3bUNE9gFIfTMK+WMgKBz/JAGvC1vbPSdFsWIqwhl7mEYWx83HJp/+Uqp5f+d8m4phSan2rkHEeDjkUaoifLWHWDmL94SZBrgU6yGVK9dU82kr7jCSUTrnga8qDYsHwpQ22QZtu0aOJGepSwZU7NZNMiyX6QR2hI0CNMjvTK2VusHFB+qnvw+19DzaDT6P0KNPxwBwp07KMQm3HWTRNt9u6gKUmo5FHngoGte+TZdY66dAwCl0Pt+p1v18XlOB2KOQZKLXnhgikjOwYQxFr3oTb2MjsP6YqnSF9EpYpmiNySXiYmrYxVinHmK+5JBqoQCN2C3N24slZkYq+AYUTnNST7Ib2We3bBICOFdVUgtFITRW40T+0XZnIv8G1Kbaq/1avfWI/ieKKxyiYp/ZNXaxc+ycgpsSsAJEuhb83bUkSBpGg9PvFEF0DXm4ah67Ja1SSTmvrCnrOsWZXIpciexMWRGoKrdvd7Yzj9E8hiu+CGTC4T6+7FxVXJrjCg9zU9G2U6g7uxzoyjGj1wqkhxgvl9pPbz6/KqDRLOHCEwRF4qlWXhsJy4levxGtifFt6n7DWaNSsOUf8Nwpi+d4fd7LQ7B5tW/y+/vVZziORueruCWO4LnfPhpJ70g18uyN7KyzrWy29rpE46rfjZGGt0WDZYahObPbw6HjcqSOuzwRoJMxamQb2qsuQnaBS6Bhb5PAnY4SEA045odf/u9uC7mLom2KGNHHz6HrgEPas2UHoJLuxYvY1pza/29akuVQZQUvMA5yMFHHGYZLtTKtCGdVGwX0+QS6ovpV93xux4I/5TrD5U8z9RmTdAx03R3MUhkHF7Zbv5egDNsVar+41YWG4VkV1ZXtsZRKJf0hvKNvrpH0e7fVKBdXljm5PXOSg2VdtkhhOpnKKSMcv6MbGWVi/svWLnc7Qim4A4MDaz+bFVZmh3oGJ7WHvRQhWIcHUL+YJx+064+4IKXZJ/2a/+b2o7C8mJ3GGSBx831ADogg6MRWZx3UY19OZ8YMvpzmZEBRZZnm4KgNpj+SQnf6pGzD2cmnRhzG60LSNPb17iKbdoUAEMkgt2tlMKXpnt1r7qwsIoTt407cAdCEsUH7OU/AjfFmSkKJZ7vC5HweqZPnhgJgZ6LYHlfiRzUR1xeDg8JG0nb0vb7LUE4nGPy39/TxIGos7WNwGpG1QVL/8pKjFdjwREaR8e5CSTlQ7gxHV+G3FFvFGpA1p8cRFzlgE6khDLrSJIUkhkHMA3oFwwAzBNIKVXjToyxCogDqxWya0E1Hw5rVCS/zOCS1De2XQbXs//g46TW0wTJwvgNbs0xLShf3XB+23meeEsMTCR0+igtMMMsh5K/vBUGcJA27ru/KM9qEBcseb/tqCkhhsdj1dnH0HDmpgFf5DfVrjm+P6ickcF2b+Ojr9t7XHgFszap3COpEPGmeJqNOUTuU53tu/O774IBgqINMWvvG65yQwsEO06jRrFPRUGb0eH6UM4vC7wbKajnfDuI/EXSgvuOSZ9wE8DeoeK/5We4pN7MSWoDl39gI/LBoNDKFYEYuAw/bhGp8nOwDKki4a16aYcBGRClpN3ymrdurWsi7TjyFHXfgW8fZe4jXLuKRIk19lmL1gWyD+3bT3mkI2cU2OaY2C0fVHhtiBVaYbxBV8+kjK8q0Q70zf0r+xMHnewk9APFqUjguPguTdpCoH0VAQST9Mmriv/J12+Y+fL6H+jrtDY2zHPxTF85pA4bBBnLA7Qt9TKCe6uuWu5yBqxOV3w2Oa4Pockv1gJzFbVnwlEUWnIjbWVIyo9vo4LBd03uJHPPIQbUp9kCP/Zw+Zblo42/ifyY+a+scwl1q1dZ7Y0L92yJCKm9Qf6Q+1PBK+uU9pcuVTg/Imqcg5T7jFO5QCi88uwcorgQp+qoeFi0F9tnUecfDl6d0PSgAPnX9XA0ny3bPwSiWOA8+uW73gesxnGTsNrtc1j85tail8N6m6S2tHXwOmM65J4XRZlzzeM4D/Rzzh13xpRA9kzm9T2cSHsXEYmSW1X7WovrmYhdOh9K3DPwSyG4tD58cvC7X79UbOB+d17ieo7ZCj+NSLVQO1BqTK0QfErdoVHGKfQG8Lc/ERQRqj132Mhi2/r5Ca7AWdqD7/3wgRdQTJSFXt/akpM44xu5DMTCISEFOLWiseSOBtzT6ssaq2Q35dCkXp5wVbWxkXAD7Gm34FFXXyZrJWAx45Y40wj/0KDJoEzXCuS4Cyiskx1EtYNNOtfDC5wngywmINFUnnW0NkdKSxmDJvrT6HkRKN8ftik7tP4ZvTaTS28Z0fDmWJ+RjvZW+vtF6mrIzYgGOgdpZwG0ZOSKrXKrY3xpMO16fXyawFfBosLzCty7uA57niPS76UXdbplgPanIGFyceTg1MsNDsd8vszXd4KezN2VMaxvw+93s0Uk/3Mc+5MAj+UhXPi5UguXMhNo/CU7erzyxYreOlAI7ZzGhPk+oT9g/MqWa5RpA2IBUaK/wgaNaHChfCcDj/J1qEl6YQQboixxp1IjQxiV9bRQzgwf31Cu2m/FuHTTkPCdxDK156pyFdhcgTpTNy7RPLDGB3TATBgkqhkiG9w0BCRUxBgQEAQAAADBdBgkrBgEEAYI3EQExUB5OAE0AaQBjAHIAbwBzAG8AZgB0ACAAUwB0AHIAbwBuAGcAIABDAHIAeQBwAHQAbwBnAHIAYQBwAGgAaQBjACAAUAByAG8AdgBpAGQAZQByMGcGCSqGSIb3DQEJFDFaHlgAQwBlAHIAdABSAGUAcQAtADcAOQA4AGUANQA4AGIANQAtAGMAOQA2ADQALQA0ADcAZQA2AC0AYQAzADIAOQAtADAAMQBjAGEAZABmADcANgAyAGEANgA5MIIKFwYJKoZIhvcNAQcGoIIKCDCCCgQCAQAwggn9BgkqhkiG9w0BBwEwHAYKKoZIhvcNAQwBBjAOBAh+t0PMVhyoagICB9CAggnQwKPcfNq8ETOrNesDKNNYJVXnWoZ9Qjgj9RSpj+pUN5I3B67iFpXClvnglKbeNarNCzN4hXD0I+ce+u+Q3iy9AAthG7uyYYNBRjCWcBy25iS8htFUm9VoV9lH8TUnS63Wb/KZnowew2HVd8QI/AwQkRn8MJ200IxR/cFD4GuVO/Q76aqvmFb1BBHItTerUz7t9izjhL46BLabJKx6Csqixle7EoDOsTCA3H1Vmy2/Hw3FUtSUER23jnRgpRTA48M6/nhlnfjsjmegcnVBoyCgGaUadGE5OY42FDDUW7wT9VT6vQEiIfKSZ7fyqtZ6n4+xD2rVySVGQB9+ROm0mywZz9PufsYptZeB7AfNOunOAd2k1F5y3qT0cjCJ+l4eXr9KRd2lHOGZVoGq+e08ylBQU5HB+Tgm6mZaEO2QgzXOAt1ilS0lDii490DsST62+v58l2R45ItbRiorG/US7+HZHjHUY7EsDUZ+gn3ZZNqh1lAoli5bC1xcjEjNdqq0knyCAUaNMG59UhCWoB6lJpRfVEeQOm+TjgyGw6t3Fx/6ulNPc1V/wcascmahH3kgHL146iJi1p2c2yIJtEB+4zrbYv7xH73c8qXVh/VeuD80I/+QfD+GaW0MllIMyhCHcduFoUznHcDYr5GhJBhU62t6sNnSjtEU1bcd20oHrBwrpkA7g3/Mmny33IVrqooWFe876lvQVq7GtFu8ijVyzanZUs/Cr7k5xX3zjh6yUMAbPiSnTHCl+SEdttkR936fA6de8vIRRGj6eAKqboRxgC1zgsJrj7ZVI7h0QlJbodwY2jzyzcC5khn3tKYjlYeK08iQnzeK5c9JVgQAHyB4uOyfbE50oBCYJE7npjyV7LEN2f7a3GHX4ZWI3pTgbUv+Q1t8BZozQ4pcFQUE+upYucVL3Fr2T8f7HF4G4KbDE4aoLiVrYjy0dUs7rCgjeKu21UPA/BKx4ebjG+TZjUSGf8TXqrJak1PQOG4tExNBYxLtvBdFoOAsYsKjTOfMYpPXp4vObfktFKPcD1dVdlXYXvS5Dtz3qEkwmruA9fPQ6FYi+OFjw0Pkwkr5Tz+0hRMGgb1JRgVo8SVlW/NZZIEbKJdW5ZVLyMzdd1dC0ogNDZLPcPR/HENe2UXtq+0qQw0ekZ+aC2/RvfAMr5XICX8lHtYmQlAFGRhFNuOysHj7V2AJTuOx2wCXtGzrTPc6eyslsWyJign8bD1r+gkejx/qKBwwTvZF1aSmiQmFnmMm0jLj7n8v7v6zHCFTuKF1bHZ44eIwMaUDl6MAgHDdvkPl56rYgq/TM3dKuXnu47GLiRei0EXTT9OMCKcI6XYICsge81ET3k15VfLyI1LNufgqAsafnwl31yqntscXW0NsxW6SkmyXaW1mndxejLBQRjik3civBGTgxgKQbZaO9ZGOrjsSogcCSne+s0zLDxEFjmaYYtpIaU8SFWDja5jyo0jvM3OHUwvElvndZJgreFGG5cKHgwgGKdkYgx6YAvucrgQwqKE/+nxuhkKWtV9D4h9qFAqZbWc9jOPtWx9h3U3gX3NTLY/4Z4iy/FXR9KnKUtCmD1MSRRIOiMca1sNTga3mP/+qSS5u+pyon5c4c/jLdEW0GapDz/yvQcc0MP/21vSoeIkUN+w/RzUBvxrawhHGx+FeLlI249+LBKNBQu4Fbw6G9AYpPJf3PdNc0GRMnantA4B7Rm2NsSGdqqrEMuCw1XxzR6ki4jbLC/ASbcVMr54YsBw+45sggenFshRrYm0QXoUM5XoqEtesby6YfPAjBldyB/QcuULV6QyAeL44YmxOnKD5E5qQwgfcZUxN01eBgbeSS7bZI3zpFwAMdMQ+dtwHXMuhVXuUGLmNTvNe9DupfPGKbaM8louY1Xw4fmg4PaY7MP2mdYQlEXvSg2geICJVuGRBirH+Xv8VPr7lccN++LXv2NmggoUo/d18gvhY8XtOrOMon1QGANPh7SzBjR3v19JD170Z6GuZCLtMh681YkKwW/+Em5rOtexoNQRTjZLNSTthtMyLfAqLk6lZnbbh+7VdCWVfzZoOzUNV+fVwwvyR9ouIzrvDoZ5iGRZU8rEuntap6rBrf9F3FMsz4mvPlCAMp15sovLFpVI8t+8OmKmqQH3LOwd03s6iMJ+0YEWrCaTQYu3kEKoOWC3uhGE8XLSjZBqc3kwVIlzVzOBr97SGjG88JYVDW2FrjQbIv+1yTzOYzMnCDUW3T8GMtfYEQbN6ZtBaD9i4ZeZlQCdkfGuNC6OYO98L7fU4frgff8nNfeka8kHtvNMn4CosFKBRXA5y+kqEE0Qk5feZhfM8NX9x3O0CJobm4HC57VxJ3c0jTe2SA0gAfB4g0keghmDzYgjQAuIY/o1LMKFiBNue4fnXlhU1L402Zlx/lzKDera6o3Xgh9IXj3ZqyFlXa9bkyKDtek0ephTZulLc3NLeb1a3KZxId8OmplR8OcZsHluEu+Z3Der0j8Ro7X7kOnNkUxuTV2blqZ4V8DsYKATeKv4ffc1Ub8MLBd9hMs8ehjmC5jkYApM5HvXl4411mPN6MrF8f2hPVgqrd3p/M80c8wNWjvWIvPLr9Tjqk71hKBq3+Hu0oI1zuoTY2BOhBLyvpjM+mvRd8UlrFJTLGTyCAXvAhIDRIVyrGuscO5Y0sfDc+82Bvrua4FyhZkjb1r8GrGciH0V5HHKjg5dewWnr21qf4q96yf2/ZjoldFFvKiCd8wum9ZV1OaTbjjg46oSpIyBzxl4qpfrgT1ZX1MvGW4uAJ7WQHjSAex7VGr1Sl+ghe5PQBbURyFiu9PnBRMOMjGYkI2lngd3bdehc+i2fPnNe5LgdsBbmUKmEJH96rlkFT8Co+NYBWKBUsBXyfC+kwXDRyNrt2r7VafWWz/cwK0/AJ/Ucq4vz8E0mzy03Gs+ePW+tP9JOHP6leF0TLhbItvQl3DJy0gj6TyrO9S077EVyukFCXeH1/yp04lmq4G0urU+pUf2wamP4BVNcVsikPMYo/e75UI330inXG4+SbJ40q/MQIfYnXydhVmWVCUXkfRFNbcCu7JclIrzS1WO26q6BOgs2GhA3nEan8CKxa85h/oCaDPPMGhkQtCU75vBqQV9Hk2+W5zMSSj7R9RiH34MkCxETtY8IwKa+kiRAeMle8ePAmT6HfcBOdTsVGNoRHQAOZewwUycrIOYJ/54WOmcy9JZW9/clcgxHGXZq44tJ3BDHQQ4qBgVd5jc9Qy9/fGS3YxvsZJ3iN7IMs4Jt3GWdfvwNpJaCBJjiiUntJPwdXMjAeUEZ16Tmxdb1l42rjFSCptMJS2N2EPSNb36+staNgzflctLLpmyEK4wyqjA7MB8wBwYFKw4DAhoEFIM7fHJcmsN6HkU8HxypGcoifg5MBBRXe8XL349R6ZDmsMhpyXbXENCljwICB9A=\");\r\n}\r\n```\r\n\r\ncc: @bartonjs","Url":"https://github.com/dotnet/corefx/issues/35086","RelatedDescription":"Open issue \"X509Chain building is slow on Linux\" (#35086)"},{"Id":"406521970","IsPullRequest":true,"CreatedAt":"2019-02-04T21:14:10","Actor":"krwq","Number":"35085","RawContent":null,"Title":"Fix casing of files to get closer to ./build.sh -allConfiguration working on linux","State":"open","Body":"Currently `./build.sh -allConfiguration` is not working on linux.\r\n\r\nThis is fixing one class of issues.\r\nThere are still some errors I'm seeing locally but not sure how to fix yet (will be digging a bit more):\r\n\r\n```\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error : Error when creating nuget packed package from /tmp/tmp.A9Djs3tsi9/artifacts/packages/Debug/specs/runtime.linux-x64-aot.Microsoft.Private.CoreFx.NETCoreApp.nuspec. System.IO.DirectoryNotFoundException: Could not find a part of the path '/tmp/tmp.A9Djs3tsi9/artifacts/bin/native/netcoreapp-Linux-Debug-x64-aot'. [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at System.IO.Enumeration.FileSystemEnumerator`1.CreateDirectoryHandle(String path, Boolean ignoreNotFound) [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at System.IO.Enumeration.FileSystemEnumerator`1..ctor(String directory, EnumerationOptions options) [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at System.IO.Enumeration.FileSystemEnumerable`1..ctor(String directory, FindTransform transform, EnumerationOptions options) [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at System.IO.Enumeration.FileSystemEnumerableFactory.UserFiles(String directory, String expression, EnumerationOptions options) [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at System.IO.Directory.InternalEnumeratePaths(String path, String searchPattern, SearchTarget searchTarget, EnumerationOptions options) [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at System.IO.Directory.GetFiles(String path, String searchPattern, SearchOption searchOption) [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at NuGet.Common.PathResolver.PerformWildcardSearch(String basePath, String searchPath, Boolean includeEmptyDirectories, String& normalizedBasePath) [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at NuGet.Packaging.PackageBuilder.ResolveSearchPattern(String basePath, String searchPath, String targetPath, Boolean includeEmptyDirectories) [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 256 [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error : Error when creating nuget packed package from /tmp/tmp.A9Djs3tsi9/artifacts/packages/Debug/specs/runtime.linux-x64-aot.Microsoft.Private.CoreFx.NETCoreApp.nuspec. System.IO.DirectoryNotFoundException: Could not find a part of the path '/tmp/tmp.A9Djs3tsi9/artifacts/bin/native/netcoreapp-Linux-Debug-x64-aot'. [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at System.IO.Enumeration.FileSystemEnumerator`1.CreateDirectoryHandle(String path, Boolean ignoreNotFound) [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at System.IO.Enumeration.FileSystemEnumerator`1..ctor(String directory, EnumerationOptions options) [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at System.IO.Enumeration.FileSystemEnumerable`1..ctor(String directory, FindTransform transform, EnumerationOptions options) [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at System.IO.Enumeration.FileSystemEnumerableFactory.UserFiles(String directory, String expression, EnumerationOptions options) [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at System.IO.Directory.InternalEnumeratePaths(String path, String searchPattern, SearchTarget searchTarget, EnumerationOptions options) [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at System.IO.Directory.GetFiles(String path, String searchPattern, SearchOption searchOption) [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at NuGet.Common.PathResolver.PerformWildcardSearch(String basePath, String searchPath, Boolean includeEmptyDirectories, String& normalizedBasePath) [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at NuGet.Packaging.PackageBuilder.ResolveSearchPattern(String basePath, String searchPath, String targetPath, Boolean includeEmptyDirectories) [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at NuGet.Packaging.PackageBuilder.AddFiles(String basePath, String source, String destination, String exclude) [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at NuGet.Packaging.PackageBuilder.PopulateFiles(String basePath, IEnumerable`1 files) [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n/home/krwq/.nuget/packages/microsoft.dotnet.build.tasks.packaging/1.0.0-beta.19081.1/build/Packaging.targets(1255,5): error :    at Microsoft.DotNet.Build.Tasks.Packaging.NuGetPack.Pack(String nuspecPath, String nupkgPath, Manifest manifest, Boolean packSymbols) in /_/src/Microsoft.DotNet.Build.Tasks.Packaging/src/NuGetPack.cs:line 256 [/tmp/tmp.A9Djs3tsi9/pkg/Microsoft.Private.CoreFx.NETCoreApp/Microsoft.Private.CoreFx.NETCoreApp.pkgproj]\r\n```\r\n\r\nNot seeing `netcoreapp-Linux-Debug-x64-aot` in my bin folder\r\n\r\n```\r\n/tmp/tmp.A9Djs3tsi9/artifacts/bin/native$ ls -la\r\ntotal 20\r\ndrwxr-xr-x   3 krwq krwq  4096 Feb  4 12:05 .\r\ndrwxr-xr-x 207 krwq krwq 12288 Feb  4 13:03 ..\r\ndrwxr-xr-x   2 krwq krwq  4096 Feb  4 12:55 netcoreapp-Linux-Debug-x64\r\n```\r\n\r\ncc: @dotnet/dnceng ","Url":"https://github.com/dotnet/corefx/pull/35085","RelatedDescription":"Open PR \"Fix casing of files to get closer to ./build.sh -allConfiguration working on linux\" (#35085)"},{"Id":"406513946","IsPullRequest":false,"CreatedAt":"2019-02-04T20:51:31","Actor":"wfurt","Number":"35084","RawContent":null,"Title":"help (-h option)  inconsistent between build.sh and build.cmd","State":"open","Body":"With Arcade changes out online documentation is often behind. It would be nice if at least build it self provides updated and accurate information.\r\n\r\n```\r\nC:\\Users\\toweinfu\\corefx>build -?\r\nbuild.ps1 [-ArchGroup <string>] [-Release] [-TargetGroup <string>] [-OSGroup <string>] [-BuildAllConfigurations] [-RuntimeOS <string>] [-OuterLoop] [-SkipTests] [-Restore] [-Clean] [-BuildTests] [-Test] [-Coverage] [-InitTools] [-ExtraArgs <string[]>] [<CommonParameters>]\r\n```\r\n\r\nbut on Unix\r\n\r\n```\r\nmacik2:wfurt-corefx furt$ ./build.sh -?\r\nInvalid argument: -?\r\nCommon settings:\r\n  --configuration <value>    Build configuration: 'Debug' or 'Release' (short: --c)\r\n  --verbosity <value>        Msbuild verbosity: q[uiet], m[inimal], n[ormal], d[etailed], and diag[nostic] (short: -v)\r\n  --binaryLog                Create MSBuild binary log (short: -bl)\r\n\r\nActions:\r\n  --restore                  Restore dependencies (short: -r)\r\n  --build                    Build all projects (short: -b)\r\n  --rebuild                  Rebuild all projects\r\n  --test                     Run all unit tests (short: -t)\r\n  --sign                     Sign build outputs\r\n  --publish                  Publish artifacts (e.g. symbols)\r\n  --pack                     Package build outputs into NuGet packages and Willow components\r\n  --help                     Print help and exit (short: -h)\r\n\r\nAdvanced settings:\r\n  --projects <value>       Project or solution file(s) to build\r\n  --ci                     Set when running on CI server\r\n  --prepareMachine         Prepare machine for CI run, clean up processes after build\r\n  --nodeReuse <value>      Sets nodereuse msbuild parameter ('true' or 'false')\r\n  --warnAsError <value>    Sets warnaserror msbuild parameter ('true' or 'false')\r\n\r\nCommand line arguments starting with '/p:' are passed through to MSBuild.\r\n```\r\n\r\nWe are missing clean, OSGroup, ArchGroup, Outerloop and perhaps other useful options.\r\n\r\ncc: @safern @ericstj  \r\n\r\n ","Url":"https://github.com/dotnet/corefx/issues/35084","RelatedDescription":"Open issue \"help (-h option)  inconsistent between build.sh and build.cmd\" (#35084)"},{"Id":"406486213","IsPullRequest":true,"CreatedAt":"2019-02-04T20:46:42","Actor":"Dotnet-GitSync-Bot","Number":"35080","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corefx/pull/35080","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#35080)"},{"Id":"406491781","IsPullRequest":true,"CreatedAt":"2019-02-04T19:52:47","Actor":"sdmaclea","Number":"35082","RawContent":null,"Title":"Add AssemblyLoadContext.GetLoadContext(SPC) test","State":"open","Body":"Should fail until bits from dotnet/coreclr#22406 are consumed by corefx\r\n\r\n/cc @jkotas @vitek-karas ","Url":"https://github.com/dotnet/corefx/pull/35082","RelatedDescription":"Open PR \"Add AssemblyLoadContext.GetLoadContext(SPC) test\" (#35082)"},{"Id":"406491572","IsPullRequest":true,"CreatedAt":"2019-02-04T19:52:15","Actor":"hughbe","Number":"35081","RawContent":null,"Title":"Fix typeconverter NullReferenceExceptions","State":"open","Body":"In some cases, added argument validation. In others, simply `nop` or set a default value","Url":"https://github.com/dotnet/corefx/pull/35081","RelatedDescription":"Open PR \"Fix typeconverter NullReferenceExceptions\" (#35081)"},{"Id":"406466112","IsPullRequest":true,"CreatedAt":"2019-02-04T18:45:48","Actor":"hughbe","Number":"35078","RawContent":null,"Title":"Fix NullReferenceException in AssociationAttribute","State":"open","Body":"Return empty","Url":"https://github.com/dotnet/corefx/pull/35078","RelatedDescription":"Open PR \"Fix NullReferenceException in AssociationAttribute\" (#35078)"},{"Id":"406464737","IsPullRequest":true,"CreatedAt":"2019-02-04T18:42:12","Actor":"hughbe","Number":"35077","RawContent":null,"Title":"Cleanup AssociatedMetadataTypeTypeDescriptor","State":"open","Body":"Move to using immutable `ValueTuple` and some naming fixes","Url":"https://github.com/dotnet/corefx/pull/35077","RelatedDescription":"Open PR \"Cleanup AssociatedMetadataTypeTypeDescriptor\" (#35077)"},{"Id":"406322929","IsPullRequest":true,"CreatedAt":"2019-02-04T16:28:41","Actor":"Dotnet-GitSync-Bot","Number":"35071","RawContent":null,"Title":"Mirror changes from dotnet/corert","State":"closed","Body":"This PR contains mirrored changes from dotnet/corert\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara","Url":"https://github.com/dotnet/corefx/pull/35071","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corert\" (#35071)"},{"Id":"406367254","IsPullRequest":true,"CreatedAt":"2019-02-04T14:57:15","Actor":"dotnet-maestro[bot]","Number":"35076","RawContent":null,"Title":"Update dependencies from dotnet/corefx","State":"open","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- Microsoft.NETCore.Platforms - 3.0.0-preview.19104.1\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- Microsoft.NETCore.Platforms - 3.0.0-preview.19104.2\r\n\r\nUpdates from https://github.com/dotnet/corefx\r\n\r\n- Microsoft.NETCore.Platforms - 3.0.0-preview.19104.3\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/35076","RelatedDescription":"Open PR \"Update dependencies from dotnet/corefx\" (#35076)"},{"Id":"406321746","IsPullRequest":true,"CreatedAt":"2019-02-04T14:48:29","Actor":"dotnet-maestro[bot]","Number":"35070","RawContent":null,"Title":"Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/coreclr\r\n\r\n- Microsoft.NET.Sdk.IL - 3.0.0-preview-27403-72\r\n- Microsoft.NETCore.ILAsm - 3.0.0-preview-27403-72\r\n- Microsoft.NETCore.Runtime.CoreCLR - 3.0.0-preview-27403-72\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/35070","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/coreclr\" (#35070)"},{"Id":"406359506","IsPullRequest":false,"CreatedAt":"2019-02-04T14:40:22","Actor":"stephentoub","Number":"35075","RawContent":null,"Title":"SslStream: Rewrite AuthenticateAs* handshake code to use async/await","State":"open","Body":"It's currently implemented with APM, with the Task-based APIs wrapping the legacy Begin/End APIs.  The internal implementation is a mess of callbacks that makes the logic difficult to follow, and incurs costs of transitioning between Tasks and APM at multiple stages.","Url":"https://github.com/dotnet/corefx/issues/35075","RelatedDescription":"Open issue \"SslStream: Rewrite AuthenticateAs* handshake code to use async/await\" (#35075)"},{"Id":"406358475","IsPullRequest":false,"CreatedAt":"2019-02-04T14:38:02","Actor":"stephentoub","Number":"35074","RawContent":null,"Title":"SslStream: Combine SslStream, SslState, and SslStreamInternal","State":"open","Body":"The layering here doesn't really add value and has been violated over time.  But worse, it adds not only complication but also cost.  Not only are these three objects allocated, but the separation requires additional allocations, e.g. delegates, in order to pass functionality from one layer to another, additional fields to store related state, etc.  Even if in the future we wanted static APIs for working with SSL, this isn't the shape we'd choose.","Url":"https://github.com/dotnet/corefx/issues/35074","RelatedDescription":"Open issue \"SslStream: Combine SslStream, SslState, and SslStreamInternal\" (#35074)"},{"Id":"406345480","IsPullRequest":false,"CreatedAt":"2019-02-04T14:07:54","Actor":"Metalnem","Number":"35073","RawContent":null,"Title":"XmlReader.Create throws IndexOutOfRangeException","State":"open","Body":"**XmlReader.Create(Stream)** method sometimes throws **IndexOutOfRangeException** (the documentation says that it can only throw **ArgumentNullException** and **SecurityException**). Here's the full program that reproduces this:\r\n\r\n```csharp\r\nusing System.IO;\r\nusing System.Xml;\r\n\r\nnamespace Test\r\n{\r\n  public class Program\r\n  {\r\n    public static void Main(string[] args)\r\n    {\r\n      var b = new byte[] { 60, 0, 0, 0, 0, 34, 1, 0, 62, 100, 60, 47, 97, 62, 10 };\r\n      XmlReader.Create(new MemoryStream(b));\r\n    }\r\n  }\r\n}\r\n\r\n```\r\n\r\nThe stack trace:\r\n\r\n```\r\nException has occurred: CLR/System.IndexOutOfRangeException\r\nAn unhandled exception of type 'System.IndexOutOfRangeException' occurred in System.Private.Xml.dll: 'Index was outside the bounds of the array.'\r\n   at System.Xml.Ucs4Decoder.Ucs4ToUTF16(UInt32 code, Char[] chars, Int32 charIndex)\r\n   at System.Xml.Ucs4Decoder4321.GetFullChars(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex)\r\n   at System.Xml.Ucs4Decoder.Convert(Byte[] bytes, Int32 byteIndex, Int32 byteCount, Char[] chars, Int32 charIndex, Int32 charCount, Boolean flush, Int32& bytesUsed, Int32& charsUsed, Boolean& completed)\r\n   at System.Xml.XmlTextReaderImpl.InvalidCharRecovery(Int32& bytesCount, Int32& charsCount)\r\n   at System.Xml.XmlTextReaderImpl.GetChars(Int32 maxCharsCount)\r\n   at System.Xml.XmlTextReaderImpl.ReadData()\r\n   at System.Xml.XmlTextReaderImpl.InitStreamInput(Uri baseUri, String baseUriStr, Stream stream, Byte[] bytes, Int32 byteCount, Encoding encoding)\r\n   at System.Xml.XmlTextReaderImpl.FinishInitStream()\r\n   at System.Xml.XmlTextReaderImpl..ctor(Stream stream, Byte[] bytes, Int32 byteCount, XmlReaderSettings settings, Uri baseUri, String baseUriStr, XmlParserContext context, Boolean closeInput)\r\n   at System.Xml.XmlReaderSettings.CreateReader(Stream input, Uri baseUri, String baseUriString, XmlParserContext inputContext)\r\n   at System.Xml.XmlReader.Create(Stream input)\r\n```\r\n\r\nThe environment:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.103\r\n Commit:    8edbc2570a\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.2.103/\r\n```\r\n\r\nFound via [SharpFuzz](https://github.com/Metalnem/sharpfuzz).","Url":"https://github.com/dotnet/corefx/issues/35073","RelatedDescription":"Open issue \"XmlReader.Create throws IndexOutOfRangeException\" (#35073)"},{"Id":"406338149","IsPullRequest":false,"CreatedAt":"2019-02-04T13:50:24","Actor":"Metalnem","Number":"35072","RawContent":null,"Title":"Uri.TryCreate throws IndexOutOfRangeException","State":"open","Body":"**Uri.TryCreate** is a non-throwing method, but for some inputs it can throw **IndexOutOfRangeException**. Here's the full program that reproduces this:\r\n\r\n```csharp\r\nusing System;\r\nusing System.Text;\r\n\r\nnamespace Test\r\n{\r\n  public class Program\r\n  {\r\n    public static void Main(string[] args)\r\n    {\r\n      var b = new byte[] {\r\n        92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92,\r\n        92, 226, 128, 174, 47, 255, 11, 117, 102, 112, 10\r\n      };\r\n\r\n      var s = Encoding.UTF8.GetString(b);\r\n      Uri.TryCreate(s, UriKind.RelativeOrAbsolute, out _);\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThe stack trace:\r\n\r\n```\r\nException has occurred: CLR/System.IndexOutOfRangeException\r\nAn unhandled exception of type 'System.IndexOutOfRangeException' occurred in System.Private.Uri.dll: 'Index was outside the bounds of the array.'\r\n   at System.Uri.CreateUriInfo(Flags cF)\r\n   at System.Uri.EnsureUriInfo()\r\n   at System.Uri.ParseRemaining()\r\n   at System.Uri.EnsureParseRemaining()\r\n   at System.Uri.InitializeUri(ParsingError err, UriKind uriKind, UriFormatException& e)\r\n   at System.Uri.CreateHelper(String uriString, Boolean dontEscape, UriKind uriKind, UriFormatException& e)\r\n   at System.Uri.TryCreate(String uriString, UriKind uriKind, Uri& result)\r\n```\r\n\r\nThe environment:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.103\r\n Commit:    8edbc2570a\r\n\r\nRuntime Environment:\r\n OS Name:     Mac OS X\r\n OS Version:  10.14\r\n OS Platform: Darwin\r\n RID:         osx.10.14-x64\r\n Base Path:   /usr/local/share/dotnet/sdk/2.2.103/\r\n```\r\n\r\nFound via [SharpFuzz](https://github.com/Metalnem/sharpfuzz).","Url":"https://github.com/dotnet/corefx/issues/35072","RelatedDescription":"Open issue \"Uri.TryCreate throws IndexOutOfRangeException\" (#35072)"},{"Id":"406303476","IsPullRequest":true,"CreatedAt":"2019-02-04T12:17:26","Actor":"dotnet-maestro-bot","Number":"35069","RawContent":null,"Title":"Update ProjectNTfs, ProjectNTfsTestILC to beta-27405-00, beta-27405-00, respectively (master)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/corefx/pull/35069","RelatedDescription":"Open PR \"Update ProjectNTfs, ProjectNTfsTestILC to beta-27405-00, beta-27405-00, respectively (master)\" (#35069)"},{"Id":"406226299","IsPullRequest":false,"CreatedAt":"2019-02-04T08:36:02","Actor":"jskeet","Number":"35068","RawContent":null,"Title":"Microsoft.Extensions.PlatformAbstractions broken on .NET Core 3.0 preview 2","State":"open","Body":"I understand that Microsoft.Extensions.PlatformAbstractions is \"somewhat deprecated\" but I suspect there are plenty of class libraries that still depend on it. (The one I'm interested in is Google.Api.Gax; we use it to report the framework version in HTTP headers.)\r\n\r\nThe expression in question is:\r\n\r\n```\r\nMicrosoft.Extensions.PlatformAbstractions.PlatformServices.Default?.Application?.RuntimeFramework?.Version\r\n```\r\n\r\nThis has worked fine with .NET Core until now, but under .NET Core 3.0 preview 2, we get an exception:\r\n\r\n```text\r\nUnhandled Exception: System.TypeInitializationException: The type initializer for 'Microsoft.Extensions.PlatformAbstractions.PlatformServices' threw an exception. ---> System.Reflection.TargetParameterCountException: Parameter count mismatch.\r\n   at System.Reflection.RuntimeMethodInfo.InvokeArgumentsCheck(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)\r\n   at Microsoft.Extensions.PlatformAbstractions.ApplicationEnvironment.GetEntryAssembly()\r\n   at Microsoft.Extensions.PlatformAbstractions.ApplicationEnvironment..ctor()\r\n   at Microsoft.Extensions.PlatformAbstractions.PlatformServices..ctor()\r\n   at Microsoft.Extensions.PlatformAbstractions.PlatformServices..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.Extensions.PlatformAbstractions.PlatformServices.get_Default()\r\n```\r\n\r\nI would expect .NET Core 3.0 to be compatible with older versions of .NET Core - if it's not, that's a pretty unfortunate story for class library developers.\r\n\r\nI've confirmed that I *can* use `System.Reflection.Assembly.GetEntryAssembly().GetCustomAttribute<TargetFrameworkAttribute>().FrameworkName` from netstandard1.3 (the .NET Standard version I'm targeting in the class library) - I'll need to do a bit of parsing, but it's all feasible. That only helps users who are able to update to a newer version of my library though - it feels to me like it shouldn't be necessary.\r\n\r\n[This](https://github.com/aspnet/PlatformAbstractions/blob/master/src/Microsoft.Extensions.PlatformAbstractions/ApplicationEnvironment.cs#L55) looks like the code that's throwing in `PlatformAbstractions`:\r\n\r\n```csharp\r\nvar getEntryAssemblyMethod =\r\n    typeof(Assembly).GetMethod(\"GetEntryAssembly\", BindingFlags.Static | BindingFlags.NonPublic) ??\r\n    typeof(Assembly).GetMethod(\"GetEntryAssembly\", BindingFlags.Static | BindingFlags.Public);\r\nreturn getEntryAssemblyMethod.Invoke(obj: null, parameters: Array.Empty<object>()) as Assembly;\r\n```\r\n\r\nObviously using reflection invites compatibility issues, but is there any reason we can't preserve a parameterless `GetEntryAssembly` method for compatibility?","Url":"https://github.com/dotnet/corefx/issues/35068","RelatedDescription":"Open issue \"Microsoft.Extensions.PlatformAbstractions broken on .NET Core 3.0 preview 2\" (#35068)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"406632034","IsPullRequest":true,"CreatedAt":"2019-02-05T05:07:05","Actor":"tmat","Number":"33133","RawContent":null,"Title":"WIP:  Use Arcade VS IBC training infrastructure","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/33133","RelatedDescription":"Open PR \"WIP:  Use Arcade VS IBC training infrastructure\" (#33133)"},{"Id":"406574001","IsPullRequest":true,"CreatedAt":"2019-02-05T04:30:06","Actor":"dotnet-bot","Number":"33122","RawContent":null,"Title":"Merge dev16.1-preview1 to dev16.1-preview1-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.1-preview1 into dev16.1-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.1-preview1-to-dev16.1-preview1-vs-deps\ngit reset --hard upstream/dev16.1-preview1-vs-deps\ngit merge upstream/dev16.1-preview1\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.1-preview1-to-dev16.1-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33122","RelatedDescription":"Closed or merged PR \"Merge dev16.1-preview1 to dev16.1-preview1-vs-deps\" (#33122)"},{"Id":"406622077","IsPullRequest":true,"CreatedAt":"2019-02-05T04:09:54","Actor":"CyrusNajmabadi","Number":"33132","RawContent":null,"Title":"Avoid a lambda allocation when accessing a cache in a hotpath.","State":"open","Body":"Mitigation for https://github.com/dotnet/roslyn/issues/33131","Url":"https://github.com/dotnet/roslyn/pull/33132","RelatedDescription":"Open PR \"Avoid a lambda allocation when accessing a cache in a hotpath.\" (#33132)"},{"Id":"406573823","IsPullRequest":true,"CreatedAt":"2019-02-05T03:30:10","Actor":"dotnet-bot","Number":"33115","RawContent":null,"Title":"Merge dev16.0-preview3 to master","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.0-preview3 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-preview3-to-master\ngit reset --hard upstream/master\ngit merge upstream/dev16.0-preview3\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-preview3-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33115","RelatedDescription":"Closed or merged PR \"Merge dev16.0-preview3 to master\" (#33115)"},{"Id":"406614995","IsPullRequest":false,"CreatedAt":"2019-02-05T03:24:29","Actor":"Therzok","Number":"33131","RawContent":null,"Title":"Delegate allocations coming in from ConditionalWeakTable value creators","State":"open","Body":"**Version Used**: \r\n2.10.0-beta2-63410-10 (but looks like it's the same in 3.0.0-beta2-19055-09)\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Run analyzers on a solution (in my case [this](https://github.com/mono/refactoringessentials/tree/monodevelop2) one)\r\n2. Observe a lot of allocations coming in from SymbolTreeInfo.GetMetadataChecksum\r\n\r\n\r\n**Expected Behavior**:\r\nThe lambdas should be static and use the key parameter being passed.\r\n\r\n**Actual Behavior**:\r\nA lot of allocations due to closures. They are coming in from [here](http://source.roslyn.io/#Microsoft.CodeAnalysis.Workspaces/FindSymbols/SymbolTree/SymbolTreeInfo_Metadata.cs,154)\r\n\r\n```\r\nStacktrace:\r\n\r\nMicrosoft.CodeAnalysis.FindSymbols.SymbolTreeInfo.GetMetadataChecksum(Solution solution, PortableExecutableReference reference, CancellationToken cancellationToken)\r\nMicrosoft.CodeAnalysis.IncrementalCaches.SymbolTreeInfoIncrementalAnalyzerProvider+IncrementalAnalyzer+<UpdateReferenceAsync>d__9.MoveNext()\r\nSystem.Runtime.CompilerServices.AsyncTaskMethodBuilder.Start<TStateMachine>(TStateMachine stateMachine)\r\n\r\n```\r\n\r\nThis is a heavy contender of allocations in VSMac while typing","Url":"https://github.com/dotnet/roslyn/issues/33131","RelatedDescription":"Open issue \"Delegate allocations coming in from ConditionalWeakTable value creators\" (#33131)"},{"Id":"406614340","IsPullRequest":false,"CreatedAt":"2019-02-05T03:20:24","Actor":"sharwell","Number":"33130","RawContent":null,"Title":"Immediate/watch window not formatting DateTimes inside loops","State":"open","Body":"**Version Used**: Visual Studio 2019 Preview 2\r\n\r\n🔗 Originally filed as https://devdiv.visualstudio.com/DevDiv/_workitems/edit/215428\r\n\r\n**Steps to Reproduce**:\r\n\r\n```csharp\r\nusing System;\r\nusing System.Linq;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    public class Program\r\n    {\r\n        public static void Main(string[] args)\r\n        {\r\n            var dt = new DateTime(2016, 3, 2);\r\n            var result = Enumerable.Range(1, 1).Select(x => dt.ToString(\"yyyy\")).First();\r\n            Console.WriteLine(result);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n1. Set a breakpoint on the line with `Console.WriteLine`\r\n2. When the breakpoint is hit, observe the value of `result`\r\n3. In the Immediate window, run the following:\r\n\r\n    ```csharp\r\n    Enumerable.Range(1, 1).Select(x => dt.ToString(\"yyyy\")).First()\r\n    ```\r\n\r\n**Expected Behavior**:\r\n\r\nStep (2) and (3) produce `\"2016\"`.\r\n\r\n**Actual Behavior**:\r\n\r\nStep (2) produces `\"2016\"`.\r\n\r\nStep (3) produces `\"3/2/2016 12:00:00 AM\"`.","Url":"https://github.com/dotnet/roslyn/issues/33130","RelatedDescription":"Open issue \"Immediate/watch window not formatting DateTimes inside loops\" (#33130)"},{"Id":"406611719","IsPullRequest":false,"CreatedAt":"2019-02-05T03:03:58","Actor":"Therzok","Number":"33129","RawContent":null,"Title":"A lot of allocations coming in from SourceNamespaceSymbol.DeclaringSyntaxReferences","State":"open","Body":"**Version Used**: \r\n2.10.0-beta2-63410-10 (but looks like it's the same in 3.0.0-beta2-19055-09)\r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Run analyzers on a solution (in my case [this](https://github.com/mono/refactoringessentials/tree/monodevelop2) one)\r\n2. Observe a lot of allocations coming in from SourceNamespaceSymbol.DeclaringSyntaxReferences\r\n\r\n**Expected Behavior**:\r\nThese allocations should avoided if possible for namespaces? There is a comment in [GeneratedCodeUtilities](https://github.com/dotnet/roslyn/blob/a1805016f9a2fae804d69220a9179fba086ba98f/src/Compilers/Core/Portable/InternalUtilities/GeneratedCodeUtilities.cs#L24) which mentions this perf hit.\r\n\r\n**Actual Behavior**:\r\nA lot of allocations. They are coming in from [here](https://github.com/dotnet/roslyn/blob/master/src/Compilers/Core/Portable/DiagnosticAnalyzer/AnalyzerDriver.cs#L1537)\r\n\r\n```\r\nStacktrace:\r\n\r\nMicrosoft.CodeAnalysis.CSharp.Symbols.SourceNamespaceSymbol+<>c.<.cctor>b__49_0(SingleNamespaceDeclaration d)\r\nSystem.Collections.Immutable.ImmutableArray.CreateRange<TSource, TResult>(ImmutableArray<T> items, Func<T, TResult> selector)\r\nMicrosoft.CodeAnalysis.CSharp.Symbols.SourceNamespaceSymbol.get_DeclaringSyntaxReferences()\r\nMicrosoft.CodeAnalysis.CSharp.Symbol.get_DeclaringSyntaxReferences()\r\nMicrosoft.CodeAnalysis.Diagnostics.AnalyzerDriver.IsGeneratedCodeSymbol(ISymbol symbol)\r\nMicrosoft.CodeAnalysis.Diagnostics.AnalyzerDriver.TryProcessSymbolDeclared(SymbolDeclaredCompilationEvent symbolEvent, AnalysisScope analysisScope, AnalysisState analysisStateOpt, CancellationToken cancellationToken)\r\nMicrosoft.CodeAnalysis.Diagnostics.AnalyzerDriver.TryProcessEventCore(CompilationEvent e, AnalysisScope analysisScope, AnalysisState analysisStateOpt, CancellationToken cancellationToken)\r\nMicrosoft.CodeAnalysis.Diagnostics.AnalyzerDriver+<ProcessCompilationEventsCoreAsync>d__70.MoveNext()\r\n```\r\n\r\nThis is one of the heaviest contenders while typing in VSMac.","Url":"https://github.com/dotnet/roslyn/issues/33129","RelatedDescription":"Open issue \"A lot of allocations coming in from SourceNamespaceSymbol.DeclaringSyntaxReferences\" (#33129)"},{"Id":"406609896","IsPullRequest":false,"CreatedAt":"2019-02-05T02:53:01","Actor":"sharwell","Number":"33128","RawContent":null,"Title":"Cannot see all parameters in intellisense","State":"open","Body":"**Version Used**: Filed against Visual Studio 2013 Update 5\r\n\r\n🔗 Originally filed as https://devdiv.visualstudio.com/DevDiv/_workitems/edit/202782\r\n\r\n## Description\r\n\r\nIf you have a method with a large number of parameters, when calling the method the intellisense parameter prompt box is fixed and cannot display all required parameters. \r\n\r\n## Repro Steps\r\n\r\ncreate a method with so many parameters, that when called from anther piece of code, the list extends beyond the popup window. \r\n\r\n## Impact\r\n\r\nYou have no way of knowing what parameters to supply, when method is inside an external lib.","Url":"https://github.com/dotnet/roslyn/issues/33128","RelatedDescription":"Open issue \"Cannot see all parameters in intellisense\" (#33128)"},{"Id":"406608884","IsPullRequest":false,"CreatedAt":"2019-02-05T02:46:53","Actor":"sharwell","Number":"33127","RawContent":null,"Title":"Visual Studio 2015 moves members to new line","State":"open","Body":"**Version Used**: Originally filed against Visual Studio 2015\r\n\r\n:link: Originally filed as https://devdiv.visualstudio.com/DevDiv/_workitems/edit/200576\r\n\r\n## Problem Description \r\n\r\nDescription: When we need to use a backing field for a property, we have a practice of combining the backing field with the property it goes to: \r\n\r\n```csharp\r\npublic int MyProperty \r\n{ \r\nget { return _MyProperty; } \r\nset { _MyProperty = value; } \r\n} private int _MyProperty; \r\n```\r\n\r\nWe prefer this greatly to a long list of member variables at the top for many reasons. \r\n\r\n1. You don't have to scroll up and down, you see it all right there. \r\n2. Variable doesn't get left on refactor when property is removed. \r\n3. When copy and pasting things around, you never forget to bring the member variable along. \r\nThe problem: \r\n\r\nIn Visual Studio 2013, there was no problem. \r\n\r\nVisual Studio 2015 is now moving the member variable to the next line when we Press <kbd>Ctrl</kbd>+<kbd>E</kbd>, <kbd>D</kbd> or choose Edit &rarr; Advanced &rarr; Format Document. \r\n\r\n```csharp\r\npublic int MyProperty \r\n{ \r\nget { return _MyProperty; } \r\nset { _MyProperty = value; } \r\n} \r\nprivate int _MyProperty; \r\n```\r\n\r\nI have played with the Tools &rarr; Options &rarr; Text Editor &rarr; C# &rarr; Formatting &rarr; New Lines section. \r\n\r\nAnyone have any idea how to make visual studio stop moving the member variable to a new line? \r\n\r\n## Repro Steps\r\n\r\nCreate a property with a backing field on the last line, same as the last squirly brace: \r\n\r\n```csharp\r\npublic int MyProperty \r\n{ \r\nget { return _MyProperty; } \r\nset { _MyProperty = value; } \r\n} private int _MyProperty; \r\n```\r\n\r\nPress <kbd>Ctrl</kbd>+<kbd>E</kbd>, <kbd>D</kbd> or choose Edit &rarr; Advanced &rarr; Format Document \r\n\r\n\r\n\r\n## Impact\r\n\r\nWe have large files, especially many with INotifyPropertyChanged implement or a lazy implementation where the object is instantiated on first get:. \r\n\r\nOur entire document is changing because so many properties are done this way. \r\n\r\nIt causes significant issues with whitespace checkins. It is blocking us from using our required style. Engineers have to go back and fix the document.","Url":"https://github.com/dotnet/roslyn/issues/33127","RelatedDescription":"Open issue \"Visual Studio 2015 moves members to new line\" (#33127)"},{"Id":"406573962","IsPullRequest":true,"CreatedAt":"2019-02-05T02:30:12","Actor":"dotnet-bot","Number":"33119","RawContent":null,"Title":"Merge dev16.0-preview3 to dev16.0-preview3-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from dev16.0-preview3 into dev16.0-preview3-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-preview3-to-dev16.0-preview3-vs-deps\ngit reset --hard upstream/dev16.0-preview3-vs-deps\ngit merge upstream/dev16.0-preview3\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-preview3-to-dev16.0-preview3-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33119","RelatedDescription":"Closed or merged PR \"Merge dev16.0-preview3 to dev16.0-preview3-vs-deps\" (#33119)"},{"Id":"406573983","IsPullRequest":true,"CreatedAt":"2019-02-05T02:30:08","Actor":"dotnet-bot","Number":"33120","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33120","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#33120)"},{"Id":"406597115","IsPullRequest":true,"CreatedAt":"2019-02-05T01:44:11","Actor":"JoeRobich","Number":"33125","RawContent":null,"Title":"Treat normal using and static usings separately when adding imports.","State":"open","Body":"\r\nFixes https://github.com/dotnet/roslyn/issues/30811 and https://github.com/dotnet/roslyn/issues/30734","Url":"https://github.com/dotnet/roslyn/pull/33125","RelatedDescription":"Open PR \"Treat normal using and static usings separately when adding imports.\" (#33125)"},{"Id":"406601269","IsPullRequest":false,"CreatedAt":"2019-02-05T01:34:11","Actor":"vsfeedback","Number":"33126","RawContent":null,"Title":"Warning 4014 (not awaited task) doesn't work properly when a method returns Task<Task>","State":"open","Body":"```csharp\r\npublic static Task ReturnTask() => Task.CompletedTask;\r\npublic static Task<Task> ReturnTaskOfTask() => Task.FromResult(Task.CompletedTask);\r\n\r\n\r\npublic async Task Main()\r\n{\r\n  ReturnTask(); // Gives warning - as expected\r\n  ReturnTaskOfTask(); // Gives warning - as expected\r\n  await ReturnTask(); // No warning - as expected\r\n  await ReturnTaskOfTask(); // No warning - probably a bug\r\n  await await ReturnTaskOfTask(); // No warning - as expected\r\n}\r\n```\r\n\r\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/405018/warning-4014-not-awaited-task-doesnt-work-properly.html\r\nVSTS ticketId: 748615_\r\n_These are the original issue comments:_\r\n(no comments)\r\n_These are the original issue solutions:_\r\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/33126","RelatedDescription":"Open issue \"Warning 4014 (not awaited task) doesn't work properly when a method returns Task<Task>\" (#33126)"},{"Id":"406589849","IsPullRequest":false,"CreatedAt":"2019-02-05T01:12:02","Actor":"JoeRobich","Number":"33124","RawContent":null,"Title":"Linux_Test CoreCLR Segmentation Fault during Microsoft.CodeAnalysis.CSharp.WinRT.UnitTests","State":"open","Body":"Saw in #33070 - [Build Logs](https://dev.azure.com/dnceng/public/_build/results?buildId=85855&view=logs) Linux_Test CoreCLR Attempt 1\r\n\r\n```\r\nxUnit.net Console Runner v2.4.1-pre.build.4059 (64-bit .NET Core 4.6.26725.06)\r\n[37m  Discovering: Microsoft.CodeAnalysis.CSharp.WinRT.UnitTests\r\n[m[37m  Discovered:  Microsoft.CodeAnalysis.CSharp.WinRT.UnitTests\r\n[m[37m  Starting:    Microsoft.CodeAnalysis.CSharp.WinRT.UnitTests\r\n[m[33;1m    Microsoft.CodeAnalysis.CSharp.UnitTests.PdbTests.EmitToStreamWithNonZeroPosition [SKIP]\r\n[m[37m      Test not supported on Mac and Linux\r\n[m[33;1m    Microsoft.CodeAnalysis.CSharp.UnitTests.WinMdEventTests.ERR_MixingWinRTEventWithRegular_BaseTypeImplementsInterface [SKIP]\r\n[m[37m      547321\r\n[mSegmentation fault (core dumped)\r\n=== COMMAND LINE ===\r\n\"/data/agent/_work/7/s/.dotnet/dotnet\" exec --depsfile \"/data/agent/_work/7/s/artifacts/bin/Microsoft.CodeAnalysis.CSharp.WinRT.UnitTests/Debug/netcoreapp2.1/Microsoft.CodeAnalysis.CSharp.WinRT.UnitTests.deps.json\" --runtimeconfig \"/data/agent/_work/7/s/artifacts/bin/Microsoft.CodeAnalysis.CSharp.WinRT.UnitTests/Debug/netcoreapp2.1/Microsoft.CodeAnalysis.CSharp.WinRT.UnitTests.runtimeconfig.json\" \"/data/agent/_work/7/s/.packages/xunit.runner.console/2.4.1-pre.build.4059/tools/netcoreapp2.0/xunit.console.dll\" \"/data/agent/_work/7/s/artifacts/bin/Microsoft.CodeAnalysis.CSharp.WinRT.UnitTests/Debug/netcoreapp2.1/Microsoft.CodeAnalysis.CSharp.WinRT.UnitTests.dll\" -noautoreporters -xml \"/data/agent/_work/7/s/artifacts/TestResults/Debug/Microsoft.CodeAnalysis.CSharp.WinRT.UnitTests_netcoreapp2.1_x64.xml\" -html \"/data/agent/_work/7/s/artifacts/TestResults/Debug/Microsoft.CodeAnalysis.CSharp.WinRT.UnitTests_netcoreapp2.1_x64.html\"  > \"/data/agent/_work/7/s/artifacts/log/Debug/Microsoft.CodeAnalysis.CSharp.WinRT.UnitTests_netcoreapp2.1_x64.log\" 2>&1\r\n```","Url":"https://github.com/dotnet/roslyn/issues/33124","RelatedDescription":"Open issue \"Linux_Test CoreCLR Segmentation Fault during Microsoft.CodeAnalysis.CSharp.WinRT.UnitTests\" (#33124)"},{"Id":"406588528","IsPullRequest":false,"CreatedAt":"2019-02-05T01:06:38","Actor":"KirillOsenkov","Number":"33123","RawContent":null,"Title":"Hang/deadlock in SmartIndent","State":"open","Body":"**Version Used**: \r\n3.0.0-beta2-19055-09\r\n\r\n**Steps to Reproduce**:\r\n\r\nClicking with the mouse on an empty line hangs the UI thread\r\n\r\n```\r\nSystem.Threading.Tasks.Task.Wait(System.Threading.CancellationToken cancellationToken)\r\n\r\nRoslyn.Utilities.TaskExtensions.WaitAndGetResult_CanCallOnBackground<Microsoft.CodeAnalysis.Options.DocumentOptionSet>(System.Threading.Tasks.Task<Microsoft.CodeAnalysis.Options.DocumentOptionSet> task, System.Threading.CancellationToken cancellationToken) in /_/src/Workspaces/Core/Portable/Utilities/TaskExtensions.cs:83\r\n\r\nMicrosoft.CodeAnalysis.Editor.Implementation.SmartIndent.AbstractIndentationService<Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax>.GetIndenter(Microsoft.CodeAnalysis.Document document, int lineNumber, System.Threading.CancellationToken cancellationToken) in /_/src/EditorFeatures/Core/Implementation/SmartIndent/AbstractIndentationService.cs:69\r\n\r\nMicrosoft.CodeAnalysis.Editor.Implementation.SmartIndent.AbstractIndentationService<Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax>.GetDesiredIndentation(Microsoft.CodeAnalysis.Document document, int lineNumber, System.Threading.CancellationToken cancellationToken) in /_/src/EditorFeatures/Core/Implementation/SmartIndent/AbstractIndentationService.cs:35\r\n\r\nMicrosoft.CodeAnalysis.Editor.Implementation.SmartIndent.SmartIndent.GetDesiredIndentation(Microsoft.VisualStudio.Text.Implementation.TextSnapshotLine lineToBeIndented, System.Threading.CancellationToken cancellationToken) in /_/src/EditorFeatures/Core/Implementation/SmartIndent/SmartIndent.cs:47\r\n\r\nMicrosoft.CodeAnalysis.Editor.Implementation.SmartIndent.SmartIndent.GetDesiredIndentation(Microsoft.VisualStudio.Text.Implementation.TextSnapshotLine line) in /_/src/EditorFeatures/Core/Implementation/SmartIndent/SmartIndent.cs:26\r\n\r\nMicrosoft.VisualStudio.Text.Editor.Implementation.SmartIndentationService.GetDesiredIndentation(Microsoft.VisualStudio.Text.Editor.Implementation....TextView textView, Microsoft.VisualStudio.Text.Implementation.TextSnapshotLine line) in src/Editor/Text/Impl/BaseViewImpl/SmartIndentationService.cs:30\r\n\r\nMicrosoft.VisualStudio.Text.MultiSelection.ExtensionMethods.MapXCoordinate(Microsoft.VisualStudio.Text.Formatting.Implementation....FormattedLine textLine, Microsoft.VisualStudio.Text.Editor.Implementation....TextView textView, double xCoordinate, Microsoft.VisualStudio.Text.Editor.Implementation.SmartIndentationService smartIndentationService, bool userSpecifiedXCoordinate) /src/Editor/Text/Util/TextUIUtil/ExtensionMethods.cs:78\r\n```\r\n\r\nIt appears that the MultiSelectionBroker is calling into smart indentation service on the UI thread, and Roslyn's SmartIndent is then blocking the UI thread waiting on a task:\r\nhttp://source.roslyn.io/#Microsoft.CodeAnalysis.EditorFeatures/Implementation/SmartIndent/AbstractIndentationService.cs,69\r\n\r\nHave we seen this before? It appears that the synchronous version of the service is chosen. Any idea on how it's supposed to work?","Url":"https://github.com/dotnet/roslyn/issues/33123","RelatedDescription":"Open issue \"Hang/deadlock in SmartIndent\" (#33123)"},{"Id":"406574000","IsPullRequest":true,"CreatedAt":"2019-02-05T00:00:54","Actor":"cston","Number":"33121","RawContent":null,"Title":"Track nullability of static fields","State":"open","Body":"Fixes #26651.","Url":"https://github.com/dotnet/roslyn/pull/33121","RelatedDescription":"Open PR \"Track nullability of static fields\" (#33121)"},{"Id":"406573909","IsPullRequest":true,"CreatedAt":"2019-02-05T00:00:35","Actor":"dotnet-bot","Number":"33118","RawContent":null,"Title":"Merge master-vs-deps to dev16.1-preview1-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from master-vs-deps into dev16.1-preview1-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-vs-deps-to-dev16.1-preview1-vs-deps\ngit reset --hard upstream/dev16.1-preview1-vs-deps\ngit merge upstream/master-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-vs-deps-to-dev16.1-preview1-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33118","RelatedDescription":"Open PR \"Merge master-vs-deps to dev16.1-preview1-vs-deps\" (#33118)"},{"Id":"406573882","IsPullRequest":true,"CreatedAt":"2019-02-05T00:00:30","Actor":"dotnet-bot","Number":"33117","RawContent":null,"Title":"Merge dev16.0-preview3-vs-deps to master-vs-deps","State":"open","Body":"\nThis is an automatically generated pull request from dev16.0-preview3-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/dev16.0-preview3-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/dev16.0-preview3-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/dev16.0-preview3-vs-deps-to-master-vs-deps --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33117","RelatedDescription":"Open PR \"Merge dev16.0-preview3-vs-deps to master-vs-deps\" (#33117)"},{"Id":"406573837","IsPullRequest":true,"CreatedAt":"2019-02-05T00:00:20","Actor":"dotnet-bot","Number":"33116","RawContent":null,"Title":"Merge master to dev16.1-preview1","State":"open","Body":"\nThis is an automatically generated pull request from master into dev16.1-preview1.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-dev16.1-preview1\ngit reset --hard upstream/dev16.1-preview1\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-dev16.1-preview1 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/33116","RelatedDescription":"Open PR \"Merge master to dev16.1-preview1\" (#33116)"},{"Id":"406508890","IsPullRequest":true,"CreatedAt":"2019-02-04T23:47:52","Actor":"sharwell","Number":"33104","RawContent":null,"Title":"Disable integration tests with <95% reliability","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/33104","RelatedDescription":"Closed or merged PR \"Disable integration tests with <95% reliability\" (#33104)"},{"Id":"406548710","IsPullRequest":true,"CreatedAt":"2019-02-04T23:46:59","Actor":"JoeRobich","Number":"33109","RawContent":null,"Title":"Disable parallel nuget restore on linux and mac","State":"closed","Body":"","Url":"https://github.com/dotnet/roslyn/pull/33109","RelatedDescription":"Closed or merged PR \"Disable parallel nuget restore on linux and mac\" (#33109)"},{"Id":"406567435","IsPullRequest":true,"CreatedAt":"2019-02-04T23:33:11","Actor":"jaredpar","Number":"33114","RawContent":null,"Title":"Move MSBuild installation directory to Current","State":"open","Body":"MSBuild has changed their installation versioning story. Components now\r\ninsert into a directory named Current instead of a directory name\r\nmatching the Visual Studio major version (i.e. 15.0). This changes\r\nRoslyn to match the new design.\r\n\r\nNote: this change must be inserted into VS in coordination with MSBuild.\r\nOtherwise the insertion will fail.\r\n\r\nhttps://github.com/Microsoft/msbuild/issues/4069\r\nhttps://github.com/Microsoft/msbuild/issues/3778","Url":"https://github.com/dotnet/roslyn/pull/33114","RelatedDescription":"Open PR \"Move MSBuild installation directory to Current\" (#33114)"},{"Id":"406564338","IsPullRequest":true,"CreatedAt":"2019-02-04T23:21:05","Actor":"sharwell","Number":"33113","RawContent":null,"Title":"Terminate Explorer to avoid interference with integration tests","State":"open","Body":"Attempting to work around #33111 and #33112.","Url":"https://github.com/dotnet/roslyn/pull/33113","RelatedDescription":"Open PR \"Terminate Explorer to avoid interference with integration tests\" (#33113)"},{"Id":"406555377","IsPullRequest":false,"CreatedAt":"2019-02-04T22:50:36","Actor":"sharwell","Number":"33112","RawContent":null,"Title":"Integration test causes Recycle bin to launch","State":"open","Body":"Observed in https://dev.azure.com/dnceng/public/_build/results?buildId=86911\r\n\r\nThis should not be happening.\r\n\r\n![image](https://user-images.githubusercontent.com/1408396/52242688-f744c800-289c-11e9-905c-cca97e370969.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/33112","RelatedDescription":"Open issue \"Integration test causes Recycle bin to launch\" (#33112)"},{"Id":"406555068","IsPullRequest":false,"CreatedAt":"2019-02-04T22:49:37","Actor":"sharwell","Number":"33111","RawContent":null,"Title":"Integration test causes Edge to launch","State":"open","Body":"Observed in https://dev.azure.com/dnceng/public/_build/results?buildId=86911\r\n\r\nThis should not be happening.\r\n\r\n![image](https://user-images.githubusercontent.com/1408396/52242626-cc5a7400-289c-11e9-85fd-4b8181d59606.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/33111","RelatedDescription":"Open issue \"Integration test causes Edge to launch\" (#33111)"},{"Id":"406554528","IsPullRequest":false,"CreatedAt":"2019-02-04T22:48:01","Actor":"sharwell","Number":"33110","RawContent":null,"Title":"Capture a screenshot when the active window changes","State":"open","Body":"Currently we capture a screenshot on certain exceptions in the integration test process. It could help diagnose failures if we capture a screenshot when the active/focused window changes (though we'd also need a stack trace at the time which could be difficult).","Url":"https://github.com/dotnet/roslyn/issues/33110","RelatedDescription":"Open issue \"Capture a screenshot when the active window changes\" (#33110)"},{"Id":"406535916","IsPullRequest":false,"CreatedAt":"2019-02-04T21:52:28","Actor":"agocke","Number":"33108","RawContent":null,"Title":"Inline temp for interpolated string introduces an extra cast in > C# 7.3","State":"open","Body":"This test fails on > C# 7.\r\n\r\n```C#\r\n        [WorkItem(4583, \"https://github.com/dotnet/roslyn/issues/4583\")]\r\n        [Fact, Trait(Traits.Feature, Traits.Features.CodeActionsInlineTemporary)]\r\n        public async Task DontParenthesizeInterpolatedStringWithNoInterpolation()\r\n        {\r\n            await TestInRegularAndScriptAsync(\r\n@\"class C\r\n{\r\n    public void M()\r\n    {\r\n        var [|s1|] = $\"\"hello\"\";\r\n        var s2 = string.Replace(s1, \"\"world\"\");\r\n    }\r\n}\",\r\n@\"class C\r\n{\r\n    public void M()\r\n    {\r\n        var s2 = string.Replace($\"\"hello\"\", \"\"world\"\");\r\n    }\r\n}\");\r\n        }\r\n```","Url":"https://github.com/dotnet/roslyn/issues/33108","RelatedDescription":"Open issue \"Inline temp for interpolated string introduces an extra cast in > C# 7.3\" (#33108)"},{"Id":"406521836","IsPullRequest":false,"CreatedAt":"2019-02-04T21:21:53","Actor":"vsfeedback","Number":"33107","RawContent":null,"Title":"Code analysis is way slower than on VS2017","State":"closed","Body":"The first thing that I noticed after a few minutes of using VS2019 (in compare to 2017)\r\nis that code analysis - showing errors on error list is a way slower than on prev. version\r\n\r\ne.g we have code like this:\r\n\r\n```csharp\r\nint test = 5;\r\ntest = 5;\r\n```\r\n\r\nthen we change  &quot;test = 5;&quot; to\r\n\r\ntest = &quot;&quot;;\r\n\r\nand it's being shown as an error on error list after around 2-3sec\r\n\r\nmeanwhile on VS2017 it's like 0.5-1sec\r\n\r\nAny ideas how to speed it up?\r\n\r\n_This issue has been moved from https://developercommunity.visualstudio.com/content/problem/400631/code-analysis-is-way-slower-than-on-vs2017-3.html\r\nVSTS ticketId: 740818_\r\n_These are the original issue comments:_\r\n\r\nJinu Joseph [MSFT] on 12/10/2018, 11:47 AM (56 days ago): <p>Thank you for your feedback! Just tried this in latest 16.0.PReview1 and seeing  the results almost immediately. </p><p>We created a set of instructions for providing additional information which will help us track down the true source of the problems. (<a target=\"_blank\"> https://github.com/dotnet/roslyn/wiki/Reporting-Visual-Studio-crashes-and-performance-issues#performance-issues </a>)</p><p>We look forward to hearing from you!</p>\r\n\r\nBart on 12/12/2018, 01:29 AM (54 days ago): Here's version with Visual Studio 2017\r\nBart on 12/12/2018, 01:29 AM (54 days ago): Here's version with VS 2019\r\n_These are the original issue solutions:_\r\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/33107","RelatedDescription":"Closed issue \"Code analysis is way slower than on VS2017\" (#33107)"},{"Id":"406514284","IsPullRequest":true,"CreatedAt":"2019-02-04T20:52:29","Actor":"sharwell","Number":"33106","RawContent":null,"Title":"Require dev16 for integration testing","State":"open","Body":"The vs-deps branches have dependencies on Visual Studio 2019 that cannot be fulfilled on Visual Studio 2017. This change updates these branches to require Visual Studio 2019 for integration testing.","Url":"https://github.com/dotnet/roslyn/pull/33106","RelatedDescription":"Open PR \"Require dev16 for integration testing\" (#33106)"},{"Id":"406513174","IsPullRequest":false,"CreatedAt":"2019-02-04T20:49:20","Actor":"TessenR","Number":"33105","RawContent":null,"Title":"Nullable flow annotations do not affect type arguments' inference in the annotated call","State":"open","Body":"**Version Used**: \r\n\r\nMicrosoft Visual Studio Enterprise 2019 Preview\r\nVersion 16.0.0 Preview 2.1\r\nVisualStudio.16.Preview/16.0.0-pre.2.1+28529.54\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\n**Steps to Reproduce**:\r\n\r\nCompile the following code:\r\n```cs\r\n#nullable enable\r\nusing System.Runtime.CompilerServices;\r\nclass C\r\n{\r\n  void M1(string? s1)\r\n  {\r\n    s1.NotNull();\r\n    Generic(s1).ToString(); // ok, .NotNull() ensures s1 is not null, Generic.T is inferred to be a non-nullable string\r\n  }\r\n\r\n  void M2(string? s1)\r\n  {\r\n    s1.NotNull().ToString(); // false warning - s1.NotNull() should be inspected after applying EnsuresNotNull annotation knowledge\r\n                             // inferring NotNull.T to be not nullable\r\n  }\r\n\r\n  void M3(string? s1)\r\n  {\r\n    Ext.NotNull(s1).ToString(); // false warning - NotNull(s1) should be inspected after applying EnsuresNotNull annotation knowledge\r\n                                // inferring NotNull.T to be not nullable\r\n  }\r\n\r\n  extern T Generic<T>(T t);\r\n}\r\n\r\nstatic class Ext\r\n{\r\n  public static extern T NotNull<T>([EnsuresNotNull] this T t);\r\n}\r\n\r\nnamespace System.Runtime.CompilerServices\r\n{\r\n  public class EnsuresNotNullAttribute : System.Attribute { }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nNo warnings.\r\nRoslyn should infer generic parameters to be a non-nullable T for all the examples above. Since the `NotNull` methods ensures that `s1` is not null the invocation should be reinterpreted with the knowledge that `s1` is a non-nullable string and infer its type argument to be non-nullable string thus allowing derferencing its result.\r\n\r\n**Actual Behavior**:\r\n`M2` and `M3` both have the following warning: `CS8602 Possible dereference of a null reference.`.\r\n","Url":"https://github.com/dotnet/roslyn/issues/33105","RelatedDescription":"Open issue \"Nullable flow annotations do not affect type arguments' inference in the annotated call\" (#33105)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"406617961","IsPullRequest":true,"CreatedAt":"2019-02-05T03:43:58","Actor":"Dotnet-GitSync-Bot","Number":"6952","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"open","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/6952","RelatedDescription":"Open PR \"Mirror changes from dotnet/coreclr\" (#6952)"},{"Id":"406527943","IsPullRequest":false,"CreatedAt":"2019-02-04T21:30:21","Actor":"letmaik","Number":"6951","RawContent":null,"Title":"Support for anonymous types","State":"open","Body":"I'm trying to serialize JSON using `Newtonsoft.JSON` by making use of anonymous types and even though CoreRT doesn't raise an error I have tried to play around with `rd.xml` to fix this issue, without success:\r\n\r\n```cs\r\nvar a = JObject.FromObject(new { // anonymous type here\r\n  foo = \"bar\"\r\n});\r\nConsole.WriteLine(a.ToString()); // prints {}\r\n\r\n// not relying on reflection works:\r\nvar b = new JObject();\r\nb.Add(\"foo\", \"bar\");\r\nConsole.WriteLine(b.ToString()); // prints { \"foo\": \"bar\" }\r\n```\r\n\r\nIn short, does CoreRT fully support reflection on anonymous types? It's worrying that no error is thrown here if this is an unsupported feature. Or maybe just a bug?","Url":"https://github.com/dotnet/corert/issues/6951","RelatedDescription":"Open issue \"Support for anonymous types\" (#6951)"},{"Id":"406486287","IsPullRequest":true,"CreatedAt":"2019-02-04T20:46:25","Actor":"Dotnet-GitSync-Bot","Number":"6950","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/6950","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6950)"},{"Id":"406434183","IsPullRequest":false,"CreatedAt":"2019-02-04T17:21:10","Actor":"alpencolt","Number":"6949","RawContent":null,"Title":"[Question] Assembly loading","State":"open","Body":"I'm interesting in assembly loading functional `Assembly.LoadFile()`. How it can implemented and will it be implemented? I see two ways how to do it:\r\n- First option is using interpreter #5011 (as I see @tonerdo has huge progress)\r\n- Second is using Native Library mode (https://github.com/dotnet/corert/tree/master/samples/NativeLibrary). Libraries can be precopiled an loaded (like `dlopen`). Can it work?\r\n\r\ncc @jkotas @kvochko @iarischenko @kbaladurin ","Url":"https://github.com/dotnet/corert/issues/6949","RelatedDescription":"Open issue \"[Question] Assembly loading\" (#6949)"},{"Id":"406183059","IsPullRequest":false,"CreatedAt":"2019-02-04T17:12:37","Actor":"davidknise","Number":"6947","RawContent":null,"Title":"Assembly.GetEntryAssembly().Location could be the single Exe","State":"closed","Body":"First, is there a way to get the full path to the executing ***.exe** file?\r\n\r\nI see the reasoning that `Assembly.GetEntryAssembly()` value is an empty string because the assembly which it was built in no longer exists. I actually expected this to be the single executable, no matter where I was, because I wasn't thinking about the code from a pre-compiled/symbols perspective, I was thinking of it from a post-compile. **Should it be the compiled ***.exe**?\r\n\r\n**Scenario:**\r\nI'm building our single-file installer as a small CoreRT CLI. Users can double click it or call it from the command line. The installer sets up a folder structure and drops our latest bits in the right spots. Because of this, I expect the installation directory to be empty, *but it would make sense to allow for the installer to be in the directory*. In addition, I ask them if they would like to clear the directory. I'd like to skip deleting this file or allow it to be the only file in the directory, but I don't know it's name and can't get a file handle to identify it either.\r\n\r\nRelated issues:\r\n[#1773](https://github.com/dotnet/corert/issues/1773) [#5467](https://github.com/dotnet/corert/issues/5467)","Url":"https://github.com/dotnet/corert/issues/6947","RelatedDescription":"Closed issue \"Assembly.GetEntryAssembly().Location could be the single Exe\" (#6947)"},{"Id":"406409857","IsPullRequest":false,"CreatedAt":"2019-02-04T16:26:45","Actor":"Sergio0694","Number":"6948","RawContent":null,"Title":"[.NET Native] Errors ILT0005 and NUTC3033 when building a UWP app with ImageSharp (.NET Standard)","State":"open","Body":"Hello,\r\nI'm working on a UWP project (currently targeting SDK 17134), and since I referenced the [ImageSharp library](https://github.com/SixLabors/ImageSharp) (which targets .NET Standard) I can no longer build my UWP app in Release mode.\r\n\r\n[This is the issue](https://github.com/SixLabors/ImageSharp/issues/828) on the ImageSharp repo, but I thought I'd post it here as well, since it's probably caused by the .NET Native compiler more than the library itself.\r\n\r\nHere are the errors I'm getting:\r\n\r\n> ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\runtime.win10-x64.microsoft.net.native.compiler\\2.2.1\\tools\\x64\\ilc\\Tools\\nutc_driver.exe @\"C:\\Users\\Sergi\\source\\repos\\ImageSharpRepro\\ImageSharpRepro\\obj\\x64\\Release\\ilc\\intermediate\\MDIL\\ImageSharpRepro.rsp\"' returned exit code 1\r\n\r\n> Error: NUTC3033:Internal Compiler Error: Invalid MethodImpl body=6000353 decl=600032d when loading type 'SixLabors.ImageSharp.Processing.Processors.Quantization.PaletteQuantizer`1<TPixel>' from assembly 'SixLabors.ImageSharp' while loading MethodImpl list for 'instance SixLabors.ImageSharp.Processing.Processors.Quantization.IFrameQuantizer`1<TPixel1> SixLabors.ImageSharp.Processing.Processors.Quantization.PaletteQuantizer`1<TPixel>.SixLabors.ImageSharp.Processing.Processors.Quantization.IQuantizer.CreateFrameQuantizer<TPixel1>(SixLabors.ImageSharp.Configuration)'. while loading type 'SixLabors.ImageSharp.Processing.Processors.Quantization.PaletteQuantizer`1<TPixel>'. while computing compilation roots.\r\n\r\n### Steps to Reproduce\r\n\r\n- Create a new UWP project (I'm targeting SDK 17134 and using 16299 as minimum)\r\n- Reference the ImageSharp NuGet package (I'm using version `1.0.0-beta0006`)\r\n- Try to build the app in Release mode (either x86 or x64), this fails with the errors above\r\n\r\nI've already sent a repro to dotnetnative@microsoft.com - but the issue can really just be easily reproduced in any UWP app just by referencing ImageSharp and trying to build in Release.\r\n\r\n**NOTE**: I've tried to build the app both using .NETCore.UWP 6.1.9, 6.2.2 and 6.2.3, all of them fail with similar errors. If you have an internal build of the upcoming 6.2.4 package maybe you could try using that one to see if this particular glitch has already been addressed there?\r\n\r\nPlease let me know if you need any more info from me, I'm happy to help!\r\nThank you in advance.\r\nSergio","Url":"https://github.com/dotnet/corert/issues/6948","RelatedDescription":"Open issue \"[.NET Native] Errors ILT0005 and NUTC3033 when building a UWP app with ImageSharp (.NET Standard)\" (#6948)"},{"Id":"405615342","IsPullRequest":true,"CreatedAt":"2019-02-04T13:09:21","Actor":"filipnavara","Number":"6932","RawContent":null,"Title":"Remove code that was moved to System.Native","State":"closed","Body":"Testing build. I assume the C# P/Invoke prototypes should be moved to shared CoreLib (to be in CoreFX too). Will this be ok with ProjectN?","Url":"https://github.com/dotnet/corert/pull/6932","RelatedDescription":"Closed or merged PR \"Remove code that was moved to System.Native\" (#6932)"},{"Id":"406115661","IsPullRequest":true,"CreatedAt":"2019-02-04T03:57:07","Actor":"Dotnet-GitSync-Bot","Number":"6943","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @MichalStrehovsky","Url":"https://github.com/dotnet/corert/pull/6943","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6943)"},{"Id":"406108145","IsPullRequest":true,"CreatedAt":"2019-02-04T03:56:50","Actor":"MichalStrehovsky","Number":"6942","RawContent":null,"Title":"Make Test.CoreLib more useful","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6942","RelatedDescription":"Closed or merged PR \"Make Test.CoreLib more useful\" (#6942)"},{"Id":"406160309","IsPullRequest":false,"CreatedAt":"2019-02-04T03:56:00","Actor":"szhaomsft","Number":"6946","RawContent":null,"Title":"string path = Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().Location)  error","State":"closed","Body":"the above expression return null,  while it works well in dotnet core runtime","Url":"https://github.com/dotnet/corert/issues/6946","RelatedDescription":"Closed issue \"string path = Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().Location)  error\" (#6946)"},{"Id":"406159740","IsPullRequest":false,"CreatedAt":"2019-02-04T02:06:13","Actor":"szhaomsft","Number":"6945","RawContent":null,"Title":"MarshalAs(UnmanagedType.LPUTF8Str) error","State":"open","Body":" it reports that \r\n\r\nrequires non-trivial marshalling that is not yet supported by this compiler.","Url":"https://github.com/dotnet/corert/issues/6945","RelatedDescription":"Open issue \"MarshalAs(UnmanagedType.LPUTF8Str) error\" (#6945)"},{"Id":"406118202","IsPullRequest":false,"CreatedAt":"2019-02-03T18:54:57","Actor":"yowl","Number":"6944","RawContent":null,"Title":"wasm: field reflection is not working","State":"open","Body":"In https://github.com/dotnet/corert/blob/82299d456f24bcfc2393901cd55861824d07ac58/src/ILCompiler.WebAssembly/src/Compiler/WebAssemblyMetadataBlockingPolicy.cs#L24 field metadata is turned off and I'd like to turn it on so that this sort of code \r\n```\r\nFieldInfo[] fields = typeof(ClassForMetaTests).GetFields();`\r\n```\r\nis possible.  I'd like to first ask a question.  My understanding is that the compiler will only emit code for fields that it sees while compiling and that unseen code can be added via the `rd.xml` file.  In order to avoid that, which has not been tried so far in the wasm compiler and hence might have other problems, can I just add some code that uses the fields I'm interested in, and then unblock fields in the `WebAssemblyMetadataBlockingPolicy` and I should be good to start debugging?\r\n\r\nThanks","Url":"https://github.com/dotnet/corert/issues/6944","RelatedDescription":"Open issue \"wasm: field reflection is not working\" (#6944)"},{"Id":"406082349","IsPullRequest":true,"CreatedAt":"2019-02-03T17:03:45","Actor":"jkotas","Number":"6941","RawContent":null,"Title":"Use unsigned index extension in muldi-dimensional array stubs","State":"closed","Body":"Port https://github.com/dotnet/coreclr/pull/22376 to CoreRT","Url":"https://github.com/dotnet/corert/pull/6941","RelatedDescription":"Closed or merged PR \"Use unsigned index extension in muldi-dimensional array stubs\" (#6941)"},{"Id":"406067060","IsPullRequest":false,"CreatedAt":"2019-02-03T15:26:59","Actor":"homer90","Number":"6940","RawContent":null,"Title":"netcore 3.0 and windows forms","State":"closed","Body":"I am using netcore 3.0 and winforms in my netcore application.\r\n\r\nHowever when running the native generated code it fails:\r\n`System.Exception: Method '[System.Windows.Forms]System.Windows.Forms.UnsafeNativeMethods.RegisterClass(WNDCLASS_D)' requires non-trivial marshalling that is not yet supported by this compiler.`","Url":"https://github.com/dotnet/corert/issues/6940","RelatedDescription":"Closed issue \"netcore 3.0 and windows forms\" (#6940)"},{"Id":"406045401","IsPullRequest":true,"CreatedAt":"2019-02-03T02:33:22","Actor":"Dotnet-GitSync-Bot","Number":"6939","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara","Url":"https://github.com/dotnet/corert/pull/6939","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#6939)"},{"Id":"406042102","IsPullRequest":true,"CreatedAt":"2019-02-03T02:32:39","Actor":"Dotnet-GitSync-Bot","Number":"6938","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/6938","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#6938)"},{"Id":"406002163","IsPullRequest":true,"CreatedAt":"2019-02-03T01:35:03","Actor":"Dotnet-GitSync-Bot","Number":"6937","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas","Url":"https://github.com/dotnet/corert/pull/6937","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6937)"},{"Id":"405967247","IsPullRequest":true,"CreatedAt":"2019-02-02T10:05:12","Actor":"Dotnet-GitSync-Bot","Number":"6936","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @marek-safar","Url":"https://github.com/dotnet/corert/pull/6936","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6936)"},{"Id":"405934113","IsPullRequest":true,"CreatedAt":"2019-02-02T09:35:58","Actor":"Dotnet-GitSync-Bot","Number":"6935","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @filipnavara @stephentoub","Url":"https://github.com/dotnet/corert/pull/6935","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#6935)"},{"Id":"405852985","IsPullRequest":true,"CreatedAt":"2019-02-02T01:43:57","Actor":"Dotnet-GitSync-Bot","Number":"6934","RawContent":null,"Title":"Mirror changes from dotnet/corefx,coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/corefx,coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/6934","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/corefx,coreclr\" (#6934)"},{"Id":"405575610","IsPullRequest":true,"CreatedAt":"2019-02-01T17:22:58","Actor":"Dotnet-GitSync-Bot","Number":"6930","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding","Url":"https://github.com/dotnet/corert/pull/6930","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6930)"},{"Id":"405639169","IsPullRequest":true,"CreatedAt":"2019-02-01T10:24:30","Actor":"MichalStrehovsky","Number":"6933","RawContent":null,"Title":"Merge master to nmirror","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6933","RelatedDescription":"Closed or merged PR \"Merge master to nmirror\" (#6933)"},{"Id":"405600096","IsPullRequest":true,"CreatedAt":"2019-02-01T10:23:47","Actor":"MichalStrehovsky","Number":"6931","RawContent":null,"Title":"Fix Project N build break","State":"closed","Body":"Interestingly, there's no warning for this on the CoreRT side. On Project N side, this is a warning as error.","Url":"https://github.com/dotnet/corert/pull/6931","RelatedDescription":"Closed or merged PR \"Fix Project N build break\" (#6931)"},{"Id":"405459415","IsPullRequest":true,"CreatedAt":"2019-02-01T06:48:05","Actor":"MichalStrehovsky","Number":"6928","RawContent":null,"Title":"Annotate types moved from S.R.Extensions","State":"closed","Body":"Testing how much hate this is going to bring me.\r\n\r\nThese annotations let ProjectN deal with the fact that we now have two\r\ndefinitions of System.Environment in the system. This is needed as long\r\nas Project N is stuck on 2.1-level version of the framework.","Url":"https://github.com/dotnet/corert/pull/6928","RelatedDescription":"Closed or merged PR \"Annotate types moved from S.R.Extensions\" (#6928)"},{"Id":"405546829","IsPullRequest":true,"CreatedAt":"2019-02-01T06:47:55","Actor":"Dotnet-GitSync-Bot","Number":"6929","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub","Url":"https://github.com/dotnet/corert/pull/6929","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#6929)"},{"Id":"405352419","IsPullRequest":true,"CreatedAt":"2019-01-31T19:44:26","Actor":"jkotas","Number":"6926","RawContent":null,"Title":"Merge nmirror to master","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6926","RelatedDescription":"Closed or merged PR \"Merge nmirror to master\" (#6926)"},{"Id":"405380870","IsPullRequest":true,"CreatedAt":"2019-01-31T18:40:01","Actor":"dotnet-bot","Number":"6927","RawContent":null,"Title":"Merge changes from TFS","State":"closed","Body":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!","Url":"https://github.com/dotnet/corert/pull/6927","RelatedDescription":"Closed or merged PR \"Merge changes from TFS\" (#6927)"},{"Id":"405301033","IsPullRequest":true,"CreatedAt":"2019-01-31T17:19:02","Actor":"Dotnet-GitSync-Bot","Number":"6923","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @tannergooding @marek-safar","Url":"https://github.com/dotnet/corert/pull/6923","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#6923)"},{"Id":"405313502","IsPullRequest":true,"CreatedAt":"2019-01-31T17:18:37","Actor":"MichalStrehovsky","Number":"6924","RawContent":null,"Title":"Fix ProjectN build breaks","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/6924","RelatedDescription":"Closed or merged PR \"Fix ProjectN build breaks\" (#6924)"},{"Id":"405350947","IsPullRequest":true,"CreatedAt":"2019-01-31T17:17:59","Actor":"dotnet-bot","Number":"6925","RawContent":null,"Title":"Merge changes from TFS","State":"closed","Body":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!","Url":"https://github.com/dotnet/corert/pull/6925","RelatedDescription":"Closed or merged PR \"Merge changes from TFS\" (#6925)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"406604347","IsPullRequest":false,"CreatedAt":"2019-02-05T02:21:52","Actor":"nguerrera","Number":"2908","RawContent":null,"Title":"Improve performance of ResolveFrameworkReferences and related tasks/targets","State":"open","Body":"See https://github.com/dotnet/sdk/pull/2887#issuecomment-460488924\r\n","Url":"https://github.com/dotnet/sdk/issues/2908","RelatedDescription":"Open issue \"Improve performance of ResolveFrameworkReferences and related tasks/targets\" (#2908)"},{"Id":"406574224","IsPullRequest":true,"CreatedAt":"2019-02-05T00:01:48","Actor":"dotnet-bot","Number":"2907","RawContent":null,"Title":"Merge release/2.1.4xx to release/2.1.5xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.4xx into release/2.1.5xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.4xx-to-release/2.1.5xx\ngit reset --hard upstream/release/2.1.5xx\ngit merge upstream/release/2.1.4xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.4xx-to-release/2.1.5xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2907","RelatedDescription":"Open PR \"Merge release/2.1.4xx to release/2.1.5xx\" (#2907)"},{"Id":"406573912","IsPullRequest":false,"CreatedAt":"2019-02-05T00:00:36","Actor":"pranavkm","Number":"2906","RawContent":null,"Title":"Building a project with OutputType = Exe and implicit fx reference disabled causes build to fail.","State":"open","Body":"## Repro steps\r\n\r\n1. dotnet new console\r\n2. Edit the project file to disable implicit fx reference and instead add an explicit reference to `Microsoft.NETCore.App`:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <DisableImplicitFrameworkReferences>true</DisableImplicitFrameworkReferences>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.NETCore.App\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n3. `dotnet build`\r\n\r\nBuild fails saying it was unable to copy the AssemblyName.exe file\r\n\r\n> C:\\Users\\Pranav\\.dotnet\\x64\\sdk\\3.0.100-preview-010184\\Microsoft.Common.CurrentVersion.targets(4560,5): error MSB3030: Could not copy the file \"D:\\temp\\test1\\obj\\Debug\\netcoreapp3.0\\test1.exe\" because it was not found. [D:\\temp\\test1\\test1.csproj]\r\n\r\nSetting `<UseAppHost>false</UseAppHost>` in the project file fixes things.\r\n\r\n*Background*:\r\nThe RazorSdk builds in a separate repo that's an arcade dependency to AspNetCore. The Sdk's test applications build against test shims rather than the actual AspNetCore fx to avoid cyclical dependencies. To do so, they set `DisableImplicitFrameworkReferences = true`.","Url":"https://github.com/dotnet/sdk/issues/2906","RelatedDescription":"Open issue \"Building a project with OutputType = Exe and implicit fx reference disabled causes build to fail.\" (#2906)"},{"Id":"406413046","IsPullRequest":true,"CreatedAt":"2019-02-04T19:36:34","Actor":"johnbeisner","Number":"2904","RawContent":null,"Title":"Perform a fetch before the checkout","State":"closed","Body":"The 'checkout' command can error sometimes:\r\n```\r\nEXEC : error : pathspec 'c967e0f' did not match any file(s) known to git. [C:\\work2\\sdk\\src\\Tests\\Microsoft.NET.PerformanceTests\\Microsoft.NET.PerformanceTests.csproj]\r\nC:\\work2\\sdk\\src\\Tests\\Microsoft.NET.PerformanceTests\\Microsoft.NET.PerformanceTests.csproj(52,5): error MSB3073: The command \"git checkout --quiet c967e0f\" exited with code 1.\r\n```","Url":"https://github.com/dotnet/sdk/pull/2904","RelatedDescription":"Closed or merged PR \"Perform a fetch before the checkout\" (#2904)"},{"Id":"405716301","IsPullRequest":true,"CreatedAt":"2019-02-04T18:07:25","Actor":"nguerrera","Number":"2895","RawContent":null,"Title":"Implement DesignerRuntimeImplementationProjectOutputGroup","State":"closed","Body":"Generate a .designer.deps.json to obj and .designer.runtimeconfig.json to obj/ and returns them + non-NuGet, non-Framework ReferenceCopyLocalPaths.\r\n\r\nThe designer deps file contains only NuGet assets, and the designer runtimeconfig sets the option to allow other files to load from app base.\r\n\r\nFix #2707 \r\n\r\ncc @chabiss @lutzroeder","Url":"https://github.com/dotnet/sdk/pull/2895","RelatedDescription":"Closed or merged PR \"Implement DesignerRuntimeImplementationProjectOutputGroup\" (#2895)"},{"Id":"406426405","IsPullRequest":false,"CreatedAt":"2019-02-04T17:02:21","Actor":"livarcocc","Number":"2905","RawContent":null,"Title":"Microsoft.PackageDependencyResolution.targets failed when project has %20 in the name","State":"open","Body":"We have git repo with whitespace in name \"Test repo\". Once I cloned it in Windows 8.1 I got path \"C:\\somepath\\Test%20repo\". This path was generated by git clone command. When I open ASP.NET Core project under this path I can't see cs files at all. Once I change %20 to simple ' ' space it works. Not sure is this .NET Core or VS2017 or even git, but it once you have such path with %20 .net core projects fails.\r\n\r\nThe git part is not really needed. Just adding %20 to the name of the project will lead to the error.","Url":"https://github.com/dotnet/sdk/issues/2905","RelatedDescription":"Open issue \"Microsoft.PackageDependencyResolution.targets failed when project has %20 in the name\" (#2905)"},{"Id":"406318950","IsPullRequest":true,"CreatedAt":"2019-02-04T14:11:15","Actor":"dotnet-maestro[bot]","Number":"2903","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19103.1\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19103.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2903","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#2903)"},{"Id":"405051870","IsPullRequest":true,"CreatedAt":"2019-02-03T23:19:19","Actor":"wli3","Number":"2888","RawContent":null,"Title":"Use fixture","State":"closed","Body":"Per code review to use fixture to reuse asset on disk","Url":"https://github.com/dotnet/sdk/pull/2888","RelatedDescription":"Closed or merged PR \"Use fixture\" (#2888)"},{"Id":"406134970","IsPullRequest":false,"CreatedAt":"2019-02-03T21:46:46","Actor":"LordMike","Number":"2902","RawContent":null,"Title":"GenerateDepsFile: The process cannot access the file '...\\MyProject.deps.json' because it is being used by another process.","State":"open","Body":"**UPDATE: While writing this, rather long, post -- I've managed to produce a small reproduction example, see bottom**\r\n\r\nWe've recently upgraded our builds to run on faster hardware with more cpu cores, and are now ~100% of the time seeing the below error in a number of repositories. The error here is from Windows, but our CI servers run on linux and have the same error (see logs below).\r\n\r\nWe run the following commandlines:\r\n\r\n> \"C:\\Program Files\\dotnet\\dotnet.exe\" restore C:\\Project\\MyProject.sln\r\n> \"C:\\Program Files\\dotnet\\dotnet.exe\" build C:\\Project\\MyProject.sln --configuration Debug --framework netstandard2.0 --no-restore\r\n\r\n```\r\nC:\\Program Files\\dotnet\\sdk\\2.2.101\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(129,5): error MSB4018\r\n\r\nThe \"GenerateDepsFile\" task failed unexpectedly. [C:\\Project\\MyProject.csproj]\r\nSystem.IO.IOException: The process cannot access the file 'C:\\Project\\bin\\Debug\\netstandard2.0\\MyProject.deps.json' because it is being used by another process. [C:\\Project\\MyProject.csproj]\r\n   at System.IO.FileStream.ValidateFileHandle(SafeFileHandle fileHandle) [C:\\Project\\MyProject.csproj]\r\n   at System.IO.FileStream.CreateFileOpenHandle(FileMode mode, FileShare share, FileOptions options) [C:\\Project\\MyProject.csproj]\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options) [C:\\Project\\MyProject.csproj]\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize) [C:\\Project\\MyProject.csproj]\r\n   at System.IO.File.Create(String path) [C:\\Project\\MyProject.csproj]\r\n   at Microsoft.NET.Build.Tasks.GenerateDepsFile.ExecuteCore() [C:\\Project\\MyProject.csproj]\r\n   at Microsoft.NET.Build.Tasks.TaskBase.Execute() [C:\\Project\\MyProject.csproj]\r\n   at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\Project\\MyProject.csproj]\r\n   at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\Project\\MyProject.csproj]\r\n```\r\n\r\n#### Observations:\r\n\r\n* This fails on my local Windows desktop roughly 33% of the time. Rerunning the build (no cleanup) always succeeds (seems to be a race condition, so HW speeds play a role). On our Linux CI servers, it fails 100% of the time currently\r\n* The deps file in question is _always_ the same file for a given repository / builds. The file is for a shared library between multiple projects.\r\n* A plain `dotnet build MyProject.sln -f netstandard2.0` (no build script) also exhibits this issue.\r\n* A `dotnet build MyProject.sln` seemingly always succeeds (locally and on CI server), at least for three consecutive attempts right now.\r\n* All the projects in the `MyProject.sln` have `netstandard2.0` - but a number of them have more targets (ie. netcoreapp)\r\n* ~We have more projects, f.ex. for tests, but they're in `MyProject-Tests.sln`. These projects only target `netcoreapp2.x` - we've split the solutions both for speed when developing and to be able to build artifacts without compiling the tests (since we can't build certain projects from the solution only ... that's another issue entirely)~ _(not relevant)_\r\n* Limiting the build to one process (msbuild: `/m:1`) seems to \"solve\" the problem.\r\n* At work (inaccessible currently), I performed some Procmon captures to see the difference between successful and failing runs\r\n  * It turns out, that two `dotnet.exe` processes attempt to create the `.deps.json` files\r\n  * When succeeding, there is a clear seperation between two CreateFile() calls, where the first creates the file, and the second call (from the second PID) finds the file already there and does nothing (not even reads it)\r\n  * When failing, the two processes make calls overlapping each other, leading to both of them discovering the file as missing, and both trying to create it (one obviously failing, producing the stacktrace above) -- classical concurrency issue.\r\n\r\nSo. \r\n\r\n* It should be that when two projects reference a third, shared, project .. that this shared one is built exactly once .. right?.. How come two attempts are made at writing the same `.deps.json` files?\r\n* How come this seemingly works fine, when building for all target frameworks?\r\n\r\n#### Versions:\r\n* Local, Windows 10 x64, `dotnet 2.2.101`\r\n* Linux CI, docker, `dotnet 2.2.103` (we build our own docker images using the dockerfile from the base `microsoft/dotnet:2-sdk` images)\r\n\r\n#### Reproduction\r\n\r\nProject: [ci-stresstest-master.zip](https://github.com/dotnet/sdk/files/2826051/ci-stresstest-master.zip)\r\n\r\nIn it, I have a solution with 5 projects, all empty (no actual code), but with a targeting setup that mimicks a very small subset of our projects. I've then created four seperate CI builds that did the following:\r\n\r\n* [log](https://github.com/dotnet/sdk/files/2826053/restore-build.txt) (succeeds) `dotnet restore ci-stresstest.sln` + `dotnet build ci-stresstest.sln --no-restore` \r\n* [log](https://github.com/dotnet/sdk/files/2826054/build.txt) (succeeds) `dotnet build ci-stresstest.sln`\r\n* [log](https://github.com/dotnet/sdk/files/2826055/restore-build-framework.txt) (fails) `dotnet restore ci-stresstest.sln` + `dotnet build ci-stresstest.sln -f netstandard2.0 --no-restore`\r\n* [log](https://github.com/dotnet/sdk/files/2826056/build-framework.txt) (fails) `dotnet build ci-stresstest.sln -f netstandard2.0`\r\n\r\n##### Notes on repro.\r\n\r\n* We run a vanilla docker setup for CI, except for one thing:\r\n  * We mount a shared directory for nuget packages, to be able to share downloaded packages between builds\r\n\r\nSee also #2076","Url":"https://github.com/dotnet/sdk/issues/2902","RelatedDescription":"Open issue \"GenerateDepsFile: The process cannot access the file '...\\MyProject.deps.json' because it is being used by another process.\" (#2902)"},{"Id":"406086069","IsPullRequest":true,"CreatedAt":"2019-02-03T14:06:00","Actor":"dotnet-maestro[bot]","Number":"2901","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19102.1\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19102.1\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2901","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#2901)"},{"Id":"405980989","IsPullRequest":true,"CreatedAt":"2019-02-02T14:21:04","Actor":"dotnet-maestro[bot]","Number":"2900","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19101.16\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19101.16\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2900","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#2900)"},{"Id":"405976817","IsPullRequest":true,"CreatedAt":"2019-02-02T12:01:29","Actor":"dotnet-bot","Number":"2899","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"open","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2899","RelatedDescription":"Open PR \"Merge release/2.2.2xx to master\" (#2899)"},{"Id":"405976816","IsPullRequest":true,"CreatedAt":"2019-02-02T12:01:27","Actor":"dotnet-bot","Number":"2898","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"open","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2898","RelatedDescription":"Open PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#2898)"},{"Id":"405919332","IsPullRequest":true,"CreatedAt":"2019-02-02T03:00:14","Actor":"dotnet-bot","Number":"2897","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2897","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to master\" (#2897)"},{"Id":"405434764","IsPullRequest":true,"CreatedAt":"2019-02-02T02:35:54","Actor":"nugetlurker","Number":"2891","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview3.5800 into sdk","State":"closed","Body":"Insert NuGet Build 5.0.0-preview3.5800 into sdk release/2.2.2xx branch","Url":"https://github.com/dotnet/sdk/pull/2891","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-preview3.5800 into sdk\" (#2891)"},{"Id":"405886328","IsPullRequest":true,"CreatedAt":"2019-02-02T02:35:40","Actor":"wli3","Number":"2896","RawContent":null,"Title":"WIP test ci","State":"closed","Body":"Seems It_uses_NetstandardLibrary20x_as_the_implicit_version_for_NetStandard20 will always fail with 2.0.2 instead of 2.0.3","Url":"https://github.com/dotnet/sdk/pull/2896","RelatedDescription":"Closed or merged PR \"WIP test ci\" (#2896)"},{"Id":"405434781","IsPullRequest":true,"CreatedAt":"2019-02-02T01:34:54","Actor":"nugetlurker","Number":"2892","RawContent":null,"Title":"Insert NuGet Build 5.0.0-preview3.5800 into sdk","State":"closed","Body":"Insert NuGet Build 5.0.0-preview3.5800 into sdk release/2.1.6xx branch","Url":"https://github.com/dotnet/sdk/pull/2892","RelatedDescription":"Closed or merged PR \"Insert NuGet Build 5.0.0-preview3.5800 into sdk\" (#2892)"},{"Id":"405494486","IsPullRequest":true,"CreatedAt":"2019-02-01T19:22:57","Actor":"dotnet-bot","Number":"2893","RawContent":null,"Title":"Merge release/2.2.2xx to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.2xx into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.2xx-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/2.2.2xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.2xx-to-master --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2893","RelatedDescription":"Closed or merged PR \"Merge release/2.2.2xx to master\" (#2893)"},{"Id":"405692238","IsPullRequest":true,"CreatedAt":"2019-02-01T14:16:37","Actor":"dotnet-maestro[bot]","Number":"2894","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19081.3\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19081.3\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2894","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#2894)"},{"Id":"404541551","IsPullRequest":true,"CreatedAt":"2019-02-01T01:10:36","Actor":"dotnet-bot","Number":"2885","RawContent":null,"Title":"Merge release/2.1.6xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.1.6xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.1.6xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.1.6xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.1.6xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2885","RelatedDescription":"Closed or merged PR \"Merge release/2.1.6xx to release/2.2.2xx\" (#2885)"},{"Id":"404541543","IsPullRequest":true,"CreatedAt":"2019-01-31T17:34:32","Actor":"dotnet-bot","Number":"2884","RawContent":null,"Title":"Merge release/2.2.1xx to release/2.2.2xx","State":"closed","Body":"\nThis is an automatically generated pull request from release/2.2.1xx into release/2.2.2xx.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/2.2.1xx-to-release/2.2.2xx\ngit reset --hard upstream/release/2.2.2xx\ngit merge upstream/release/2.2.1xx\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/2.2.1xx-to-release/2.2.2xx --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/sdk/pull/2884","RelatedDescription":"Closed or merged PR \"Merge release/2.2.1xx to release/2.2.2xx\" (#2884)"},{"Id":"405235053","IsPullRequest":true,"CreatedAt":"2019-01-31T14:31:49","Actor":"dotnet-maestro[bot]","Number":"2889","RawContent":null,"Title":"Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\nUpdates from https://github.com/dotnet/arcade\r\n\r\n- Microsoft.DotNet.Arcade.Sdk - 1.0.0-beta.19080.6\r\n- Microsoft.DotNet.SignTool - 1.0.0-beta.19080.6\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/2889","RelatedDescription":"Closed or merged PR \"Update dependencies from dotnet/arcade\" (#2889)"},{"Id":"405261780","IsPullRequest":false,"CreatedAt":"2019-01-31T14:07:27","Actor":"nguerrera","Number":"2890","RawContent":null,"Title":"GenerateBuildDependencyFile fails for Self-contained apps with duplicate FrameworkReferences","State":"open","Body":"_From @fuocor on January 30, 2019 17:2_\n\nsince upgrading the sdk to version 3.0.100-preview-010187 and then 3.0.100-preview-010189  the GenerateBuildDependencyFile build task is failing.\r\n\r\nthe build output is the following\r\n```\r\n> dotnet build\r\nMicrosoft (R) Build Engine version 16.0.385-preview+g966cdf2ac6 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 25.26 ms for C:\\ossiaco\\dotnet\\src\\Ossiaco.Win32.Interop\\Ossiaco.Win32.Interop.csproj.\r\n  Restore completed in 39 ms for C:\\ossiaco\\dotnet\\src\\Ossiaco.Common\\Ossiaco.Common.csproj.\r\n  Restore completed in 39.3 ms for C:\\ossiaco\\dotnet\\src\\Ossiaco.Common.Server.Web\\Ossiaco.Common.Server.Web.csproj.\r\n  Restore completed in 39.31 ms for C:\\ossiaco\\dotnet\\src\\Ossiaco.Common.Server\\Ossiaco.Common.Server.csproj.\r\n  Restore completed in 38.02 ms for C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj.\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(151,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(151,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview [C:\\ossiaco\\dotnet\\src\\Ossiaco.Common.Server\\Ossiaco.Common.Server.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(151,5): message NETSDK1057: You are using a preview version of .NET Core. See: https://aka.ms/dotnet-core-preview [C:\\ossiaco\\dotnet\\src\\Ossiaco.Common\\Ossiaco.Common.csproj]\r\n  Ossiaco.Win32.Interop -> C:\\ossiaco\\dotnet\\src\\Ossiaco.Win32.Interop\\bin\\Debug\\netstandard2.0\\Ossiaco.Win32.Interop.dll\r\n  Ossiaco.Common -> C:\\ossiaco\\dotnet\\src\\Ossiaco.Common\\bin\\Debug\\netstandard2.0\\Ossiaco.Common.dll\r\n  Ossiaco.Common.Server -> C:\\ossiaco\\dotnet\\src\\Ossiaco.Common.Server\\bin\\Debug\\netcoreapp3.0\\Ossiaco.Common.Server.dll\r\n  Ossiaco.Common.Server.Web -> C:\\ossiaco\\dotnet\\src\\Ossiaco.Common.Server.Web\\bin\\Debug\\netcoreapp3.0\\Ossiaco.Common.Server.Web.dll\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018: The \"GenerateDepsFile\" task failed unexpectedly. [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018: System.ArgumentException: Can not add property ./Microsoft.AspNetCore.Antiforgery.dll to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object. [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Newtonsoft.Json.Linq.JObject.ValidateToken(JToken o, JToken existing) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Newtonsoft.Json.Linq.JContainer.InsertItem(Int32 index, JToken item, Boolean skipParentCheck) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Newtonsoft.Json.Linq.JObject.InsertItem(Int32 index, JToken item, Boolean skipParentCheck) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Newtonsoft.Json.Linq.JContainer.AddInternal(Int32 index, Object content, Boolean skipParentCheck) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Newtonsoft.Json.Linq.JContainer.Add(Object content) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.WriteAssetList(IEnumerable`1 runtimeFiles) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.AddAssets(JObject libraryObject, String key, RuntimeAssetGroup group) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.WriteTargetLibrary(Library library) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.<WriteTarget>b__7_0(Library library) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at System.Linq.Enumerable.SelectArrayIterator`2.MoveNext() [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Newtonsoft.Json.Linq.JContainer.AddInternal(Int32 index, Object content, Boolean skipParentCheck) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Newtonsoft.Json.Linq.JContainer.Add(Object content) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Newtonsoft.Json.Linq.JObject..ctor(Object content) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.WriteTarget(IReadOnlyList`1 libraries) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.WriteTargets(DependencyContext context) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.Write(DependencyContext context) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.Extensions.DependencyModel.DependencyContextWriter.Write(DependencyContext context, Stream stream) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.NET.Build.Tasks.GenerateDepsFile.ExecuteCore() in /_/src/Tasks/Microsoft.NET.Build.Tasks/GenerateDepsFile.cs:line 172 [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.NET.Build.Tasks.TaskBase.Execute() in /_/src/Tasks/Common/TaskBase.cs:line 35 [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\nC:\\Program Files\\dotnet\\sdk\\3.0.100-preview-010189\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.Sdk.targets(124,5): error MSB4018:    at Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(ITaskExecutionHost taskExecutionHost, TaskLoggingContext taskLoggingContext, TaskHost taskHost, ItemBucket bucket, TaskExecutionMode howToExecuteTask) [C:\\ossiaco\\dotnet\\src\\Ossiaco.Web\\Ossiaco.Web.csproj]\r\n\r\nBuild FAILED.\r\n\r\n...\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:04.43\r\n```\r\n\r\n# General\r\n\r\nif I downgrade to 3.0.100-preview-010040 there is no error\n\n_Copied from original issue: dotnet/core#2267_","Url":"https://github.com/dotnet/sdk/issues/2890","RelatedDescription":"Open issue \"GenerateBuildDependencyFile fails for Self-contained apps with duplicate FrameworkReferences\" (#2890)"},{"Id":"404525303","IsPullRequest":true,"CreatedAt":"2019-01-31T03:18:45","Actor":"wli3","Number":"2883","RawContent":null,"Title":"Fix shim apphost without separate target","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/2883","RelatedDescription":"Closed or merged PR \"Fix shim apphost without separate target\" (#2883)"},{"Id":"405034976","IsPullRequest":true,"CreatedAt":"2019-01-31T01:04:26","Actor":"dsplaisted","Number":"2887","RawContent":null,"Title":"Refactor targeting pack downloads, and framework version selection","State":"open","Body":"This is currently WIP, I'm sending the PR now to get CI results.\r\n\r\nThis includes the following:\r\n\r\n- Refactors FrameworkReference and targeting pack resolution so that all applicable targeting packs for the target framework will be downloaded.  This is required to support dotnet/cli#10666 (once NuGet/Home#7342 is implemented)\r\n- Fixes #2792.  The following are the ways (in priority order) that the \"runtime framework version\" for a shared framework can be controlled:\r\n    - `RuntimeFrameworkVersion` metadata on the `FrameworkReference` item\r\n    - `RuntimeFrameworkVersion` MSBuild property (applies to all shared frameworks)\r\n    - Then, use either the `LatestRuntimeFrameworkVersion` or the `DefaultRuntimeFrameworkVersion` of the `KnownFrameworkReference`, based on\r\n        - The value (if set) of `TargetLatestRuntimePatch` metadata on the `FrameworkReference`\r\n        - The `TargetLatestRuntimePatch` MSBuild property (which defaults to True if `SelfContained` is true, and False otherwise)\r\n","Url":"https://github.com/dotnet/sdk/pull/2887","RelatedDescription":"Open PR \"Refactor targeting pack downloads, and framework version selection\" (#2887)"},{"Id":"404558166","IsPullRequest":true,"CreatedAt":"2019-01-30T01:15:32","Actor":"zamont","Number":"2886","RawContent":null,"Title":"Add a new task FilterManagedAssemblies into Microsoft.NET.Build.Tasks","State":"open","Body":"The FilterManagedAssemblies task takes in a list of files and a switch to\r\nrestrict the managed assemblies to IL ONLY and returns those that are\r\nmanaged assemblies and conditionally are IL ONLY.","Url":"https://github.com/dotnet/sdk/pull/2886","RelatedDescription":"Open PR \"Add a new task FilterManagedAssemblies into Microsoft.NET.Build.Tasks\" (#2886)"},{"Id":"404459898","IsPullRequest":false,"CreatedAt":"2019-01-29T19:53:39","Actor":"sxmanton","Number":"2882","RawContent":null,"Title":"ProjectReference doesn't behave the same as PackageReference for contentFiles","State":"open","Body":"Hi, I have a library project which builds a Package with a config file which is placed in `contentFiles\\any\\any` with PackageCopyToOutput set to true. When installing this as a PackageReference, the config file is copied to the output directory of the consuming project as expected. However, when referencing it as a ProjectReference in a Tester app in the same solution, the config file is not copied to output. \r\n\r\nIs there some way to achieve the same behavior between the ProjectReference and PackageReference that I'm missing here? If not, this seems like a deficiency of the current system. It seems very odd to me that ProjectReference functions equivalently as PackageReference in terms of defining transitive dependencies (even supports PrivateAssets, IncludeAssets, etc.), but does not behave the same for copying contentFiles.","Url":"https://github.com/dotnet/sdk/issues/2882","RelatedDescription":"Open issue \"ProjectReference doesn't behave the same as PackageReference for contentFiles\" (#2882)"},{"Id":"404423399","IsPullRequest":true,"CreatedAt":"2019-01-29T18:19:00","Actor":"peterhuene","Number":"2881","RawContent":null,"Title":"Ensure Microsoft.NETCore.App is an implicit dependency for publish.","State":"open","Body":"This commit ensures that we exclude files from the `Microsoft.NETCore.App`\r\nplatform library on publish when the platform library is\r\n`Microsoft.AspNetCore.App`, which doesn't have an explicit dependency on\r\n`Microsoft.NETCore.App`.\r\n\r\nWhen publishing a 2.x ASP.NET application, the `MicrosoftNETPlatformLibrary`\r\nproperty gets changed by ASP.NET to `Microsoft.AspNetCore.App`.  This causes\r\nthe task responsible for determining what files to copy locally to treat files\r\nfrom `Microsoft.NETCore.App` and its dependencies as not being part of the\r\nplatform.\r\n\r\nHowever, when publishing the application as framework-dependent, almost all the\r\nplatform files get excluded thanks to conflict resolution which has the files\r\nas part of the platform manifest and preferred packages.  Unfortunately, the\r\napphost, hostpolicy, and hostfxr files are not part of these lists and as a\r\nresult will be copied locally.\r\n\r\nThis breaks framework-dependent apphost activation because hostfxr and\r\nhostpolicy are copied locally.  Additionally, these files end up in the\r\ndeps.json file which also prevents roll-forward activation if the two files are\r\nmanually deleted.\r\n\r\nThe fix is to treat `Microsoft.NETCore.App` as an implicit dependency of\r\n`Microsoft.AspNetCore.App` where we calculate the list of excluded packages for\r\na framework-dependent publish.\r\n\r\nFixes dotnet/cli#10602.","Url":"https://github.com/dotnet/sdk/pull/2881","RelatedDescription":"Open PR \"Ensure Microsoft.NETCore.App is an implicit dependency for publish.\" (#2881)"},{"Id":"404087126","IsPullRequest":false,"CreatedAt":"2019-01-29T01:54:52","Actor":"dsplaisted","Number":"2880","RawContent":null,"Title":"\"salt\" MSBuild handshake in test / dogfood environment","State":"open","Body":"Right now for our tests (and in the dogfood script) we override the MSBuildSDKsPath to point MSBuild to the SDK under test.  However, this doesn't seem to prevent sharing MSBuild nodes that didn't have this set, which can end up causing assembly loading or other issues.\r\n\r\nIdeally in our test environment we would add a \"salt\" to the node connection handshake, so that MSBuild would only be able to connect to nodes that come from the same test environment.\r\n\r\nThis would probably require a change in MSBuild to allow us to provide such a \"salt\".\r\n\r\n@rainersigwald, thoughts?","Url":"https://github.com/dotnet/sdk/issues/2880","RelatedDescription":"Open issue \"\"salt\" MSBuild handshake in test / dogfood environment\" (#2880)"},{"Id":"404073631","IsPullRequest":false,"CreatedAt":"2019-01-29T00:53:11","Actor":"mairaw","Number":"2879","RawContent":null,"Title":"Don't reuse the https://aka.ms/sdkimplicitrefs link to indicate version should not be indicated","State":"open","Body":"This comes from a discussion at https://github.com/dotnet/docs/issues/8691 and my proposal can be found at https://github.com/dotnet/docs/issues/8691#issuecomment-448343752\r\n\r\nCustomers are getting the following error:\r\nNETSDK1071: A PackageReference to 'Microsoft.AspNetCore.All' specified a Version of 2.2.0-preview3-35497. Specifying the version of this package is not recommended. For more information, see https://aka.ms/sdkimplicitrefs. However, this document does not cover how Microsoft.AspNetCore.All should actually be referenced in this situation.\r\n\r\nHowever, specifying the version of a package has nothing to do with implicit package references, so I don't think we should be using that same link for this error message. \r\nWe should create a new aka.ms link for that error and that link would point to a different location in the ASP.NET docs TBD.\r\n\r\n/cc @Rick-Anderson","Url":"https://github.com/dotnet/sdk/issues/2879","RelatedDescription":"Open issue \"Don't reuse the https://aka.ms/sdkimplicitrefs link to indicate version should not be indicated\" (#2879)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"397026248","IsPullRequest":false,"CreatedAt":"2019-01-08T18:17:45","Actor":"leecow","Number":"96","RawContent":null,"Title":"January 2019 .NET Updates","State":"open","Body":"# January 2019 .NET Updates\r\n\r\nThe following .NET updates were released in January 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework January 2019 Preview of Quality Rollup - January 15, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/15/net-framework-january-2019-preview-of-quality-rollup/)\r\n* [.NET Framework January 2019 Security and Quality Rollup - January 8, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/08/net-framework-january-2019-security-and-quality-rollup/)\r\n* [.NET Framework January 22, 2018 Preview of Cumulative Update for Windows 10 version 1809 and Windows Server 2019 - January 22, 2019](https://blogs.msdn.microsoft.com/dotnet/2019/01/22/net-framework-january-22-2018-preview-of-cumulative-update-for-windows-10-version-1809-and-windows-server-2019/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.7 and .NET Core SDK 2.1.503 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.7/2.1.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.1 and .NET Core SDK 2.2.102 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.1/2.2.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2210](https://github.com/dotnet/core/issues/2210)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/96","RelatedDescription":"Open issue \"January 2019 .NET Updates\" (#96)"},{"Id":"397020176","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:27","Actor":"blowdart","Number":"95","RawContent":null,"Title":" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a tampering vulnerability exists when .NET Core improperly handles specially crafted files. An attacker who successfully exploited this vulnerability could write arbitrary files and directories to certain locations on a vulnerable system. However, an attacker would have limited control over the destination of the files and directories.\r\n\r\nTo exploit the vulnerability, an attacker must send a specially crafted file to a vulnerable system\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core handles these files.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34427\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nIf your application does not extract ZIP compressed files it is unaffected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.IO.Compression.ZipFile](https://www.nuget.org/packages/System.IO.Compression.ZipFile/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.IO.Compression.ZipFile) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n`System.IO.Compression.ZipFile` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\nFinally, you must restart your applications once an updated runtime or SDK is installed.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Danny Grander](https://twitter.com/grander) of [Snyk](https://snyk.io/)\r\n\r\n### External Links\r\n\r\n[CVE-2018-8416](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8416)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected pacakge table.\r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/95","RelatedDescription":"Open issue \" Microsoft Security Advisory CVE-2018-8416: .NET Core Tampering Vulnerability\" (#95)"},{"Id":"397020142","IsPullRequest":false,"CreatedAt":"2019-01-08T18:00:23","Actor":"blowdart","Number":"94","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of an information disclosure vulnerability exists in .NET Framework and .NET Core which allows bypassing Cross-origin Resource Sharing (CORS) configurations. An attacker who successfully exploited the vulnerability could retrieve content, that is normally restricted, from a web application.\r\n\r\nThe security update addresses the vulnerability by enforcing CORS configuration to prevent its bypass.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/34428\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nMicrosoft has not identified any mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the [System.Net.Http](https://www.nuget.org/packages/System.Net.Http/) package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6 | 2.1.7\r\nMicrosoft.NETCore.App (System.Net.Http) | 2.2.0 | 2.2.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications that use Microsoft.NetCore.App\r\n\r\n`System.Net.Http` is distributed as part of the .NET Core 2.1 runtime. To check the currently installed runtimes, open a command prompt and run the `dotnet --info` command. If you have a 2.1 or greater runtime installed, you'll see output like the following;\r\n\r\n```text\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.2.100\r\n Commit:    b9f2fa0ca8\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.2.100\\\r\n\r\nHost (useful for support):\r\n  Version: 2.2.0\r\n  Commit:  1249f08fed\r\n\r\n.NET Core SDKs installed:\r\n  2.1.5 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.502 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.All 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your host version is 2.1.x and the highest `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\nIf your host version is 2.2.x and the highest 2.1.x `Microsoft.NETCore.App` runtime version is less than 2.1.7, you're vulnerable to this issue.\r\n\r\nYou will not see SDK versions if you have only installed the runtime.\r\n\r\n#### Applications not using Microsoft.NetCore.App\r\n\r\nThe affected assembly is also available separately as a NuGet package. If you are not using Microsoft.NetCore.App, you may still be affected if you are referencing the packages listed above.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `SSystem.Net.Http/4.3.0` is a reference to version 4.3.0 of `System.Net.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### Updating the version of Microsoft.NETCore.App\r\n\r\nIf your host version is a 2.1.x host you must install version 2.1.7 or later of the [.NET Core 2.1 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.1), or corresponding [.NET Core 2.1 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.1).\r\n\r\nIf your host version is a 2.2.x you must install version 2.2.1 or later of the [.NET Core 2.2 runtime](https://dotnet.microsoft.com/download/dotnet-core/2.2), or corresponding  [.NET Core 2.2 SDK](https://dotnet.microsoft.com/download/dotnet-core/2.2).\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Net.Http` version 4.3.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Net.Http\" Version=\"4.3.5\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### Rebuilding your application\r\n\r\nFinally, you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2019-0545](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0545)\r\n\r\n### Revisions\r\n\r\nV1.1 (January 9, 2019): Correct affected package table. \r\nV1.0 (January 8, 2019): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-01-09_\r\n","Url":"https://github.com/dotnet/announcements/issues/94","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0545: .NET Core Information Disclosure Vulnerability\" (#94)"},{"Id":"390948658","IsPullRequest":false,"CreatedAt":"2018-12-14T03:22:58","Actor":"1015450578","Number":"93","RawContent":null,"Title":"Docker image with tag '2.2-aspnetcore-runtime' is not compatible","State":"closed","Body":"1. Install  .NET Core 2.2.100 sdk\r\n2. Create a new 'AspNetCore Web Api' by using Visual Studio 2017,and enbale docker support.\r\n3. F5 ,the Output Windows shows:\r\n>It was not possible to find any compatible framework version\r\n>The specified framework 'Microsoft.AspNetCore.App', version '2.2.0' was not found.\r\n>  - Check application dependencies and target a framework version installed at:\r\n>      /usr/share/dotnet/\r\n>  - Installing .NET Core prerequisites might help resolve this problem:\r\n>     http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n>  - The .NET Core framework and SDK can be installed from:\r\n>      https://aka.ms/dotnet-download\r\n>  - The following versions are installed:\r\n>      2.2.0-preview3-35497 at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]","Url":"https://github.com/dotnet/announcements/issues/93","RelatedDescription":"Closed issue \"Docker image with tag '2.2-aspnetcore-runtime' is not compatible\" (#93)"},{"Id":"390193072","IsPullRequest":false,"CreatedAt":"2018-12-12T12:56:53","Actor":"bilalmalik777","Number":"92","RawContent":null,"Title":".net core Console","State":"closed","Body":"I am running dot net core console app as web jobs and it is working perfectly in docker with docker compose. Now the issue is I want to pass a value to the application via Console.ReadLine() over this value i make some decision but i am unable to pass value via Console.ReadLine(). How i can do it please help me. For more understanding, i have added my docker compose file below\r\n`version: '3.4'\r\n\r\nservices:\r\n  \r\n  tt.core.web:\r\n    image: ${DOCKER_REGISTRY-}ttcoreweb\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Web/Dockerfile\r\n    depends_on:\r\n     - db\r\n    networks:\r\n     - app-network\r\n\r\n  tt.core.downtime.webjob:\r\n    image: ${DOCKER_REGISTRY-}ttcoredowntimewebjob\r\n    environment:\r\n      CORE_ENVIRONMENT: devdocker\r\n    build:\r\n      context: .\r\n      dockerfile: TT.Core.Downtime.Webjob/Dockerfile\r\n    depends_on:\r\n     - db\r\n     - tt.core.web\r\n    networks:\r\n     - app-network\r\n\r\n  db:\r\n    image: microsoft/mssql-server-linux\r\n    container_name: db\r\n    environment:\r\n      SA_PASSWORD: \"Thingtrax%1\"\r\n      ACCEPT_EULA: \"Y\"\r\n      MSSQL_PID: Express\r\n    ports:\r\n      - \"7002:1433\"\r\n    networks:\r\n      app-network:\r\n        ipv4_address: 172.24.0.2\r\n\r\nnetworks:\r\n  app-network:\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.24.0.0/16\r\n\r\n`\r\nIf the detail is not enough or you do not get my point, you can share your confusion in comment","Url":"https://github.com/dotnet/announcements/issues/92","RelatedDescription":"Closed issue \".net core Console\" (#92)"},{"Id":"380346599","IsPullRequest":false,"CreatedAt":"2018-11-13T17:44:44","Actor":"leecow","Number":"91","RawContent":null,"Title":"November 2018 .NET Updates","State":"open","Body":"# November 2018 .NET Updates\r\n\r\nThe following .NET updates were released in November 2018. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core November 2018 (2.1.6 and SDK 2.1.500) Update release notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.6/2.1.6.md)\r\n\r\nA [discussion issue](https://github.com/dotnet/core/issues/2053) is available for questions or feedback about this release.\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [October 2018](https://github.com/dotnet/announcements/issues/89)\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/91","RelatedDescription":"Open issue \"November 2018 .NET Updates\" (#91)"},{"Id":"375230004","IsPullRequest":false,"CreatedAt":"2018-10-29T21:45:27","Actor":"terrajobst","Number":"90","RawContent":null,"Title":"The future of JSON in .NET Core 3.0","State":"open","Body":"JSON has become an essential part of virtually all modern .NET applications and in many cases even surpassed the usage of XML. However, .NET hasn't had a (great) built-in way to deal with JSON. Instead we've relied on [Json.NET] which continues to serve the .NET ecosystem well.\r\n\r\n[Json.NET]: https://www.newtonsoft.com/json\r\n\r\nMoving forward, we plan on making some changes to our JSON support:\r\n\r\n* **We need high-performance JSON APIs**. We need a new set of JSON APIs that are highly tuned for performance by using `Span<T>` and allows for processing UTF-8 directly without having to transcode to UTF-16 `string` instances. Both aspects are critical for our web server Kestrel, where throughput is a key requirement.\r\n\r\n* **Remove dependency from ASP.NET Core to Json.NET**. Today, ASP.NET Core has a dependency on Json.NET. While this provides a tight integration between ASP.NET Core and Json.NET, it also means that application developers cannot freely choose which JSON library they are using. This is also problematic for customers of Json.NET as the version is dictated by the underlying platform. However, Json.NET is frequently updated and application developers often want to -- or even have to -- use a specific version. Thus, we want to remove the dependency from ASP.NET Core 3.0 to Json.NET so that customers can choose which version to use, without fearing they might accidentally break the underlying platform. In addition, this makes it also possible to plug-in an entirely different JSON library.\r\n\r\n* **Provide an ASP.NET Core integration package for Json.NET**. Json.NET has basically become the Swiss Army knife of JSON processing in .NET. It provides many options and facilities that allow customers to handle their JSON needs with ease. We don't want to compromise on the Json.NET support customers are getting today, for example, the ability to configure the JSON serialization via the `AddJsonOptions` extension method. Thus, we want to provide the Json.NET integration as a NuGet package that developers can optionally install so they get all the bells and whistles they get from Json.NET today. The other part of this work item is to ensure we have the right extension points so that other parties can provide similar integration packages for their JSON library of choice.\r\n\r\nBelow are more details around this plan.\r\n\r\n## The need for high-performance JSON APIs\r\n\r\nThe requirements for the .NET stack have changed a bit since the arrival of .NET Core. Historically, .NET has valued usability and convenience. With .NET Core, we've added a focus on performance, and we've made significant investments to serve high performance needs. And the [improvements we made][techempower] in the popular TechEmpower benchmark are a testament to that.\r\n\r\n[techempower]: https://www.techempower.com/blog/2016/11/16/framework-benchmarks-round-13/\r\n\r\nWith .NET Core 2.1, we've added a brand new primitive called [Span\\<T>][span-msdn] that allows us to represent native memory and arrays in a uniform way. With this type, we've also added a set of parsing and encoding APIs that are much more memory efficient without having to resort to unsafe code.\r\n\r\n[span-msdn]: https://msdn.microsoft.com/en-us/magazine/mt814808.aspx\r\n\r\nPart of the work of minimizing allocations is to avoid having to transcode UTF-8 payloads into UTF-16 strings, purely for parsing reasons. Currently, Json.NET is implemented by reading UTF-16. We need the ability to read (and write) JSON documents directly in UTF-8 because most network protocols (including HTTP) use UTF-8.\r\n\r\nDuring .NET Core 2.1 we've learned that updating our existing APIs to leverage `Span<T>` has limits. While we did add a bunch of overloads that accept spans, we also had to produce brand new APIs that are designed around minimizing allocations and dealing with buffers, which we exposed in `System.Buffers` namespaces. And with `System.IO.Pipelines` we've also added a programming model that enables developers to share buffers without having to deal with lifetime issues.\r\n\r\nBased on these experiences we believe in order to support JSON parsing, we'll need to expose a new set of JSON APIs that are specifically geared for high-performance scenarios.\r\n\r\nYou might wonder why we can't just update Json.NET to include support for parsing JSON using `Span<T>`? Well, James Newton-King -- the author of Json.NET -- has the following to say about that:\r\n\r\n> Json.NET was created over 10 years ago, and since then it has added a wide range of features aimed to help developers work with JSON in .NET. In that time Json.NET has also become far and away NuGet's most depended on and downloaded package, and is the go-to library for JSON support in .NET. Unfortunately, Json.NET's wealth of features and popularity works against making major changes to it. Supporting new technologies like `Span<T>` would require fundamental breaking changes to the library and would disrupt existing applications and libraries that depend on it.\r\n>\r\n> Going forward Json.NET will continue to be worked on and invested in, both addressing known issues today and supporting new platforms in the future. Json.NET has always existed alongside other JSON libraries for .NET, and there will be nothing to prevent you using one or more together, depending on whether you need the performance of the new JSON APIs or the large feature set of Json.NET.\r\n\r\n## Move Json.NET integration into a separate NuGet package\r\n\r\nToday, you cannot use ASP.NET Core without Json.NET because it is a dependency of ASP.NET Core itself. Over the years, we've received feedback that the dependency can conflict with other libraries that have their own dependency on a different version of Json.NET. In the past, we've considered addressing this issue by using a private copy of Json.NET in ASP.NET. However, this would create problems when developers want to configure Json.NET (for instance, in order to control how the serializer behaves when formatting JSON objects).\r\n\r\nMoving forward we'd like to:\r\n\r\n1. Replace the internal usage of Json.NET in ASP.NET Core by the new platform-provided JSON APIs.\r\n\r\n2. Factor the public facing usage of Json.NET into an optional integration package that can be acquired from NuGet.\r\n\r\nSo the existing integration between ASP.NET Core and Json.NET will continue to be supported, but will be moving out of the platform and into a separate package. However, since the integration is then designed to sit on top of the platform, it will also allow customers to update Json.NET to later versions.\r\n\r\nFurthermore, customers who need more performance can also choose to use the new JSON APIs, at the expense of the rich feature set that Json.NET offers.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/33115.","Url":"https://github.com/dotnet/announcements/issues/90","RelatedDescription":"Open issue \"The future of JSON in .NET Core 3.0\" (#90)"},{"Id":"368440353","IsPullRequest":false,"CreatedAt":"2018-10-09T23:44:06","Actor":"vivmishra","Number":"89","RawContent":null,"Title":"October 2018 .NET Updates","State":"open","Body":"# October 2018 .NET Updates\r\n\r\nThe following .NET updates were released in October 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Core\r\n\r\n* [.NET Core October 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/10/09/net-core-october-2018-update-net-core-1-0-and-1-1/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n* [September 2018](https://github.com/dotnet/announcements/issues/84)\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/89","RelatedDescription":"Open issue \"October 2018 .NET Updates\" (#89)"},{"Id":"368429033","IsPullRequest":false,"CreatedAt":"2018-10-09T22:51:18","Actor":"leecow","Number":"88","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core when HTTP authentication information is inadvertently exposed in an outbound request that encounters an HTTP redirect. An attacker who successfully exploited this vulnerability could use the information to further compromise the web application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handles HTTP redirects.\r\n\r\nSystem administrators running .NET Core 1.0 or .NET Core 1.1 applications must update their .NET Core runtimes to versions 1.0.13 and 1.1.10 then restart their applications. If installed applications target .NET Core 2.0, the applications must be migrated to 2.1 or newer and redeployed.\r\n\r\nDevelopers must update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core 2.0](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 then redeploy.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at <https://github.com/dotnet/corefx/issues/32730>\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nAdditionally package authors should check their dependencies to ensure they aren't depending on a vulnerable version of the following package:\r\n\r\n<a name=\"package-list\"></a>Package name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Net.Http| 2.0.20126.16343, 2.0.20505, 2.0.20710, 4.0.0, 4.1.0, 4.1.1, 4.1.2, 4.3.0, 4.3.1, 4.3.2, 4.3.3 |  4.3.4 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nAny .NET Core application that runs on a .NET Core 1.0.x runtime with a version number of 1.0.12 or lower, or a .NET Core application that runs on a .NET Core 1.1.x runtime with a version number of 1.1.9 or lower, or a .NET Core application that runs on a .NET Core 2.0.x runtime.\r\n\r\nTo check the currently installed runtimes and SDKs with version 2.1 or later of .NET Core, open a command prompt and run the `dotnet --info` command. You should see an output similar to the following:\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   2.1.403\r\n Commit:    04e15494b6\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17763\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\2.1.403\\\r\n\r\nHost (useful for support):\r\n  Version: 2.1.5\r\n  Commit:  290303f510\r\n\r\n.NET Core SDKs installed:\r\n  1.0.4 [C:\\Program Files\\dotnet\\sdk]\r\n  1.1.10 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you don't see a runtime entry for 1.0.13 or 1.1.10, any .NET Core 1.x applications run on that computer are vulnerable.\r\n\r\nIf you don't have a 2.1 version of the runtime or SDK installed, you can produce the complete list of runtimes by performing a directory listing in the install root directories. The default root directories are listed in the following table:\r\n\r\n| Operating System | Location |\r\n|------------------|----------|\r\n| Windows | `C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App\\` |\r\n| macOS | `/usr/local/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n| Supported Linux platforms | `/usr/share/dotnet/shared/Microsoft.NETCore.App/` |\r\n\r\nEach runtime version is installed in its own directory, where the directory name is the version number. If you don't have a directory for 1.0.13, 1.1.10 then any application targeting versions 1.0 or 1.1 are vulnerable.\r\n\r\nAdditionally, if you've deployed [self-contained applications](https://docs.microsoft.com/dotnet/core/deploying/#self-contained-deployments-scd) targeting any of the impacted versions, these applications are also vulnerable and must be recompiled and redeployed.\r\n\r\n### <a name=\"fix-runtime\">How do I fix the vulnerability?\r\n\r\nSystem administrators are advised to update their .NET Core runtimes to versions 1.0.13, 1.1.10 and install the latest 2.1 runtime, ensuring that any 2.0 applications are migrated to 2.1 as soon as possible.\r\n\r\n Developers are advised to update their .NET Core SDK to versions 1.1.11 and migrate any [.NET Core](https://docs.microsoft.com/dotnet/core/migration/20-21) or [ASP.NET Core 2.0](https://docs.microsoft.com/aspnet/core/migration/20_21?view=aspnetcore-2.1) applications to 2.1 and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at <https://github.com/dotnet/> and <https://github.com/aspnet/>, respectively. The Announcements repo for each product (<https://github.com/dotnet/Announcements> and <https://github.com/aspnet/Announcements>) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8292](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8292)\r\n\r\n### Revisions\r\n\r\nV1.0 (October 10, 2018): Advisory published.\r\n_Version 1.0_\r\n_Last Updated 2018-10-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/88","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8292: .NET Core Information Disclosure Vulnerability\" (#88)"},{"Id":"367393517","IsPullRequest":false,"CreatedAt":"2018-10-05T22:58:51","Actor":"leecow","Number":"87","RawContent":null,"Title":".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan","State":"open","Body":"# .NET Core Release Data (releases.json) Redesign and Deprecation\r\n\r\nThe releases.json and releases.csv files began life as helper tools for some of our internal release work, some experimentation and to possibly be useful to the community. It has been great to learn the files are indeed in use and many folks depend on them as a trigger for a number of activities.\r\n\r\n* [release-notes/releases.json](https://github.com/dotnet/core/blob/master/release-notes/releases.json)\r\n* [release-notes/releases.csv](https://github.com/dotnet/core/blob/master/release-notes/releases.csv)\r\n\r\nA discussion topic is available to share thoughts and see what others are thinking at https://github.com/dotnet/core/issues/1986\r\n\r\nBetween the usages which we have become aware and in considering further activities that could be enabled to reason about things such as checking .NET Core version availability and support status, it became clear the current format is inadequate.\r\n\r\nAn updated format has been designed and tested which will replace the current files. The timeline below describes the path to obsoleting the current files.\r\n\r\n## The Plan\r\n\r\n| Date | Action |\r\n| :--- | :----- |\r\n| Oct 2018 | Notify the community of the coming change |\r\n| Oct 2018 | Release the new json format into dotnet/core |\r\n| Oct 2018 - Feb 2019 | Maintain the old json and csv files |\r\n| Feb 2019 | Reminder announcement that old format file is coming soon |\r\n| Mar 2019 | Old json and csv files are obsoleted and removed from dotnet/core |\r\n\r\n## Breaking change\r\n\r\nIf you are currently utilizing the old version json or csv, you will need to update the relevant code to work with the new format. If you are just getting started with consuming this data, use the new version.\r\n\r\n## The Format\r\n\r\nBelow are fragments of the files from our most recent .NET Core release.\r\n\r\n### release-index.json\r\n\r\nThis file consists of a top level array with data on the latest release versions and a property for locating the more detailed channel-specific releases.json. This file is found in [dotnet/core/release-notes](https://github.com/dotnet/core/tree/new-json/release-notes/)\r\n\r\n[releases-index.json](https://github.com/dotnet/core/blob/new-json/release-notes/releases-index.json)\r\n\r\n```\r\n{\r\n    \"releases-index\": [\r\n        {\r\n            \"channel-version\": \"2.1\",\r\n            \"latest-release\": \"2.1.5\",\r\n            \"latest-release-date\":\"2018-10-02\",\r\n            \"product\": \".NET Core\",\r\n            \"support-phase\": \"lts\",\r\n            \"eol-date\": \"\",\r\n            \"releases.json\": \"https://github.com/dotnet/core/blob/master/release-notes/2.1/releases.json\",\r\n        },\r\n        ...\r\n}\r\n```\r\n\r\n### releases.json\r\n\r\nThis file provides detailed data for each release. A copy of this file will be found in each versioned directories under [dotnet/core/release-notes](https://github.com/dotnet/core/release-notes). For example [dotnet/core/release-notes/2.1](https://github.com/dotnet/core/tree/new-json/release-notes/2.1)\r\n\r\n\r\n[releases.json](https://github.com/dotnet/core/tree/new-json/release-notes/2.1/releases.json)\r\n\r\n```\r\n{\r\n    \"channel-version\": \"2.1\",\r\n    \"latest-release\": \"2.1.5\",\r\n    \"latest-release-date\":\"2018-10-12\",\r\n    \"support-phase\": \"lts\",\r\n    \"eol-date\": \"\",\r\n    \"lifecycle-policy\": \"https://www.microsoft.com/net/support/policy\",\r\n    \"releases\":\r\n    [\r\n        {\r\n            \"release-date\":  \"2018-10-02\",\r\n            \"release-version\":  \"2.1.5\",\r\n            \"security\":  false,\r\n            \"release-notes\":  \"https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.5/2.1.5.md\",\r\n            \"runtime\":  \r\n            {\r\n                \"version\":  \"2.1.5\",\r\n                \"version-display\":  \"2.1.5\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"files\":  \r\n                [\r\n                    {\r\n                        \"name\": \"dotnet-runtime-linux-arm.tar.gz\",\r\n                        \"url\": \"https://download.visualstudio.microsoft.com/download/pr/4d555219-1f04-47c6-90e5-8b3ff8989b9c/0798763e6e4b98a62846116f997d046e/dotnet-runtime-2.1.5-linux-arm.tar.gz\",\r\n                        \"hash\": \"89a77a07065ea24e7198c77a233b9ce5c6cf51b1deb2ef55c88f0adbb2ecd9db1ba4e7d55eec2ef7139c47f91346fed360161a5bb6e3a7ccfc4559bcde286364\"\r\n                    },\r\n                    ...\r\n                ]\r\n            }\r\n            \"sdk\":  \r\n            {\r\n                \"version\":  \"2.1.403\",\r\n                \"version-display\":  \"2.1.403\",\r\n                \"vs-version\":  \"15.8.6\",\r\n                \"csharp-language\":  \"7.3\",\r\n                \"fsharp-language\":  \"4.5\",\r\n                \"files\":  \r\n                [...]\r\n            }\r\n        }\r\n    ]\r\n}\r\n```","Url":"https://github.com/dotnet/announcements/issues/87","RelatedDescription":"Open issue \".NET Core Release Data (releases.json) Redesign and v1 Deprecation Plan\" (#87)"},{"Id":"366416503","IsPullRequest":false,"CreatedAt":"2018-10-03T16:11:18","Actor":"leecow","Number":"86","RawContent":null,"Title":".NET Core 2.0 has reached end of life","State":"open","Body":"[.NET Core 2.0 reached end of life](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) on October 1, 2018. This means [.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) is no longer supported and updates will no longer be provided. We recommend moving to [.NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/), our long term support (LTS) release.\r\n\r\n- [Download .NET Core 2.1](https://www.microsoft.com/net/download/dotnet-core/2.1)\r\n- [.NET Core 2.1 LTS statement](https://blogs.msdn.microsoft.com/dotnet/2018/08/21/net-core-august-2018-update/)\r\n- [.NET Core 2.0 end-of-life statement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n\r\n## Discussion\r\n\r\nPlease share you thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/core#1983](https://github.com/dotnet/core/issues/1983)\r\n\r\n## Lifecycle Context\r\n\r\n.NET Core releases belong to one of two [support lifecycles](https://www.microsoft.com/net/platform/support-policy): long term support (LTS) and Current. LTS releases are stable release which receive critical updates and are supported for at least three years. Current releases can include new features that may undergo future change based on feedback. Current releases are supported for three months after the subsequent .NET Core major or minor release. Both LTS and Current releases receive critical fixes throughout their lifecycle, for security, reliability, or to add support for new operating system versions. You must stay up-to-date with the latest patches to qualify for support. \r\n\r\n## .NET Core 2.0 Lifecycle\r\n\r\n[.NET Core 2.0](https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-core-2-0/) was released in August 2017 as a Current release. Per the lifecycle policy, Current releases reach end of life 3 months after a subsequent release (Current or LTS). .NET Core 2.1 released May 2018 and began the end of life countdown for .NET Core 2.0. The 3 month maintenance period for .NET Core 2.0 was scheduled to end August 2018 but was [extended to October](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/) to allow time to address an issue some customers were experiencing while migrating to .NET Core 2.1.\r\n\r\n## .NET Core 2.0 Downloads\r\n\r\n.NET Core 2.0 installers, zips and tar.gzs will remain available, but unsupported. This includes existing releases available on Linux package feeds. Previous versions, including 2.0, will be accessible through the [Download Archives](https://www.microsoft.com/net/download/archives). \r\n\r\n## .NET Core 2.0 Docker Images\r\n\r\n.NET Core 2.0 will be removed from the .NET and ASP.NET Docker repo READMEs, however the existing images remain available in those repos.\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n\r\n## Policy Information\r\n\r\nAdditional lifecycle and support details  and background can be seen in the following:\r\n\r\n* [.NET Core Support Lifecycle](https://www.microsoft.com/net/platform/support-policy)\r\n* [Support and Versioning](https://blogs.msdn.microsoft.com/dotnet/2016/07/26/net-support-and-versioning/)\r\n* [2.0 end of life early announcement](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n","Url":"https://github.com/dotnet/announcements/issues/86","RelatedDescription":"Open issue \".NET Core 2.0 has reached end of life\" (#86)"},{"Id":"361098704","IsPullRequest":false,"CreatedAt":"2018-09-18T01:10:23","Actor":"spshant","Number":"85","RawContent":null,"Title":"NET Framework 4.8 Early Access build 3646 is available!","State":"open","Body":"Today, we are happy to share an Early Access build for the .NET Framework 4.8. This includes an updated .NET 4.8 runtime as well as the .NET 4.8 Developer Pack (a a single package that bundles the .NET Framework 4.8 runtime, the .NET 4.8 Targeting Pack, and the .NET Framework 4.8 SDK). \r\n\r\nPlease help us ensure this is a high quality and compatible release by trying out this build and exploring the new features. \r\n\r\n**Next steps:**\r\nTo explore the new features, download the [.NET 4.8 Developer Pack build 3646](https://go.microsoft.com/fwlink/?LinkId=2018486).  Instead, if you want to try just the .NET 4.8 runtime, you can download either of these:\r\n•\t[.NET 4.8 Web Installer](https://go.microsoft.com/fwlink/?LinkId=2018525) - requires an internet connection during installation \r\n•\t[.NET 4.8 Offline installer](https://go.microsoft.com/fwlink/?LinkId=2018531) - can be downloaded and installed later in a disconnected state\r\n\r\nPlease provide your feedback by [reporting an issue at the .NET Framework Early Access GitHub repository](https://github.com/Microsoft/dotnet-framework-early-access/issues/new).\r\n\r\n**Note**: this release is still under development, you can expect to see more features and fixes in future preview builds. Also, a reminder that this build is not supported for production use.\r\n\r\nThis preview build 3646 includes improvements/fixes in the following areas:\r\n•\t**[Runtime]** JIT and NGEN improvements\r\n•\t**[Windows Forms]** Accessibility enhancements\r\n•\t**[WPF]** SelectionTextBrush Property\r\n•\t**[BCL]** Updated ZLib\r\n\r\nYou can see the complete list of improvements in this build [here](https://github.com/Microsoft/dotnet-framework-early-access/blob/master/release-notes/NET48/build-3646/changes.md).\r\n\r\n.NET Framework build 3646 is also included in the next update for Windows 10. You can sign up for [Windows Insiders](https://insider.windows.com/en-us/) to validate that your applications work great on the latest .NET Framework included in the latest Windows 10 releases.\r\n","Url":"https://github.com/dotnet/announcements/issues/85","RelatedDescription":"Open issue \"NET Framework 4.8 Early Access build 3646 is available!\" (#85)"},{"Id":"359151445","IsPullRequest":false,"CreatedAt":"2018-09-11T17:44:50","Actor":"leecow","Number":"84","RawContent":null,"Title":"September 2018 .NET Updates","State":"open","Body":"# September 2018 .NET Updates\r\n\r\nThe following .NET updates were released in September 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n* [.NET Framework September 2018 Security and Quality Rollup - September 11, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/09/11/net-framework-september-2018-security-and-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core September 2018 Update - September 11, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.4/2.1.4.md)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [August 2018](https://github.com/dotnet/announcements/issues/79)\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/84","RelatedDescription":"Open issue \"September 2018 .NET Updates\" (#84)"},{"Id":"359136325","IsPullRequest":false,"CreatedAt":"2018-09-11T17:00:55","Actor":"blowdart","Number":"83","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core 2.1. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability in .NET Core when System.IO.Pipelines improperly handles requests. An attacker who successfully exploited this vulnerability could cause a denial of service against an application that is leveraging System.IO.Pipelines. The vulnerability can be exploited remotely, without authentication. A remote unauthenticated attacker could exploit this vulnerability by providing specially crafted requests to the application.\r\n\r\nThe update addresses the vulnerability by correcting how System.IO.Pipelines handles requests.\r\n\r\nIf you are using ASP.NET Core 2.1 you will also need to update your ASP.NET version this by following the instructions in the [ASP.NET Core bulletin](https://github.com/aspnet/Announcements/issues/316).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/32228\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.IO.Pipelines package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.IO.Pipelines | 4.5.0 | 4.5.1\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n#### Applications which use System.IO.Pipelines\r\n\r\nSystem.IO.Pipelines is distributed both in ASP.NET Core 2.1 and separately as a NuGet package. If you are not using Microsoft.AspNetCore.App or .All, you may still be affected if you are referencing the System.IO.Pipelines package.\r\n\r\n##### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file. They can be fixed by [editing the project file](#fixing-direct-dependencies) or using NuGet to update the dependency.\r\n\r\n##### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects\r\n\r\nThe `project.assets.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json)).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.IO.Pipelines/4.5.0` is a reference to version 4.5.0 of `System.IO.Pipelines`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\n#### <a name=\"fixing-direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.IO.Pipelines` version 4.5.0\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.IO.Pipelines` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.1</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"transitive-dependencies\"></a>Fixing transitive dependencies\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.IO.Pipelines\" Version=\"4.5.1\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8409](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8409)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 11, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-09-11_\r\n","Url":"https://github.com/dotnet/announcements/issues/83","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8409: .NET Core Denial Of Service Vulnerability\" (#83)"},{"Id":"357399856","IsPullRequest":false,"CreatedAt":"2018-09-05T20:56:25","Actor":"richlander","Number":"82","RawContent":null,"Title":".NET Core Runtime ARM64 Status","State":"open","Body":"# .NET Core Runtime ARM64 Status\r\n\r\nThe .NET Core team is in the process of adding support for ARM64, as part of the .NET Core 3.0 project. This issue will be updated as ARM64 support progresses.\r\n\r\n[.NET Core 3.0 Preview 1](https://github.com/dotnet/core/issues/2099) includes support for Linux ARM64. Please try this build and provide support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/coreclr #19843](https://github.com/dotnet/coreclr/issues/19843)\r\n\r\n## Current Status\r\n\r\nARM64 builds are functional, for console and ASP.NET Core apps.\r\n\r\n## Details\r\n\r\nInitial support for ARM64 was added in the .NET Core 2.1 release. The team is not maintaining .NET Core 2.x branches with respect to ARM64. All ARM64 improvements will be made in the .NET Core 3.0 branch (currently [master](https://github.com/dotnet/coreclr)).\r\n\r\nSee [Installing .NET Core 3.0 on Linux ARM64](https://gist.github.com/richlander/467813274cea8abc624553ee72b28213) to install .NET Core on your ARM64 machine. Builds are available from the [daily builds page](https://github.com/dotnet/core/blob/master/daily-builds.md).\r\n\r\n## Bug Queries\r\n\r\nthe following bugs queries are available for ARM64:\r\n\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aarch-arm64)\r\n\r\n## Operating Systems\r\n\r\n.NET Core 3.0 ARM64 builds are tested on the following operating systems:\r\n\r\n* Ubuntu 16.04 and 18.04\r\n* Debian 9\r\n\r\n## Test Hardware\r\n\r\n.NET Core 3.0 ARM64 builds have been tested on the following hardware:\r\n\r\n* [NVIDIA Jetson TX2 Module](https://developer.nvidia.com/embedded/buy/jetson-tx2)\r\n* [Pine A64](https://www.pine64.org/?page_id=46823)\r\n* [Qualcomm Centriq 2400](https://www.qualcomm.com/products/qualcomm-centriq-2400-processor)\r\n* [Qualcomm Snapdragon](https://www.qualcomm.com/snapdragon/always-connected-pc)\r\n* [Raspberry Pi3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/)","Url":"https://github.com/dotnet/announcements/issues/82","RelatedDescription":"Open issue \".NET Core Runtime ARM64 Status\" (#82)"},{"Id":"349693735","IsPullRequest":false,"CreatedAt":"2018-08-22T18:23:01","Actor":"richlander","Number":"80","RawContent":null,"Title":"Improving Performance of ARM32 Docker Images with .NET Core Package Cache","State":"closed","Body":"# Improving Performance of ARM32 Docker Images with .NET Core Package Cache\r\n\r\n.NET Core SDK distributions include a compressed copy of NuGet packages for .NET Core, ASP.NET Core and EF Core. These packages are decompressed upon installation of the .NET Core SDK. The packages are not currently included in ARM32 distributions due to the time and space cost to decompress the packages. Instead, they will be added to [.NET Core ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/), where these costs can be paid as part of image creation.\r\n\r\nThese NuGet packages include content for two purposes:\r\n\r\n- Reference assemblies for .NET Core, for code compilation.\r\n- Pre-compiled assemblies (compiled with [crossgen](https://github.com/dotnet/coreclr/blob/master/Documentation/building/crossgen.md)) for .NET Core, for use in self-contained applications.\r\n\r\nIn both cases, the presence of these packages avoid the need to access remote NuGet feeds for .NET Core assemblies as part of package restore.\r\n\r\nThis change only affects [.NET Core 2.1 SDK ARM32 Docker images](https://hub.docker.com/r/microsoft/dotnet/). This change will be made in August 2018.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #653](https://github.com/dotnet/dotnet-docker/issues/653)\r\n\r\n## .NET Core SDK NugetFallbackFolder\r\n\r\nThe .NET Core SDK includes a compressed copy of all NuGet package, in LZMA format. It exists at the following version-specific location:\r\n\r\n```\r\nroot@3778032bc43d:/# ls -l /usr/share/dotnet/sdk/2.1.302/*.lzma\r\n-rw-r--r-- 1 1004 sudo 35995936 Jul  2 22:51 /usr/share/dotnet/sdk/2.1.302/nuGetPackagesArchive.lzma\r\n```\r\n\r\nThis file is decompressed to the following location: `/usr/share/dotnet/sdk/NuGetFallbackFolder/`\r\n\r\nA package restore for a .NET Core assembly will restore the assembly from the NuGetFallbackFolder location and copy it to the user NuGet cache. At that point, regular NuGet behavior is used.\r\n\r\n## Impact of this change\r\n\r\nThere should be no functional difference in behavior after this change. .NET SDK commands should complete faster and require fewer package restore network requests.\r\n\r\nThe following examples demonstrates the benefit of this change. The improvement can be observed with package restore. Build times (assuming no restore) are not affected.\r\n\r\n### .NET Core 2.1 SDK image after this change\r\n\r\n> The change has already been made in the `microsoft/dotnet-nightly` repo, as you can see in the example below. In August, this same change will be made available in the `microsoft/dotnet` repo.\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet-nightly:2.1-sdk\r\nroot@416731f24915:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 6.68 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    0m32.496s\r\nuser    0m35.820s\r\nsys     0m4.280s\r\nroot@416731f24915:/# cd mvcapp/\r\nroot@416731f24915:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.8.138-preview+ge0cd4f1c1f for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 524.78 ms for /mvcapp/mvcapp.csproj.\r\n/usr/share/dotnet/sdk/2.1.401-preview-009081/Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.RuntimeIdentifierInference.targets(143,5): message NETSDK1057: You are working with a preview version of the .NET Core SDK. You can define the SDK version via a global.json file in the current project. More at https://go.microsoft.com/fwlink/?linkid=869452 [/mvcapp/mvcapp.csproj]\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:09.15\r\n\r\nreal    2m13.377s\r\nuser    1m25.260s\r\nsys     0m9.420s\r\nroot@416731f24915:/mvcapp#\r\n```\r\n\r\n### .NET Core 2.1 SDK image before this change\r\n\r\n```console\r\npi@raspberrypi:~ $ docker run -it --rm microsoft/dotnet:2.1-sdk\r\nroot@9d1d5e45df6a:/# time dotnet new mvc -o mvcapp\r\nGetting ready...\r\nThe template \"ASP.NET Core Web App (Model-View-Controller)\" was created successfully.\r\nThis template contains technologies from parties other than Microsoft, see https://aka.ms/aspnetcore-template-3pn-210 for details.\r\n\r\nProcessing post-creation actions...\r\nRunning 'dotnet restore' on mvcapp/mvcapp.csproj...\r\n  Restoring packages for /mvcapp/mvcapp.csproj...\r\n  Installing System.Xml.XmlSerializer 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.0.0.\r\n  Installing System.Globalization.Extensions 4.0.1.\r\n  Installing runtime.native.System.Security.Cryptography 4.0.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.0.0.\r\n  Installing System.Security.Cryptography.Cng 4.2.0.\r\n  Installing System.Security.Cryptography.Csp 4.0.0.\r\n  Installing runtime.native.System.Net.Http 4.0.1.\r\n  Installing runtime.native.System 4.0.0.\r\n  Installing runtime.native.System.IO.Compression 4.1.0.\r\n  Installing System.Buffers 4.0.0.\r\n  Installing System.Private.DataContractSerialization 4.3.0.\r\n  Installing System.Security.Principal 4.3.0.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing runtime.rhel.7-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.ubuntu.14.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.opensuse.42.1-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.App 2.1.0.\r\n  Installing runtime.ubuntu.16.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.App 2.1.1.\r\n  Installing runtime.ubuntu.16.04-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 2.1.0.\r\n  Installing Microsoft.NETCore.Targets 2.1.0.\r\n  Installing NETStandard.Library 2.0.3.\r\n  Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0.\r\n  Installing Microsoft.AspNetCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Antiforgery 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Session 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.KeyPerFile 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Embedded 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Physical 2.1.1.\r\n  Installing Microsoft.Extensions.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Cookies 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Core 2.1.1.\r\n  Installing runtime.osx.10.10-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.Authentication.Google 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Facebook 2.1.1.\r\n  Installing Microsoft.Extensions.Hosting.Abstractions 2.1.1.\r\n  Installing runtime.opensuse.13.2-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.AspNetCore.HttpsPolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.MicrosoftAccount 2.1.1.\r\n  Installing Microsoft.Extensions.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.MiddlewareAnalysis 2.1.1.\r\n  Installing Microsoft.Extensions.FileSystemGlobbing 2.1.1.\r\n  Installing Microsoft.Extensions.DiagnosticAdapter 2.1.0.\r\n  Installing Microsoft.Extensions.Identity.Core 2.1.1.\r\n  Installing Microsoft.Extensions.Identity.Stores 2.1.1.\r\n  Installing Microsoft.Extensions.Options.ConfigurationExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Localization.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Abstractions 2.1.1.\r\n  Installing runtime.fedora.24-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Options 2.1.1.\r\n  Installing Microsoft.Extensions.FileProviders.Composite 2.1.1.\r\n  Installing Microsoft.Extensions.Logging 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.TraceSource 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.UserSecrets 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Debug 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.Console 2.1.1.\r\n  Installing Microsoft.Extensions.DependencyInjection 2.1.1.\r\n  Installing Microsoft.Extensions.ObjectPool 2.1.1.\r\n  Installing runtime.debian.8-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.DependencyInjection.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Binder 2.1.1.\r\n  Installing runtime.fedora.23-x64.runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing Microsoft.Extensions.Configuration.EnvironmentVariables 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.FileExtensions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Memory 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.CommandLine 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.Abstractions 2.1.1.\r\n  Installing Microsoft.Net.Http.Headers 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.InMemory 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Abstractions 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Ini 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.StaticFiles 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Relational 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Https 2.1.1.\r\n  Installing Microsoft.Extensions.Primitives 2.1.1.\r\n  Installing Microsoft.AspNetCore.SpaServices.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel 2.1.1.\r\n  Installing Microsoft.Extensions.WebEncoders 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebUtilities 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR 1.0.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Tools 2.1.1.\r\n  Installing Microsoft.AspNetCore.Routing.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Rewrite 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Transport.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCaching 2.1.1.\r\n  Installing Microsoft.AspNetCore.ResponseCompression 2.1.1.\r\n  Installing System.Globalization.Extensions 4.3.0.\r\n  Installing Microsoft.AspNetCore.Razor.Language 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.TagHelpers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Runtime 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.RazorPages 2.1.1.\r\n  Installing Microsoft.AspNetCore.Owin 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor.ViewCompilation 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Analyzers 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Localization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Json 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.WebSockets 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Cors 2.1.1.\r\n  Installing System.Diagnostics.DiagnosticSource 4.3.0.\r\n  Installing Microsoft.AspNetCore.Mvc.DataAnnotations 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ApiExplorer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Formatters.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc 2.1.1.\r\n  Installing Microsoft.Extensions.Logging.EventSource 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OAuth 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Json 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Protocols.Json 1.0.1.\r\n  Installing Microsoft.AspNetCore.NodeServices 2.1.1.\r\n  Installing Microsoft.AspNetCore.SignalR.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.JsonPatch 2.1.1.\r\n  Installing Microsoft.AspNetCore.Localization.Routing 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.IISIntegration 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.UI 2.1.1.\r\n  Installing Microsoft.AspNetCore.Razor.Design 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HttpOverrides 2.1.1.\r\n  Installing Microsoft.AspNetCore.Identity 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Features 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http.Connections.Common 1.0.1.\r\n  Installing Microsoft.AspNetCore.Http 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cors 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Server.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Http.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.Internal 2.1.1.\r\n  Installing Microsoft.AspNetCore.Cryptography.KeyDerivation 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection.Extensions 2.1.1.\r\n  Installing Microsoft.AspNetCore.HostFiltering 2.1.1.\r\n  Installing Microsoft.CSharp 4.0.1.\r\n  Installing Microsoft.AspNetCore.CookiePolicy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.Kestrel.Core 2.1.1.\r\n  Installing Microsoft.AspNetCore.Html.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.Twitter 2.1.1.\r\n  Installing Microsoft.AspNetCore.Connections.Abstractions 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization.Policy 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authorization 2.1.1.\r\n  Installing Microsoft.AspNetCore.Diagnostics 2.1.1.\r\n  Installing Microsoft.AspNetCore.Server.HttpSys 2.1.1.\r\n  Installing Microsoft.Extensions.Configuration.Xml 2.1.1.\r\n  Installing Microsoft.AspNetCore.Hosting 2.1.1.\r\n  Installing Microsoft.AspNetCore.DataProtection 2.1.1.\r\n  Installing Microsoft.Extensions.Caching.SqlServer 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore.SqlServer 2.1.1.\r\n  Installing Microsoft.AspNet.WebApi.Client 5.2.6.\r\n  Installing Microsoft.AspNetCore.SignalR.Core 1.0.1.\r\n  Installing Microsoft.AspNetCore.Mvc.ViewFeatures 2.1.1.\r\n  Installing Microsoft.CodeAnalysis.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.JwtBearer 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.OpenIdConnect 2.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Razor 2.1.1.\r\n  Installing Microsoft.AspNetCore.Authentication.WsFederation 2.1.1.\r\n  Installing Microsoft.EntityFrameworkCore 2.1.1.\r\n  Installing System.Runtime.Serialization.Primitives 4.1.1.\r\n  Installing Microsoft.AspNetCore.Mvc.Core 2.1.1.\r\n  Installing System.Xml.ReaderWriter 4.0.11.\r\n  Installing Microsoft.NETCore.DotNetHostResolver 2.1.0.\r\n  Installing System.Diagnostics.DiagnosticSource 4.5.0.\r\n  Installing System.ComponentModel.Annotations 4.5.0.\r\n  Installing System.Buffers 4.5.0.\r\n  Installing System.Memory 4.5.1.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.1.\r\n  Installing System.Text.Encodings.Web 4.5.0.\r\n  Installing Microsoft.CSharp 4.5.0.\r\n  Installing System.Net.WebSockets.WebSocketProtocol 4.5.1.\r\n  Installing Newtonsoft.Json 11.0.2.\r\n  Installing System.IO.Pipelines 4.5.0.\r\n  Installing System.Numerics.Vectors 4.5.0.\r\n  Installing System.Security.Principal.Windows 4.5.0.\r\n  Installing System.Threading.Tasks.Extensions 4.5.1.\r\n  Installing System.Security.Cryptography.Cng 4.5.0.\r\n  Installing System.Net.Http 4.1.0.\r\n  Installing System.Security.Cryptography.Xml 4.5.0.\r\n  Installing Microsoft.Win32.Registry 4.5.0.\r\n  Installing System.Reflection.Metadata 1.6.0.\r\n  Installing System.Data.SqlClient 4.5.1.\r\n  Installing Newtonsoft.Json.Bson 1.0.1.\r\n  Installing Newtonsoft.Json 10.0.1.\r\n  Installing System.Threading.Channels 4.5.0.\r\n  Installing System.Reflection.Emit 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.CSharp 2.8.0.\r\n  Installing Microsoft.CodeAnalysis.Common 2.8.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.OpenIdConnect 5.2.0.\r\n  Installing System.IdentityModel.Tokens.Jwt 5.2.0.\r\n  Installing Microsoft.IdentityModel.Protocols.WsFederation 5.2.0.\r\n  Installing System.Collections.Immutable 1.5.0.\r\n  Installing Remotion.Linq 2.2.0.\r\n  Installing System.Interactive.Async 3.1.1.\r\n  Installing Microsoft.Extensions.DependencyModel 2.1.0.\r\n  Installing Microsoft.NETCore.DotNetAppHost 2.1.0.\r\n  Installing Microsoft.NETCore.Platforms 2.0.0.\r\n  Installing System.Security.Cryptography.Pkcs 4.5.0.\r\n  Installing System.Security.Permissions 4.5.0.\r\n  Installing System.Security.AccessControl 4.5.0.\r\n  Installing NETStandard.Library 1.6.1.\r\n  Installing System.Text.Encoding.CodePages 4.5.0.\r\n  Installing System.Linq 4.3.0.\r\n  Installing runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing System.Diagnostics.Debug 4.3.0.\r\n  Installing System.Globalization 4.3.0.\r\n  Installing System.IO 4.3.0.\r\n  Installing System.Collections 4.3.0.\r\n  Installing System.Runtime.Serialization.Primitives 4.3.0.\r\n  Installing System.Runtime.Serialization.Formatters 4.3.0.\r\n  Installing System.Xml.XmlDocument 4.3.0.\r\n  Installing System.Threading 4.3.0.\r\n  Installing System.Resources.ResourceManager 4.3.0.\r\n  Installing System.Text.Encoding.Extensions 4.3.0.\r\n  Installing System.Xml.XDocument 4.3.0.\r\n  Installing System.Threading.Tasks 4.3.0.\r\n  Installing System.Linq.Expressions 4.3.0.\r\n  Installing System.Runtime.Numerics 4.3.0.\r\n  Installing System.Text.Encoding 4.3.0.\r\n  Installing System.Reflection.Extensions 4.3.0.\r\n  Installing System.Text.RegularExpressions 4.3.0.\r\n  Installing System.Runtime.Extensions 4.3.0.\r\n  Installing System.Reflection 4.3.0.\r\n  Installing System.ObjectModel 4.3.0.\r\n  Installing System.Dynamic.Runtime 4.3.0.\r\n  Installing System.Xml.ReaderWriter 4.3.0.\r\n  Installing Microsoft.CSharp 4.3.0.\r\n  Installing System.ComponentModel.TypeConverter 4.3.0.\r\n  Installing System.Runtime 4.3.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.3.0.\r\n  Installing System.Reflection.Primitives 4.3.0.\r\n  Installing System.AppContext 4.3.0.\r\n  Installing System.Console 4.3.0.\r\n  Installing System.Collections.Concurrent 4.3.0.\r\n  Installing System.Diagnostics.Tools 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.0.0.\r\n  Installing System.IO.Compression 4.3.0.\r\n  Installing System.IO.FileSystem 4.3.0.\r\n  Installing System.IO.FileSystem.Primitives 4.3.0.\r\n  Installing System.Security.Cryptography.Encoding 4.3.0.\r\n  Installing System.Collections.Immutable 1.3.1.\r\n  Installing System.Runtime.InteropServices 4.3.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.1.0.\r\n  Installing System.Diagnostics.StackTrace 4.3.0.\r\n  Installing System.Reflection.Metadata 1.4.2.\r\n  Installing System.Threading.Thread 4.3.0.\r\n  Installing Microsoft.CodeAnalysis.Analyzers 1.1.0.\r\n  Installing System.Security.Cryptography.X509Certificates 4.3.0.\r\n  Installing System.ValueTuple 4.3.0.\r\n  Installing System.Diagnostics.FileVersionInfo 4.3.0.\r\n  Installing System.Threading.Tasks.Parallel 4.3.0.\r\n  Installing System.Security.Cryptography.Algorithms 4.3.0.\r\n  Installing System.Xml.XPath.XDocument 4.3.0.\r\n  Installing System.Text.Encoding.CodePages 4.3.0.\r\n  Installing System.Runtime.InteropServices 4.1.0.\r\n  Installing Microsoft.IdentityModel.Protocols 5.2.0.\r\n  Installing Microsoft.IdentityModel.Tokens 5.2.0.\r\n  Installing Microsoft.IdentityModel.Xml 5.2.0.\r\n  Installing System.Diagnostics.Debug 4.0.11.\r\n  Installing System.Reflection.Extensions 4.0.1.\r\n  Installing Microsoft.IdentityModel.Tokens.Saml 5.2.0.\r\n  Installing System.Runtime.Extensions 4.1.0.\r\n  Installing System.Threading 4.0.11.\r\n  Installing System.Collections 4.0.11.\r\n  Installing System.Reflection 4.1.0.\r\n  Installing System.ObjectModel 4.0.12.\r\n  Installing System.Linq 4.1.0.\r\n  Installing System.Linq.Queryable 4.0.1.\r\n  Installing System.Linq.Expressions 4.1.0.\r\n  Installing System.Runtime 4.1.0.\r\n  Installing NETStandard.Library 1.6.0.\r\n  Installing System.Dynamic.Runtime 4.0.11.\r\n  Installing Newtonsoft.Json 9.0.1.\r\n  Installing Microsoft.DotNet.PlatformAbstractions 2.1.0.\r\n  Installing System.Runtime.CompilerServices.Unsafe 4.5.0.\r\n  Installing runtime.win-x64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-x86.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing runtime.win-arm64.runtime.native.System.Data.SqlClient.sni 4.4.0.\r\n  Installing Microsoft.NETCore.Platforms 1.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.3.0.\r\n  Installing System.Net.Sockets 4.3.0.\r\n  Installing System.Diagnostics.Tracing 4.3.0.\r\n  Installing System.IO.Compression.ZipFile 4.3.0.\r\n  Installing System.Globalization.Calendars 4.3.0.\r\n  Installing System.Threading.Timer 4.3.0.\r\n  Installing System.Security.Cryptography.Primitives 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.0.0.\r\n  Installing System.Runtime.Handles 4.3.0.\r\n  Installing System.Runtime.InteropServices.RuntimeInformation 4.3.0.\r\n  Installing System.Net.Http 4.3.0.\r\n  Installing Microsoft.NETCore.Targets 1.1.0.\r\n  Installing System.Net.Primitives 4.3.0.\r\n  Installing System.Reflection.Emit.Lightweight 4.3.0.\r\n  Installing System.Reflection.TypeExtensions 4.3.0.\r\n  Installing System.Threading.Tasks.Extensions 4.3.0.\r\n  Installing System.ComponentModel 4.3.0.\r\n  Installing System.ComponentModel.Primitives 4.3.0.\r\n  Installing System.Collections.NonGeneric 4.3.0.\r\n  Installing System.Collections.Specialized 4.3.0.\r\n  Installing runtime.native.System 4.3.0.\r\n  Installing runtime.native.System.IO.Compression 4.3.0.\r\n  Installing System.Buffers 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing runtime.native.System.Net.Http 4.3.0.\r\n  Installing System.Security.Cryptography.OpenSsl 4.3.0.\r\n  Installing System.Security.Cryptography.Cng 4.3.0.\r\n  Installing System.Security.Cryptography.Csp 4.3.0.\r\n  Installing runtime.native.System.Security.Cryptography.Apple 4.3.0.\r\n  Installing System.Xml.XPath 4.3.0.\r\n  Installing Microsoft.IdentityModel.Logging 5.2.0.\r\n  Installing System.Diagnostics.Contracts 4.3.0.\r\n  Installing System.Runtime.Serialization.Xml 4.3.0.\r\n  Installing Microsoft.NETCore.Platforms 1.0.1.\r\n  Installing Microsoft.NETCore.Targets 1.0.1.\r\n  Installing System.Security.Claims 4.3.0.\r\n  Installing System.Reflection.Primitives 4.0.1.\r\n  Installing System.IO 4.1.0.\r\n  Installing System.Globalization 4.0.11.\r\n  Installing System.Threading.Tasks 4.0.11.\r\n  Installing System.Resources.ResourceManager 4.0.1.\r\n  Installing System.Reflection.Emit 4.0.1.\r\n  Installing System.Reflection.TypeExtensions 4.1.0.\r\n  Installing System.Reflection.Emit.ILGeneration 4.0.1.\r\n  Installing System.Reflection.Emit.Lightweight 4.0.1.\r\n  Installing System.AppContext 4.1.0.\r\n  Installing System.Collections.Concurrent 4.0.12.\r\n  Installing System.IO.FileSystem.Primitives 4.0.1.\r\n  Installing System.Runtime.Numerics 4.0.1.\r\n  Installing System.Security.Cryptography.Primitives 4.0.0.\r\n  Installing System.Xml.XDocument 4.0.11.\r\n  Installing System.Text.RegularExpressions 4.1.0.\r\n  Installing Microsoft.Win32.Primitives 4.0.1.\r\n  Installing System.Console 4.0.0.\r\n  Installing System.Diagnostics.Tools 4.0.1.\r\n  Installing System.Diagnostics.Tracing 4.1.0.\r\n  Installing System.Globalization.Calendars 4.0.1.\r\n  Installing System.IO.FileSystem 4.0.1.\r\n  Installing System.Net.Sockets 4.1.0.\r\n  Installing System.Text.Encoding 4.0.11.\r\n  Installing System.Threading.Timer 4.0.1.\r\n  Installing System.Net.Primitives 4.0.11.\r\n  Installing System.Runtime.Handles 4.0.1.\r\n  Installing System.Text.Encoding.Extensions 4.0.11.\r\n  Installing System.IO.Compression.ZipFile 4.0.1.\r\n  Installing System.IO.Compression 4.1.0.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.props.\r\n  Generating MSBuild file /mvcapp/obj/mvcapp.csproj.nuget.g.targets.\r\n  Restore completed in 44.04 sec for /mvcapp/mvcapp.csproj.\r\n\r\nRestore succeeded.\r\n\r\n\r\nreal    1m8.386s\r\nuser    1m8.010s\r\nsys     0m18.190s\r\nroot@9d1d5e45df6a:/# cd mvcapp/\r\nroot@9d1d5e45df6a:/mvcapp# time dotnet build\r\nMicrosoft (R) Build Engine version 15.7.179.6572 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 557.76 ms for /mvcapp/mvcapp.csproj.\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.dll\r\n  mvcapp -> /mvcapp/bin/Debug/netcoreapp2.1/mvcapp.Views.dll\r\n\r\nBuild succeeded.\r\n    0 Warning(s)\r\n    0 Error(s)\r\n\r\nTime Elapsed 00:02:07.34\r\n\r\nreal    2m11.716s\r\nuser    1m22.990s\r\nsys     0m8.880s\r\nroot@9d1d5e45df6a:/mvcapp#\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/80","RelatedDescription":"Closed issue \"Improving Performance of ARM32 Docker Images with .NET Core Package Cache\" (#80)"},{"Id":"350233220","IsPullRequest":false,"CreatedAt":"2018-08-13T23:50:57","Actor":"richlander","Number":"81","RawContent":null,"Title":"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+","State":"open","Body":"# Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\r\n\r\nAn [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md) was discovered with [.NET Framework 4.7.1](https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/). This issue was resolved earlier this year, with the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/). We recently learned that some applications, including Johnson Controls’ C-CURE 9000 Software, were negatively impacted by this change as this update requires all client and server workstations to be updated simultaneously with the appropriate Microsoft updates. The changes made to .NET Framework 4.7.1 were also integrated into .NET Framework 4.6 and later servicing releases. As a result, this advisory applies to .NET Framework 4.6 and later versions.\r\n\r\nThis advisory is provided so that developers can correctly diagnose this issue and be aware of our guidance. We will continue to update this issue as we have new information to share.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [microsoft/dotnet #832](https://github.com/Microsoft/dotnet/issues/832)\r\n\r\n## Guidance\r\n\r\nThis guidance only applies to customers that have experienced this issue.\r\n\r\nWe have released [an update for .NET Framework 4.6](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/) and later that resolves the issue. **You must deploy the .NET Framework update for this issue to all .NET Framework 4.6+ machines that communicate via serialized objects**. After doing that, cross-machine serialization will work as expected. \r\n \r\nPlease consult your software vendor to understand if this impacts the software you are using.\r\n\r\n## Technical Context\r\n\r\nIn the [May 2018 Preview of Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/15/net-framework-may-2018-preview-of-quality-rollup/), we made a change to the internal type CultureAwareComparer to implement ISerializable. We made the change in order to address [issue with serializing/deserializing a CultureAwareComparer](https://github.com/Microsoft/dotnet/blob/master/releases/net471/KnownIssues/521954%20-%20BCL%20CultureAwareComparer%20with%20ignore%20casing%20on%20serialized%20on%20previous%20versions%20of%20.NET%20do%20not%20correctly%20deserialize%20on%20.NET%204.7.1.md).\r\n\r\nThe issue reported was that a type that contains an instance of CultureAwareComparer was not able to correctly serialize and deserialize across different versions of the .NET Framework. There are a few types in .NET Framework that do this, the most commonly impacted one being the Dictionary<TKey, TValue> type.\r\n \r\nThe change to implement the ISerializable interface had unintended side effects when exchanging this type across different machines. We have had a small number of reports from customers who have been affected.\r\n\r\nA common, but not unique way, of exchanging objects across machines is to use WCF in conjunction with a serializer. One of the common serializers being DataContractSerializer. The side-effect of the change prevented data serialized on systems where the type implements ISerializable to correctly deserialize of systems where the type does NOT implement ISerializable. The same is true of the opposite case, that systems where the type does not implement ISerializable will not correctly deserialize data from systems where the type does implement ISerializable.\r\n\r\nWe have an updated fix that we intend to release within the next month that will remove the implementation of the ISerializable interface on the type and use a different internal mechanism for ensuring the cross-version serialization continues to work as expected. This change addresses the break experienced with WCF.\r\n\r\nThe upcoming fix will remove the implementation of the ISerializable interface on the type and use a different mechanism for ensuring the cross-version serialization of that type continues to work. This change addresses the break experienced with WCF.\r\n\r\n## Symptoms\r\n\r\nAn application that is affected by this issue will most likely crash when trying to deserialize an object. It may print or log an error message similar to the following one:\r\n\r\n```\r\nThe formatter threw an exception while trying to deserialize the message: \r\nThere was an error while trying to deserialize parameter . The InnerException message was ''EndElement' 'Comparer' from namespace '' is not expected. Expecting element '_compareInfo'.'.  Please see InnerException for more details.\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/81","RelatedDescription":"Open issue \"Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+\" (#81)"},{"Id":"348162872","IsPullRequest":false,"CreatedAt":"2018-08-07T04:26:40","Actor":"richlander","Number":"79","RawContent":null,"Title":"August 2018 .NET Updates","State":"open","Body":"# August 2018 .NET Updates\r\n\r\nThe following .NET updates were released in August 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [August 2018 .NET Framework Security and Quality Rollup - August 14, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/)\r\n* [Advisory serializing/deserializing a CultureAwareComparer with .NET Framework 4.6+](https://github.com/dotnet/announcements/issues/81)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [August 2018 Preview of Quality Rollup - August 30, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/08/30/net-framework-august-2018-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core August 2018 Update - August 21, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.3/2.1.3.md)\r\n* [.NET Core 2.1.400 SDK Update - August 14, 2018](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.400-SDK/2.1.400-sdk.md)\r\n\r\n## End of Support for Operating System Versions\r\n\r\n.NET Core does not support systems that are out of support. The following operating systems are now out of support. To stay supported, move to a [later version of the given operating system](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md).\r\n\r\n* [Debian 8 -- Jessie](https://lists.debian.org/debian-security-announce/2018/msg00132.html)\r\n* [Ubuntu 17.10 -- Artful Aardvark](https://lists.ubuntu.com/archives/ubuntu-announce/2018-July/000232.html)\r\n\r\nSee [Debian Jessie End of Life -- Impact on .NET Core Docker Images](https://github.com/dotnet/announcements/issues/78)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [July 2018](https://github.com/dotnet/announcements/issues/76)\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)","Url":"https://github.com/dotnet/announcements/issues/79","RelatedDescription":"Open issue \"August 2018 .NET Updates\" (#79)"},{"Id":"348161534","IsPullRequest":false,"CreatedAt":"2018-08-07T04:18:01","Actor":"richlander","Number":"78","RawContent":null,"Title":"Debian Jessie End of Life -- Impact on .NET Core Docker Images","State":"open","Body":"# Debian Jessie End of Life -- Impact on .NET Core Docker Images\r\n\r\nDebian Jessie (AKA Debian 8) is now [out of support](https://lists.debian.org/debian-security-announce/2018/msg00132.html). Debian Jessie is no longer a supported operating system for .NET Core. Docker users need to switch to Debian Stretch-based (AKA Debian 9) images to stay in support.\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #647](https://github.com/dotnet/dotnet-docker/issues/647)\r\n\r\n## Context\r\n\r\nJessie-based images are currently provided for .NET Core 1.0, 1.1 and 2.0. .NET Core 1.0 and 1.1 expose multi-arch tags, such as `1.0-runtime` and `1.1-sdk`, that support Debian Jessie. When pulled for a Linux Docker daemon (on Linux or Windows), these tags pull Jessie-based images. .NET Core 2.0 supports Jessie, but it is not the default. .NET Core 2.0 multi-arch tags, such as `2.0-runtime` and `2.0-sdk`, pull Debian Stretch-based images, when pulled for a Linux Docker daemon. We made a conscious decision with .NET Core 2.0 to move off of Jessie as the default to avoid this problem, based the Jessie 2018 EOL date. .NET Core 2.1 does not support Jessie, only Stretch.\r\n\r\nWe recently posted about our policy for underlying operating system dependencies with Docker:\r\n\r\n> For each major and minor .NET version, we may take a new major operating system version dependency. As I mentioned earlier, we adopted Debian 9 as the base image for .NET Core 2.0. We stayed with Debian 9 for .NET Core 2.1, since Debian 10 (AKA “Buster”) has not been released. Debian 9 will remain the default base image for .NET Core 2.1 for the life of .NET Core 2.1. **Once we adopt an underlying operating system major version, we will not change it for the life of that given .NET release.**\r\n\r\nSource: https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/\r\n\r\n## Plan\r\n\r\nWe will continue to re-build .NET Core 1.0 and 1.1 multi-arch tags on top of Jessie for the remaining [supported lifetime of .NET Core 1.0 and 1.1](https://github.com/dotnet/core/blob/master/microsoft-support.md). We will also provide a Stretch-based image for .NET Core 1.1. This tag will look like the following: `1.1-runtime-stretch` or `1.1.9-sdk-stretch`. This is same format that Jessie has used.\r\n\r\nWe will produce Jessie-based images for NET Core 2.0 until October 2018, which is when [.NET Core 2.0 support ends](https://github.com/dotnet/core/blob/master/microsoft-support.md). .NET Core 2.0 multi-arch tags support Debian Stretch, not Jessie, as described above.\r\n\r\nIn summary, .NET Core is no longer supported on Debian Jessie, with Docker or otherwise. We will produce Docker images for Jessie until .NET Core 1.0, 1.1 and 2.0 support ends, respectively, to avoid breaking applications. This aligns with the policy defined above, per [Staying up-to-date with .NET Container Images](https://blogs.msdn.microsoft.com/dotnet/2018/06/18/staying-up-to-date-with-net-container-images/).\r\n\r\n## Affected Repos\r\n\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/)\r\n* [microsoft/dotnet-nightly](https://hub.docker.com/r/microsoft/dotnet-nightly/)\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)","Url":"https://github.com/dotnet/announcements/issues/78","RelatedDescription":"Open issue \"Debian Jessie End of Life -- Impact on .NET Core Docker Images\" (#78)"},{"Id":"345028102","IsPullRequest":false,"CreatedAt":"2018-07-26T22:31:32","Actor":"leecow","Number":"77","RawContent":null,"Title":"https://dot.net now using TLS 1.2-only","State":"open","Body":"Earlier today, https://dot.net switched to using TLS 1.2-only. Most Windows Powershell instances default to TLS 1.1 and will thus fail with `wget : The underlying connection was closed: An unexpected error occurred on a send. trying to run the previous command.`\r\n\r\nAn example of a PowerShell script fix can be seen in https://github.com/dotnet/docs/pull/6689","Url":"https://github.com/dotnet/announcements/issues/77","RelatedDescription":"Open issue \"https://dot.net now using TLS 1.2-only\" (#77)"},{"Id":"343360319","IsPullRequest":false,"CreatedAt":"2018-07-21T22:29:05","Actor":"richlander","Number":"76","RawContent":null,"Title":"July 2018 .NET Updates","State":"open","Body":"# July 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework 4.7.2 is available on Windows Update, WSUS and MU Catalog](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-framework-4-7-2-is-available-on-windows-update-wsus-and-mu-catalog/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3632](https://blogs.msdn.microsoft.com/dotnet/2018/07/18/announcing-net-framework-4-8-early-access-build-3632/)\r\n* [Advisory on July 2018 .NET Framework Updates](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/)\r\n* [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/10/net-core-july-2018-update/)\r\n\r\n## .NET Core Support Policies\r\n\r\n* [Microsoft Support for .NET Core](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n* [.NET Core Supported OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)\r\n\r\n## Previous Updates\r\n\r\n* [June 2018](https://github.com/dotnet/announcements/issues/75)\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n","Url":"https://github.com/dotnet/announcements/issues/76","RelatedDescription":"Open issue \"July 2018 .NET Updates\" (#76)"},{"Id":"343360017","IsPullRequest":false,"CreatedAt":"2018-07-21T22:22:25","Actor":"richlander","Number":"75","RawContent":null,"Title":"June 2018 .NET Updates","State":"open","Body":"# June 2018 .NET Updates\r\n\r\nThe following .NET updates were released in June 2018.\r\n\r\n## .NET Framework \r\n\r\n* [.NET Framework June 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/06/13/net-framework-june-2018-security-and-quality-rollup/)\r\n* [Announcing .NET Framework 4.8 Early Access build 3621!](https://blogs.msdn.microsoft.com/dotnet/2018/06/06/announcing-net-framework-4-8-early-access-build-3621/)\r\n\r\n## .NET Core\r\n\r\n* [.NET Core 2.1 June Update](https://blogs.msdn.microsoft.com/dotnet/2018/06/22/net-core-2-1-june-update/)\r\n* [.NET Core 2.0 will reach End of Life on October 1, 2018](https://blogs.msdn.microsoft.com/dotnet/2018/06/20/net-core-2-0-will-reach-end-of-life-on-september-1-2018/)\r\n* [.NET Core 1.0 and 1.1 EOL Dates Documented](https://github.com/dotnet/core/blob/master/microsoft-support.md)\r\n\r\n## Previous Updates\r\n\r\n* [May 2018](https://github.com/dotnet/announcements/issues/68)\r\n* [April 2018](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/75","RelatedDescription":"Open issue \"June 2018 .NET Updates\" (#75)"},{"Id":"343283437","IsPullRequest":false,"CreatedAt":"2018-07-21T00:56:48","Actor":"richlander","Number":"74","RawContent":null,"Title":"Advisory on July 2018 .NET Framework Updates","State":"open","Body":"# Advisory on July 2018 .NET Framework Updates\r\n\r\nUpdated: 08/14/2018\r\n\r\n> A new [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/) has been released that **resolves this advisory for all supported Windows versions**.\r\n\r\n~~A new [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) has been released that resolves this advisory. See Guidance section.~~\r\n\r\n~~Guidance has changed for Windows 7, Windows Server 2008 and Windows Server 2008 R2. See Guidance section.~~\r\n\r\nThe [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) was released earlier this month. We have received multiple customer reports of [applications that fail to start or don't run correctly](https://support.microsoft.com/en-us/help/4345913) after installing the July 2018 update. These reports are specific to applications that initialize a COM component and run with restricted permissions.\r\n\r\nWe have stopped distributing the .NET Framework July 2018 updates on Windows Update and are actively working on fixing and re-shipping this month's updates. If you installed the July 2018 update and have not yet seen any negative behavior, we recommend that you leave your systems as-is but closely monitor them and ensure that you apply upcoming .NET Framework updates.\r\n\r\nAs a team, we regret that this release was shipped with this flaw. This release was tested using our regular and extensive testing process. We discovered while investigating this issue that we have a test hole for the specific combination of COM activation and restricted permissions, including impersonation. We will be mitigating that gap going forward. Again, we are sorry for any inconvenience that this product flaw has caused.\r\n\r\nWe will continue to update this issue and [post](https://blogs.msdn.microsoft.com/dotnet/2018/07/20/advisory-on-july-2018-net-framework-updates/) as we have new information.\r\n\r\n## Discussion\r\nPlease share your thoughts/experience on this advisory and see what others are saying at:\r\n\r\n* [microsoft/dotnet #811](https://github.com/Microsoft/dotnet/issues/811)\r\n\r\n## Guidance\r\n\r\nWe strongly recommend that you install [.NET Framework August 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/08/14/august-2018-security-and-quality-rollup/).\r\n\r\n~~We recommend that you install [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) on your systems if you experienced the symptoms described in this advisory. If you did not experience these symptoms, we recommend you wait to update your machines until the next regular update, in August.~~\r\n\r\n~~On Windows 7, Windows Server 2008, and Windows Server 2008 R2, we have found that the combination of [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356) and  [.NET Framework July 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/07/30/net-framework-july-2018-update/) do not resolve all symptoms. On these Windows versions, if you are experiencing these symptoms after installing this combination of patches, we recommend that you uninstall (only) the Monthly Rollup patch and then install the appropriate Security Only patch listed at [July 2018 Security and Quality Rollup updates for .NET Framework](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2018-8356).~~\r\n\r\n## Technical Context\r\n\r\nThe .NET Framework runtime uses the process token to determine whether the process is being run within an elevated context. These system calls can fail if the required process inspection permissions are not present. This causes an “access denied\" error.\r\n\r\n## Symptoms\r\n\r\nA COM component fails to load because of “access denied,” “class not registered,” or “internal failure occurred for unknown reasons” errors. \r\n\r\nThe most commonly reported failure results in the following error message:\r\n\r\n```console\r\nException type: System.UnauthorizedAccessException\r\nMessage: Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\n### Sharepoint\r\n\r\nWhen users browse to a SharePoint site they may see the following HTTP 403 message:\r\n\r\n```console\r\n\"The Web Site declined to show this webpage\"\r\n```\r\n\r\nThe SharePoint ULS Logs will contain a message like the following:  \r\n\r\n```console\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 0000       High                UnauthorizedAccessException for the request. 403 Forbidden will be returned. Error=An error occurred creating the configuration section handler for system.serviceModel/extensions: Could not load file or assembly <AssemblySignature>  or one of its dependencies. Access is denied. (C:\\Windows\\Microsoft.NET\\Framework64\\v2.0.50727\\Config\\machine.config line 180)    \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General b6p2      VerboseEx                Sending HTTP response 403:403 FORBIDDEN.      \r\n\r\nw3wp.exe (0x1894)         0x0B94  SharePoint Foundation  General 8nca       Verbose                Application error when access /, Error=Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED))\r\n```\r\n\r\nWhen crawling a people content source, the request may fail with the following entry logged to the SharePoint ULS Log: \r\n\r\n```console\r\nmssearch.exe (0x118C) 0x203C SharePoint Server Search Crawler:Gatherer Plugin cd11 Warning The start address sps3s://<URLtoSite> cannot be crawled.  Context: Application 'Search_Service_Application', Catalog 'Portal_Content'  Details:  Class not registered   (0x80040154)  \r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive error \"ActiveX component can't create object\" \r\n\r\n.NET Application creates instance of .NET COM application within an Impersonation Context may receive error \"0x80040154 (REGDB_E_CLASSNOTREG)\"\r\n```\r\n\r\n### BizTalk Server Administration Console\r\n\r\nBizTalk Server Administration Console fails to launch properly with the following errors: \r\n\r\n```console\r\nAn internal failure occurred for unknown reasons. (WinMgmt) \r\n\r\nProgram Location:  \r\n\r\n   at System.Runtime.InteropServices.Marshal.ThrowExceptionForHRInternal(Int32 errorCode, IntPtr errorInfo) \r\n\r\n   at System.Management.ManagementObject.Get() \r\n\r\n   at Microsoft.BizTalk.SnapIn.Framework.WmiProvider.SelectInstance\r\n```\r\n\r\n> Warning: The following workarounds may make a computer or a network more vulnerable to attack by malicious users or by malicious software such as viruses. We do not recommend these workarounds but are providing this information so that you can implement the workarounds at your own discretion. Use these workarounds at your own risk.\r\n\r\nUse the following guidance as a workaround:\r\n\r\n* Add “NETWORK SERVICE” to the local Administrators group. \r\n\r\n### IIS with Classic ASP\r\n\r\nIIS Hosted Classic ASP calling CreateObject for .NET COM objects may receive the following error: \"ActiveX component can't create object\". Use the following guidance as a workaround.\r\n\r\n* If your web site uses Anonymous Authentication, change the Web Site Anonymous Authentication credentials to use the \"Application pool identity\"\r\n* If your site uses Basic Authentication, log into the application once as the application pool identity and then create an instance of the .NET COM component. All subsequent activations for that .NET COM component should succeed, for any user.\r\n\r\n### .NET applications using COM and impersonation\r\n\r\n.NET Applications that creates instances of .NET COM application within an Impersonation Context may receive the following error: \"0x80040154 (REGDB_E_CLASSNOTREG)\". Use the following guidance as a workaround.\r\n\r\n* Create an instance of the .NET COM component prior to the impersonation context call. Later impersonated create instance calls should work as expected.\r\n* Run the .NET Application in the context of the impersonated user\r\n* Avoid using Impersonation when creating the .NET COM object","Url":"https://github.com/dotnet/announcements/issues/74","RelatedDescription":"Open issue \"Advisory on July 2018 .NET Framework Updates\" (#74)"},{"Id":"339929129","IsPullRequest":false,"CreatedAt":"2018-07-10T17:00:37","Actor":"blowdart","Number":"73","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a security feature bypass vulnerability that exists when .NET Core does not correctly validate certificates. An attacker who successfully exploited this vulnerability could present an expired certificate when challenged.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core applications handle certificate validation.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/wcf/issues/3009\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not use Windows Communication Foundation you are not affected.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, or ASP.NET Core based application that uses System.Private.ServiceModel with a version of 4.5.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Private.ServiceModel | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 |  4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Duplex | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.443 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Http | 4.0.0, 4.0.10, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.NetTcp | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.3 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Primitives | 4.0.0, 4.1.0, 4.1.1 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.1.2 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\nSystem.ServiceModel.Security | 4.0.0, 4.0.1, 4.0.2 <br /> 4.3.0, 4.3.1 <br /> 4.4.0, 4.4.1, 4.4.2 <br /> 4.5.0, 4.5.1 | 4.0.4 or later <br /> 4.3.3 or later <br /> 4.4.4 or later <br /> 4.5.3 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n### <a name=\"project-format\"></a>.NET Core Project formats\r\n\r\n.NET Core has two different project file formats, depending on what software created the project.\r\n\r\n1. `project.json` is the format used in .NET Core 1.0 and Microsoft Visual Studio 2015.\r\n2. `csproj` is the format used in .NET Core 1.1, .NET Core 2.0 and Microsoft Visual Studio 2017.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your `csproj` file or your `project.json` file. They can be fixed by [editing the project file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n The `System.Private.ServiceModel` package is not meant to be directly depended on and will not appear in your direct dependency list.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in three ways, depending on your [project format](#project-format):\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the `project.assets.json` file contained in the obj directory of your project for `csproj` based projects *OR*.\r\n* By examining the `project.lock.json` file contained in the root directory of your project for `project.json` based projects.\r\n\r\nThe `project.assets.json` and `project.lock.json` files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies-vs2017\"></a>Fixing direct dependencies in a csproj based project / Visual Studio 2017\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.ServiceModel.Http` to the appropriate [fixed package number](#affected-software) for your major version. Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.4.3\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\n#### <a name=\"direct-dependencies-vs2015\"></a> Fixing Direct Dependencies in project.json based project / Visual Studio 2015\r\n\r\nOpen your `project.json` file in your editor. Look for the dependencies section. Below is an example dependencies section:\r\n\r\n``` json\r\n    \"dependencies\": {\r\n      \"Microsoft.NETCore.App\": {\r\n        \"version\": \"1.0.1\",\r\n        \"type\": \"platform\"\r\n      },\r\n     \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n     \"System.ServiceModel.Http\" : \"4.0.0\"\r\n    }\r\n```\r\n\r\nThis example has three direct dependencies: `Microsoft.NETCore.App`, `Microsoft.AspNetCore.Mvc.Core` and `System.ServiceModel.Http`.\r\n\r\n`Microsoft.NetCore.App` is the platform the application targets, you should ignore this. The other packages expose their version to the right of the package name. In our example, our non-platform packages are version 1.0.1.\r\n\r\nReview your direct dependencies for any instance of the packages and versions listed above. In the example above, there is a direct dependency on a vulnerable package, `System.ServiceModel.Http` version 4.4.0.\r\n\r\nTo update to the fixed package, change the version number to be the appropriate package for your release. In the example, this would be updating `System.ServiceModel.Http` to 4.4.3.\r\n\r\nAfter updating the vulnerable package versions, save your `project.json` file.\r\n\r\nThe dependencies section in our example `project.json` would now look as follows:\r\n\r\n```json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc.Core\": \"1.0.6\",\r\n    \"System.ServiceModel.Http \": \"4.4.3\"\r\n  }\r\n```\r\n\r\nIf you are using Visual Studio and save your updated `project.json` file, Visual Studio will restore the new package version. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependency.\r\n\r\nAfter you have addressed all of your direct dependencies, you must also review your transitive dependencies.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can review [the `project.assets.json` file](#project-assets-json) or the [the `project.lock.json` file](#project-lock-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a> Manually reviewing project.assets.json (csproj/VS2017)\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.ServiceModel.Http/4.3.0` is a reference to version 4.3.0 of `System.ServiceModel.Http`.\r\n\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.ServiceModel.Http` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.ServiceModel.Http\" Version=\"4.3.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n##### <a name=\"project-lock-json\"></a> Manually reviewing project.lock.json (project.json/VS2015)\r\n\r\nOpen the `project.lock.json` file in your editor. We suggest you use an editor that understands json and allows you to collapse and expand nodes to review this file; both Visual Studio and Visual Studio Code provide this functionality.\r\n\r\nIf you are using Visual Studio the `project.lock.json` file is “under” the `project.json` file. Click the right pointing triangle, ▷, to the left of the `project.json` file to expand the solution tree to expose the `project.lock.json` file. The following image shows a project with the `project.json` file expanded to show the `project.lock.json` file.\r\n\r\n![project lock json](https://cloud.githubusercontent.com/assets/796298/25858179/f6e01200-348f-11e7-8a77-7176d8dd3f03.png)\r\n\r\nSearch the `project.lock.json` file for the vulnerable packages, using the format `packagename/`, using each of the package names from the table above. If you find any vulnerable assembly name in your search examine the line on which they are found, the version number is after the `/` and compare to the vulnerable versions table above. For example a search result that shows `System.ServiceModel.Http/4.0.1` is a reference to v4.0.1 of `System.ServiceModel.Http`.   If your `project.lock.json` file includes references to any of the package versions shown above then you will need to fix the transitive dependencies.\r\n\r\nIf you have not found any reference to a vulnerable version of `System.ServiceModel.Http` this means none of your direct dependencies depend on any vulnerable packages or you have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to any of the vulnerable packages you must add a direct dependency to the updated package to your `project.json` file to override the transitive dependency. Open your `project.json` and find the dependencies section. For example:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nFor each of the vulnerable packages your search returned you must add a direct dependency to the updated version by adding it to the `project.json` file. You do this by adding a new line to the dependencies section, referring the fixed version. For example, if your search showed a transitive reference to the vulnerable `System.ServiceModel.Http` version 1.0.0 you would add a reference to the appropriate fixed version, 1.0.6. Edit the `project.json` file as follows:\r\n\r\n``` json\r\n  \"dependencies\": {\r\n    \"Microsoft.NETCore.App\": {\r\n      \"version\": \"1.0.1\",\r\n      \"type\": \"platform\"\r\n    },\r\n    \"System.ServiceModel.Http\": \"4.1.2\",\r\n    \"Microsoft.AspNetCore.Mvc\": \"1.0.0\"\r\n  }\r\n```\r\n\r\nAfter you have added direct dependencies to the fixed packages, save your `project.json` file.\r\n\r\nIf you are using Visual Studio save your updated `project.json` file and Visual Studio will restore the new package versions. You can see the restore results by opening the Output Window (Ctrl+Alt+O) and changing the Show output from drop-down list to Package Manager.\r\n\r\nIf you are not using Visual Studio open a command line and change to your project directory. Execute the `dotnet restore` command to restore your new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-8356](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-8356)\r\n\r\n### Revisions\r\n\r\nV1.1 (July 23, 2018): Updated package versions, as some assemblies were released unsigned.\r\nV1.0 (July 10, 2018): Advisory published.\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2018-07-23_\r\n","Url":"https://github.com/dotnet/announcements/issues/73","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-8356: .NET Core Security Feature Bypass Vulnerability\" (#73)"},{"Id":"329614193","IsPullRequest":false,"CreatedAt":"2018-06-05T20:33:10","Actor":"huanwu","Number":"72","RawContent":null,"Title":"Introducing dotnet-svcutil.xmlserializer for .NET Core","State":"open","Body":"# Introducing dotnet-svcutil.xmlserializer for .NET Core\r\nOn the full .NET Framework you are able to pre-generate a serialization assembly using the tool svcutil. We are providing similar functionality on .NET Core by releasing the dotnet-svcutil.xmlserializer NuGet package. It pre-generates c# serialization code for the types used by WCF Service Contract in the client applications that can be serialized using the XmlSerializer to improve the startup performance of Xml Serialization when serializing or de-serializing objects of those types using XmlSerializer. \r\nYou can start using the tool today by following the [instructions](https://github.com/dotnet/core/blob/master/samples/dotnet-svcutil.xmlserializer-instructions.md). \r\n\r\n## Discussion \r\nPlease share with us any thoughts of questions that you may have at: \r\n\r\n- dotnet/wcf [#2927](https://github.com/dotnet/wcf/issues/2927)\r\n## Details \r\nWhen to use XmlSerializer with WCF in an app to serialize contract data types, it will generate an XmlSerializer during runtime to do the serialization. You can improve the startup performance of Xml serialization by simply adding the reference of dotnet-svcutil.xmlserializer NuGet package to your project. This tool will generate the serialization code and compile it into an assembly next to your output assembly at build time in advance. This assembly can then be deployed and ran with your application. \r\n\r\nPlease create an issue with your feedback at [dotnet/wcf](https://github.com/dotnet/wcf/issues). We are actively looking to improve the tool and your input is a valuable part of the process. ","Url":"https://github.com/dotnet/announcements/issues/72","RelatedDescription":"Open issue \"Introducing dotnet-svcutil.xmlserializer for .NET Core\" (#72)"},{"Id":"327817883","IsPullRequest":false,"CreatedAt":"2018-05-30T17:02:38","Actor":"MichaelSimons","Number":"71","RawContent":null,"Title":".NET Core 2.1 Docker Image Updates","State":"open","Body":"# .NET Core 2.1 Docker Image Updates\r\n\r\nWe have consolidating the set of Docker Hub repositories that we use for .NET Core and ASP.NET Core. We will use [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) as the only repository that we publish to for .NET Core 2.1 and later releases.\r\n\r\nWe added a set of environment variables to .NET Core images to make it easier to host ASP.NET Core sites at any .NET Core image layer and to enable `dotnet watch` in SDK container images without additional configuration.\r\n\r\nAlpine and ARM32 image variants have been added and are supported.\r\n\r\n[.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/blob/master/samples/README.md) have been moved to the [dotnet/dotnet-docker](https://github.com/dotnet/dotnet-docker) repo. The samples have been updated for .NET Core 2.1. New samples have been added, including [Hosting ASP.NET Core Images with Docker over HTTPS](https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/aspnetcore-docker-https.md).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet/dotnet-docker #560](https://github.com/dotnet/dotnet-docker/issues/560)\r\n\r\n## Details\r\n\r\nThe following changes have been made as part of the .NET Core 2.1 release.\r\n\r\n### Repo consolidation\r\n\r\n.NET Core and ASP.NET Core images will be published to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) Docker Hub repo for .NET Core 2.1 and later releases. Co-location of images improves image discovery. The .NET Core runtime and SDK images are already co-located. We are adding the ASP.NET Core runtime images to the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo as a third image type. We are [no longer producing the microsoft/aspnetcore-build image](https://github.com/aspnet/Announcements/issues/298) with .NET Core 2.1.\r\n\r\nThe following three tags are now available at the [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) repo:\r\n\r\n* `2.1-sdk`\r\n* `2.1-aspnetcore-runtime`\r\n* `2.1-runtime`\r\n\r\n### Environment variables enable new scenarios\r\n\r\nWe added a set of environment variables to .NET Core docker images, for .NET Core 2.1 and later. These environment variables enable more scenarios to work without additional configuration, such as [developing ASP.NET Core applications in a container](https://github.com/dotnet/dotnet-docker/blob/master/samples/aspnetapp/aspnet-docker-dev-in-container.md).\r\n\r\nNew sdk image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/sdk/bionic/amd64/Dockerfile#L28-L32))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n* `DOTNET_USE_POLLING_FILE_WATCHER=true`\r\n\r\nNew Linux runtime-deps image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/runtime-deps/alpine3.7/amd64/Dockerfile#L19-L21))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n\r\nNew Windows runtime image environment variables ([example](https://github.com/dotnet/dotnet-docker/blob/master/2.1/runtime/nanoserver-1709/amd64/Dockerfile#L33-L35))\r\n* `ASPNETCORE_URLS=http://+:80`\r\n* `DOTNET_RUNNING_IN_CONTAINER=true`\r\n\r\n### New image variants\r\n\r\nAlpine and ARM32 image variants have been added and are supported as part of the .NET Core 2.1 release. \r\n\r\nFor Alpine, you must [use specific tags to create Alpine-based images](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/README.md#build-and-run-the-sample-for-alpine-with-docker), such as `2.1-runtime-alpine`. \r\n\r\nFor ARM32, you can use the regular multi-arch tags, like `2.1-runtime` and `2.1-sdk` if you are building on an ARM32 device. If you are building on another type of machine, you need to use ARM32-specific tags for the runtime images you create, such as `2.1-runtime-bionic-arm32v7` (for Ubuntu 18.04).\r\n\r\n### Related repos\r\n\r\nThe following repos are related to this announcement:\r\n\r\n* [microsoft/aspnetcore](https://hub.docker.com/r/microsoft/aspnetcore/)\r\n* [microsoft/aspnetcore-build](https://hub.docker.com/r/microsoft/aspnetcore-build/)\r\n* [microsoft/dotnet/](https://hub.docker.com/r/microsoft/dotnet/)\r\n","Url":"https://github.com/dotnet/announcements/issues/71","RelatedDescription":"Open issue \".NET Core 2.1 Docker Image Updates\" (#71)"},{"Id":"325815293","IsPullRequest":false,"CreatedAt":"2018-05-23T18:04:46","Actor":"mlacouture","Number":"70","RawContent":null,"Title":"Introducing dotnet-svcutil","State":"open","Body":"# Introducing dotnet-svcutil\r\n\r\nThe Microsoft Windows Communication Foundation (WCF) **dotnet-svcutil** tool is a .NET Core CLI tool that retrieves metadata from a web service on a network location or from a WSDL file, and generates a WCF class containing client proxy methods that you can use to access the web service operations.\r\n\r\nSimilarly to the [Service Model Metadata - svcutil](https://docs.microsoft.com/en-us/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe) tool for .NET Framework projects, the **dotnet-svcutil** is a command line tool for generating a web service reference compatible with .NET Core and .NET Standard projects. \r\n\r\nThe **dotnet-svcutil** tool is an alternative option to the [WCF Web Service Reference ](https://docs.microsoft.com/en-us/dotnet/core/additional-tools/wcf-web-service-reference-guide)Visual Studio connected service provider which first shipped with Visual Studio 2017 v15.5.  The **dotnet-svcutil** tool as a .NET Core CLI tool, however, can be run on multiple platforms like Linux and MacOS in addition to Windows.\r\n\r\n# Discussion\r\nPlease share your thoughts with us by commenting on GitHub issue dotnet/wcf#2894\r\n","Url":"https://github.com/dotnet/announcements/issues/70","RelatedDescription":"Open issue \"Introducing dotnet-svcutil\" (#70)"},{"Id":"321374728","IsPullRequest":false,"CreatedAt":"2018-05-08T22:56:33","Actor":"richlander","Number":"68","RawContent":null,"Title":"May 2018 .NET Updates","State":"open","Body":"# May 2018 .NET Updates\r\n\r\nThe following .NET updates were released this month. This issue will be updated if there are any additional updates during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework May 2018 Preview of Quality Rollup for Windows 10 April 2018 Update (version 1803)](https://blogs.msdn.microsoft.com/dotnet/2018/05/23/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-april-2018-update-version-1803/)\r\n* [.NET Framework May 2018 Preview of Quality Rollup for Windows 10 1709 (Fall Creators Update)](https://blogs.msdn.microsoft.com/dotnet/2018/05/21/net-framework-may-2018-preview-of-quality-rollup-for-windows-10-1709-fall-creators-update/)\r\n* [.NET Framework May 2018 Security and Quality Rollup for Windows 10](https://blogs.msdn.microsoft.com/dotnet/2018/05/17/net-framework-may-2018-preview-of-quality-rollup-for-windows-10/)\r\n* [.NET Framework May 2018 Security and Quality Rollup](https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-framework-may-2018-security-and-quality-rollup/)\r\n* [microsoft/dotnet-framework](https://hub.docker.com/r/microsoft/dotnet-framework/) and related Docker images were updated for [Windows Server, version 1803](https://docs.microsoft.com/en-us/windows-server/get-started/get-started-with-1803).\r\n\r\n## .NET Core\r\n\r\n* [Announcing .NET Core 2.1](https://blogs.msdn.microsoft.com/dotnet/2018/05/30/announcing-net-core-2-1/)\r\n* [.NET Core May 2018 Update](https://blogs.msdn.microsoft.com/dotnet/2018/05/08/net-core-may-2018-update/)\r\n* [.NET Core 2.1 RC1](https://blogs.msdn.microsoft.com/dotnet/2018/05/07/announcing-net-core-2-1-rc-1/)\r\n* [microsoft/dotnet](https://hub.docker.com/r/microsoft/dotnet/) and related Docker images were updated for [Windows Server, version 1803](https://docs.microsoft.com/en-us/windows-server/get-started/get-started-with-1803).\r\n\r\n## Previous Updates\r\n\r\n* [April 2018 .NET Updates](https://github.com/dotnet/announcements/issues/64)\r\n* [February 2018 Security and Quality Updates](https://github.com/dotnet/announcements/issues/59)","Url":"https://github.com/dotnet/announcements/issues/68","RelatedDescription":"Open issue \"May 2018 .NET Updates\" (#68)"},{"Id":"321269154","IsPullRequest":false,"CreatedAt":"2018-05-08T17:03:39","Actor":"blowdart","Number":"67","RawContent":null,"Title":"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and .NET native version 2.0. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability that exists when .NET Framework and .NET Core improperly process XML documents. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Framework, .NET Core, or .NET native application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Framework, .NET Core, and .NET native applications handle XML document processing.\r\n\r\nIf your application is an ASP.NET Core application, developers are also advised to update to [ASP.NET Core 2.0.8](https://www.nuget.org/packages/Microsoft.AspNetCore.All/2.0.8).\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/29578\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\n* If an application does not process signed XML, it is not affected by this vulnerability.\r\n* If your application targets .NET Core 1.x or .NET native 1.x, it is not affected as the vulnerable package is not available for these platforms.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core, .NET native, or ASP.NET Core based application that uses System.Security.Cryptography.Xml with a version of 4.4.1 or earlier.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ---------------- | -------------------------\r\nSystem.Security.Cryptography.Xml | ≤4.4.1 |  4.4.2 or later\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\n.NET Core has two types of dependencies: direct and transitive. Direct dependencies are dependencies where you specifically add a package to your project, transitive dependencies occur when you add a package to your project that in turn relies on another package.\r\n\r\nFor example, the `Microsoft.AspNetCore.Mvc` package depends on the `Microsoft.AspNetCore.Mvc.Core` package. When you add a dependency on `Microsoft.AspNetCore.Mvc` in your project, you're taking a transitive dependency on `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\nAny application that has a direct or transitive dependency on the [affected package](#affected-software) can be exposed to the vulnerability if it does not meet any of the [mitigation factors](#mitigation-factors).\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n---\r\n\r\nIf you're targeting ASP.NET Core 2.0 and using the `Microsoft.AspNetCore.All` metapackage:\r\n\r\n* Update its version number to [2.0.8](https://www.nuget.org/packages/Microsoft.AspNetCore.All/2.0.8) to pull in updated packages that update their transitive dependencies to the fixed version of `System.Security.Cryptography.Xml`.\r\n\r\n---\r\n\r\n.NET Core projects have two types of dependencies: direct and transitive. You must update your projects using the following instructions to address both types of dependency.\r\n\r\n#### Direct dependencies\r\n\r\nDirect dependencies are discoverable by examining your *csproj* file. They can be fixed by [editing the csproj file](#direct-dependencies) or using NuGet to update the dependency.\r\n\r\n#### Transitive dependencies\r\n\r\nTransitive dependencies occur when you add a package to your project that in turn relies on another package. For example, if Contoso publishes a package `Contoso.Utility` which, in turn, depends on `Contoso.Internals` and you add the `Contoso.Utility` package to your project now your project has a direct dependency on `Contoso.Utility` and, because `Contoso.Utility` depends 'Contoso.Internals', your application gains a transitive dependency on the `Contoso.Internals` package.\r\n\r\nTransitive dependencies are reviewable in two ways:\r\n\r\n* In the Visual Studio Solution Explorer window, which supports searching.\r\n* By examining the *project.assets.json* file contained in the obj directory of your project.\r\n\r\nThe *project.assets.json* files are the authoritative list of all packages used by your project, containing both direct and transitive dependencies.\r\n\r\n#### <a name=\"direct-dependencies\"></a>Fixing direct dependencies\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project. Look for `PackageReference` elements. The following shows an example project file:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.1\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nThe preceding example has a reference to the [vulnerable package](#affected-software), as seen by the single `PackageReference` element. The name of the package is in the `Include` attribute.\r\nThe package version number is in the `Version` attribute. The previous example shows a single direct dependency on `System.Security.Cryptography.Xml` version 4.4.1.\r\n\r\nTo update the version to the secure package, change the version number to the updated package version as listed on the table [previously](#affected-software).\r\nIn this example, update `System.Security.Cryptography.Xml` to a [fixed package number](#affected-software). Save the *csproj* file. The example *csproj* now looks as follows:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <TargetFramework>netcoreapp2.0</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nIf you're using Visual Studio and you save your updated *csproj* file, Visual Studio will restore the new package version.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the updated dependencies.\r\n\r\nNow recompile your application. If after recompilation you see a *Dependency conflict warning*, you must update your other direct dependencies to versions that take a dependency on the updated package.\r\n\r\nAfter you've addressed all of your direct dependencies, you must review your transitive dependencies.\r\n\r\n#### Discovering and fixing transitive dependencies\r\n\r\nThere are two ways to view transitive dependencies. You can either [use Visual Studio’s Solution Explorer](#vs-solution-explorer), or you can [review the *project.assets.json* file](#project-assets-json).\r\n\r\n##### <a name=\"vs-solution-explorer\"></a>Using Visual Studio Solution Explorer\r\n\r\nTo use Solution Explorer, open the project in Visual Studio 2017, and then press Ctrl+; to activate the search in Solution Explorer. Search for the [vulnerable package](#affected-software) and make a note of the version numbers of any results you find.\r\n\r\nFor example, searching for `Microsoft.AspNetCore.Mvc.Core` in an example project that contains a package that takes a dependency on `Microsoft.AspNetCore.Mvc` shows the following results in Visual Studio 2017:\r\n\r\n![Screenshot of search results in Visual Studio 2017](https://cloud.githubusercontent.com/assets/796298/25858816/8ecdc2b4-3491-11e7-9363-746804bb9832.png)\r\n\r\nThe search results appear as a tree. In the previous results, you can see that a reference to `Microsoft.AspNetCore.Mvc.Core` version 1.1.2 is discovered.\r\n\r\nUnder the Dependencies node is a NuGet node. Under the NuGet node is the list of packages you have directly taken a dependency on and their versions.\r\nIn screenshot, the application takes a direct dependency on `Microsoft.AspNetCore.Mvc`. `Microsoft.AspNetCore.Mvc` in turn has leaf nodes that list its dependencies and their versions.\r\nThe `Microsoft.AspNetCore.Mvc` package takes a dependency on a version of `Microsoft.AspNetCore.Mvc.ApiExplorer`, that in turn takes a dependency on a version of `Microsoft.AspNetCore.Mvc.Core`.\r\n\r\n##### <a name=\"project-assets-json\"></a>Manually reviewing project.assets.json\r\n\r\nOpen the *project.assets.json* file from your project’s obj directory in your editor. We suggest you use an editor that understands JSON and allows you to collapse and expand nodes to review this file.\r\nVisual Studio and Visual Studio Code provide JSON friendly editing.\r\n\r\nSearch the *project.assets.json* file for the [vulnerable package](#affected-software), using the format `packagename/` for each of the package names from the preceding table. If you find the assembly name in your search:\r\n\r\n* Examine the line on which they are found, the version number is after the `/`.\r\n* Compare to the [vulnerable versions table](#affected-software).\r\n\r\nFor example, a search result that shows `System.Security.Cryptography.Xml/4.4.0` is a reference to version 4.4.0 of `System.Security.Cryptography.Xml`.\r\nIf your *project.assets.json* file includes references to the [vulnerable package](#affected-software), then you need to fix the transitive dependencies.\r\n\r\n##### Fixing transitive dependencies\r\n\r\nIf you have not found any reference to any vulnerable packages, this means either\r\n\r\n* None of your direct dependencies depend on any vulnerable packages, or\r\n* You have already fixed the problem by updating the direct dependencies.\r\n\r\nIf your transitive dependency review found references to the [vulnerable package](#affected-software), you must add a direct dependency to the updated package to your *csproj* file to override the transitive dependency.\r\n\r\nOpen *projectname.csproj* in your editor. If you're using Visual Studio, right-click the project and choose **Edit projectname.csproj** from the context menu, where projectname is the name of your project.\r\nLook for `PackageReference` nodes, for example:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nYou must add a direct dependency to the updated version of the [vulnerable package](#affected-software) by adding it to the *csproj* file.\r\nYou do this by adding a new line to the dependencies section, referencing the fixed version.\r\nFor example, if your search showed a transitive reference to a vulnerable `System.Security.Cryptography.Xml` version, you'd add a reference to the [fixed package number](#affected-software).\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk.Web\">\r\n  <PropertyGroup>\r\n    <TargetFramework>net461</TargetFramework>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"System.Security.Cryptography.Xml\" Version=\"4.4.2\" />\r\n    <PackageReference Include=\"ThirdParty.NotUpdatedYet\" Version=\"2.0.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\nAfter you've added the direct dependency reference, save your *csproj* file.\r\n\r\nIf you're using Visual Studio, save your updated *csproj* file and Visual Studio will restore the new package versions.\r\nYou can see the restore results by opening the **Output** window (Ctrl+Alt+O) and changing the **Show output from** drop-down list to **Package Manager**.\r\n\r\nIf you're not using Visual Studio, open a command line and change to your project directory. Execute the `dotnet restore` command to restore the new dependencies.\r\n\r\n#### Rebuilding your application\r\n\r\nFinally you must rebuild your application, test, and redeploy.\r\n\r\n---\r\n\r\nIf you're targeting .NET native for a Universal Windows Platform (UWP) application, you should update your dependencies and republish your application.\r\n\r\nIf you submit an application to the Windows Store with an outdated reference, the store will update the reference automatically, which has the potential for compatibility issues. Thus, we recommend updating your application directly and testing its functionality before resubmitting.\r\n\r\n---\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### External Links\r\n\r\n[CVE-2018-0787](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-CVE-2018-0765)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 8, 2018): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2018-05-08_","Url":"https://github.com/dotnet/announcements/issues/67","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2018-0765: .NET Core Denial Of Service Vulnerability\" (#67)"},{"Id":"319701474","IsPullRequest":false,"CreatedAt":"2018-05-02T20:31:57","Actor":"MichaelSimons","Number":"66","RawContent":null,"Title":".NET Framework Docker Samples have moved","State":"open","Body":"# .NET Framework Docker Samples have moved\r\nThe .NET Framework Docker samples have moved to the [samples folder of Microsoft/dotnet-framework-docker](https://github.com/Microsoft/dotnet-framework-docker/tree/master/samples).\r\n\r\n## Discussion\r\n\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [Microsoft/dotnet-framework-docker #128](https://github.com/Microsoft/dotnet-framework-docker/issues/128)\r\n\r\n## Details\r\nThe .NET Framework Docker samples have been enhanced and moved to the [samples folder of Microsoft/dotnet-framework-docker](https://github.com/Microsoft/dotnet-framework-docker/tree/master/samples).\r\n\r\n- https://github.com/Microsoft/dotnet-framework-docker/pull/126\r\n- https://github.com/Microsoft/dotnet-framework-docker-samples/issues/22\r\n\r\nThe samples show various ways to use the .NET Framework and Docker together. You can use the samples as the basis of your own Docker images or just to play.\r\n\r\nThe samples exercise various levels of functionality. The [.NET Framework Docker sample](https://github.com/Microsoft/dotnet-framework-docker/blob/master/samples/dotnetapp/README.md) includes the most functionality, including build, unit testing, and pushing images to a container registry. The [ASP.NET Docker sample](https://github.com/Microsoft/dotnet-framework-docker/blob/master/samples/aspnetapp/README.md) includes instructions for testing images with [Azure Container Instances](https://azure.microsoft.com/services/container-instances/). The samples include detailed instructions for use with and without Docker.\r\n","Url":"https://github.com/dotnet/announcements/issues/66","RelatedDescription":"Open issue \".NET Framework Docker Samples have moved\" (#66)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1091393276047876097","CreatedAt":"2019-02-01T17:50:08+00:00","UserScreenname":"dotnet","Text":"Into a different kind of curlies? Our C++ friends are hiring too! https://t.co/CWYhdMAqnt","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":19,"FavoriteCount":5,"RawContent":null},{"Id":"1090788385487171584","CreatedAt":"2019-01-31T01:46:31+00:00","UserScreenname":"dotnet","Text":"The perks of working in the beautiful Pacific Northwest. https://t.co/RlSBioXtmL","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":59,"FavoriteCount":9,"RawContent":null},{"Id":"1090316959105740800","CreatedAt":"2019-01-29T18:33:14+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core updates in .NET Core 3.0 Preview 2 https://t.co/fTITKUpdtp","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":128,"FavoriteCount":65,"RawContent":null},{"Id":"1090308114073571328","CreatedAt":"2019-01-29T17:58:05+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 3 Preview 2 https://t.co/OgRjiaV6ys","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":405,"FavoriteCount":280,"RawContent":null}]}},"RunOn":"2019-02-05T05:30:47.4031425Z","RunDurationInMilliseconds":19915}