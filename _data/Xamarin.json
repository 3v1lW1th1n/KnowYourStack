{"Data":{"Blog":{"FeedItems":[{"Title":"Xamarin Podcast: Visual Studio 2019 is released!","PublishedOn":"2019-04-12T17:14:51+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in Xamarin and cloud development.\n\nPodcast Highlights\nVisual Studio 2019 has been released and is...","Href":"https://devblogs.microsoft.com/xamarin/xamarin-podcast-visual-studio-2019-is-released/","RawContent":null},{"Title":"Sharing Files & Email Attachments with Xamarin.Essentials Preview Features","PublishedOn":"2019-04-10T19:15:56+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In the recent release of Xamarin.Essentials (1.1.0), we introduced several new stable features including detect shake, browser customization, and a plethora of platform helpers. The team has also been...","Href":"https://devblogs.microsoft.com/xamarin/sharing-files-attachments-xamarin-essentials/","RawContent":null},{"Title":"Getting Started With WorkManager","PublishedOn":"2019-04-08T18:12:29+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"If you need to schedule a background task on Android, you&#8217;re probably familiar with all of the various ways to accomplish this such as:\n\nGoogle Cloud Messaging\nFirebase Cloud...","Href":"https://devblogs.microsoft.com/xamarin/getting-started-workmanager/","RawContent":null},{"Title":"Visual Challenge Conquered!","PublishedOn":"2019-04-03T19:03:49+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post Visual Challenge Conquered! appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/visual-challenge-conquered/","RawContent":null},{"Title":"What’s New for Xamarin Developers in Visual Studio 2019","PublishedOn":"2019-04-02T19:56:18+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"The post What&#8217;s New for Xamarin Developers in Visual Studio 2019 appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/xamarin-visual-studio-2019/","RawContent":null},{"Title":"Xamarin and .NET Developer Events in April","PublishedOn":"2019-04-01T19:05:22+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post Xamarin and .NET Developer Events in April appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/xamarin-and-net-developer-events-in-april/","RawContent":null},{"Title":"GlideX For Fast Images on Android","PublishedOn":"2019-03-28T16:01:13+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"The post GlideX For Fast Images on Android appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/glidex-fast-images-android/","RawContent":null},{"Title":"Introducing the Xamarin.iOS Interpreter","PublishedOn":"2019-03-26T16:41:43+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"The post Introducing the Xamarin.iOS Interpreter appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/introducing-xamarin-ios-interpreter/","RawContent":null},{"Title":"Join the Xamarin Visual Challenge","PublishedOn":"2019-03-22T20:00:01+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past month, we have been running a low-key challenge to flex the new Xamarin.Forms 3.6 feature, Visual with Material Design. For more information about what Visual is and what you can do with...","Href":"https://devblogs.microsoft.com/xamarin/join-the-xamarin-visual-challenge/","RawContent":null},{"Title":"Get Your Apps Ready for Apple’s New Watch Processor Architecture","PublishedOn":"2019-03-20T19:59:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The post Get Your Apps Ready for Apple&#8217;s New Watch Processor Architecture appeared first on Xamarin Blog.","Href":"https://devblogs.microsoft.com/xamarin/apple-new-processor-architecture/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"9438939017","Type":"IssuesEvent","CreatedAt":"2019-04-14T05:36:57","Actor":"softlion","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2966","RelatedDescription":"Closed issue \"Error launching release app on Moto G4 play device\" (#2966) at xamarin/xamarin-android","RelatedBody":"Hey there,\r\nour app is made with Xamarin native.\r\nIt works fine on most devices, except one detected by google play automatic testing.\r\nIt's a moto G4 play.\r\n\r\nThe app installs but crash on starts.\r\n\r\n### Device version\r\n![New Issue · xamarinxamarin-android - Google Chrome](https://user-images.githubusercontent.com/190756/55978815-09722680-5c91-11e9-9a82-95888dd70cc3.jpg)\r\n\r\n### Logcat extract\r\n\r\n```\r\n04-10 23:18:07.356: I/Robo(13541): Performing LaunchAction {com.metageek.airviewer}  .\r\n04-10 23:18:07.362: I/Robo(13591): UiAutomator: launching app\r\n04-10 23:18:07.373: I/ActivityManager(1754): START u0 {act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] flg=0x10000000 pkg=com.metageek.airviewer cmp=com.metageek.airviewer/airviewer.SplashActivity} from uid 10123 on display 0\r\n04-10 23:18:07.380: D/PermissionCache(297): checking android.permission.READ_FRAME_BUFFER for uid=1000 => granted (155 us)\r\n04-10 23:18:07.392: D/ProcSpeedReader(3378): Failed to read freq stats from null\r\n04-10 23:18:07.483: I/ActivityManager(1754): Start proc 13621:com.metageek.airviewer/u0a130 for activity com.metageek.airviewer/airviewer.SplashActivity\r\n04-10 23:18:07.521: D/ProcSpeedReader(3378): Failed to read freq stats from null\r\n04-10 23:18:07.551: I/MultiDex(13621): VM with version 2.1.0 has multidex support\r\n04-10 23:18:07.551: I/MultiDex(13621): install\r\n04-10 23:18:07.551: I/MultiDex(13621): VM has multidex support, MultiDex support library is disabled.\r\n04-10 23:18:07.579: W/monodroid(13621): Using runtime path: /data/app/com.metageek.airviewer-1/lib/arm\r\n04-10 23:18:07.579: W/monodroid(13621): Trying to load sgen from: /data/app/com.metageek.airviewer-1/lib/arm/libmonosgen-2.0.so\r\n04-10 23:18:07.998: I/SFPerfTracer(297):       trigger: post       (32.006 ms)\t(15.339 ms off for 9 triggers)\t(9 triggers)\t(9 posts)\r\n04-10 23:18:07.999: I/SFPerfTracer(297):       trigger: render     (41.051 ms)\t(16.051 ms off for 9 triggers)\t(9 triggers)\t(9 renders)\r\n04-10 23:18:08.436: W/SurfaceFlinger(297): couldn't log to binary event log: overflow.\r\n04-10 23:18:08.532: W/z(13591): Skipping null root node for window: AccessibilityWindowInfo[id=0, type=TYPE_APPLICATION, layer=21010, bounds=Rect(0, 0 - 720, 1280), focused=true, active=true, hasParent=false, hasChildren=false]\r\n04-10 23:18:08.733: W/monodroid-gc(13621): GREF GC Threshold: 46080\r\n04-10 23:18:08.970: E/mono-rt(13621): /proc/self/maps:\r\n04-10 23:18:08.971: E/mono-rt(13621): 12c00000-12d45000 rw-p 00000000 00:04 7125       /dev/ashmem/dalvik-main space (deleted)\r\n04-10 23:18:08.971: E/mono-rt(13621): 12d45000-18c00000 ---p 00145000 00:04 7125       /dev/ashmem/dalvik-main space (deleted)\r\n04-10 23:18:08.971: E/mono-rt(13621): 22c00000-22c01000 rw-p 00000000 00:04 7126       /dev/ashmem/dalvik-main space 1 (deleted)\r\n04-10 23:18:08.971: E/mono-rt(13621): 22c01000-28c00000 ---p 00001000 00:04 7126       /dev/ashmem/dalvik-main space 1 (deleted)\r\n04-10 23:18:08.971: E/mono-rt(13621): 7007b000-70aa6000 rw-p 00000000 103:09 9149      /data/dalvik-cache/arm/system@framework@boot.art\r\n04-10 23:18:08.971: E/mono-rt(13621): 70aa6000-72adc000 r--p 00000000 103:07 1336      /system/framework/arm/boot.oat\r\n04-10 23:18:08.971: E/mono-rt(13621): 72adc000-74330000 r-xp 02036000 103:07 1336      /system/framework/arm/boot.oat\r\n04-10 23:18:08.971: E/mono-rt(13621): 74330000-74331000 rw-p 0388a000 103:07 1336      /system/framework/arm/boot.oat\r\n04-10 23:18:08.971: E/mono-rt(13621): 74331000-7451e000 rw-p 00000000 00:04 7124       /dev/ashmem/dalvik-zygote space (deleted)\r\n04-10 23:18:08.971: E/mono-rt(13621): 7451e000-7451f000 rw-p 00000000 00:04 11835      /dev/ashmem/dalvik-non moving space (deleted)\r\n04-10 23:18:08.971: E/mono-rt(13621): 7451f000-77b32000 ---p 00001000 00:04 11835      /dev/ashmem/dalvik-non moving space (deleted)\r\n04-10 23:18:08.971: E/mono-rt(13621): 77b32000-78331000 rw-p 03614000 00:04 11835      /dev/ashmem/dalvik-non moving space (deleted)\r\n04-10 23:18:08.971: E/mono-rt(13621): 9f9f1000-9fa07000 r-xp 00000000 103:09 4721      /data/app/com.metageek.airviewer-1/lib/arm/libaot-XamSvg.Droid.dll.so\r\n04-10 23:18:08.971: E/mono-rt(13621): 9fa07000-9fa08000 r--p 00015000 103:09 4721      /data/app/com.metageek.airviewer-1/lib/arm/libaot-XamSvg.Droid.dll.so\r\n04-10 23:18:08.971: E/mono-rt(13621): 9fa08000-9fa09000 rw-p 00016000 103:09 4721      /data/app/com.metageek.airviewer-1/lib/arm/libaot-XamSvg.Droid.dll.so\r\n04-10 23:18:08.971: E/mono-rt(13621): 9fa09000-9fa0c000 r-xp 00000000 103:09 4717      /data/app/com.metageek.airviewer-1/lib/arm/libaot-Xamarin.Android.Support.VersionedParcelable.dll.so\r\n04-10 23:18:08.971: E/mono-rt(13621): 9fa0c000-9fa0d000 ---p 00000000 00:00 0 \r\n04-10 23:18:08.971: E/mono-rt(13621): 9fa0d000-9fa0e000 r--p 00003000 103:09 4717      /data/app/com.metageek.airviewer-1/lib/arm/libaot-Xamarin.Android.Support.VersionedParcelable.dll.so\r\n04-10 23:18:08.971: E/mono-rt(13621): 9fa0e000-9fa0f000 rw-p 00004000 103:09 4717      /data/app/com.metageek.airviewer-1/lib/arm/libaot-Xamarin.Android.Support.VersionedParcelable.dll.so\r\n04-10 23:18:08.971: E/mono-rt(13621): 9fa0f000-9fa12000 r-xp 00000000 103:09 4883      /data/app/com.metageek.airviewer-1/lib/arm/libaot-Xamarin.Android.Support.Vector.Drawable.dll.so\r\n04-10 23:18:08.971: E/mono-rt(13621): 9fa12000-9fa13000 r--p 00002000 103:09 4883      /data/app/com.metageek.airviewer-1/lib/arm/libaot-Xamarin.Android.Support.Vector.Drawable.dll.so\r\n04-10 23:18:08.971: E/mono-rt(13621): 9fa13000-9fa14000 rw-p 00003000 103:09 4883      /data/app/com.metageek.airviewer-1/lib/arm/libaot-Xamarin.Android.Support.Vector.Drawable.dll.so\r\n04-10 23:18:08.971: E/mono-rt(13621): 9fa14000-9fa74000 r-xp 00000000 103:09 4672      /data/app/com.metageek.airviewer-1/lib/arm/libaot-Xamarin.Android.Support.v7.RecyclerView.dll.so\r\n04-10 23:18:08.971: E/mono-rt(13621): 9fa74000-9fa75000 r--p 0005f000 103:09 4672      /data/app/com.metageek.airviewer-1/lib/arm/libaot-Xamarin.Android.Support.v7.RecyclerView.dll.so\r\n04-10 23:18:08.971: E/mono-rt(13621): 9fa75000-9fa76000 rw-p 00060000 103:09 4672      /data/app/com.metageek.airviewer-1/lib/arm/libaot-Xamarin.Android.Support.v7.RecyclerView.dll.so\r\n04-10 23:18:08.972: A/libc(13621): Fatal signal 11 (SIGSEGV), code 1, fault addr 0x0 in tid 13621 (ageek.airviewer)\r\n04-10 23:18:09.032: A/DEBUG(338): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***\r\n04-10 23:18:09.032: A/DEBUG(338): Build fingerprint: 'motorola/harpia/harpia:6.0.1/MPIS24.241-2.50-16/16:user/release-keys'\r\n04-10 23:18:09.033: A/DEBUG(338): Revision: 'p1b0'\r\n04-10 23:18:09.033: A/DEBUG(338): ABI: 'arm'\r\n04-10 23:18:09.033: A/DEBUG(338): pid: 13621, tid: 13621, name: ageek.airviewer  >>> com.metageek.airviewer <<<\r\n04-10 23:18:09.033: A/DEBUG(338): signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x0\r\n04-10 23:18:09.053: A/DEBUG(338):     r0 a1809dc8  r1 00000000  r2 b7a94f08  r3 b76beb68\r\n04-10 23:18:09.053: A/DEBUG(338):     r4 a1809aa8  r5 a1809aa0  r6 00000000  r7 a1000000\r\n04-10 23:18:09.053: A/DEBUG(338):     r8 beebad14  r9 00000001  sl a1809880  fp a1809870\r\n04-10 23:18:09.053: A/DEBUG(338):     ip beebaa38  sp beebaa68  lr a0a1b4f8  pc 00000000  cpsr 600e0010\r\n04-10 23:18:09.056: A/DEBUG(338): backtrace:\r\n04-10 23:18:09.056: A/DEBUG(338):     #00 pc 00000000  <unknown>\r\n04-10 23:18:09.056: A/DEBUG(338):     #01 pc 000c54f4  /data/app/com.metageek.airviewer-1/lib/arm/libaot-Mono.Android.dll.so (Android_Runtime_AndroidTypeManager_RegisterNativeMembers_Java_Interop_JniType_System_Type_string+852)\r\n04-10 23:18:09.056: A/DEBUG(338):     #02 pc 000d228c  /data/app/com.metageek.airviewer-1/lib/arm/libaot-Mono.Android.dll.so (Android_Runtime_JNIEnv_RegisterJniNatives_intptr_int_intptr_intptr_int+600)\r\n04-10 23:18:09.056: A/DEBUG(338):     #03 pc 0000e9f0  <unknown>\r\n04-10 23:18:09.354: E/NetlinkEvent(336): NetlinkEvent::FindParam(): Parameter 'UID' not found\r\n04-10 23:18:09.409: A/DEBUG(338): Tombstone written to: /data/tombstones/tombstone_00\r\n04-10 23:18:09.409: E/DEBUG(338): AM write failed: Broken pipe\r\n04-10 23:18:09.410: I/BootReceiver(1754): Copying /data/tombstones/tombstone_00 to DropBox (SYSTEM_TOMBSTONE)\r\n04-10 23:18:09.434: W/ActivityManager(1754):   Force finishing activity com.metageek.airviewer/airviewer.SplashActivity\r\n04-10 23:18:09.449: I/Zygote(364): Process 13621 exited due to signal (11)\r\n04-10 23:18:09.543: W/z(13591): Skipping null root node for window: AccessibilityWindowInfo[id=0, type=TYPE_APPLICATION, layer=21010, bounds=Rect(0, 0 - 720, 1280), focused=true, active=true, hasParent=false, hasChildren=false]\r\n04-10 23:18:09.741: I/WindowManager(1754): Screenshot max retries 4 of Token{3666888 ActivityRecord{1bbc2b u0 com.metageek.airviewer/airviewer.SplashActivity t26 f}} appWin=Window{fb985a3 u0 Starting com.metageek.airviewer} drawState=4\r\n04-10 23:18:09.752: W/ActivityManager(1754): Exception thrown during pause\r\n04-10 23:18:09.752: W/ActivityManager(1754): android.os.DeadObjectException\r\n04-10 23:18:09.752: W/ActivityManager(1754): \tat android.os.BinderProxy.transactNative(Native Method)\r\n04-10 23:18:09.752: W/ActivityManager(1754): \tat android.os.BinderProxy.transact(Binder.java:503)\r\n04-10 23:18:09.752: W/ActivityManager(1754): \tat android.app.ApplicationThreadProxy.schedulePauseActivity(ApplicationThreadNative.java:734)\r\n04-10 23:18:09.752: W/ActivityManager(1754): \tat com.android.server.am.ActivityStack.startPausingLocked(ActivityStack.java:871)\r\n04-10 23:18:09.752: W/ActivityManager(1754): \tat com.android.server.am.ActivityStack.finishActivityLocked(ActivityStack.java:2936)\r\n04-10 23:18:09.752: W/ActivityManager(1754): \tat com.android.server.am.ActivityStack.finishTopRunningActivityLocked(ActivityStack.java:2792)\r\n04-10 23:18:09.752: W/ActivityManager(1754): \tat com.android.server.am.ActivityStackSupervisor.finishTopRunningActivityLocked(ActivityStackSupervisor.java:2803)\r\n04-10 23:18:09.752: W/ActivityManager(1754): \tat com.android.server.am.ActivityManagerService.handleAppCrashLocked(ActivityManagerService.java:12436)\r\n04-10 23:18:09.752: W/ActivityManager(1754): \tat com.android.server.am.ActivityManagerService.makeAppCrashingLocked(ActivityManagerService.java:12332)\r\n04-10 23:18:09.752: W/ActivityManager(1754): \tat com.android.server.am.ActivityManagerService.crashApplication(ActivityManagerService.java:13049)\r\n04-10 23:18:09.752: W/ActivityManager(1754): \tat com.android.server.am.ActivityManagerService.handleApplicationCrashInner(ActivityManagerService.java:12534)\r\n04-10 23:18:09.752: W/ActivityManager(1754): \tat com.android.server.am.NativeCrashListener$NativeCrashReporter.run(NativeCrashListener.java:86)\r\n04-10 23:18:09.756: E/lowmemorykiller(295): Error opening /proc/13621/oom_score_adj; errno=2\r\n04-10 23:18:09.757: D/ProcSpeedReader(3378): Failed to read freq stats from null\r\n04-10 23:18:09.758: W/ActivityManager(1754):   Force finishing activity com.google.android.apps.mtaas.backdrop/.BackdropActivity\r\n04-10 23:18:09.761: I/ActivityManager(1754): Process com.metageek.airviewer (pid 13621) has died\r\n```` \r\n\r\n### Expected Behavior\r\nWon't crash or at least report something\r\n\r\n### Actual Behavior\r\nCrash log in not enough to understand what's going on.\r\n\r\n### Version Information\r\nThe app was built using VS2019:\r\n\r\nMicrosoft Visual Studio Enterprise 2019\r\nVersion 16.0.1\r\nVisualStudio.16.Release/16.0.1+28803.156\r\nMicrosoft .NET Framework\r\nVersion 4.7.03190\r\n\r\nInstalled Version: Enterprise\r\n\r\nC# Tools   3.0.0-beta4-19170-01+1deafee3682da88bf07d1c18521a99f47446cee8\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nExtensibility Message Bus   1.1.77 (master@24013d5)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   16.0.300 (573eda3)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   5.0.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nPython   16.0.19074.1\r\nProvides IntelliSense, projects, templates, debugging, interactive windows, and other support for Python developers.\r\n\r\nPython - IronPython support   16.0.19074.1\r\nProvides templates and integration for IronPython-based projects.\r\n\r\nPython - Profiling support   16.0.19074.1\r\nProfiling support for Python projects.\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   16.0.61903.25110\r\nMicrosoft SQL Server Data Tools\r\n\r\nTest Adapter for Boost.Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Boost.Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTest Adapter for Google Test   1.0\r\nEnables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.\r\n\r\nTypeScript Tools   16.0.10306.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   3.0.0-beta4-19170-01+1deafee3682da88bf07d1c18521a99f47446cee8\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.28625.91\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual C++ for Cross Platform Mobile Development (iOS)   15.0.28625.91\r\nVisual C++ for Cross Platform Mobile Development (iOS)\r\n\r\nVisual C++ for Linux Development   1.0.9.28711\r\nVisual C++ for Linux Development\r\n\r\nVisual F# Tools 10.4 for F# 4.6   16.0.0.0.  Commit Hash: 809f41207b74a1356208f11b8fa3a15233734050.\r\nMicrosoft Visual F# Tools 10.4 for F# 4.6\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   16.0.0.515 (d16-0@a3502d929)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.17.4.418 (remotes/origin/d16-0@3d086e814)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   16.1.47 (31f664d)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.2.0.5 (HEAD/292d27fa)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n    Mono: mono/mono/2018-08-rc@5ad371dab1b\r\n    Java.Interop: xamarin/java.interop/d16-0@c987483\r\n    LibZipSharp: grendello/LibZipSharp/master@44de300\r\n    LibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\n    MXE: xamarin/mxe/xamarin@b9cbb535\r\n    ProGuard: xamarin/proguard/master@905836d\r\n    SQLite: xamarin/sqlite/3.26.0@325e91a\r\n    Xamarin.Android Tools: xamarin/xamarin-android-tools/d16-0@0a7edd6\r\n\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.8.0.0 (0aa8452)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n\r\n### App build info\r\n- one APK per abi\r\n- embed assemblies into native code\r\n"},{"Id":"9438437721","Type":"PullRequestEvent","CreatedAt":"2019-04-13T23:46:57","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2965","RelatedDescription":"Merged pull request \"update Android Q API to beta2.\" (#2965) at xamarin/xamarin-android","RelatedBody":""},{"Id":"9437729071","Type":"PullRequestEvent","CreatedAt":"2019-04-13T17:24:46","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2978","RelatedDescription":"Merged pull request \"Pass `--debug` to Mono when running tests etc\" (#2978) at xamarin/xamarin-android","RelatedBody":"Currently we don't do that which causes the local/host stack traces not to have\r\nsource location information. Pass `--debug` to mono via `$(ManagedRuntime)`\r\nwhich is used whenever we need to launch a managed program."},{"Id":"9434974086","Type":"PullRequestEvent","CreatedAt":"2019-04-12T20:47:46","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2977","RelatedDescription":"Merged pull request \"[android-toolchain] update to 28.0.2 platform-tools\" (#2977) at xamarin/xamarin-android","RelatedBody":"Context: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/451/testReport/junit/Mono/Android_TestsMultiDex/Possible_Crash___Release/\r\nContext: https://developer.android.com/studio/releases/platform-tools\r\n\r\nWe have been seeing `adb` crash during our APK tests:\r\n\r\n    Task \"RunInstrumentationTests\" (TaskId:274)\r\n    ...\r\n    Executing: /Users/builder/android-toolchain/sdk/platform-tools/adb -s emulator-5570  logcat -v threadtime -d (TaskId:274)\r\n        appending stdout to file: /Users/builder/jenkins/workspace/xamarin-android/xamarin-android/build-tools/scripts/../../bin/TestRelease/logcat-Release-Bundle-Mono.Android_TestsMultiDex.txt (TaskId:274)\r\n    /Users/builder/jenkins/workspace/xamarin-android/xamarin-android/build-tools/scripts/TestApks.targets(226,5): warning : * daemon not running; starting now at tcp:5037 [/Users/builder/jenkins/workspace/xamarin-android/xamarin-android/tests/RunApkTests.targets]\r\n    /Users/builder/jenkins/workspace/xamarin-android/xamarin-android/build-tools/scripts/TestApks.targets(226,5): warning : * daemon started successfully [/Users/builder/jenkins/workspace/xamarin-android/xamarin-android/tests/RunApkTests.targets]\r\n    ...\r\n\r\nThis log message is starting the `adb` daemon when it *should* have\r\nalready been running.\r\n\r\nLooking at the release notes for `platform-tools`, there is some\r\nmention of fixes for `adb` for 28.0.1 and 28.0.2.\r\n\r\nLet's update `platform-tools` and see if this problem gets any better."},{"Id":"9434679402","Type":"PullRequestEvent","CreatedAt":"2019-04-12T19:55:46","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2978","RelatedDescription":"Opened pull request \"Pass `--debug` to Mono when running tests etc\" (#2978) at xamarin/xamarin-android","RelatedBody":"Currently we don't do that which causes the local/host stack traces not to have\r\nsource location information. Pass `--debug` to mono via `$(ManagedRuntime)`\r\nwhich is used whenever we need to launch a managed program."},{"Id":"9434470168","Type":"PullRequestEvent","CreatedAt":"2019-04-12T19:16:43","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2975","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] cache aapt2 version in AppDomain\" (#2975) at xamarin/xamarin-android","RelatedBody":"If you have `$(AndroidUseAapt2)` set to `True` (which is also the\r\ndefault on master), the `<ResolveAndroidTooling/>` tooling task seems\r\nto take longer:\r\n\r\n    aapt2:\r\n        83 ms  ResolveAndroidTooling                      2 calls\r\n    aapt:\r\n         4 ms  ResolveAndroidTooling                      2 calls\r\n\r\nI figured out this was due to how we shell out to `aapt2 version` to\r\ncheck the version of `aapt2`.\r\n\r\nWe should use `RegisterTaskObject` and cache the result of this call!\r\n\r\n* I used a key that contains the path to `aapt2`, so if someone changes the\r\n  `aapt2` used, it should call `aapt2 version` again.\r\n* I don't think we actually need to invalidate the cached value on\r\n  anything else because we are shipping `aapt2` now.\r\n\r\nBut what if there is a Xamarin.Android update?\r\n\r\nIf you install a new VSIX, VS on Windows makes you restart the IDE. If\r\nyou install a PKG on Mac, you need to restart the IDE *anyway*,\r\nbecause it keeps all system MSBuild `.targets` files in memory...\r\nWeird things will happen if you install a Xamarin.Android PKG on Mac\r\nand don't restart VS for Mac.\r\n\r\nAfter this change, when the `aapt2 version` call is cached:\r\n\r\n    2 ms  ResolveAndroidTooling                      2 calls\r\n\r\nThis was the \"Hello World\" sample project in this repo."},{"Id":"9434377876","Type":"PullRequestEvent","CreatedAt":"2019-04-12T19:00:25","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2974","RelatedDescription":"Merged pull request \"[tests] Measure activity displayed time\" (#2974) at xamarin/xamarin-android","RelatedBody":"Add special-case handled measurement of activity displayed message\r\nfrom Android Activity manager.\r\n\r\nWe have special case code for that, because our normal message\r\nmeasurements come from the app process, while the activity manager is\r\na separate process and thus would not be matched by our timing\r\ndefinitions, which use the PID to pre-filter the matches.\r\n\r\nThe activity manager adds message to the log when activity is\r\ndisplayed. We hope that this corelates with actual time the activity\r\nis displayed on screen and thus is interesting time to measure.\r\n\r\nThe activity messages look like this:\r\n\r\n    04-05 15:50:00.421  1201  1239 I ActivityManager: Displayed com.google.android.deskclock/com.android.deskclock.alarms.AlarmActivity: +136ms\r\n    04-05 16:00:01.157  1201  1239 I ActivityManager: Displayed com.google.android.deskclock/com.android.deskclock.alarms.AlarmActivity: +145ms\r\n    04-05 16:36:23.803  1201  1239 I ActivityManager: Displayed Xamarin.Forms_Performance_Integration/xamarin.forms.performance.integration.MainActivity: +1s255ms\r\n    04-05 16:38:14.092  1201  1239 I ActivityManager: Displayed org.androworks.meteorgram/.MeteorgramActivity: +580ms\r\n    04-05 16:38:42.140  1201  1239 I ActivityManager: Displayed org.mozilla.firefox/org.mozilla.gecko.BrowserApp: +469ms\r\n    04-05 16:38:54.098  1201  1239 I ActivityManager: Displayed com.whatsapp/.HomeActivity: +545ms\r\n\r\nExample measurement for our XF test:\r\n\r\n    last-Debug,JNI.init-Debug,init-Debug,OnCreateBegin-Debug,OnCreateEnd-Debug,OnStartBegin-Debug,OnStartEnd-Debug,OnResumeBegin-Debug,OnResumeEnd-Debug,ActivityDisplayed-Debug\r\n    1908,492,492,585,1332,1337,1338,1338,1341,2047\r\n\r\nNOTE: as can be seen above, the activity displayed message comes long\r\nafter OnResumeEnd was called"},{"Id":"9433764021","Type":"PullRequestEvent","CreatedAt":"2019-04-12T17:17:10","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2977","RelatedDescription":"Opened pull request \"[android-toolchain] update to 28.0.2 platform-tools\" (#2977) at xamarin/xamarin-android","RelatedBody":"Context: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android/451/testReport/junit/Mono/Android_TestsMultiDex/Possible_Crash___Release/\r\nContext: https://developer.android.com/studio/releases/platform-tools\r\n\r\nWe have been seeing `adb` crash during our APK tests:\r\n\r\n    Task \"RunInstrumentationTests\" (TaskId:274)\r\n    ...\r\n    Executing: /Users/builder/android-toolchain/sdk/platform-tools/adb -s emulator-5570  logcat -v threadtime -d (TaskId:274)\r\n        appending stdout to file: /Users/builder/jenkins/workspace/xamarin-android/xamarin-android/build-tools/scripts/../../bin/TestRelease/logcat-Release-Bundle-Mono.Android_TestsMultiDex.txt (TaskId:274)\r\n    /Users/builder/jenkins/workspace/xamarin-android/xamarin-android/build-tools/scripts/TestApks.targets(226,5): warning : * daemon not running; starting now at tcp:5037 [/Users/builder/jenkins/workspace/xamarin-android/xamarin-android/tests/RunApkTests.targets]\r\n    /Users/builder/jenkins/workspace/xamarin-android/xamarin-android/build-tools/scripts/TestApks.targets(226,5): warning : * daemon started successfully [/Users/builder/jenkins/workspace/xamarin-android/xamarin-android/tests/RunApkTests.targets]\r\n    ...\r\n\r\nThis log message is starting the `adb` daemon when it *should* have\r\nalready been running.\r\n\r\nLooking at the release notes for `platform-tools`, there is some\r\nmention of fixes for `adb` for 28.0.1 and 28.0.2.\r\n\r\nLet's update `platform-tools` and see if this problem gets any better."},{"Id":"9433478940","Type":"PullRequestEvent","CreatedAt":"2019-04-12T16:29:16","Actor":"lambdageek","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2976","RelatedDescription":"Opened pull request \"[mono-2019-02][Xamarin.Android.BCL_Tests] Copy xunit tests to IntermediateOutputPath\" (#2976) at xamarin/xamarin-android","RelatedBody":"so that their references can be resolved\r\n\r\nOtherwise, any referenced assemblies that are only used by the xunit testsuites\r\nwill not be included in the APK.\r\n\r\n\r\n---\r\n\r\nI'm not sure if this is the best way - with this the XUnit test assemblies all end up inside the APK in the `assemblies/` folder (the same way that all the NUnit test assemblies already do) - which means they're duplicated in the `Xamarin.Android.BCL_Test.apk` - they're included once more in the `bcl-tests.zip` that's embedded as a resource in the `assemblies/Xamarin.Android.Bcl_Tests.dll` inside the APK.\r\n\r\nBut I've been told that that's a know issue that will be dealt with separately."},{"Id":"9433462758","Type":"PullRequestEvent","CreatedAt":"2019-04-12T16:26:38","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/2975","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] cache aapt2 version in AppDomain\" (#2975) at xamarin/xamarin-android","RelatedBody":"If you have `$(AndroidUseAapt2)` set to `True` (which is also the\r\ndefault on master), the `<ResolveAndroidTooling/>` tooling task seems\r\nto take longer:\r\n\r\n    aapt2:\r\n        83 ms  ResolveAndroidTooling                      2 calls\r\n    aapt:\r\n         4 ms  ResolveAndroidTooling                      2 calls\r\n\r\nI figured out this was due to how we shell out to `aapt2 version` to\r\ncheck the version of `aapt2`.\r\n\r\nWe should use `RegisterTaskObject` and cache the result of this call!\r\n\r\n* I used a key that contains the path to `aapt2`, so if that\r\n* I don't think we actually need to invalidate the cached value on\r\n  anything else because we are shipping `aapt2` now.\r\n\r\nBut what if there is a Xamarin.Android update?\r\n\r\nIf you install a new VSIX, VS on Windows makes you restart the IDE. If\r\nyou install a PKG on Mac, you need to restart the IDE *anyway*,\r\nbecause it keeps all system MSBuild `.targets` files in memory...\r\nWeird things will happen if you install a Xamarin.Android PKG on Mac\r\nand don't restart VS for Mac.\r\n\r\nAfter this change, when the `aapt2 version` call is cached:\r\n\r\n    2 ms  ResolveAndroidTooling                      2 calls\r\n\r\nThis was the \"Hello World\" sample project in this repo."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"9442101126","Type":"IssuesEvent","CreatedAt":"2019-04-15T05:17:13","Actor":"majumajid","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5916","RelatedDescription":"Opened issue \"System.MissingMethodException AND NLog.NLogConfigurationException: Error when setting property 'Uppercase' on Layout Renderer: ${uppercase} \" (#5916) at xamarin/Xamarin.Forms","RelatedBody":"I tried to implement the NLog using this reference link (https://martynnw.wordpress.com/2016/10/16/logging-with-nlog-in-xamarin-forms/) and github(https://github.com/Martynnw/AndroidDemos/tree/master/LoggingDemo)\r\n\r\nThis error is encountering on this line\r\n**var config = new LoggingConfiguration(); //THIS LINE GENERATING ERROR**\r\n\r\n```\r\n [assembly: Dependency(typeof(NLogManager))]\r\nnamespace LoggingDemo.Droid\r\n{\r\n    public class NLogManager : ILogManager\r\n    {\r\n        public NLogManager()\r\n        {\r\n             var config = new LoggingConfiguration();   \r\n            var consoleTarget = new ConsoleTarget();\r\n            config.AddTarget(\"console\", consoleTarget);\r\n\r\n            var consoleRule = new LoggingRule(\"*\", LogLevel.Trace, consoleTarget);\r\n            config.LoggingRules.Add(consoleRule);\r\n\r\n            var fileTarget = new FileTarget();\r\n            string folder = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);\r\n            fileTarget.FileName = Path.Combine(folder, \"Log.txt\");\r\n            config.AddTarget(\"file\", fileTarget);\r\n\r\n            var fileRule = new LoggingRule(\"*\", LogLevel.Warn, fileTarget);\r\n            config.LoggingRules.Add(fileRule);\r\n\r\n            LogManager.Configuration = config;\r\n        }\r\n\r\n        public ILogger GetLog([System.Runtime.CompilerServices.CallerFilePath] string callerFilePath = \"\")\r\n        {\r\n            string fileName = callerFilePath;\r\n\r\n            if (fileName.Contains(\"/\"))\r\n            {\r\n                fileName = fileName.Substring(fileName.LastIndexOf(\"/\", StringComparison.CurrentCultureIgnoreCase) + 1);\r\n            }\r\n\r\n            var logger = LogManager.GetLogger(fileName);\r\n            return new NLogLogger(logger);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nERROR :\r\n```\r\n\r\n{NLog.NLogConfigurationException: Error when setting property 'Uppercase' on Layout Renderer: ${uppercase}\r\n---> System.MissingMethodException: string[] string.Split(char,System.StringSplitOptions)\r\n at NLog.Internal.PropertyHelper.SetPropertyFromString (System.Object obj, System.String propertyName, System.String value,\r\n NLog.Config.ConfigurationItemFactory configurationItemFactory) [0x000b1] in <b575d0eed9dd4c07998e108d5c7bb2ad>:0\r\n  --- End of inner exception stack trace ---\r\n at NLog.Internal.PropertyHelper.SetPropertyFromString (System.Object obj, System.String propertyName, System.String value,\r\n NLog.Config.ConfigurationItemFactory configurationItemFactory) [0x00163] in <b575d0eed9dd4c07998e108d5c7bb2ad>:0\r\n at NLog.Layouts.LayoutParser.ParseLayoutRenderer (NLog.Config.ConfigurationItemFactory configurationItemFactory,\r\n NLog.Internal.SimpleStringReader stringReader) [0x00145] in <b575d0eed9dd4c07998e108d5c7bb2ad>:0\r\n at NLog.Layouts.LayoutParser.CompileLayout (NLog.Config.ConfigurationItemFactory configurationItemFactory,\r\n NLog.Internal.SimpleStringReader sr, System.Boolean isNested, System.String& text) [0x0007b] in <b575d0eed9dd4c07998e108d5c7bb2ad>:0\r\n at NLog.Layouts.SimpleLayout.set_Text (System.String value) [0x00024] in <b575d0eed9dd4c07998e108d5c7bb2ad>:0\r\n at NLog.Layouts.SimpleLayout..ctor (System.String txt, NLog.Config.ConfigurationItemFactory configurationItemFactory) [0x0000d] in <b575d0eed9dd4c07998e108d5c7bb2ad>:0\r\n at NLog.Layouts.Layout.FromString (System.String layoutText, NLog.Config.ConfigurationItemFactory configurationItemFactory) [0x00000] in <b575d0eed9dd4c07998e108d5c7bb2ad>:0\r\n at NLog.Layouts.Layout.FromString (System.String layoutText) [0x00006] in <b575d0eed9dd4c07998e108d5c7bb2ad>:0\r\n at NLog.Layouts.Layout.op_Implicit (System.String text) [0x00000] in <b575d0eed9dd4c07998e108d5c7bb2ad>:0\r\n at NLog.Targets.TargetWithLayout..ctor () [0x00006] in <b575d0eed9dd4c07998e108d5c7bb2ad>:0\r\n at NLog.Targets.TargetWithLayoutHeaderAndFooter..ctor () [0x00000] in <b575d0eed9dd4c07998e108d5c7bb2ad>:0\r\n at NLog.Targets.ConsoleTarget..ctor () [0x00000] in <b575d0eed9dd4c07998e108d5c7bb2ad>:0\r\n at Payxiom.Droid.NLogHelper.NLogManager..ctor () [0x0000f] in AppName\\NLogManager.cs:23 }\r\n```\r\n\r\n \r\n\r\n\r\n\r\n### Log should be written\r\n\r\n### Missing method exception \r\n\r\n \r\n\r\n \r\n \r\n- IDE: Visual Studio 2017 in Window10\r\n- Platform Target Frameworks: XamarinForms (iOS/ Android/ UWP)\r\n \r\n- Nuget Packages:  https://www.nuget.org/packages/NLog/4.6.2/\r\n \r\n\r\n Reference Issue Link in NLog Github\r\n\r\n https://github.com/NLog/NLog/issues/3308\r\n \r\n \r\n"},{"Id":"9441955905","Type":"PullRequestEvent","CreatedAt":"2019-04-15T04:27:34","Actor":"PureWeen","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5915","RelatedDescription":"Opened pull request \"[Shell] Hide Shell types from being browsable\" (#5915) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\nThis hides Shell<things> and just shows the Tab aliases for intellisense.\r\n\r\n### Platforms Affected ### \r\n- Core/XAML (all platforms)\r\n\r\n### Behavioral/Visual Changes ###\r\nSet ShellItem, ShellContent, and ShellSection  to EditorBrowsable(false) so that FlyoutItem, TabContent, and Tab are all that show up but won't cause compile exceptions. \r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9441360279","Type":"PullRequestEvent","CreatedAt":"2019-04-15T01:05:06","Actor":"AndreiMisiukevich","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5914","RelatedDescription":"Opened pull request \"macOs: fixes NRE in during entryRenderer disposing\" (#5914) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nCreate native entry control only if there is corresponding XF control.\r\n\r\nSimilar changes with https://github.com/xamarin/Xamarin.Forms/pull/5363\r\n\r\n### Issues Resolved ### \r\n\r\nfixes https://github.com/xamarin/Xamarin.Forms/issues/5881\r\n\r\n### API Changes ###\r\nNone\r\n\r\n### Platforms Affected ### \r\nmacOS\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNo crash\r\n\r\n### Before/After Screenshots ### \r\nNot applicable\r\n\r\n### Testing Procedure ###\r\nSee sample attached to original issue\r\n"},{"Id":"9440111895","Type":"IssuesEvent","CreatedAt":"2019-04-14T15:33:49","Actor":"jrahma","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5913","RelatedDescription":"Opened issue \"Completed, Closed, etc for PushModalAsync\" (#5913) at xamarin/Xamarin.Forms","RelatedBody":"Hi,\r\n\r\nIt will be great if you add new events for PushModalAsync which wil be fired when the popup was closed, completed, error, etc.. just like the JQuery as an example..\r\n\r\nHere is an example:\r\n\r\nNavigation.PushModalAsync(new Signin()).Completed(\r\n{\r\n      run code when completed successfully...\r\n}.Closed(\r\n{\r\n     run code when just closed (cancelled button)..\r\n}\r\n\r\n\r\n\r\nThanks,\r\nJassim"},{"Id":"9439154667","Type":"PullRequestEvent","CreatedAt":"2019-04-14T07:53:39","Actor":"mkieres","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5912","RelatedDescription":"Opened pull request \"Fixes for B40005 test case\" (#5912) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nCreating automated UI Test for the Bugzilla issue 40005\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #Bugzilla 40005 - created automated UI Tests\r\n\r\n### API Changes ###\r\nNone\r\n\r\nAdded:\r\n - Automated UI Test for Bugzilla issue 40005\r\n\r\n### Platforms Affected ### \r\n\r\n- iOS\r\n- Android\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\nRun UI test\r\n\r\n### PR Checklist ###\r\n\r\n- [ x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [ ] Changes adhere to coding standard\r\n"},{"Id":"9438377787","Type":"IssuesEvent","CreatedAt":"2019-04-13T23:05:28","Actor":"brminnick","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5911","RelatedDescription":"Opened issue \"\"System.MissingMethodException: No constructor found\" when using a Singleton for Application.MainPage\" (#5911) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nWhen `Application.MainPage` uses a Singleton with a private constructor (example code, below), `Android.Views.ViewGroup.GetChildAt` throws `System.NotSupportedException: Unable to activate instance ` with an inner exception, `System.MissingMethodException: No constructor found`.\r\n\r\nThe stack trace (below) indicates that reflection is being used in `Xamarin.Forms.Platform.Android.AppCompat.Platform.SetPageInternal` by `Android.Views.ViewGroup.GetChildAt` to initialize the `Page`, and because a public constructor doesn't exist for `SingletonMainPage`, it throws `System.MissingMethodException: No constructor found`.\r\n\r\nI'm unable to determine the steps necessary to reproduce the crash reports found in App Center Crash.\r\n\r\nThis is the same error from #4325 and continues to happen in v3.6.0264807.\r\n\r\n**Sample Code**\r\n\r\nThe complete sample reproduction code using Xamarin.Forms v3.6.0.0264807 can be found here: https://github.com/brminnick/XamarinFormsSingletonRepro\r\n\r\n```csharp\r\npublic class App : Application\r\n{\r\n    public App() => MainPage = SingletonMainPage.Instance;\r\n}\r\n\r\nclass SingletonMainPage : ContentPage\r\n{\r\n    readonly static Lazy<SingletonMainPage> _instanceHolder = new Lazy<SingletonMainPage>(() => new SingletonMainPage());\r\n\r\n    SingletonMainPage()\r\n    {\r\n        Content = new Label\r\n        {\r\n            VerticalOptions = LayoutOptions.Center,\r\n            HorizontalOptions = LayoutOptions.Center,\r\n            HorizontalTextAlignment = TextAlignment.Center,\r\n            VerticalTextAlignment = TextAlignment.Center,\r\n\r\n            Text = \"Main Page\"\r\n        };\r\n    }\r\n\r\n    public static SingletonMainPage Instance => _instanceHolder.Value;\r\n}\r\n```\r\n**Stack Trace**\r\n\r\n> System.NotSupportedException: Unable to activate instance of type SingletonMainPage from native handle 0x79 (key_handle 0x30ef937).\r\n  at Java.Interop.TypeManager.CreateInstance (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer, System.Type targetType) [0x00182] in <358fd783074441fcbd9624e8c7f38d26>:0\r\n  at Java.Lang.Object.GetObject (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer, System.Type type) [0x000c1] in <358fd783074441fcbd9624e8c7f38d26>:0\r\n  at Java.Lang.Object._GetObject[T] (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer) [0x00017] in <358fd783074441fcbd9624e8c7f38d26>:0\r\n  at Java.Lang.Object.GetObject[T] (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer) [0x00000] in <358fd783074441fcbd9624e8c7f38d26>:0\r\n  at Android.Views.ViewGroup.GetChildAt (System.Int32 index) [0x00036] in <358fd783074441fcbd9624e8c7f38d26>:0\r\n  at Xamarin.Forms.Platform.Android.AppCompat.Platform.SetPageInternal (Xamarin.Forms.Page newRoot) [0x0001a] in <417fcf321d224e098a7d0491301d2236>:0\r\n  at Xamarin.Forms.Platform.Android.AppCompat.Platform+<>c__DisplayClass36_0.<SetPage>b__0 () [0x0001f] in <417fcf321d224e098a7d0491301d2236>:0\r\n  at Java.Lang.Thread+RunnableImplementor.Run () [0x00008] in <358fd783074441fcbd9624e8c7f38d26>:0\r\n  at Java.Lang.IRunnableInvoker.n_Run (System.IntPtr jnienv, System.IntPtr native__this) [0x00009] in <358fd783074441fcbd9624e8c7f38d26>:0\r\n  at (wrapper dynamic-method) Android.Runtime.DynamicMethodNameCounter.27(intptr,intptr)\r\n--- End of inner exception stack trace ---\r\n  System.MissingMethodException: No constructor found for MondayPundayApp.Droid.BlackIconTabbedPageRenderer::.ctor(System.IntPtr, Android.Runtime.JniHandleOwnership)\r\n    at Java.Interop.TypeManager.CreateProxy (System.Type type, System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer) [0x00055] in <358fd783074441fcbd9624e8c7f38d26>:0\r\n    at Java.Interop.TypeManager.CreateInstance (System.IntPtr handle, Android.Runtime.JniHandleOwnership transfer, System.Type targetType) [0x00116] in <358fd783074441fcbd9624e8c7f38d26>:0\r\n  --- End of inner exception stack trace ---\r\n    Java.Interop.JavaLocationException: Exception of type 'Java.Interop.JavaLocationException' was thrown.\r\n      at Java.Lang.Error: Exception of type 'Java.Lang.Error' was thrown.\r\n      at java.lang.Error: Java callstack:\r\n      at mono.java.lang.RunnableImplementor.n_run(Native Method)\r\n      at mono.java.lang.RunnableImplementor.run(RunnableImplementor.java:30)\r\n      at android.os.Handler.handleCallback(Handler.java:873)\r\n      at android.os.Handler.dispatchMessage(Handler.java:99)\r\n      at android.os.Looper.loop(Looper.java:193)\r\n      at android.app.ActivityThread.main(ActivityThread.java:6718)\r\n      at java.lang.reflect.Method.invoke(Native Method)\r\n      at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)\r\n      at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)\r\n\r\n### Steps to Reproduce\r\n\r\nPre-requisite: Assign a Singleton with a private constructor to Application.MainPage\r\n\r\nI am unable to determine the steps required to trigger `Xamarin.Forms.Platform.Android.AppCompat.Platform.SetPageInternal`, which will throw an exception when `MainPage` is not using a public constructor.\r\n\r\n### Basic Information\r\n\r\n- Version with issue:  Confirmed in v3.6.0264807 & v3.3.0.912540\r\n- Last known good version: Unknown\r\n- IDE: (See Environment, below)\r\n- Platform Target Frameworks: \r\n  - Android: 9.0\r\n- Android Support Library Version: 28.0.0.1\r\n- Nuget Packages:\r\n- Affected Devices: (See Affected Devices, Below)\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/brminnick/XamarinFormsSingletonRepro\r\n\r\n### Affected Devices \r\n(From App Center Crash)\r\n\r\n![AffectedDevices](https://user-images.githubusercontent.com/13558917/56086066-a785fe00-5e03-11e9-8c47-c81925c21ee2.png)\r\n\r\n\r\n### Environment \r\n\r\n=== Visual Studio Enterprise 2019 for Mac ===\r\n\r\nVersion 8.0.2 (build 23)\r\nInstallation UUID: 4ac69d79-c034-474c-9629-20084c942d3c\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\tXamarin.Mac 5.6.0.2 (d16-0 / 040682909)\r\n\r\n\tPackage version: 518010003\r\n\r\n=== Mono Framework MDK ===\r\n\r\nRuntime:\r\n\tMono 5.18.1.3 (2018-08/fdb26b0a445) (64-bit)\r\n\tPackage version: 518010003\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.8.2.5835\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t3.0.0-preview3-27503-5\r\n\t3.0.0-preview-27324-5\r\n\t3.0.0-preview-27122-01\r\n\t2.2.0\r\n\t2.2.0-preview3-27014-02\r\n\t2.1.9\r\n\t2.1.8\r\n\t2.1.6\r\n\t2.1.2\r\n\t2.1.1\r\n\t2.0.6\r\n\t2.0.5\r\n\t1.1.10\r\n\t1.0.13\r\nSDK: /usr/local/share/dotnet/sdk/2.2.100/Sdks\r\nSDK Versions:\r\n\t2.2.100\r\n\t2.1.505\r\n\t2.1.504\r\n\t2.1.500\r\n\t2.1.302\r\n\t2.1.301\r\n\t2.1.101\r\n\t2.1.4\r\n\t1.1.11\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.18.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.9\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Updater ===\r\n\r\nVersion: 11\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 9.2.0.5 (Visual Studio Enterprise)\r\nAndroid SDK: /Users/bramin/Library/Android/sdk\r\n\tSupported Android versions:\r\n\t\t6.0 (API level 23)\r\n\t\t7.0 (API level 24)\r\n\t\t7.1 (API level 25)\r\n\t\t8.0 (API level 26)\r\n\t\t8.1 (API level 27)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 28.0.2\r\nSDK Build Tools Version: 28.0.3\r\n\r\nBuild Information: \r\nMono: mono/mono/2018-08-rc@5ad371dab1b\r\nJava.Interop: xamarin/java.interop/d16-0@c987483\r\nLibZipSharp: grendello/LibZipSharp/master@44de300\r\nLibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\nMXE: xamarin/mxe/xamarin@b9cbb535\r\nProGuard: xamarin/proguard/master@905836d\r\nSQLite: xamarin/sqlite/3.26.0@325e91a\r\nXamarin.Android Tools: xamarin/xamarin-android-tools/d16-0@0a7edd6\r\n\r\n=== Microsoft Mobile OpenJDK ===\r\n\r\nJava SDK: /Users/bramin/Library/Developer/Xamarin/jdk/microsoft_dist_openjdk_8.0.25\r\n1.8.0-25\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Android Device Manager ===\r\n\r\nVersion: 1.2.0.14\r\nHash: 86df26f\r\nBranch: remotes/origin/d16-0\r\nBuild date: 2019-04-05 16:58:56 UTC\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 10.2 (14490.120)\r\nBuild 10E125\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 5.8.0.0 (Visual Studio Enterprise)\r\nHash: 0aa84521\r\nBranch: d16-0\r\nBuild date: 2019-04-02 16:01:19-0400\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 12.8.0.0 (Visual Studio Enterprise)\r\nHash: 0aa84521\r\nBranch: d16-0\r\nBuild date: 2019-04-02 16:01:19-0400\r\n\r\n=== Xamarin Designer ===\r\n\r\nVersion: 4.17.4.418\r\nHash: 3d086e814\r\nBranch: remotes/origin/d16-0\r\nBuild date: 2019-04-01 09:20:10 UTC\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.3\r\nHash: db27525\r\nBranch: 1.4-release\r\nBuild date: Mon, 09 Jul 2018 21:20:18 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 800020023\r\nGit revision: c576bb008dfe54cdcf596237e09564ebd2da4343\r\nBuild date: 2019-04-06 10:06:46+00\r\nBuild branch: master\r\nXamarin extensions: 2c996830618e7cb8e8be97984d643eb86f122e8d\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.14.4\r\nDarwin 18.5.0 Darwin Kernel Version 18.5.0\r\n    Mon Mar 11 20:40:32 PDT 2019\r\n    root:xnu-4903.251.3~3/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed extensions ===\r\n\r\nNuGet Package Management Extensions 0.17\r\n"},{"Id":"9438246113","Type":"IssuesEvent","CreatedAt":"2019-04-13T21:45:02","Actor":"johannesegger","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5910","RelatedDescription":"Opened issue \"[Bug] `IsClippedToBounds` doesn't update clip rectangle when maximizing WPF window\" (#5910) at xamarin/Xamarin.Forms","RelatedBody":"<!-- Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues -->\r\n\r\n### Description\r\nI use an `AbsoluteLayout` within a `StackLayout` within a `ContentPage`. The `AbsoluteLayout` has `IsClippedToBounds` set to true. Everything works nicely when resizing the window (i.e. the clip rectangle is updated correctly), but the clip rectangle isn't updated when the window is maximized. You'll find a demo at the 'Screenshots' section\r\n\r\nThe `AbsoluteLayout` is the control that has the red background. When not setting `IsClippedToBounds` at all the `AbsoluteLayout` control is updated as expected when maximizing the window.\r\n\r\nI took a quick look at the [code](https://github.com/xamarin/Xamarin.Forms/blob/master/Xamarin.Forms.Platform.WPF/Renderers/LayoutRenderer.cs#L139) that sets the clip rectangle. I wonder why you use [`Clip`](https://docs.microsoft.com/en-us/dotnet/api/system.windows.uielement.clip?view=netframework-4.7.2) and not [`ClipToBounds`](https://docs.microsoft.com/en-us/dotnet/api/system.windows.uielement.cliptobounds?view=netframework-4.7.2).\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a `ContentPage` with a single `AbsoluteLayout` and set `IsClippedToBounds` to `true`. Also set some background color to see the size of the control.\r\n2. Start the app and maximize the window.\r\n3. You'll find that the size of the control stays the same, whereas when you remove `IsClippedToBounds` the control is not clipped and will fill the window completely.\r\n\r\n### Expected Behavior\r\nThe clip rectangle should update when the window is maximized. Also I'm curious whether WPF's `ClipToBounds` would work.\r\n\r\n### Actual Behavior\r\nThe clip rectangle is only updated when the window is resized, not when it is maximized.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.5.0.129452\r\n- Last known good version: -\r\n- IDE: VSCode\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - WPF:  net471\r\n- Nuget Packages: yes, there are some more\r\n- Affected Devices: Laptop with Windows 10 x64\r\n\r\n### Screenshots\r\n![3D51pWFjDs](https://user-images.githubusercontent.com/237707/56085321-4715b180-5e41-11e9-9f1b-6dc3332331e4.gif)\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\nI don't have one at hand. Please tell me if you can't reproduce/fix it easily.\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"9436985392","Type":"IssuesEvent","CreatedAt":"2019-04-13T11:40:03","Actor":"MhAllan","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5909","RelatedDescription":"Opened issue \"[Bug] Unexpected Shell Route exception message needed\" (#5909) at xamarin/Xamarin.Forms","RelatedBody":"This exception is not acceptable, I think it shouldn't throw UnImplementedException because we preserve that for method implementation. It must throw Exception with clear message. It confused me and caused me so I was like: GoToAsync is not implemented yet or what!? While the whole issue is about wrong routing.\r\n\r\nhttps://github.com/xamarin/Xamarin.Forms/blob/105ded935340895273e184169c4c1dd4c23b5d81/Xamarin.Forms.Core/Shell/Shell.cs#L412"},{"Id":"9436931982","Type":"IssuesEvent","CreatedAt":"2019-04-13T11:10:40","Actor":"HakanCelikMK1","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5908","RelatedDescription":"Opened issue \"Xamarin.Forms Previewer : NullReference Exception with Shell\" (#5908) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nI’ve created a project in Visual Studio 2019 from Mobile App (Xamarin.Forms) template with Shell and I built the project.\r\nWhen I tried to open Xamarin.Forms Previewer by double clicking on AppShell.xaml, I got an exception message at the top of the previewer and the previewer itself was empty.\r\n\r\nI've also reported the issue to Visual Studio Developer Community\r\n[https://developercommunity.visualstudio.com/content/problem/531649/visual-studio-2019-1601-xamarinforms-previewer-nul.html](url)\r\n\r\n### Steps to Reproduce\r\nFrom Visual Studio 2019 16.0.1\r\n\r\n1. New Project\r\n2. Select Mobile App (Xamarin.Forms). I named it XFCTest01.\r\n3. New Cross Platform App -> Shell template -> Platform : Android, iOS - Mobile Backend : No\r\n4. Configuration Manager : iOS Project -> Build : No, Deploy : No\r\n5. Build -> Rebuild Solution\r\n6. Double click XFCTest01 -> AppShell.xaml. Xamarin.Forms Previewer : An exceptiom occurred while rendering the control. System.NullReferenceException is thrown.\r\n\r\n### Expected Behavior\r\nThe page should have been rendered correctly.\r\n\r\n### Actual Behavior\r\nNullReference Exception is thrown with an empty previewer.\r\n\r\nFrom AndroidDesigner*.log\r\n```\r\nThe renderer encountered an error while rendering this file: System.NullReferenceException: Object reference not set to an instance of an object\r\nXamarin.Forms.Platform.Android.ShellFlyoutTemplatedContentRenderer.LoadView (Xamarin.Forms.Platform.Android.IShellContext shellContext) in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Renderers\\ShellFlyoutTemplatedContentRenderer.cs:47\r\nXamarin.Forms.Platform.Android.ShellFlyoutTemplatedContentRenderer..ctor (Xamarin.Forms.Platform.Android.IShellContext shellContext) in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Renderers\\ShellFlyoutTemplatedContentRenderer.cs:35\r\nXamarin.Forms.Platform.Android.ShellRenderer.CreateShellFlyoutContentRenderer () in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Renderers\\ShellRenderer.cs:163\r\nXamarin.Forms.Platform.Android.ShellRenderer.Xamarin.Forms.Platform.Android.IShellContext.CreateShellFlyoutContentRenderer () in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Renderers\\ShellRenderer.cs:89\r\nXamarin.Forms.Platform.Android.ShellFlyoutRenderer.AttachFlyout (Xamarin.Forms.Platform.Android.IShellContext context, Android.Views.View content) in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Renderers\\ShellFlyoutRenderer.cs:86\r\nXamarin.Forms.Platform.Android.ShellFlyoutRenderer.Xamarin.Forms.Platform.Android.IShellFlyoutRenderer.AttachFlyout (Xamarin.Forms.Platform.Android.IShellContext context, Android.Views.View content) in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Renderers\\ShellFlyoutRenderer.cs:20\r\nXamarin.Forms.Platform.Android.ShellRenderer.OnElementSet (Xamarin.Forms.Shell shell) in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Renderers\\ShellRenderer.cs:222\r\nXamarin.Forms.Platform.Android.ShellRenderer.Xamarin.Forms.Platform.Android.IVisualElementRenderer.SetElement (Xamarin.Forms.VisualElement element) in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Renderers\\ShellRenderer.cs:52\r\nXamarin.Forms.Platform.Android.Platform.CreateRenderer (Xamarin.Forms.VisualElement element, Android.Content.Context context) in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Platform.cs:341\r\nXamarin.Forms.Platform.Android.Platform.CreateRenderer (Xamarin.Forms.VisualElement element) in D:\\a\\1\\s\\Xamarin.Forms.Platform.Android\\Platform.cs:334\r\n<unknown method>\r\nSystem.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture)\r\n```\r\nAlso, there are three other exceptions before in the log which seem relevant :\r\n\r\n```\r\n[2019-04-13 09:20:47.4] Renderer >> INFO: Trying to load class xamarindesigner.AndroidFormsPreviewerRenderer\r\n[2019-04-13 09:20:47.4] Renderer >> \r\n[2019-04-13 09:20:47.9] Renderer >> 4 [monodroid] SWITCHING CONTEXT\r\n[2019-04-13 09:20:47.9] Renderer >> \r\n[2019-04-13 09:20:47.9] Renderer >> =================================================================\r\n[2019-04-13 09:20:47.9] Renderer >> \tNative Crash Reporting\r\n[2019-04-13 09:20:47.9] Renderer >> =================================================================\r\n[2019-04-13 09:20:47.9] Renderer >> Got a SIGSEGV while executing native code. This usually indicates\r\n[2019-04-13 09:20:47.9] Renderer >> a fatal error in the mono runtime or one of the native libraries \r\n[2019-04-13 09:20:47.9] Renderer >> used by your application.\r\n[2019-04-13 09:20:47.9] Renderer >> =================================================================\r\n```\r\n\r\n```\r\n[2019-04-13 09:20:49.2] Renderer >> INFO: Trying to load class android.support.design.widget.CoordinatorLayout\r\n[2019-04-13 09:20:49.2] Renderer >> \r\n[2019-04-13 09:20:49.2] Renderer >> ERROR: An exception occured while loading control android.support.design.widget.CoordinatorLayout\r\n[2019-04-13 09:20:49.2] Renderer >> ERROR: java.lang.reflect.InvocationTargetException\r\n...\r\n[2019-04-13 09:20:49.2] Renderer >> Caused by: java.lang.IllegalArgumentException: You need to use a Theme.AppCompat theme (or descendant) with the design library.\r\n[2019-04-13 09:20:49.2] Renderer >> \tat android.support.design.widget.ThemeUtils.checkAppCompatTheme(ThemeUtils.java:33)\r\n[2019-04-13 09:20:49.2] Renderer >> \tat android.support.design.widget.CoordinatorLayout.<init>(CoordinatorLayout.java:206)\r\n[2019-04-13 09:20:49.2] Renderer >> \tat android.support.design.widget.CoordinatorLayout.<init>(CoordinatorLayout.java:200)\r\n[2019-04-13 09:20:49.2] Renderer >> \t... 36 more\r\n```\r\n\r\n```\r\n[2019-04-13 09:20:49.3] Renderer >> INFO: Trying to load class android.support.design.widget.AppBarLayout\r\n[2019-04-13 09:20:49.3] Renderer >> \r\n[2019-04-13 09:20:49.3] Renderer >> ERROR: An exception occured while loading control android.support.design.widget.AppBarLayout\r\n[2019-04-13 09:20:49.3] Renderer >> ERROR: java.lang.reflect.InvocationTargetException\r\n...\r\n[2019-04-13 09:20:49.3] Renderer >> Caused by: java.lang.IllegalArgumentException: You need to use a Theme.AppCompat theme (or descendant) with the design library.\r\n[2019-04-13 09:20:49.3] Renderer >> \tat android.support.design.widget.ThemeUtils.checkAppCompatTheme(ThemeUtils.java:33)\r\n[2019-04-13 09:20:49.3] Renderer >> \tat android.support.design.widget.AppBarLayout.<init>(AppBarLayout.java:158)\r\n[2019-04-13 09:20:49.3] Renderer >> \t... 40 more\r\n```\r\n\r\n\r\n### Basic Information\r\n\r\n- Version with issue: \r\n  Xamarin Designer 4.17.4.418 (remotes/origin/d16-0@3d086e814)\r\n  Xamarin.Forms 3.6.0.293080\r\n- Last known good version: Unknown\r\n- IDE: Microsoft Visual Studio Community 2019 Version 16.0.1 (16.0.1+28803.156)\r\n- Platform Target Frameworks: \r\n  - Android: 8.1\r\n- Android Support Library Version: 28.0.0.1\r\n\r\n### Software Environment\r\nMicrosoft Windows 10 Enterprise - Version 10.0.17134 Build 17134\r\nMicrosoft .NET Framework Version 4.7.03056\r\n\r\nMicrosoft Visual Studio Community 2019 Version 16.0.1\r\nVisualStudio.16.Release/16.0.1+28803.156\r\n\r\nXamarin   16.0.0.515 (d16-0@a3502d929)\r\nXamarin Designer   4.17.4.418 (remotes/origin/d16-0@3d086e814)\r\nXamarin Templates   16.1.47 (31f664d)\r\nXamarin.Android SDK   9.2.0.5 (HEAD/292d27fa)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n    Mono: mono/mono/2018-08-rc@5ad371dab1b\r\n    Java.Interop: xamarin/java.interop/d16-0@c987483\r\n    LibZipSharp: grendello/LibZipSharp/master@44de300\r\n    LibZip: nih-at/libzip/rel-1-5-1@b95cf3f\r\n    MXE: xamarin/mxe/xamarin@b9cbb535\r\n    ProGuard: xamarin/proguard/master@905836d\r\n    SQLite: xamarin/sqlite/3.26.0@325e91a\r\n    Xamarin.Android Tools: xamarin/xamarin-android-tools/d16-0@0a7edd6\r\nXamarin.iOS and Xamarin.Mac SDK   12.8.0.0 (0aa8452)\r\n\r\nAndroid SDK Tools 26.1.1\r\nAndroid SDK Platform Tools 28.0.0\r\nAndroid SDK Build-Tools 27.0.3\r\nAndroid 8.1 Oreo - Android SDK Platform 27 v3\r\nMicrosoft OpenJDK 1.8.0-25\r\n\r\n### Reproduction Project and Logs\r\n\r\nI'm attaching the project and Xamarin logs.\r\n\r\n[XFCTest01.zip](https://github.com/xamarin/Xamarin.Forms/files/3076104/XFCTest01.zip)\r\n\r\n[VS2019_XamarinLogs.zip](https://github.com/xamarin/Xamarin.Forms/files/3076103/VS2019_XamarinLogs.zip)\r\n\r\n\r\n"},{"Id":"9436525859","Type":"PullRequestEvent","CreatedAt":"2019-04-13T07:25:11","Actor":"puppetSpace","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/5907","RelatedDescription":"Opened pull request \"Add UITest for issue 1763\" (#5907) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\nCreate UITest for issue 1763\r\n\r\n### Issues Resolved ### \r\n<!-- Please use the format \"fixes #xxxx\" for each issue this PR addresses -->\r\n\r\n- fixes #2248\r\n\r\n### API Changes ###\r\n \r\n None\r\n\r\n### Platforms Affected ### \r\n\r\n- UWP\r\n\r\n### Behavioral/Visual Changes ###\r\n\r\nNone\r\n\r\n### Before/After Screenshots ### \r\n\r\nNot applicable\r\n\r\n### Testing Procedure ###\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has automated tests <!-- (if tests are omitted or manual, state reason in description) -->\r\n- [ ] Rebased on top of the target branch at time of PR\r\n- [x] Changes adhere to coding standard\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"9438507268","Type":"IssuesEvent","CreatedAt":"2019-04-14T00:34:36","Actor":"urnanda","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5897","RelatedDescription":"Opened issue \"visual studio 2019 for mac unable to determine simulator version\" (#5897) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\nOS 14.4\r\nVisual Studio 2019\r\nXcode 10.1 \r\nXcode 10.2\r\n\r\nUT Test cases are NOT working after upgrade"},{"Id":"9434368961","Type":"IssuesEvent","CreatedAt":"2019-04-12T18:58:54","Actor":"rolfbjarne","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5815","RelatedDescription":"Closed issue \"Could not compile file(s) '/../Xamarin.iOS.dll.s'\" (#5815) at xamarin/xamarin-macios","RelatedBody":"<!-- 🚨 STOP 🚨 𝗦𝗧𝗢𝗣 🚨 𝑺𝑻𝑶𝑷 🚨 -->\r\n\r\n<!--\r\nPlease fill in the *entire* template below.\r\nThe template is designed to avoid unnecessary delays to confirm and fix reported issues. Issues with missing information generally end up with a `need-info` label and take significantly more time to fix. Please help us help you!\r\nFor more information see https://github.com/xamarin/xamarin-macios/wiki/Submitting-Bugs-&-Suggestions\r\nFor support requests use https://www.xamarin.com/support\r\n-->\r\n### Steps to Reproduce\r\n\r\n1. Pair Visual Studio with the mac\r\n2. Connect iPhone that is already included in devices that are registered in the used Provisionig Profile\r\n3. Select Debug option and the iPhone already plugged in the mac\r\n\r\n### Expected Behavior\r\nDeploy application on the device\r\n### Actual Behavior\r\nThere is Compilation error when I start deploying.\r\nI've cleaned the solution, deleted both 'bin' and 'obj' folders, along with the '/Users/MyUser/Library/Caches/Xamarin' whole folder on the mac.\r\nAnd there is still below compilation error occured: Could not compile the file(s) '/Users/MyUser/Library/Caches/Xamarin/mtbs/builds/MyProject.iOS/88a37a8ff8359042479f20abe19eb7ae/obj/iPhone/Debug/mtouch-cache/armv7/Xamarin.iOS.dll.s'. Please file a bug report at http://bugzilla.xamarin.com\r\nThere is no problem with debugging on ios simulators.\r\n### Environment\r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n`Microsoft Visual Studio Professional 2017 \r\nVersion 15.9.10\r\nVisualStudio.15.Release/15.9.10+28307.557\r\nMicrosoft .NET Framework\r\nVersion 4.7.03056\r\n\r\nInstalled Version: Professional\r\n\r\nApplication Insights Tools for Visual Studio Package   8.14.20131.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.9.04012.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   15.8.31590\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.60913.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.9.03024.0\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Functions and Web Jobs Tools   15.9.02046.0\r\nAzure Functions and Web Jobs Tools\r\n\r\nC# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nExtensibility Message Bus   1.1.49 (remotes/origin/d15-8@ee674f3)\r\nProvides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.0.0\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.4\r\nSimplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft Library Manager   1.0\r\nInstall client-side libraries easily to any web project\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMono Debugging for Visual Studio   4.13.12-pre (9bc9548)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.6.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nProjectServicesPackage Extension   1.0\r\nProjectServicesPackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nResourcePackage Extension   1.0\r\nResourcePackage Visual Studio Extension Detailed Info\r\n\r\nSQL Server Data Tools   15.1.61903.01040\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.9.20918.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools 10.2 for F# 4.5   15.8.0.0.  Commit Hash: 6e26c5bacc8c4201e962f5bdde0a177f82f88691.\r\nMicrosoft Visual F# Tools 10.2 for F# 4.5\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Containers   1.0\r\nVisual Studio Tools for Containers\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.12.3.81 (d15-9@780082716)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.16.13 (45a16efd4)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin Templates   1.1.128 (6f5ebb2)\r\nTemplates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.\r\n\r\nXamarin.Android SDK   9.1.7.0 (HEAD/ba9da7a76)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   12.2.1.16 (2dc06c7)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.``\r\n`Xcode Version 10.2(10E125)``\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\t\tCould not compile the file(s) '/Users/MyUser/Library/Caches/Xamarin/mtbs/builds/MyProject.iOS/88a37a8ff8359042479f20abe19eb7ae/obj/iPhone/Debug/mtouch-cache/armv7/Xamarin.iOS.dll.s'. Please file a bug report at http://bugzilla.xamarin.com\tMyProject.iOS\t\t\t\r\n\r\nThis is the output & the Xamarin.iOS.dll file\r\n[LogFile&dll.zip](https://github.com/xamarin/xamarin-macios/files/3022038/LogFile.dll.zip)\r\n\r\n\r\n### Example Project (If Possible)\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1116762533346652160","CreatedAt":"2019-04-12T17:58:31+00:00","UserScreenname":"xamarinhq","Text":"There’re tons in store for you in the latest podcast... @codemillmatt and @JamesMontemagno rundown the new features… https://t.co/1TlcD9N8yV","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":36,"FavoriteCount":15,"RawContent":null},{"Id":"1115620503232962560","CreatedAt":"2019-04-09T14:20:29+00:00","UserScreenname":"xamarinhq","Text":"Under the Hood: Take an inside look at #DevOps at Microsoft, in this webinar with @abelsquidhead and @Applitools on… https://t.co/qgf7T5OPvM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":40,"FavoriteCount":23,"RawContent":null},{"Id":"1115323538091720704","CreatedAt":"2019-04-08T18:40:27+00:00","UserScreenname":"xamarinhq","Text":"Say 'Hello' to WorkManager - a library that makes it easy to schedule deferrable, asynchronous tasks even if the ap… https://t.co/xOYvf5E0K0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":106,"FavoriteCount":46,"RawContent":null},{"Id":"1113833658920472576","CreatedAt":"2019-04-04T16:00:12+00:00","UserScreenname":"xamarinhq","Text":"Join us live right now for another @dotnet #CommunityStandup with live demoes and QA from the #Xamarin team https://t.co/Umwxz8RtPj","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":31,"FavoriteCount":11,"RawContent":null},{"Id":"1113554700702449664","CreatedAt":"2019-04-03T21:31:44+00:00","UserScreenname":"xamarinhq","Text":"Last week we issued a challenge to the Xamarin community to use the new Material Design controls with Visual by rep… https://t.co/JpaGEihELG","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":144,"FavoriteCount":53,"RawContent":null},{"Id":"1113137014768066560","CreatedAt":"2019-04-02T17:52:00+00:00","UserScreenname":"xamarinhq","Text":"News from the #VisualStudio 2019 Launch Event. See what’s new for #Xamarin Developers in #VS2019,… https://t.co/ylrA7eBnQ4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":146,"FavoriteCount":72,"RawContent":null},{"Id":"1112804184166944768","CreatedAt":"2019-04-01T19:49:27+00:00","UserScreenname":"xamarinhq","Text":"Learn about the new, exciting releases and tooling to help jumpstart your next mobile development project.\n\nJoin us… https://t.co/4AhXCdCrB0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":27,"FavoriteCount":13,"RawContent":null},{"Id":"1111358962681765893","CreatedAt":"2019-03-28T20:06:39+00:00","UserScreenname":"xamarinhq","Text":"Unlock the power of Glide with “GlideX”: a simple library to swap-in Glide’s image loading implementation in-place… https://t.co/bAk49l9er6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":47,"FavoriteCount":25,"RawContent":null},{"Id":"1111318034789158912","CreatedAt":"2019-03-28T17:24:01+00:00","UserScreenname":"xamarinhq","Text":"How are we doing? The #Xamarin March survey is now ready for your feedback: https://t.co/yfktVy49Pl \nIt's only avai… https://t.co/gX2uC9QShF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":55,"FavoriteCount":37,"RawContent":null},{"Id":"1110599405390962693","CreatedAt":"2019-03-26T17:48:26+00:00","UserScreenname":"xamarinhq","Text":"Interpret some of the #CSharp in your application while compiling the rest ahead of time as usual.\n\nCool.... Introd… https://t.co/vkhDptAeTr","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":96,"FavoriteCount":44,"RawContent":null},{"Id":"1109140611515498502","CreatedAt":"2019-03-22T17:11:43+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/GFuU36E9x5 - Let's walk through a basic building block of #Xamarin.Forms. In the latest episode of Xam… https://t.co/qczJXvqcNK","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":68,"FavoriteCount":29,"RawContent":null},{"Id":"1108410911151345664","CreatedAt":"2019-03-20T16:52:09+00:00","UserScreenname":"xamarinhq","Text":"We're ready for testing &amp; app submission. The latest #Xamarin .iOS SDKs shipping with #VS2019 and #VS4Mac 8.0, are… https://t.co/KC1Gih3MFF","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":26,"RawContent":null},{"Id":"1107723971531862017","CreatedAt":"2019-03-18T19:22:29+00:00","UserScreenname":"xamarinhq","Text":"We have received some great pull requests to add some new features and that have gone into the newest release. Now… https://t.co/EqNQUDloOm","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":120,"FavoriteCount":47,"RawContent":null},{"Id":"1106650380182659080","CreatedAt":"2019-03-15T20:16:25+00:00","UserScreenname":"xamarinhq","Text":"Introducing the New Xamarin Customer Showcase\n\nHighlighting the amazing work developers are doing for all sorts of… https://t.co/yQbcA4cYc6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":97,"FavoriteCount":42,"RawContent":null},{"Id":"1106576630884065280","CreatedAt":"2019-03-15T15:23:22+00:00","UserScreenname":"xamarinhq","Text":"This week on the #XamarinShow, @JamesMontemagno &amp; @JonathanPeppers show us how to optimize image loading for Androi… https://t.co/FkiznwhBep","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":74,"FavoriteCount":17,"RawContent":null},{"Id":"1105942645308678144","CreatedAt":"2019-03-13T21:24:08+00:00","UserScreenname":"xamarinhq","Text":"There have been some drastic changes across key libraries for Google Play Services &amp; Android Support. Let's get a q… https://t.co/heywxPz0Qs","Source":"<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>","RetweetCount":41,"FavoriteCount":25,"RawContent":null},{"Id":"1105573743986917377","CreatedAt":"2019-03-12T20:58:15+00:00","UserScreenname":"xamarinhq","Text":"#MFractor is a powerful #VS4Mac extension to streamline Xamarin app dev so you can save significant time &amp; effort o… https://t.co/pEwcgwzd3t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":45,"FavoriteCount":22,"RawContent":null},{"Id":"1105491570583851008","CreatedAt":"2019-03-12T15:31:44+00:00","UserScreenname":"xamarinhq","Text":".@codemillmatt &amp; @JamesMontemagno talk about a ton of newness out there for all mobile devs including a hot new… https://t.co/05m3VTmUBe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":24,"RawContent":null},{"Id":"1103762250509283332","CreatedAt":"2019-03-07T21:00:02+00:00","UserScreenname":"xamarinhq","Text":"Introducing Material Design; a suite of cross-platform components in the #Xamarin.Forms 3.6 Visual feature that boo… https://t.co/gin9lpb0eQ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":150,"FavoriteCount":70,"RawContent":null}]}},"RunOn":"2019-04-15T05:30:49.5370941Z","RunDurationInMilliseconds":2069}