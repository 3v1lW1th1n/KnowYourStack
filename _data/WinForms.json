{"Data":{"GitHub":{"Issues":[{"Id":"500056223","IsPullRequest":true,"CreatedAt":"2019-09-30T05:20:23","Actor":"dotnet-maestro[bot]","Number":"1990","RawContent":null,"Title":"[master] Update dependencies from dotnet/core-setup","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c0fa602a-d869-4965-7860-08d72198640e)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20190929.2\r\n- **Date Produced**: 9/30/2019 4:03 AM\r\n- **Commit**: 98ee997ccb0ae479a4c03b23c682a198b12dd682\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App** -> 5.0.0-alpha1.19479.2\r\n\r\n[marker]: <> (End:c0fa602a-d869-4965-7860-08d72198640e)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.Platforms** -> 5.0.0-alpha1.19477.7 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.Registry** -> 5.0.0-alpha1.19477.7 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.Win32.SystemEvents** -> 5.0.0-alpha1.19477.7 (parent: Microsoft.NETCore.App)\r\n- **System.CodeDom** -> 5.0.0-alpha1.19477.7 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 5.0.0-alpha1.19477.7 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 5.0.0-alpha1.19477.7 (parent: Microsoft.NETCore.App)\r\n- **System.Resources.Extensions** -> 5.0.0-alpha1.19477.7 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Cng** -> 5.0.0-alpha1.19477.7 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 5.0.0-alpha1.19477.7 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 5.0.0-alpha1.19477.7 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NET.Sdk.IL** -> 5.0.0-alpha1.19478.1 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 5.0.0-alpha1.19478.1 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1990)","Url":"https://github.com/dotnet/winforms/pull/1990","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/core-setup\" (#1990)"},{"Id":"499999319","IsPullRequest":false,"CreatedAt":"2019-09-30T00:53:22","Actor":"RussKie","Number":"1989","RawContent":null,"Title":"Conditional order of precedence (possible) bug in `AxHost.CanAccessProperties`","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`)\r\n* Have you experienced this same bug with .NET Framework?: Yes/No\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\nDiscovered as part of a review of https://github.com/dotnet/winforms/issues/1955.\r\nHaving enabled [SA1408](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1408.md) the analyser flagged the following issue:\r\n\r\n```cs\r\n        // NB: the snippet is re-formatted to increase readability\r\n\r\n        internal override bool CanAccessProperties\r\n        {\r\n            get\r\n            {\r\n                int ocState = GetOcState();\r\n                return axState[fOwnWindow] && (ocState > OC_RUNNING || (IsUserMode() && ocState >= OC_RUNNING)) || ocState >= OC_INPLACE;\r\n            }\r\n        }\r\n```\r\nhttps://github.com/dotnet/winforms/blob/7019e1414309d820bc377e987cd1efcf9c17a12d/src/System.Windows.Forms/src/System/Windows/Forms/AxHost.cs#L526-L535\r\n\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n\r\nThe intent is unclear.\r\n\r\n* Is the following a correct expectation: `ocState >= OC_INPLACE` - OR - `axState[fOwnWindow] && (ocState > OC_RUNNING || (IsUserMode() && ocState >= OC_RUNNING))`?\r\n* In `ocState > OC_RUNNING || (IsUserMode() && ocState >= OC_RUNNING)` condition the second `>` is redundant, as if `ocState > OC_RUNNING` the condition will be `true` on the first operand\r\n\r\n**Expected behavior:**\r\n\r\nThe code is written in a manner that clearly communicates the intent and a desired outcome.","Url":"https://github.com/dotnet/winforms/issues/1989","RelatedDescription":"Open issue \"Conditional order of precedence (possible) bug in `AxHost.CanAccessProperties`\" (#1989)"},{"Id":"498392169","IsPullRequest":true,"CreatedAt":"2019-09-29T23:56:20","Actor":"dotnet-maestro[bot]","Number":"1973","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2b67318b-e6c5-4abb-7861-08d72198640e)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 6:16 PM\r\n- **Commit**: 0e9ffd6464aff37aef2dc41dc2162d258f266e32\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19474.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19474.3\r\n\r\n[marker]: <> (End:2b67318b-e6c5-4abb-7861-08d72198640e)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1973)","Url":"https://github.com/dotnet/winforms/pull/1973","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1973)"},{"Id":"498394518","IsPullRequest":true,"CreatedAt":"2019-09-29T23:56:02","Actor":"dotnet-maestro[bot]","Number":"1974","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20190924.3\r\n- **Date Produced**: 9/24/2019 6:16 PM\r\n- **Commit**: 0e9ffd6464aff37aef2dc41dc2162d258f266e32\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19474.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19474.3\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19474.3\r\n\r\n[marker]: <> (End:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1974)","Url":"https://github.com/dotnet/winforms/pull/1974","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#1974)"},{"Id":"499307040","IsPullRequest":false,"CreatedAt":"2019-09-28T07:34:05","Actor":"weltkante","Number":"1982","RawContent":null,"Title":"Reference Source for repository","State":"closed","Body":"[Roslyn](http://source.roslyn.io) and [CoreFX](https://source.dot.net/) have online browsable source for their repositories, we should have that for WPF and WinForms as well. I'm still using [Desktop Reference Source](https://referencesource.microsoft.com/) but WinForms is already moving apart due to the refactoring. Having online browsable source would be very useful for quick research during code reviews. (corresponding issue for WPF dotnet/wpf#1967)","Url":"https://github.com/dotnet/winforms/issues/1982","RelatedDescription":"Closed issue \"Reference Source for repository\" (#1982)"},{"Id":"499571365","IsPullRequest":true,"CreatedAt":"2019-09-27T17:52:23","Actor":"hughbe","Number":"1988","RawContent":null,"Title":"Cleanup Caret interop","State":"open","Body":"## Proposed Changes\r\n- Cleanup `ShowCaret`\r\n- Cleanup `HideCaret`\r\n- Cleanup `GetCaretBlinkTime`\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1988)","Url":"https://github.com/dotnet/winforms/pull/1988","RelatedDescription":"Open PR \"Cleanup Caret interop\" (#1988)"},{"Id":"499514444","IsPullRequest":false,"CreatedAt":"2019-09-27T15:36:16","Actor":"M-Lipin","Number":"1987","RawContent":null,"Title":"Screen reader does not announce expanding and collapsing action for Open button in PropertyGrid ComboBox","State":"open","Body":"**Repro steps:**\r\n1. Create WinForms app with PropertyGrid control and target it to any object where one of the properties is the list that can be represented as ComboBox.\r\n2. Run the app and Switch ON screen reader.\r\n3. Try to expand and collapse the \"Open\" button and check whether the screen reader announces the Expanding or Collapsing action.\r\n\r\n**Actual Result:**\r\nNarrator/ NVDA is not reading Expanding or Collapsing action for the \"Open\" button.\r\n\r\n**Expected Result:**\r\nNarrator should read the Expanding or Collapsing action for the \"Open\" button while user tries to expand or collapse the list.","Url":"https://github.com/dotnet/winforms/issues/1987","RelatedDescription":"Open issue \"Screen reader does not announce expanding and collapsing action for Open button in PropertyGrid ComboBox\" (#1987)"},{"Id":"499440306","IsPullRequest":false,"CreatedAt":"2019-09-27T13:16:59","Actor":"M-Lipin","Number":"1986","RawContent":null,"Title":"Error when entering new value to PropertyGridView row","State":"open","Body":"In case the PropertyGrid is being recreated (or other conditions when selected grid entry is set to null) the application execution can fail with NullReferenceException.\r\n\r\nCorresponding DevDiv issue: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/960781","Url":"https://github.com/dotnet/winforms/issues/1986","RelatedDescription":"Open issue \"Error when entering new value to PropertyGridView row\" (#1986)"},{"Id":"499395452","IsPullRequest":true,"CreatedAt":"2019-09-27T11:37:27","Actor":"RussKie","Number":"1985","RawContent":null,"Title":"WIP: Fix conditional order of precedence","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\n- `ScrollableControl.SetDisplayRectLocation` had an incorrect order of precedence by which a `ScrollWindowEx` message could get sent to the control even though the control did not have a valid handle.\r\nFixes #1955\r\n- fix warning SA1408: Conditional expressions should declare precedence\r\nAs per docs `&&` operator has precedence over `||` and thus the following changes are to increase readability and make SCA happy. The code was correct, it could not have been interpreted any different. \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- We did not have any reported issues directly attributable to the updated code. \r\nThe issue #1955 was found by @hughbe while developing unit tests. \r\nOther cases were discovered after [SCA SA1408 rule](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1408.md) was enabled.\r\n\r\n## Regression? \r\n\r\n- No, it is likely the code had issues from the day one\r\n\r\n## Risk\r\n\r\n- Consumers who may have developed workarounds for the issues discovered may now be getting unexpected results.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- manual\r\n- CTI\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1985)","Url":"https://github.com/dotnet/winforms/pull/1985","RelatedDescription":"Open PR \"WIP: Fix conditional order of precedence\" (#1985)"},{"Id":"499311293","IsPullRequest":true,"CreatedAt":"2019-09-27T10:26:07","Actor":"v-zbsail","Number":"1983","RawContent":null,"Title":"LOC CHECKIN | dotnet/winforms release/3.1 | 20190927","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- Loc update\r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1983)","Url":"https://github.com/dotnet/winforms/pull/1983","RelatedDescription":"Closed or merged PR \"LOC CHECKIN | dotnet/winforms release/3.1 | 20190927\" (#1983)"},{"Id":"499342412","IsPullRequest":true,"CreatedAt":"2019-09-27T09:37:12","Actor":"hughbe","Number":"1984","RawContent":null,"Title":"Remove unused interop interfaces","State":"open","Body":"Extracted from https://github.com/dotnet/winforms/pull/1961\r\n\r\n## Proposed Changes\r\n- `IEnumConnectionPoints` is unused\r\n- `ITypeComp` is unused\r\n- `ITypeLib` is unused\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1984)","Url":"https://github.com/dotnet/winforms/pull/1984","RelatedDescription":"Open PR \"Remove unused interop interfaces\" (#1984)"},{"Id":"499280308","IsPullRequest":false,"CreatedAt":"2019-09-27T07:19:56","Actor":"kpreisser","Number":"1981","RawContent":null,"Title":"Interop.User32.PostMessageW has wrong return type","State":"open","Body":"* .NET Core Version: `master` (7019e1414309d820bc377e987cd1efcf9c17a12d)\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\nHi, while adjusting the task dialog code in #1133 for recent interop changes and changing the usage of `UnsafeNativeMethods.PostMessage()` to `Interop.User32.PostMessageW()` (introduced with #1764), I noticed it has a return type of `IntPtr` (meaning 4 byte on 32-bit and 8 byte on 64-bit):\r\nhttps://github.com/dotnet/winforms/blob/7019e1414309d820bc377e987cd1efcf9c17a12d/src/Common/src/Interop/User32/Interop.PostMessageW.cs#L13-L18\r\n\r\nHowever, `PostMessageW` is defined in `WinUser.h` to return a `BOOL`, which is a C `int` (4 byte on Windows):\r\n```cpp\r\nWINUSERAPI\r\nBOOL\r\nWINAPI\r\nPostMessageW(\r\n    _In_opt_ HWND hWnd,\r\n    _In_ UINT Msg,\r\n    _In_ WPARAM wParam,\r\n    _In_ LPARAM lParam);\r\n```\r\n\r\nTherefore, I think using `IntPtr` as return type is not correct, as it could lead to too many bytes being read. Instead, it should be e.g. a `bool` (marshalled as the 4-byte `BOOL`), `Interop.BOOL` or `int`.\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n```c#\r\npublic static extern IntPtr PostMessageW(...)\r\n```\r\n\r\n**Expected behavior:**\r\n```c#\r\npublic static extern bool PostMessageW(...);\r\n// or\r\npublic static extern Interop.BOOL PostMessageW(...);\r\n```\r\n\r\nThank you!","Url":"https://github.com/dotnet/winforms/issues/1981","RelatedDescription":"Open issue \"Interop.User32.PostMessageW has wrong return type\" (#1981)"},{"Id":"497988384","IsPullRequest":true,"CreatedAt":"2019-09-26T23:36:46","Actor":"RussKie","Number":"1968","RawContent":null,"Title":"Fix 1951 clipboard.get text adds garbage terminator","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #1951\r\nA cherry pick of the fix applied to the master 13c624b13e5a890f2d43c458dad503466d278aca\r\n\r\n\r\n## Proposed changes\r\n\r\n- Fix to a common mistake when switching from a string building API that wasn't sized to a sized one and ending up with garbage at the end. \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- With the fix retrieval of HTML data from the clipboard will only have the expected data.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- unit tests\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1968)","Url":"https://github.com/dotnet/winforms/pull/1968","RelatedDescription":"Closed or merged PR \"Fix 1951 clipboard.get text adds garbage terminator\" (#1968)"},{"Id":"498917912","IsPullRequest":true,"CreatedAt":"2019-09-26T14:20:56","Actor":"hughbe","Number":"1980","RawContent":null,"Title":"Cleanup IErrorInfo and ISupportErrorInfo","State":"open","Body":"## Proposed changes\r\n- Cleanup `IErrorInfo` and `ISupportErrorInfo`\r\n- Fix bug where we'd get the error info even if we didn't support it. According to the docs, if `ISupportErrorInfo::InterfaceSupportsErrorInfo method` returns `S_FALSE` then it is not supported so we shouldn't get the `IErrorInfo` which would throw\r\n![image](https://user-images.githubusercontent.com/1275900/65696423-192fcc80-e071-11e9-9cc3-6236f24122ee.png)\r\n/cc @JeremyKuhne for the interop fix :)\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1980)","Url":"https://github.com/dotnet/winforms/pull/1980","RelatedDescription":"Open PR \"Cleanup IErrorInfo and ISupportErrorInfo\" (#1980)"},{"Id":"498916170","IsPullRequest":true,"CreatedAt":"2019-09-26T14:18:10","Actor":"hughbe","Number":"1979","RawContent":null,"Title":"Cleanup OleCreatePropertyFrameIndirect","State":"open","Body":"## Proposed Changes\r\n- Cleanup `OleCreatePropertyFrameIndirect`\r\n- Cleanup and structify `OCPFIPARAMS`\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1979)","Url":"https://github.com/dotnet/winforms/pull/1979","RelatedDescription":"Open PR \"Cleanup OleCreatePropertyFrameIndirect\" (#1979)"},{"Id":"498895365","IsPullRequest":true,"CreatedAt":"2019-09-26T13:45:37","Actor":"hughbe","Number":"1978","RawContent":null,"Title":"Cleanup Menu related interop","State":"open","Body":"## Proposed Changes\r\n- Cleanup Menu related interop\r\n- Add some menu tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1978)","Url":"https://github.com/dotnet/winforms/pull/1978","RelatedDescription":"Open PR \"Cleanup Menu related interop\" (#1978)"},{"Id":"498693887","IsPullRequest":true,"CreatedAt":"2019-09-26T06:50:17","Actor":"vladimir-krestov","Number":"1977","RawContent":null,"Title":"[Accessibility][HC]: Fixing DataGridView background color in HC themes","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #1976 \r\n\r\nOriginal bug:\r\n- [Bug 820332:](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/820332) Accessibility: [MAS42A] [HC 1/Black]: The no row-data area’s background is black in DGV on HC 1/Black theme\r\n\r\n\r\n## Proposed changes\r\n\r\n- Change implementation of using the backgroundBrush when painting DataGridView background in HC1 and HC Black themes.\r\n- Use `SystemBrushes.ControlLight` as default backgroundBrush in HC themes with black DataGridView background.\r\nInitially, it was used `SystemBrushes.AppWorkspace` for DataGridView background. \r\n![image](https://user-images.githubusercontent.com/49272759/65663960-dd7d0e80-e040-11e9-801b-2d6ffdc7e643.png)\r\n\r\n> There is no ability to set backgroundBrush.Color property\r\n\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Changed UI color. In HC1 and HC Black themes DataGridView background color is white.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- No\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\nHC1:\r\n![image](https://user-images.githubusercontent.com/49272759/65664442-0356e300-e042-11e9-87a4-86bec303fe35.png)\r\n\r\nHC2:\r\n![image](https://user-images.githubusercontent.com/49272759/65664471-0fdb3b80-e042-11e9-869e-b97fcdfbd258.png)\r\n\r\nHC Black:\r\n![image](https://user-images.githubusercontent.com/49272759/65664496-1cf82a80-e042-11e9-8b2c-d81d1c35cf19.png)\r\n\r\nHC White:\r\n![image](https://user-images.githubusercontent.com/49272759/65664519-284b5600-e042-11e9-8413-f35d27ee9598.png)\r\n\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\nHC1:\r\n![image](https://user-images.githubusercontent.com/49272759/65662666-80338e00-e03d-11e9-9754-96ea5a7589c4.png)\r\nHC2:\r\n![image](https://user-images.githubusercontent.com/49272759/65662704-9d685c80-e03d-11e9-88a7-30c13c343397.png)\r\nHC Black:\r\n![image](https://user-images.githubusercontent.com/49272759/65662731-ad803c00-e03d-11e9-8a5d-e104b78d2c67.png)\r\nHC White:\r\n![image](https://user-images.githubusercontent.com/49272759/65662762-bf61df00-e03d-11e9-8bf6-d56ae3c6b8bd.png)\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual UI testing\r\n\r\n<!-- ## Accessibility testing  Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET Core Version: 3.1.0-preview1.19458.7\r\n- Microsoft Windows [Version 10.0.18362.356]\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1977)","Url":"https://github.com/dotnet/winforms/pull/1977","RelatedDescription":"Open PR \"[Accessibility][HC]: Fixing DataGridView background color in HC themes\" (#1977)"},{"Id":"498676497","IsPullRequest":false,"CreatedAt":"2019-09-26T06:01:01","Actor":"vladimir-krestov","Number":"1976","RawContent":null,"Title":"[Accessibility][HC]: The no row-data area’s background is black in DGV on HC 1/Black theme","State":"open","Body":"* .NET Core Version: 3.1.0-preview1.19458.7\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n- DataGridView no row-data area color is not contrast\r\n\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\nThe DGV no row-data area’s background is black in HC 1/Black themes.\r\nHC 1:\r\n![image](https://user-images.githubusercontent.com/49272759/65661769-2f229a80-e03b-11e9-9668-e897a4093cda.png)\r\n\r\nHC Black:\r\n![image](https://user-images.githubusercontent.com/49272759/65661774-334eb800-e03b-11e9-8af7-46ba55e18960.png)\r\n\r\n**Expected behavior:**\r\nThe no row-data area’s background should be visible like it works in HC 2/White themes. \r\nHC 2:\r\n![image](https://user-images.githubusercontent.com/49272759/65661794-3ea1e380-e03b-11e9-8057-486e3e02c1ce.png)\r\n\r\nHC White:\r\n![image](https://user-images.githubusercontent.com/49272759/65661800-45c8f180-e03b-11e9-89af-a01aa77a2d43.png)\r\n\r\n\r\n**Minimal repro:**\r\n- Create .Net Core app\r\n- Add DataGridView to the app\r\n- Check DataGridView background colors in High Contrast themes","Url":"https://github.com/dotnet/winforms/issues/1976","RelatedDescription":"Open issue \"[Accessibility][HC]: The no row-data area’s background is black in DGV on HC 1/Black theme\" (#1976)"},{"Id":"497662241","IsPullRequest":false,"CreatedAt":"2019-09-26T05:15:07","Actor":"ryancheung","Number":"1965","RawContent":null,"Title":".Net Core 3.0 app crashes if got `IMM.ImnChangeCandidate` event","State":"closed","Body":"* .NET Core Version: 3.0\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\nI reported this bug in MSDN dev forum before, but got no response. I don't why there's no any Microsoft dev caring about this issue. So again I put it here:\r\n\r\nGiven I'm making a game based on Winforms and SharpDX. The game will run with exclusive fullscreen mode. Then I have to render the candidate list of IME manually in game, just like what WoW Classic do.\r\n\r\nBut unfornately, It just **bugged**, there's no candidate list(or no candidate changed event) in most typing(I'm using the default Chinese IME os provided, Microsoft Pinyin).\r\n\r\nThen I made a project to reproduce the bug:\r\n\r\n.Net Framework version: https://github.com/ryancheung/WindowsForms.IMEHelper\r\n.Net Core 3.0 version: https://github.com/ryancheung/WindowsForms.IMEHelper.Core\r\n\r\n.Net Framework version runs without any crash, but it reproduces the bug extractly.\r\n.Net Core 3.0 version will crash if got `IMM.ImnChangeCandidate` event. Maybe this is another bug in donet core. But it still reproduces the bug.\r\n\r\n**Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n\r\nIt does not emit `IMM.ImnChangeCandidate` event on every correct text composition of Chinese Pinyin.\r\n\r\n**Expected behavior:**\r\n\r\nIt should emit `IMM.ImnChangeCandidate` event on every correct text composition of Chinese Pinyin.\r\n\r\n**Minimal repro:**\r\n\r\n.Net Framework version: https://github.com/ryancheung/WindowsForms.IMEHelper (open with VS 2017)\r\n.Net Core 3.0 version: https://github.com/ryancheung/WindowsForms.IMEHelper.Core (open with VS2019)","Url":"https://github.com/dotnet/winforms/issues/1965","RelatedDescription":"Closed issue \".Net Core 3.0 app crashes if got `IMM.ImnChangeCandidate` event\" (#1965)"},{"Id":"497617763","IsPullRequest":false,"CreatedAt":"2019-09-26T00:39:18","Actor":"epikgit","Number":"1964","RawContent":null,"Title":"Error in opening the winform designer for a certain form","State":"closed","Body":"* .NET Core Version: 3.0.100\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\nI've got a small application with 6 forms migrated from .NET Framework 4.7.\r\nNow I'm on .NET Core 3.0 and the application builds regularly an works well.\r\nWhen I try to design my forms, the designer opens regularly for all of them except one that throw a strange error:\r\n_Unable to find method 'SendRequestAsync/2' on {no object} for the following reasons: An argument was not supplied for a required parameter._\r\n\r\nCall stack:\r\n```\r\nat  System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat  System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task  task)\r\nat System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task  task)\r\nat StreamJsonRpc.JsonRpc.d__92`1.MoveNext()\r\n---  End of stack trace from previous location where exception was thrown ---\r\nat  System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat  System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task  task)\r\nat  Microsoft.VisualStudio.WinForms.Protocol.WinFormsServer.d__31`1.MoveNext()\r\n---  End of stack trace from previous location where exception was thrown ---\r\nat  System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat  System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task  task)\r\nat  Microsoft.VisualStudio.Design.Remote.DesignerSession.<>c__DisplayClass54_0.<b__0>d.MoveNext()\r\n---  End of stack trace from previous location where exception was thrown ---\r\nat  System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\nat  System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task  task)\r\nat  Microsoft.VisualStudio.Threading.JoinableTask.CompleteOnCurrentThread()\r\nat  Microsoft.VisualStudio.Threading.JoinableTask`1.CompleteOnCurrentThread()\r\nat  Microsoft.VisualStudio.Threading.JoinableTaskFactory.Run[T](Func`1 asyncMethod,  JoinableTaskCreationOptions creationOptions)\r\nat  Microsoft.VisualStudio.Threading.JoinableTaskFactory.Run[T](Func`1  asyncMethod)\r\nat  Microsoft.VisualStudio.Design.Remote.DesignerSession.Run[T](Func`1 func)\r\nat  Microsoft.VisualStudio.Design.Remote.DesignerSession.InitializeRootComponent(CodeTypeDeclaration  typeDeclaration)\r\nat  Microsoft.VisualStudio.WinForms.RemoteClient.Loader.RemoteCodeDomDesignerLoader.PerformLoad(IDesignerSerializationManager  manager)\r\nat  Microsoft.VisualStudio.Design.Serialization.CodeDom.VSCodeDomDesignerLoader.PerformLoad(IDesignerSerializationManager  serializationManager)\r\n---  End of stack trace from previous location where  exception was thrown ---\r\nat  Microsoft.VisualStudio.Design.Serialization.CodeDom.VSCodeDomDesignerLoader.PerformLoad(IDesignerSerializationManager  serializationManager)\r\nat  Microsoft.VisualStudio.Design.Serialization.CodeDom.VSCodeDomDesignerLoader.DeferredLoadHandler.Microsoft.VisualStudio.TextManager.Interop.IVsTextBufferDataEvents.OnLoadCompleted(Int32  fReload)\r\n```\r\n\r\n**Minimal repro:**\r\nIt is difficult to reproduce the error because the form is quite vaste. \r\nI hope someone can understand the call stack to put me in the right direction to allow me to reproduce only the part of the form code that probably throws the error.\r\n\r\nI can only add these generic information:\r\n- the form inherits from System.Windows.Form.Form like any other in the application (I remind that the others forms open regularly in the VS editor);\r\n- the form has a parameterless constructor and one constructor with a string parameter like many others forms;\r\n- I added some custom controls in the form but I did the same with the others;\r\n- the form has been built \"regularly\" with a main class and a partial class in .Designer.cs file like the others.\r\n\r\n[edit] re-formatted the stack trace","Url":"https://github.com/dotnet/winforms/issues/1964","RelatedDescription":"Closed issue \"Error in opening the winform designer for a certain form\" (#1964)"},{"Id":"497923992","IsPullRequest":true,"CreatedAt":"2019-09-25T23:17:26","Actor":"hughbe","Number":"1967","RawContent":null,"Title":"Add more Control/ListView related tests","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1967)","Url":"https://github.com/dotnet/winforms/pull/1967","RelatedDescription":"Closed or merged PR \"Add more Control/ListView related tests\" (#1967)"},{"Id":"498504639","IsPullRequest":true,"CreatedAt":"2019-09-25T20:26:44","Actor":"Tanya-Solyanik","Number":"1975","RawContent":null,"Title":"ImeMode.NoControl in Text and Combo boxes on CHS pinyin was switching to ENG","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\nText box scenario -\r\na form with 2 textboxes with ImeMode property set to NoControl. In CHS pinyin keyboard, when focus moves to the second textbox, ImeMode is unexpectedly turned off and ENG characters are typed in.\r\n\r\nComboBox scenario - \r\n1.\tForm has 3 controls - TextBox, RadioButton and a CombBox, all with IMEMode property set to NoControl (this means they get the current OS IME mode)\r\n2.\tCHS Pinyin is set in the OS (Window key + space bar), before the app is started\r\n3.\tWhen the app is started, user moves focus with mouse from textbox to radio button and then to the ComboBox, \r\nResult - ComboBox shows ENG characters instead of the IME. \r\n\r\n## Proposed changes\r\n\r\ntextbox - reverted an old change that regressed this scenario\r\nCombobox - not a regression. The fix is to propagate the WM_SETFOCUS message to the combobox control from the inner text box\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Basic controls don't support pinyin keyboard with default properties on and require user to press `shift` \r\n\r\n## Regression? \r\n\r\n- textbox issue is a regression, combobox is not\r\n\r\n## Risk\r\n\r\n-low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nComboBox:\r\n![image](https://user-images.githubusercontent.com/15823268/65636789-dcdc6d80-df97-11e9-93fb-b739af5d02f0.png)\r\n\r\nTextBox:\r\n![image](https://user-images.githubusercontent.com/15823268/65636824-eb2a8980-df97-11e9-93fd-58ffb24ec6a3.png)\r\n\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/15823268/65636866-f8e00f00-df97-11e9-866e-d316f314ceeb.png)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\nmanual testing of related scenarios\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\nmanual testing of the related scenarios\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\nWin7, Win10 RS1(1607), 19H1\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1975)","Url":"https://github.com/dotnet/winforms/pull/1975","RelatedDescription":"Open PR \"ImeMode.NoControl in Text and Combo boxes on CHS pinyin was switching to ENG\" (#1975)"},{"Id":"498262452","IsPullRequest":true,"CreatedAt":"2019-09-25T12:44:39","Actor":"hughbe","Number":"1972","RawContent":null,"Title":"Cleanup INPUT related interop","State":"open","Body":"## Proposed Changes\r\n- Move `INPUT`, `MOUSEINPUT` and `KEYBDINPUT` to Interop\r\n- Cleanup `VK_` constants\r\n- Cleanup `GetKeyState`\r\n- Cleanup `SendInput`\r\n- Avoid allocating arrays, prefer stackallocated `Span<INPUT>`\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1972)","Url":"https://github.com/dotnet/winforms/pull/1972","RelatedDescription":"Open PR \"Cleanup INPUT related interop\" (#1972)"},{"Id":"498244691","IsPullRequest":true,"CreatedAt":"2019-09-25T12:10:54","Actor":"hughbe","Number":"1971","RawContent":null,"Title":"Cleanup InitCommonControls and InitCommonControlsEx","State":"open","Body":"## Proposed Changes\r\n- Cleanup `InitCommonControls` and `InitCommonControlsEx`\r\n- Cleanup enum usages\r\n- Structify `INITCOMMONCONTROLSEX`\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1971)","Url":"https://github.com/dotnet/winforms/pull/1971","RelatedDescription":"Open PR \"Cleanup InitCommonControls and InitCommonControlsEx\" (#1971)"},{"Id":"498095089","IsPullRequest":false,"CreatedAt":"2019-09-25T07:14:38","Actor":"Amy-Li02","Number":"1970","RawContent":null,"Title":"The template C# Windows Forms Controls Library(.NET Core) is missing","State":"open","Body":"* .NET Core Version: .NET Core 3.1.100-preview1-014066\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**More info**\r\nIn CLI dialog, there also doesn't exist C# Windows Forms Controls Library(.NET Core) template.\r\n![image](https://user-images.githubusercontent.com/49627022/65577269-11efbc80-dfa6-11e9-9403-48f79ca1c8f1.png)\r\n\r\n**Minimal Reproduction Steps**\r\n1. Launch VS and click the \"New Project\", the **Create a new project** dialog will show up.\r\n\r\n**Expected Behavior**\r\nThere should exist  C# Windows Forms Controls Library(.NET Core) template in Create a new project dialog.\r\n\r\n**Current Behavior**\r\nThere doesn't exist C# Windows Forms Controls Library(.NET Core) template, only exist C# Windows Forms Controls Library(.NET Framework) template in Create a new project dialog.\r\n\r\n![image](https://user-images.githubusercontent.com/49627022/65576201-131fea00-dfa4-11e9-9d59-fbc276c5c1fe.png)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/1970","RelatedDescription":"Open issue \"The template C# Windows Forms Controls Library(.NET Core) is missing\" (#1970)"},{"Id":"497991312","IsPullRequest":true,"CreatedAt":"2019-09-25T01:31:19","Actor":"RussKie","Number":"1969","RawContent":null,"Title":"Prep'ing for 3.0.1 set the next patch release to 3.0.1","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1969)","Url":"https://github.com/dotnet/winforms/pull/1969","RelatedDescription":"Closed or merged PR \"Prep'ing for 3.0.1 set the next patch release to 3.0.1\" (#1969)"},{"Id":"497799770","IsPullRequest":true,"CreatedAt":"2019-09-24T16:35:54","Actor":"vladimir-krestov","Number":"1966","RawContent":null,"Title":"WIP: [Accessibility][HC] Fixing DataGridViewComboBoxCell text color in HighContrast1/2 themes","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #1953\r\n**Created instead PR #1954**\r\nOriginal bug:\r\n- [Bug 820338:](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/820338) Accessibility: [MAS42A] [HC 1/2]: The text color is incorrect in DGV on HC 1/2 theme\r\n\r\n## Proposed changes\r\n\r\n- Change default cell fore color\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- A user gets another text color in HC themes\r\n\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- No\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n![image](https://user-images.githubusercontent.com/49272759/65530769-380f5100-df01-11e9-8e30-460414e10d93.png)\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n![image](https://user-images.githubusercontent.com/49272759/65530779-3e053200-df01-11e9-8ce5-e24916ec9bf5.png)\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing\r\n \r\n\r\n<!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET Core Version: 3.1.0-preview1.19458.7\r\n- Microsoft Windows [Version 10.0.18362.356]\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1966)","Url":"https://github.com/dotnet/winforms/pull/1966","RelatedDescription":"Open PR \"WIP: [Accessibility][HC] Fixing DataGridViewComboBoxCell text color in HighContrast1/2 themes\" (#1966)"},{"Id":"497570900","IsPullRequest":true,"CreatedAt":"2019-09-24T09:57:31","Actor":"RussKie","Number":"1963","RawContent":null,"Title":"fix: DataBindings.Remove/Clear unsubscribe from the INotifyPropertyChanged.PropertyChanged event","State":"closed","Body":"Fixes #1679\r\n(cherry picked from commit e04cb684c868a13065f385b2b312c3ab3d89c999)\r\n\r\n\r\nA regression introduced in #854 that resulted in making use of target control owner's `BindingManagerBase` instead of using the target control's own.\r\n\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n## Proposed changes\r\n\r\n- Restore the original behavior\r\n- Add tests \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Bindings operate as expected\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- manual\r\n- CTI\r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1963)","Url":"https://github.com/dotnet/winforms/pull/1963","RelatedDescription":"Closed or merged PR \"fix: DataBindings.Remove/Clear unsubscribe from the INotifyPropertyChanged.PropertyChanged event\" (#1963)"},{"Id":"497550596","IsPullRequest":false,"CreatedAt":"2019-09-24T08:54:17","Actor":"hughbe","Number":"1962","RawContent":null,"Title":"[CI] Windows Debug Build Occasionally Hangs","State":"open","Body":"I've observed that the Windows Debug Build sometimes times out at 60 minutes in CI and fails to report any results\r\n\r\nNo diagnosis","Url":"https://github.com/dotnet/winforms/issues/1962","RelatedDescription":"Open issue \"[CI] Windows Debug Build Occasionally Hangs\" (#1962)"},{"Id":"497515006","IsPullRequest":true,"CreatedAt":"2019-09-24T07:42:59","Actor":"hughbe","Number":"1961","RawContent":null,"Title":"Extract misc Ole32 data types","State":"open","Body":"## Proposed Changes\r\n- Extract `ELEMDESC`, `IDLDESC`, `PARAMDESC`, `TYPEDESC`, `VARDESC` and friends to `Interop.Ole32` namespace\r\n- Structify `DISPPARAMS`\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/1961)","Url":"https://github.com/dotnet/winforms/pull/1961","RelatedDescription":"Open PR \"Extract misc Ole32 data types\" (#1961)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-09-30T05:30:59.4334011Z","RunDurationInMilliseconds":1107}