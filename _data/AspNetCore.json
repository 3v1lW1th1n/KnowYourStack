{"Data":{"Blog":{"FeedItems":[{"Title":"ASP.NET Core 2.1.0-preview2: Improvements to the Kestrel HTTP server","PublishedOn":"2018-04-13T00:42:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Change default transport to Sockets Building off the improvements to the managed sockets implementation in .NET Core we have changed the default transport in Kestrel from libuv to sockets. As a...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-improvements-to-the-kestrel-http-server/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview2 now available","PublishedOn":"2018-04-12T17:24:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we&#8217;re very happy to announce that the second preview of the next minor release of ASP.NET Core and .NET Core is now available for you to try out. This second preview includes many...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/04/12/asp-net-core-2-1-0-preview2-now-available/","RawContent":null},{"Title":"Get started building .NET web apps that run in the browser with Blazor","PublishedOn":"2018-03-22T17:00:26+00:00","CommentsCount":42,"FacebookCount":0,"Summary":"Today we released our first public preview of Blazor, a new experimental .NET web framework using C#/Razor and HTML that runs in the browser with WebAssembly. Blazor enables full stack web development...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/get-started-building-net-web-apps-in-the-browser-with-blazor/","RawContent":null},{"Title":"ASP.NET Core manageability and Application Insights improvements","PublishedOn":"2018-03-22T14:12:38+00:00","CommentsCount":4,"FacebookCount":0,"Summary":"There are many great investments on the ASP.NET Core 2.1 roadmap. These investments make ASP.NET Core applications easier to write, host, test, and make security and standards compliant. This blog...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/22/asp-net-core-manageability-and-application-insights-improvements/","RawContent":null},{"Title":"Announcing Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5","PublishedOn":"2018-03-19T22:00:27+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today we released Preview 1 of ASP.NET MVC 5.2.5, Web API 5.2.5, and Web Pages 3.2.5 on NuGet. This is a patch release that contains only bug fixes. You can find the full list of bug fixes for this...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/19/announcing-preview-1-of-asp-net-mvc-5-2-5-web-api-5-2-5-and-web-pages-3-2-5/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Functional testing of MVC applications","PublishedOn":"2018-03-05T18:30:28+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"For ASP.NET Core 2.1 we have created a new package, Microsoft.AspNetCore.Mvc.Testing, to help streamline in-memory end-to-end testing of MVC applications using TestServer. This package takes care of...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/05/asp-net-core-2-1-0-preview1-functional-testing-of-mvc-applications/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: GDPR enhancements","PublishedOn":"2018-03-04T19:21:40+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2018 sees the introduction of the General Data Protection Regulation, an EU framework to allow EU citizens to control, correct and delete their data, no matter where in the word it is held. In ASP.NET...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/04/asp-net-core-2-1-0-preview1-gdpr-enhancements/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Introducing Identity UI as a library","PublishedOn":"2018-03-02T19:00:19+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"ASP.NET Core has historically provided project templates with code for setting up ASP.NET Core Identity, which enables support for identity related features like user registration, login, account...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/02/aspnetcore-2-1-identity-ui/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Razor UI in class libraries","PublishedOn":"2018-03-01T18:00:26+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"One frequently requested scenario that ASP.NET Core 2.1 improves is building UI in reusable class libraries. With ASP.NET Core 2.1 you can package your Razor views and pages (.cshtml files) along with...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/03/01/asp-net-core-2-1-razor-ui-in-class-libraries/","RawContent":null},{"Title":"ASP.NET Core 2.1.0-preview1: Improvements to IIS hosting","PublishedOn":"2018-03-01T01:56:02+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"The ASP.NET Core Module (ANCM) is a global IIS module that has been responsible for proxying requests over from IIS to your backend ASP.NET Core application running Kestrel. Since 2.0 we have been...","Href":"https://blogs.msdn.microsoft.com/webdev/2018/02/28/asp-net-core-2-1-0-preview1-improvements-to-iis-hosting/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"7523236255","Type":"IssuesEvent","CreatedAt":"2018-04-12T23:46:49","Actor":"JunTaoLuo","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3052","RelatedDescription":"Opened issue \"Routing tests broken on Mac\" (#3052) at aspnet/Home","RelatedBody":"https://travis-ci.org/aspnet/Routing/jobs/365869435\r\n\r\n```\r\n[xUnit.net 00:00:03.2304060]     Microsoft.AspNetCore.Routing.RouteTest.GetVirtualPath_AlwaysUsesDefaultUrlEncoder [FAIL]\r\nFailed   Microsoft.AspNetCore.Routing.RouteTest.GetVirtualPath_AlwaysUsesDefaultUrlEncoder\r\nError Message:\r\n Assert.Equal() Failure\r\n                                 ↓ (pos 62)\r\nExpected: ···20%23characters%20J%C3%B6rn\r\nActual:   ···20%23characters%20J%EF%BF%BDrn\r\n                                 ↑ (pos 62)\r\nStack Trace:\r\n   at Microsoft.AspNetCore.Routing.RouteTest.GetVirtualPath_AlwaysUsesDefaultUrlEncoder() in /_/test/Microsoft.AspNetCore.Routing.Tests/RouteTest.cs:line 675\r\n```\r\n\r\ncc @kichalla @jbagga @NTaylorMullen ?"},{"Id":"7521688124","Type":"IssuesEvent","CreatedAt":"2018-04-12T17:59:32","Actor":"karam94","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/3049","RelatedDescription":"Closed issue \"The required antiforgery cookie is not present.\" (#3049) at aspnet/Home","RelatedBody":"I'm looking to utilise an XSRF token with my .NET Core 2 API. I'm using a Vue.Js front-end.\r\n\r\nI have the back-end configured as instructed here: https://stackoverflow.com/a/44035774/2027404\r\n\r\nOnce logging in, I create a cookie called \"XSRF-TOKEN\" and I've written an interceptor in Vue to mimic what AngularJS does, it looks for the cookie and appends the XSRF token with header \"X-XSRF-TOKEN\" to the controller route that is protected by an [AutoValidateAntiforgeryToken] attribute.\r\n\r\nBelow is an example trace of a Post request that is made after the cookie is persisted and login is completed:\r\n```\r\nPOST /api/auth/Test HTTP/1.1\r\nHost: localhost:5000\r\nConnection: keep-alive\r\nContent-Length: 0\r\nOrigin: http://localhost:5000\r\nX-XSRF-TOKEN: CfDJ8Ku5qKiYnPBCmHLFQRR3pGmv482utwpDs1AssvvtQ1yf2eGgasNE4DOTdxivPLqv5e4TGuG800elYMFyJqTC7bzOfnY0HVCUD-Dw0pn-bkBZeN2GjBBvqMJ79Vcwun4khLe9qlzxyBTB0W1XEu_OJq0\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.167 Safari/537.36\r\nContent-Type: application/json;charset=utf-8\r\nAccept: application/json, text/plain, */*\r\nX-Requested-With: XMLHttpRequest\r\nReferer: http://localhost:5000/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-GB,en-US;q=0.9,en;q=0.8\r\nCookie: XSRF-TOKEN=CfDJ8Ku5qKiYnPBCmHLFQRR3pGmv482utwpDs1AssvvtQ1yf2eGgasNE4DOTdxivPLqv5e4TGuG800elYMFyJqTC7bzOfnY0HVCUD-Dw0pn-bkBZeN2GjBBvqMJ79Vcwun4khLe9qlzxyBTB0W1XEu_OJq0\r\n```\r\nSo the point really is to prove that not only is my cookie sent but I am including the header which is expected by my Startup.cs.\r\n\r\n```\r\npublic void ConfigureServices(IServiceCollection services) {\r\n        services.AddAntiforgery(options => options.HeaderName = \"X-XSRF-TOKEN\");\r\n        services.AddMvc();\r\n}\r\n```\r\n\r\nThe XSRF token is created when a user successfully logs in.\r\nI generate it as follows in a controller:\r\n`_antiForgeryService.GetTokens(HttpContext).RequestToken;\r\n`and save it in a cookie for my front-end to deal with.\r\nIn fact it can be seen in my POST trace above appended within the header to prove this. Once I then navigate to the route with my [AutoValidateAntiforgeryToken] attribute I have a 400 returned. The exception thrown is as follows:\r\n\r\n`Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ValidateAntiforgeryTokenAuthorizationFilter:Information: Antiforgery token validation failed. The required antiforgery cookie \".AspNetCore.Antiforgery.trRVU3CSO-M\" is not present.`\r\n\r\nSo I'm interested as to why it's searching for a cookie rather than utilising the X-XSRF-TOKEN within the header of my request to validate? Am I missing some boilerplate configuration or something?\r\n\r\nThanks"},{"Id":"7520840594","Type":"IssuesEvent","CreatedAt":"2018-04-12T15:27:41","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3051","RelatedDescription":"Opened issue \"Problems with default key store on Pro Windows\" (#3051) at aspnet/Home","RelatedBody":"_From @ShadowDancer on April 12, 2018 14:14_\n\n### Problems with default key store on Pro Windows\r\n*Because of differences between pro and server windows editions key store will work incorrectly on Windows 10 pro machines ootb.*  \r\n\r\n### Functional impact\r\n*Because of default fallback to in-memory store, encryption keys will be discarded after each restart, logging users out, etc.*  \r\n\r\n### Minimal repro steps\r\n1. Deploy AspNetCore applications with auth on IIS on Server and Pro machines\r\n2. Set `loadUserProfile` in AppPool configuration to true\r\n3. Login on both applications (in browser)\r\n4. Restart application in IIS\r\n5. Refresh both applications (in browser)\r\n\r\n### Expected result\r\nBoth apps should be logged in, because after setting `loadUserProfile=\"true\"` one expects keys to be stored in ` %LOCALAPPDATA%\\ASP.NET\\DataProtection-Keys` directory, following the doc:\r\nhttps://docs.microsoft.com/en-us/aspnet/core/security/data-protection/configuration/default-settings?view=aspnetcore-2.1\r\nOR it should be mentioned in doc and/or in logs that `applicationHost.config` needs to be altered manually. \r\n\r\n### Actual result\r\n*User is logged out in application hosted on Windows 10 Pro machine, and logged in on Windows Server machine*\r\n\r\n### Further technical details\r\nThe problem lies in difference between default `applicationHost.config` (`C:\\Windows\\System32\\inetsrv\\Config\\app\\applicationHost.config`):\r\nwindows 7/10 pro applicationPoolDefaults :\r\n```\r\n            <applicationPoolDefaults managedRuntimeVersion=\"v4.0\">\r\n                <processModel identityType=\"ApplicationPoolIdentity\" />\r\n            </applicationPoolDefaults>\r\n```\r\nwindows server 2012 R2 applicationPoolDefaults \r\n```\r\n            <applicationPoolDefaults managedRuntimeVersion=\"v4.0\">\r\n                <processModel identityType=\"ApplicationPoolIdentity\" loadUserProfile=\"true\" setProfileEnvironment=\"false\" />\r\n            </applicationPoolDefaults>\r\n```\r\nthere is `setProfileEnvironment` attribute set to false on Pro machines. This setting cannot be altered in advanced appPool configuration and is not set to true when `loadUserProfile` is set to true.\r\n Because of this environment variable\r\n `%LOCALAPPDATA%` is set to `C:\\WINDOWS\\system32\\config\\systemprofile` and not `C:\\Users\\myapppool\\AppData\\Local`, and keys cannot be stored there because there is no write permission.\r\nI would expect that it is either correctly configured by default, or it is stated in documentation (or found in google), that I need to manually configure appPool. I've lost lots of time debugging it. I think it is important, because developers are generally working on Pro, not Server machines (are they?).\n\n_Copied from original issue: aspnet/Hosting#1375_"},{"Id":"7519972777","Type":"IssuesEvent","CreatedAt":"2018-04-12T13:17:56","Actor":"AerisG222","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3050","RelatedDescription":"Opened issue \"2.1 preview 2 Fedora packaging issue\" (#3050) at aspnet/Home","RelatedBody":"I just upgraded from preview1 to preview2, and am getting the following error when running my application:\r\n\r\n```\r\nIt was not possible to find any compatible framework version\r\nThe specified framework 'Microsoft.AspNetCore.App', version '2.1.0-preview2-final' was notfound.\r\n  - Check application dependencies and target a framework version installed at:\r\n      /usr/share/dotnet/\r\n  - Installing .NET Core prerequisites might help resolve this problem:\r\n      http://go.microsoft.com/fwlink/?LinkID=798306&clcid=0x409\r\n  - The .NET Core framework and SDK can be installed from:\r\n      https://aka.ms/dotnet-download\r\n  - The following versions are installed:\r\n      2.1.0-preview1-final at [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n```\r\n\r\nHere are the dotnet related packages I've installed (`dnf list --installed dotnet* aspnet*`) - in particular, note that aspnetcore-runtime-2.1.0-preview2-final is installed:\r\n\r\n```\r\nInstalled Packages\r\naspnetcore-runtime-2.1.0-preview1-final.x86_64     2.1.0_preview1_final-1    @packages-microsoft-com-prod\r\naspnetcore-runtime-2.1.0-preview2-final.x86_64     2.1.0_preview2_final-1    @packages-microsoft-com-prod\r\naspnetcore-store-2.0.0.x86_64                      2.0.0-1                   @packages-microsoft-com-prod\r\naspnetcore-store-2.0.3.x86_64                      2.0.3-1                   @packages-microsoft-com-prod\r\naspnetcore-store-2.0.5.x86_64                      2.0.5-1                   @packages-microsoft-com-prod\r\ndotnet-host.x86_64                                 2.1.0_preview2_26406_04-1 @packages-microsoft-com-prod\r\ndotnet-hostfxr-2.0.3.x86_64                        2.0.3-1                   @packages-microsoft-com-prod\r\ndotnet-hostfxr-2.0.5.x86_64                        2.0.5-1                   @packages-microsoft-com-prod\r\ndotnet-hostfxr-2.1.0-preview1-26216-03.x86_64      2.1.0_preview1_26216_03-1 @packages-microsoft-com-prod\r\ndotnet-hostfxr-2.1.0-preview2-26406-04.x86_64      2.1.0_preview2_26406_04-1 @packages-microsoft-com-prod\r\ndotnet-runtime-2.0.3.x86_64                        2.0.3-1                   @packages-microsoft-com-prod\r\ndotnet-runtime-2.0.5.x86_64                        2.0.5-1                   @packages-microsoft-com-prod\r\ndotnet-runtime-2.1.0-preview1-26216-03.x86_64      2.1.0_preview1_26216_03-1 @packages-microsoft-com-prod\r\ndotnet-runtime-2.1.0-preview2-26406-04.x86_64      2.1.0_preview2_26406_04-1 @packages-microsoft-com-prod\r\ndotnet-runtime-deps-2.1.0-preview2-26406-04.x86_64 2.1.0_preview2_26406_04-1 @packages-microsoft-com-prod\r\ndotnet-sdk-2.0.3.x86_64                            2.0.3-1                   @packages-microsoft-com-prod\r\ndotnet-sdk-2.1.2.x86_64                            2.1.2-1                   @packages-microsoft-com-prod\r\ndotnet-sdk-2.1.300-preview1-008174.x86_64          2.1.300_preview1_008174-1 @packages-microsoft-com-prod\r\ndotnet-sdk-2.1.300-preview2-008530.x86_64          2.1.300_preview2_008530-1 @packages-microsoft-com-prod\r\ndotnet-sdk-2.1.4.x86_64                            2.1.4-1                   @packages-microsoft-com-prod\r\n```\r\n\r\nLooking at the contents of aspnetcore-runtime-2.1.0-preview2-final (`dnf repoquery -l aspnetcore-runtime-2.1.0-preview2-final`), I noticed the Microsoft.AspNetCore.All and Microsoft.AspNetCore.App were listed as being in `/opt/rh/rh-dotnet20/root/usr/lib64/dotnet/shared/` rather than `/usr/share/dotnet/shared/`.\r\n\r\nI then copied the contents from /opt/rh.. to the expected location in /usr/share and then the application worked again."},{"Id":"7519718633","Type":"IssuesEvent","CreatedAt":"2018-04-12T12:33:18","Actor":"karam94","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/3049","RelatedDescription":"Opened issue \"The required antiforgery cookie is not present.\" (#3049) at aspnet/Home","RelatedBody":"I'm looking to utilise an XSRF token with my .NET Core 2 API. I'm using a Vue.Js front-end.\r\n\r\nI have the back-end configured as instructed here: https://stackoverflow.com/a/44035774/2027404\r\n\r\nOnce logging in, I create a cookie called \"XSRF-TOKEN\" and I've written an interceptor in Vue to mimic what AngularJS does, it looks for the cookie and appends the XSRF token with header \"X-XSRF-TOKEN\" to the controller route that is protected by an [AutoValidateAntiforgeryToken] attribute.\r\n\r\nBelow is an example trace of a Post request that is made after the cookie is persisted and login is completed:\r\n```\r\nPOST /api/auth/Test HTTP/1.1\r\nHost: localhost:5000\r\nConnection: keep-alive\r\nContent-Length: 0\r\nOrigin: http://localhost:5000\r\nX-XSRF-TOKEN: CfDJ8Ku5qKiYnPBCmHLFQRR3pGmv482utwpDs1AssvvtQ1yf2eGgasNE4DOTdxivPLqv5e4TGuG800elYMFyJqTC7bzOfnY0HVCUD-Dw0pn-bkBZeN2GjBBvqMJ79Vcwun4khLe9qlzxyBTB0W1XEu_OJq0\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.167 Safari/537.36\r\nContent-Type: application/json;charset=utf-8\r\nAccept: application/json, text/plain, */*\r\nX-Requested-With: XMLHttpRequest\r\nReferer: http://localhost:5000/\r\nAccept-Encoding: gzip, deflate, br\r\nAccept-Language: en-GB,en-US;q=0.9,en;q=0.8\r\nCookie: XSRF-TOKEN=CfDJ8Ku5qKiYnPBCmHLFQRR3pGmv482utwpDs1AssvvtQ1yf2eGgasNE4DOTdxivPLqv5e4TGuG800elYMFyJqTC7bzOfnY0HVCUD-Dw0pn-bkBZeN2GjBBvqMJ79Vcwun4khLe9qlzxyBTB0W1XEu_OJq0\r\n```\r\nSo the point really is to prove that not only is my cookie sent but I am including the header which is expected by my Startup.cs.\r\n\r\n```\r\npublic void ConfigureServices(IServiceCollection services) {\r\n        services.AddAntiforgery(options => options.HeaderName = \"X-XSRF-TOKEN\");\r\n        services.AddMvc();\r\n}\r\n```\r\n\r\nThe XSRF token is created when a user successfully logs in.\r\nI generate it as follows in a controller:\r\n`_antiForgeryService.GetTokens(HttpContext).RequestToken;\r\n`and save it in a cookie for my front-end to deal with.\r\nIn fact it can be seen in my POST trace above appended within the header to prove this. Once I then navigate to the route with my [AutoValidateAntiforgeryToken] attribute I have a 400 returned. The exception thrown is as follows:\r\n\r\n`Microsoft.AspNetCore.Mvc.ViewFeatures.Internal.ValidateAntiforgeryTokenAuthorizationFilter:Information: Antiforgery token validation failed. The required antiforgery cookie \".AspNetCore.Antiforgery.trRVU3CSO-M\" is not present.`\r\n\r\nSo I'm interested as to why it's searching for a cookie rather than utilising the X-XSRF-TOKEN within the header of my request to validate? Am I missing some boilerplate configuration or something?\r\n\r\nThanks"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"7523981289","Type":"IssuesEvent","CreatedAt":"2018-04-13T04:27:42","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1687","RelatedDescription":"Closed issue \"Authorization of signalr\" (#1687) at aspnet/SignalR","RelatedBody":"Hi, I have a hub that is decorated with [Authorize], when running in debug (IIS) everything works perfectly ,, but when running against the localhost site (IIS) I get:\r\n\r\n401 (Unauthorized)\r\nUncaught (in promise) Error: Unauthorized\r\n    at new HttpError (signalr.min.js:13)\r\n    at XMLHttpRequest.xhr.onload (signalr.min.js:13)\r\n\r\nSeems like a racing problem since working in debug, but i cannot find the issue.  So same host, same build, same browser. Running debug i'm authorized , running normally not authorized. Even when i''m logged into the site.  Any clues?"},{"Id":"7523972472","Type":"IssuesEvent","CreatedAt":"2018-04-13T04:23:52","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1985","RelatedDescription":"Closed issue \"Azure Runtime Extension for 2.1 preview2\" (#1985) at aspnet/SignalR","RelatedBody":"I'm trying to deploy an app to Azure that has been upgraded to preview2, but the Core Runtime Extension in Azure is preview1. Although, the Core Extension is on preview2.\r\n\r\n![azurecore](https://user-images.githubusercontent.com/5844551/38707563-7246a6ba-3e77-11e8-846c-6544fff57236.PNG)\r\n\r\nShould preview2 be available for the Runtime? If not, is there a workaround?\r\n\r\nThanks!"},{"Id":"7523953185","Type":"PullRequestEvent","CreatedAt":"2018-04-13T04:15:40","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1981","RelatedDescription":"Merged pull request \"polyfill UInt8Array.forEach for IE\" (#1981) at aspnet/SignalR","RelatedBody":"Fixes #1979 \r\n\r\n![image](https://user-images.githubusercontent.com/7574/38700155-f6fc4afa-3e4e-11e8-9054-e334e1ef4da4.png)\r\n"},{"Id":"7523953175","Type":"IssuesEvent","CreatedAt":"2018-04-13T04:15:40","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1979","RelatedDescription":"Closed issue \"Verify Browser Tests in IE\" (#1979) at aspnet/SignalR","RelatedBody":"They're broken, I think because of UInt8Array.forEach not existing. I can easily polyfill. Filing this to track."},{"Id":"7523922367","Type":"IssuesEvent","CreatedAt":"2018-04-13T04:03:07","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1989","RelatedDescription":"Opened issue \"[API Review] Make \"synthetic\" HubMessage for Invocations with binding errors\" (#1989) at aspnet/SignalR","RelatedBody":"Rather than an \"ArgumentBindingException\" property, let's make our IHubProtocol implementations return a new `HubMessage`-derived type `BindingErrorMessage` (name to be :bike: :house:ed) that identifies the Invocation ID (so a response can be sent) and the error."},{"Id":"7523908829","Type":"IssuesEvent","CreatedAt":"2018-04-13T03:57:40","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/1988","RelatedDescription":"Opened issue \"Use HubException to \"break through\" EnableDetailedErrors = false\" (#1988) at aspnet/SignalR","RelatedBody":"[From API review]\r\n\r\nLet's move `HubException` to common, add the weird serialization exception and have the server **not** suppress the message when it's thrown by a Hub method, even when `EnableDetailedErrors` is `false`. That way users have a way to send an exception without us suppressing the message."},{"Id":"7523871504","Type":"PullRequestEvent","CreatedAt":"2018-04-13T03:42:33","Actor":"mikaelm12","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/1987","RelatedDescription":"Opened pull request \"Http.Connections.Client API Review changes\" (#1987) at aspnet/SignalR","RelatedBody":"More items from https://github.com/aspnet/SignalR/issues/1976"}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"7524060355","Type":"PullRequestEvent","CreatedAt":"2018-04-13T05:00:51","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7641","RelatedDescription":"Opened pull request \"Fix binding & validating dictionaries of non-simple types in jQuery requests\" (#7641) at aspnet/Mvc","RelatedBody":"- #7423\r\n- retry failed inner bindings with alternate syntax in `ModelStateDictionary`\r\n  - use property syntax if first attempt tried index syntax and visa versa\r\n- instantiate `ShortFormDictionaryValidationStrategy` with full `ModelState` keys\r\n  - can now provide exact `ModelState` keys that `ModelStateDictionary` used in inner bindings\r\n- normalize model names without a leading period in `JQueryKeyValuePairNormalizer`\r\n\r\nnits:\r\n- take a few VS suggestions"},{"Id":"7523601923","Type":"IssuesEvent","CreatedAt":"2018-04-13T02:02:06","Actor":"mkArtakMSFT","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7612","RelatedDescription":"Closed issue \"fail to apply Guid route constraint?\" (#7612) at aspnet/Mvc","RelatedBody":"I am not quite sure whether I did it wrong. From [doc](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/routing#route-constraint-reference) it seems following is valid for routing, but when I tried to access it always return 404.\r\n\r\n```\r\n[Route(\"/test/{id:guid}\")]\r\npublic IActionResult Test([FromRoute]Guid id)\r\n{\r\n    Trace.TraceInformation(id.ToString());\r\n    return Ok();\r\n}\r\n```\r\n\r\ne.g. http://localhost:63950/test/826510d7-00b7-42cc-aeea-6f455f19ec4b\r\n\r\nDo I need to setup somewhere to enable Guid support for routing? Thanks."},{"Id":"7523486478","Type":"PullRequestEvent","CreatedAt":"2018-04-13T01:19:42","Actor":"JunTaoLuo","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/pull/7640","RelatedDescription":"Opened pull request \"Update usage of TestSink\" (#7640) at aspnet/Mvc","RelatedBody":"Preparing for aspnet/Logging#804"},{"Id":"7522888843","Type":"IssuesEvent","CreatedAt":"2018-04-12T22:03:33","Actor":"rynowak","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/7358","RelatedDescription":"Reopened issue \"`[Validation]` attributes do not work for page model properties or page handler parameters\" (#7358) at aspnet/Mvc","RelatedBody":"For example, a page handler such as\r\n``` c#\r\npublic IActionResult OnGet([FromHeader, Required] string hosta)\r\n{\r\n    if (!ModelState.IsValid)\r\n    {\r\n        return BadRequest(ModelState);\r\n    }\r\n\r\n    // ...\r\n    return Page();\r\n}\r\n```\r\nshould always return a `BadRequestResult` because the `hosta` header doesn't exist. Instead, the `ModelState` is valid and everything proceeds.\r\n\r\nNotes: `[Validation]` attributes do work as expected for action parameters. The above problem applies to all `[Validation]` attributes, not just `[Required]`. And, the `[Validation]` attributes are ignored with or without additional attributes; `[FromHeader]` doesn't matter."}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"7524074027","Type":"PullRequestEvent","CreatedAt":"2018-04-13T05:06:38","Actor":"JunTaoLuo","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1754","RelatedDescription":"Opened pull request \"Simplify test logging with new framework\" (#1754) at aspnet/Identity","RelatedBody":"Now that we have improved the infrastructure, the tests can be cleaned up."},{"Id":"7523038824","Type":"IssuesEvent","CreatedAt":"2018-04-12T22:44:02","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1753","RelatedDescription":"Opened issue \"Figure out how to protect login provider key\" (#1753) at aspnet/Identity","RelatedBody":"We were unable to do this in 2.1 due to key rotation issues.\r\n\r\nPotential solns: Modify the scheme or make changes to the value converters to allow passing context (\"the key to use\")\r\n\r\n@ajcvickers do you want me to file a bug in EF about value converter changes?"},{"Id":"7523033259","Type":"IssuesEvent","CreatedAt":"2018-04-12T22:42:34","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1341","RelatedDescription":"Closed issue \"GDPR Support\" (#1341) at aspnet/Identity","RelatedBody":"- [x] Extension points to enable encryption of user data\r\n- [x] Extension point to enable downloading of user data\r\n- [x] Extension point to enable deletion of user data"},{"Id":"7523028840","Type":"PullRequestEvent","CreatedAt":"2018-04-12T22:41:28","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Identity/pull/1745","RelatedDescription":"Merged pull request \"Include social logins and authenticator key as part of personal download\" (#1745) at aspnet/Identity","RelatedBody":"We now display the linked login providers and the authenticator key if it exists.\r\n\r\nApps will be responsible for displaying any additional custom tokens they might store (like access/refresh tokens) since we don't have any way of enumerating these today.\r\n\r\n@blowdart @ajcvickers "},{"Id":"7523022505","Type":"PullRequestEvent","CreatedAt":"2018-04-12T22:39:41","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/pull/1435","RelatedDescription":"Closed pull request \"Always validate email\" (#1435) at aspnet/Identity","RelatedBody":"Fixes https://github.com/aspnet/Identity/issues/1189\r\n\r\n@ajcvickers "},{"Id":"7522913379","Type":"PullRequestEvent","CreatedAt":"2018-04-12T22:09:56","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/pull/1752","RelatedDescription":"Opened pull request \"Fix error message\" (#1752) at aspnet/Identity","RelatedBody":"Fixes https://github.com/aspnet/Identity/issues/1669"},{"Id":"7520918988","Type":"IssuesEvent","CreatedAt":"2018-04-12T15:39:49","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1751","RelatedDescription":"Closed issue \"Upgrade to Bootstrap 4\" (#1751) at aspnet/Identity","RelatedBody":"Bootstrap 4 has been released for a while. It would be nice if Identity UI support it by default"},{"Id":"7517620689","Type":"IssuesEvent","CreatedAt":"2018-04-12T04:45:32","Actor":"danroth27","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1748","RelatedDescription":"Closed issue \"Can't scaffold identity in new project.\" (#1748) at aspnet/Identity","RelatedBody":"Using 2.1 Preview 2.\r\n\r\nFollowing directions from blog post, want to scaffold identity using the command\r\ndotnet aspnet-codegenerator identity -dc WebApplication1.Data.ApplicationDbContext\r\n\r\nI receive this error:\r\ndotnet : No executable found matching command \"dotnet-aspnet-codegenerator\"\r\n\r\nWhat does my csproj file need to look like to find this command? I've tried installing all sorts of packages and adding tools but can't get it to work. What's this supposed to look like?\r\n"}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"7523470228","Type":"IssuesEvent","CreatedAt":"2018-04-13T01:14:23","Actor":"HFadeel","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2490","RelatedDescription":"Opened issue \"What is the expected Performance difference between managed sockets and Libuv?\" (#2490) at aspnet/KestrelHttpServer","RelatedBody":"Is there is any performance/benchmark numbers on the difference between the managed sockets and Libuv?"},{"Id":"7523354951","Type":"PullRequestEvent","CreatedAt":"2018-04-13T00:29:35","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2483","RelatedDescription":"Merged pull request \" Avoid nullref in KestrelEventSource\" (#2483) at aspnet/KestrelHttpServer","RelatedBody":"#2331"},{"Id":"7522499090","Type":"PullRequestEvent","CreatedAt":"2018-04-12T20:38:14","Actor":"benaadams","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2488","RelatedDescription":"Opened pull request \" Less StringValue struct copies for header checks\" (#2488) at aspnet/KestrelHttpServer","RelatedBody":"/cc @halter73 @davidfowl something more like this?"}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"7523208358","Type":"PullRequestEvent","CreatedAt":"2018-04-12T23:37:06","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/2273","RelatedDescription":"Opened pull request \"Obsoleted IRazorEngineBuilder APIs\" (#2273) at aspnet/Razor","RelatedBody":"#2082 \r\n\r\n- Marked IRazorEngineBuilder and related APIs as [Obsolete].\r\n- Updated all the tests to not use the obsoleted APIs.\r\n- Found a bug (#2267) in Preallocated tag helper optimization in the process\r\n- Included the fix for the above bug\r\n\r\n@NTaylorMullen @rynowak "}],"ResultType":"GitHubEvent"},"Templates":{"Events":[],"ResultType":"GitHubEvent"},"Tooling":{"Events":[{"Id":"7439234583","Type":"IssuesEvent","CreatedAt":"2018-03-27T05:23:09","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Closed issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7438189808","Type":"IssuesEvent","CreatedAt":"2018-03-26T23:00:08","Actor":"dvdobrovolskiy","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1069","RelatedDescription":"Opened issue \"EntityFramework migrations not available to be applied during publish\" (#1069) at aspnet/Tooling","RelatedBody":"Workaround does not work for me. Apply migration missing in any case. after rebuilt, reload, restart etc"},{"Id":"7416019717","Type":"IssuesEvent","CreatedAt":"2018-03-21T22:57:29","Actor":"snebjorn","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/823","RelatedDescription":"Closed issue \"Make tooling support splitting asp.net and bootstrapping in different projects (onion architecture)\" (#823) at aspnet/Tooling","RelatedBody":"I'd like to see better tooling support for a more onion architecture like solution structure.\n\nFor instance\n- Solution\n  - Core (business logic, domain model, etc)\n  - Infrastructure.EntityFramework (DAL)\n  - Presentation.ASPNET (MVC or WebApi)\n  - Bootstrapper (Program.cs and Startup.cs)\n\nSo basically I just moved Program.cs and Startup.cs to another project. This is important because according to the onion architecture Presentation.ASPNET should not have references to Entity Framework.\n\nIf I do this today I loose the \"IIS Express\" run button and I cannot publish via wed deploy in the way I'm used to. Plus a ton of other issues.\n\nWould be sweet if there was better support for this setup :)\n"},{"Id":"7381313128","Type":"IssuesEvent","CreatedAt":"2018-03-14T22:19:23","Actor":"AngelosP","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/240","RelatedDescription":"Closed issue \"Support debugging of JS executed with EdgeJS in VS\" (#240) at aspnet/Tooling","RelatedBody":"We would like to do the server side HTML rendering with ReactJS in our ASP.NET application. This works with EdgeJS, but there is currently no way to debug the JS code in VS. \n\nIt would be nice if this would work and we wouldn't need node-inspector for this.\n\nhttps://github.com/tjanczuk/edge/issues/316\n"},{"Id":"7376247861","Type":"IssuesEvent","CreatedAt":"2018-03-14T05:33:19","Actor":"barrytang","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Closed issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"},{"Id":"7372052889","Type":"IssuesEvent","CreatedAt":"2018-03-13T13:46:08","Actor":"TheConservativeCoder","Repository":"aspnet/Tooling","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Tooling/issues/1068","RelatedDescription":"Opened issue \"Switch between Razor Page View and Code Behind\" (#1068) at aspnet/Tooling","RelatedBody":"In the old web forms you were able to quickly switch between the ASPX file and the code behind using F7/Shift F7 or going View->Code or View->Designer. It would be useful if this was possible with Razor Pages in aspnet core projects?\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"7390961156","Type":"IssuesEvent","CreatedAt":"2018-03-16T14:09:54","Actor":"natemcmaster","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Closed issue \"Model binding accesses read-only properties in post-back\" (#297) at aspnet/Announcements","RelatedBody":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355."},{"Id":"7390872316","Type":"IssuesEvent","CreatedAt":"2018-03-16T13:54:05","Actor":"mnmr","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/297","RelatedDescription":"Opened issue \"Model binding accesses read-only properties in post-back\" (#297) at aspnet/Announcements","RelatedBody":"I have a simple edit model, which contains a few computed/read-only properties. When posting to a controller method, the model validation engine accesses these properties, causing an exception.\r\n\r\nHowever, it does not make sense to access or attempt to validate a read-only property.\r\n\r\nAdditionally, all properties are marked with [BindNever], which seems to have no effect on this behavior.\r\n\r\nThe controller method takes a single parameter (the edit model) decorated with [FromForm].\r\n\r\nUsing 2.1.0-preview2-30355."}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"983838325457829890","CreatedAt":"2018-04-10T22:45:10+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":20,"FavoriteCount":6,"RawContent":null},{"Id":"983802600398049285","CreatedAt":"2018-04-10T20:23:12+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup today at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2 https://t.co/441EI8rRQL","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":10,"RawContent":null},{"Id":"981890668095332353","CreatedAt":"2018-04-05T13:45:52+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz live stream today to learn more about getting started with #ASP.NET Core. https://t.co/mkwxUOObrd","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":15,"FavoriteCount":7,"RawContent":null},{"Id":"981214732198674433","CreatedAt":"2018-04-03T16:59:56+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\n#ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/Tukk2JSsvC","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":42,"FavoriteCount":16,"RawContent":null},{"Id":"981205689891803136","CreatedAt":"2018-04-03T16:24:01+00:00","UserScreenname":"aspnet","Text":"Join our @csharpfritz for some #ASP.NET Core coding today, and ask questions during his live coding stream at 12:30… https://t.co/PCKhYbjIMP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":18,"FavoriteCount":9,"RawContent":null},{"Id":"980945681794809856","CreatedAt":"2018-04-02T23:10:50+00:00","UserScreenname":"aspnet","Text":"Tuesday at 10 Pacific / 18 GMT - #ASPNET Community Standup\n\nBlazor Update with @danroth27 and @stevensanderson… https://t.co/lCnzHFb8x9","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":99,"FavoriteCount":56,"RawContent":null},{"Id":"979863409561812993","CreatedAt":"2018-03-30T23:30:16+00:00","UserScreenname":"aspnet","Text":"We just released some minor bug fixes to jquery-ajax-unobtrusive and jquery-validation-unobtrusive:… https://t.co/9P5vskn1i8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":26,"FavoriteCount":13,"RawContent":null},{"Id":"978766397814710272","CreatedAt":"2018-03-27T22:51:08+00:00","UserScreenname":"aspnet","Text":"We're live on the #ASPNET Community Standup! Join us! https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":7,"RawContent":null},{"Id":"978605317293576193","CreatedAt":"2018-03-27T12:11:03+00:00","UserScreenname":"aspnet","Text":"This will be a fun show that you won't want to miss if you're starting to lean #ASP.NET Core.  Jeff and Shayne are… https://t.co/MdzhQjXGY3","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":47,"FavoriteCount":12,"RawContent":null},{"Id":"978387927041323008","CreatedAt":"2018-03-26T21:47:14+00:00","UserScreenname":"aspnet","Text":"Join us for the weekly #ASPNET Community Standup this Tuesday at 3:45 PM Pacific / 23:45 GMT at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":9,"FavoriteCount":10,"RawContent":null},{"Id":"976910278083432449","CreatedAt":"2018-03-22T19:55:35+00:00","UserScreenname":"aspnet","Text":"Get started building .NET web apps in the browser with Blazor https://t.co/NLDaIe6hpY","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":159,"FavoriteCount":100,"RawContent":null},{"Id":"976141395114082304","CreatedAt":"2018-03-20T17:00:19+00:00","UserScreenname":"aspnet","Text":"Starting now!\n\nThe #ASPNET Community Standup with @sshirhatti showing #aspnetcore 2.1 Improvements for IIS Hosting.\n\nhttps://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":21,"FavoriteCount":10,"RawContent":null},{"Id":"975923268740833280","CreatedAt":"2018-03-20T02:33:33+00:00","UserScreenname":"aspnet","Text":"This week's #ASPNET Community Standup is on Tuesday at 10 AM  Pacific / 1800 GMT. @sshirhatti will be showing… https://t.co/qlOERhEOaw","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":14,"RawContent":null},{"Id":"974312682647162880","CreatedAt":"2018-03-15T15:53:40+00:00","UserScreenname":"aspnet","Text":"Watch @csharpfritz and @shanselman in this recorded video from today's LiveStream about converting an application t… https://t.co/6QP4SCXJ3S","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":19,"FavoriteCount":4,"RawContent":null},{"Id":"974274384792866817","CreatedAt":"2018-03-15T13:21:29+00:00","UserScreenname":"aspnet","Text":"Tune in to @csharpfritz and @shanselman talking through an #ASP.NET upgrade at 10am ET / 7am PT / 14:00 UTC! https://t.co/vJe8zHT12j","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":3,"FavoriteCount":3,"RawContent":null},{"Id":"973691520728510464","CreatedAt":"2018-03-13T22:45:23+00:00","UserScreenname":"aspnet","Text":"Starting now... join us for the weekly #ASPNET Community Standup at https://t.co/4Ioo9jNSN2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":10,"FavoriteCount":12,"RawContent":null}]}},"RunOn":"2018-04-13T05:30:10.0219435Z","RunDurationInMilliseconds":8747}